; ModuleID = 'build/96b_argonkey/blinky/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.gpio_driver_data }
%struct.gpio_driver_data = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.gpio_driver_data }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.gpio_driver_data, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.gpio_driver_data, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.gpio_driver_data, %struct.gpio_driver_data }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.gpio_driver_data*, %struct.gpio_driver_data* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228615 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228595 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228585 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228685 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228675 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228665 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228655 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228645 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228635 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228625 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230472 to i8*), void (i8*)* inttoptr (i32 134228605 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [37 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.gpio_driver_data { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), %struct.gpio_driver_data { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %struct.gpio_driver_data { i32 285933602 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.25 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !613
@.str.26 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !574
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !557
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !530
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !546
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !576
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !590
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !592
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !594
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !596
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !598
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !600
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !602
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !604
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !606
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !608
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !618
@.str.28 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !645
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !740
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !729
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !781
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !638
@.str.39 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !847
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1129
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1099
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1085
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1027
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !636
@.str.1.40 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1131
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1103
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1101
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1041
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !634
@.str.2 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1144
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1107
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1105
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1050
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !632
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1146
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1111
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1109
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1059
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !630
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1148
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1115
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1113
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1065
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !628
@.str.5 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1150
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1119
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1117
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1071
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !626
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1152
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1123
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1121
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1077
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !624
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1154
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1127
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1125
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1083
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !640
@.str.48 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1156
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1351
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1312
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1353
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1303
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1305
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1314
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1322
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1345
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1348
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !713
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1375
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1484
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1486
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1482
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1453
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1488
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1025
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.40, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1039
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1048
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1057
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1063
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1069
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1075
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1081
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1578
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1619
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1622
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1629
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1636
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1846
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1855
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1862
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1867
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.98 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.101, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.102, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.103, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.104, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.105, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.99, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.106, i32 0, i32 0)], align 4, !dbg !1893
@.str.100 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.101 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.102 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.103 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.104 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.105 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.99 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.106 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2005
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2018
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2126
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2129
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2131
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1860
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1857
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2133
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2169
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1724
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2167
@.str.161 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2841 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2845, !srcloc !2846
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2847, !srcloc !2848
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2849, !srcloc !2850
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2851, !srcloc !2852
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2853, !srcloc !2854
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2855, !srcloc !2856
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2857, !srcloc !2858
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2859, !srcloc !2860
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2861, !srcloc !2862
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2863, !srcloc !2864
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2865, !srcloc !2866
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2867, !srcloc !2868
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2869, !srcloc !2870
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2871, !srcloc !2872
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2873, !srcloc !2874
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2875, !srcloc !2876
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2877, !srcloc !2878
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2879, !srcloc !2880
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2881, !srcloc !2882
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2883, !srcloc !2884
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2885, !srcloc !2886
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2887, !srcloc !2888
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2889, !srcloc !2890
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2891, !srcloc !2892
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2893, !srcloc !2894
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2895, !srcloc !2896
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2897, !srcloc !2898
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2899, !srcloc !2902
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2903, !srcloc !2904
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2905, !srcloc !2906
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2907, !srcloc !2908
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2909, !srcloc !2910
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2927, !srcloc !2928
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2929, !srcloc !2930
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2931, !srcloc !2932
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2933, !srcloc !2934
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2935, !srcloc !2936
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2937, !srcloc !2938
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2939, !srcloc !2940
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2941, !srcloc !2942
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2943, !srcloc !2944
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2945, !srcloc !2946
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2947, !srcloc !2948
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2949, !srcloc !2950
  ret void, !dbg !2951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2954 {
  %1 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !2957
  br i1 %1, label %2, label %11, !dbg !2959

2:                                                ; preds = %0
  %3 = tail call fastcc i32 @gpio_pin_configure_dt() #24, !dbg !2960
  call void @llvm.dbg.value(metadata i32 %3, metadata !2956, metadata !DIExpression()), !dbg !2961
  %4 = icmp slt i32 %3, 0, !dbg !2962
  br i1 %4, label %11, label %5, !dbg !2964

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @gpio_pin_toggle_dt() #24, !dbg !2965
  call void @llvm.dbg.value(metadata i32 %6, metadata !2956, metadata !DIExpression()), !dbg !2961
  %7 = icmp slt i32 %6, 0, !dbg !2967
  br i1 %7, label %11, label %8, !dbg !2969

8:                                                ; preds = %5, %8
  tail call fastcc void @k_msleep() #24, !dbg !2970
  %9 = tail call fastcc i32 @gpio_pin_toggle_dt() #24, !dbg !2965
  call void @llvm.dbg.value(metadata i32 %9, metadata !2956, metadata !DIExpression()), !dbg !2961
  %10 = icmp slt i32 %9, 0, !dbg !2967
  br i1 %10, label %11, label %8, !dbg !2969, !llvm.loop !2971

11:                                               ; preds = %8, %5, %2, %0
  ret void, !dbg !2974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !2975 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !2980, metadata !DIExpression()), !dbg !2981
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !2982, !srcloc !2984
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !2985
  ret i1 %1, !dbg !2986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure_dt() unnamed_addr #1 !dbg !2987 {
  call void @llvm.dbg.value(metadata i32 1703936, metadata !2993, metadata !DIExpression()), !dbg !2994
  %1 = tail call fastcc i32 @gpio_pin_configure() #24, !dbg !2995
  ret i32 %1, !dbg !2996
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_toggle_dt() unnamed_addr #1 !dbg !2997 {
  %1 = tail call fastcc i32 @gpio_pin_toggle() #24, !dbg !3002
  ret i32 %1, !dbg !3003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3004 {
  call void @llvm.dbg.value(metadata i32 1000, metadata !3008, metadata !DIExpression()), !dbg !3009
  tail call fastcc void @k_sleep([1 x i64] [i64 10000]) #24, !dbg !3010
  ret void, !dbg !3011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3012 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3021, metadata !DIExpression()), !dbg !3022
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3023, !srcloc !3025
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3026
  ret void, !dbg !3027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_toggle() unnamed_addr #1 !dbg !3028 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !3032, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.value(metadata i8 13, metadata !3033, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.value(metadata i8* undef, metadata !3034, metadata !DIExpression()), !dbg !3036
  %1 = tail call fastcc i32 @gpio_port_toggle_bits() #24, !dbg !3037
  ret i32 %1, !dbg !3038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_toggle_bits() unnamed_addr #1 !dbg !3039 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !3042, metadata !DIExpression()), !dbg !3044
  call void @llvm.dbg.value(metadata i32 8192, metadata !3043, metadata !DIExpression()), !dbg !3044
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3045, !srcloc !3047
  %1 = tail call fastcc i32 @z_impl_gpio_port_toggle_bits() #24, !dbg !3048
  ret i32 %1, !dbg !3049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_toggle_bits() unnamed_addr #1 !dbg !3050 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !3052, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.value(metadata i32 8192, metadata !3053, metadata !DIExpression()), !dbg !3055
  %1 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_22, i32 0, i32 2) to %struct.gpio_driver_api**), align 4, !dbg !3056
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %1, metadata !3054, metadata !DIExpression()), !dbg !3055
  %2 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %1, i32 0, i32 5, !dbg !3057
  %3 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %2, align 4, !dbg !3057
  %4 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_22, i32 noundef 8192) #25, !dbg !3058
  ret i32 %4, !dbg !3059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure() unnamed_addr #1 !dbg !3060 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !3062, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.value(metadata i8 13, metadata !3063, metadata !DIExpression()), !dbg !3065
  call void @llvm.dbg.value(metadata i32 1703936, metadata !3064, metadata !DIExpression()), !dbg !3065
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3066, !srcloc !3068
  %1 = tail call fastcc i32 @z_impl_gpio_pin_configure() #24, !dbg !3069
  ret i32 %1, !dbg !3070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_pin_configure() unnamed_addr #1 !dbg !3071 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !3073, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i8 13, metadata !3074, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 1703936, metadata !3075, metadata !DIExpression()), !dbg !3079
  %1 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_22, i32 0, i32 2) to %struct.gpio_driver_api**), align 4, !dbg !3080
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %1, metadata !3076, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i8* undef, metadata !3077, metadata !DIExpression()), !dbg !3079
  %2 = load %struct.gpio_driver_data*, %struct.gpio_driver_data** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_22, i32 0, i32 4) to %struct.gpio_driver_data**), align 4, !dbg !3081
  call void @llvm.dbg.value(metadata %struct.gpio_driver_data* %2, metadata !3078, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 1703936, metadata !3075, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 655360, metadata !3075, metadata !DIExpression()), !dbg !3079
  %3 = getelementptr inbounds %struct.gpio_driver_data, %struct.gpio_driver_data* %2, i32 0, i32 0, !dbg !3082
  %4 = load i32, i32* %3, align 4, !dbg !3085
  %5 = and i32 %4, -8193, !dbg !3085
  store i32 %5, i32* %3, align 4, !dbg !3085
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %1, i32 0, i32 0, !dbg !3086
  %7 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %6, align 4, !dbg !3086
  %8 = tail call i32 %7(%struct.device* noundef nonnull @__device_dts_ord_22, i8 noundef zeroext 13, i32 noundef 655360) #25, !dbg !3087
  ret i32 %8, !dbg !3088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3089 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_22, metadata !3091, metadata !DIExpression()), !dbg !3092
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_22) #25, !dbg !3093
  ret i1 %1, !dbg !3094
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3097, metadata !DIExpression()), !dbg !3098
  ret i32 0, !dbg !3099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !3100 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3104, metadata !DIExpression()), !dbg !3105
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3106
  ret void, !dbg !3107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !3108 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3111
  ret i8* %1, !dbg !3112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3113 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3125, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i8* %0, metadata !3124, metadata !DIExpression()), !dbg !3136
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3137
  ret void, !dbg !3139
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3144, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.value(metadata i8* %1, metadata !3145, metadata !DIExpression()), !dbg !3146
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3147
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3147
  ret i32 %4, !dbg !3148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3149 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3161, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3158, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i8* %1, metadata !3159, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i8* %2, metadata !3160, metadata !DIExpression()), !dbg !3162
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3163
  ret void, !dbg !3164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3169, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.value(metadata i32 %1, metadata !3170, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.value(metadata i32 0, metadata !3171, metadata !DIExpression()), !dbg !3172
  %3 = icmp eq i32 %1, 0, !dbg !3173
  br i1 %3, label %13, label %4, !dbg !3176

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3171, metadata !DIExpression()), !dbg !3172
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3177
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3179
  %8 = load i8, i8* %7, align 1, !dbg !3179
  %9 = zext i8 %8 to i32, !dbg !3179
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3177
  %11 = add nuw i32 %5, 1, !dbg !3180
  call void @llvm.dbg.value(metadata i32 %11, metadata !3171, metadata !DIExpression()), !dbg !3172
  %12 = icmp eq i32 %11, %1, !dbg !3173
  br i1 %12, label %13, label %4, !dbg !3176, !llvm.loop !3181

13:                                               ; preds = %4, %2
  ret void, !dbg !3183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3184 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3188, metadata !DIExpression()), !dbg !3190
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3191
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3191
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3189, metadata !DIExpression()), !dbg !3192
  call void @llvm.va_start(i8* nonnull %3), !dbg !3193
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3194
  %5 = load i32, i32* %4, align 4, !dbg !3194
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3194
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3194
  call void @llvm.va_end(i8* nonnull %3), !dbg !3195
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3196
  ret void, !dbg !3196
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3197 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3201, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i32 %1, metadata !3202, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i8* %2, metadata !3203, metadata !DIExpression()), !dbg !3206
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3207
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3207
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3204, metadata !DIExpression()), !dbg !3208
  call void @llvm.va_start(i8* nonnull %5), !dbg !3209
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3210
  %7 = load i32, i32* %6, align 4, !dbg !3210
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3210
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3210
  call void @llvm.dbg.value(metadata i32 %9, metadata !3205, metadata !DIExpression()), !dbg !3206
  call void @llvm.va_end(i8* nonnull %5), !dbg !3211
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3212
  ret i32 %9, !dbg !3213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3214 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3221, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %0, metadata !3218, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 %1, metadata !3219, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %2, metadata !3220, metadata !DIExpression()), !dbg !3228
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3229
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3229
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3222, metadata !DIExpression()), !dbg !3230
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3231
  store i8* %0, i8** %7, align 4, !dbg !3231
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3231
  store i32 %1, i32* %8, align 4, !dbg !3231
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3231
  store i32 0, i32* %9, align 4, !dbg !3231
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3232
  %10 = load i32, i32* %9, align 4, !dbg !3233
  %11 = load i32, i32* %8, align 4, !dbg !3235
  %12 = icmp slt i32 %10, %11, !dbg !3236
  br i1 %12, label %13, label %15, !dbg !3237

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3238
  store i8 0, i8* %14, align 1, !dbg !3240
  br label %15, !dbg !3241

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3242
  ret i32 %10, !dbg !3243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3249, metadata !DIExpression()), !dbg !3251
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3250, metadata !DIExpression()), !dbg !3251
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3252
  %4 = load i8*, i8** %3, align 4, !dbg !3252
  %5 = icmp eq i8* %4, null, !dbg !3254
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3255
  br i1 %5, label %12, label %8, !dbg !3256

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3257
  %10 = load i32, i32* %9, align 4, !dbg !3257
  %11 = icmp slt i32 %7, %10, !dbg !3258
  br i1 %11, label %15, label %12, !dbg !3259

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3260
  %14 = add nsw i32 %7, 1, !dbg !3262
  store i32 %14, i32* %13, align 4, !dbg !3262
  br label %25, !dbg !3263

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3264
  %17 = icmp eq i32 %7, %16, !dbg !3266
  br i1 %17, label %18, label %21, !dbg !3267

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3268
  store i32 %19, i32* %6, align 4, !dbg !3268
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3270
  store i8 0, i8* %20, align 1, !dbg !3271
  br label %25, !dbg !3272

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3273
  %23 = add nsw i32 %7, 1, !dbg !3275
  store i32 %23, i32* %6, align 4, !dbg !3275
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3276
  store i8 %22, i8* %24, align 1, !dbg !3277
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3278
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3279 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3289, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i8* %1, metadata !3290, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i8* %2, metadata !3291, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.value(metadata i8* %3, metadata !3292, metadata !DIExpression()), !dbg !3293
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3294
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3295
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3296
  unreachable, !dbg !3297
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3298 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3402
  ret %struct.k_thread* %1, !dbg !3403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3404 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3408, metadata !DIExpression()), !dbg !3409
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3410, !srcloc !3412
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3413
  ret void, !dbg !3414
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3415 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3416, !srcloc !3418
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3419
  ret %struct.k_thread* %1, !dbg !3420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3421 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3434, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3431, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %1, metadata !3432, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %2, metadata !3433, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %4, metadata !3435, metadata !DIExpression()), !dbg !3562
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3563
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3563
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3436, metadata !DIExpression()), !dbg !3564
  call void @llvm.dbg.value(metadata i32 0, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i1 undef, metadata !3442, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3562
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3565

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3565

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3566
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3434, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %30, metadata !3433, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %29, metadata !3440, metadata !DIExpression()), !dbg !3562
  %31 = load i8, i8* %30, align 1, !dbg !3567
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3565

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3567
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3568
  call void @llvm.dbg.value(metadata i8* %34, metadata !3433, metadata !DIExpression()), !dbg !3562
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !3568
  call void @llvm.dbg.value(metadata i32 %35, metadata !3444, metadata !DIExpression()), !dbg !3569
  %36 = icmp slt i32 %35, 0, !dbg !3570
  %37 = add i32 %29, 1, !dbg !3568
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %36, label %365, label %28, !llvm.loop !3572

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3574
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3449, metadata !DIExpression()), !dbg !3575
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3575
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3494, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3497, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8* %30, metadata !3500, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 -1, metadata !3501, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 -1, metadata !3502, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8* null, metadata !3503, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8* %14, metadata !3504, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8 0, metadata !3505, metadata !DIExpression()), !dbg !3576
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !3577
  call void @llvm.dbg.value(metadata i8* %39, metadata !3433, metadata !DIExpression()), !dbg !3562
  %40 = load i24, i24* %15, align 8, !dbg !3578
  %41 = and i24 %40, 256, !dbg !3578
  %42 = icmp eq i24 %41, 0, !dbg !3578
  br i1 %42, label %51, label %43, !dbg !3580

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3581
  call void @llvm.dbg.value(metadata i8* %44, metadata !3434, metadata !DIExpression()), !dbg !3562
  %45 = bitcast i8* %27 to i32*, !dbg !3581
  %46 = load i32, i32* %45, align 4, !dbg !3581
  call void @llvm.dbg.value(metadata i32 %46, metadata !3501, metadata !DIExpression()), !dbg !3576
  %47 = icmp slt i32 %46, 0, !dbg !3583
  br i1 %47, label %48, label %56, !dbg !3585

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3586
  store i24 %49, i24* %15, align 8, !dbg !3586
  %50 = sub nsw i32 0, %46, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %50, metadata !3501, metadata !DIExpression()), !dbg !3576
  br label %56, !dbg !3589

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3590
  %53 = icmp eq i24 %52, 0, !dbg !3590
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3592
  br label %56, !dbg !3592

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3593
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3576
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3434, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %58, metadata !3501, metadata !DIExpression()), !dbg !3576
  %60 = and i24 %57, 1024, !dbg !3593
  %61 = icmp eq i24 %60, 0, !dbg !3593
  br i1 %61, label %69, label %62, !dbg !3594

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3595
  call void @llvm.dbg.value(metadata i8* %63, metadata !3434, metadata !DIExpression()), !dbg !3562
  %64 = bitcast i8* %59 to i32*, !dbg !3595
  %65 = load i32, i32* %64, align 4, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %65, metadata !3506, metadata !DIExpression()), !dbg !3596
  %66 = icmp slt i32 %65, 0, !dbg !3597
  br i1 %66, label %67, label %74, !dbg !3599

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3600
  store i24 %68, i24* %15, align 8, !dbg !3600
  br label %74, !dbg !3602

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3603
  %71 = icmp eq i24 %70, 0, !dbg !3603
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3605
  br label %74, !dbg !3605

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3606
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3576
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3576
  call void @llvm.dbg.value(metadata i8* %77, metadata !3434, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %76, metadata !3502, metadata !DIExpression()), !dbg !3576
  store i32 0, i32* %16, align 4, !dbg !3607
  store i32 0, i32* %17, align 8, !dbg !3608
  %78 = lshr i24 %75, 16, !dbg !3606
  call void @llvm.dbg.value(metadata i24 %78, metadata !3509, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3576
  %79 = lshr i24 %75, 11, !dbg !3609
  %80 = and i24 %79, 15, !dbg !3609
  %81 = zext i24 %80 to i32, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %81, metadata !3510, metadata !DIExpression()), !dbg !3576
  %82 = trunc i24 %78 to i3, !dbg !3610
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3610

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3611

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3614
  call void @llvm.dbg.value(metadata i8* %85, metadata !3434, metadata !DIExpression()), !dbg !3562
  %86 = bitcast i8* %77 to i32*, !dbg !3614
  %87 = load i32, i32* %86, align 4, !dbg !3614
  %88 = sext i32 %87 to i64, !dbg !3614
  store i64 %88, i64* %20, align 8, !dbg !3616
  br label %115, !dbg !3617

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3618
  call void @llvm.dbg.value(metadata i8* %90, metadata !3434, metadata !DIExpression()), !dbg !3562
  %91 = bitcast i8* %77 to i32*, !dbg !3618
  %92 = load i32, i32* %91, align 4, !dbg !3618
  %93 = sext i32 %92 to i64, !dbg !3618
  store i64 %93, i64* %20, align 8, !dbg !3621
  br label %115, !dbg !3622

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3623
  %96 = add i32 %95, 7, !dbg !3623
  %97 = and i32 %96, -8, !dbg !3623
  %98 = inttoptr i32 %97 to i8*, !dbg !3623
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3623
  call void @llvm.dbg.value(metadata i8* %99, metadata !3434, metadata !DIExpression()), !dbg !3562
  %100 = inttoptr i32 %97 to i64*, !dbg !3623
  %101 = load i64, i64* %100, align 8, !dbg !3623
  store i64 %101, i64* %20, align 8, !dbg !3624
  br label %115, !dbg !3625

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3626
  %104 = add i32 %103, 7, !dbg !3626
  %105 = and i32 %104, -8, !dbg !3626
  %106 = inttoptr i32 %105 to i8*, !dbg !3626
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3626
  call void @llvm.dbg.value(metadata i8* %107, metadata !3434, metadata !DIExpression()), !dbg !3562
  %108 = inttoptr i32 %105 to i64*, !dbg !3626
  %109 = load i64, i64* %108, align 8, !dbg !3626
  store i64 %109, i64* %20, align 8, !dbg !3627
  br label %115, !dbg !3628

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3629
  call void @llvm.dbg.value(metadata i8* %111, metadata !3434, metadata !DIExpression()), !dbg !3562
  %112 = bitcast i8* %77 to i32*, !dbg !3629
  %113 = load i32, i32* %112, align 4, !dbg !3629
  %114 = sext i32 %113 to i64, !dbg !3630
  store i64 %114, i64* %20, align 8, !dbg !3631
  br label %115, !dbg !3632

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3633
  call void @llvm.dbg.value(metadata i8* %117, metadata !3434, metadata !DIExpression()), !dbg !3562
  %118 = trunc i24 %79 to i4, !dbg !3634
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3634

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3635
  %121 = ashr exact i64 %120, 56, !dbg !3635
  store i64 %121, i64* %20, align 8, !dbg !3638
  br label %177, !dbg !3639

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3640
  %124 = ashr exact i64 %123, 48, !dbg !3640
  store i64 %124, i64* %20, align 8, !dbg !3643
  br label %177, !dbg !3644

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3645

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3648
  call void @llvm.dbg.value(metadata i8* %127, metadata !3434, metadata !DIExpression()), !dbg !3562
  %128 = bitcast i8* %77 to i32*, !dbg !3648
  %129 = load i32, i32* %128, align 4, !dbg !3648
  %130 = zext i32 %129 to i64, !dbg !3648
  store i64 %130, i64* %20, align 8, !dbg !3650
  br label %157, !dbg !3651

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3652
  call void @llvm.dbg.value(metadata i8* %132, metadata !3434, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %132, metadata !3434, metadata !DIExpression()), !dbg !3562
  %133 = bitcast i8* %77 to i32*, !dbg !3652
  %134 = load i32, i32* %133, align 4, !dbg !3652
  %135 = zext i32 %134 to i64, !dbg !3652
  store i64 %135, i64* %20, align 8, !dbg !3652
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3654
  %138 = add i32 %137, 7, !dbg !3654
  %139 = and i32 %138, -8, !dbg !3654
  %140 = inttoptr i32 %139 to i8*, !dbg !3654
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3654
  call void @llvm.dbg.value(metadata i8* %141, metadata !3434, metadata !DIExpression()), !dbg !3562
  %142 = inttoptr i32 %139 to i64*, !dbg !3654
  %143 = load i64, i64* %142, align 8, !dbg !3654
  store i64 %143, i64* %20, align 8, !dbg !3655
  br label %157, !dbg !3656

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3657
  %146 = add i32 %145, 7, !dbg !3657
  %147 = and i32 %146, -8, !dbg !3657
  %148 = inttoptr i32 %147 to i8*, !dbg !3657
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3657
  call void @llvm.dbg.value(metadata i8* %149, metadata !3434, metadata !DIExpression()), !dbg !3562
  %150 = inttoptr i32 %147 to i64*, !dbg !3657
  %151 = load i64, i64* %150, align 8, !dbg !3657
  store i64 %151, i64* %20, align 8, !dbg !3658
  br label %157, !dbg !3659

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3660
  call void @llvm.dbg.value(metadata i8* %153, metadata !3434, metadata !DIExpression()), !dbg !3562
  %154 = bitcast i8* %77 to i32*, !dbg !3660
  %155 = load i32, i32* %154, align 4, !dbg !3660
  %156 = zext i32 %155 to i64, !dbg !3661
  store i64 %156, i64* %20, align 8, !dbg !3662
  br label %157, !dbg !3663

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3664
  call void @llvm.dbg.value(metadata i8* %159, metadata !3434, metadata !DIExpression()), !dbg !3562
  %160 = trunc i24 %79 to i4, !dbg !3665
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3665

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3666
  store i64 %162, i64* %20, align 8, !dbg !3669
  br label %177, !dbg !3670

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3671
  store i64 %164, i64* %20, align 8, !dbg !3674
  br label %177, !dbg !3675

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3676
  %167 = add i32 %166, 7, !dbg !3676
  %168 = and i32 %167, -8, !dbg !3676
  %169 = inttoptr i32 %168 to i8*, !dbg !3676
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3676
  call void @llvm.dbg.value(metadata i8* %170, metadata !3434, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %170, metadata !3434, metadata !DIExpression()), !dbg !3562
  %171 = inttoptr i32 %168 to double*, !dbg !3676
  %172 = load double, double* %171, align 8, !dbg !3676
  store double %172, double* %19, align 8, !dbg !3676
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3680
  call void @llvm.dbg.value(metadata i8* %174, metadata !3434, metadata !DIExpression()), !dbg !3562
  %175 = bitcast i8* %77 to i8**, !dbg !3680
  %176 = load i8*, i8** %175, align 4, !dbg !3680
  store i8* %176, i8** %18, align 8, !dbg !3683
  br label %177, !dbg !3684

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3576
  call void @llvm.dbg.value(metadata i8* %178, metadata !3434, metadata !DIExpression()), !dbg !3562
  %179 = and i24 %75, 3, !dbg !3685
  %180 = icmp eq i24 %179, 0, !dbg !3685
  br i1 %180, label %185, label %181, !dbg !3685

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !3686
  call void @llvm.dbg.value(metadata i32 %182, metadata !3511, metadata !DIExpression()), !dbg !3687
  %183 = icmp slt i32 %182, 0, !dbg !3688
  %184 = add i32 %182, %29, !dbg !3686
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3690
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3691

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %188, metadata !3515, metadata !DIExpression()), !dbg !3693
  %189 = icmp slt i32 %188, 0, !dbg !3694
  %190 = add i32 %29, 1, !dbg !3692
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3696
  call void @llvm.dbg.value(metadata i8* %192, metadata !3503, metadata !DIExpression()), !dbg !3576
  %193 = icmp sgt i32 %76, -1, !dbg !3697
  br i1 %193, label %194, label %196, !dbg !3699

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !3700
  call void @llvm.dbg.value(metadata i32 %195, metadata !3518, metadata !DIExpression()), !dbg !3702
  br label %241, !dbg !3703

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !3704
  call void @llvm.dbg.value(metadata i32 %197, metadata !3518, metadata !DIExpression()), !dbg !3702
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3503, metadata !DIExpression()), !dbg !3576
  %199 = load i64, i64* %20, align 8, !dbg !3706
  %200 = trunc i64 %199 to i8, !dbg !3707
  store i8 %200, i8* %10, align 1, !dbg !3708
  call void @llvm.dbg.value(metadata i8* %23, metadata !3504, metadata !DIExpression()), !dbg !3576
  br label %245, !dbg !3709

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3710
  %203 = icmp eq i24 %202, 0, !dbg !3710
  %204 = trunc i24 %75 to i8, !dbg !3712
  %205 = shl i8 %204, 1, !dbg !3712
  %206 = and i8 %205, 32, !dbg !3712
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3712
  call void @llvm.dbg.value(metadata i8 %207, metadata !3505, metadata !DIExpression()), !dbg !3576
  %208 = load i64, i64* %20, align 8, !dbg !3713
  call void @llvm.dbg.value(metadata i64 %208, metadata !3441, metadata !DIExpression()), !dbg !3562
  %209 = icmp slt i64 %208, 0, !dbg !3714
  br i1 %209, label %210, label %212, !dbg !3716

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3505, metadata !DIExpression()), !dbg !3576
  %211 = sub nsw i64 0, %208, !dbg !3717
  store i64 %211, i64* %20, align 8, !dbg !3719
  br label %212, !dbg !3720

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3576
  call void @llvm.dbg.value(metadata i8 %213, metadata !3505, metadata !DIExpression()), !dbg !3576
  %214 = load i64, i64* %20, align 8, !dbg !3721
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3722
  call void @llvm.dbg.value(metadata i8* %215, metadata !3503, metadata !DIExpression()), !dbg !3576
  br label %216, !dbg !3723

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3724
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3725
  call void @llvm.dbg.value(metadata i8* %218, metadata !3503, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8 %217, metadata !3505, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.label(metadata !3561), !dbg !3726
  %219 = icmp sgt i32 %76, -1, !dbg !3727
  br i1 %219, label %222, label %220, !dbg !3728

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3729
  br label %245, !dbg !3728

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3731
  %224 = sub i32 %22, %223, !dbg !3731
  call void @llvm.dbg.value(metadata i32 %224, metadata !3520, metadata !DIExpression()), !dbg !3732
  %225 = load i24, i24* %15, align 8, !dbg !3733
  %226 = and i24 %225, -65, !dbg !3733
  store i24 %226, i24* %15, align 8, !dbg !3733
  %227 = icmp ugt i32 %76, %224, !dbg !3734
  br i1 %227, label %228, label %245, !dbg !3736

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3737
  store i32 %229, i32* %16, align 4, !dbg !3739
  br label %245, !dbg !3740

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3741
  %232 = icmp eq i8* %231, null, !dbg !3743
  br i1 %232, label %245, label %233, !dbg !3744

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3745
  %235 = zext i32 %234 to i64, !dbg !3745
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3747
  call void @llvm.dbg.value(metadata i8* %236, metadata !3503, metadata !DIExpression()), !dbg !3576
  %237 = load i24, i24* %15, align 8, !dbg !3748
  %238 = or i24 %237, 1048576, !dbg !3748
  store i24 %238, i24* %15, align 8, !dbg !3748
  store i8 120, i8* %21, align 1, !dbg !3749
  br label %216, !dbg !3750

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3751
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !3754
  br label %363, !dbg !3755

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3756
  call void @llvm.dbg.value(metadata i32 %242, metadata !3518, metadata !DIExpression()), !dbg !3702
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3757
  call void @llvm.dbg.value(metadata i32 -1, metadata !3502, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %29, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %192, metadata !3503, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8* %243, metadata !3504, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8 0, metadata !3505, metadata !DIExpression()), !dbg !3576
  %244 = icmp eq i8* %192, null, !dbg !3758
  br i1 %244, label %363, label %245, !dbg !3760, !llvm.loop !3572

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3729
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3576
  call void @llvm.dbg.value(metadata i32 0, metadata !3524, metadata !DIExpression()), !dbg !3576
  %250 = zext i8 %249 to i32, !dbg !3761
  %251 = icmp eq i8 %249, 0, !dbg !3763
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  call void @llvm.dbg.value(metadata i32 undef, metadata !3523, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  call void @llvm.dbg.value(metadata i32 undef, metadata !3523, metadata !DIExpression()), !dbg !3576
  %252 = icmp sgt i32 %58, 0, !dbg !3764
  br i1 %252, label %253, label %302, !dbg !3765

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3729
  %255 = icmp eq i24 %254, 0, !dbg !3729
  %256 = ptrtoint i8* %248 to i32, !dbg !3766
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  %257 = ptrtoint i8* %247 to i32, !dbg !3766
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  %258 = xor i1 %251, true, !dbg !3767
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  %259 = sext i1 %258 to i32, !dbg !3767
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  %260 = lshr i24 %246, 19, !dbg !3768
  %261 = and i24 %260, 1, !dbg !3768
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3768
  %263 = zext i24 %262 to i32, !dbg !3768
  %264 = add i32 %257, %259, !dbg !3768
  %265 = add i32 %256, %263, !dbg !3768
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  %266 = and i24 %246, 4194304, !dbg !3769
  %267 = icmp eq i24 %266, 0, !dbg !3769
  %268 = load i32, i32* %16, align 4, !dbg !3771
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3523, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3576
  call void @llvm.dbg.value(metadata i32 undef, metadata !3523, metadata !DIExpression()), !dbg !3576
  %269 = load i32, i32* %17, align 8, !dbg !3772
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3772
  call void @llvm.dbg.value(metadata i32 undef, metadata !3523, metadata !DIExpression()), !dbg !3576
  %271 = add i32 %264, %58, !dbg !3772
  %272 = add i32 %265, %268, !dbg !3772
  %273 = add i32 %272, %270, !dbg !3773
  %274 = sub i32 %271, %273, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %274, metadata !3501, metadata !DIExpression()), !dbg !3576
  %275 = and i24 %246, 4, !dbg !3774
  %276 = icmp eq i24 %275, 0, !dbg !3774
  br i1 %276, label %277, label %302, !dbg !3775

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3525, metadata !DIExpression()), !dbg !3776
  %278 = and i24 %246, 64, !dbg !3777
  %279 = icmp eq i24 %278, 0, !dbg !3777
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3778
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3778
  %282 = select i1 %279, i32 32, i32 48, !dbg !3778
  br i1 %280, label %287, label %283, !dbg !3778

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !3779
  call void @llvm.dbg.value(metadata i32 %284, metadata !3530, metadata !DIExpression()), !dbg !3780
  %285 = icmp slt i32 %284, 0, !dbg !3781
  %286 = add i32 %29, 1, !dbg !3779
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3576
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %290, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8 undef, metadata !3525, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8 %288, metadata !3505, metadata !DIExpression()), !dbg !3576
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3783
  %292 = add i32 %291, -1, !dbg !3783
  br label %293, !dbg !3783

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3784
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %295, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %294, metadata !3501, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i32 %294, metadata !3501, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3576
  %296 = icmp sgt i32 %294, 0, !dbg !3785
  br i1 %296, label %297, label %302, !dbg !3783

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3786
  call void @llvm.dbg.value(metadata i32 %298, metadata !3501, metadata !DIExpression()), !dbg !3576
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %299, metadata !3536, metadata !DIExpression()), !dbg !3788
  %300 = icmp slt i32 %299, 0, !dbg !3789
  %301 = add i32 %295, 1, !dbg !3787
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %300, label %361, label %293, !llvm.loop !3791

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3576
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3576
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %305, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %304, metadata !3501, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8 %303, metadata !3505, metadata !DIExpression()), !dbg !3576
  %306 = icmp eq i8 %303, 0, !dbg !3793
  br i1 %306, label %312, label %307, !dbg !3794

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3795
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %309, metadata !3539, metadata !DIExpression()), !dbg !3797
  %310 = icmp slt i32 %309, 0, !dbg !3798
  %311 = add i32 %305, 1, !dbg !3796
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %313, metadata !3440, metadata !DIExpression()), !dbg !3562
  %314 = lshr i24 %246, 20, !dbg !3800
  %315 = lshr i24 %246, 19, !dbg !3801
  %316 = or i24 %314, %315, !dbg !3802
  %317 = and i24 %316, 1, !dbg !3802
  %318 = icmp eq i24 %317, 0, !dbg !3802
  br i1 %318, label %323, label %319, !dbg !3803

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %320, metadata !3543, metadata !DIExpression()), !dbg !3805
  %321 = icmp slt i32 %320, 0, !dbg !3806
  %322 = add i32 %313, 1, !dbg !3804
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %324, metadata !3440, metadata !DIExpression()), !dbg !3562
  %325 = and i24 %246, 1048576, !dbg !3808
  %326 = icmp eq i24 %325, 0, !dbg !3808
  br i1 %326, label %333, label %327, !dbg !3809

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3810
  %329 = zext i8 %328 to i32, !dbg !3810
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !3810
  call void @llvm.dbg.value(metadata i32 %330, metadata !3549, metadata !DIExpression()), !dbg !3811
  %331 = icmp slt i32 %330, 0, !dbg !3812
  %332 = add i32 %324, 1, !dbg !3810
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %334, metadata !3440, metadata !DIExpression()), !dbg !3562
  %335 = load i32, i32* %16, align 4, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %335, metadata !3524, metadata !DIExpression()), !dbg !3576
  br label %336, !dbg !3815

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3816
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %338, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %337, metadata !3524, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3576
  %339 = icmp sgt i32 %337, 0, !dbg !3817
  br i1 %339, label %340, label %345, !dbg !3815

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %341, metadata !3524, metadata !DIExpression()), !dbg !3576
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3819
  call void @llvm.dbg.value(metadata i32 %342, metadata !3553, metadata !DIExpression()), !dbg !3820
  %343 = icmp slt i32 %342, 0, !dbg !3821
  %344 = add i32 %338, 1, !dbg !3819
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %343, label %361, label %336, !llvm.loop !3823

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %346, metadata !3556, metadata !DIExpression()), !dbg !3826
  %347 = icmp slt i32 %346, 0, !dbg !3827
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %349, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %304, metadata !3501, metadata !DIExpression()), !dbg !3576
  %350 = icmp sgt i32 %304, 0, !dbg !3829
  br i1 %350, label %351, label %363, !dbg !3830

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3830
  %353 = add i32 %352, %338, !dbg !3830
  br label %354, !dbg !3830

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %355, metadata !3501, metadata !DIExpression()), !dbg !3576
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %356, metadata !3558, metadata !DIExpression()), !dbg !3832
  %357 = icmp slt i32 %356, 0, !dbg !3833
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3835
  call void @llvm.dbg.value(metadata i32 undef, metadata !3440, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %359, metadata !3501, metadata !DIExpression()), !dbg !3576
  %360 = icmp sgt i32 %355, 1, !dbg !3829
  br i1 %360, label %354, label %363, !dbg !3830, !llvm.loop !3836

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3573
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3566
  call void @llvm.dbg.value(metadata i32 %364, metadata !3440, metadata !DIExpression()), !dbg !3562
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3573
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3562
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3838
  ret i32 %366, !dbg !3838
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3839 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3843, metadata !DIExpression()), !dbg !3845
  call void @llvm.dbg.value(metadata i8* %1, metadata !3844, metadata !DIExpression()), !dbg !3845
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3846
  store i24 0, i24* %3, align 4, !dbg !3846
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3846
  store i8 0, i8* %4, align 1, !dbg !3846
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3846
  store i32 0, i32* %5, align 4, !dbg !3846
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3846
  store i32 0, i32* %6, align 4, !dbg !3846
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3847
  call void @llvm.dbg.value(metadata i8* %7, metadata !3844, metadata !DIExpression()), !dbg !3845
  %8 = load i8, i8* %7, align 1, !dbg !3848
  %9 = icmp eq i8 %8, 37, !dbg !3850
  br i1 %9, label %10, label %12, !dbg !3851

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3852
  call void @llvm.dbg.value(metadata i8* %11, metadata !3844, metadata !DIExpression()), !dbg !3845
  store i8 37, i8* %4, align 1, !dbg !3854
  br label %18, !dbg !3855

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !3856
  call void @llvm.dbg.value(metadata i8* %13, metadata !3844, metadata !DIExpression()), !dbg !3845
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !3857
  call void @llvm.dbg.value(metadata i8* %14, metadata !3844, metadata !DIExpression()), !dbg !3845
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !3858
  call void @llvm.dbg.value(metadata i8* %15, metadata !3844, metadata !DIExpression()), !dbg !3845
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !3859
  call void @llvm.dbg.value(metadata i8* %16, metadata !3844, metadata !DIExpression()), !dbg !3845
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !3860
  call void @llvm.dbg.value(metadata i8* %17, metadata !3844, metadata !DIExpression()), !dbg !3845
  br label %18, !dbg !3861

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3845
  ret i8* %19, !dbg !3862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3863 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3867, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %1, metadata !3868, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %2, metadata !3869, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %3, metadata !3870, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 0, metadata !3871, metadata !DIExpression()), !dbg !3874
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3875

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3876
  call void @llvm.dbg.value(metadata i32 %9, metadata !3871, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i8* %8, metadata !3869, metadata !DIExpression()), !dbg !3874
  %10 = icmp ult i8* %8, %3, !dbg !3877
  br i1 %10, label %11, label %13, !dbg !3878

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3879
  br label %17, !dbg !3878

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3880

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3881
  %16 = icmp eq i8 %15, 0, !dbg !3880
  br i1 %16, label %24, label %17, !dbg !3875

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3879
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3882
  call void @llvm.dbg.value(metadata i8* %19, metadata !3869, metadata !DIExpression()), !dbg !3874
  %20 = zext i8 %18 to i32, !dbg !3883
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !3884
  call void @llvm.dbg.value(metadata i32 %21, metadata !3872, metadata !DIExpression()), !dbg !3885
  %22 = icmp slt i32 %21, 0, !dbg !3886
  %23 = add i32 %9, 1, !dbg !3888
  call void @llvm.dbg.value(metadata i32 undef, metadata !3871, metadata !DIExpression()), !dbg !3874
  br i1 %22, label %24, label %7, !llvm.loop !3889

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3874
  ret i32 %25, !dbg !3891
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3892 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3896, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3897, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8* %2, metadata !3898, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8* %3, metadata !3899, metadata !DIExpression()), !dbg !3906
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3907
  %6 = load i8, i8* %5, align 1, !dbg !3907
  %7 = zext i8 %6 to i32, !dbg !3908
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !3909
  %9 = icmp eq i32 %8, 0, !dbg !3909
  call void @llvm.dbg.value(metadata i1 %9, metadata !3900, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3906
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %10, metadata !3901, metadata !DIExpression()), !dbg !3906
  %11 = ptrtoint i8* %3 to i32, !dbg !3911
  %12 = ptrtoint i8* %2 to i32, !dbg !3911
  %13 = sub i32 %11, %12, !dbg !3911
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3912
  call void @llvm.dbg.value(metadata i8* %14, metadata !3903, metadata !DIExpression()), !dbg !3906
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3913

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3906
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3896, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8* %18, metadata !3903, metadata !DIExpression()), !dbg !3906
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3914
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3915
  call void @llvm.dbg.value(metadata i32 %25, metadata !3904, metadata !DIExpression()), !dbg !3916
  %26 = icmp ult i32 %25, 10, !dbg !3917
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3918
  %28 = add i32 %27, %25, !dbg !3916
  %29 = trunc i32 %28 to i8, !dbg !3918
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3919
  call void @llvm.dbg.value(metadata i8* %30, metadata !3903, metadata !DIExpression()), !dbg !3906
  store i8 %29, i8* %30, align 1, !dbg !3920
  call void @llvm.dbg.value(metadata i64 %22, metadata !3896, metadata !DIExpression()), !dbg !3906
  %31 = icmp uge i64 %19, %15, !dbg !3921
  %32 = icmp ugt i8* %30, %2, !dbg !3922
  %33 = and i1 %31, %32, !dbg !3922
  br i1 %33, label %17, label %34, !dbg !3923, !llvm.loop !3924

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3926
  %36 = load i24, i24* %35, align 4, !dbg !3926
  %37 = and i24 %36, 32, !dbg !3926
  %38 = icmp eq i24 %37, 0, !dbg !3926
  br i1 %38, label %44, label %39, !dbg !3928

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3929

40:                                               ; preds = %39
  br label %41, !dbg !3931

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3935
  store i24 %43, i24* %35, align 4, !dbg !3935
  br label %44, !dbg !3936

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3936
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !3937 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3943, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.value(metadata i8* %1, metadata !3944, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.value(metadata i32 %2, metadata !3945, metadata !DIExpression()), !dbg !3946
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3947
  %5 = load i24, i24* %4, align 4, !dbg !3947
  %6 = lshr i24 %5, 11, !dbg !3947
  %7 = and i24 %6, 15, !dbg !3947
  %8 = zext i24 %7 to i32, !dbg !3947
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3948

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3949
  store i32 %2, i32* %10, align 4, !dbg !3951
  br label %28, !dbg !3952

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3953
  store i8 %12, i8* %1, align 1, !dbg !3954
  br label %28, !dbg !3955

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3956
  %15 = bitcast i8* %1 to i16*, !dbg !3957
  store i16 %14, i16* %15, align 2, !dbg !3958
  br label %28, !dbg !3959

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3960
  store i32 %2, i32* %17, align 4, !dbg !3961
  br label %28, !dbg !3962

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3963
  %20 = bitcast i8* %1 to i64*, !dbg !3964
  store i64 %19, i64* %20, align 8, !dbg !3965
  br label %28, !dbg !3966

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3967
  %23 = bitcast i8* %1 to i64*, !dbg !3968
  store i64 %22, i64* %23, align 8, !dbg !3969
  br label %28, !dbg !3970

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3971
  store i32 %2, i32* %25, align 4, !dbg !3972
  br label %28, !dbg !3973

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3974
  store i32 %2, i32* %27, align 4, !dbg !3975
  br label %28, !dbg !3976

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3977
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !3978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3981, metadata !DIExpression()), !dbg !3982
  %2 = add i32 %0, -65, !dbg !3983
  %3 = icmp ult i32 %2, 26, !dbg !3984
  %4 = zext i1 %3 to i32, !dbg !3984
  ret i32 %4, !dbg !3985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3986 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3990, metadata !DIExpression()), !dbg !3991
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3992

2:                                                ; preds = %1
  br label %4, !dbg !3993

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3995

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3996
  ret i32 %5, !dbg !3997
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !3998 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4000, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i8* %1, metadata !4001, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i8 1, metadata !4002, metadata !DIExpression()), !dbg !4003
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4004

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4002, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i8* %5, metadata !4001, metadata !DIExpression()), !dbg !4003
  %6 = load i8, i8* %5, align 1, !dbg !4005
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4007

7:                                                ; preds = %4
  br label %11, !dbg !4008

8:                                                ; preds = %4
  br label %11, !dbg !4010

9:                                                ; preds = %4
  br label %11, !dbg !4011

10:                                               ; preds = %4
  br label %11, !dbg !4012

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4013
  %14 = or i24 %13, %12, !dbg !4013
  store i24 %14, i24* %3, align 4, !dbg !4013
  call void @llvm.dbg.value(metadata i8 poison, metadata !4002, metadata !DIExpression()), !dbg !4003
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4001, metadata !DIExpression()), !dbg !4003
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4002, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i8* %15, metadata !4001, metadata !DIExpression()), !dbg !4003
  %17 = load i24, i24* %3, align 4, !dbg !4014
  %18 = and i24 %17, 68, !dbg !4016
  %19 = icmp eq i24 %18, 68, !dbg !4016
  br i1 %19, label %20, label %22, !dbg !4016

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4017
  store i24 %21, i24* %3, align 4, !dbg !4017
  br label %22, !dbg !4019

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4020
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4021 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4023, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i8* %1, metadata !4024, metadata !DIExpression()), !dbg !4027
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4028
  %5 = load i24, i24* %4, align 4, !dbg !4029
  %6 = or i24 %5, 128, !dbg !4029
  store i24 %6, i24* %4, align 4, !dbg !4029
  call void @llvm.dbg.value(metadata i8* %1, metadata !4024, metadata !DIExpression()), !dbg !4027
  %7 = load i8, i8* %1, align 1, !dbg !4030
  %8 = icmp eq i8 %7, 42, !dbg !4032
  br i1 %8, label %9, label %12, !dbg !4033

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4034
  store i24 %10, i24* %4, align 4, !dbg !4034
  call void @llvm.dbg.value(metadata i8* %1, metadata !4024, metadata !DIExpression()), !dbg !4027
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4036
  call void @llvm.dbg.value(metadata i8* %11, metadata !4024, metadata !DIExpression()), !dbg !4027
  store i8* %11, i8** %3, align 4, !dbg !4036
  br label %29, !dbg !4037

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4025, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i8** %3, metadata !4024, metadata !DIExpression(DW_OP_deref)), !dbg !4027
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4038
  call void @llvm.dbg.value(metadata i32 %13, metadata !4026, metadata !DIExpression()), !dbg !4027
  %14 = load i8*, i8** %3, align 4, !dbg !4039
  call void @llvm.dbg.value(metadata i8* %14, metadata !4024, metadata !DIExpression()), !dbg !4027
  %15 = icmp eq i8* %14, %1, !dbg !4041
  br i1 %15, label %29, label %16, !dbg !4042

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4043
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4045
  store i32 %13, i32* %18, align 4, !dbg !4046
  %19 = lshr i32 %13, 31, !dbg !4047
  %20 = lshr i24 %17, 1, !dbg !4048
  %21 = and i24 %20, 1, !dbg !4048
  %22 = zext i24 %21 to i32, !dbg !4048
  %23 = or i32 %19, %22, !dbg !4048
  %24 = trunc i32 %23 to i24, !dbg !4048
  %25 = shl nuw nsw i24 %24, 1, !dbg !4048
  %26 = and i24 %17, -131, !dbg !4048
  %27 = or i24 %26, 128, !dbg !4048
  %28 = or i24 %25, %27, !dbg !4048
  store i24 %28, i24* %4, align 4, !dbg !4048
  br label %29, !dbg !4049

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4027
  ret i8* %30, !dbg !4050
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4051 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4053, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata i8* %1, metadata !4054, metadata !DIExpression()), !dbg !4056
  %4 = load i8, i8* %1, align 1, !dbg !4057
  %5 = icmp eq i8 %4, 46, !dbg !4058
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4059
  %7 = load i24, i24* %6, align 4, !dbg !4060
  %8 = select i1 %5, i24 512, i24 0, !dbg !4060
  %9 = and i24 %7, -513, !dbg !4060
  %10 = or i24 %9, %8, !dbg !4060
  store i24 %10, i24* %6, align 4, !dbg !4060
  br i1 %5, label %11, label %32, !dbg !4061

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4054, metadata !DIExpression()), !dbg !4056
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4062
  call void @llvm.dbg.value(metadata i8* %12, metadata !4054, metadata !DIExpression()), !dbg !4056
  store i8* %12, i8** %3, align 4, !dbg !4062
  %13 = load i8, i8* %12, align 1, !dbg !4063
  %14 = icmp eq i8 %13, 42, !dbg !4065
  br i1 %14, label %15, label %18, !dbg !4066

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4067
  store i24 %16, i24* %6, align 4, !dbg !4067
  call void @llvm.dbg.value(metadata i8* %12, metadata !4054, metadata !DIExpression()), !dbg !4056
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4069
  call void @llvm.dbg.value(metadata i8* %17, metadata !4054, metadata !DIExpression()), !dbg !4056
  store i8* %17, i8** %3, align 4, !dbg !4069
  br label %32, !dbg !4070

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4054, metadata !DIExpression(DW_OP_deref)), !dbg !4056
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %19, metadata !4055, metadata !DIExpression()), !dbg !4056
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4072
  store i32 %19, i32* %20, align 4, !dbg !4073
  %21 = lshr i32 %19, 31, !dbg !4074
  %22 = load i24, i24* %6, align 4, !dbg !4075
  %23 = lshr i24 %22, 1, !dbg !4075
  %24 = and i24 %23, 1, !dbg !4075
  %25 = zext i24 %24 to i32, !dbg !4075
  %26 = or i32 %21, %25, !dbg !4075
  %27 = trunc i32 %26 to i24, !dbg !4075
  %28 = shl nuw nsw i24 %27, 1, !dbg !4075
  %29 = and i24 %22, -3, !dbg !4075
  %30 = or i24 %28, %29, !dbg !4075
  store i24 %30, i24* %6, align 4, !dbg !4075
  %31 = load i8*, i8** %3, align 4, !dbg !4076
  call void @llvm.dbg.value(metadata i8* %31, metadata !4054, metadata !DIExpression()), !dbg !4056
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4056
  ret i8* %33, !dbg !4077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4078 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4080, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i8* %1, metadata !4081, metadata !DIExpression()), !dbg !4082
  %3 = load i8, i8* %1, align 1, !dbg !4083
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4084

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4085
  call void @llvm.dbg.value(metadata i8* %5, metadata !4081, metadata !DIExpression()), !dbg !4082
  %6 = load i8, i8* %5, align 1, !dbg !4088
  %7 = icmp eq i8 %6, 104, !dbg !4089
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4090
  %9 = load i24, i24* %8, align 4, !dbg !4090
  %10 = and i24 %9, -30721, !dbg !4090
  br i1 %7, label %11, label %14, !dbg !4091

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4092
  store i24 %12, i24* %8, align 4, !dbg !4092
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4094
  call void @llvm.dbg.value(metadata i8* %13, metadata !4081, metadata !DIExpression()), !dbg !4082
  br label %56, !dbg !4095

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4096
  store i24 %15, i24* %8, align 4, !dbg !4096
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4098
  call void @llvm.dbg.value(metadata i8* %17, metadata !4081, metadata !DIExpression()), !dbg !4082
  %18 = load i8, i8* %17, align 1, !dbg !4100
  %19 = icmp eq i8 %18, 108, !dbg !4101
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4102
  %21 = load i24, i24* %20, align 4, !dbg !4102
  %22 = and i24 %21, -30721, !dbg !4102
  br i1 %19, label %23, label %26, !dbg !4103

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4104
  store i24 %24, i24* %20, align 4, !dbg !4104
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4106
  call void @llvm.dbg.value(metadata i8* %25, metadata !4081, metadata !DIExpression()), !dbg !4082
  br label %56, !dbg !4107

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4108
  store i24 %27, i24* %20, align 4, !dbg !4108
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4110
  %30 = load i24, i24* %29, align 4, !dbg !4111
  %31 = and i24 %30, -30721, !dbg !4111
  %32 = or i24 %31, 10240, !dbg !4111
  store i24 %32, i24* %29, align 4, !dbg !4111
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4112
  call void @llvm.dbg.value(metadata i8* %33, metadata !4081, metadata !DIExpression()), !dbg !4082
  br label %56, !dbg !4113

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4114
  %36 = load i24, i24* %35, align 4, !dbg !4115
  %37 = and i24 %36, -30721, !dbg !4115
  %38 = or i24 %37, 12288, !dbg !4115
  store i24 %38, i24* %35, align 4, !dbg !4115
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4116
  call void @llvm.dbg.value(metadata i8* %39, metadata !4081, metadata !DIExpression()), !dbg !4082
  br label %56, !dbg !4117

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4118
  %42 = load i24, i24* %41, align 4, !dbg !4119
  %43 = and i24 %42, -30721, !dbg !4119
  %44 = or i24 %43, 14336, !dbg !4119
  store i24 %44, i24* %41, align 4, !dbg !4119
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4120
  call void @llvm.dbg.value(metadata i8* %45, metadata !4081, metadata !DIExpression()), !dbg !4082
  br label %56, !dbg !4121

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4122
  %48 = load i24, i24* %47, align 4, !dbg !4123
  %49 = and i24 %48, -30723, !dbg !4123
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4124
  call void @llvm.dbg.value(metadata i8* %50, metadata !4081, metadata !DIExpression()), !dbg !4082
  %51 = or i24 %49, 16386, !dbg !4125
  store i24 %51, i24* %47, align 4, !dbg !4125
  br label %56, !dbg !4126

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4127
  %54 = load i24, i24* %53, align 4, !dbg !4128
  %55 = and i24 %54, -30721, !dbg !4128
  store i24 %55, i24* %53, align 4, !dbg !4128
  br label %56, !dbg !4129

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4081, metadata !DIExpression()), !dbg !4082
  ret i8* %57, !dbg !4130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4131 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4133, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i8* %1, metadata !4134, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i8 0, metadata !4135, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i8* %1, metadata !4134, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4138
  %3 = load i8, i8* %1, align 1, !dbg !4139
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4140
  store i8 %3, i8* %4, align 1, !dbg !4141
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4142

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4143

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4144
  %9 = load i24, i24* %8, align 4, !dbg !4144
  %10 = and i24 %9, -458753, !dbg !4144
  %11 = or i24 %10, %7, !dbg !4144
  call void @llvm.dbg.label(metadata !4136), !dbg !4145
  %12 = and i24 %9, 30720, !dbg !4146
  %13 = icmp eq i24 %12, 16384, !dbg !4146
  %14 = zext i1 %13 to i24, !dbg !4148
  %15 = or i24 %11, %14, !dbg !4148
  %16 = icmp eq i8 %3, 99, !dbg !4149
  br i1 %16, label %17, label %43, !dbg !4151

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4152
  %19 = icmp ne i24 %18, 0, !dbg !4152
  call void @llvm.dbg.value(metadata i1 %19, metadata !4135, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4138
  br label %43, !dbg !4154

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4155
  %22 = load i24, i24* %21, align 4, !dbg !4156
  %23 = and i24 %22, -458753, !dbg !4156
  %24 = or i24 %23, 262144, !dbg !4156
  call void @llvm.dbg.value(metadata i8 1, metadata !4135, metadata !DIExpression()), !dbg !4138
  br label %43, !dbg !4157

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4160
  %27 = load i24, i24* %26, align 4, !dbg !4161
  %28 = and i24 %27, -458753, !dbg !4161
  %29 = or i24 %28, 196608, !dbg !4161
  %30 = and i24 %27, 30720, !dbg !4162
  %31 = icmp eq i24 %30, 16384, !dbg !4162
  br label %43, !dbg !4164

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4165
  %34 = load i24, i24* %33, align 4, !dbg !4166
  %35 = and i24 %34, -458753, !dbg !4166
  %36 = or i24 %35, 196608, !dbg !4166
  %37 = and i24 %34, 30720, !dbg !4167
  %38 = icmp ne i24 %37, 0, !dbg !4167
  br label %43, !dbg !4169

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4170
  %41 = load i24, i24* %40, align 4, !dbg !4171
  %42 = or i24 %41, 1, !dbg !4171
  br label %43, !dbg !4172

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4173
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4174
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4175
  call void @llvm.dbg.value(metadata i8* %48, metadata !4134, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i8 poison, metadata !4135, metadata !DIExpression()), !dbg !4138
  %49 = lshr i24 %44, 1, !dbg !4173
  %50 = and i24 %49, 1, !dbg !4173
  %51 = zext i24 %50 to i32, !dbg !4173
  %52 = or i32 %51, %47, !dbg !4173
  %53 = trunc i32 %52 to i24, !dbg !4173
  %54 = shl nuw nsw i24 %53, 1, !dbg !4173
  %55 = and i24 %44, -3, !dbg !4173
  %56 = or i24 %54, %55, !dbg !4173
  store i24 %56, i24* %46, align 4, !dbg !4173
  ret i8* %48, !dbg !4176
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4177 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4182, metadata !DIExpression()), !dbg !4185
  %2 = load i8*, i8** %0, align 4, !dbg !4186
  call void @llvm.dbg.value(metadata i8* %2, metadata !4183, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i32 0, metadata !4184, metadata !DIExpression()), !dbg !4185
  %3 = load i8, i8* %2, align 1, !dbg !4187
  %4 = zext i8 %3 to i32, !dbg !4188
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !4189
  %6 = icmp eq i32 %5, 0, !dbg !4190
  br i1 %6, label %19, label %7, !dbg !4190

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4184, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4183, metadata !DIExpression()), !dbg !4185
  %11 = mul i32 %9, 10, !dbg !4191
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4193
  call void @llvm.dbg.value(metadata i8* %12, metadata !4183, metadata !DIExpression()), !dbg !4185
  %13 = add i32 %11, -48, !dbg !4194
  %14 = add i32 %13, %8, !dbg !4195
  call void @llvm.dbg.value(metadata i32 %14, metadata !4184, metadata !DIExpression()), !dbg !4185
  %15 = load i8, i8* %12, align 1, !dbg !4187
  %16 = zext i8 %15 to i32, !dbg !4188
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !4189
  %18 = icmp eq i32 %17, 0, !dbg !4190
  br i1 %18, label %19, label %7, !dbg !4190, !llvm.loop !4196

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4185
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4185
  store i8* %20, i8** %0, align 4, !dbg !4198
  ret i32 %21, !dbg !4199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4202, metadata !DIExpression()), !dbg !4203
  %2 = add i32 %0, -48, !dbg !4204
  %3 = icmp ult i32 %2, 10, !dbg !4205
  %4 = zext i1 %3 to i32, !dbg !4205
  ret i32 %4, !dbg !4206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4207 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4209, !srcloc !4210
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4211, !srcloc !4212
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4213, !srcloc !4214
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4215, !srcloc !4216
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4217, !srcloc !4218
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4219, !srcloc !4220
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4221, !srcloc !4222
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4223, !srcloc !4224
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4225, !srcloc !4226
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4227, !srcloc !4228
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4229, !srcloc !4230
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4231, !srcloc !4232
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4233, !srcloc !4234
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4235, !srcloc !4236
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4237, !srcloc !4238
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4239, !srcloc !4240
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4241, !srcloc !4242
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4243, !srcloc !4244
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4245, !srcloc !4246
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4247, !srcloc !4248
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4249, !srcloc !4250
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4251, !srcloc !4252
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4253, !srcloc !4254
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4255, !srcloc !4256
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4257, !srcloc !4258
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4259, !srcloc !4260
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4261, !srcloc !4262
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4263, !srcloc !4264
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4265, !srcloc !4266
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4267, !srcloc !4268
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4269, !srcloc !4270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4271, !srcloc !4272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4273, !srcloc !4274
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !4275, !srcloc !4276
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !4277, !srcloc !4278
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !4279, !srcloc !4280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !4281, !srcloc !4282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !4283, !srcloc !4284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4285, !srcloc !4286
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4287, !srcloc !4288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4289, !srcloc !4290
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4291, !srcloc !4292
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4293, !srcloc !4294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !4295, !srcloc !4296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4297, !srcloc !4298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4299, !srcloc !4300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4301, !srcloc !4302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4303, !srcloc !4304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4305, !srcloc !4306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4307, !srcloc !4308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4309, !srcloc !4310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4311, !srcloc !4312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4313, !srcloc !4314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !4315, !srcloc !4316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !4317, !srcloc !4318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4319, !srcloc !4320
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4321, !srcloc !4322
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4323, !srcloc !4324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4325, !srcloc !4326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4327, !srcloc !4328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4329, !srcloc !4330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4331, !srcloc !4332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4333, !srcloc !4334
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4335, !srcloc !4336
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4337, !srcloc !4338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4339, !srcloc !4340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4341, !srcloc !4342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4343, !srcloc !4344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4345, !srcloc !4346
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4347, !srcloc !4348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4349, !srcloc !4350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4351, !srcloc !4352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4353, !srcloc !4354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4355, !srcloc !4356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4357, !srcloc !4358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4359, !srcloc !4360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4361, !srcloc !4362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4363, !srcloc !4364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4365, !srcloc !4366
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4367, !srcloc !4368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4369, !srcloc !4370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4371, !srcloc !4372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4373, !srcloc !4374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4375, !srcloc !4376
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4377, !srcloc !4378
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4379, !srcloc !4380
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4381, !srcloc !4382
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4383, !srcloc !4384
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4385, !srcloc !4386
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !4387, !srcloc !4388
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4389, !srcloc !4390
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4391, !srcloc !4392
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4393, !srcloc !4394
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4395, !srcloc !4396
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4397, !srcloc !4398
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !4399, !srcloc !4400
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4401, !srcloc !4402
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4403, !srcloc !4404
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4405, !srcloc !4406
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4407, !srcloc !4408
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4409, !srcloc !4410
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4411, !srcloc !4412
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4413, !srcloc !4414
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4415, !srcloc !4416
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4417, !srcloc !4418
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4419, !srcloc !4420
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4421, !srcloc !4422
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4611, !srcloc !4612
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4613, !srcloc !4614
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !4615, !srcloc !4616
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4617, !srcloc !4618
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4619, !srcloc !4620
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4621, !srcloc !4622
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4623, !srcloc !4624
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4625, !srcloc !4626
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4627, !srcloc !4628
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4629, !srcloc !4630
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4631, !srcloc !4632
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4633, !srcloc !4634
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4635, !srcloc !4636
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4637, !srcloc !4638
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4639, !srcloc !4640
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4641, !srcloc !4642
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4649, !srcloc !4650
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4651, !srcloc !4652
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4653, !srcloc !4654
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4655, !srcloc !4656
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4657, !srcloc !4658
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4659, !srcloc !4660
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4661, !srcloc !4662
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4663, !srcloc !4664
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4665, !srcloc !4666
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4667, !srcloc !4668
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4669, !srcloc !4670
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4671, !srcloc !4672
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4673, !srcloc !4674
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4675, !srcloc !4676
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4677, !srcloc !4678
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4679, !srcloc !4680
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4681, !srcloc !4682
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4683, !srcloc !4684
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4685, !srcloc !4686
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4687, !srcloc !4688
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4689, !srcloc !4690
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4691, !srcloc !4692
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4693, !srcloc !4694
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4695, !srcloc !4696
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4697, !srcloc !4698
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4699, !srcloc !4700
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4701, !srcloc !4702
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4703, !srcloc !4704
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4705, !srcloc !4706
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4707, !srcloc !4708
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4709, !srcloc !4710
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4711, !srcloc !4712
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4713, !srcloc !4714
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4715, !srcloc !4716
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4717, !srcloc !4718
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4719, !srcloc !4720
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4721, !srcloc !4722
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4723, !srcloc !4724
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4725, !srcloc !4726
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4727, !srcloc !4728
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4729, !srcloc !4730
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4731, !srcloc !4732
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4733, !srcloc !4734
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4735, !srcloc !4736
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4737, !srcloc !4738
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4739, !srcloc !4740
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4741, !srcloc !4742
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4743, !srcloc !4744
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4745, !srcloc !4746
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4747, !srcloc !4748
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4749, !srcloc !4750
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4751, !srcloc !4752
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4753, !srcloc !4754
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4755, !srcloc !4756
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4757, !srcloc !4758
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4759, !srcloc !4760
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4761, !srcloc !4762
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4763, !srcloc !4764
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4765, !srcloc !4766
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4767, !srcloc !4768
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4769, !srcloc !4770
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4771, !srcloc !4772
  ret void, !dbg !4773
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4776, metadata !DIExpression()), !dbg !4778
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !4779
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !4780
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4781, !srcloc !4790
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %3, metadata !4787, metadata !DIExpression()) #23, !dbg !4791
  call void @llvm.dbg.value(metadata i32 undef, metadata !4788, metadata !DIExpression()) #23, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %3, metadata !4777, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.value(metadata i32 %3, metadata !4792, metadata !DIExpression()) #23, !dbg !4797
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4799, !srcloc !4800
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4801
  ret i32 0, !dbg !4802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4803 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4805
  %2 = or i32 %1, 512, !dbg !4805
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4805
  ret void, !dbg !4806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4807 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4808
  %2 = or i32 %1, 1024, !dbg !4808
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4808
  ret void, !dbg !4809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4812, metadata !DIExpression()), !dbg !4813
  ret i32 0, !dbg !4814
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4864, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4865, metadata !DIExpression()), !dbg !4866
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !4867
  ret void, !dbg !4868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4869 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4886, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4887, metadata !DIExpression()), !dbg !4889
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4890
  %4 = load i32, i32* %3, align 4, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %4, metadata !4888, metadata !DIExpression()), !dbg !4889
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !4891
  ret void, !dbg !4892
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4893 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4897, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.value(metadata i8* %0, metadata !4898, metadata !DIExpression()), !dbg !4900
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4901
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4901
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4899, metadata !DIExpression()), !dbg !4902
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4902
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4903
  %5 = bitcast i8* %4 to i32*, !dbg !4903
  %6 = load i32, i32* %5, align 4, !dbg !4903
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4904
  store i32 %6, i32* %7, align 4, !dbg !4905
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !4906
  unreachable, !dbg !4907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4911, metadata !DIExpression()), !dbg !4912
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !4913
  ret void, !dbg !4914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4919, metadata !DIExpression()), !dbg !4920
  %2 = icmp sgt i32 %0, -1, !dbg !4921
  br i1 %2, label %3, label %8, !dbg !4923

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4924, !srcloc !4926
  %4 = and i32 %0, 31, !dbg !4927
  %5 = shl nuw i32 1, %4, !dbg !4928
  %6 = lshr i32 %0, 5, !dbg !4929
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4930
  store volatile i32 %5, i32* %7, align 4, !dbg !4931
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4932, !srcloc !4933
  br label %8, !dbg !4934

8:                                                ; preds = %3, %1
  ret void, !dbg !4935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4938, metadata !DIExpression()), !dbg !4939
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !4940
  ret void, !dbg !4941
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4944, metadata !DIExpression()), !dbg !4945
  %2 = icmp sgt i32 %0, -1, !dbg !4946
  br i1 %2, label %3, label %8, !dbg !4948

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4949
  %5 = shl nuw i32 1, %4, !dbg !4951
  %6 = lshr i32 %0, 5, !dbg !4952
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4953
  store volatile i32 %5, i32* %7, align 4, !dbg !4954
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4955, !srcloc !4959
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4960, !srcloc !4963
  br label %8, !dbg !4964

8:                                                ; preds = %3, %1
  ret void, !dbg !4965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4970, metadata !DIExpression()), !dbg !4971
  %2 = lshr i32 %0, 5, !dbg !4972
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4973
  %4 = load volatile i32, i32* %3, align 4, !dbg !4973
  %5 = and i32 %0, 31, !dbg !4974
  %6 = shl nuw i32 1, %5, !dbg !4974
  %7 = and i32 %4, %6, !dbg !4975
  ret i32 %7, !dbg !4976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4981, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i32 %1, metadata !4982, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i32 %2, metadata !4983, metadata !DIExpression()), !dbg !4984
  %4 = add i32 %1, 1, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %4, metadata !4982, metadata !DIExpression()), !dbg !4984
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !4988
  ret void, !dbg !4989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4994, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32 %1, metadata !4995, metadata !DIExpression()), !dbg !4996
  %3 = trunc i32 %1 to i8, !dbg !4997
  %4 = shl i8 %3, 4, !dbg !4997
  %5 = and i32 %0, 15, !dbg !4999
  %6 = add nsw i32 %5, -4, !dbg !4999
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4999
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4999
  %9 = icmp slt i32 %0, 0, !dbg !4999
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4999
  store volatile i8 %4, i8* %10, align 1, !dbg !4997
  ret void, !dbg !5000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5001 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5003, metadata !DIExpression()), !dbg !5004
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !5005
  ret void, !dbg !5006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5007 {
  tail call void @z_SysNmiOnReset() #25, !dbg !5009
  tail call void @z_arm_int_exit() #25, !dbg !5010
  ret void, !dbg !5011
}

; Function Attrs: optsize
declare !dbg !5012 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5013 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !5015 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !5017
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !5018
  tail call void @z_bss_zero() #25, !dbg !5019
  tail call void @z_data_copy() #25, !dbg !5020
  tail call void @z_arm_interrupt_init() #25, !dbg !5021
  tail call void @z_cstart() #27, !dbg !5022
  unreachable, !dbg !5022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5023 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5024
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5025, !srcloc !5028
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5029, !srcloc !5032
  ret void, !dbg !5033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5034 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5035
  %2 = and i32 %1, -15728641, !dbg !5035
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5035
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5036, !srcloc !5043
  call void @llvm.dbg.value(metadata i32 %3, metadata !5041, metadata !DIExpression()) #23, !dbg !5044
  %4 = and i32 %3, -5, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %4, metadata !5046, metadata !DIExpression()) #23, !dbg !5051
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5053, !srcloc !5054
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5055, !srcloc !5032
  ret void, !dbg !5057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5061, metadata !DIExpression()), !dbg !5062
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5063
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5064
  store i32 %0, i32* %3, align 4, !dbg !5065
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5066
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5067
  store i32 %4, i32* %5, align 4, !dbg !5068
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5069
  %7 = or i32 %6, 268435456, !dbg !5069
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5069
  call void @llvm.dbg.value(metadata i32 0, metadata !5070, metadata !DIExpression()) #23, !dbg !5073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5075, !srcloc !5076
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5077
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5078
  %10 = load i32, i32* %9, align 4, !dbg !5078
  ret i32 %10, !dbg !5079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #3 !dbg !5080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5190, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5191, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8* %2, metadata !5192, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5193, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8* %4, metadata !5194, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8* %5, metadata !5195, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.value(metadata i8* %6, metadata !5196, metadata !DIExpression()), !dbg !5198
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5199
  call void @llvm.dbg.value(metadata i8* %8, metadata !5197, metadata !DIExpression()), !dbg !5198
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5200
  %10 = bitcast i8* %9 to i32*, !dbg !5200
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5201
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5202
  %12 = bitcast i8* %8 to i32*, !dbg !5203
  store i32 %11, i32* %12, align 4, !dbg !5204
  %13 = ptrtoint i8* %4 to i32, !dbg !5205
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5206
  %15 = bitcast i8* %14 to i32*, !dbg !5206
  store i32 %13, i32* %15, align 4, !dbg !5207
  %16 = ptrtoint i8* %5 to i32, !dbg !5208
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5209
  %18 = bitcast i8* %17 to i32*, !dbg !5209
  store i32 %16, i32* %18, align 4, !dbg !5210
  %19 = ptrtoint i8* %6 to i32, !dbg !5211
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5212
  %21 = bitcast i8* %20 to i32*, !dbg !5212
  store i32 %19, i32* %21, align 4, !dbg !5213
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5214
  %23 = bitcast i8* %22 to i32*, !dbg !5214
  store i32 16777216, i32* %23, align 4, !dbg !5215
  %24 = ptrtoint i8* %8 to i32, !dbg !5216
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5217
  store i32 %24, i32* %25, align 8, !dbg !5218
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5219
  store i32 0, i32* %26, align 4, !dbg !5220
  ret void, !dbg !5221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !5222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5227, metadata !DIExpression()), !dbg !5233
  call void @llvm.dbg.value(metadata i32 %1, metadata !5228, metadata !DIExpression()), !dbg !5233
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5234
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5229, metadata !DIExpression()), !dbg !5233
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5235
  br i1 %4, label %19, label %5, !dbg !5237

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5232, metadata !DIExpression()), !dbg !5233
  %6 = icmp eq i32 %0, -22, !dbg !5238
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5238
  %8 = load i32, i32* %7, align 4, !dbg !5238
  br i1 %6, label %16, label %9, !dbg !5240

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5238
  %11 = icmp ule i32 %10, %0, !dbg !5238
  %12 = icmp ugt i32 %8, %0, !dbg !5238
  %13 = and i1 %12, %11, !dbg !5238
  %14 = icmp ugt i32 %8, %1, !dbg !5238
  %15 = and i1 %14, %13, !dbg !5238
  br i1 %15, label %18, label %19, !dbg !5238

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5238
  br i1 %17, label %18, label %19, !dbg !5240

18:                                               ; preds = %9, %16
  br label %19, !dbg !5241

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5233
  ret i32 %20, !dbg !5243
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5244 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5248, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i8* %1, metadata !5249, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5250, metadata !DIExpression()), !dbg !5251
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5252
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !5253
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5254, !srcloc !5255
  unreachable, !dbg !5256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5257 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5275, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i32 %1, metadata !5276, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i32 %2, metadata !5277, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5278, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i32 0, metadata !5279, metadata !DIExpression()), !dbg !5285
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5286
  %9 = and i32 %8, 511, !dbg !5287
  call void @llvm.dbg.value(metadata i32 %9, metadata !5280, metadata !DIExpression()), !dbg !5285
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5288
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5288
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5289
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5289
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5284, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i32 0, metadata !5291, metadata !DIExpression()) #23, !dbg !5294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5296, !srcloc !5297
  call void @llvm.dbg.value(metadata i8* %6, metadata !5282, metadata !DIExpression(DW_OP_deref)), !dbg !5285
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !5298
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5283, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i8* %5, metadata !5281, metadata !DIExpression(DW_OP_deref)), !dbg !5285
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !5299
  call void @llvm.dbg.value(metadata i32 %12, metadata !5279, metadata !DIExpression()), !dbg !5285
  %13 = load i8, i8* %5, align 1, !dbg !5300, !range !5302
  call void @llvm.dbg.value(metadata i8 %13, metadata !5281, metadata !DIExpression()), !dbg !5285
  %14 = icmp eq i8 %13, 0, !dbg !5300
  br i1 %14, label %15, label %32, !dbg !5303

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5304
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !5305
  %18 = load i8, i8* %6, align 1, !dbg !5306, !range !5302
  call void @llvm.dbg.value(metadata i8 %18, metadata !5282, metadata !DIExpression()), !dbg !5285
  %19 = icmp eq i8 %18, 0, !dbg !5306
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5308
  %21 = load i32, i32* %20, align 4, !dbg !5308
  br i1 %19, label %27, label %22, !dbg !5309

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5310
  %24 = icmp eq i32 %23, 0, !dbg !5313
  br i1 %24, label %25, label %31, !dbg !5314

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5315
  br label %29, !dbg !5317

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5318
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5308
  br label %31, !dbg !5320

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !5320
  br label %32, !dbg !5321

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5321
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5321
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5321
  ret void, !dbg !5321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #3 !dbg !5322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5327, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %1, metadata !5328, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i32 %2, metadata !5329, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i8* %3, metadata !5330, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata i8 0, metadata !5331, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5332, metadata !DIExpression()), !dbg !5333
  store i8 0, i8* %3, align 1, !dbg !5334
  %5 = icmp ult i32 %2, -16777216, !dbg !5335
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5337
  br i1 %8, label %16, label %9, !dbg !5337

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5338
  %11 = icmp eq i32 %10, 0, !dbg !5338
  br i1 %11, label %12, label %13, !dbg !5340

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5332, metadata !DIExpression()), !dbg !5333
  store i8 1, i8* %3, align 1, !dbg !5343
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5333
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5332, metadata !DIExpression()), !dbg !5333
  br label %16, !dbg !5346

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5333
  ret %struct.__esf* %17, !dbg !5347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5348 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5352, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i32 %1, metadata !5353, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i8* %2, metadata !5354, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.value(metadata i32 0, metadata !5355, metadata !DIExpression()), !dbg !5356
  store i8 0, i8* %2, align 1, !dbg !5357
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5358

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %5, metadata !5355, metadata !DIExpression()), !dbg !5356
  br label %11, !dbg !5361

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5362
  call void @llvm.dbg.value(metadata i32 %7, metadata !5355, metadata !DIExpression()), !dbg !5356
  br label %11, !dbg !5363

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5364
  call void @llvm.dbg.value(metadata i32 0, metadata !5355, metadata !DIExpression()), !dbg !5356
  br label %11, !dbg !5365

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !5366
  call void @llvm.dbg.value(metadata i32 0, metadata !5355, metadata !DIExpression()), !dbg !5356
  br label %11, !dbg !5367

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !5368
  br label %11, !dbg !5369

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5371 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5375, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i8* %1, metadata !5376, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 0, metadata !5377, metadata !DIExpression()), !dbg !5378
  store i8 0, i8* %1, align 1, !dbg !5379
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5380
  %4 = and i32 %3, 2, !dbg !5382
  %5 = icmp eq i32 %4, 0, !dbg !5383
  br i1 %5, label %6, label %33, !dbg !5384

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5385
  %8 = icmp sgt i32 %7, -1, !dbg !5387
  br i1 %8, label %9, label %33, !dbg !5388

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5389
  %11 = and i32 %10, 1073741824, !dbg !5391
  %12 = icmp eq i32 %11, 0, !dbg !5392
  br i1 %12, label %33, label %13, !dbg !5393

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !5394
  br i1 %14, label %15, label %18, !dbg !5397

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5398
  %17 = load i32, i32* %16, align 4, !dbg !5398
  call void @llvm.dbg.value(metadata i32 %17, metadata !5377, metadata !DIExpression()), !dbg !5378
  br label %33, !dbg !5400

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5401
  %20 = and i32 %19, 255, !dbg !5403
  %21 = icmp eq i32 %20, 0, !dbg !5404
  br i1 %21, label %24, label %22, !dbg !5405

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %23, metadata !5377, metadata !DIExpression()), !dbg !5378
  br label %33, !dbg !5408

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5409
  %26 = and i32 %25, 65280, !dbg !5411
  %27 = icmp eq i32 %26, 0, !dbg !5412
  br i1 %27, label %29, label %28, !dbg !5413

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5414
  call void @llvm.dbg.value(metadata i32 0, metadata !5377, metadata !DIExpression()), !dbg !5378
  br label %33, !dbg !5416

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5417
  %31 = icmp ult i32 %30, 65536, !dbg !5419
  br i1 %31, label %33, label %32, !dbg !5420

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !5421
  call void @llvm.dbg.value(metadata i32 0, metadata !5377, metadata !DIExpression()), !dbg !5378
  br label %33, !dbg !5423

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5378
  call void @llvm.dbg.value(metadata i32 %34, metadata !5377, metadata !DIExpression()), !dbg !5378
  ret i32 %34, !dbg !5424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5425 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5427, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.value(metadata i32 %1, metadata !5428, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.value(metadata i8* %2, metadata !5429, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.value(metadata i32 0, metadata !5430, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.value(metadata i32 -22, metadata !5431, metadata !DIExpression()), !dbg !5440
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5441
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5443
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5445
  %7 = and i32 %6, 2, !dbg !5446
  %8 = icmp eq i32 %7, 0, !dbg !5447
  br i1 %8, label %19, label %9, !dbg !5448

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5449
  call void @llvm.dbg.value(metadata i32 %10, metadata !5432, metadata !DIExpression()), !dbg !5450
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5451
  %12 = and i32 %11, 128, !dbg !5453
  %13 = icmp eq i32 %12, 0, !dbg !5454
  br i1 %13, label %19, label %14, !dbg !5455

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5431, metadata !DIExpression()), !dbg !5440
  %15 = icmp eq i32 %1, 0, !dbg !5456
  br i1 %15, label %19, label %16, !dbg !5459

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5460
  %18 = and i32 %17, -129, !dbg !5460
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5460
  br label %19, !dbg !5462

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5440
  call void @llvm.dbg.value(metadata i32 %20, metadata !5431, metadata !DIExpression()), !dbg !5440
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5463
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5465
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5467
  %24 = and i32 %23, 16, !dbg !5468
  %25 = icmp eq i32 %24, 0, !dbg !5468
  br i1 %25, label %26, label %30, !dbg !5469

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5470
  %28 = and i32 %27, 2, !dbg !5471
  %29 = icmp eq i32 %28, 0, !dbg !5471
  br i1 %29, label %39, label %30, !dbg !5472

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5473
  %32 = and i32 %31, 2048, !dbg !5474
  %33 = icmp eq i32 %32, 0, !dbg !5474
  br i1 %33, label %39, label %34, !dbg !5475

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5476
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !5477
  call void @llvm.dbg.value(metadata i32 %36, metadata !5435, metadata !DIExpression()), !dbg !5478
  %37 = icmp eq i32 %36, 0, !dbg !5479
  br i1 %37, label %39, label %38, !dbg !5481

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5482, metadata !DIExpression()) #23, !dbg !5485
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5488, !srcloc !5489
  call void @llvm.dbg.value(metadata i32 2, metadata !5430, metadata !DIExpression()), !dbg !5440
  br label %39, !dbg !5490

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5440
  call void @llvm.dbg.value(metadata i32 %40, metadata !5430, metadata !DIExpression()), !dbg !5440
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5491
  %42 = and i32 %41, 32, !dbg !5493
  %43 = icmp eq i32 %42, 0, !dbg !5494
  br i1 %43, label %47, label %44, !dbg !5495

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5496
  %46 = and i32 %45, -8193, !dbg !5496
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5496
  br label %47, !dbg !5498

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5499
  %49 = or i32 %48, 255, !dbg !5499
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5499
  store i8 0, i8* %2, align 1, !dbg !5500
  ret i32 %40, !dbg !5501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5502 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5506, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i32 %0, metadata !5507, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i8* %1, metadata !5508, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.value(metadata i32 0, metadata !5509, metadata !DIExpression()), !dbg !5513
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5514
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5516
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5518
  %6 = and i32 %5, 512, !dbg !5519
  %7 = icmp eq i32 %6, 0, !dbg !5519
  br i1 %7, label %18, label %8, !dbg !5520

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5521
  call void @llvm.dbg.value(metadata i32 %9, metadata !5510, metadata !DIExpression()), !dbg !5522
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5523
  %11 = and i32 %10, 32768, !dbg !5525
  %12 = icmp ne i32 %11, 0, !dbg !5526
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5527
  br i1 %14, label %15, label %18, !dbg !5527

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5528
  %17 = and i32 %16, -32769, !dbg !5528
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5528
  br label %18, !dbg !5532

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5533
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5535
  %21 = and i32 %20, 256, !dbg !5537
  %22 = icmp eq i32 %21, 0, !dbg !5538
  br i1 %22, label %23, label %25, !dbg !5539

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5540
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5542
  %27 = or i32 %26, 65280, !dbg !5542
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5542
  store i8 0, i8* %1, align 1, !dbg !5543
  ret void, !dbg !5544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5545 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5551, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.value(metadata i32 0, metadata !5552, metadata !DIExpression()), !dbg !5553
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5554
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5556
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5558
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5560
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5562
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5564
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5566
  %8 = or i32 %7, -65536, !dbg !5566
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5566
  ret void, !dbg !5567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !5568 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5572, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i8* %0, metadata !5573, metadata !DIExpression()), !dbg !5574
  store i8 0, i8* %0, align 1, !dbg !5575
  ret void, !dbg !5576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5577 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5581, metadata !DIExpression()), !dbg !5584
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5585
  %3 = load i32, i32* %2, align 4, !dbg !5585
  %4 = inttoptr i32 %3 to i16*, !dbg !5586
  call void @llvm.dbg.value(metadata i16* %4, metadata !5582, metadata !DIExpression()), !dbg !5584
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5587
  %6 = or i32 %5, 256, !dbg !5587
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5587
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5588, !srcloc !5591
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5592, !srcloc !5595
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5596
  %8 = load i16, i16* %7, align 2, !dbg !5597
  call void @llvm.dbg.value(metadata i16 %8, metadata !5583, metadata !DIExpression()), !dbg !5584
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5598
  %10 = and i32 %9, -257, !dbg !5598
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5598
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5599, !srcloc !5591
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5601, !srcloc !5595
  %11 = icmp eq i16 %8, -8446, !dbg !5603
  ret i1 %11, !dbg !5605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5606 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5607
  %2 = or i32 %1, 16, !dbg !5607
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5607
  ret void, !dbg !5608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5609 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5612, metadata !DIExpression()), !dbg !5613
  br label %1, !dbg !5614

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5612, metadata !DIExpression()), !dbg !5613
  tail call fastcc void @__NVIC_SetPriority.8(i32 noundef %2) #24, !dbg !5616
  %3 = add nuw nsw i32 %2, 1, !dbg !5619
  call void @llvm.dbg.value(metadata i32 %3, metadata !5612, metadata !DIExpression()), !dbg !5613
  %4 = icmp eq i32 %3, 97, !dbg !5620
  br i1 %4, label %5, label %1, !dbg !5614, !llvm.loop !5621

5:                                                ; preds = %1
  ret void, !dbg !5623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.8(i32 noundef %0) unnamed_addr #13 !dbg !5624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5626, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.value(metadata i32 1, metadata !5627, metadata !DIExpression()), !dbg !5628
  %2 = and i32 %0, 15, !dbg !5629
  %3 = add nsw i32 %2, -4, !dbg !5629
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5629
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5629
  %6 = icmp slt i32 %0, 0, !dbg !5629
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5629
  store volatile i8 16, i8* %7, align 1, !dbg !5630
  ret void, !dbg !5632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5633 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5739, metadata !DIExpression()), !dbg !5740
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5741
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5743
  br i1 %3, label %4, label %12, !dbg !5744

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5745, !srcloc !5757
  call void @llvm.dbg.value(metadata i32 %5, metadata !5748, metadata !DIExpression()) #23, !dbg !5758
  %6 = icmp eq i32 %5, 0, !dbg !5759
  br i1 %6, label %12, label %7, !dbg !5760

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5761
  %9 = or i32 %8, 268435456, !dbg !5761
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5761
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5763
  %11 = and i32 %10, -32769, !dbg !5763
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5763
  br label %12, !dbg !5764

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5765
  ret void, !dbg !5766
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5767 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !5768
  ret void, !dbg !5769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !5770
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5771
  %3 = load i32, i32* %2, align 4, !dbg !5771
  %4 = add i32 %3, -64, !dbg !5773
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !5770
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5774
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5775
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5776
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !5770
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !5777
  ret void, !dbg !5778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5779 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5780
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5781, !srcloc !5784
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5785, !srcloc !5788
  ret void, !dbg !5789
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5790 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5791, !srcloc !5794
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5795
  ret void, !dbg !5796
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5797 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5812, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i8 %1, metadata !5813, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %2, metadata !5814, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.value(metadata i32 %3, metadata !5815, metadata !DIExpression()), !dbg !5816
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5817
  ret void, !dbg !5819
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5820 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5825, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i8 %1, metadata !5826, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 undef, metadata !5827, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 undef, metadata !5828, metadata !DIExpression()), !dbg !5830
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5831
  call void @llvm.dbg.value(metadata i8 %3, metadata !5829, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5830
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !5832
  call void @llvm.dbg.value(metadata i32 %4, metadata !5829, metadata !DIExpression()), !dbg !5830
  %5 = trunc i32 %4 to i8, !dbg !5833
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5834
  ret void, !dbg !5835
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5836 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5840, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8 %1, metadata !5841, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i8 %2, metadata !5842, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i1 %3, metadata !5843, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5846
  %5 = zext i8 %2 to i32, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %5, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 0, metadata !5844, metadata !DIExpression()), !dbg !5846
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 0, metadata !5844, metadata !DIExpression()), !dbg !5846
  %7 = icmp eq i8 %1, 0, !dbg !5848
  br i1 %7, label %29, label %8, !dbg !5851

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.value(metadata i32 %10, metadata !5844, metadata !DIExpression()), !dbg !5846
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5852
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5855
  %13 = load i32, i32* %12, align 4, !dbg !5855
  %14 = icmp eq i32 %13, 0, !dbg !5856
  br i1 %14, label %25, label %15, !dbg !5857

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5858

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5860
  %18 = icmp eq i32 %17, 0, !dbg !5860
  br i1 %18, label %29, label %19, !dbg !5861

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5862
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5863
  call void @llvm.dbg.value(metadata i32 %21, metadata !5845, metadata !DIExpression()), !dbg !5846
  %22 = icmp eq i32 %21, -22, !dbg !5864
  br i1 %22, label %29, label %23, !dbg !5866

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %24, metadata !5845, metadata !DIExpression()), !dbg !5846
  br label %25, !dbg !5868

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5846
  call void @llvm.dbg.value(metadata i32 %26, metadata !5845, metadata !DIExpression()), !dbg !5846
  %27 = add nuw nsw i32 %10, 1, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %27, metadata !5844, metadata !DIExpression()), !dbg !5846
  %28 = icmp eq i32 %27, %6, !dbg !5848
  br i1 %28, label %29, label %8, !dbg !5851, !llvm.loop !5870

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5846
  ret i32 %30, !dbg !5872
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5873 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5877, metadata !DIExpression()), !dbg !5879
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5880
  %3 = load i32, i32* %2, align 4, !dbg !5880
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5881, !range !5882
  %5 = icmp ult i32 %4, 2, !dbg !5881
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5883
  br i1 %7, label %8, label %15, !dbg !5883

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5884
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5885
  %11 = load i32, i32* %10, align 4, !dbg !5885
  %12 = and i32 %11, %9, !dbg !5886
  %13 = icmp eq i32 %12, 0, !dbg !5887
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5878, metadata !DIExpression()), !dbg !5879
  ret i32 %16, !dbg !5888
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5889 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5893, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5894, metadata !DIExpression()), !dbg !5896
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5897
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5897
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5895, metadata !DIExpression()), !dbg !5898
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5899
  %6 = load i32, i32* %5, align 4, !dbg !5899
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5900
  store i32 %6, i32* %7, align 4, !dbg !5901
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5902
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5903
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5904
  %11 = load i32, i32* %10, align 4, !dbg !5904
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.gpio_driver_data* noundef nonnull %8, %struct.gpio_driver_data* noundef nonnull %9, i32 noundef %11) #24, !dbg !5905
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !5906
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5907
  ret i32 %12, !dbg !5908
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.gpio_driver_data* nocapture noundef writeonly %0, %struct.gpio_driver_data* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5909 {
  call void @llvm.dbg.value(metadata %struct.gpio_driver_data* %0, metadata !5916, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata %struct.gpio_driver_data* %1, metadata !5917, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata i32 undef, metadata !5918, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.value(metadata i32 %2, metadata !5919, metadata !DIExpression()), !dbg !5920
  %4 = getelementptr inbounds %struct.gpio_driver_data, %struct.gpio_driver_data* %1, i32 0, i32 0, !dbg !5921
  %5 = load i32, i32* %4, align 4, !dbg !5921
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !5922
  %7 = or i32 %6, %5, !dbg !5923
  %8 = getelementptr inbounds %struct.gpio_driver_data, %struct.gpio_driver_data* %0, i32 0, i32 0, !dbg !5924
  store i32 %7, i32* %8, align 4, !dbg !5925
  ret void, !dbg !5926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5927 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5931, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5932, metadata !DIExpression()), !dbg !5933
  %3 = zext i8 %0 to i32, !dbg !5934
  %4 = icmp ugt i8 %0, 7, !dbg !5936
  br i1 %4, label %6, label %5, !dbg !5937

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !5938
  br label %6, !dbg !5939

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5933
  ret i32 %7, !dbg !5940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5945, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5946, metadata !DIExpression()), !dbg !5947
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !5948
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5949
  %4 = load i32, i32* %3, align 4, !dbg !5949
  %5 = and i32 %4, -32, !dbg !5950
  %6 = or i32 %5, %0, !dbg !5951
  %7 = or i32 %6, 16, !dbg !5951
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5952
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5953
  %9 = load i32, i32* %8, align 4, !dbg !5953
  %10 = or i32 %9, 1, !dbg !5954
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5955
  ret void, !dbg !5956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5960, metadata !DIExpression()), !dbg !5961
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5962
  ret void, !dbg !5963
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !5964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5968, metadata !DIExpression()), !dbg !5969
  %2 = icmp ult i32 %0, 33, !dbg !5970
  br i1 %2, label %11, label %3, !dbg !5972

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5973
  br i1 %4, label %11, label %5, !dbg !5975

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5976
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5977, !range !5882
  %8 = mul nsw i32 %7, -2, !dbg !5978
  %9 = add nsw i32 %8, 62, !dbg !5978
  %10 = and i32 %9, 62, !dbg !5979
  br label %11, !dbg !5980

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5969
  ret i32 %12, !dbg !5981
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5982 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5986, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i8 %1, metadata !5987, metadata !DIExpression()), !dbg !5988
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5989
  ret void, !dbg !5991
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5992 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5996, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i8 %1, metadata !5997, metadata !DIExpression()), !dbg !6003
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6004
  call void @llvm.dbg.value(metadata i8 %3, metadata !5998, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6003
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !6005
  call void @llvm.dbg.value(metadata i32 %4, metadata !5998, metadata !DIExpression()), !dbg !6003
  %5 = icmp ne i32 %4, -22, !dbg !6006
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %4, metadata !5999, metadata !DIExpression()), !dbg !6008
  br i1 %7, label %8, label %12, !dbg !6007

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5999, metadata !DIExpression()), !dbg !6008
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !6009
  %10 = add i32 %9, 1, !dbg !6012
  call void @llvm.dbg.value(metadata i32 %10, metadata !5999, metadata !DIExpression()), !dbg !6008
  %11 = icmp eq i32 %10, 8, !dbg !6013
  br i1 %11, label %12, label %8, !dbg !6014, !llvm.loop !6015

12:                                               ; preds = %8, %2
  ret void, !dbg !6017
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !6018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6021, metadata !DIExpression()), !dbg !6022
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6023
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6024
  ret void, !dbg !6025
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6026 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6031
  %2 = icmp ugt i32 %1, 8, !dbg !6033
  br i1 %2, label %14, label %3, !dbg !6034

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !6035
  call void @llvm.dbg.value(metadata i32 0, metadata !6030, metadata !DIExpression()), !dbg !6036
  %4 = icmp eq i32 %1, 0, !dbg !6037
  br i1 %4, label %12, label %5, !dbg !6040

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6040

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6030, metadata !DIExpression()), !dbg !6036
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6041
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !6043
  %10 = add nuw i32 %8, 1, !dbg !6044
  call void @llvm.dbg.value(metadata i32 %10, metadata !6030, metadata !DIExpression()), !dbg !6036
  %11 = icmp eq i32 %10, %1, !dbg !6037
  br i1 %11, label %12, label %7, !dbg !6040, !llvm.loop !6045

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6047
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6048
  tail call void @arm_core_mpu_enable() #24, !dbg !6049
  br label %14, !dbg !6050

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6036
  ret i32 %15, !dbg !6051
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6052 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6059, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i8* %1, metadata !6060, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i8* %0, metadata !6061, metadata !DIExpression()), !dbg !6062
  %3 = load i8, i8* %1, align 1, !dbg !6063
  %4 = icmp eq i8 %3, 0, !dbg !6064
  br i1 %4, label %13, label %5, !dbg !6065

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6059, metadata !DIExpression()), !dbg !6062
  call void @llvm.dbg.value(metadata i8* %8, metadata !6060, metadata !DIExpression()), !dbg !6062
  store i8 %6, i8* %7, align 1, !dbg !6066
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6068
  call void @llvm.dbg.value(metadata i8* %9, metadata !6059, metadata !DIExpression()), !dbg !6062
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6069
  call void @llvm.dbg.value(metadata i8* %10, metadata !6060, metadata !DIExpression()), !dbg !6062
  %11 = load i8, i8* %10, align 1, !dbg !6063
  %12 = icmp eq i8 %11, 0, !dbg !6064
  br i1 %12, label %13, label %5, !dbg !6065, !llvm.loop !6070

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6072
  ret i8* %0, !dbg !6073
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6074 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6078, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8* %1, metadata !6079, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i32 %2, metadata !6080, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8* %0, metadata !6081, metadata !DIExpression()), !dbg !6082
  %4 = icmp eq i32 %2, 0, !dbg !6083
  br i1 %4, label %22, label %5, !dbg !6084

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6078, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i32 %7, metadata !6080, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i8* %8, metadata !6079, metadata !DIExpression()), !dbg !6082
  %9 = load i8, i8* %8, align 1, !dbg !6085
  %10 = icmp eq i8 %9, 0, !dbg !6086
  br i1 %10, label %16, label %11, !dbg !6087

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6088
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6090
  call void @llvm.dbg.value(metadata i8* %12, metadata !6079, metadata !DIExpression()), !dbg !6082
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6091
  call void @llvm.dbg.value(metadata i8* %13, metadata !6078, metadata !DIExpression()), !dbg !6082
  %14 = add i32 %7, -1, !dbg !6092
  call void @llvm.dbg.value(metadata i32 %14, metadata !6080, metadata !DIExpression()), !dbg !6082
  %15 = icmp eq i32 %14, 0, !dbg !6083
  br i1 %15, label %22, label %5, !dbg !6084, !llvm.loop !6093

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6078, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i32 %18, metadata !6080, metadata !DIExpression()), !dbg !6082
  store i8 0, i8* %17, align 1, !dbg !6095
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6097
  call void @llvm.dbg.value(metadata i8* %19, metadata !6078, metadata !DIExpression()), !dbg !6082
  %20 = add i32 %18, -1, !dbg !6098
  call void @llvm.dbg.value(metadata i32 %20, metadata !6080, metadata !DIExpression()), !dbg !6082
  %21 = icmp eq i32 %20, 0, !dbg !6099
  br i1 %21, label %22, label %16, !dbg !6100, !llvm.loop !6101

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6103
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6104 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6108, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 %1, metadata !6109, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.value(metadata i32 %1, metadata !6110, metadata !DIExpression()), !dbg !6111
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6112

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6108, metadata !DIExpression()), !dbg !6111
  %6 = load i8, i8* %5, align 1, !dbg !6113
  %7 = icmp eq i8 %6, %3, !dbg !6114
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6115
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6116
  call void @llvm.dbg.value(metadata i8* %10, metadata !6108, metadata !DIExpression()), !dbg !6111
  br i1 %9, label %11, label %4, !dbg !6115, !llvm.loop !6118

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6120
  ret i8* %12, !dbg !6121
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6122 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6124, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.value(metadata i32 %1, metadata !6125, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.value(metadata i8* null, metadata !6126, metadata !DIExpression()), !dbg !6127
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6128

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6127
  call void @llvm.dbg.value(metadata i8* %6, metadata !6126, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.value(metadata i8* %5, metadata !6124, metadata !DIExpression()), !dbg !6127
  %7 = load i8, i8* %5, align 1, !dbg !6129
  %8 = icmp eq i8 %7, %3, !dbg !6132
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6133
  call void @llvm.dbg.value(metadata i8* %9, metadata !6126, metadata !DIExpression()), !dbg !6127
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6134
  call void @llvm.dbg.value(metadata i8* %10, metadata !6124, metadata !DIExpression()), !dbg !6127
  %11 = icmp eq i8 %7, 0, !dbg !6135
  br i1 %11, label %12, label %4, !dbg !6135, !llvm.loop !6136

12:                                               ; preds = %4
  ret i8* %9, !dbg !6138
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6139 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6143, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 0, metadata !6144, metadata !DIExpression()), !dbg !6145
  %2 = load i8, i8* %0, align 1, !dbg !6146
  %3 = icmp eq i8 %2, 0, !dbg !6147
  br i1 %3, label %11, label %4, !dbg !6148

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6144, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i8* %6, metadata !6143, metadata !DIExpression()), !dbg !6145
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6149
  call void @llvm.dbg.value(metadata i8* %7, metadata !6143, metadata !DIExpression()), !dbg !6145
  %8 = add i32 %5, 1, !dbg !6151
  call void @llvm.dbg.value(metadata i32 %8, metadata !6144, metadata !DIExpression()), !dbg !6145
  %9 = load i8, i8* %7, align 1, !dbg !6146
  %10 = icmp eq i8 %9, 0, !dbg !6147
  br i1 %10, label %11, label %4, !dbg !6148, !llvm.loop !6152

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6145
  ret i32 %12, !dbg !6154
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6159, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i32 %1, metadata !6160, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i32 0, metadata !6161, metadata !DIExpression()), !dbg !6162
  %3 = load i8, i8* %0, align 1, !dbg !6163
  %4 = icmp ne i8 %3, 0, !dbg !6164
  %5 = icmp ne i32 %1, 0, !dbg !6165
  %6 = and i1 %4, %5, !dbg !6165
  br i1 %6, label %7, label %16, !dbg !6166

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6161, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.value(metadata i8* %9, metadata !6159, metadata !DIExpression()), !dbg !6162
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6167
  call void @llvm.dbg.value(metadata i8* %10, metadata !6159, metadata !DIExpression()), !dbg !6162
  %11 = add nuw i32 %8, 1, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %11, metadata !6161, metadata !DIExpression()), !dbg !6162
  %12 = load i8, i8* %10, align 1, !dbg !6163
  %13 = icmp ne i8 %12, 0, !dbg !6164
  %14 = icmp ult i32 %11, %1, !dbg !6165
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6165
  br i1 %15, label %7, label %16, !dbg !6166, !llvm.loop !6170

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6162
  ret i32 %17, !dbg !6172
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6173 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6177, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i8* %1, metadata !6178, metadata !DIExpression()), !dbg !6179
  %3 = load i8, i8* %0, align 1, !dbg !6180
  %4 = load i8, i8* %1, align 1, !dbg !6181
  %5 = icmp ne i8 %3, %4, !dbg !6182
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6183
  br i1 %7, label %18, label %8, !dbg !6183

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.value(metadata i8* %10, metadata !6177, metadata !DIExpression()), !dbg !6179
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6184
  call void @llvm.dbg.value(metadata i8* %11, metadata !6177, metadata !DIExpression()), !dbg !6179
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6186
  call void @llvm.dbg.value(metadata i8* %12, metadata !6178, metadata !DIExpression()), !dbg !6179
  %13 = load i8, i8* %11, align 1, !dbg !6180
  %14 = load i8, i8* %12, align 1, !dbg !6181
  %15 = icmp ne i8 %13, %14, !dbg !6182
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6183
  br i1 %17, label %18, label %8, !dbg !6183, !llvm.loop !6187

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6180
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6181
  %21 = zext i8 %19 to i32, !dbg !6190
  %22 = zext i8 %20 to i32, !dbg !6191
  %23 = sub nsw i32 %21, %22, !dbg !6192
  ret i32 %23, !dbg !6193
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6198, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8* %1, metadata !6199, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %2, metadata !6200, metadata !DIExpression()), !dbg !6201
  %4 = icmp eq i32 %2, 0, !dbg !6202
  br i1 %4, label %23, label %5, !dbg !6202

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6200, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8* %7, metadata !6199, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8* %8, metadata !6198, metadata !DIExpression()), !dbg !6201
  %9 = load i8, i8* %8, align 1, !dbg !6203
  %10 = load i8, i8* %7, align 1, !dbg !6204
  %11 = icmp ne i8 %9, %10, !dbg !6205
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6206
  br i1 %13, label %19, label %14, !dbg !6206

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6207
  call void @llvm.dbg.value(metadata i8* %15, metadata !6198, metadata !DIExpression()), !dbg !6201
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6209
  call void @llvm.dbg.value(metadata i8* %16, metadata !6199, metadata !DIExpression()), !dbg !6201
  %17 = add i32 %6, -1, !dbg !6210
  call void @llvm.dbg.value(metadata i32 %17, metadata !6200, metadata !DIExpression()), !dbg !6201
  %18 = icmp eq i32 %17, 0, !dbg !6202
  br i1 %18, label %23, label %5, !dbg !6202, !llvm.loop !6211

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6214
  %21 = zext i8 %10 to i32, !dbg !6215
  %22 = sub nsw i32 %20, %21, !dbg !6216
  br label %23, !dbg !6217

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6217
  ret i32 %24, !dbg !6218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6224, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata i8* %1, metadata !6225, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata i8** %2, metadata !6226, metadata !DIExpression()), !dbg !6229
  %4 = icmp eq i8* %0, null, !dbg !6230
  br i1 %4, label %5, label %7, !dbg !6230

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6231
  br label %7, !dbg !6230

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6230
  call void @llvm.dbg.value(metadata i8* %8, metadata !6227, metadata !DIExpression()), !dbg !6229
  %9 = load i8, i8* %8, align 1, !dbg !6232
  %10 = icmp eq i8 %9, 0, !dbg !6232
  br i1 %10, label %33, label %11, !dbg !6233

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6227, metadata !DIExpression()), !dbg !6229
  %14 = zext i8 %12 to i32, !dbg !6232
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !6234
  %16 = icmp eq i8* %15, null, !dbg !6233
  br i1 %16, label %21, label %17, !dbg !6235

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %18, metadata !6227, metadata !DIExpression()), !dbg !6229
  %19 = load i8, i8* %18, align 1, !dbg !6232
  %20 = icmp eq i8 %19, 0, !dbg !6232
  br i1 %20, label %33, label %11, !dbg !6233, !llvm.loop !6238

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6228, metadata !DIExpression()), !dbg !6229
  %24 = zext i8 %22 to i32, !dbg !6240
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !6241
  %26 = icmp eq i8* %25, null, !dbg !6242
  br i1 %26, label %27, label %31, !dbg !6243

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6244
  call void @llvm.dbg.value(metadata i8* %28, metadata !6228, metadata !DIExpression()), !dbg !6229
  %29 = load i8, i8* %28, align 1, !dbg !6240
  %30 = icmp eq i8 %29, 0, !dbg !6240
  br i1 %30, label %33, label %21, !dbg !6246, !llvm.loop !6247

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6249
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6252
  br label %33, !dbg !6253

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6229
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6229
  store i8* %34, i8** %2, align 4, !dbg !6229
  ret i8* %35, !dbg !6254
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6255 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6257, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.value(metadata i8* %1, metadata !6258, metadata !DIExpression()), !dbg !6259
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6260
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6261
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !6262
  ret i8* %0, !dbg !6263
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6266, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %1, metadata !6267, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i32 %2, metadata !6268, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %0, metadata !6269, metadata !DIExpression()), !dbg !6271
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6272
  call void @llvm.dbg.value(metadata i32 %4, metadata !6270, metadata !DIExpression()), !dbg !6271
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6273
  call void @llvm.dbg.value(metadata i8* %5, metadata !6266, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %1, metadata !6267, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i32 %2, metadata !6268, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i32 %2, metadata !6268, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6271
  %6 = icmp eq i32 %2, 0, !dbg !6274
  br i1 %6, label %18, label %7, !dbg !6275

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6276
  call void @llvm.dbg.value(metadata i8* %9, metadata !6266, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %10, metadata !6267, metadata !DIExpression()), !dbg !6271
  %12 = load i8, i8* %10, align 1, !dbg !6277
  %13 = icmp eq i8 %12, 0, !dbg !6278
  br i1 %13, label %18, label %14, !dbg !6279

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6280
  call void @llvm.dbg.value(metadata i8* %15, metadata !6267, metadata !DIExpression()), !dbg !6271
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6282
  call void @llvm.dbg.value(metadata i8* %16, metadata !6266, metadata !DIExpression()), !dbg !6271
  store i8 %12, i8* %9, align 1, !dbg !6283
  call void @llvm.dbg.value(metadata i32 %11, metadata !6268, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i32 %11, metadata !6268, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6271
  %17 = icmp eq i32 %11, 0, !dbg !6274
  br i1 %17, label %18, label %7, !dbg !6275, !llvm.loop !6284

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6271
  store i8 0, i8* %19, align 1, !dbg !6286
  ret i8* %0, !dbg !6287
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6288 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6292, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %1, metadata !6293, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32 %2, metadata !6294, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %0, metadata !6295, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %1, metadata !6296, metadata !DIExpression()), !dbg !6297
  %4 = icmp eq i32 %2, 0, !dbg !6298
  br i1 %4, label %31, label %5, !dbg !6300

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %0, metadata !6295, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32 %2, metadata !6294, metadata !DIExpression()), !dbg !6297
  %6 = add i32 %2, -1, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %6, metadata !6294, metadata !DIExpression()), !dbg !6297
  %7 = icmp eq i32 %6, 0, !dbg !6302
  br i1 %7, label %23, label %8, !dbg !6303

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6304
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6304
  br label %11, !dbg !6304

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i8* %14, metadata !6295, metadata !DIExpression()), !dbg !6297
  %15 = load i8, i8* %14, align 1, !dbg !6305
  %16 = load i8, i8* %13, align 1, !dbg !6306
  %17 = icmp eq i8 %15, %16, !dbg !6307
  br i1 %17, label %18, label %23, !dbg !6304

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6308
  call void @llvm.dbg.value(metadata i8* %19, metadata !6295, metadata !DIExpression()), !dbg !6297
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6310
  call void @llvm.dbg.value(metadata i8* %20, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.value(metadata i32 %12, metadata !6294, metadata !DIExpression()), !dbg !6297
  %21 = add i32 %12, -1, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %21, metadata !6294, metadata !DIExpression()), !dbg !6297
  %22 = icmp eq i32 %21, 0, !dbg !6302
  br i1 %22, label %23, label %11, !dbg !6303, !llvm.loop !6311

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6297
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6297
  %26 = load i8, i8* %24, align 1, !dbg !6313
  %27 = zext i8 %26 to i32, !dbg !6313
  %28 = load i8, i8* %25, align 1, !dbg !6314
  %29 = zext i8 %28 to i32, !dbg !6314
  %30 = sub nsw i32 %27, %29, !dbg !6315
  br label %31, !dbg !6316

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6297
  ret i32 %32, !dbg !6317
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6322, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %1, metadata !6323, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i32 %2, metadata !6324, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %0, metadata !6325, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %1, metadata !6326, metadata !DIExpression()), !dbg !6327
  %4 = ptrtoint i8* %0 to i32, !dbg !6328
  %5 = ptrtoint i8* %1 to i32, !dbg !6328
  %6 = sub i32 %4, %5, !dbg !6328
  %7 = icmp ult i32 %6, %2, !dbg !6330
  br i1 %7, label %10, label %8, !dbg !6331

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6326, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %0, metadata !6325, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i32 %2, metadata !6324, metadata !DIExpression()), !dbg !6327
  %9 = icmp eq i32 %2, 0, !dbg !6332
  br i1 %9, label %26, label %17, !dbg !6334

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6324, metadata !DIExpression()), !dbg !6327
  %12 = add i32 %11, -1, !dbg !6335
  call void @llvm.dbg.value(metadata i32 %12, metadata !6324, metadata !DIExpression()), !dbg !6327
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6338
  %14 = load i8, i8* %13, align 1, !dbg !6338
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6339
  store i8 %14, i8* %15, align 1, !dbg !6340
  %16 = icmp eq i32 %12, 0, !dbg !6341
  br i1 %16, label %26, label %10, !dbg !6342, !llvm.loop !6343

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6326, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %19, metadata !6325, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i32 %20, metadata !6324, metadata !DIExpression()), !dbg !6327
  %21 = load i8, i8* %18, align 1, !dbg !6345
  store i8 %21, i8* %19, align 1, !dbg !6347
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6348
  call void @llvm.dbg.value(metadata i8* %22, metadata !6325, metadata !DIExpression()), !dbg !6327
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6349
  call void @llvm.dbg.value(metadata i8* %23, metadata !6326, metadata !DIExpression()), !dbg !6327
  %24 = add i32 %20, -1, !dbg !6350
  call void @llvm.dbg.value(metadata i32 %24, metadata !6324, metadata !DIExpression()), !dbg !6327
  %25 = icmp eq i32 %24, 0, !dbg !6332
  br i1 %25, label %26, label %17, !dbg !6334, !llvm.loop !6351

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6353
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6354 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6360, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i8* %1, metadata !6361, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i32 %2, metadata !6362, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i8* %0, metadata !6363, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i8* %1, metadata !6364, metadata !DIExpression()), !dbg !6365
  %4 = icmp eq i32 %2, 0, !dbg !6366
  br i1 %4, label %14, label %5, !dbg !6367

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i8* %7, metadata !6363, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i32 %8, metadata !6362, metadata !DIExpression()), !dbg !6365
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6368
  call void @llvm.dbg.value(metadata i8* %9, metadata !6364, metadata !DIExpression()), !dbg !6365
  %10 = load i8, i8* %6, align 1, !dbg !6370
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6371
  call void @llvm.dbg.value(metadata i8* %11, metadata !6363, metadata !DIExpression()), !dbg !6365
  store i8 %10, i8* %7, align 1, !dbg !6372
  %12 = add i32 %8, -1, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %12, metadata !6362, metadata !DIExpression()), !dbg !6365
  %13 = icmp eq i32 %12, 0, !dbg !6366
  br i1 %13, label %14, label %5, !dbg !6367, !llvm.loop !6374

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6376
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6381, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %1, metadata !6382, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %2, metadata !6383, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i8* %0, metadata !6384, metadata !DIExpression()), !dbg !6386
  %4 = trunc i32 %1 to i8, !dbg !6387
  call void @llvm.dbg.value(metadata i8 %4, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %2, metadata !6383, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i8* %0, metadata !6384, metadata !DIExpression()), !dbg !6386
  %5 = icmp eq i32 %2, 0, !dbg !6388
  br i1 %5, label %12, label %6, !dbg !6389

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6383, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i8* %8, metadata !6384, metadata !DIExpression()), !dbg !6386
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6390
  call void @llvm.dbg.value(metadata i8* %9, metadata !6384, metadata !DIExpression()), !dbg !6386
  store i8 %4, i8* %8, align 1, !dbg !6392
  %10 = add i32 %7, -1, !dbg !6393
  call void @llvm.dbg.value(metadata i32 %10, metadata !6383, metadata !DIExpression()), !dbg !6386
  %11 = icmp eq i32 %10, 0, !dbg !6388
  br i1 %11, label %12, label %6, !dbg !6389, !llvm.loop !6394

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6396
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6397 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6401, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i32 %1, metadata !6402, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i32 %2, metadata !6403, metadata !DIExpression()), !dbg !6407
  %4 = icmp eq i32 %2, 0, !dbg !6408
  br i1 %4, label %17, label %5, !dbg !6409

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6410

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6411
  call void @llvm.dbg.value(metadata i8* %9, metadata !6404, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata i32 %8, metadata !6403, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata i8* %9, metadata !6404, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6411
  %10 = load i8, i8* %9, align 1, !dbg !6412
  %11 = icmp eq i8 %10, %6, !dbg !6415
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6416
  call void @llvm.dbg.value(metadata i8* %12, metadata !6404, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata i32 %13, metadata !6403, metadata !DIExpression()), !dbg !6407
  br i1 %15, label %16, label %7, !dbg !6416, !llvm.loop !6417

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6419

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6407
  ret i8* %19, !dbg !6420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !6421 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6423, metadata !DIExpression()), !dbg !6424
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6425
  ret void, !dbg !6426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6429, metadata !DIExpression()), !dbg !6430
  ret i32 -1, !dbg !6431
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6436, metadata !DIExpression()), !dbg !6438
  call void @llvm.dbg.value(metadata i32* %1, metadata !6437, metadata !DIExpression()), !dbg !6438
  %3 = ptrtoint i32* %1 to i32, !dbg !6439
  %4 = and i32 %3, -2, !dbg !6439
  %5 = icmp eq i32 %4, 2, !dbg !6439
  br i1 %5, label %6, label %9, !dbg !6439

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6440
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !6440
  br label %9, !dbg !6441

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6441
  ret i32 %10, !dbg !6442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6445, metadata !DIExpression()), !dbg !6447
  call void @llvm.dbg.value(metadata i32* %1, metadata !6446, metadata !DIExpression()), !dbg !6447
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6448
  ret i32 %3, !dbg !6449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6453, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.value(metadata i32* %1, metadata !6454, metadata !DIExpression()), !dbg !6455
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6456, !srcloc !6458
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6459
  ret i32 %3, !dbg !6460
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6466, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i32* %1, metadata !6467, metadata !DIExpression()), !dbg !6470
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6471
  call void @llvm.dbg.value(metadata i32 %3, metadata !6468, metadata !DIExpression()), !dbg !6470
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !6472
  call void @llvm.dbg.value(metadata i32 %4, metadata !6469, metadata !DIExpression()), !dbg !6470
  %5 = icmp ne i32 %3, %4, !dbg !6473
  %6 = sext i1 %5 to i32, !dbg !6474
  ret i32 %6, !dbg !6475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6476 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6480, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32 %1, metadata !6481, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32 %2, metadata !6482, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i32* %3, metadata !6483, metadata !DIExpression()), !dbg !6484
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6485
  ret i32 %5, !dbg !6486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6487 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6489, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 %1, metadata !6490, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32 %2, metadata !6491, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.value(metadata i32* %3, metadata !6492, metadata !DIExpression()), !dbg !6493
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6494, !srcloc !6496
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6497
  ret i32 %5, !dbg !6498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6499 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6501, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %1, metadata !6502, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %2, metadata !6503, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32* %3, metadata !6504, metadata !DIExpression()), !dbg !6509
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6510
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6512
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6512
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6512
  br i1 %11, label %33, label %12, !dbg !6512

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6509
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6509
  call void @llvm.dbg.value(metadata i8* %14, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %13, metadata !6505, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %1, metadata !6506, metadata !DIExpression()), !dbg !6509
  br label %15, !dbg !6513

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6515
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6509
  call void @llvm.dbg.value(metadata i8* %17, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 %16, metadata !6506, metadata !DIExpression()), !dbg !6509
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6516
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6519
  call void @llvm.dbg.value(metadata i8* %19, metadata !6507, metadata !DIExpression()), !dbg !6509
  %20 = load i8, i8* %17, align 1, !dbg !6520
  %21 = zext i8 %20 to i32, !dbg !6521
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !6516
  %23 = icmp eq i32 %22, -1, !dbg !6522
  br i1 %23, label %30, label %24, !dbg !6523

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6524
  call void @llvm.dbg.value(metadata i32 %25, metadata !6506, metadata !DIExpression()), !dbg !6509
  %26 = icmp eq i32 %25, 0, !dbg !6525
  br i1 %26, label %27, label %15, !dbg !6526, !llvm.loop !6527

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6529
  call void @llvm.dbg.value(metadata i32 %28, metadata !6505, metadata !DIExpression()), !dbg !6509
  %29 = icmp eq i32 %28, 0, !dbg !6530
  br i1 %29, label %30, label %12, !dbg !6531, !llvm.loop !6532

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6509
  call void @llvm.dbg.value(metadata i32 %31, metadata !6505, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.label(metadata !6508), !dbg !6535
  %32 = sub i32 %2, %31, !dbg !6536
  br label %33, !dbg !6537

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6509
  ret i32 %34, !dbg !6538
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6539 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6543, metadata !DIExpression()), !dbg !6544
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6545
  %3 = icmp eq i32 %2, -1, !dbg !6547
  br i1 %3, label %8, label %4, !dbg !6548

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6549
  %6 = icmp eq i32 %5, -1, !dbg !6550
  %7 = sext i1 %6 to i32, !dbg !6549
  br label %8, !dbg !6551

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6544
  ret i32 %9, !dbg !6552
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6555, metadata !DIExpression()), !dbg !6556
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !6557
  ret void, !dbg !6558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6563, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i32 %1, metadata !6564, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6565, metadata !DIExpression()), !dbg !6569
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6570
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6570
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6570
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6566, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i32 %0, metadata !6568, metadata !DIExpression()), !dbg !6569
  %7 = icmp slt i32 %0, %1, !dbg !6571
  br i1 %7, label %8, label %22, !dbg !6574

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6568, metadata !DIExpression()), !dbg !6569
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !6575
  %11 = icmp eq i32 %10, 0, !dbg !6575
  br i1 %11, label %19, label %12, !dbg !6578

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !6579
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6581
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6581
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6583
  br i1 %15, label %19, label %16, !dbg !6584

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6585
  %18 = load i8*, i8** %17, align 4, !dbg !6585
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !6586
  br label %19, !dbg !6587

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6588
  call void @llvm.dbg.value(metadata i32 %20, metadata !6568, metadata !DIExpression()), !dbg !6569
  %21 = icmp eq i32 %20, %1, !dbg !6571
  br i1 %21, label %22, label %8, !dbg !6574, !llvm.loop !6589

22:                                               ; preds = %19, %3
  ret void, !dbg !6591
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6594, metadata !DIExpression()), !dbg !6595
  %2 = shl nuw i32 1, %0, !dbg !6596
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !6599
  ret i32 %3, !dbg !6600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6605, metadata !DIExpression()), !dbg !6606
  %2 = shl nuw i32 1, %0, !dbg !6607
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !6610
  ret void, !dbg !6611
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6615, metadata !DIExpression()), !dbg !6616
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6617
  ret void, !dbg !6618
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6621, metadata !DIExpression()), !dbg !6622
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6623
  %3 = and i32 %2, %0, !dbg !6623
  %4 = icmp eq i32 %3, %0, !dbg !6624
  %5 = zext i1 %4 to i32, !dbg !6624
  ret i32 %5, !dbg !6625
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6626 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6628, metadata !DIExpression()), !dbg !6629
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !6630
  ret void, !dbg !6631
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6632 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6634, metadata !DIExpression()), !dbg !6635
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !6636
  ret void, !dbg !6637
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6640, metadata !DIExpression()), !dbg !6641
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !6642
  ret void, !dbg !6643
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6644 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6646, metadata !DIExpression()), !dbg !6647
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !6648
  ret void, !dbg !6649
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6652, metadata !DIExpression()), !dbg !6653
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !6654
  ret void, !dbg !6655
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6658, metadata !DIExpression()), !dbg !6659
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !6660
  ret void, !dbg !6661
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6664, metadata !DIExpression()), !dbg !6665
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !6666
  ret void, !dbg !6667
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6668 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6670, metadata !DIExpression()), !dbg !6671
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !6672
  ret void, !dbg !6673
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6674 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6676, metadata !DIExpression()), !dbg !6677
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !6678
  ret void, !dbg !6679
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6682, metadata !DIExpression()), !dbg !6683
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !6684
  ret void, !dbg !6685
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6688, metadata !DIExpression()), !dbg !6689
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !6690
  ret i32 0, !dbg !6691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !578 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !582, metadata !DIExpression()), !dbg !6692
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !6693
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !6695
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !6697
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !6699
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !6701
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !6703
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !6705
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !6707
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !6709
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !6711
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !6713
  ret void, !dbg !6715
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6718, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.value(metadata i32 0, metadata !6719, metadata !DIExpression()), !dbg !6720
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6721
  %3 = load i32, i32* %2, align 4, !dbg !6721
  call void @llvm.dbg.value(metadata i32 %3, metadata !6719, metadata !DIExpression()), !dbg !6720
  %4 = shl nuw i32 1, %0, !dbg !6722
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !6723
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !6724
  ret void, !dbg !6725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6728, metadata !DIExpression()), !dbg !6729
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6730
  %3 = or i32 %2, %0, !dbg !6730
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6730
  ret void, !dbg !6731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6734, metadata !DIExpression()), !dbg !6735
  %2 = icmp slt i32 %0, 32, !dbg !6736
  br i1 %2, label %3, label %5, !dbg !6738

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6739
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !6741
  br label %5, !dbg !6742

5:                                                ; preds = %1, %3
  ret void, !dbg !6743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6746, metadata !DIExpression()), !dbg !6747
  %2 = xor i32 %0, -1, !dbg !6748
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6748
  %4 = and i32 %3, %2, !dbg !6748
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6748
  ret void, !dbg !6749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6754, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata i32 %1, metadata !6755, metadata !DIExpression()), !dbg !6756
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6757

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6758
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !6760
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !6761
  br label %11, !dbg !6762

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6763
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !6764
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !6765
  br label %11, !dbg !6766

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6767
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !6768
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !6769
  br label %11, !dbg !6770

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6771
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !6772
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !6773
  br label %11, !dbg !6774

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6778, metadata !DIExpression()), !dbg !6779
  %2 = xor i32 %0, -1, !dbg !6780
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6780
  %4 = and i32 %3, %2, !dbg !6780
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6780
  ret void, !dbg !6781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6784, metadata !DIExpression()), !dbg !6785
  %2 = xor i32 %0, -1, !dbg !6786
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6786
  %4 = and i32 %3, %2, !dbg !6786
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6786
  ret void, !dbg !6787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6790, metadata !DIExpression()), !dbg !6791
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6792
  %3 = or i32 %2, %0, !dbg !6792
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6792
  ret void, !dbg !6793
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6796, metadata !DIExpression()), !dbg !6797
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6798
  %3 = or i32 %2, %0, !dbg !6798
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6798
  ret void, !dbg !6799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6804, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6805, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata i8* %2, metadata !6806, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !6807, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6809, metadata !DIExpression()), !dbg !6810
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6811
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6811
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6813
  br i1 %6, label %7, label %9, !dbg !6814

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6815
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6816
  store i8* %2, i8** %8, align 4, !dbg !6817
  br label %9, !dbg !6818

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6810
  ret i32 %10, !dbg !6819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #3 !dbg !6820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6822, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !6823, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6824, metadata !DIExpression()), !dbg !6825
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6826
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6827
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6828
  store i8* null, i8** %3, align 4, !dbg !6829
  ret void, !dbg !6830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6833, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %1, metadata !6834, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i8* %1, metadata !6835, metadata !DIExpression()), !dbg !6838
  %3 = bitcast i8* %1 to i32*, !dbg !6839
  %4 = load i32, i32* %3, align 4, !dbg !6839
  %5 = add i32 %4, -169, !dbg !6839
  %6 = icmp ult i32 %5, -121, !dbg !6839
  br i1 %6, label %15, label %7, !dbg !6841

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6842
  %9 = inttoptr i32 %8 to i32*, !dbg !6843
  call void @llvm.dbg.value(metadata i32* %9, metadata !6836, metadata !DIExpression()), !dbg !6838
  %10 = load volatile i32, i32* %9, align 4, !dbg !6844
  call void @llvm.dbg.value(metadata i32 %10, metadata !6837, metadata !DIExpression()), !dbg !6838
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6845
  %12 = bitcast i8* %11 to i32*, !dbg !6845
  %13 = load i32, i32* %12, align 4, !dbg !6845
  %14 = or i32 %13, %10, !dbg !6846
  call void @llvm.dbg.value(metadata i32 %14, metadata !6837, metadata !DIExpression()), !dbg !6838
  store volatile i32 %14, i32* %9, align 4, !dbg !6847
  br label %15, !dbg !6848

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6838
  ret i32 %16, !dbg !6849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6850 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6852, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i8* %1, metadata !6853, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i8* %1, metadata !6854, metadata !DIExpression()), !dbg !6857
  %3 = bitcast i8* %1 to i32*, !dbg !6858
  %4 = load i32, i32* %3, align 4, !dbg !6858
  %5 = add i32 %4, -169, !dbg !6858
  %6 = icmp ult i32 %5, -121, !dbg !6858
  br i1 %6, label %16, label %7, !dbg !6860

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6861
  %9 = inttoptr i32 %8 to i32*, !dbg !6862
  call void @llvm.dbg.value(metadata i32* %9, metadata !6855, metadata !DIExpression()), !dbg !6857
  %10 = load volatile i32, i32* %9, align 4, !dbg !6863
  call void @llvm.dbg.value(metadata i32 %10, metadata !6856, metadata !DIExpression()), !dbg !6857
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6864
  %12 = bitcast i8* %11 to i32*, !dbg !6864
  %13 = load i32, i32* %12, align 4, !dbg !6864
  %14 = xor i32 %13, -1, !dbg !6865
  %15 = and i32 %10, %14, !dbg !6866
  call void @llvm.dbg.value(metadata i32 %15, metadata !6856, metadata !DIExpression()), !dbg !6857
  store volatile i32 %15, i32* %9, align 4, !dbg !6867
  br label %16, !dbg !6868

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6857
  ret i32 %17, !dbg !6869
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6872, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %1, metadata !6873, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i32* %2, metadata !6874, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %1, metadata !6875, metadata !DIExpression()), !dbg !6880
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6881
  call void @llvm.dbg.value(metadata i32 %4, metadata !6876, metadata !DIExpression()), !dbg !6880
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #24, !dbg !6882
  call void @llvm.dbg.value(metadata i32 %5, metadata !6877, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i32 %5, metadata !6878, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i32 %4, metadata !6879, metadata !DIExpression()), !dbg !6880
  %6 = bitcast i8* %1 to i32*, !dbg !6883
  %7 = load i32, i32* %6, align 4, !dbg !6883
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !6884

8:                                                ; preds = %3
  br label %18, !dbg !6885

9:                                                ; preds = %3
  br label %18, !dbg !6887

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !6888
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #24, !dbg !6889
  br label %18, !dbg !6890

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !6891
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #24, !dbg !6892
  br label %18, !dbg !6893

16:                                               ; preds = %3
  br label %18, !dbg !6894

17:                                               ; preds = %3
  br label %18, !dbg !6895

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !6896
  br label %20, !dbg !6897

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !6880
  ret i32 %21, !dbg !6897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6900, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i8* %1, metadata !6901, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i8* %2, metadata !6902, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i8* %1, metadata !6903, metadata !DIExpression()), !dbg !6908
  %4 = bitcast i8* %1 to i32*, !dbg !6909
  %5 = load i32, i32* %4, align 4, !dbg !6909
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !6910
  call void @llvm.dbg.value(metadata i32 %6, metadata !6907, metadata !DIExpression()), !dbg !6908
  %7 = icmp slt i32 %6, 0, !dbg !6911
  br i1 %7, label %22, label %8, !dbg !6913

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6903, metadata !DIExpression()), !dbg !6908
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6914
  %10 = bitcast i8* %9 to i32*, !dbg !6914
  %11 = load i32, i32* %10, align 4, !dbg !6914
  %12 = lshr i32 %11, 16, !dbg !6914
  %13 = and i32 %12, 7, !dbg !6914
  %14 = lshr i32 %11, 8, !dbg !6915
  %15 = and i32 %14, 31, !dbg !6915
  %16 = shl i32 %13, %15, !dbg !6916
  call void @llvm.dbg.value(metadata i32 %16, metadata !6906, metadata !DIExpression()), !dbg !6908
  %17 = and i32 %11, 255, !dbg !6917
  %18 = or i32 %17, 1073887232, !dbg !6918
  %19 = inttoptr i32 %18 to i32*, !dbg !6919
  call void @llvm.dbg.value(metadata i32* %19, metadata !6904, metadata !DIExpression()), !dbg !6908
  %20 = load volatile i32, i32* %19, align 4, !dbg !6920
  call void @llvm.dbg.value(metadata i32 %20, metadata !6905, metadata !DIExpression()), !dbg !6908
  %21 = or i32 %16, %20, !dbg !6921
  call void @llvm.dbg.value(metadata i32 %21, metadata !6905, metadata !DIExpression()), !dbg !6908
  store volatile i32 %21, i32* %19, align 4, !dbg !6922
  br label %22, !dbg !6923

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6908
  ret i32 %23, !dbg !6924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6929, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.value(metadata i32 0, metadata !6930, metadata !DIExpression()), !dbg !6931
  %2 = add i32 %0, -1, !dbg !6932
  %3 = icmp ult i32 %2, 6, !dbg !6932
  br i1 %3, label %4, label %7, !dbg !6932

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6932
  %6 = load i32, i32* %5, align 4, !dbg !6932
  call void @llvm.dbg.value(metadata i32 %6, metadata !6930, metadata !DIExpression()), !dbg !6931
  br label %7, !dbg !6933

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6931
  ret i32 %8, !dbg !6934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #12 !dbg !6935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6939, metadata !DIExpression()), !dbg !6941
  call void @llvm.dbg.value(metadata i32 2, metadata !6940, metadata !DIExpression()), !dbg !6941
  %2 = lshr i32 %0, 1, !dbg !6942
  ret i32 %2, !dbg !6943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6948, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i32 8, metadata !6949, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i32 84, metadata !6950, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.value(metadata i32 %1, metadata !6951, metadata !DIExpression()), !dbg !6952
  %3 = mul i32 %0, 84, !dbg !6953
  %4 = shl nsw i32 %1, 3, !dbg !6954
  %5 = udiv i32 %3, %4, !dbg !6955
  ret i32 %5, !dbg !6956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6957 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6959, metadata !DIExpression()), !dbg !6962
  tail call void @config_enable_default_clocks() #25, !dbg !6963
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !6964
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !6964
  %4 = lshr i32 %3, 4, !dbg !6964
  %5 = and i32 %4, 15, !dbg !6964
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6964
  %7 = load i8, i8* %6, align 1, !dbg !6964
  %8 = zext i8 %7 to i32, !dbg !6964
  %9 = lshr i32 %2, %8, !dbg !6964
  call void @llvm.dbg.value(metadata i32 %9, metadata !6960, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !6961, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6962
  %10 = icmp ult i32 %9, 84000000, !dbg !6965
  br i1 %10, label %11, label %13, !dbg !6967

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !6968
  br label %13, !dbg !6970

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !6971
  tail call fastcc void @set_up_plls() #24, !dbg !6972
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !6973
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !6976
  br label %14, !dbg !6977

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !6978
  %16 = icmp eq i32 %15, 8, !dbg !6979
  br i1 %16, label %17, label %14, !dbg !6977, !llvm.loop !6980

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !6982
  br i1 %18, label %19, label %21, !dbg !6984

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !6985
  br label %21, !dbg !6987

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !6988
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !6989
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !6990
  ret i32 0, !dbg !6991
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !6992 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6994
  %2 = and i32 %1, 240, !dbg !6994
  ret i32 %2, !dbg !6995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !6996 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !6997
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !7002
  br label %1, !dbg !7003

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !7004
  %3 = icmp eq i32 %2, 1, !dbg !7005
  br i1 %3, label %4, label %1, !dbg !7003, !llvm.loop !7006

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !7008
  br label %5, !dbg !7011

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !7012
  %7 = icmp eq i32 %6, 1, !dbg !7013
  br i1 %7, label %8, label %5, !dbg !7011, !llvm.loop !7014

8:                                                ; preds = %5
  ret void, !dbg !7016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7017 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7018
  %2 = icmp eq i32 %1, 8, !dbg !7020
  br i1 %2, label %3, label %4, !dbg !7021

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7022
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !7024
  br label %4, !dbg !7025

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !7026
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7027
  %6 = and i32 %5, -196609, !dbg !7027
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7027
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7028
  %8 = and i32 %7, -251658241, !dbg !7028
  %9 = or i32 %8, 134217728, !dbg !7028
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7028
  tail call void @config_pll_sysclock() #25, !dbg !7029
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !7030
  br label %10, !dbg !7031

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !7032
  %12 = icmp eq i32 %11, 1, !dbg !7033
  br i1 %12, label %13, label %10, !dbg !7031, !llvm.loop !7034

13:                                               ; preds = %10
  ret void, !dbg !7036
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7037 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7039, metadata !DIExpression()), !dbg !7040
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7041
  %2 = and i32 %1, -241, !dbg !7041
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7041
  ret void, !dbg !7042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7045, metadata !DIExpression()), !dbg !7046
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7047
  %3 = and i32 %2, -4, !dbg !7047
  %4 = or i32 %3, %0, !dbg !7047
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7047
  ret void, !dbg !7048
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7049 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7050
  %2 = and i32 %1, 12, !dbg !7050
  ret i32 %2, !dbg !7051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7052 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7054, metadata !DIExpression()), !dbg !7055
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7056
  %2 = and i32 %1, -7169, !dbg !7056
  %3 = or i32 %2, 4096, !dbg !7056
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7058 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !7060, metadata !DIExpression()), !dbg !7061
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7062
  %2 = and i32 %1, -57345, !dbg !7062
  %3 = or i32 %2, 32768, !dbg !7062
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7062
  ret void, !dbg !7063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7064 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7065
  %2 = icmp eq i32 %1, 1, !dbg !7067
  br i1 %2, label %7, label %3, !dbg !7068

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !7069
  br label %4, !dbg !7071

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7072
  %6 = icmp eq i32 %5, 1, !dbg !7073
  br i1 %6, label %7, label %4, !dbg !7071, !llvm.loop !7074

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !7076
  br label %8, !dbg !7077

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7078
  %10 = icmp eq i32 %9, 0, !dbg !7079
  br i1 %10, label %11, label %8, !dbg !7077, !llvm.loop !7080

11:                                               ; preds = %8
  ret void, !dbg !7082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7083 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7084
  %2 = and i32 %1, -16777217, !dbg !7084
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7084
  ret void, !dbg !7085
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7086 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7087
  %2 = or i32 %1, 16777216, !dbg !7087
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7087
  ret void, !dbg !7088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7090
  %2 = lshr i32 %1, 25, !dbg !7091
  %3 = and i32 %2, 1, !dbg !7091
  ret i32 %3, !dbg !7092
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7093 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7094
  %2 = lshr i32 %1, 1, !dbg !7095
  %3 = and i32 %2, 1, !dbg !7095
  ret i32 %3, !dbg !7096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7097 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7098
  %2 = or i32 %1, 1, !dbg !7098
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7098
  ret void, !dbg !7099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !7100 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7101
  %2 = and i32 %1, -262145, !dbg !7101
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7101
  ret void, !dbg !7102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !7103 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7104
  %2 = or i32 %1, 65536, !dbg !7104
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7104
  ret void, !dbg !7105
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !7106 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7107
  %2 = lshr i32 %1, 17, !dbg !7108
  %3 = and i32 %2, 1, !dbg !7108
  ret i32 %3, !dbg !7109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7110 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7111
  %2 = or i32 %1, 1, !dbg !7111
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7111
  ret void, !dbg !7112
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7113 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7114
  %2 = lshr i32 %1, 1, !dbg !7115
  %3 = and i32 %2, 1, !dbg !7115
  ret i32 %3, !dbg !7116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7117 {
  ret i32 16000000, !dbg !7119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7123 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !7124
  ret void, !dbg !7125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7126 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7130, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i32 8, metadata !7131, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i32 84, metadata !7132, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i32 0, metadata !7133, metadata !DIExpression()), !dbg !7134
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7135
  %2 = and i32 %1, -4227072, !dbg !7135
  %3 = or i32 %2, 4199688, !dbg !7135
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7135
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7136
  %5 = and i32 %4, -196609, !dbg !7136
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7136
  ret void, !dbg !7137
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7138 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !7139
  ret void, !dbg !7140
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7141 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7144, metadata !DIExpression()), !dbg !7146
  %2 = bitcast i32* %1 to i8*, !dbg !7147
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7147
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7145, metadata !DIExpression()), !dbg !7148
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7149
  %4 = or i32 %3, 268435456, !dbg !7149
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7149
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7150
  %6 = and i32 %5, 268435456, !dbg !7150
  store volatile i32 %6, i32* %1, align 4, !dbg !7151
  %7 = load volatile i32, i32* %1, align 4, !dbg !7152
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7153
  ret void, !dbg !7153
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7154 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7156, metadata !DIExpression()), !dbg !7157
  %2 = tail call fastcc zeroext i1 @device_is_ready.37() #24, !dbg !7158
  br i1 %2, label %3, label %4, !dbg !7160

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7161
  br label %4, !dbg !7162

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7157
  ret i32 %5, !dbg !7163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.37() unnamed_addr #1 !dbg !7164 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !7168, metadata !DIExpression()), !dbg !7169
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7170, !srcloc !7172
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.38() #24, !dbg !7173
  ret i1 %1, !dbg !7174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7175 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7176
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7177
  ret void, !dbg !7178
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7181, metadata !DIExpression()), !dbg !7182
  %2 = icmp eq i32 %0, 10, !dbg !7183
  br i1 %2, label %3, label %4, !dbg !7185

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7186
  br label %4, !dbg !7188

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7189
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7190
  ret i32 %0, !dbg !7191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7192 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !7195, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i8 %0, metadata !7196, metadata !DIExpression()), !dbg !7197
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7198, !srcloc !7200
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7201
  ret void, !dbg !7202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7203 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !7205, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8 %0, metadata !7206, metadata !DIExpression()), !dbg !7208
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7209
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7207, metadata !DIExpression()), !dbg !7208
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7210
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7210
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !7211
  ret void, !dbg !7212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.38() unnamed_addr #1 !dbg !7213 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !7215, metadata !DIExpression()), !dbg !7216
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !7217
  ret i1 %1, !dbg !7218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7219 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7266, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7267, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7268, metadata !DIExpression()), !dbg !7269
  ret void, !dbg !7270
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7271 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7273, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.value(metadata i8 %1, metadata !7274, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.value(metadata i32 %2, metadata !7275, metadata !DIExpression()), !dbg !7278
  %5 = bitcast i32* %4 to i8*, !dbg !7279
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7279
  call void @llvm.dbg.value(metadata i32* %4, metadata !7277, metadata !DIExpression(DW_OP_deref)), !dbg !7278
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !7280
  call void @llvm.dbg.value(metadata i32 %6, metadata !7276, metadata !DIExpression()), !dbg !7278
  %7 = icmp eq i32 %6, 0, !dbg !7281
  br i1 %7, label %8, label %31, !dbg !7283

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7276, metadata !DIExpression()), !dbg !7278
  %9 = and i32 %2, 131072, !dbg !7284
  %10 = icmp eq i32 %9, 0, !dbg !7286
  br i1 %10, label %28, label %11, !dbg !7287

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7288
  %13 = icmp eq i32 %12, 0, !dbg !7291
  br i1 %13, label %18, label %14, !dbg !7292

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7293
  %16 = shl nuw i32 1, %15, !dbg !7293
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !7295
  br label %25, !dbg !7296

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7297
  %20 = icmp eq i32 %19, 0, !dbg !7299
  %21 = zext i8 %1 to i32, !dbg !7278
  br i1 %20, label %25, label %22, !dbg !7300

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7301
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !7303
  br label %25, !dbg !7304

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7305
  %27 = load i32, i32* %4, align 4, !dbg !7306
  call void @llvm.dbg.value(metadata i32 %30, metadata !7277, metadata !DIExpression()), !dbg !7278
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !7307
  br label %31, !dbg !7308

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7305
  %30 = load i32, i32* %4, align 4, !dbg !7306
  call void @llvm.dbg.value(metadata i32 %30, metadata !7277, metadata !DIExpression()), !dbg !7278
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !7307
  call void @llvm.dbg.value(metadata i32 0, metadata !7276, metadata !DIExpression()), !dbg !7278
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7309
  ret i32 %6, !dbg !7309
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7310 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7314, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i32* %1, metadata !7315, metadata !DIExpression()), !dbg !7319
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7320
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7320
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7320
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7316, metadata !DIExpression()), !dbg !7319
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7321
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7321
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7321
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7318, metadata !DIExpression()), !dbg !7319
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !7322
  store i32 %9, i32* %1, align 4, !dbg !7323
  ret i32 0, !dbg !7324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7325 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7327, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %1, metadata !7328, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %2, metadata !7329, metadata !DIExpression()), !dbg !7333
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7334
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7334
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7334
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7330, metadata !DIExpression()), !dbg !7333
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7335
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7335
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7335
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7331, metadata !DIExpression()), !dbg !7333
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !7336
  call void @llvm.dbg.value(metadata i32 %10, metadata !7332, metadata !DIExpression()), !dbg !7333
  %11 = xor i32 %1, -1, !dbg !7337
  %12 = and i32 %10, %11, !dbg !7338
  %13 = and i32 %2, %1, !dbg !7339
  %14 = or i32 %12, %13, !dbg !7340
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !7341
  ret i32 0, !dbg !7342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7343 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7345, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 %1, metadata !7346, metadata !DIExpression()), !dbg !7349
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7350
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7350
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7350
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7347, metadata !DIExpression()), !dbg !7349
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7351
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7351
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7351
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7348, metadata !DIExpression()), !dbg !7349
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7352
  store volatile i32 %1, i32* %9, align 4, !dbg !7352
  ret i32 0, !dbg !7353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7354 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7356, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 %1, metadata !7357, metadata !DIExpression()), !dbg !7360
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7361
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7361
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7361
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7358, metadata !DIExpression()), !dbg !7360
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7362
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7362
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7362
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7359, metadata !DIExpression()), !dbg !7360
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !7363
  ret i32 0, !dbg !7364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7367, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 %1, metadata !7368, metadata !DIExpression()), !dbg !7371
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7372
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7372
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7372
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7369, metadata !DIExpression()), !dbg !7371
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7373
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7373
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7373
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7370, metadata !DIExpression()), !dbg !7371
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7374
  %10 = load volatile i32, i32* %9, align 4, !dbg !7374
  %11 = xor i32 %10, %1, !dbg !7374
  store volatile i32 %11, i32* %9, align 4, !dbg !7374
  ret i32 0, !dbg !7375
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7378, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i8 %1, metadata !7379, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i32 %2, metadata !7380, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i32 %3, metadata !7381, metadata !DIExpression()), !dbg !7388
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7389
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7389
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7389
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7382, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i8* undef, metadata !7383, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i32 0, metadata !7385, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i32 0, metadata !7386, metadata !DIExpression()), !dbg !7388
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7390

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7391
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !7395
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7396
  %12 = load i32, i32* %11, align 4, !dbg !7396
  %13 = icmp eq i32 %10, %12, !dbg !7397
  br i1 %13, label %14, label %29, !dbg !7398

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !7399
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !7401
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !7402
  br label %29, !dbg !7403

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7404
  %17 = load i8*, i8** %16, align 4, !dbg !7404
  call void @llvm.dbg.value(metadata i8* %17, metadata !7383, metadata !DIExpression()), !dbg !7388
  %18 = zext i8 %1 to i32, !dbg !7405
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !7407
  %20 = icmp eq i32 %19, 0, !dbg !7408
  br i1 %20, label %21, label %29, !dbg !7409

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7410
  %23 = load i32, i32* %22, align 4, !dbg !7410
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !7411
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7412

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7385, metadata !DIExpression()), !dbg !7388
  br label %27, !dbg !7413

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7385, metadata !DIExpression()), !dbg !7388
  br label %27, !dbg !7415

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7385, metadata !DIExpression()), !dbg !7388
  br label %27, !dbg !7416

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7388
  call void @llvm.dbg.value(metadata i32 %28, metadata !7385, metadata !DIExpression()), !dbg !7388
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !7417
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !7418
  br label %29, !dbg !7418

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7388
  call void @llvm.dbg.value(metadata i32 %30, metadata !7386, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.label(metadata !7387), !dbg !7419
  ret i32 %30, !dbg !7420
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7421 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7423, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7424, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i1 %2, metadata !7425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7427
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7428
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7428
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7428
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7426, metadata !DIExpression()), !dbg !7427
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7429
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7430
  ret i32 %8, !dbg !7431
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7432 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7438, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7439, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.value(metadata i1 %2, metadata !7440, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7441
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7442
  br i1 %4, label %10, label %5, !dbg !7444

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7445
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7448
  %8 = or i1 %7, %2, !dbg !7449
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7449
  br i1 %2, label %11, label %13, !dbg !7449

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7450

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7451
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7454
  br label %13, !dbg !7455

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7441
  ret i32 %14, !dbg !7456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7457 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7461, metadata !DIExpression()), !dbg !7462
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7463
  %3 = icmp eq %struct._snode* %2, null, !dbg !7463
  ret i1 %3, !dbg !7463
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7464 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7468, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7469, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7470, metadata !DIExpression()), !dbg !7472
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7473
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7470, metadata !DIExpression()), !dbg !7472
  %4 = icmp eq %struct._snode* %3, null, !dbg !7475
  br i1 %4, label %15, label %5, !dbg !7473

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7470, metadata !DIExpression()), !dbg !7472
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7477
  br i1 %6, label %9, label %11, !dbg !7480

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7470, metadata !DIExpression()), !dbg !7472
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7477
  br i1 %8, label %9, label %11, !dbg !7480, !llvm.loop !7481

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7482
  br label %15, !dbg !7482

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7470, metadata !DIExpression()), !dbg !7472
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7475
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7471, metadata !DIExpression()), !dbg !7472
  %14 = icmp eq %struct._snode* %13, null, !dbg !7475
  br i1 %14, label %15, label %7, !dbg !7473, !llvm.loop !7481

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7485 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7489, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7490, metadata !DIExpression()), !dbg !7491
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7492
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7492
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7492
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7493
  %5 = icmp eq %struct._snode* %4, null, !dbg !7493
  br i1 %5, label %6, label %8, !dbg !7492

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7495
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7495
  br label %8, !dbg !7495

8:                                                ; preds = %6, %2
  ret void, !dbg !7492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7497 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7501, metadata !DIExpression()), !dbg !7502
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7503
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7503
  ret %struct._snode* %3, !dbg !7504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7505 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7509, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7510, metadata !DIExpression()), !dbg !7511
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7512
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7513
  ret void, !dbg !7514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7515 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7517, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7518, metadata !DIExpression()), !dbg !7519
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7520
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7521
  ret void, !dbg !7522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7523 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7525, metadata !DIExpression()), !dbg !7526
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7527
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7527
  ret %struct._snode* %3, !dbg !7528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7529 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7531, metadata !DIExpression()), !dbg !7533
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7532, metadata !DIExpression()), !dbg !7533
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7534
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7535
  ret void, !dbg !7536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7537 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7541, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7542, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7543, metadata !DIExpression()), !dbg !7544
  %4 = icmp eq %struct._snode* %1, null, !dbg !7545
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7547
  br i1 %4, label %6, label %11, !dbg !7548

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7549
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7551
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7551
  br i1 %8, label %9, label %15, !dbg !7549

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7553
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7553
  br label %15, !dbg !7553

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7555
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7557
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7557
  br i1 %13, label %14, label %15, !dbg !7555

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7559
  br label %15, !dbg !7559

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7548
  ret void, !dbg !7548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !7561 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7565, metadata !DIExpression()), !dbg !7566
  %2 = icmp eq %struct._snode* %0, null, !dbg !7567
  br i1 %2, label %5, label %3, !dbg !7567

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7567
  br label %5, !dbg !7567

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7567
  ret %struct._snode* %6, !dbg !7567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7568 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7570, metadata !DIExpression()), !dbg !7571
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7572
  ret %struct._snode* %2, !dbg !7572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7573 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7575, metadata !DIExpression()), !dbg !7576
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7577
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7577
  ret %struct._snode* %3, !dbg !7578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7581, metadata !DIExpression()), !dbg !7584
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !7585, !range !7586
  call void @llvm.dbg.value(metadata i32 %2, metadata !7582, metadata !DIExpression()), !dbg !7584
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !7587
  call void @llvm.dbg.value(metadata i32 %3, metadata !7583, metadata !DIExpression()), !dbg !7584
  ret i32 %3, !dbg !7588
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7591, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i8* %1, metadata !7592, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i8* %1, metadata !7593, metadata !DIExpression()), !dbg !7594
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7595
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7595
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7596
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7596
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7596
  %8 = shl nuw i32 1, %0, !dbg !7597
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !7598
  ret void, !dbg !7599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7600 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7604, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i32 %1, metadata !7605, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7606, metadata !DIExpression()), !dbg !7610
  %4 = bitcast i64* %3 to i8*, !dbg !7611
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7611
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7608, metadata !DIExpression()), !dbg !7610
  store i64 70368744177732, i64* %3, align 8, !dbg !7612
  call void @llvm.dbg.value(metadata i64* %3, metadata !7608, metadata !DIExpression(DW_OP_deref)), !dbg !7610
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %5, metadata !7609, metadata !DIExpression()), !dbg !7610
  %6 = icmp eq i32 %5, 0, !dbg !7614
  br i1 %6, label %7, label %8, !dbg !7616

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !7617
  br label %8, !dbg !7618

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7619
  ret void, !dbg !7619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7620 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7622, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i8* %0, metadata !7623, metadata !DIExpression()), !dbg !7625
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7626
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7624, metadata !DIExpression()), !dbg !7625
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7627
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7627
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !7628
  ret i32 %5, !dbg !7629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7632, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.value(metadata i32 %1, metadata !7633, metadata !DIExpression()), !dbg !7635
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !7636
  call void @llvm.dbg.value(metadata i32 %3, metadata !7634, metadata !DIExpression()), !dbg !7635
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !7637
  ret void, !dbg !7638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7643, metadata !DIExpression()), !dbg !7644
  %2 = sdiv i32 %0, 4, !dbg !7645
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7646
  %6 = add nsw i32 %5, 16, !dbg !7647
  %7 = shl i32 15, %6, !dbg !7648
  %8 = or i32 %7, %2, !dbg !7649
  ret i32 %8, !dbg !7650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 %1, metadata !7656, metadata !DIExpression()), !dbg !7657
  %3 = and i32 %1, 255, !dbg !7658
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7658
  %5 = load volatile i32, i32* %4, align 4, !dbg !7658
  %6 = lshr i32 %1, 16, !dbg !7658
  %7 = xor i32 %6, -1, !dbg !7658
  %8 = and i32 %5, %7, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %6, metadata !7659, metadata !DIExpression()) #23, !dbg !7663
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7665, !srcloc !7666
  call void @llvm.dbg.value(metadata i32 %9, metadata !7662, metadata !DIExpression()) #23, !dbg !7663
  call void @llvm.dbg.value(metadata i32 %9, metadata !7667, metadata !DIExpression()) #23, !dbg !7672
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7674, !range !5882
  %11 = shl i32 %0, %10, !dbg !7658
  %12 = or i32 %11, %8, !dbg !7658
  store volatile i32 %12, i32* %4, align 4, !dbg !7658
  ret void, !dbg !7675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7680, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7681, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %2, metadata !7682, metadata !DIExpression()), !dbg !7685
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7686
  %5 = icmp eq %struct._snode* %4, null, !dbg !7686
  br i1 %5, label %21, label %6, !dbg !7686

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !7688
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7684, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7683, metadata !DIExpression()), !dbg !7685
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7689
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7689
  %11 = load i32, i32* %10, align 4, !dbg !7689
  %12 = and i32 %11, %2, !dbg !7693
  %13 = icmp eq i32 %12, 0, !dbg !7693
  br i1 %13, label %19, label %14, !dbg !7694

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7683, metadata !DIExpression()), !dbg !7685
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7695
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7695
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7695
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !7697
  br label %19, !dbg !7698

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7683, metadata !DIExpression()), !dbg !7685
  %20 = icmp eq %struct._snode* %8, null, !dbg !7699
  br i1 %20, label %21, label %6, !dbg !7699

21:                                               ; preds = %19, %3
  ret void, !dbg !7700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7703, metadata !DIExpression()), !dbg !7704
  %2 = and i32 %0, 255, !dbg !7705
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7705
  %4 = load volatile i32, i32* %3, align 4, !dbg !7705
  %5 = lshr i32 %0, 16, !dbg !7705
  %6 = and i32 %4, %5, !dbg !7705
  call void @llvm.dbg.value(metadata i32 %5, metadata !7659, metadata !DIExpression()) #23, !dbg !7706
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7708, !srcloc !7666
  call void @llvm.dbg.value(metadata i32 %7, metadata !7662, metadata !DIExpression()) #23, !dbg !7706
  call void @llvm.dbg.value(metadata i32 %7, metadata !7667, metadata !DIExpression()) #23, !dbg !7709
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7711, !range !5882
  %9 = lshr i32 %6, %8, !dbg !7712
  ret i32 %9, !dbg !7713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7714 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7719, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.value(metadata i32 %1, metadata !7720, metadata !DIExpression()), !dbg !7721
  %3 = shl i32 %1, 16, !dbg !7722
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7722
  store volatile i32 %3, i32* %4, align 4, !dbg !7722
  ret void, !dbg !7723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7724 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7728, metadata !DIExpression()), !dbg !7729
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7730
  %3 = load volatile i32, i32* %2, align 4, !dbg !7730
  ret i32 %3, !dbg !7731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7732 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7734, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i32 %1, metadata !7735, metadata !DIExpression()), !dbg !7736
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7737
  store volatile i32 %1, i32* %3, align 4, !dbg !7737
  ret void, !dbg !7738
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7739 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7741, metadata !DIExpression()), !dbg !7742
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7743
  %3 = load volatile i32, i32* %2, align 4, !dbg !7743
  ret i32 %3, !dbg !7744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !7745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7749, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32* %1, metadata !7750, metadata !DIExpression()), !dbg !7751
  %3 = and i32 %0, 131072, !dbg !7752
  %4 = icmp eq i32 %3, 0, !dbg !7754
  br i1 %4, label %22, label %5, !dbg !7755

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7756
  %6 = and i32 %0, 2, !dbg !7758
  %7 = icmp eq i32 %6, 0, !dbg !7760
  br i1 %7, label %11, label %8, !dbg !7761

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7762
  %10 = icmp eq i32 %9, 0, !dbg !7762
  br i1 %10, label %33, label %11, !dbg !7765

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7766
  store i32 %12, i32* %1, align 4, !dbg !7766
  %13 = and i32 %0, 16, !dbg !7767
  %14 = icmp eq i32 %13, 0, !dbg !7769
  br i1 %14, label %17, label %15, !dbg !7770

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7771
  br label %31, !dbg !7773

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7774
  %19 = icmp eq i32 %18, 0, !dbg !7776
  br i1 %19, label %33, label %20, !dbg !7777

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7778
  br label %31, !dbg !7780

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7781
  %24 = icmp eq i32 %23, 0, !dbg !7783
  br i1 %24, label %31, label %25, !dbg !7784

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7785
  %27 = icmp eq i32 %26, 0, !dbg !7788
  br i1 %27, label %28, label %31, !dbg !7789

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7790
  br label %33, !dbg !7791

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7751
  ret i32 %34, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7796, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %1, metadata !7797, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %2, metadata !7798, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %3, metadata !7799, metadata !DIExpression()), !dbg !7807
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7808
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7808
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7808
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7800, metadata !DIExpression()), !dbg !7807
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7809
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7809
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7809
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7801, metadata !DIExpression()), !dbg !7807
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %11, metadata !7802, metadata !DIExpression()), !dbg !7807
  %12 = and i32 %2, 48, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %12, metadata !7803, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %2, metadata !7804, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %2, metadata !7805, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7807
  call void @llvm.dbg.value(metadata i32 %2, metadata !7806, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7807
  %13 = lshr i32 %2, 6, !dbg !7812
  %14 = and i32 %13, 1, !dbg !7812
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !7813
  %15 = lshr i32 %2, 7, !dbg !7814
  %16 = and i32 %15, 3, !dbg !7814
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !7815
  %17 = lshr i32 %2, 9, !dbg !7816
  %18 = and i32 %17, 3, !dbg !7816
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !7817
  %19 = icmp eq i32 %12, 32, !dbg !7818
  br i1 %19, label %20, label %24, !dbg !7820

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7821
  br i1 %21, label %22, label %23, !dbg !7824

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7825
  br label %24, !dbg !7827

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7828
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7830
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !7831
  ret void, !dbg !7832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7835, metadata !DIExpression()), !dbg !7837
  %2 = shl nuw i32 1, %0, !dbg !7838
  call void @llvm.dbg.value(metadata i32 %2, metadata !7836, metadata !DIExpression()), !dbg !7837
  ret i32 %2, !dbg !7839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7840 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7844, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i32 %1, metadata !7845, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i32 %2, metadata !7846, metadata !DIExpression()), !dbg !7847
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7848
  %5 = load volatile i32, i32* %4, align 4, !dbg !7848
  %6 = xor i32 %1, -1, !dbg !7848
  %7 = and i32 %5, %6, !dbg !7848
  %8 = mul i32 %2, %1, !dbg !7848
  %9 = or i32 %7, %8, !dbg !7848
  store volatile i32 %9, i32* %4, align 4, !dbg !7848
  ret void, !dbg !7849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7850 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7852, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 %1, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 %2, metadata !7854, metadata !DIExpression()), !dbg !7855
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7856
  %5 = load volatile i32, i32* %4, align 4, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7857
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7859, !srcloc !7666
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7857
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7860
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7862, !range !5882
  %8 = shl nuw nsw i32 %7, 1, !dbg !7856
  %9 = shl i32 3, %8, !dbg !7856
  %10 = xor i32 %9, -1, !dbg !7856
  %11 = and i32 %5, %10, !dbg !7856
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7865
  %12 = shl i32 %2, %8, !dbg !7856
  %13 = or i32 %11, %12, !dbg !7856
  store volatile i32 %13, i32* %4, align 4, !dbg !7856
  ret void, !dbg !7867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7868 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7870, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %1, metadata !7871, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %2, metadata !7872, metadata !DIExpression()), !dbg !7873
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7874
  %5 = load volatile i32, i32* %4, align 4, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7875
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7877, !srcloc !7666
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7875
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7878
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7880, !range !5882
  %8 = shl nuw nsw i32 %7, 1, !dbg !7874
  %9 = shl i32 3, %8, !dbg !7874
  %10 = xor i32 %9, -1, !dbg !7874
  %11 = and i32 %5, %10, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7883
  %12 = shl i32 %2, %8, !dbg !7874
  %13 = or i32 %11, %12, !dbg !7874
  store volatile i32 %13, i32* %4, align 4, !dbg !7874
  ret void, !dbg !7885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7886 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7888, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %1, metadata !7889, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.value(metadata i32 %2, metadata !7890, metadata !DIExpression()), !dbg !7891
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7892
  %5 = load volatile i32, i32* %4, align 4, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7893
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7895, !srcloc !7666
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7896
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7898, !range !5882
  %8 = shl nuw nsw i32 %7, 2, !dbg !7892
  %9 = shl i32 15, %8, !dbg !7892
  %10 = xor i32 %9, -1, !dbg !7892
  %11 = and i32 %5, %10, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7899
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7899
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7901
  %12 = shl i32 %2, %8, !dbg !7892
  %13 = or i32 %11, %12, !dbg !7892
  store volatile i32 %13, i32* %4, align 4, !dbg !7892
  ret void, !dbg !7903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7904 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7906, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.value(metadata i32 %1, metadata !7907, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.value(metadata i32 %2, metadata !7908, metadata !DIExpression()), !dbg !7909
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7910
  %5 = load volatile i32, i32* %4, align 4, !dbg !7910
  %6 = lshr i32 %1, 8, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %6, metadata !7659, metadata !DIExpression()) #23, !dbg !7911
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7913, !srcloc !7666
  call void @llvm.dbg.value(metadata i32 %7, metadata !7662, metadata !DIExpression()) #23, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %7, metadata !7667, metadata !DIExpression()) #23, !dbg !7914
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7916, !range !5882
  %9 = shl nuw nsw i32 %8, 2, !dbg !7910
  %10 = shl i32 15, %9, !dbg !7910
  %11 = xor i32 %10, -1, !dbg !7910
  %12 = and i32 %5, %11, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %6, metadata !7659, metadata !DIExpression()) #23, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %7, metadata !7662, metadata !DIExpression()) #23, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %7, metadata !7667, metadata !DIExpression()) #23, !dbg !7919
  %13 = shl i32 %2, %9, !dbg !7910
  %14 = or i32 %12, %13, !dbg !7910
  store volatile i32 %14, i32* %4, align 4, !dbg !7910
  ret void, !dbg !7921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7922 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %1, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %2, metadata !7926, metadata !DIExpression()), !dbg !7927
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7928
  %5 = load volatile i32, i32* %4, align 4, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7929
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7931, !srcloc !7666
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7929
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7932
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7934, !range !5882
  %8 = shl nuw nsw i32 %7, 1, !dbg !7928
  %9 = shl i32 3, %8, !dbg !7928
  %10 = xor i32 %9, -1, !dbg !7928
  %11 = and i32 %5, %10, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %1, metadata !7659, metadata !DIExpression()) #23, !dbg !7935
  call void @llvm.dbg.value(metadata i32 %6, metadata !7662, metadata !DIExpression()) #23, !dbg !7935
  call void @llvm.dbg.value(metadata i32 %6, metadata !7667, metadata !DIExpression()) #23, !dbg !7937
  %12 = shl i32 %2, %8, !dbg !7928
  %13 = or i32 %11, %12, !dbg !7928
  store volatile i32 %13, i32* %4, align 4, !dbg !7928
  ret void, !dbg !7939
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7940 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7942, metadata !DIExpression()), !dbg !7945
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7946
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7946
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7946
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7943, metadata !DIExpression()), !dbg !7945
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7947
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7948
  %6 = tail call fastcc zeroext i1 @device_is_ready.44() #24, !dbg !7949
  br i1 %6, label %7, label %11, !dbg !7951

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %8, metadata !7944, metadata !DIExpression()), !dbg !7945
  %9 = icmp slt i32 %8, 0, !dbg !7953
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7955
  br label %11, !dbg !7955

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7945
  ret i32 %12, !dbg !7956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.44() unnamed_addr #1 !dbg !7957 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7961, metadata !DIExpression()), !dbg !7962
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7963, !srcloc !7965
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #24, !dbg !7966
  ret i1 %1, !dbg !7967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7968 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7972, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i8 1, metadata !7973, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7974, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 0, metadata !7975, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7976, metadata !DIExpression()), !dbg !7977
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7978
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7978
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7978
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7974, metadata !DIExpression()), !dbg !7977
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7979
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7982
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !7983
  call void @llvm.dbg.value(metadata i32 %7, metadata !7975, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 %7, metadata !7975, metadata !DIExpression()), !dbg !7977
  ret i32 %7, !dbg !7984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !7985 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7987, metadata !DIExpression()), !dbg !7988
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !7989
  ret i1 %1, !dbg !7990
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7995, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %1, metadata !7996, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %2, metadata !7997, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %3, metadata !7998, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 0, metadata !7999, metadata !DIExpression()), !dbg !8003
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !8004
  %5 = icmp eq i32 %3, 17, !dbg !8005
  br i1 %5, label %6, label %14, !dbg !8006

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8007
  call void @llvm.dbg.value(metadata i32 %7, metadata !8000, metadata !DIExpression()), !dbg !8008
  %8 = icmp eq i32 %7, 0, !dbg !8009
  %9 = shl nuw i32 1, %1, !dbg !8011
  br i1 %8, label %12, label %10, !dbg !8012

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8013
  br label %14, !dbg !8015

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8016
  br label %14, !dbg !8019

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8020
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !8021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8023, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i8* %1, metadata !8024, metadata !DIExpression()), !dbg !8027
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8028
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8028
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8028
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8025, metadata !DIExpression()), !dbg !8027
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8029
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8029
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !8031
  %9 = icmp eq i32 %8, 0, !dbg !8031
  br i1 %9, label %12, label %10, !dbg !8032

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8033
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !8035
  br label %12, !dbg !8036

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8037
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8039
  %15 = icmp eq i32 %14, 0, !dbg !8039
  br i1 %15, label %19, label %16, !dbg !8040

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8041
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !8042
  store i8 %18, i8* %1, align 1, !dbg !8043
  br label %19, !dbg !8044

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8027
  ret i32 %20, !dbg !8045
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8046 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8048, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i8 %1, metadata !8049, metadata !DIExpression()), !dbg !8052
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8053
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8053
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8053
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8050, metadata !DIExpression()), !dbg !8052
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8054

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8055
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !8058
  %10 = icmp eq i32 %9, 0, !dbg !8058
  br i1 %10, label %18, label %11, !dbg !8059

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8060, !srcloc !8067
  call void @llvm.dbg.value(metadata i32 undef, metadata !8063, metadata !DIExpression()) #23, !dbg !8068
  call void @llvm.dbg.value(metadata i32 undef, metadata !8064, metadata !DIExpression()) #23, !dbg !8068
  call void @llvm.dbg.value(metadata i32 undef, metadata !8051, metadata !DIExpression()), !dbg !8052
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8069
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8071
  %15 = icmp eq i32 %14, 0, !dbg !8071
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8060
  br i1 %15, label %17, label %19, !dbg !8072

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8063, metadata !DIExpression()) #23, !dbg !8068
  call void @llvm.dbg.value(metadata i32 %16, metadata !8051, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata i32 undef, metadata !8073, metadata !DIExpression()) #23, !dbg !8076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8078, !srcloc !8079
  br label %18, !dbg !8080

18:                                               ; preds = %17, %7
  br label %7, !dbg !8055, !llvm.loop !8081

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8060
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8083
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !8084
  call void @llvm.dbg.value(metadata i32 %20, metadata !8073, metadata !DIExpression()) #23, !dbg !8085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8087, !srcloc !8079
  ret void, !dbg !8088
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8091, metadata !DIExpression()), !dbg !8094
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8095
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8095
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8095
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8092, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.value(metadata i32 0, metadata !8093, metadata !DIExpression()), !dbg !8094
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8096
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8096
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !8098
  %8 = icmp ne i32 %7, 0, !dbg !8098
  %9 = zext i1 %8 to i32, !dbg !8099
  call void @llvm.dbg.value(metadata i32 %9, metadata !8093, metadata !DIExpression()), !dbg !8094
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8100
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !8102
  %12 = icmp eq i32 %11, 0, !dbg !8102
  %13 = or i32 %9, 2, !dbg !8103
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8103
  call void @llvm.dbg.value(metadata i32 %14, metadata !8093, metadata !DIExpression()), !dbg !8094
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8104
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !8106
  %17 = icmp eq i32 %16, 0, !dbg !8106
  %18 = or i32 %14, 4, !dbg !8107
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8107
  call void @llvm.dbg.value(metadata i32 %19, metadata !8093, metadata !DIExpression()), !dbg !8094
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8108
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !8110
  %22 = icmp eq i32 %21, 0, !dbg !8110
  %23 = or i32 %19, 8, !dbg !8111
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8111
  call void @llvm.dbg.value(metadata i32 %24, metadata !8093, metadata !DIExpression()), !dbg !8094
  %25 = and i32 %24, 8, !dbg !8112
  %26 = icmp eq i32 %25, 0, !dbg !8112
  br i1 %26, label %29, label %27, !dbg !8114

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8115
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !8117
  br label %29, !dbg !8118

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8119
  %31 = icmp eq i32 %30, 0, !dbg !8119
  br i1 %31, label %34, label %32, !dbg !8121

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8122
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !8124
  br label %34, !dbg !8125

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8126
  %36 = icmp eq i32 %35, 0, !dbg !8126
  br i1 %36, label %39, label %37, !dbg !8128

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8129
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !8131
  br label %39, !dbg !8132

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8133
  %41 = icmp eq i32 %40, 0, !dbg !8133
  br i1 %41, label %44, label %42, !dbg !8135

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8136
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !8138
  br label %44, !dbg !8139

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8140
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !8141
  ret i32 %24, !dbg !8142
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8145, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8146, metadata !DIExpression()), !dbg !8154
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8155
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8155
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8155
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8147, metadata !DIExpression()), !dbg !8154
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8156
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8156
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8156
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8148, metadata !DIExpression()), !dbg !8154
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8157
  %10 = load i8, i8* %9, align 4, !dbg !8157
  %11 = zext i8 %10 to i32, !dbg !8158
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !8159
  call void @llvm.dbg.value(metadata i32 %12, metadata !8150, metadata !DIExpression()), !dbg !8154
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8160
  %14 = load i8, i8* %13, align 1, !dbg !8160
  %15 = zext i8 %14 to i32, !dbg !8161
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !8162
  call void @llvm.dbg.value(metadata i32 %16, metadata !8151, metadata !DIExpression()), !dbg !8154
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8163
  %18 = load i8, i8* %17, align 2, !dbg !8163
  %19 = zext i8 %18 to i32, !dbg !8164
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %20, metadata !8152, metadata !DIExpression()), !dbg !8154
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8166
  %22 = load i8, i8* %21, align 1, !dbg !8166
  %23 = zext i8 %22 to i32, !dbg !8167
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !8168
  call void @llvm.dbg.value(metadata i32 %24, metadata !8153, metadata !DIExpression()), !dbg !8154
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8169

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8171
  br i1 %26, label %69, label %27, !dbg !8173

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8174

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8175
  br i1 %29, label %65, label %30, !dbg !8175

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8177
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8154
  br i1 %31, label %38, label %34, !dbg !8179

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8180
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !8180

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8183
  br i1 %37, label %38, label %69, !dbg !8184

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8185
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !8186
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !8187
  %41 = icmp eq i32 %12, %40, !dbg !8189
  br i1 %41, label %43, label %42, !dbg !8190

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !8191
  br label %43, !dbg !8193

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !8194
  %45 = icmp eq i32 %16, %44, !dbg !8196
  br i1 %45, label %47, label %46, !dbg !8197

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !8198
  br label %47, !dbg !8200

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !8201
  %49 = icmp eq i32 %20, %48, !dbg !8203
  br i1 %49, label %51, label %50, !dbg !8204

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !8205
  br label %51, !dbg !8207

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !8208
  %53 = icmp eq i32 %24, %52, !dbg !8210
  br i1 %53, label %55, label %54, !dbg !8211

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !8212
  br label %55, !dbg !8214

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8215
  %57 = load i32, i32* %56, align 4, !dbg !8215
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8217
  %59 = load i32, i32* %58, align 4, !dbg !8217
  %60 = icmp eq i32 %57, %59, !dbg !8218
  br i1 %60, label %63, label %61, !dbg !8219

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !8220
  %62 = load i32, i32* %56, align 4, !dbg !8222
  store i32 %62, i32* %58, align 4, !dbg !8223
  br label %63, !dbg !8224

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8225
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !8226
  br label %69, !dbg !8227

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8175
  %67 = and i8 %66, 1, !dbg !8175
  %68 = icmp eq i8 %67, 0, !dbg !8175
  br i1 %68, label %30, label %69, !dbg !8175

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8154
  ret i32 %70, !dbg !8228
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8231, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8232, metadata !DIExpression()), !dbg !8234
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8235
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8235
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8235
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8233, metadata !DIExpression()), !dbg !8234
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8236
  %7 = load i32, i32* %6, align 4, !dbg !8236
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8237
  store i32 %7, i32* %8, align 4, !dbg !8238
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8239, !range !8240
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !8241
  %11 = trunc i32 %10 to i8, !dbg !8241
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8242
  store i8 %11, i8* %12, align 4, !dbg !8243
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !8244, !range !8245
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !8246
  %15 = trunc i32 %14 to i8, !dbg !8246
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8247
  store i8 %15, i8* %16, align 1, !dbg !8248
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !8249
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8250, !range !8240
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !8251
  %20 = trunc i32 %19 to i8, !dbg !8251
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8252
  store i8 %20, i8* %21, align 2, !dbg !8253
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !8254, !range !8255
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !8256
  %24 = trunc i32 %23 to i8, !dbg !8256
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8257
  store i8 %24, i8* %25, align 1, !dbg !8258
  ret i32 0, !dbg !8259
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8264, metadata !DIExpression()), !dbg !8266
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8267
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8267
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8267
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8265, metadata !DIExpression()), !dbg !8266
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8268
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8268
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !8269
  ret i32 %7, !dbg !8270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = icmp eq i32 %0, 1024, !dbg !8277
  %3 = select i1 %2, i32 2, i32 0, !dbg !8277
  %4 = icmp eq i32 %0, 1536, !dbg !8277
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8277
  ret i32 %5, !dbg !8278
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8281, metadata !DIExpression()), !dbg !8283
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8284
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8284
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8284
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8282, metadata !DIExpression()), !dbg !8283
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8285
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8285
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !8286
  ret i32 %7, !dbg !8287
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8292, metadata !DIExpression()), !dbg !8293
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8294
  %3 = icmp ult i32 %2, 4, !dbg !8294
  br i1 %3, label %4, label %7, !dbg !8294

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8294
  %6 = load i32, i32* %5, align 4, !dbg !8294
  br label %7, !dbg !8294

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8295
  ret i32 %8, !dbg !8297
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8300, metadata !DIExpression()), !dbg !8302
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8303
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8303
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8303
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8301, metadata !DIExpression()), !dbg !8302
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8304
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8304
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !8305
  ret i32 %7, !dbg !8306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8311, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 %1, metadata !8312, metadata !DIExpression()), !dbg !8313
  %3 = icmp eq i32 %0, 4096, !dbg !8314
  %4 = icmp eq i32 %1, 0, !dbg !8314
  %5 = select i1 %4, i32 4, i32 3, !dbg !8314
  %6 = select i1 %4, i32 3, i32 2, !dbg !8314
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8314
  ret i32 %7, !dbg !8315
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8316 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8318, metadata !DIExpression()), !dbg !8320
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8321
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8321
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8321
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8319, metadata !DIExpression()), !dbg !8320
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8322
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8322
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !8323
  ret i32 %7, !dbg !8324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8329, metadata !DIExpression()), !dbg !8330
  %2 = icmp eq i32 %0, 768, !dbg !8331
  %3 = zext i1 %2 to i32, !dbg !8330
  ret i32 %3, !dbg !8333
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8334 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8339, metadata !DIExpression()), !dbg !8340
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8341
  %3 = load volatile i32, i32* %2, align 4, !dbg !8341
  %4 = and i32 %3, 768, !dbg !8341
  ret i32 %4, !dbg !8342
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8343 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8345, metadata !DIExpression()), !dbg !8346
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8347
  %3 = load volatile i32, i32* %2, align 4, !dbg !8347
  %4 = and i32 %3, 4096, !dbg !8347
  ret i32 %4, !dbg !8348
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8349 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8351, metadata !DIExpression()), !dbg !8352
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8353
  %3 = load volatile i32, i32* %2, align 4, !dbg !8353
  %4 = and i32 %3, 12288, !dbg !8353
  ret i32 %4, !dbg !8354
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8355 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8357, metadata !DIExpression()), !dbg !8358
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8359
  %3 = load volatile i32, i32* %2, align 4, !dbg !8359
  %4 = and i32 %3, 1536, !dbg !8359
  ret i32 %4, !dbg !8360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8365, metadata !DIExpression()), !dbg !8366
  %2 = icmp eq i32 %0, 2, !dbg !8367
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8367
  %4 = icmp eq i32 %0, 1, !dbg !8367
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8367
  ret i32 %5, !dbg !8368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8373, metadata !DIExpression()), !dbg !8374
  %2 = icmp ult i32 %0, 3, !dbg !8375
  br i1 %2, label %3, label %6, !dbg !8375

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8375
  %5 = load i32, i32* %4, align 4, !dbg !8375
  br label %6, !dbg !8375

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8376
  ret i32 %7, !dbg !8378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8383, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.value(metadata i32 %1, metadata !8384, metadata !DIExpression()), !dbg !8385
  %3 = icmp eq i32 %0, 4, !dbg !8386
  %4 = icmp eq i32 %1, 0, !dbg !8386
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8386
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8386
  ret i32 %6, !dbg !8387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8392, metadata !DIExpression()), !dbg !8393
  %2 = icmp eq i32 %0, 1, !dbg !8394
  %3 = select i1 %2, i32 768, i32 0, !dbg !8393
  ret i32 %3, !dbg !8396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8397 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8401, metadata !DIExpression()), !dbg !8402
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8403
  %3 = load volatile i32, i32* %2, align 4, !dbg !8403
  %4 = and i32 %3, -8193, !dbg !8403
  store volatile i32 %4, i32* %2, align 4, !dbg !8403
  ret void, !dbg !8404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8409, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.value(metadata i32 %1, metadata !8410, metadata !DIExpression()), !dbg !8412
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8413
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8413
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8413
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8411, metadata !DIExpression()), !dbg !8412
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8414
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8414
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8415
  ret void, !dbg !8416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8419, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.value(metadata i32 %1, metadata !8420, metadata !DIExpression()), !dbg !8422
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8423
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8423
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8423
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8421, metadata !DIExpression()), !dbg !8422
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8424
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8424
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8425
  ret void, !dbg !8426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8427 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8429, metadata !DIExpression()), !dbg !8432
  call void @llvm.dbg.value(metadata i32 %1, metadata !8430, metadata !DIExpression()), !dbg !8432
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8433
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8433
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8433
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8431, metadata !DIExpression()), !dbg !8432
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8434
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8434
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8435
  ret void, !dbg !8436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8439, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i32 %1, metadata !8440, metadata !DIExpression()), !dbg !8442
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8443
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8443
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8443
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8441, metadata !DIExpression()), !dbg !8442
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8444
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8444
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8445
  ret void, !dbg !8446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8447 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8449, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.value(metadata i32 %1, metadata !8450, metadata !DIExpression()), !dbg !8454
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8455
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8455
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8455
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8451, metadata !DIExpression()), !dbg !8454
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8456
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8456
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8452, metadata !DIExpression()), !dbg !8454
  %10 = bitcast i32* %3 to i8*, !dbg !8457
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8457
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8458
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8458
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8462
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8462
  %15 = load i8*, i8** %14, align 4, !dbg !8462
  call void @llvm.dbg.value(metadata i32* %3, metadata !8453, metadata !DIExpression(DW_OP_deref)), !dbg !8454
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !8463
  %17 = icmp slt i32 %16, 0, !dbg !8464
  br i1 %17, label %23, label %18, !dbg !8465

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8466
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8466
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !8467
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8468
  %22 = load i32, i32* %3, align 4, !dbg !8469
  call void @llvm.dbg.value(metadata i32 %22, metadata !8453, metadata !DIExpression()), !dbg !8454
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !8470
  br label %23, !dbg !8471

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8471
  ret void, !dbg !8471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8472 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8474, metadata !DIExpression()), !dbg !8475
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8476
  %3 = load volatile i32, i32* %2, align 4, !dbg !8476
  %4 = or i32 %3, 8192, !dbg !8476
  store volatile i32 %4, i32* %2, align 4, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8478 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8480, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata i8* %1, metadata !8481, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata i32* %2, metadata !8482, metadata !DIExpression()), !dbg !8484
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8485
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8485
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8485
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8483, metadata !DIExpression()), !dbg !8484
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8486
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8486
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8488
  br i1 %9, label %12, label %10, !dbg !8489

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !8490
  br label %12, !dbg !8491

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8484
  ret i32 %13, !dbg !8492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8497, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i32 0, metadata !8498, metadata !DIExpression()), !dbg !8499
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8500
  %3 = load volatile i32, i32* %2, align 4, !dbg !8500
  %4 = and i32 %3, -32769, !dbg !8500
  store volatile i32 %4, i32* %2, align 4, !dbg !8500
  ret void, !dbg !8501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8502 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8506, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.value(metadata i32 %1, metadata !8507, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.value(metadata i32 0, metadata !8508, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.value(metadata i32 %2, metadata !8509, metadata !DIExpression()), !dbg !8510
  %4 = zext i32 %1 to i64, !dbg !8511
  %5 = mul nuw nsw i64 %4, 25, !dbg !8511
  %6 = zext i32 %2 to i64, !dbg !8511
  %7 = shl nuw nsw i64 %6, 2, !dbg !8511
  %8 = udiv i64 %5, %7, !dbg !8511
  %9 = trunc i64 %8 to i32, !dbg !8511
  %10 = udiv i32 %9, 100, !dbg !8511
  %11 = shl nuw nsw i32 %10, 4, !dbg !8511
  %12 = mul i32 %10, -100, !dbg !8511
  %13 = add i32 %12, %9, !dbg !8511
  %14 = shl i32 %13, 4, !dbg !8511
  %15 = add i32 %14, 50, !dbg !8511
  %16 = udiv i32 %15, 100, !dbg !8511
  %17 = and i32 %16, 240, !dbg !8511
  %18 = add nuw nsw i32 %17, %11, !dbg !8511
  %19 = and i32 %16, 15, !dbg !8511
  %20 = and i32 %18, 65520, !dbg !8514
  %21 = or i32 %20, %19, !dbg !8514
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8515
  store volatile i32 %21, i32* %22, align 4, !dbg !8516
  ret void, !dbg !8517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8518 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8520, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %1, metadata !8521, metadata !DIExpression()), !dbg !8522
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8523
  %4 = load volatile i32, i32* %3, align 4, !dbg !8523
  %5 = and i32 %4, -769, !dbg !8523
  %6 = or i32 %5, %1, !dbg !8523
  store volatile i32 %6, i32* %3, align 4, !dbg !8523
  ret void, !dbg !8524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8525 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8527, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i32 %1, metadata !8528, metadata !DIExpression()), !dbg !8529
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8530
  %4 = load volatile i32, i32* %3, align 4, !dbg !8530
  %5 = and i32 %4, -4097, !dbg !8530
  %6 = or i32 %5, %1, !dbg !8530
  store volatile i32 %6, i32* %3, align 4, !dbg !8530
  ret void, !dbg !8531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8532 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8534, metadata !DIExpression()), !dbg !8536
  call void @llvm.dbg.value(metadata i32 %1, metadata !8535, metadata !DIExpression()), !dbg !8536
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8537
  %4 = load volatile i32, i32* %3, align 4, !dbg !8537
  %5 = and i32 %4, -12289, !dbg !8537
  %6 = or i32 %5, %1, !dbg !8537
  store volatile i32 %6, i32* %3, align 4, !dbg !8537
  ret void, !dbg !8538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8539 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8541, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i32 %1, metadata !8542, metadata !DIExpression()), !dbg !8543
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8544
  %4 = load volatile i32, i32* %3, align 4, !dbg !8544
  %5 = and i32 %4, -1537, !dbg !8544
  %6 = or i32 %5, %1, !dbg !8544
  store volatile i32 %6, i32* %3, align 4, !dbg !8544
  ret void, !dbg !8545
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8546 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8548, metadata !DIExpression()), !dbg !8549
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8550
  %3 = load volatile i32, i32* %2, align 4, !dbg !8550
  %4 = lshr i32 %3, 3, !dbg !8551
  %5 = and i32 %4, 1, !dbg !8551
  ret i32 %5, !dbg !8552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8553 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8555, metadata !DIExpression()), !dbg !8556
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8557
  %3 = load volatile i32, i32* %2, align 4, !dbg !8557
  %4 = and i32 %3, 1, !dbg !8557
  ret i32 %4, !dbg !8558
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8559 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8561, metadata !DIExpression()), !dbg !8562
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8563
  %3 = load volatile i32, i32* %2, align 4, !dbg !8563
  %4 = lshr i32 %3, 1, !dbg !8564
  %5 = and i32 %4, 1, !dbg !8564
  ret i32 %5, !dbg !8565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8566 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8568, metadata !DIExpression()), !dbg !8569
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8570
  %3 = load volatile i32, i32* %2, align 4, !dbg !8570
  %4 = lshr i32 %3, 8, !dbg !8571
  %5 = and i32 %4, 1, !dbg !8571
  ret i32 %5, !dbg !8572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8573 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8575, metadata !DIExpression()), !dbg !8576
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8577
  store volatile i32 -257, i32* %2, align 4, !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8579 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8581, metadata !DIExpression()), !dbg !8583
  %3 = bitcast i32* %2 to i8*, !dbg !8584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8584
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8582, metadata !DIExpression()), !dbg !8585
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8586
  %5 = load volatile i32, i32* %4, align 4, !dbg !8586
  store volatile i32 %5, i32* %2, align 4, !dbg !8587
  %6 = load volatile i32, i32* %2, align 4, !dbg !8588
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8589
  %8 = load volatile i32, i32* %7, align 4, !dbg !8589
  store volatile i32 %8, i32* %2, align 4, !dbg !8590
  %9 = load volatile i32, i32* %2, align 4, !dbg !8591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8592
  ret void, !dbg !8592
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8593 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8595, metadata !DIExpression()), !dbg !8597
  %3 = bitcast i32* %2 to i8*, !dbg !8598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8598
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8596, metadata !DIExpression()), !dbg !8599
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8600
  %5 = load volatile i32, i32* %4, align 4, !dbg !8600
  store volatile i32 %5, i32* %2, align 4, !dbg !8601
  %6 = load volatile i32, i32* %2, align 4, !dbg !8602
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8603
  %8 = load volatile i32, i32* %7, align 4, !dbg !8603
  store volatile i32 %8, i32* %2, align 4, !dbg !8604
  %9 = load volatile i32, i32* %2, align 4, !dbg !8605
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8606
  ret void, !dbg !8606
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8607 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8609, metadata !DIExpression()), !dbg !8611
  %3 = bitcast i32* %2 to i8*, !dbg !8612
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8612
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8610, metadata !DIExpression()), !dbg !8613
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8614
  %5 = load volatile i32, i32* %4, align 4, !dbg !8614
  store volatile i32 %5, i32* %2, align 4, !dbg !8615
  %6 = load volatile i32, i32* %2, align 4, !dbg !8616
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8617
  %8 = load volatile i32, i32* %7, align 4, !dbg !8617
  store volatile i32 %8, i32* %2, align 4, !dbg !8618
  %9 = load volatile i32, i32* %2, align 4, !dbg !8619
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8620
  ret void, !dbg !8620
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8621 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8623, metadata !DIExpression()), !dbg !8625
  %3 = bitcast i32* %2 to i8*, !dbg !8626
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8626
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8624, metadata !DIExpression()), !dbg !8627
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8628
  %5 = load volatile i32, i32* %4, align 4, !dbg !8628
  store volatile i32 %5, i32* %2, align 4, !dbg !8629
  %6 = load volatile i32, i32* %2, align 4, !dbg !8630
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8631
  %8 = load volatile i32, i32* %7, align 4, !dbg !8631
  store volatile i32 %8, i32* %2, align 4, !dbg !8632
  %9 = load volatile i32, i32* %2, align 4, !dbg !8633
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8634
  ret void, !dbg !8634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8635 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8637, metadata !DIExpression()), !dbg !8638
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8639
  %3 = load volatile i32, i32* %2, align 4, !dbg !8639
  %4 = lshr i32 %3, 7, !dbg !8640
  %5 = and i32 %4, 1, !dbg !8640
  ret i32 %5, !dbg !8641
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8642 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8646, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i8 %1, metadata !8647, metadata !DIExpression()), !dbg !8648
  %3 = zext i8 %1 to i32, !dbg !8649
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8650
  store volatile i32 %3, i32* %4, align 4, !dbg !8651
  ret void, !dbg !8652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8653 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8655, metadata !DIExpression()), !dbg !8656
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8657
  %3 = load volatile i32, i32* %2, align 4, !dbg !8657
  %4 = lshr i32 %3, 5, !dbg !8658
  %5 = and i32 %4, 1, !dbg !8658
  ret i32 %5, !dbg !8659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8660 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8664, metadata !DIExpression()), !dbg !8665
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8666
  %3 = load volatile i32, i32* %2, align 4, !dbg !8666
  %4 = trunc i32 %3 to i8, !dbg !8667
  ret i8 %4, !dbg !8668
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8671, metadata !DIExpression()), !dbg !8677
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8678
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8678
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8678
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8672, metadata !DIExpression()), !dbg !8677
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8679
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8679
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8679
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8673, metadata !DIExpression()), !dbg !8677
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !8680
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8681
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8681
  %10 = tail call fastcc zeroext i1 @device_is_ready.50(%struct.device* noundef %9) #24, !dbg !8683
  br i1 %10, label %11, label %49, !dbg !8684

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8685
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8686
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8686
  %15 = load i8*, i8** %14, align 4, !dbg !8686
  %16 = tail call fastcc i32 @clock_control_on.51(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %16, metadata !8676, metadata !DIExpression()), !dbg !8677
  %17 = icmp eq i32 %16, 0, !dbg !8688
  br i1 %17, label %18, label %49, !dbg !8690

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8691
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8691
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !8692
  call void @llvm.dbg.value(metadata i32 %21, metadata !8676, metadata !DIExpression()), !dbg !8677
  %22 = icmp slt i32 %21, 0, !dbg !8693
  br i1 %22, label %49, label %23, !dbg !8695

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8696
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8696
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !8697
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8698
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !8699
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8700
  %28 = load i32, i32* %27, align 4, !dbg !8700
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8702

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8674, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 4096, metadata !8675, metadata !DIExpression()), !dbg !8677
  br label %31, !dbg !8703

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8674, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 0, metadata !8675, metadata !DIExpression()), !dbg !8677
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8706
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8706
  call void @llvm.dbg.value(metadata i32 %33, metadata !8675, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 %32, metadata !8674, metadata !DIExpression()), !dbg !8677
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8707
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !8708
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8709
  %36 = load i8, i8* %35, align 4, !dbg !8709, !range !5302
  %37 = icmp eq i8 %36, 0, !dbg !8709
  br i1 %37, label %39, label %38, !dbg !8711

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !8712
  br label %39, !dbg !8714

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8715
  %41 = load i32, i32* %40, align 4, !dbg !8715
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !8716
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8717
  %43 = load i8, i8* %42, align 4, !dbg !8717, !range !5302
  %44 = icmp eq i8 %43, 0, !dbg !8717
  br i1 %44, label %47, label %45, !dbg !8719

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8720
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !8722
  br label %47, !dbg !8723

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8724
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !8725
  br label %49, !dbg !8726

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8677
  ret i32 %50, !dbg !8727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8732, metadata !DIExpression()), !dbg !8736
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8737
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8737
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8737
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8733, metadata !DIExpression()), !dbg !8736
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8734, metadata !DIExpression()), !dbg !8736
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8738
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8739
  ret void, !dbg !8740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.50(%struct.device* noundef %0) unnamed_addr #1 !dbg !8741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8745, metadata !DIExpression()), !dbg !8746
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8747, !srcloc !8749
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.52(%struct.device* noundef %0) #24, !dbg !8750
  ret i1 %2, !dbg !8751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.51(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8754, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i8* %1, metadata !8755, metadata !DIExpression()), !dbg !8757
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8758
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8758
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8758
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8756, metadata !DIExpression()), !dbg !8757
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8759
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8759
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !8760
  ret i32 %8, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8762 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8766, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i8 0, metadata !8767, metadata !DIExpression()), !dbg !8770
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8771
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8771
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8769, metadata !DIExpression(DW_OP_deref)), !dbg !8770
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !8772
  call void @llvm.dbg.value(metadata i32 %4, metadata !8768, metadata !DIExpression()), !dbg !8770
  %5 = icmp slt i32 %4, 0, !dbg !8773
  br i1 %5, label %9, label %6, !dbg !8775

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8776
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8769, metadata !DIExpression()), !dbg !8770
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !8777
  br label %9, !dbg !8778

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8770
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8779
  ret i32 %10, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8780 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8782, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i32 12, metadata !8783, metadata !DIExpression()), !dbg !8786
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8787

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8788, metadata !DIExpression()) #23, !dbg !8794
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8797, !srcloc !8798
  call void @llvm.dbg.value(metadata i32 %4, metadata !8793, metadata !DIExpression()) #23, !dbg !8794
  %5 = or i32 %4, 12, !dbg !8799
  call void @llvm.dbg.value(metadata i32 %5, metadata !8784, metadata !DIExpression()), !dbg !8800
  call void @llvm.dbg.value(metadata i32 %5, metadata !8801, metadata !DIExpression()) #23, !dbg !8808
  call void @llvm.dbg.value(metadata i32* %2, metadata !8806, metadata !DIExpression()) #23, !dbg !8808
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8810, !srcloc !8811
  call void @llvm.dbg.value(metadata i32 %6, metadata !8807, metadata !DIExpression()) #23, !dbg !8808
  %7 = icmp eq i32 %6, 0, !dbg !8787
  br i1 %7, label %8, label %3, !dbg !8799, !llvm.loop !8812

8:                                                ; preds = %3
  ret void, !dbg !8813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8814 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i32 %1, metadata !8817, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i32 %2, metadata !8818, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i32 0, metadata !8819, metadata !DIExpression()), !dbg !8820
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8821
  %5 = load volatile i32, i32* %4, align 4, !dbg !8821
  %6 = and i32 %5, -5633, !dbg !8821
  %7 = or i32 %2, %1, !dbg !8821
  %8 = or i32 %7, %6, !dbg !8821
  store volatile i32 %8, i32* %4, align 4, !dbg !8821
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8822
  %10 = load volatile i32, i32* %9, align 4, !dbg !8822
  %11 = and i32 %10, -12289, !dbg !8822
  store volatile i32 %11, i32* %9, align 4, !dbg !8822
  ret void, !dbg !8823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8824 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8826, metadata !DIExpression()), !dbg !8827
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8828
  %3 = load volatile i32, i32* %2, align 4, !dbg !8828
  %4 = or i32 %3, 8, !dbg !8828
  store volatile i32 %4, i32* %2, align 4, !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8830 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8834, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8835, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.value(metadata i32 0, metadata !8836, metadata !DIExpression()), !dbg !8837
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8838
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8838
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8839
  %5 = load i8, i8* %4, align 4, !dbg !8839
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !8840
  ret i32 %6, !dbg !8841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.52(%struct.device* noundef %0) unnamed_addr #1 !dbg !8842 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8844, metadata !DIExpression()), !dbg !8845
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8846
  ret i1 %2, !dbg !8847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8850, metadata !DIExpression()), !dbg !8851
  tail call fastcc void @__NVIC_SetPriority.54() #24, !dbg !8852
  store i32 8399, i32* @last_load, align 4, !dbg !8853
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8854
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8855
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8856
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8857
  %3 = or i32 %2, 7, !dbg !8857
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8857
  ret i32 0, !dbg !8858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.54() unnamed_addr #13 !dbg !8859 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8861, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 1, metadata !8862, metadata !DIExpression()), !dbg !8863
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8864
  ret void, !dbg !8867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8868 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8870, metadata !DIExpression()), !dbg !8872
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !8873
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8874
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8875
  %5 = add i32 %4, %3, !dbg !8875
  store i32 %5, i32* @cycle_count, align 4, !dbg !8875
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8876
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8877
  %7 = sub i32 %5, %6, !dbg !8880
  %8 = udiv i32 %7, 8400, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %8, metadata !8871, metadata !DIExpression()), !dbg !8872
  %9 = mul nuw i32 %8, 8400, !dbg !8882
  %10 = add i32 %9, %6, !dbg !8883
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8883
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !8884
  tail call void @z_arm_int_exit() #25, !dbg !8885
  ret void, !dbg !8886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8887 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %1, metadata !8889, metadata !DIExpression()), !dbg !8893
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8894
  call void @llvm.dbg.value(metadata i32 %2, metadata !8890, metadata !DIExpression()), !dbg !8893
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8895
  call void @llvm.dbg.value(metadata i32 %3, metadata !8891, metadata !DIExpression()), !dbg !8893
  %4 = and i32 %2, 65536, !dbg !8896
  %5 = icmp ne i32 %4, 0, !dbg !8896
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8898
  %8 = load i32, i32* @last_load, align 4, !dbg !8893
  br i1 %7, label %9, label %13, !dbg !8898

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8899
  %11 = add i32 %10, %8, !dbg !8899
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8899
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8901
  br label %13, !dbg !8902

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8903
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8904
  %16 = add i32 %14, %15, !dbg !8905
  ret i32 %16, !dbg !8906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8911, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i1 %1, metadata !8912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8924
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8925
  br i1 %4, label %5, label %8, !dbg !8925

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8927
  %7 = and i32 %6, -2, !dbg !8927
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8927
  store i32 -16777216, i32* @last_load, align 4, !dbg !8929
  br label %54, !dbg !8930

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8931
  call void @llvm.dbg.value(metadata i32 %9, metadata !8916, metadata !DIExpression()), !dbg !8924
  br i1 %3, label %18, label %10, !dbg !8932

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8932
  call void @llvm.dbg.value(metadata i32 undef, metadata !8911, metadata !DIExpression()), !dbg !8924
  %12 = icmp slt i32 %11, 1, !dbg !8933
  br i1 %12, label %18, label %13, !dbg !8933

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8933
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8933
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8933
  %17 = add nuw nsw i32 %16, 8399, !dbg !8933
  br label %18, !dbg !8933

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8911, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8934, metadata !DIExpression()) #23, !dbg !8941
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8943, !srcloc !8949
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %21, metadata !8946, metadata !DIExpression()) #23, !dbg !8950
  call void @llvm.dbg.value(metadata i32 undef, metadata !8947, metadata !DIExpression()) #23, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %21, metadata !8940, metadata !DIExpression()) #23, !dbg !8941
  call void @llvm.dbg.value(metadata i32 %21, metadata !8917, metadata !DIExpression()), !dbg !8924
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %22, metadata !8922, metadata !DIExpression()), !dbg !8924
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %23, metadata !8914, metadata !DIExpression()), !dbg !8924
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8953
  %25 = add i32 %24, %22, !dbg !8953
  store i32 %25, i32* @cycle_count, align 4, !dbg !8953
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8954
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8955
  %27 = sub i32 %25, %26, !dbg !8956
  call void @llvm.dbg.value(metadata i32 %27, metadata !8923, metadata !DIExpression()), !dbg !8924
  %28 = icmp slt i32 %27, 0, !dbg !8957
  br i1 %28, label %38, label %29, !dbg !8959

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8913, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 undef, metadata !8913, metadata !DIExpression()), !dbg !8924
  %30 = add nuw i32 %19, %27, !dbg !8960
  %31 = urem i32 %30, 8400, !dbg !8962
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8913, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8924
  %32 = sub nuw nsw i32 %19, %31, !dbg !8963
  call void @llvm.dbg.value(metadata i32 %32, metadata !8913, metadata !DIExpression()), !dbg !8924
  %33 = icmp ugt i32 %32, 1024, !dbg !8964
  br i1 %33, label %34, label %36, !dbg !8964

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8913, metadata !DIExpression()), !dbg !8924
  %35 = icmp ugt i32 %32, 16766400, !dbg !8965
  br i1 %35, label %38, label %36, !dbg !8967

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8968
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8969
  call void @llvm.dbg.value(metadata i32 %40, metadata !8915, metadata !DIExpression()), !dbg !8924
  %41 = add nsw i32 %39, -1, !dbg !8970
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8971
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8972
  %42 = icmp ult i32 %23, %40, !dbg !8973
  br i1 %42, label %43, label %48, !dbg !8975

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8976
  %45 = add i32 %23, %9, !dbg !8978
  %46 = sub i32 %45, %40, !dbg !8979
  %47 = add i32 %46, %44, !dbg !8976
  br label %52, !dbg !8980

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8981
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8983
  %51 = add i32 %49, %50, !dbg !8983
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8984
  store i32 %53, i32* @cycle_count, align 4, !dbg !8984
  call void @llvm.dbg.value(metadata i32 %21, metadata !8985, metadata !DIExpression()) #23, !dbg !8991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8990, metadata !DIExpression()) #23, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %21, metadata !8993, metadata !DIExpression()) #23, !dbg !8996
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8998, !srcloc !8999
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9001 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8934, metadata !DIExpression()) #23, !dbg !9005
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9007, !srcloc !8949
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %2, metadata !8946, metadata !DIExpression()) #23, !dbg !9009
  call void @llvm.dbg.value(metadata i32 undef, metadata !8947, metadata !DIExpression()) #23, !dbg !9009
  call void @llvm.dbg.value(metadata i32 %2, metadata !8940, metadata !DIExpression()) #23, !dbg !9005
  call void @llvm.dbg.value(metadata i32 %2, metadata !9003, metadata !DIExpression()), !dbg !9010
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9011
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9012
  %5 = add i32 %4, %3, !dbg !9013
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9014
  %7 = sub i32 %5, %6, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %7, metadata !9004, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i32 %2, metadata !8985, metadata !DIExpression()) #23, !dbg !9016
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8990, metadata !DIExpression()) #23, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %2, metadata !8993, metadata !DIExpression()) #23, !dbg !9018
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9020, !srcloc !8999
  %8 = udiv i32 %7, 8400, !dbg !9021
  ret i32 %8, !dbg !9022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9023 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8934, metadata !DIExpression()) #23, !dbg !9027
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9029, !srcloc !8949
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %2, metadata !8946, metadata !DIExpression()) #23, !dbg !9031
  call void @llvm.dbg.value(metadata i32 undef, metadata !8947, metadata !DIExpression()) #23, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %2, metadata !8940, metadata !DIExpression()) #23, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %2, metadata !9025, metadata !DIExpression()), !dbg !9032
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9033
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9034
  %5 = add i32 %4, %3, !dbg !9035
  call void @llvm.dbg.value(metadata i32 %5, metadata !9026, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata i32 %2, metadata !8985, metadata !DIExpression()) #23, !dbg !9036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8990, metadata !DIExpression()) #23, !dbg !9036
  call void @llvm.dbg.value(metadata i32 %2, metadata !8993, metadata !DIExpression()) #23, !dbg !9038
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9040, !srcloc !8999
  ret i32 %5, !dbg !9041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9042 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9043
  %2 = icmp eq i32 %1, -16777216, !dbg !9045
  br i1 %2, label %3, label %6, !dbg !9046

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9047
  %5 = or i32 %4, 1, !dbg !9047
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9047
  br label %6, !dbg !9049

6:                                                ; preds = %3, %0
  ret void, !dbg !9050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9051 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9052
  %2 = and i32 %1, -2, !dbg !9052
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9052
  ret void, !dbg !9053
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9054 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9080, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8 %1, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9082, metadata !DIExpression()), !dbg !9083
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9084
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9084
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9083
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9085
  %8 = load i8, i8* %6, align 4, !dbg !9086
  %9 = zext i8 %8 to i32, !dbg !9087
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9087
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9088
  br i1 %11, label %18, label %24, !dbg !9089

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9083
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9085
  %14 = load i8, i8* %6, align 4, !dbg !9086
  %15 = zext i8 %14 to i32, !dbg !9087
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9087
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9088
  br i1 %17, label %18, label %24, !dbg !9089, !llvm.loop !9090

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9092
  %21 = load i8, i8* %20, align 1, !dbg !9092
  %22 = icmp eq i8 %21, %1, !dbg !9095
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9096
  br i1 %22, label %24, label %12, !dbg !9097

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9083
  ret i32 %25, !dbg !9098
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9099 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9110, metadata !DIExpression()), !dbg !9126
  call void @llvm.dbg.value(metadata i8 %1, metadata !9111, metadata !DIExpression()), !dbg !9126
  call void @llvm.dbg.value(metadata i32 %2, metadata !9112, metadata !DIExpression()), !dbg !9126
  call void @llvm.dbg.value(metadata i32 0, metadata !9115, metadata !DIExpression()), !dbg !9126
  call void @llvm.dbg.value(metadata i32 0, metadata !9116, metadata !DIExpression()), !dbg !9126
  call void @llvm.dbg.value(metadata i8 0, metadata !9117, metadata !DIExpression()), !dbg !9127
  %4 = icmp eq i8 %1, 0, !dbg !9128
  br i1 %4, label %35, label %5, !dbg !9129

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9128
  br label %9, !dbg !9129

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9117, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata i32 %29, metadata !9115, metadata !DIExpression()), !dbg !9126
  %8 = icmp eq i32 %34, %6, !dbg !9128
  br i1 %8, label %35, label %9, !dbg !9129, !llvm.loop !9130

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9117, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata i32 %11, metadata !9115, metadata !DIExpression()), !dbg !9126
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9132
  %13 = load i32, i32* %12, align 4, !dbg !9132
  call void @llvm.dbg.value(metadata i32 %13, metadata !9114, metadata !DIExpression()), !dbg !9126
  %14 = and i32 %13, 31, !dbg !9133
  %15 = icmp ult i32 %14, 16, !dbg !9134
  br i1 %15, label %16, label %20, !dbg !9135

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9136
  %18 = load i32, i32* %17, align 4, !dbg !9136
  %19 = or i32 %18, 32, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %19, metadata !9115, metadata !DIExpression()), !dbg !9126
  br label %28, !dbg !9139

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9140

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9141
  %23 = load i32, i32* %22, align 4, !dbg !9141
  call void @llvm.dbg.value(metadata i32 %23, metadata !9119, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9142
  %24 = lshr i32 %23, 7, !dbg !9143
  %25 = and i32 %24, 16, !dbg !9143
  %26 = or i32 %25, %23, !dbg !9143
  call void @llvm.dbg.value(metadata i32 %26, metadata !9115, metadata !DIExpression()), !dbg !9126
  br label %28, !dbg !9144

27:                                               ; preds = %20
  br label %28, !dbg !9145

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9126
  call void @llvm.dbg.value(metadata i32 %29, metadata !9115, metadata !DIExpression()), !dbg !9126
  %30 = lshr i32 %13, 5, !dbg !9145
  %31 = and i32 %30, 255, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %31, metadata !9113, metadata !DIExpression()), !dbg !9126
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !9146
  call void @llvm.dbg.value(metadata i32 %32, metadata !9116, metadata !DIExpression()), !dbg !9126
  %33 = icmp slt i32 %32, 0, !dbg !9147
  %34 = add nuw nsw i32 %10, 1, !dbg !9149
  call void @llvm.dbg.value(metadata i32 %34, metadata !9117, metadata !DIExpression()), !dbg !9127
  br i1 %33, label %35, label %7, !dbg !9150

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9156, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata i32 %1, metadata !9157, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.value(metadata i32 %2, metadata !9158, metadata !DIExpression()), !dbg !9160
  %4 = icmp ugt i32 %0, 175, !dbg !9161
  br i1 %4, label %16, label %5, !dbg !9163

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9164
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9165
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9165
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9159, metadata !DIExpression()), !dbg !9160
  %9 = add nsw i32 %6, -8, !dbg !9166
  %10 = icmp ult i32 %9, 3, !dbg !9166
  br i1 %10, label %16, label %11, !dbg !9168

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %8) #24, !dbg !9169
  br i1 %12, label %13, label %16, !dbg !9170

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9171
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !9172
  br label %16, !dbg !9173

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9160
  ret i32 %17, !dbg !9174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %0) unnamed_addr #1 !dbg !9175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9179, metadata !DIExpression()), !dbg !9180
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9181, !srcloc !9183
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.60(%struct.device* noundef %0) #24, !dbg !9184
  ret i1 %2, !dbg !9185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.60(%struct.device* noundef %0) unnamed_addr #1 !dbg !9186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9188, metadata !DIExpression()), !dbg !9189
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !9190
  ret i1 %2, !dbg !9191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9192 {
  ret void, !dbg !9193
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9194 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9196, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 0, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 2, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 0, metadata !9199, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 2, metadata !9200, metadata !DIExpression()), !dbg !9201
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9202
  %2 = and i32 %1, 12, !dbg !9203
  call void @llvm.dbg.value(metadata i32 %2, metadata !9196, metadata !DIExpression()), !dbg !9201
  %3 = icmp eq i32 %2, 8, !dbg !9204
  br i1 %3, label %4, label %18, !dbg !9204

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9205
  call void @llvm.dbg.value(metadata i32 %5, metadata !9199, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9201
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9207
  %7 = and i32 %6, 63, !dbg !9208
  call void @llvm.dbg.value(metadata i32 %7, metadata !9200, metadata !DIExpression()), !dbg !9201
  %8 = udiv i32 16000000, %7, !dbg !9209
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9209
  %10 = lshr i32 %9, 6, !dbg !9209
  %11 = and i32 %10, 511, !dbg !9209
  %12 = mul i32 %11, %8, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %12, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 %12, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 %12, metadata !9197, metadata !DIExpression()), !dbg !9201
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9211
  %14 = lshr i32 %13, 15, !dbg !9212
  %15 = and i32 %14, 6, !dbg !9212
  %16 = add nuw nsw i32 %15, 2, !dbg !9212
  call void @llvm.dbg.value(metadata i32 %16, metadata !9198, metadata !DIExpression()), !dbg !9201
  %17 = udiv i32 %12, %16, !dbg !9213
  br label %18, !dbg !9214

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !9215
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9216
  %21 = lshr i32 %20, 4, !dbg !9217
  %22 = and i32 %21, 15, !dbg !9217
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !9218
  %24 = load i8, i8* %23, align 1, !dbg !9218
  %25 = zext i8 %24 to i32, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %25, metadata !9196, metadata !DIExpression()), !dbg !9201
  %26 = lshr i32 %19, %25, !dbg !9219
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !9219
  ret void, !dbg !9220
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9221 {
  ret i32 0, !dbg !9226
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9227 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9254, metadata !DIExpression()), !dbg !9265
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9266
  br i1 %3, label %317, label %4, !dbg !9268

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9269
  %6 = load i32, i32* %5, align 4, !dbg !9269
  %7 = and i32 %6, 1, !dbg !9271
  %8 = icmp eq i32 %7, 0, !dbg !9272
  br i1 %8, label %66, label %9, !dbg !9273

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9274
  %11 = and i32 %10, 12, !dbg !9274
  %12 = icmp eq i32 %11, 4, !dbg !9277
  br i1 %12, label %21, label %13, !dbg !9278

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9279
  %15 = and i32 %14, 12, !dbg !9279
  %16 = icmp eq i32 %15, 8, !dbg !9280
  br i1 %16, label %17, label %29, !dbg !9281

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9282
  %19 = and i32 %18, 4194304, !dbg !9283
  %20 = icmp eq i32 %19, 0, !dbg !9284
  br i1 %20, label %29, label %21, !dbg !9285

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9286
  %23 = and i32 %22, 131072, !dbg !9286
  %24 = icmp eq i32 %23, 0, !dbg !9286
  br i1 %24, label %66, label %25, !dbg !9289

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9290
  %27 = load i32, i32* %26, align 4, !dbg !9290
  %28 = icmp eq i32 %27, 0, !dbg !9291
  br i1 %28, label %317, label %66, !dbg !9292

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9293
  %31 = load i32, i32* %30, align 4, !dbg !9293
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !9297

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9298
  %34 = or i32 %33, 65536, !dbg !9298
  br label %45, !dbg !9298

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9300
  %37 = or i32 %36, 262144, !dbg !9300
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9300
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9300
  %39 = or i32 %38, 65536, !dbg !9300
  br label %45, !dbg !9300

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9303
  %42 = and i32 %41, -65537, !dbg !9303
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9303
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9303
  %44 = and i32 %43, -262145, !dbg !9303
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9305
  %47 = load i32, i32* %30, align 4, !dbg !9306
  %48 = icmp eq i32 %47, 0, !dbg !9308
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %49, metadata !9255, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %49, metadata !9255, metadata !DIExpression()), !dbg !9265
  br i1 %48, label %58, label %50, !dbg !9310

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9311
  %52 = and i32 %51, 131072, !dbg !9313
  %53 = icmp eq i32 %52, 0, !dbg !9313
  br i1 %53, label %54, label %66, !dbg !9314

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !9315
  %56 = sub i32 %55, %49, !dbg !9318
  %57 = icmp ugt i32 %56, 100, !dbg !9319
  br i1 %57, label %317, label %50, !dbg !9320, !llvm.loop !9321

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9323
  %60 = and i32 %59, 131072, !dbg !9323
  %61 = icmp eq i32 %60, 0, !dbg !9323
  br i1 %61, label %66, label %62, !dbg !9325

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !9326
  %64 = sub i32 %63, %49, !dbg !9329
  %65 = icmp ugt i32 %64, 100, !dbg !9330
  br i1 %65, label %317, label %58, !dbg !9331, !llvm.loop !9332

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !9334
  %68 = and i32 %67, 2, !dbg !9336
  %69 = icmp eq i32 %68, 0, !dbg !9337
  br i1 %69, label %121, label %70, !dbg !9338

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9339
  %72 = and i32 %71, 12, !dbg !9339
  %73 = icmp eq i32 %72, 0, !dbg !9342
  br i1 %73, label %82, label %74, !dbg !9343

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9344
  %76 = and i32 %75, 12, !dbg !9344
  %77 = icmp eq i32 %76, 8, !dbg !9345
  br i1 %77, label %78, label %90, !dbg !9346

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9347
  %80 = and i32 %79, 4194304, !dbg !9348
  %81 = icmp eq i32 %80, 0, !dbg !9349
  br i1 %81, label %82, label %90, !dbg !9350

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9351
  %84 = and i32 %83, 2, !dbg !9351
  %85 = icmp eq i32 %84, 0, !dbg !9351
  br i1 %85, label %114, label %86, !dbg !9354

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9355
  %88 = load i32, i32* %87, align 4, !dbg !9355
  %89 = icmp eq i32 %88, 1, !dbg !9356
  br i1 %89, label %114, label %317, !dbg !9357

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9358
  %92 = load i32, i32* %91, align 4, !dbg !9358
  %93 = icmp eq i32 %92, 0, !dbg !9361
  br i1 %93, label %104, label %94, !dbg !9362

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9363
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %95, metadata !9255, metadata !DIExpression()), !dbg !9265
  br label %96, !dbg !9366

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9367
  %98 = and i32 %97, 2, !dbg !9368
  %99 = icmp eq i32 %98, 0, !dbg !9368
  br i1 %99, label %100, label %114, !dbg !9366

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !9369
  %102 = sub i32 %101, %95, !dbg !9372
  %103 = icmp ugt i32 %102, 2, !dbg !9373
  br i1 %103, label %317, label %96, !dbg !9374, !llvm.loop !9375

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9377
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %105, metadata !9255, metadata !DIExpression()), !dbg !9265
  br label %106, !dbg !9380

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9381
  %108 = and i32 %107, 2, !dbg !9381
  %109 = icmp eq i32 %108, 0, !dbg !9381
  br i1 %109, label %121, label %110, !dbg !9380

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !9382
  %112 = sub i32 %111, %105, !dbg !9385
  %113 = icmp ugt i32 %112, 2, !dbg !9386
  br i1 %113, label %317, label %106, !dbg !9387, !llvm.loop !9388

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9390
  %116 = and i32 %115, -249, !dbg !9390
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9390
  %118 = load i32, i32* %117, align 4, !dbg !9390
  %119 = shl i32 %118, 3, !dbg !9390
  %120 = or i32 %119, %116, !dbg !9390
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9390
  br label %121, !dbg !9391

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !9391
  %123 = and i32 %122, 8, !dbg !9393
  %124 = icmp eq i32 %123, 0, !dbg !9394
  br i1 %124, label %149, label %125, !dbg !9395

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9396
  %127 = load i32, i32* %126, align 4, !dbg !9396
  %128 = icmp eq i32 %127, 0, !dbg !9399
  br i1 %128, label %139, label %129, !dbg !9400

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9401
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !9403
  call void @llvm.dbg.value(metadata i32 %130, metadata !9255, metadata !DIExpression()), !dbg !9265
  br label %131, !dbg !9404

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9405
  %133 = and i32 %132, 2, !dbg !9406
  %134 = icmp eq i32 %133, 0, !dbg !9406
  br i1 %134, label %135, label %149, !dbg !9404

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !9407
  %137 = sub i32 %136, %130, !dbg !9410
  %138 = icmp ugt i32 %137, 2, !dbg !9411
  br i1 %138, label %317, label %131, !dbg !9412, !llvm.loop !9413

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9415
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %140, metadata !9255, metadata !DIExpression()), !dbg !9265
  br label %141, !dbg !9418

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9419
  %143 = and i32 %142, 2, !dbg !9419
  %144 = icmp eq i32 %143, 0, !dbg !9419
  br i1 %144, label %149, label %145, !dbg !9418

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !9420
  %147 = sub i32 %146, %140, !dbg !9423
  %148 = icmp ugt i32 %147, 2, !dbg !9424
  br i1 %148, label %317, label %141, !dbg !9425, !llvm.loop !9426

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !9428
  %151 = and i32 %150, 4, !dbg !9429
  %152 = icmp eq i32 %151, 0, !dbg !9430
  br i1 %152, label %221, label %153, !dbg !9431

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !9257, metadata !DIExpression()), !dbg !9432
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9433
  %155 = and i32 %154, 268435456, !dbg !9433
  %156 = icmp eq i32 %155, 0, !dbg !9433
  br i1 %156, label %157, label %164, !dbg !9434

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !9435
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !9435
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9261, metadata !DIExpression()), !dbg !9435
  store volatile i32 0, i32* %2, align 4, !dbg !9435
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9435
  %160 = or i32 %159, 268435456, !dbg !9435
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9435
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9435
  %162 = and i32 %161, 268435456, !dbg !9435
  store volatile i32 %162, i32* %2, align 4, !dbg !9435
  %163 = load volatile i32, i32* %2, align 4, !dbg !9435
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !9436
  call void @llvm.dbg.value(metadata i32 1, metadata !9257, metadata !DIExpression()), !dbg !9432
  br label %164, !dbg !9437

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !9257, metadata !DIExpression()), !dbg !9432
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9438
  %166 = and i32 %165, 256, !dbg !9438
  %167 = icmp eq i32 %166, 0, !dbg !9438
  br i1 %167, label %168, label %180, !dbg !9440

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9441
  %170 = or i32 %169, 256, !dbg !9441
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9441
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %171, metadata !9255, metadata !DIExpression()), !dbg !9265
  br label %172, !dbg !9444

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9445
  %174 = and i32 %173, 256, !dbg !9445
  %175 = icmp eq i32 %174, 0, !dbg !9445
  br i1 %175, label %176, label %180, !dbg !9444

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !9446
  %178 = sub i32 %177, %171, !dbg !9449
  %179 = icmp ugt i32 %178, 2, !dbg !9450
  br i1 %179, label %317, label %172, !dbg !9451, !llvm.loop !9452

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9454
  %182 = load i32, i32* %181, align 4, !dbg !9454
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !9457

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9458
  %185 = or i32 %184, 1, !dbg !9458
  br label %196, !dbg !9458

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9460
  %188 = or i32 %187, 4, !dbg !9460
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9460
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9460
  %190 = or i32 %189, 1, !dbg !9460
  br label %196, !dbg !9460

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9463
  %193 = and i32 %192, -2, !dbg !9463
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9463
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9463
  %195 = and i32 %194, -5, !dbg !9463
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9465
  %198 = load i32, i32* %181, align 4, !dbg !9466
  %199 = icmp eq i32 %198, 0, !dbg !9468
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !9469
  call void @llvm.dbg.value(metadata i32 %200, metadata !9255, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %200, metadata !9255, metadata !DIExpression()), !dbg !9265
  br i1 %199, label %209, label %201, !dbg !9470

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9471
  %203 = and i32 %202, 2, !dbg !9473
  %204 = icmp eq i32 %203, 0, !dbg !9473
  br i1 %204, label %205, label %217, !dbg !9474

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !9475
  %207 = sub i32 %206, %200, !dbg !9478
  %208 = icmp ugt i32 %207, 5000, !dbg !9479
  br i1 %208, label %317, label %201, !dbg !9480, !llvm.loop !9481

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9483
  %211 = and i32 %210, 2, !dbg !9483
  %212 = icmp eq i32 %211, 0, !dbg !9483
  br i1 %212, label %217, label %213, !dbg !9485

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !9486
  %215 = sub i32 %214, %200, !dbg !9489
  %216 = icmp ugt i32 %215, 5000, !dbg !9490
  br i1 %216, label %317, label %209, !dbg !9491, !llvm.loop !9492

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !9494

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9495
  %220 = and i32 %219, -268435457, !dbg !9495
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9495
  br label %221, !dbg !9498

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9499
  %223 = load i32, i32* %222, align 4, !dbg !9499
  %224 = icmp eq i32 %223, 0, !dbg !9501
  br i1 %224, label %316, label %225, !dbg !9502

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9503
  %227 = and i32 %226, 12, !dbg !9503
  %228 = icmp eq i32 %227, 8, !dbg !9506
  br i1 %228, label %277, label %229, !dbg !9507

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !9508
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9511
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %231, metadata !9255, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 %231, metadata !9255, metadata !DIExpression()), !dbg !9265
  br i1 %230, label %232, label %269, !dbg !9512

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9513
  %234 = and i32 %233, 33554432, !dbg !9513
  %235 = icmp eq i32 %234, 0, !dbg !9513
  br i1 %235, label %240, label %236, !dbg !9515

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !9516
  %238 = sub i32 %237, %231, !dbg !9519
  %239 = icmp ugt i32 %238, 2, !dbg !9520
  br i1 %239, label %317, label %232, !dbg !9521, !llvm.loop !9522

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9524
  %242 = load i32, i32* %241, align 4, !dbg !9524
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9524
  %244 = load i32, i32* %243, align 4, !dbg !9524
  %245 = or i32 %244, %242, !dbg !9524
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9524
  %247 = load i32, i32* %246, align 4, !dbg !9524
  %248 = shl i32 %247, 6, !dbg !9524
  %249 = or i32 %245, %248, !dbg !9524
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9524
  %251 = load i32, i32* %250, align 4, !dbg !9524
  %252 = shl i32 %251, 15, !dbg !9524
  %253 = add i32 %252, -65536, !dbg !9524
  %254 = and i32 %253, -65536, !dbg !9524
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9524
  %256 = load i32, i32* %255, align 4, !dbg !9524
  %257 = shl i32 %256, 24, !dbg !9524
  %258 = or i32 %249, %257, !dbg !9524
  %259 = or i32 %258, %254, !dbg !9524
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9524
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9525
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %260, metadata !9255, metadata !DIExpression()), !dbg !9265
  br label %261, !dbg !9527

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9528
  %263 = and i32 %262, 33554432, !dbg !9529
  %264 = icmp eq i32 %263, 0, !dbg !9529
  br i1 %264, label %265, label %316, !dbg !9527

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !9530
  %267 = sub i32 %266, %260, !dbg !9533
  %268 = icmp ugt i32 %267, 2, !dbg !9534
  br i1 %268, label %317, label %261, !dbg !9535, !llvm.loop !9536

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9538
  %271 = and i32 %270, 33554432, !dbg !9538
  %272 = icmp eq i32 %271, 0, !dbg !9538
  br i1 %272, label %316, label %273, !dbg !9540

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !9541
  %275 = sub i32 %274, %231, !dbg !9544
  %276 = icmp ugt i32 %275, 2, !dbg !9545
  br i1 %276, label %317, label %269, !dbg !9546, !llvm.loop !9547

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !9549
  br i1 %278, label %317, label %279, !dbg !9552

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9553
  call void @llvm.dbg.value(metadata i32 %280, metadata !9256, metadata !DIExpression()), !dbg !9265
  %281 = and i32 %280, 4194304, !dbg !9555
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9557
  %283 = load i32, i32* %282, align 4, !dbg !9557
  %284 = icmp eq i32 %281, %283, !dbg !9558
  br i1 %284, label %285, label %317, !dbg !9559

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !9560
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9561
  %288 = load i32, i32* %287, align 4, !dbg !9561
  %289 = icmp eq i32 %286, %288, !dbg !9562
  br i1 %289, label %290, label %317, !dbg !9563

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !9564
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9565
  %293 = load i32, i32* %292, align 4, !dbg !9565
  %294 = shl i32 %293, 6, !dbg !9566
  %295 = icmp eq i32 %291, %294, !dbg !9567
  br i1 %295, label %296, label %317, !dbg !9568

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !9569
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9570
  %299 = load i32, i32* %298, align 4, !dbg !9570
  %300 = shl i32 %299, 15, !dbg !9571
  %301 = add i32 %300, -65536, !dbg !9571
  %302 = and i32 %301, -65536, !dbg !9571
  %303 = icmp eq i32 %297, %302, !dbg !9572
  br i1 %303, label %304, label %317, !dbg !9573

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !9574
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9575
  %307 = load i32, i32* %306, align 4, !dbg !9575
  %308 = shl i32 %307, 24, !dbg !9576
  %309 = icmp eq i32 %305, %308, !dbg !9577
  br i1 %309, label %310, label %317, !dbg !9578

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !9579
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !9580
  %313 = load i32, i32* %312, align 4, !dbg !9580
  %314 = shl i32 %313, 28, !dbg !9581
  %315 = icmp eq i32 %311, %314, !dbg !9582
  br i1 %315, label %316, label %317, !dbg !9583

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !9584

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !9265
  ret i32 %318, !dbg !9585
}

; Function Attrs: optsize
declare !dbg !9586 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9588 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9601, metadata !DIExpression()), !dbg !9604
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()), !dbg !9604
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !9605
  br i1 %3, label %115, label %4, !dbg !9607

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9608
  %6 = and i32 %5, 7, !dbg !9608
  %7 = icmp ult i32 %6, %1, !dbg !9610
  br i1 %7, label %8, label %13, !dbg !9611

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !9612
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9612
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9614
  %11 = and i32 %10, 7, !dbg !9614
  %12 = icmp eq i32 %11, %1, !dbg !9616
  br i1 %12, label %13, label %115, !dbg !9617

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9618
  %15 = load i32, i32* %14, align 4, !dbg !9618
  %16 = and i32 %15, 2, !dbg !9620
  %17 = icmp eq i32 %16, 0, !dbg !9621
  br i1 %17, label %39, label %18, !dbg !9622

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !9623
  %20 = icmp eq i32 %19, 0, !dbg !9626
  br i1 %20, label %25, label %21, !dbg !9627

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9628
  %23 = or i32 %22, 7168, !dbg !9628
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9628
  %24 = load i32, i32* %14, align 4, !dbg !9630
  br label %25, !dbg !9632

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !9630
  %27 = and i32 %26, 8, !dbg !9633
  %28 = icmp eq i32 %27, 0, !dbg !9634
  br i1 %28, label %32, label %29, !dbg !9635

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9636
  %31 = or i32 %30, 57344, !dbg !9636
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9636
  br label %32, !dbg !9638

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9639
  %34 = and i32 %33, -241, !dbg !9639
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9639
  %36 = load i32, i32* %35, align 4, !dbg !9639
  %37 = or i32 %34, %36, !dbg !9639
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9639
  %38 = load i32, i32* %14, align 4, !dbg !9640
  br label %39, !dbg !9642

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !9640
  %41 = and i32 %40, 1, !dbg !9643
  %42 = icmp eq i32 %41, 0, !dbg !9644
  br i1 %42, label %73, label %43, !dbg !9645

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9646
  %45 = load i32, i32* %44, align 4, !dbg !9646
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !9649

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9650
  %48 = and i32 %47, 131072, !dbg !9653
  %49 = icmp eq i32 %48, 0, !dbg !9653
  br i1 %49, label %115, label %58, !dbg !9654

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9655
  %52 = and i32 %51, 33554432, !dbg !9659
  %53 = icmp eq i32 %52, 0, !dbg !9659
  br i1 %53, label %115, label %58, !dbg !9660

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9661
  %56 = and i32 %55, 2, !dbg !9664
  %57 = icmp eq i32 %56, 0, !dbg !9664
  br i1 %57, label %115, label %58, !dbg !9665

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9666
  %60 = and i32 %59, -4, !dbg !9666
  %61 = or i32 %60, %45, !dbg !9666
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9666
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %62, metadata !9603, metadata !DIExpression()), !dbg !9604
  br label %63, !dbg !9668

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9669
  %65 = and i32 %64, 12, !dbg !9669
  %66 = load i32, i32* %44, align 4, !dbg !9670
  %67 = shl i32 %66, 2, !dbg !9671
  %68 = icmp eq i32 %65, %67, !dbg !9672
  br i1 %68, label %73, label %69, !dbg !9668

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !9673
  %71 = sub i32 %70, %62, !dbg !9676
  %72 = icmp ugt i32 %71, 5000, !dbg !9677
  br i1 %72, label %115, label %63, !dbg !9678, !llvm.loop !9679

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9681
  %75 = and i32 %74, 7, !dbg !9681
  %76 = icmp ugt i32 %75, %1, !dbg !9683
  br i1 %76, label %77, label %82, !dbg !9684

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !9685
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9685
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9687
  %80 = and i32 %79, 7, !dbg !9687
  %81 = icmp eq i32 %80, %1, !dbg !9689
  br i1 %81, label %82, label %115, !dbg !9690

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !9691
  %84 = and i32 %83, 4, !dbg !9693
  %85 = icmp eq i32 %84, 0, !dbg !9694
  br i1 %85, label %93, label %86, !dbg !9695

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9696
  %88 = and i32 %87, -7169, !dbg !9696
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9696
  %90 = load i32, i32* %89, align 4, !dbg !9696
  %91 = or i32 %88, %90, !dbg !9696
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9696
  %92 = load i32, i32* %14, align 4, !dbg !9698
  br label %93, !dbg !9700

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !9698
  %95 = and i32 %94, 8, !dbg !9701
  %96 = icmp eq i32 %95, 0, !dbg !9702
  br i1 %96, label %104, label %97, !dbg !9703

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9704
  %99 = and i32 %98, -57345, !dbg !9704
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9704
  %101 = load i32, i32* %100, align 4, !dbg !9704
  %102 = shl i32 %101, 3, !dbg !9704
  %103 = or i32 %102, %99, !dbg !9704
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9704
  br label %104, !dbg !9706

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !9707
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9708
  %107 = lshr i32 %106, 4, !dbg !9709
  %108 = and i32 %107, 15, !dbg !9709
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !9710
  %110 = load i8, i8* %109, align 1, !dbg !9710
  %111 = zext i8 %110 to i32, !dbg !9710
  %112 = lshr i32 %105, %111, !dbg !9711
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !9712
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !9713
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !9714
  br label %115, !dbg !9715

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !9604
  ret i32 %116, !dbg !9716
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !9717 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9719, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 0, metadata !9720, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 0, metadata !9721, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 0, metadata !9722, metadata !DIExpression()), !dbg !9723
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9724
  %2 = and i32 %1, 12, !dbg !9725
  %3 = icmp eq i32 %2, 8, !dbg !9726
  br i1 %3, label %4, label %21, !dbg !9726

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9727
  %6 = and i32 %5, 63, !dbg !9730
  call void @llvm.dbg.value(metadata i32 %6, metadata !9719, metadata !DIExpression()), !dbg !9723
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9731
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9733
  %9 = lshr i32 %8, 6, !dbg !9733
  %10 = and i32 %9, 511, !dbg !9733
  %11 = zext i32 %10 to i64, !dbg !9733
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !9733
  %13 = zext i32 %6 to i64, !dbg !9733
  %14 = udiv i64 %12, %13, !dbg !9733
  %15 = trunc i64 %14 to i32, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %15, metadata !9720, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 %15, metadata !9720, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 %15, metadata !9720, metadata !DIExpression()), !dbg !9723
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9734
  %17 = lshr i32 %16, 15, !dbg !9735
  %18 = and i32 %17, 6, !dbg !9735
  %19 = add nuw nsw i32 %18, 2, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %19, metadata !9721, metadata !DIExpression()), !dbg !9723
  %20 = udiv i32 %15, %19, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %20, metadata !9722, metadata !DIExpression()), !dbg !9723
  br label %21, !dbg !9737

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !9738
  call void @llvm.dbg.value(metadata i32 %22, metadata !9722, metadata !DIExpression()), !dbg !9723
  ret i32 %22, !dbg !9739
}

; Function Attrs: optsize
declare !dbg !9740 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9743 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9747, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.value(metadata i32 %1, metadata !9748, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.value(metadata i32 %2, metadata !9749, metadata !DIExpression()), !dbg !9764
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !9765
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !9765
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !9750, metadata !DIExpression()), !dbg !9766
  %7 = icmp eq i32 %0, 0, !dbg !9767
  br i1 %7, label %8, label %24, !dbg !9768

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !9769
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !9769
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9760, metadata !DIExpression()), !dbg !9769
  store volatile i32 0, i32* %5, align 4, !dbg !9769
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9769
  %11 = or i32 %10, 1, !dbg !9769
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9769
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9769
  %13 = and i32 %12, 1, !dbg !9769
  store volatile i32 %13, i32* %5, align 4, !dbg !9769
  %14 = load volatile i32, i32* %5, align 4, !dbg !9769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !9770
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9771
  store i32 256, i32* %15, align 4, !dbg !9772
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9773
  store i32 2, i32* %16, align 4, !dbg !9774
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9775
  store i32 3, i32* %17, align 4, !dbg !9776
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9777
  store i32 0, i32* %18, align 4, !dbg !9778
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9779
  store i32 0, i32* %19, align 4, !dbg !9780
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !9781
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9782
  %21 = and i32 %20, -123731969, !dbg !9782
  %22 = or i32 %2, %1, !dbg !9782
  %23 = or i32 %22, %21, !dbg !9782
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9782
  br label %24, !dbg !9783

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !9784
  ret void, !dbg !9784
}

; Function Attrs: optsize
declare !dbg !9785 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !9789 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9790
  ret void, !dbg !9791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !9792 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9793
  ret void, !dbg !9794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !9795 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !9796
  ret i32 %1, !dbg !9797
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !9798 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !9799
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9800
  %3 = lshr i32 %2, 10, !dbg !9801
  %4 = and i32 %3, 7, !dbg !9801
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9802
  %6 = load i8, i8* %5, align 1, !dbg !9802
  %7 = zext i8 %6 to i32, !dbg !9802
  %8 = lshr i32 %1, %7, !dbg !9803
  ret i32 %8, !dbg !9804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !9805 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !9806
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9807
  %3 = lshr i32 %2, 13, !dbg !9808
  %4 = and i32 %3, 7, !dbg !9808
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9809
  %6 = load i8, i8* %5, align 1, !dbg !9809
  %7 = zext i8 %6 to i32, !dbg !9809
  %8 = lshr i32 %1, %7, !dbg !9810
  ret i32 %8, !dbg !9811
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9812 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9816, metadata !DIExpression()), !dbg !9817
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9818
  store i32 15, i32* %2, align 4, !dbg !9819
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9820
  %4 = and i32 %3, 262144, !dbg !9822
  %5 = icmp eq i32 %4, 0, !dbg !9823
  br i1 %5, label %8, label %6, !dbg !9824

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9825
  store i32 327680, i32* %7, align 4, !dbg !9827
  br label %15, !dbg !9828

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9829
  %10 = and i32 %9, 65536, !dbg !9831
  %11 = icmp eq i32 %10, 0, !dbg !9832
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9833
  br i1 %11, label %14, label %13, !dbg !9834

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !9835
  br label %15, !dbg !9837

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !9838
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9840
  %17 = and i32 %16, 1, !dbg !9842
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9843
  store i32 %17, i32* %18, align 4, !dbg !9845
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9846
  %20 = lshr i32 %19, 3, !dbg !9847
  %21 = and i32 %20, 31, !dbg !9847
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9848
  store i32 %21, i32* %22, align 4, !dbg !9849
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9850
  %24 = and i32 %23, 4, !dbg !9852
  %25 = icmp eq i32 %24, 0, !dbg !9853
  br i1 %25, label %28, label %26, !dbg !9854

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9855
  store i32 5, i32* %27, align 4, !dbg !9857
  br label %35, !dbg !9858

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9859
  %30 = and i32 %29, 1, !dbg !9861
  %31 = icmp eq i32 %30, 0, !dbg !9862
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9863
  br i1 %31, label %34, label %33, !dbg !9864

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !9865
  br label %35, !dbg !9867

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !9868
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9870
  %37 = and i32 %36, 1, !dbg !9872
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9873
  store i32 %37, i32* %38, align 4, !dbg !9875
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9876
  %40 = and i32 %39, 16777216, !dbg !9878
  %41 = icmp eq i32 %40, 0, !dbg !9879
  %42 = select i1 %41, i32 1, i32 2, !dbg !9880
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9881
  store i32 %42, i32* %43, align 4, !dbg !9883
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9884
  %45 = and i32 %44, 4194304, !dbg !9885
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9886
  store i32 %45, i32* %46, align 4, !dbg !9887
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9888
  %48 = and i32 %47, 63, !dbg !9889
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9890
  store i32 %48, i32* %49, align 4, !dbg !9891
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9892
  %51 = lshr i32 %50, 6, !dbg !9893
  %52 = and i32 %51, 511, !dbg !9893
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9894
  store i32 %52, i32* %53, align 4, !dbg !9895
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9896
  %55 = shl i32 %54, 1, !dbg !9897
  %56 = and i32 %55, 393216, !dbg !9897
  %57 = add nuw nsw i32 %56, 131072, !dbg !9897
  %58 = lshr exact i32 %57, 16, !dbg !9898
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9899
  store i32 %58, i32* %59, align 4, !dbg !9900
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9901
  %61 = lshr i32 %60, 24, !dbg !9902
  %62 = and i32 %61, 15, !dbg !9902
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9903
  store i32 %62, i32* %63, align 4, !dbg !9904
  ret void, !dbg !9905
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !9906 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9910, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32* %1, metadata !9911, metadata !DIExpression()), !dbg !9912
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9913
  store i32 15, i32* %3, align 4, !dbg !9914
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9915
  %5 = and i32 %4, 3, !dbg !9916
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9917
  store i32 %5, i32* %6, align 4, !dbg !9918
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9919
  %8 = and i32 %7, 240, !dbg !9920
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9921
  store i32 %8, i32* %9, align 4, !dbg !9922
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9923
  %11 = and i32 %10, 7168, !dbg !9924
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9925
  store i32 %11, i32* %12, align 4, !dbg !9926
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9927
  %14 = lshr i32 %13, 3, !dbg !9928
  %15 = and i32 %14, 7168, !dbg !9928
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9929
  store i32 %15, i32* %16, align 4, !dbg !9930
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9931
  %18 = and i32 %17, 7, !dbg !9932
  store i32 %18, i32* %1, align 4, !dbg !9933
  ret void, !dbg !9934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !9935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9936
  %2 = and i32 %1, 128, !dbg !9936
  %3 = icmp eq i32 %2, 0, !dbg !9936
  br i1 %3, label %5, label %4, !dbg !9938

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !9939
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !9941
  br label %5, !dbg !9942

5:                                                ; preds = %4, %0
  ret void, !dbg !9943
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !9944 {
  ret void, !dbg !9945
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !9946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9949, metadata !DIExpression()), !dbg !9950
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !9951
  ret void, !dbg !9952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !9953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9956, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata i32 1000, metadata !9957, metadata !DIExpression()), !dbg !9958
  %2 = udiv i32 %0, 1000, !dbg !9959
  %3 = add nsw i32 %2, -1, !dbg !9960
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9961
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9962
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9963
  ret void, !dbg !9964
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !9965 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9967, metadata !DIExpression()), !dbg !9969
  %3 = bitcast i32* %2 to i8*, !dbg !9970
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9970
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9968, metadata !DIExpression()), !dbg !9971
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9972
  store volatile i32 %4, i32* %2, align 4, !dbg !9971
  %5 = load volatile i32, i32* %2, align 4, !dbg !9973
  %6 = icmp eq i32 %0, -1, !dbg !9974
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9967, metadata !DIExpression()), !dbg !9969
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %8, metadata !9967, metadata !DIExpression()), !dbg !9969
  br label %9, !dbg !9976

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9967, metadata !DIExpression()), !dbg !9969
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9977
  call void @llvm.dbg.value(metadata i32 undef, metadata !9967, metadata !DIExpression()), !dbg !9969
  %12 = shl i32 %11, 15, !dbg !9969
  %13 = ashr i32 %12, 31, !dbg !9969
  %14 = add i32 %13, %10, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %14, metadata !9967, metadata !DIExpression()), !dbg !9969
  %15 = icmp eq i32 %14, 0, !dbg !9976
  br i1 %15, label %16, label %9, !dbg !9976

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9980
  ret void, !dbg !9980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #3 !dbg !9981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9983, metadata !DIExpression()), !dbg !9984
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !9985
  ret void, !dbg !9986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !9987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9992, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 0, metadata !9995, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 0, metadata !9996, metadata !DIExpression()), !dbg !9997
  %2 = icmp eq i32 %0, 0, !dbg !9998
  br i1 %2, label %50, label %3, !dbg !10000

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10001
  %5 = icmp eq i32 %4, 49152, !dbg !10004
  br i1 %5, label %6, label %15, !dbg !10005

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !9995, metadata !DIExpression()), !dbg !9997
  %7 = add i32 %0, -64000001, !dbg !10006
  %8 = icmp ult i32 %7, 26000000, !dbg !10006
  br i1 %8, label %15, label %9, !dbg !10006

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !10009
  %11 = select i1 %10, i32 0, i32 3, !dbg !10011
  call void @llvm.dbg.value(metadata i32 %11, metadata !9995, metadata !DIExpression()), !dbg !9997
  %12 = add i32 %0, -30000001, !dbg !10012
  %13 = icmp ult i32 %12, 60000000, !dbg !10012
  %14 = select i1 %13, i32 1, i32 %11, !dbg !10012
  call void @llvm.dbg.value(metadata i32 %14, metadata !9995, metadata !DIExpression()), !dbg !9997
  br label %15, !dbg !10012

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !9997
  call void @llvm.dbg.value(metadata i32 %16, metadata !9995, metadata !DIExpression()), !dbg !9997
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10015
  %18 = icmp eq i32 %17, 32768, !dbg !10017
  br i1 %18, label %19, label %27, !dbg !10018

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !10019
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !10022
  br i1 %22, label %27, label %23, !dbg !10022

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !10023
  %25 = and i1 %24, %21, !dbg !10026
  %26 = select i1 %25, i32 1, i32 %16, !dbg !10026
  call void @llvm.dbg.value(metadata i32 %26, metadata !9995, metadata !DIExpression()), !dbg !9997
  br label %27, !dbg !10026

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !10027
  call void @llvm.dbg.value(metadata i32 %28, metadata !9995, metadata !DIExpression()), !dbg !9997
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10028
  %30 = icmp eq i32 %29, 16384, !dbg !10030
  br i1 %30, label %31, label %39, !dbg !10031

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !10032
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !10035
  br i1 %34, label %39, label %35, !dbg !10035

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !10036
  %37 = select i1 %36, i1 %33, i1 false, !dbg !10039
  %38 = select i1 %37, i32 1, i32 %28, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %38, metadata !9995, metadata !DIExpression()), !dbg !9997
  br label %39, !dbg !10039

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !10027
  call void @llvm.dbg.value(metadata i32 %40, metadata !9995, metadata !DIExpression()), !dbg !9997
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !10040
  call void @llvm.dbg.value(metadata i32 2, metadata !9993, metadata !DIExpression()), !dbg !9997
  br label %41, !dbg !10041

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !10027
  call void @llvm.dbg.value(metadata i32 %42, metadata !9993, metadata !DIExpression()), !dbg !9997
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !10042
  call void @llvm.dbg.value(metadata i32 %43, metadata !9994, metadata !DIExpression()), !dbg !9997
  %44 = add nsw i32 %42, -1, !dbg !10044
  call void @llvm.dbg.value(metadata i32 %44, metadata !9993, metadata !DIExpression()), !dbg !9997
  %45 = icmp ne i32 %43, %40, !dbg !10045
  %46 = icmp ne i32 %44, 0, !dbg !10046
  %47 = select i1 %45, i1 %46, i1 false, !dbg !10046
  br i1 %47, label %41, label %48, !dbg !10047, !llvm.loop !10048

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !10050
  call void @llvm.dbg.value(metadata i32 %51, metadata !9996, metadata !DIExpression()), !dbg !9997
  ret i32 %51, !dbg !10051
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10052 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10054
  %2 = and i32 %1, 49152, !dbg !10054
  ret i32 %2, !dbg !10055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10058, metadata !DIExpression()), !dbg !10059
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10060
  %3 = and i32 %2, -8, !dbg !10060
  %4 = or i32 %3, %0, !dbg !10060
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10060
  ret void, !dbg !10061
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10062 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10063
  %2 = and i32 %1, 7, !dbg !10063
  ret i32 %2, !dbg !10064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10065 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10083, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10084, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 0, metadata !10085, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 0, metadata !10086, metadata !DIExpression()), !dbg !10087
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10088
  %4 = icmp eq i32 %3, 0, !dbg !10090
  br i1 %4, label %5, label %21, !dbg !10091

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !10092
  call void @llvm.dbg.value(metadata i32 %6, metadata !10086, metadata !DIExpression()), !dbg !10087
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.69() #24, !dbg !10094
  %8 = icmp eq i32 %7, 1, !dbg !10096
  br i1 %8, label %13, label %9, !dbg !10097

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.70() #24, !dbg !10098
  br label %10, !dbg !10100

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.69() #24, !dbg !10101
  %12 = icmp eq i32 %11, 1, !dbg !10102
  br i1 %12, label %13, label %10, !dbg !10100, !llvm.loop !10103

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10105
  %15 = load i32, i32* %14, align 4, !dbg !10105
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10106
  %17 = load i32, i32* %16, align 4, !dbg !10106
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10107
  %19 = load i32, i32* %18, align 4, !dbg !10107
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.71(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !10108
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !10109
  call void @llvm.dbg.value(metadata i32 %20, metadata !10085, metadata !DIExpression()), !dbg !10087
  br label %21, !dbg !10110

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10111
  call void @llvm.dbg.value(metadata i32 %22, metadata !10085, metadata !DIExpression()), !dbg !10087
  ret i32 %22, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10113 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10117, metadata !DIExpression()), !dbg !10118
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.73() #24, !dbg !10119
  %2 = icmp ne i32 %1, 0, !dbg !10121
  call void @llvm.dbg.value(metadata i1 %2, metadata !10117, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10118
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !10122
  %4 = icmp ne i32 %3, 0, !dbg !10124
  %5 = select i1 %4, i1 true, i1 %2, !dbg !10125
  %6 = zext i1 %5 to i32, !dbg !10125
  call void @llvm.dbg.value(metadata i32 %6, metadata !10117, metadata !DIExpression()), !dbg !10118
  ret i32 %6, !dbg !10126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10131, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10132, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata i32 0, metadata !10133, metadata !DIExpression()), !dbg !10134
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10135
  %4 = load i32, i32* %3, align 4, !dbg !10135
  %5 = and i32 %4, 63, !dbg !10136
  %6 = udiv i32 %0, %5, !dbg !10137
  call void @llvm.dbg.value(metadata i32 %6, metadata !10133, metadata !DIExpression()), !dbg !10134
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10138
  %8 = load i32, i32* %7, align 4, !dbg !10138
  %9 = and i32 %8, 511, !dbg !10139
  %10 = mul i32 %9, %6, !dbg !10140
  call void @llvm.dbg.value(metadata i32 %10, metadata !10133, metadata !DIExpression()), !dbg !10134
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10141
  %12 = load i32, i32* %11, align 4, !dbg !10141
  %13 = lshr i32 %12, 15, !dbg !10142
  %14 = and i32 %13, 131070, !dbg !10142
  %15 = add nuw nsw i32 %14, 2, !dbg !10142
  %16 = udiv i32 %10, %15, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %16, metadata !10133, metadata !DIExpression()), !dbg !10134
  ret i32 %16, !dbg !10144
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.69() unnamed_addr #14 !dbg !10145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10146
  %2 = lshr i32 %1, 1, !dbg !10147
  %3 = and i32 %2, 1, !dbg !10147
  ret i32 %3, !dbg !10148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.70() unnamed_addr #13 !dbg !10149 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10150
  %2 = or i32 %1, 1, !dbg !10150
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10150
  ret void, !dbg !10151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.71(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10154, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %1, metadata !10155, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %2, metadata !10156, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %3, metadata !10157, metadata !DIExpression()), !dbg !10158
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10159
  %6 = and i32 %5, -4227072, !dbg !10159
  %7 = or i32 %1, %0, !dbg !10159
  %8 = shl i32 %2, 6, !dbg !10159
  %9 = or i32 %7, %8, !dbg !10159
  %10 = or i32 %9, %6, !dbg !10159
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10159
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10160
  %12 = and i32 %11, -196609, !dbg !10160
  %13 = or i32 %12, %3, !dbg !10160
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10160
  ret void, !dbg !10161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10166, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10167, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 0, metadata !10168, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 0, metadata !10169, metadata !DIExpression()), !dbg !10170
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10171
  %4 = load i32, i32* %3, align 4, !dbg !10171
  %5 = lshr i32 %4, 4, !dbg !10171
  %6 = and i32 %5, 15, !dbg !10171
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10171
  %8 = load i8, i8* %7, align 1, !dbg !10171
  %9 = zext i8 %8 to i32, !dbg !10171
  %10 = lshr i32 %0, %9, !dbg !10171
  call void @llvm.dbg.value(metadata i32 %10, metadata !10169, metadata !DIExpression()), !dbg !10170
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10172
  %12 = icmp ult i32 %11, %10, !dbg !10174
  br i1 %12, label %13, label %16, !dbg !10175

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %14, metadata !10168, metadata !DIExpression()), !dbg !10170
  %15 = icmp eq i32 %14, 0, !dbg !10178
  br i1 %15, label %16, label %30, !dbg !10180

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.72() #24, !dbg !10181
  br label %17, !dbg !10183

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.73() #24, !dbg !10184
  %19 = icmp eq i32 %18, 1, !dbg !10185
  br i1 %19, label %20, label %17, !dbg !10183, !llvm.loop !10186

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10188
  tail call fastcc void @LL_RCC_SetAHBPrescaler.74(i32 noundef %21) #24, !dbg !10189
  tail call fastcc void @LL_RCC_SetSysClkSource.75() #24, !dbg !10190
  br label %22, !dbg !10191

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.76() #24, !dbg !10192
  %24 = icmp eq i32 %23, 8, !dbg !10193
  br i1 %24, label %25, label %22, !dbg !10191, !llvm.loop !10194

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10196
  %27 = load i32, i32* %26, align 4, !dbg !10196
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.77(i32 noundef %27) #24, !dbg !10197
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10198
  %29 = load i32, i32* %28, align 4, !dbg !10198
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.78(i32 noundef %29) #24, !dbg !10199
  br label %30, !dbg !10200

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10201
  %33 = icmp ugt i32 %32, %10, !dbg !10203
  br i1 %33, label %34, label %36, !dbg !10204

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10205
  call void @llvm.dbg.value(metadata i32 %35, metadata !10168, metadata !DIExpression()), !dbg !10170
  br label %36, !dbg !10207

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10170
  call void @llvm.dbg.value(metadata i32 %37, metadata !10168, metadata !DIExpression()), !dbg !10170
  %38 = icmp eq i32 %37, 0, !dbg !10208
  br i1 %38, label %39, label %40, !dbg !10210

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !10211
  br label %40, !dbg !10213

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.72() unnamed_addr #13 !dbg !10215 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10216
  %2 = or i32 %1, 16777216, !dbg !10216
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10216
  ret void, !dbg !10217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.73() unnamed_addr #14 !dbg !10218 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10219
  %2 = lshr i32 %1, 25, !dbg !10220
  %3 = and i32 %2, 1, !dbg !10220
  ret i32 %3, !dbg !10221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.74(i32 noundef %0) unnamed_addr #13 !dbg !10222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10224, metadata !DIExpression()), !dbg !10225
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10226
  %3 = and i32 %2, -241, !dbg !10226
  %4 = or i32 %3, %0, !dbg !10226
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10226
  ret void, !dbg !10227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.75() unnamed_addr #13 !dbg !10228 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10230, metadata !DIExpression()), !dbg !10231
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10232
  %2 = and i32 %1, -4, !dbg !10232
  %3 = or i32 %2, 2, !dbg !10232
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.76() unnamed_addr #14 !dbg !10234 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10235
  %2 = and i32 %1, 12, !dbg !10235
  ret i32 %2, !dbg !10236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.77(i32 noundef %0) unnamed_addr #13 !dbg !10237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10239, metadata !DIExpression()), !dbg !10240
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10241
  %3 = and i32 %2, -7169, !dbg !10241
  %4 = or i32 %3, %0, !dbg !10241
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10241
  ret void, !dbg !10242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.78(i32 noundef %0) unnamed_addr #13 !dbg !10243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10245, metadata !DIExpression()), !dbg !10246
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10247
  %3 = and i32 %2, -57345, !dbg !10247
  %4 = or i32 %3, %0, !dbg !10247
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10247
  ret void, !dbg !10248
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10249 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10250
  %2 = lshr i32 %1, 27, !dbg !10251
  %3 = and i32 %2, 1, !dbg !10251
  ret i32 %3, !dbg !10252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10257, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 %1, metadata !10258, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10259, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10260, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 0, metadata !10261, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.value(metadata i32 0, metadata !10262, metadata !DIExpression()), !dbg !10263
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10264
  %6 = icmp eq i32 %5, 0, !dbg !10266
  br i1 %6, label %7, label %27, !dbg !10267

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !10268
  call void @llvm.dbg.value(metadata i32 %8, metadata !10262, metadata !DIExpression()), !dbg !10263
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.79() #24, !dbg !10270
  %10 = icmp eq i32 %9, 1, !dbg !10272
  br i1 %10, label %19, label %11, !dbg !10273

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10274
  br i1 %12, label %13, label %14, !dbg !10277

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !10278
  br label %15, !dbg !10280

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.80() #24, !dbg !10281
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.81() #24, !dbg !10283
  br label %16, !dbg !10284

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.79() #24, !dbg !10285
  %18 = icmp eq i32 %17, 1, !dbg !10286
  br i1 %18, label %19, label %16, !dbg !10284, !llvm.loop !10287

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10289
  %21 = load i32, i32* %20, align 4, !dbg !10289
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10290
  %23 = load i32, i32* %22, align 4, !dbg !10290
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10291
  %25 = load i32, i32* %24, align 4, !dbg !10291
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.71(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !10292
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !10293
  call void @llvm.dbg.value(metadata i32 %26, metadata !10261, metadata !DIExpression()), !dbg !10263
  br label %27, !dbg !10294

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10295
  call void @llvm.dbg.value(metadata i32 %28, metadata !10261, metadata !DIExpression()), !dbg !10263
  ret i32 %28, !dbg !10296
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.79() unnamed_addr #14 !dbg !10297 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10298
  %2 = lshr i32 %1, 17, !dbg !10299
  %3 = and i32 %2, 1, !dbg !10299
  ret i32 %3, !dbg !10300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10301 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10302
  %2 = or i32 %1, 262144, !dbg !10302
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10302
  ret void, !dbg !10303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.80() unnamed_addr #13 !dbg !10304 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10305
  %2 = and i32 %1, -262145, !dbg !10305
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10305
  ret void, !dbg !10306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.81() unnamed_addr #13 !dbg !10307 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10308
  %2 = or i32 %1, 65536, !dbg !10308
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10308
  ret void, !dbg !10309
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10310 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10313, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 undef, metadata !10313, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 undef, metadata !10313, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10329
  ret void, !dbg !10330
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10331 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10335, metadata !DIExpression()), !dbg !10337
  %2 = icmp eq i8* %0, null, !dbg !10338
  br i1 %2, label %29, label %3, !dbg !10340

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10341
  %5 = icmp eq i8 %4, 0, !dbg !10342
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10343
  br i1 %6, label %29, label %8, !dbg !10343

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10336, metadata !DIExpression()), !dbg !10337
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10344

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10336, metadata !DIExpression()), !dbg !10337
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !10346
  br i1 %10, label %11, label %15, !dbg !10351

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10352
  %13 = load i8*, i8** %12, align 4, !dbg !10352
  %14 = icmp eq i8* %13, %0, !dbg !10353
  br i1 %14, label %29, label %15, !dbg !10354

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10355
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10336, metadata !DIExpression()), !dbg !10337
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10356
  br i1 %17, label %7, label %8, !dbg !10357, !llvm.loop !10358

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10336, metadata !DIExpression()), !dbg !10337
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !10360
  br i1 %20, label %21, label %26, !dbg !10364

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10365
  %23 = load i8*, i8** %22, align 4, !dbg !10365
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !10366
  %25 = icmp eq i32 %24, 0, !dbg !10367
  br i1 %25, label %29, label %26, !dbg !10368

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10369
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10336, metadata !DIExpression()), !dbg !10337
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10370
  br i1 %28, label %29, label %18, !dbg !10344, !llvm.loop !10371

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10337
  ret %struct.device* %30, !dbg !10373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !10374 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10378, metadata !DIExpression()), !dbg !10379
  %2 = icmp eq %struct.device* %0, null, !dbg !10380
  br i1 %2, label %14, label %3, !dbg !10382

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10383
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10383
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10384
  %7 = load i8, i8* %6, align 1, !dbg !10384
  %8 = and i8 %7, 1, !dbg !10384
  %9 = icmp eq i8 %8, 0, !dbg !10384
  br i1 %9, label %14, label %10, !dbg !10385

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10386
  %12 = load i8, i8* %11, align 1, !dbg !10386
  %13 = icmp eq i8 %12, 0, !dbg !10387
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10379
  ret i1 %15, !dbg !10388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10394, metadata !DIExpression()), !dbg !10395
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10396
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10398 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10406, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10407, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i8* %2, metadata !10408, metadata !DIExpression()), !dbg !10411
  %5 = bitcast i32* %4 to i8*, !dbg !10412
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10412
  call void @llvm.dbg.value(metadata i32 0, metadata !10409, metadata !DIExpression()), !dbg !10411
  store i32 0, i32* %4, align 4, !dbg !10413
  call void @llvm.dbg.value(metadata i32* %4, metadata !10409, metadata !DIExpression(DW_OP_deref)), !dbg !10411
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10414
  call void @llvm.dbg.value(metadata i16* %6, metadata !10410, metadata !DIExpression()), !dbg !10411
  %7 = load i32, i32* %4, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata i32 %7, metadata !10409, metadata !DIExpression()), !dbg !10411
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10416
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10417
  ret i32 %8, !dbg !10418
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10423, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32* %1, metadata !10424, metadata !DIExpression()), !dbg !10429
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10430
  %4 = load i16*, i16** %3, align 4, !dbg !10430
  call void @llvm.dbg.value(metadata i16* %4, metadata !10425, metadata !DIExpression()), !dbg !10429
  %5 = icmp eq i16* %4, null, !dbg !10431
  br i1 %5, label %14, label %6, !dbg !10432

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10433
  call void @llvm.dbg.value(metadata i32 %7, metadata !10426, metadata !DIExpression()), !dbg !10433
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10434
  %9 = load i16, i16* %8, align 2, !dbg !10434
  %10 = add i16 %9, -32767, !dbg !10435
  %11 = icmp ult i16 %10, 2, !dbg !10435
  %12 = add i32 %7, 1, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %12, metadata !10426, metadata !DIExpression()), !dbg !10433
  br i1 %11, label %13, label %6, !dbg !10435, !llvm.loop !10438

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10441
  br label %14, !dbg !10442

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10444 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10448, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %1, metadata !10449, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10450, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i8* %3, metadata !10451, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 0, metadata !10452, metadata !DIExpression()), !dbg !10460
  %5 = icmp eq i32 %1, 0, !dbg !10461
  br i1 %5, label %16, label %8, !dbg !10462

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10452, metadata !DIExpression()), !dbg !10460
  %7 = icmp eq i32 %15, %1, !dbg !10461
  br i1 %7, label %16, label %8, !dbg !10462, !llvm.loop !10463

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10452, metadata !DIExpression()), !dbg !10460
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10465
  %11 = load i16, i16* %10, align 2, !dbg !10465
  call void @llvm.dbg.value(metadata i16 %11, metadata !10454, metadata !DIExpression()), !dbg !10466
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !10467
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10457, metadata !DIExpression()), !dbg !10466
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %13, metadata !10458, metadata !DIExpression()), !dbg !10466
  %14 = icmp slt i32 %13, 0, !dbg !10469
  %15 = add nuw i32 %9, 1, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %15, metadata !10452, metadata !DIExpression()), !dbg !10460
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !10473 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10477, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10478, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10479, metadata !DIExpression()), !dbg !10480
  %2 = sext i16 %0 to i32, !dbg !10481
  %3 = icmp slt i16 %0, 1, !dbg !10483
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10484
  %6 = add nsw i32 %2, -1, !dbg !10484
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10484
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10484
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10478, metadata !DIExpression()), !dbg !10480
  ret %struct.device* %8, !dbg !10485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10486 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10488, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10489, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata i8* %2, metadata !10490, metadata !DIExpression()), !dbg !10493
  %5 = bitcast i32* %4 to i8*, !dbg !10494
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10494
  call void @llvm.dbg.value(metadata i32 0, metadata !10491, metadata !DIExpression()), !dbg !10493
  store i32 0, i32* %4, align 4, !dbg !10495
  call void @llvm.dbg.value(metadata i32* %4, metadata !10491, metadata !DIExpression(DW_OP_deref)), !dbg !10493
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !10496
  call void @llvm.dbg.value(metadata i16* %6, metadata !10492, metadata !DIExpression()), !dbg !10493
  %7 = load i32, i32* %4, align 4, !dbg !10497
  call void @llvm.dbg.value(metadata i32 %7, metadata !10491, metadata !DIExpression()), !dbg !10493
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !10498
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10499
  ret i32 %8, !dbg !10500
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10503, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32* %1, metadata !10504, metadata !DIExpression()), !dbg !10508
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10509
  %4 = load i16*, i16** %3, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata i16* %4, metadata !10505, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 0, metadata !10506, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i32 0, metadata !10507, metadata !DIExpression()), !dbg !10508
  %5 = icmp eq i16* %4, null, !dbg !10510
  br i1 %5, label %22, label %6, !dbg !10512

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10506, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i16* %8, metadata !10505, metadata !DIExpression()), !dbg !10508
  %9 = load i16, i16* %8, align 2, !dbg !10513
  %10 = icmp eq i16 %9, -32768, !dbg !10517
  call void @llvm.dbg.value(metadata i32 undef, metadata !10506, metadata !DIExpression()), !dbg !10508
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10518
  call void @llvm.dbg.value(metadata i16* %11, metadata !10505, metadata !DIExpression()), !dbg !10508
  %12 = zext i1 %10 to i32, !dbg !10519
  %13 = add i32 %7, %12, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %13, metadata !10506, metadata !DIExpression()), !dbg !10508
  %14 = icmp eq i32 %13, 2, !dbg !10520
  br i1 %14, label %15, label %6, !dbg !10521

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10508
  call void @llvm.dbg.value(metadata i32 %16, metadata !10507, metadata !DIExpression()), !dbg !10508
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10522
  %18 = load i16, i16* %17, align 2, !dbg !10522
  %19 = icmp eq i16 %18, 32767, !dbg !10523
  %20 = add i32 %16, 1, !dbg !10524
  call void @llvm.dbg.value(metadata i32 %20, metadata !10507, metadata !DIExpression()), !dbg !10508
  br i1 %19, label %21, label %15, !dbg !10526, !llvm.loop !10527

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10529
  br label %22, !dbg !10530

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10531
  call void @llvm.dbg.value(metadata i16* %23, metadata !10505, metadata !DIExpression()), !dbg !10508
  ret i16* %23, !dbg !10532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !10533 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10536
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10537
  ret i32* %2, !dbg !10538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !10539 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10687, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10688, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10689, metadata !DIExpression()), !dbg !10690
  ret void, !dbg !10691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10696, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 %1, metadata !10697, metadata !DIExpression()), !dbg !10698
  ret void, !dbg !10699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10700 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10704, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.value(metadata i32 %1, metadata !10705, metadata !DIExpression()), !dbg !10706
  ret void, !dbg !10707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10712, metadata !DIExpression()), !dbg !10714
  call void @llvm.dbg.value(metadata i8* %1, metadata !10713, metadata !DIExpression()), !dbg !10714
  ret i32 -134, !dbg !10715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10720, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata i8* %1, metadata !10721, metadata !DIExpression()), !dbg !10722
  ret i32 -134, !dbg !10723
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10727, metadata !DIExpression()), !dbg !10728
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10729, !srcloc !10735
  call void @llvm.dbg.value(metadata i32 undef, metadata !10732, metadata !DIExpression()) #23, !dbg !10736
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10736
  br label %3, !dbg !10737

3:                                                ; preds = %3, %1
  br label %3, !dbg !10738, !llvm.loop !10741
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10748, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10749, metadata !DIExpression()), !dbg !10750
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10751
  unreachable, !dbg !10751
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10754, metadata !DIExpression()), !dbg !10755
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10756
  unreachable, !dbg !10756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10759, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10760, metadata !DIExpression()), !dbg !10763
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10764, !srcloc !10735
  call void @llvm.dbg.value(metadata i32 undef, metadata !10732, metadata !DIExpression()) #23, !dbg !10766
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10766
  call void @llvm.dbg.value(metadata i32 undef, metadata !10761, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10762, metadata !DIExpression()), !dbg !10763
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10767
  br i1 %4, label %6, label %5, !dbg !10769

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !10770
  br label %7, !dbg !10771

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !10770
  br label %7, !dbg !10774

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10764
  call void @llvm.dbg.value(metadata i32 %8, metadata !10732, metadata !DIExpression()) #23, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %8, metadata !10761, metadata !DIExpression()), !dbg !10763
  %9 = tail call fastcc %struct.k_thread* @k_current_get.88() #26, !dbg !10776
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10762, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.value(metadata i32 undef, metadata !10777, metadata !DIExpression()) #23, !dbg !10780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10782, !srcloc !10783
  tail call fastcc void @k_thread_abort.89(%struct.k_thread* noundef %9) #24, !dbg !10784
  ret void, !dbg !10787
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.88() unnamed_addr #9 !dbg !10788 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.90() #26, !dbg !10792
  ret %struct.k_thread* %1, !dbg !10793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.89(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10794 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10798, metadata !DIExpression()), !dbg !10799
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10800, !srcloc !10802
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !10803
  ret void, !dbg !10804
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.90() unnamed_addr #9 !dbg !10805 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10806, !srcloc !10808
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !10809
  ret %struct.k_thread* %1, !dbg !10810
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10811 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10815, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.value(metadata i32 %1, metadata !10816, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.value(metadata i32 %2, metadata !10817, metadata !DIExpression()), !dbg !10818
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !10819
  ret void, !dbg !10820
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10825, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i8* %1, metadata !10826, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.value(metadata i32 %2, metadata !10827, metadata !DIExpression()), !dbg !10828
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !10829
  ret void, !dbg !10830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10831 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !10832
  ret void, !dbg !10833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10836, metadata !DIExpression()), !dbg !10837
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !10838
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10839
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10840
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10841
  %4 = trunc i32 %0 to i8, !dbg !10842
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10843
  store i8 %4, i8* %5, align 4, !dbg !10844
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10845
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !10846
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10847
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10848
  store i8* %8, i8** %9, align 4, !dbg !10849
  ret void, !dbg !10850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10853, metadata !DIExpression()), !dbg !10859
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10860
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10854, metadata !DIExpression()), !dbg !10859
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10861
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10855, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i8* null, metadata !10858, metadata !DIExpression()), !dbg !10859
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10862
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10863
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !10864
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !10865
  ret void, !dbg !10866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !10867 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10871, metadata !DIExpression()), !dbg !10872
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !10873
  ret i8* %2, !dbg !10874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10880, metadata !DIExpression()), !dbg !10881
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10882
  %3 = load i8, i8* %2, align 1, !dbg !10883
  %4 = and i8 %3, -5, !dbg !10883
  store i8 %4, i8* %2, align 1, !dbg !10883
  ret void, !dbg !10884
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !10885 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !10888
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !10889
  %3 = ptrtoint i8* %2 to i32, !dbg !10898
  %4 = add i32 %3, 2048, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %4, metadata !10893, metadata !DIExpression()) #23, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %4, metadata !10901, metadata !DIExpression()) #23, !dbg !10904
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10906, !srcloc !10907
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10908
  %6 = or i32 %5, 512, !dbg !10908
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10908
  tail call fastcc void @__NVIC_SetPriority.97(i32 noundef -2, i32 noundef 255) #25, !dbg !10909
  tail call fastcc void @__NVIC_SetPriority.97(i32 noundef -5, i32 noundef 0) #25, !dbg !10912
  tail call fastcc void @__NVIC_SetPriority.97(i32 noundef -12, i32 noundef 0) #25, !dbg !10913
  tail call fastcc void @__NVIC_SetPriority.97(i32 noundef -11, i32 noundef 0) #25, !dbg !10914
  tail call fastcc void @__NVIC_SetPriority.97(i32 noundef -10, i32 noundef 0) #25, !dbg !10915
  tail call fastcc void @__NVIC_SetPriority.97(i32 noundef -4, i32 noundef 0) #25, !dbg !10916
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10917
  %8 = or i32 %7, 458752, !dbg !10917
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10917
  tail call void @z_arm_fault_init() #25, !dbg !10918
  tail call void @z_arm_cpu_idle_init() #25, !dbg !10919
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10920
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10923
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !10924
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !10925
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !10926
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !10926
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10887, metadata !DIExpression()), !dbg !10927
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !10928
  call void @z_device_state_init() #25, !dbg !10929
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !10930
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !10931
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !10932
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !10933
  unreachable, !dbg !10933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1873, metadata !DIExpression()), !dbg !10934
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10935
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10935
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1874, metadata !DIExpression()), !dbg !10934
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1874, metadata !DIExpression()), !dbg !10934
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10936
  br i1 %7, label %8, label %35, !dbg !10937

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1874, metadata !DIExpression()), !dbg !10934
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10938
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10938
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1884, metadata !DIExpression()), !dbg !10939
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10940
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10940
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !10941
  call void @llvm.dbg.value(metadata i32 %14, metadata !1888, metadata !DIExpression()), !dbg !10939
  %15 = icmp eq %struct.device* %11, null, !dbg !10942
  br i1 %15, label %32, label %16, !dbg !10944

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10945
  br i1 %17, label %26, label %18, !dbg !10948

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10949
  call void @llvm.dbg.value(metadata i32 %19, metadata !1888, metadata !DIExpression()), !dbg !10939
  %20 = icmp ult i32 %19, 255, !dbg !10951
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10951
  call void @llvm.dbg.value(metadata i32 %21, metadata !1888, metadata !DIExpression()), !dbg !10939
  %22 = trunc i32 %21 to i8, !dbg !10952
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10953
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10953
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10954
  store i8 %22, i8* %25, align 1, !dbg !10955
  br label %26, !dbg !10956

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10957
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10957
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10958
  %30 = load i8, i8* %29, align 1, !dbg !10959
  %31 = or i8 %30, 1, !dbg !10959
  store i8 %31, i8* %29, align 1, !dbg !10959
  br label %32, !dbg !10960

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10961
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1874, metadata !DIExpression()), !dbg !10934
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10936
  br i1 %34, label %8, label %35, !dbg !10937, !llvm.loop !10962

35:                                               ; preds = %32, %1
  ret void, !dbg !10964
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.97(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !10965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10967, metadata !DIExpression()), !dbg !10969
  call void @llvm.dbg.value(metadata i32 %1, metadata !10968, metadata !DIExpression()), !dbg !10969
  %3 = trunc i32 %1 to i8, !dbg !10970
  %4 = shl i8 %3, 4, !dbg !10970
  %5 = and i32 %0, 15, !dbg !10973
  %6 = add nsw i32 %5, -4, !dbg !10974
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10975
  store volatile i8 %4, i8* %7, align 1, !dbg !10976
  ret void, !dbg !10977
}

; Function Attrs: optsize
declare !dbg !10978 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !10979 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10982, metadata !DIExpression()), !dbg !10983
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10984
  store i8 1, i8* %2, align 1, !dbg !10985
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10986
  store i8 1, i8* %3, align 4, !dbg !10987
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !10988
  store i32 0, i32* %4, align 4, !dbg !10989
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !10990
  store i32 0, i32* %5, align 4, !dbg !10991
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10992
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !10993
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10994
  ret void, !dbg !10995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10996 {
  tail call void @z_sched_init() #25, !dbg !11001
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11002
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0)) #25, !dbg !11003
  call void @llvm.dbg.value(metadata i8* %1, metadata !11000, metadata !DIExpression()), !dbg !11004
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11005
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11006
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !11007
  ret i8* %1, !dbg !11008
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !11009 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11013, metadata !DIExpression()), !dbg !11014
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !11015
  unreachable, !dbg !11016
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11017 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11019, metadata !DIExpression()), !dbg !11022
  call void @llvm.dbg.value(metadata i8* %1, metadata !11020, metadata !DIExpression()), !dbg !11022
  call void @llvm.dbg.value(metadata i8* %2, metadata !11021, metadata !DIExpression()), !dbg !11022
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11023
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !11024
  tail call void @boot_banner() #25, !dbg !11025
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !11026
  tail call void @z_init_static_threads() #25, !dbg !11027
  tail call void @main() #25, !dbg !11028
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11029
  %5 = and i8 %4, -2, !dbg !11029
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11029
  ret void, !dbg !11030
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11031 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11041, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i8* %1, metadata !11042, metadata !DIExpression()), !dbg !11043
  ret void, !dbg !11044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11045 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11047, metadata !DIExpression()), !dbg !11049
  call void @llvm.dbg.value(metadata i8* %1, metadata !11048, metadata !DIExpression()), !dbg !11049
  ret void, !dbg !11050
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11051 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11052, !srcloc !11059
  call void @llvm.dbg.value(metadata i32 %1, metadata !11055, metadata !DIExpression()) #23, !dbg !11060
  %2 = icmp ne i32 %1, 0, !dbg !11061
  ret i1 %2, !dbg !11062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11063 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11065
  %3 = load i8, i8* %2, align 4, !dbg !11066
  %4 = or i8 %3, 1, !dbg !11066
  store i8 %4, i8* %2, align 4, !dbg !11066
  ret void, !dbg !11067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11068 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11069
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11070
  %3 = load i8, i8* %2, align 4, !dbg !11071
  %4 = and i8 %3, -2, !dbg !11071
  store i8 %4, i8* %2, align 4, !dbg !11071
  ret void, !dbg !11072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !11073 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11074
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11075
  %3 = load i8, i8* %2, align 4, !dbg !11075
  %4 = and i8 %3, 1, !dbg !11076
  %5 = icmp ne i8 %4, 0, !dbg !11077
  ret i1 %5, !dbg !11078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11083, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i8* %1, metadata !11084, metadata !DIExpression()), !dbg !11085
  ret i32 -88, !dbg !11086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11091, metadata !DIExpression()), !dbg !11092
  ret i8* null, !dbg !11093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11098, metadata !DIExpression()), !dbg !11101
  call void @llvm.dbg.value(metadata i8* %1, metadata !11099, metadata !DIExpression()), !dbg !11101
  call void @llvm.dbg.value(metadata i32 %2, metadata !11100, metadata !DIExpression()), !dbg !11101
  ret i32 -88, !dbg !11102
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2009, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i8* %1, metadata !2010, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 %2, metadata !2011, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 0, metadata !2012, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i8 undef, metadata !2014, metadata !DIExpression()), !dbg !11103
  %4 = icmp eq i8* %1, null, !dbg !11104
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11106
  br i1 %6, label %46, label %7, !dbg !11106

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11107
  %9 = load i8, i8* %8, align 1, !dbg !11107
  call void @llvm.dbg.value(metadata i8 %9, metadata !2014, metadata !DIExpression()), !dbg !11103
  %10 = add i32 %2, -1, !dbg !11108
  call void @llvm.dbg.value(metadata i32 %10, metadata !2011, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i8 0, metadata !2015, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i8 %9, metadata !2014, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 0, metadata !2012, metadata !DIExpression()), !dbg !11103
  %11 = icmp eq i8 %9, 0, !dbg !11110
  br i1 %11, label %12, label %15, !dbg !11112

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11113
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11114
  store i8 0, i8* %14, align 1, !dbg !11115
  br label %46, !dbg !11116

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2015, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i8 %17, metadata !2014, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 %18, metadata !2012, metadata !DIExpression()), !dbg !11103
  %19 = zext i8 %17 to i32, !dbg !11117
  %20 = zext i8 %16 to i32, !dbg !11118
  %21 = shl nuw i32 1, %20, !dbg !11118
  call void @llvm.dbg.value(metadata i32 %21, metadata !2013, metadata !DIExpression()), !dbg !11103
  %22 = and i32 %21, %19, !dbg !11120
  %23 = icmp eq i32 %22, 0, !dbg !11122
  br i1 %23, label %42, label %24, !dbg !11123

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11124
  %26 = sub i32 %10, %18, !dbg !11125
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11126
  %28 = load i8*, i8** %27, align 4, !dbg !11126
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11127
  %30 = load i32, i32* %29, align 4, !dbg !11127
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !11128
  %32 = add i32 %31, %18, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %32, metadata !2012, metadata !DIExpression()), !dbg !11103
  %33 = trunc i32 %21 to i8, !dbg !11130
  %34 = xor i8 %33, -1, !dbg !11130
  %35 = and i8 %17, %34, !dbg !11130
  call void @llvm.dbg.value(metadata i8 %35, metadata !2014, metadata !DIExpression()), !dbg !11103
  %36 = icmp eq i8 %35, 0, !dbg !11131
  br i1 %36, label %12, label %37, !dbg !11133

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11134
  %39 = sub i32 %10, %32, !dbg !11136
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !11137
  %41 = add i32 %40, %32, !dbg !11138
  call void @llvm.dbg.value(metadata i32 %41, metadata !2012, metadata !DIExpression()), !dbg !11103
  br label %42, !dbg !11139

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11103
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11103
  call void @llvm.dbg.value(metadata i8 %44, metadata !2014, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.value(metadata i32 %43, metadata !2012, metadata !DIExpression()), !dbg !11103
  %45 = add i8 %16, 1, !dbg !11140
  call void @llvm.dbg.value(metadata i8 %45, metadata !2015, metadata !DIExpression()), !dbg !11109
  br label %15, !dbg !11112

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.99, i32 0, i32 0), %3 ], !dbg !11103
  ret i8* %47, !dbg !11141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11146, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 %1, metadata !11147, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i8* %2, metadata !11148, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 %3, metadata !11149, metadata !DIExpression()), !dbg !11151
  %5 = icmp ult i32 %1, %3, !dbg !11152
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11152
  call void @llvm.dbg.value(metadata i32 %6, metadata !11150, metadata !DIExpression()), !dbg !11151
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !11153
  ret i32 %6, !dbg !11154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11159, metadata !DIExpression()), !dbg !11160
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !11161
  ret void, !dbg !11162
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11163 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11172, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11173, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i32 %2, metadata !11174, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11175, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i8* %4, metadata !11176, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i8* %5, metadata !11177, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i8* %6, metadata !11178, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i32 %7, metadata !11179, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i32 %8, metadata !11180, metadata !DIExpression()), !dbg !11183
  call void @llvm.dbg.value(metadata i8* undef, metadata !11181, metadata !DIExpression()), !dbg !11183
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11184
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !11185
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11186
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !11187
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !11188
  call void @llvm.dbg.value(metadata i8* %13, metadata !11182, metadata !DIExpression()), !dbg !11183
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !11189
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11190
  store i8* null, i8** %14, align 4, !dbg !11191
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11192
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11192
  br i1 %16, label %20, label %17, !dbg !11194

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11195
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11195
  br label %20, !dbg !11196

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11183
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11197
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11199
  ret i8* %13, !dbg !11200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #3 !dbg !11201 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11206, metadata !DIExpression()), !dbg !11207
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11208
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !11209
  ret void, !dbg !11210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11211 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11216, metadata !DIExpression()), !dbg !11220
  call void @llvm.dbg.value(metadata i32 %1, metadata !11217, metadata !DIExpression()), !dbg !11220
  call void @llvm.dbg.value(metadata i32 %2, metadata !11218, metadata !DIExpression()), !dbg !11220
  call void @llvm.dbg.value(metadata i32 %3, metadata !11219, metadata !DIExpression()), !dbg !11220
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11221
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11222
  %6 = trunc i32 %3 to i8, !dbg !11223
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11224
  store i8 %6, i8* %7, align 4, !dbg !11225
  %8 = trunc i32 %2 to i8, !dbg !11226
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11227
  store i8 %8, i8* %9, align 1, !dbg !11228
  %10 = trunc i32 %1 to i8, !dbg !11229
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11230
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11230
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11230
  store i8 %10, i8* %13, align 2, !dbg !11231
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11232
  store i8 0, i8* %14, align 1, !dbg !11233
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !11234
  ret void, !dbg !11235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !11236 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11240, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11241, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i32 %2, metadata !11242, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i32 0, metadata !11247, metadata !DIExpression()), !dbg !11248
  %4 = add i32 %2, 7, !dbg !11249
  %5 = and i32 %4, -8, !dbg !11249
  %6 = add i32 %5, 64, !dbg !11249
  call void @llvm.dbg.value(metadata i32 %6, metadata !11243, metadata !DIExpression()), !dbg !11248
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.109(%struct.z_thread_stack_element* noundef %1) #24, !dbg !11251
  call void @llvm.dbg.value(metadata i8* %7, metadata !11246, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i32 %5, metadata !11244, metadata !DIExpression()), !dbg !11248
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11252
  call void @llvm.dbg.value(metadata i8* %8, metadata !11245, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i32 0, metadata !11247, metadata !DIExpression()), !dbg !11248
  %9 = ptrtoint i8* %7 to i32, !dbg !11253
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11254
  store i32 %9, i32* %10, align 4, !dbg !11255
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11256
  store i32 %5, i32* %11, align 4, !dbg !11257
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11258
  store i32 0, i32* %12, align 4, !dbg !11259
  call void @llvm.dbg.value(metadata i8* %8, metadata !11245, metadata !DIExpression()), !dbg !11248
  ret i8* %8, !dbg !11260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.109(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11261 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11265, metadata !DIExpression()), !dbg !11266
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11267
  ret i8* %2, !dbg !11268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11269 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11274, metadata !DIExpression()), !dbg !11275
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11276
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11277
  ret void, !dbg !11278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11279 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11281, metadata !DIExpression()), !dbg !11282
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11283
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !11284
  ret void, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11286 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11290, metadata !DIExpression()), !dbg !11291
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11292
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11293
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11294
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11295
  ret void, !dbg !11296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !11297 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11302, metadata !DIExpression()), !dbg !11303
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11304
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11305
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11306
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11307
  ret void, !dbg !11308
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11309 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11326, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11317, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11318, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i32 %2, metadata !11319, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11320, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i8* %4, metadata !11321, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i8* %5, metadata !11322, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i8* %6, metadata !11323, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i32 %7, metadata !11324, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i32 %8, metadata !11325, metadata !DIExpression()), !dbg !11327
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !11328
  %13 = icmp eq i64 %11, -1, !dbg !11329
  br i1 %13, label %15, label %14, !dbg !11331

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !11332
  br label %15, !dbg !11334

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11336 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11341, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11340, metadata !DIExpression()), !dbg !11342
  %4 = icmp eq i64 %3, 0, !dbg !11343
  br i1 %4, label %5, label %6, !dbg !11345

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11346
  br label %7, !dbg !11348

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !11349
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11352 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11356, metadata !DIExpression()), !dbg !11357
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11358, !srcloc !11360
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !11361
  ret void, !dbg !11362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11363 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11366, metadata !DIExpression()), !dbg !11367
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11365, metadata !DIExpression()), !dbg !11367
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11368
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !11369
  ret void, !dbg !11370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11371 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11373, metadata !DIExpression()), !dbg !11393
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11394

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !11395
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11391, metadata !DIExpression()), !dbg !11396
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11397

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11373, metadata !DIExpression()), !dbg !11393
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11398
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11398
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11401
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11401
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11402
  %9 = load i32, i32* %8, align 4, !dbg !11402
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11403
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11403
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11404
  %13 = load i8*, i8** %12, align 4, !dbg !11404
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11405
  %15 = load i8*, i8** %14, align 4, !dbg !11405
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11406
  %17 = load i8*, i8** %16, align 4, !dbg !11406
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11407
  %19 = load i32, i32* %18, align 4, !dbg !11407
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11408
  %21 = load i32, i32* %20, align 4, !dbg !11408
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !11409
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11410
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11411
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11412
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11412
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11413
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11373, metadata !DIExpression()), !dbg !11393
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11414
  br i1 %27, label %2, label %1, !dbg !11394, !llvm.loop !11416

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !11395
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11391, metadata !DIExpression()), !dbg !11396
  br label %29, !dbg !11397

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !11418
  ret void, !dbg !11419

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11391, metadata !DIExpression()), !dbg !11396
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11420
  %33 = load i32, i32* %32, align 4, !dbg !11420
  %34 = icmp eq i32 %33, -1, !dbg !11424
  br i1 %34, label %43, label %35, !dbg !11425

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11426
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11426
  %38 = icmp sgt i32 %33, 0, !dbg !11428
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11428
  %40 = zext i32 %39 to i64, !dbg !11428
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #24, !dbg !11428
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11429
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !11429
  br label %43, !dbg !11430

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11431
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11391, metadata !DIExpression()), !dbg !11396
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11432
  br i1 %45, label %30, label %29, !dbg !11397, !llvm.loop !11434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !11436 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i64 %0, metadata !11443, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i32 1000, metadata !11448, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i32 10000, metadata !11449, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i8 1, metadata !11450, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i8 0, metadata !11451, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i8 1, metadata !11452, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i8 0, metadata !11453, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i8 1, metadata !11454, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i8 0, metadata !11455, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i64 0, metadata !11456, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata i64 0, metadata !11456, metadata !DIExpression()), !dbg !11460
  %2 = mul i64 %0, 10, !dbg !11462
  ret i64 %2, !dbg !11468
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !11469 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11471, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i8* %1, metadata !11472, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i8* %2, metadata !11473, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.value(metadata i8* %3, metadata !11474, metadata !DIExpression()), !dbg !11475
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11476
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11477
  %7 = load i8, i8* %6, align 4, !dbg !11478
  %8 = or i8 %7, 4, !dbg !11478
  store i8 %8, i8* %6, align 4, !dbg !11478
  tail call void @z_thread_essential_clear() #24, !dbg !11479
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11480
  unreachable, !dbg !11480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11481 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11485, metadata !DIExpression()), !dbg !11486
  ret i32 -134, !dbg !11487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11492, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 %1, metadata !11493, metadata !DIExpression()), !dbg !11494
  ret i32 -134, !dbg !11495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !11496 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11503, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11504, metadata !DIExpression()), !dbg !11505
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11506
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11508
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11505
  ret i32 %6, !dbg !11509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !11510 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11514, metadata !DIExpression()), !dbg !11515
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11516
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11515
  ret i32 %3, !dbg !11518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11519 {
  tail call void @sys_clock_idle_exit() #25, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !11523 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11525, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i8* %1, metadata !11526, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.value(metadata i8* %2, metadata !11527, metadata !DIExpression()), !dbg !11528
  br label %4, !dbg !11529

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11530, !srcloc !11537
  call void @llvm.dbg.value(metadata i32 undef, metadata !11533, metadata !DIExpression()) #23, !dbg !11538
  call void @llvm.dbg.value(metadata i32 undef, metadata !11534, metadata !DIExpression()) #23, !dbg !11538
  tail call fastcc void @k_cpu_idle() #24, !dbg !11539
  br label %4, !dbg !11529, !llvm.loop !11540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11542 {
  tail call void @arch_cpu_idle() #25, !dbg !11543
  ret void, !dbg !11544
}

; Function Attrs: optsize
declare !dbg !11545 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11550, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11551, metadata !DIExpression()), !dbg !11554
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11555
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11555
  %5 = load i8, i8* %4, align 2, !dbg !11555
  call void @llvm.dbg.value(metadata i8 %5, metadata !11552, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11554
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11556
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11556
  %8 = load i8, i8* %7, align 2, !dbg !11556
  call void @llvm.dbg.value(metadata i8 %8, metadata !11553, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11554
  %9 = icmp eq i8 %8, %5, !dbg !11557
  %10 = sext i8 %5 to i32, !dbg !11559
  %11 = sext i8 %8 to i32, !dbg !11559
  %12 = sub nsw i32 %11, %10, !dbg !11559
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11559
  ret i32 %13, !dbg !11560
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11561 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11565, metadata !DIExpression()), !dbg !11566
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !11567
  %3 = icmp eq i32 %2, 0, !dbg !11569
  br i1 %3, label %8, label %4, !dbg !11570

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !11571
  %6 = add i32 %5, %2, !dbg !11573
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11574
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !11575
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !11576
  br label %8, !dbg !11577

8:                                                ; preds = %4, %1
  ret void, !dbg !11578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !11579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11583, metadata !DIExpression()), !dbg !11585
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %1, metadata !11584, metadata !DIExpression()), !dbg !11585
  ret i32 %1, !dbg !11587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11592, metadata !DIExpression()), !dbg !11601
  call void @llvm.dbg.value(metadata i32 %1, metadata !11593, metadata !DIExpression()), !dbg !11601
  call void @llvm.dbg.value(metadata i32 0, metadata !11594, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !11610
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11612, !srcloc !11618
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11612
  call void @llvm.dbg.value(metadata i32 %4, metadata !11615, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %4, metadata !11609, metadata !DIExpression()) #23, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %4, metadata !11600, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata i32 undef, metadata !11594, metadata !DIExpression()), !dbg !11602
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11620
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !11623
  %6 = icmp sgt i32 %0, 0, !dbg !11624
  %7 = icmp sgt i32 %5, 2, !dbg !11626
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11626
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11626
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11627
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11628
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11629
  call void @llvm.dbg.value(metadata i32 %4, metadata !11630, metadata !DIExpression()) #23, !dbg !11636
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !11636
  call void @llvm.dbg.value(metadata i32 %4, metadata !11638, metadata !DIExpression()) #23, !dbg !11641
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11643, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !11594, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata i32 undef, metadata !11594, metadata !DIExpression()), !dbg !11602
  ret void, !dbg !11645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !11646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11648, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.value(metadata i32 %0, metadata !11650, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11665
  call void @llvm.dbg.value(metadata i32 1000, metadata !11653, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i32 10000, metadata !11654, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i8 1, metadata !11655, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i1 true, metadata !11656, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11665
  call void @llvm.dbg.value(metadata i1 true, metadata !11657, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11665
  call void @llvm.dbg.value(metadata i8 0, metadata !11658, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i1 true, metadata !11659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11665
  call void @llvm.dbg.value(metadata i1 false, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11665
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !11665
  %2 = mul i32 %0, 10, !dbg !11667
  ret i32 %2, !dbg !11673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11676, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !11679
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11681, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !11683
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !11679
  call void @llvm.dbg.value(metadata i32 %3, metadata !11677, metadata !DIExpression()), !dbg !11678
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11684
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11686
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11687
  br i1 %6, label %7, label %8, !dbg !11688

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11689
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !11691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !11691
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !11693
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11695, !srcloc !11644
  br label %24, !dbg !11696

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11697
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !11698
  %10 = icmp eq i32 %9, 0, !dbg !11698
  br i1 %10, label %21, label %11, !dbg !11700

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !11701
  br i1 %12, label %13, label %21, !dbg !11702

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11703
  %15 = icmp sgt i32 %14, %0, !dbg !11706
  br i1 %15, label %19, label %16, !dbg !11707

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11708
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !11708
  call void @llvm.dbg.value(metadata i32 %18, metadata !11677, metadata !DIExpression()), !dbg !11678
  br label %22, !dbg !11710

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11711
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11711
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11713
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11678
  call void @llvm.dbg.value(metadata i32 %23, metadata !11677, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.value(metadata i32 %23, metadata !11630, metadata !DIExpression()) #23, !dbg !11715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !11715
  call void @llvm.dbg.value(metadata i32 %23, metadata !11638, metadata !DIExpression()) #23, !dbg !11717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !11719, !srcloc !11644
  br label %24, !dbg !11720

24:                                               ; preds = %22, %7
  ret void, !dbg !11720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !11721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11725, metadata !DIExpression()), !dbg !11727
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !11728
  %3 = icmp eq i32 %2, 0, !dbg !11728
  br i1 %3, label %16, label %4, !dbg !11729

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !11730
  br i1 %5, label %16, label %6, !dbg !11731

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11732
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11732
  %9 = load i8, i8* %8, align 2, !dbg !11732
  %10 = sext i8 %9 to i32, !dbg !11733
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11734
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !11735
  br i1 %12, label %16, label %13, !dbg !11736

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !11737
  %15 = xor i1 %14, true, !dbg !11738
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11727
  call void @llvm.dbg.value(metadata i1 %17, metadata !11726, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11727
  ret i1 %17, !dbg !11739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11740 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11744, metadata !DIExpression()), !dbg !11746
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11747
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11745, metadata !DIExpression()), !dbg !11746
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !11748
  br i1 %3, label %5, label %4, !dbg !11750

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !11751
  br label %5, !dbg !11753

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11744, metadata !DIExpression()), !dbg !11746
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11754
  ret i32 %6, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11758, metadata !DIExpression()), !dbg !11760
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11761
  %3 = load i8, i8* %2, align 1, !dbg !11761
  call void @llvm.dbg.value(metadata i8 %3, metadata !11759, metadata !DIExpression()), !dbg !11760
  %4 = and i8 %3, 31, !dbg !11762
  %5 = icmp ne i8 %4, 0, !dbg !11763
  ret i1 %5, !dbg !11764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11765 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11767, metadata !DIExpression()), !dbg !11768
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !11769
  br i1 %2, label %3, label %7, !dbg !11771

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11772, metadata !DIExpression()) #23, !dbg !11775
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11778
  %5 = load i8, i8* %4, align 1, !dbg !11779
  %6 = and i8 %5, 127, !dbg !11779
  store i8 %6, i8* %4, align 1, !dbg !11779
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11780, metadata !DIExpression()) #23, !dbg !11783
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !11787
  br label %7, !dbg !11788

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11789, metadata !DIExpression()) #23, !dbg !11792
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11794
  %9 = load i8, i8* %8, align 1, !dbg !11795
  %10 = or i8 %9, -128, !dbg !11795
  store i8 %10, i8* %8, align 1, !dbg !11795
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11796, metadata !DIExpression()) #23, !dbg !11799
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11803, metadata !DIExpression()) #23, !dbg !11811
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11809, metadata !DIExpression()) #23, !dbg !11811
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !11813
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !11810, metadata !DIExpression()) #23, !dbg !11811
  %12 = icmp eq %struct._dnode* %11, null, !dbg !11815
  br i1 %12, label %23, label %13, !dbg !11813

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !11810, metadata !DIExpression()) #23, !dbg !11811
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !11817
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11810, metadata !DIExpression()) #23, !dbg !11811
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !11818
  %17 = icmp sgt i32 %16, 0, !dbg !11821
  br i1 %17, label %18, label %20, !dbg !11822

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11823
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !11825
  br label %25, !dbg !11826

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !11815
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !11810, metadata !DIExpression()) #23, !dbg !11811
  %22 = icmp eq %struct._dnode* %21, null, !dbg !11815
  br i1 %22, label %23, label %13, !dbg !11813, !llvm.loop !11827

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11829
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !11830
  br label %25, !dbg !11831

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11832
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !11833
  %28 = zext i1 %27 to i32, !dbg !11833
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11838, metadata !DIExpression()), !dbg !11839
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !11840
  ret i1 %2, !dbg !11841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !11842 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !11844, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11845, metadata !DIExpression()), !dbg !11846
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !11847
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !11848
  ret void, !dbg !11849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11850 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11854, metadata !DIExpression()), !dbg !11855
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !11856
  br i1 %2, label %6, label %3, !dbg !11856

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11857
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11857
  br label %6, !dbg !11856

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11856
  ret %struct._dnode* %7, !dbg !11858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11859 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11863, metadata !DIExpression()), !dbg !11867
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11864, metadata !DIExpression()), !dbg !11867
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11868
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11868
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11865, metadata !DIExpression()), !dbg !11867
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11869
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11870
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11871
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11872
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11873
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11874
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11875
  ret void, !dbg !11876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !11877 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11881, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11882, metadata !DIExpression()), !dbg !11883
  %3 = icmp eq %struct._dnode* %1, null, !dbg !11884
  br i1 %3, label %6, label %4, !dbg !11885

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !11886
  br label %6, !dbg !11885

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !11885
  ret %struct._dnode* %7, !dbg !11887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11888 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11892, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11893, metadata !DIExpression()), !dbg !11895
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11896
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11896
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11894, metadata !DIExpression()), !dbg !11895
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11897
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11898
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11899
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !11900
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11901
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11902
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11903
  ret void, !dbg !11904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11907, metadata !DIExpression()), !dbg !11909
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !11910
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11917, metadata !DIExpression()) #23, !dbg !11919
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11920
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11921
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11921
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11908, metadata !DIExpression()), !dbg !11909
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11922, metadata !DIExpression()) #23, !dbg !11928
  call void @llvm.dbg.value(metadata i32 %0, metadata !11927, metadata !DIExpression()) #23, !dbg !11928
  %6 = icmp eq i32 %0, 0, !dbg !11931
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11933
  br i1 %6, label %8, label %15, !dbg !11934

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !11935
  br i1 %9, label %15, label %10, !dbg !11937

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !11938
  br i1 %11, label %15, label %12, !dbg !11940

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !11941
  %14 = icmp eq i32 %13, 0, !dbg !11941
  br i1 %14, label %18, label %15, !dbg !11943

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !11944
  br i1 %16, label %18, label %17, !dbg !11947

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !11948
  br label %18, !dbg !11950

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !11933
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11933
  ret void, !dbg !11951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !11952 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11956, metadata !DIExpression()), !dbg !11959
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11957, metadata !DIExpression()), !dbg !11959
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !11960
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11958, metadata !DIExpression()), !dbg !11959
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11957, metadata !DIExpression()), !dbg !11959
  ret %struct.k_thread* %3, !dbg !11961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11964, metadata !DIExpression()), !dbg !11965
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11966
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11967
  %4 = xor i1 %3, true, !dbg !11968
  ret i1 %4, !dbg !11969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11972, metadata !DIExpression()), !dbg !11973
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11974
  %3 = load i16, i16* %2, align 2, !dbg !11974
  %4 = icmp ult i16 %3, 128, !dbg !11975
  %5 = zext i1 %4 to i32, !dbg !11975
  ret i32 %5, !dbg !11976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11977 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11983, metadata !DIExpression()), !dbg !11984
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11985
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !11986
  %4 = xor i1 %3, true, !dbg !11987
  ret i1 %4, !dbg !11988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11989 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11995, metadata !DIExpression()), !dbg !11996
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11997
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11997
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11998
  ret i1 %4, !dbg !11999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12000 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12002, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12003, metadata !DIExpression()), !dbg !12004
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12005
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12005
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12006
  br i1 %5, label %9, label %6, !dbg !12007

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12008
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12008
  br label %9, !dbg !12007

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12007
  ret %struct._dnode* %10, !dbg !12009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !12010 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12014, metadata !DIExpression()), !dbg !12015
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12016
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12016
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12017
  ret i1 %4, !dbg !12018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !12019 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12023, metadata !DIExpression()), !dbg !12026
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12027
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12027
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12024, metadata !DIExpression()), !dbg !12026
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12028
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12028
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12025, metadata !DIExpression()), !dbg !12026
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12029
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12030
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12031
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12032
  tail call fastcc void @sys_dnode_init.114(%struct._dnode* noundef %0) #24, !dbg !12033
  ret void, !dbg !12034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.114(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !12035 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12037, metadata !DIExpression()), !dbg !12038
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12039
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12040
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12041
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12042
  ret void, !dbg !12043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12048, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 128, metadata !12049, metadata !DIExpression()), !dbg !12050
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12051
  %3 = load i8, i8* %2, align 1, !dbg !12051
  %4 = icmp slt i8 %3, 0, !dbg !12052
  ret i1 %4, !dbg !12053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12058, metadata !DIExpression()), !dbg !12060
  call void @llvm.dbg.value(metadata i32 %1, metadata !12059, metadata !DIExpression()), !dbg !12060
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !12061
  ret i1 %3, !dbg !12062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12065, metadata !DIExpression()), !dbg !12066
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12067
  ret i1 %2, !dbg !12068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12071, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata i32 %1, metadata !12072, metadata !DIExpression()), !dbg !12073
  %3 = icmp slt i32 %0, %1, !dbg !12074
  ret i1 %3, !dbg !12075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12076 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12078, metadata !DIExpression()), !dbg !12082
  call void @llvm.dbg.value(metadata i32 0, metadata !12079, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12084
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12086, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12086
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !12088
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %3, metadata !12081, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.value(metadata i32 undef, metadata !12079, metadata !DIExpression()), !dbg !12083
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !12094
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !12096
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12098, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12079, metadata !DIExpression()), !dbg !12083
  call void @llvm.dbg.value(metadata i32 undef, metadata !12079, metadata !DIExpression()), !dbg !12083
  ret void, !dbg !12099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12102, metadata !DIExpression()), !dbg !12103
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12104
  br i1 %2, label %24, label %3, !dbg !12106

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12107
  br i1 %4, label %5, label %24, !dbg !12108

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11789, metadata !DIExpression()) #23, !dbg !12109
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12112
  %7 = load i8, i8* %6, align 1, !dbg !12113
  %8 = or i8 %7, -128, !dbg !12113
  store i8 %8, i8* %6, align 1, !dbg !12113
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11796, metadata !DIExpression()) #23, !dbg !12114
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11803, metadata !DIExpression()) #23, !dbg !12116
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11809, metadata !DIExpression()) #23, !dbg !12116
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12118
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !11810, metadata !DIExpression()) #23, !dbg !12116
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12119
  br i1 %10, label %21, label %11, !dbg !12118

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !11810, metadata !DIExpression()) #23, !dbg !12116
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12120
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11810, metadata !DIExpression()) #23, !dbg !12116
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !12121
  %15 = icmp sgt i32 %14, 0, !dbg !12122
  br i1 %15, label %16, label %18, !dbg !12123

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12124
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !12125
  br label %23, !dbg !12126

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !12119
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !11810, metadata !DIExpression()) #23, !dbg !12116
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12119
  br i1 %20, label %21, label %11, !dbg !12118, !llvm.loop !12127

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12129
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !12130
  br label %23, !dbg !12131

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12132
  br label %24, !dbg !12133

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12137, metadata !DIExpression()), !dbg !12138
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12139
  br i1 %2, label %6, label %3, !dbg !12140

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !12141
  %5 = xor i1 %4, true, !dbg !12140
  br label %6, !dbg !12140

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12143 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12145, metadata !DIExpression()), !dbg !12149
  call void @llvm.dbg.value(metadata i32 0, metadata !12146, metadata !DIExpression()), !dbg !12150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12151
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12153, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12153
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !12155
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %3, metadata !12148, metadata !DIExpression()), !dbg !12150
  call void @llvm.dbg.value(metadata i32 undef, metadata !12146, metadata !DIExpression()), !dbg !12150
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !12156
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !12159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !12161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12163, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12146, metadata !DIExpression()), !dbg !12150
  call void @llvm.dbg.value(metadata i32 undef, metadata !12146, metadata !DIExpression()), !dbg !12150
  ret void, !dbg !12164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12165 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12167, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12170
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12172, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !12174
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !12170
  call void @llvm.dbg.value(metadata i32 %3, metadata !12168, metadata !DIExpression()), !dbg !12169
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !12175
  br i1 %4, label %5, label %6, !dbg !12177

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !12178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12178
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !12181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12183, !srcloc !11644
  br label %8, !dbg !12184

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.119(%struct.k_thread* noundef %0) #24, !dbg !12185
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12186
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12187
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12187
  br label %8, !dbg !12188

8:                                                ; preds = %6, %5
  ret void, !dbg !12188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12191, metadata !DIExpression()), !dbg !12192
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12193
  %3 = load i8, i8* %2, align 1, !dbg !12193
  %4 = and i8 %3, 4, !dbg !12194
  %5 = icmp eq i8 %4, 0, !dbg !12195
  ret i1 %5, !dbg !12196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.119(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12199, metadata !DIExpression()), !dbg !12200
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12201
  %3 = load i8, i8* %2, align 1, !dbg !12202
  %4 = and i8 %3, -5, !dbg !12202
  store i8 %4, i8* %2, align 1, !dbg !12202
  ret void, !dbg !12203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12204 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12207, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12206, metadata !DIExpression()), !dbg !12208
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !12209
  br i1 %4, label %5, label %9, !dbg !12211

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !12212
  br i1 %6, label %7, label %9, !dbg !12213

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12214, metadata !DIExpression()) #23, !dbg !12220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12219, metadata !DIExpression()) #23, !dbg !12220
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !12223
  br label %10, !dbg !12224

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !12225
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12225
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !12228
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12230, !srcloc !11644
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12236, metadata !DIExpression()), !dbg !12237
  call void @llvm.dbg.value(metadata i32 %0, metadata !12238, metadata !DIExpression()), !dbg !12243
  %2 = icmp eq i32 %0, 0, !dbg !12245
  br i1 %2, label %3, label %6, !dbg !12246

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12247, !srcloc !12254
  call void @llvm.dbg.value(metadata i32 %4, metadata !12250, metadata !DIExpression()) #23, !dbg !12255
  %5 = icmp eq i32 %4, 0, !dbg !12256
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12237
  ret i1 %7, !dbg !12257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12258 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12261
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12260, metadata !DIExpression()), !dbg !12262
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12263
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12264
  ret i1 %3, !dbg !12265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12268, metadata !DIExpression()), !dbg !12270
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !12271
  call void @llvm.dbg.value(metadata i32 %2, metadata !12269, metadata !DIExpression()), !dbg !12270
  ret i32 %2, !dbg !12272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12273 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12275, metadata !DIExpression()), !dbg !12279
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12280
  call void @llvm.dbg.value(metadata i32 0, metadata !12276, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12282
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12284, !srcloc !11618
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12284
  call void @llvm.dbg.value(metadata i32 %4, metadata !11615, metadata !DIExpression()) #23, !dbg !12286
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %4, metadata !11609, metadata !DIExpression()) #23, !dbg !12282
  call void @llvm.dbg.value(metadata i32 %4, metadata !12278, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12276, metadata !DIExpression()), !dbg !12281
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12287
  br i1 %5, label %6, label %10, !dbg !12291

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11772, metadata !DIExpression()) #23, !dbg !12292
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12295
  %8 = load i8, i8* %7, align 1, !dbg !12296
  %9 = and i8 %8, 127, !dbg !12296
  store i8 %9, i8* %7, align 1, !dbg !12296
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11780, metadata !DIExpression()) #23, !dbg !12297
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12299
  br label %10, !dbg !12300

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !12301
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12302
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12303
  %13 = zext i1 %12 to i32, !dbg !12303
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !12304
  call void @llvm.dbg.value(metadata i32 %4, metadata !11630, metadata !DIExpression()) #23, !dbg !12305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %4, metadata !11638, metadata !DIExpression()) #23, !dbg !12307
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12309, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12276, metadata !DIExpression()), !dbg !12281
  call void @llvm.dbg.value(metadata i32 undef, metadata !12276, metadata !DIExpression()), !dbg !12281
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12310
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12312
  br i1 %15, label %16, label %17, !dbg !12313

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12314
  br label %17, !dbg !12316

17:                                               ; preds = %16, %10
  ret void, !dbg !12317
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12320, metadata !DIExpression()), !dbg !12321
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12322
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12323
  ret i32 %3, !dbg !12324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12325 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12327, metadata !DIExpression()), !dbg !12328
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12329
  %3 = load i8, i8* %2, align 1, !dbg !12330
  %4 = or i8 %3, 16, !dbg !12330
  store i8 %4, i8* %2, align 1, !dbg !12330
  ret void, !dbg !12331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12332 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12333, !srcloc !11618
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12333
  call void @llvm.dbg.value(metadata i32 %2, metadata !11615, metadata !DIExpression()) #23, !dbg !12335
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12335
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !12336
  ret void, !dbg !12337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12340, metadata !DIExpression()), !dbg !12341
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !12342
  br i1 %2, label %3, label %5, !dbg !12344

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12345
  br label %6, !dbg !12347

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11638, metadata !DIExpression()) #23, !dbg !12348
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12351, !srcloc !11644
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12355, metadata !DIExpression()), !dbg !12357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12358
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12360, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12360
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !12362
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12362
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %3, metadata !12356, metadata !DIExpression()), !dbg !12357
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !12363
  br i1 %4, label %6, label %5, !dbg !12365

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !12366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12366
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !12369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12371, !srcloc !11644
  br label %8, !dbg !12372

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !12373
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12374
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12375
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12375
  br label %8, !dbg !12376

8:                                                ; preds = %6, %5
  ret void, !dbg !12376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12377 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12379, metadata !DIExpression()), !dbg !12380
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12381
  %3 = load i8, i8* %2, align 1, !dbg !12381
  %4 = and i8 %3, 16, !dbg !12382
  %5 = icmp ne i8 %4, 0, !dbg !12383
  ret i1 %5, !dbg !12384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12387, metadata !DIExpression()), !dbg !12388
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12389
  %3 = load i8, i8* %2, align 1, !dbg !12390
  %4 = and i8 %3, -17, !dbg !12390
  store i8 %4, i8* %2, align 1, !dbg !12390
  ret void, !dbg !12391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12392 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12402, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12400, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12401, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.value(metadata i32 0, metadata !12403, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12408
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12410, !srcloc !11618
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12410
  call void @llvm.dbg.value(metadata i32 %5, metadata !11615, metadata !DIExpression()) #23, !dbg !12412
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12412
  call void @llvm.dbg.value(metadata i32 %5, metadata !11609, metadata !DIExpression()) #23, !dbg !12408
  call void @llvm.dbg.value(metadata i32 %5, metadata !12405, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.value(metadata i32 undef, metadata !12403, metadata !DIExpression()), !dbg !12407
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !12413
  call void @llvm.dbg.value(metadata i32 %5, metadata !11630, metadata !DIExpression()) #23, !dbg !12416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %5, metadata !11638, metadata !DIExpression()) #23, !dbg !12418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12420, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12403, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.value(metadata i32 undef, metadata !12403, metadata !DIExpression()), !dbg !12407
  ret void, !dbg !12421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12422 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12426, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12424, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12425, metadata !DIExpression()), !dbg !12427
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !12428
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !12429
  ret void, !dbg !12430
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12431 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12435, metadata !DIExpression()), !dbg !12437
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12436, metadata !DIExpression()), !dbg !12437
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !12438
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !12439
  %3 = icmp eq %union.anon* %1, null, !dbg !12440
  br i1 %3, label %21, label %4, !dbg !12442

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12443
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12445
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12446
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !11803, metadata !DIExpression()) #23, !dbg !12447
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11809, metadata !DIExpression()) #23, !dbg !12447
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !12449
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !11810, metadata !DIExpression()) #23, !dbg !12447
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12450
  br i1 %8, label %19, label %9, !dbg !12449

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11810, metadata !DIExpression()) #23, !dbg !12447
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12451
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11810, metadata !DIExpression()) #23, !dbg !12447
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !12452
  %13 = icmp sgt i32 %12, 0, !dbg !12453
  br i1 %13, label %14, label %16, !dbg !12454

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12455
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !12456
  br label %21, !dbg !12457

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !12450
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !11810, metadata !DIExpression()) #23, !dbg !12447
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12450
  br i1 %18, label %19, label %9, !dbg !12449, !llvm.loop !12458

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12460
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !12461
  br label %21, !dbg !12462

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12464 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12469, metadata !DIExpression()), !dbg !12470
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12468, metadata !DIExpression()), !dbg !12470
  %4 = icmp eq i64 %3, -1, !dbg !12471
  br i1 %4, label %6, label %5, !dbg !12473

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.120(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12474
  br label %6, !dbg !12476

6:                                                ; preds = %5, %2
  ret void, !dbg !12477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.120(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12478 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12481, metadata !DIExpression()), !dbg !12482
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12480, metadata !DIExpression()), !dbg !12482
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12483
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12484
  ret void, !dbg !12485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12486 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12488, metadata !DIExpression()), !dbg !12496
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12497
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12497
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12489, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.value(metadata i32 0, metadata !12490, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12499
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12501, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !12503
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12503
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !12499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12492, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata i32 undef, metadata !12490, metadata !DIExpression()), !dbg !12498
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12504
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12505
  %7 = load i8, i8* %6, align 1, !dbg !12505
  %8 = and i8 %7, 40, !dbg !12506
  %9 = icmp eq i8 %8, 0, !dbg !12506
  call void @llvm.dbg.value(metadata i1 %9, metadata !12493, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12507
  br i1 %9, label %10, label %17, !dbg !12508

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12509
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12509
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12509
  %14 = icmp eq %union.anon* %13, null, !dbg !12513
  br i1 %14, label %16, label %15, !dbg !12514

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !12515
  br label %16, !dbg !12517

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.119(%struct.k_thread* noundef nonnull %3) #24, !dbg !12518
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !12519
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !12520
  br label %17, !dbg !12521

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12501
  call void @llvm.dbg.value(metadata i32 %18, metadata !11615, metadata !DIExpression()) #23, !dbg !12503
  call void @llvm.dbg.value(metadata i32 %18, metadata !11609, metadata !DIExpression()) #23, !dbg !12499
  call void @llvm.dbg.value(metadata i32 %18, metadata !12492, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata i32 undef, metadata !11630, metadata !DIExpression()) #23, !dbg !12522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12522
  call void @llvm.dbg.value(metadata i32 undef, metadata !11638, metadata !DIExpression()) #23, !dbg !12524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12526, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12490, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata i32 undef, metadata !12490, metadata !DIExpression()), !dbg !12498
  ret void, !dbg !12527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12530, metadata !DIExpression()), !dbg !12531
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12532
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !12533
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12534
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12535
  ret void, !dbg !12536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12539, metadata !DIExpression()), !dbg !12540
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12541
  %3 = load i8, i8* %2, align 1, !dbg !12542
  %4 = and i8 %3, -3, !dbg !12542
  store i8 %4, i8* %2, align 1, !dbg !12542
  ret void, !dbg !12543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12546, metadata !DIExpression()), !dbg !12547
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12548
  br i1 %2, label %3, label %7, !dbg !12550

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11772, metadata !DIExpression()) #23, !dbg !12551
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12554
  %5 = load i8, i8* %4, align 1, !dbg !12555
  %6 = and i8 %5, 127, !dbg !12555
  store i8 %6, i8* %4, align 1, !dbg !12555
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11780, metadata !DIExpression()) #23, !dbg !12556
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12558
  br label %7, !dbg !12559

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12560
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12561
  %10 = zext i1 %9 to i32, !dbg !12561
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !12562
  ret void, !dbg !12563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12566, metadata !DIExpression()), !dbg !12567
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12568
  %3 = load i8, i8* %2, align 1, !dbg !12569
  %4 = or i8 %3, 2, !dbg !12569
  store i8 %4, i8* %2, align 1, !dbg !12569
  ret void, !dbg !12570
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !12571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12573, metadata !DIExpression()), !dbg !12577
  call void @llvm.dbg.value(metadata i32 0, metadata !12574, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12579
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12581, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12581
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !12583
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12583
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !12579
  call void @llvm.dbg.value(metadata i32 %3, metadata !12576, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.value(metadata i32 undef, metadata !12574, metadata !DIExpression()), !dbg !12578
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !12584
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !12587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !12589
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12591, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12574, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.value(metadata i32 undef, metadata !12574, metadata !DIExpression()), !dbg !12578
  ret void, !dbg !12592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12593 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12599, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i32 %0, metadata !12597, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12598, metadata !DIExpression()), !dbg !12604
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12605
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !12606
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12607
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12608
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !12609
  call void @llvm.dbg.value(metadata i32 %6, metadata !12600, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i32 0, metadata !12601, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12611
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12613, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !12615
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12615
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !12611
  call void @llvm.dbg.value(metadata i32 undef, metadata !12603, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12601, metadata !DIExpression()), !dbg !12610
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12616
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12620
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12621
  br i1 %10, label %11, label %12, !dbg !12622

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12623
  br label %12, !dbg !12625

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12613
  call void @llvm.dbg.value(metadata i32 %13, metadata !11615, metadata !DIExpression()) #23, !dbg !12615
  call void @llvm.dbg.value(metadata i32 %13, metadata !11609, metadata !DIExpression()) #23, !dbg !12611
  call void @llvm.dbg.value(metadata i32 %13, metadata !12603, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !11630, metadata !DIExpression()) #23, !dbg !12626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12626
  call void @llvm.dbg.value(metadata i32 undef, metadata !11638, metadata !DIExpression()) #23, !dbg !12628
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !12630, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12601, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.value(metadata i32 undef, metadata !12601, metadata !DIExpression()), !dbg !12610
  ret i32 %6, !dbg !12631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12632 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12637, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i64 undef, metadata !12639, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12636, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12638, metadata !DIExpression()), !dbg !12640
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12641
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12642
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12643
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12645, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12647
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !12643
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12648
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !12649
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12214, metadata !DIExpression()) #23, !dbg !12650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12219, metadata !DIExpression()) #23, !dbg !12650
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !12652
  ret i32 %9, !dbg !12653
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12654 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12658, metadata !DIExpression()), !dbg !12663
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12659, metadata !DIExpression()), !dbg !12663
  call void @llvm.dbg.value(metadata i32 0, metadata !12660, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12665
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12667, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !12669
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12669
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !12665
  call void @llvm.dbg.value(metadata i32 undef, metadata !12662, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12659, metadata !DIExpression()), !dbg !12663
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !12670
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12659, metadata !DIExpression()), !dbg !12663
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12673
  br i1 %5, label %7, label %6, !dbg !12675

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12676
  br label %7, !dbg !12678

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12667
  call void @llvm.dbg.value(metadata i32 %8, metadata !11615, metadata !DIExpression()) #23, !dbg !12669
  call void @llvm.dbg.value(metadata i32 %8, metadata !11609, metadata !DIExpression()) #23, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %8, metadata !12662, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i32 undef, metadata !11630, metadata !DIExpression()) #23, !dbg !12679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12679
  call void @llvm.dbg.value(metadata i32 undef, metadata !11638, metadata !DIExpression()) #23, !dbg !12681
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12683, !srcloc !11644
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12659, metadata !DIExpression()), !dbg !12663
  call void @llvm.dbg.value(metadata i32 undef, metadata !12660, metadata !DIExpression()), !dbg !12664
  ret %struct.k_thread* %4, !dbg !12684
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12685 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12687, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12688, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 0, metadata !12689, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12694
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12696, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !12698
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12698
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !12694
  call void @llvm.dbg.value(metadata i32 undef, metadata !12691, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12688, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 undef, metadata !12689, metadata !DIExpression()), !dbg !12693
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !12699
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12688, metadata !DIExpression()), !dbg !12692
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12702
  br i1 %5, label %8, label %6, !dbg !12704

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12705
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !12707
  br label %8, !dbg !12708

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12696
  call void @llvm.dbg.value(metadata i32 %9, metadata !11615, metadata !DIExpression()) #23, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %9, metadata !11609, metadata !DIExpression()) #23, !dbg !12694
  call void @llvm.dbg.value(metadata i32 %9, metadata !12691, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.value(metadata i32 undef, metadata !11630, metadata !DIExpression()) #23, !dbg !12709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12709
  call void @llvm.dbg.value(metadata i32 undef, metadata !11638, metadata !DIExpression()) #23, !dbg !12711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12713, !srcloc !11644
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12688, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 undef, metadata !12689, metadata !DIExpression()), !dbg !12693
  ret %struct.k_thread* %4, !dbg !12714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12715 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12717, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12573, metadata !DIExpression()) #23, !dbg !12719
  call void @llvm.dbg.value(metadata i32 0, metadata !12574, metadata !DIExpression()) #23, !dbg !12721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12722
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12724, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12724
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !12726
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12726
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !12722
  call void @llvm.dbg.value(metadata i32 %3, metadata !12576, metadata !DIExpression()) #23, !dbg !12721
  call void @llvm.dbg.value(metadata i32 undef, metadata !12574, metadata !DIExpression()) #23, !dbg !12721
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !12727
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !12728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12728
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !12730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12732, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12574, metadata !DIExpression()) #23, !dbg !12721
  call void @llvm.dbg.value(metadata i32 undef, metadata !12574, metadata !DIExpression()) #23, !dbg !12721
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12733
  ret void, !dbg !12734
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12735 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12737, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 %1, metadata !12738, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i8 0, metadata !12739, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 0, metadata !12740, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12745
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12747, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !12749
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12749
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !12745
  call void @llvm.dbg.value(metadata i32 undef, metadata !12742, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata i8 poison, metadata !12739, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 undef, metadata !12740, metadata !DIExpression()), !dbg !12744
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12750
  call void @llvm.dbg.value(metadata i1 %6, metadata !12739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12743
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !12753

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11772, metadata !DIExpression()) #23, !dbg !12754
  %11 = load i8, i8* %4, align 1, !dbg !12760
  %12 = and i8 %11, 127, !dbg !12760
  store i8 %12, i8* %4, align 1, !dbg !12760
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11780, metadata !DIExpression()) #23, !dbg !12761
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12763
  store i8 %9, i8* %8, align 2, !dbg !12764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11789, metadata !DIExpression()) #23, !dbg !12765
  %13 = load i8, i8* %4, align 1, !dbg !12767
  %14 = or i8 %13, -128, !dbg !12767
  store i8 %14, i8* %4, align 1, !dbg !12767
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11796, metadata !DIExpression()) #23, !dbg !12768
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11803, metadata !DIExpression()) #23, !dbg !12770
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11809, metadata !DIExpression()) #23, !dbg !12770
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12772
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !11810, metadata !DIExpression()) #23, !dbg !12770
  %16 = icmp eq %struct._dnode* %15, null, !dbg !12773
  br i1 %16, label %26, label %17, !dbg !12772

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !11810, metadata !DIExpression()) #23, !dbg !12770
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !12774
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11810, metadata !DIExpression()) #23, !dbg !12770
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !12775
  %21 = icmp sgt i32 %20, 0, !dbg !12776
  br i1 %21, label %22, label %23, !dbg !12777

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !12778
  br label %27, !dbg !12779

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !12773
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !11810, metadata !DIExpression()) #23, !dbg !12770
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12773
  br i1 %25, label %26, label %17, !dbg !12772, !llvm.loop !12780

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !12782
  br label %27, !dbg !12783

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !12784
  br label %29, !dbg !12785

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !12786
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !12747
  call void @llvm.dbg.value(metadata i32 %30, metadata !11615, metadata !DIExpression()) #23, !dbg !12749
  call void @llvm.dbg.value(metadata i32 %30, metadata !11609, metadata !DIExpression()) #23, !dbg !12745
  call void @llvm.dbg.value(metadata i32 %30, metadata !12742, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata i32 undef, metadata !11630, metadata !DIExpression()) #23, !dbg !12788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12788
  call void @llvm.dbg.value(metadata i32 undef, metadata !11638, metadata !DIExpression()) #23, !dbg !12790
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !12792, !srcloc !11644
  call void @llvm.dbg.value(metadata i8 poison, metadata !12739, metadata !DIExpression()), !dbg !12743
  call void @llvm.dbg.value(metadata i32 undef, metadata !12740, metadata !DIExpression()), !dbg !12744
  ret i1 %6, !dbg !12793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12794 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12798, metadata !DIExpression()), !dbg !12801
  call void @llvm.dbg.value(metadata i32 %1, metadata !12799, metadata !DIExpression()), !dbg !12801
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !12802
  call void @llvm.dbg.value(metadata i1 %3, metadata !12800, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12801
  br i1 %3, label %4, label %12, !dbg !12803

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12805
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !12806
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !12806
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !12806
  %9 = load i8, i8* %8, align 1, !dbg !12806
  %10 = icmp eq i8 %9, 0, !dbg !12807
  br i1 %10, label %11, label %12, !dbg !12808

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12809
  br label %12, !dbg !12811

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !12812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !12813 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12815, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12819
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12821, !srcloc !11618
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %2, metadata !11615, metadata !DIExpression()) #23, !dbg !12823
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %2, metadata !11609, metadata !DIExpression()) #23, !dbg !12819
  call void @llvm.dbg.value(metadata i32 %2, metadata !12817, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata i32 undef, metadata !12815, metadata !DIExpression()), !dbg !12818
  tail call fastcc void @z_sched_lock() #24, !dbg !12824
  call void @llvm.dbg.value(metadata i32 %2, metadata !11630, metadata !DIExpression()) #23, !dbg !12827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %2, metadata !11638, metadata !DIExpression()) #23, !dbg !12829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12831, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12815, metadata !DIExpression()), !dbg !12818
  call void @llvm.dbg.value(metadata i32 undef, metadata !12815, metadata !DIExpression()), !dbg !12818
  ret void, !dbg !12832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !12833 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12834
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12835
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !12835
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !12835
  %5 = load i8, i8* %4, align 1, !dbg !12836
  %6 = add i8 %5, -1, !dbg !12836
  store i8 %6, i8* %4, align 1, !dbg !12836
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12837, !srcloc !12839
  ret void, !dbg !12840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !12841 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12843, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !12847
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12849, !srcloc !11618
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12849
  call void @llvm.dbg.value(metadata i32 %2, metadata !11615, metadata !DIExpression()) #23, !dbg !12851
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %2, metadata !11609, metadata !DIExpression()) #23, !dbg !12847
  call void @llvm.dbg.value(metadata i32 %2, metadata !12845, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.value(metadata i32 undef, metadata !12843, metadata !DIExpression()), !dbg !12846
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12852
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !12855
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !12855
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12855
  %7 = load i8, i8* %6, align 1, !dbg !12856
  %8 = add i8 %7, 1, !dbg !12856
  store i8 %8, i8* %6, align 1, !dbg !12856
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12857
  call void @llvm.dbg.value(metadata i32 %2, metadata !11630, metadata !DIExpression()) #23, !dbg !12858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !12858
  call void @llvm.dbg.value(metadata i32 %2, metadata !11638, metadata !DIExpression()) #23, !dbg !12860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12862, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 1, metadata !12843, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.value(metadata i32 undef, metadata !12843, metadata !DIExpression()), !dbg !12846
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12863
  ret void, !dbg !12864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !12865 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12866
  ret %struct.k_thread* %1, !dbg !12867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !12868 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !12872, metadata !DIExpression()), !dbg !12877
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !12873, metadata !DIExpression()), !dbg !12877
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !12878
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12874, metadata !DIExpression()), !dbg !12877
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !12879
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12875, metadata !DIExpression()), !dbg !12877
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !12880
  call void @llvm.dbg.value(metadata i32 %5, metadata !12876, metadata !DIExpression()), !dbg !12877
  %6 = icmp sgt i32 %5, 0, !dbg !12881
  br i1 %6, label %17, label %7, !dbg !12883

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !12884
  br i1 %8, label %17, label %9, !dbg !12886

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !12887
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !12887
  %12 = load i32, i32* %11, align 8, !dbg !12887
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !12889
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !12889
  %15 = load i32, i32* %14, align 8, !dbg !12889
  %16 = icmp ult i32 %12, %15, !dbg !12890
  br label %17, !dbg !12891

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !12892
  ret i1 %18, !dbg !12893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12894 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12911, metadata !DIExpression()), !dbg !12926
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12912, metadata !DIExpression()), !dbg !12926
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12927
  %5 = load i32, i32* %4, align 4, !dbg !12928
  %6 = add nsw i32 %5, 1, !dbg !12928
  store i32 %6, i32* %4, align 4, !dbg !12928
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !12929
  store i32 %5, i32* %7, align 8, !dbg !12930
  %8 = load i32, i32* %4, align 4, !dbg !12931
  %9 = icmp eq i32 %8, 0, !dbg !12932
  br i1 %9, label %10, label %32, !dbg !12933

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !12934
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12934
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !12914, metadata !DIExpression()), !dbg !12934
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12934
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !12934
  %14 = load i32, i32* %13, align 4, !dbg !12934
  %15 = shl i32 %14, 2, !dbg !12934
  %16 = alloca i8, i32 %15, align 8, !dbg !12934
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !12934
  store i8* %16, i8** %17, align 4, !dbg !12934
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !12934
  %19 = alloca i8, i32 %14, align 8, !dbg !12934
  store i8* %19, i8** %18, align 4, !dbg !12934
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !12934
  store i32 -1, i32* %20, align 4, !dbg !12934
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !12935
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12923, metadata !DIExpression()), !dbg !12936
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12913, metadata !DIExpression()), !dbg !12926
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !12937
  br i1 %22, label %23, label %24, !dbg !12934

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12937
  br label %32, !dbg !12938

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !12913, metadata !DIExpression()), !dbg !12926
  %26 = load i32, i32* %4, align 4, !dbg !12939
  %27 = add nsw i32 %26, 1, !dbg !12939
  store i32 %27, i32* %4, align 4, !dbg !12939
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !12941
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !12941
  store i32 %26, i32* %29, align 8, !dbg !12942
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !12935
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12923, metadata !DIExpression()), !dbg !12936
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12913, metadata !DIExpression()), !dbg !12926
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !12937
  br i1 %31, label %23, label %24, !dbg !12934, !llvm.loop !12943

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12945
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12946
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !12947
  ret void, !dbg !12948
}

; Function Attrs: optsize
declare !dbg !12949 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12954 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12957 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12959, metadata !DIExpression()), !dbg !12961
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12960, metadata !DIExpression()), !dbg !12961
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12962
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12963
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !12964
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !12965
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !12965
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !12967
  br i1 %7, label %8, label %10, !dbg !12968

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12969
  store i32 0, i32* %9, align 4, !dbg !12971
  br label %10, !dbg !12972

10:                                               ; preds = %8, %2
  ret void, !dbg !12973
}

; Function Attrs: optsize
declare !dbg !12974 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12975 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12979, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12980, metadata !DIExpression()), !dbg !12982
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12983
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !12984
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12981, metadata !DIExpression()), !dbg !12982
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12980, metadata !DIExpression()), !dbg !12982
  ret %struct.k_thread* %4, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12986 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12990, metadata !DIExpression()), !dbg !12991
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !12992
  ret %struct.rbnode* %2, !dbg !12993
}

; Function Attrs: optsize
declare !dbg !12994 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !12997 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13009, metadata !DIExpression()), !dbg !13013
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13014
  %3 = load i32, i32* %2, align 4, !dbg !13014
  %4 = icmp eq i32 %3, 0, !dbg !13016
  br i1 %4, label %10, label %5, !dbg !13017

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13010, metadata !DIExpression()), !dbg !13013
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13018, !range !5882
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13019
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13011, metadata !DIExpression()), !dbg !13013
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !13020
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13012, metadata !DIExpression()), !dbg !13013
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13010, metadata !DIExpression()), !dbg !13013
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13013
  ret %struct.k_thread* %11, !dbg !13021
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13022 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13026, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata i32 0, metadata !13027, metadata !DIExpression()), !dbg !13029
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13030
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13028, metadata !DIExpression()), !dbg !13029
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13031
  br i1 %3, label %8, label %4, !dbg !13032

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13033
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13035
  call void @llvm.dbg.value(metadata i32 1, metadata !13027, metadata !DIExpression()), !dbg !13029
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13030
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13028, metadata !DIExpression()), !dbg !13029
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13031
  br i1 %7, label %8, label %4, !dbg !13032, !llvm.loop !13036

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13029
  ret i32 %9, !dbg !13038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !13039 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13041, metadata !DIExpression()), !dbg !13042
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13043
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13044
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13045
  ret %struct.k_thread* %4, !dbg !13046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #3 !dbg !13047 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13056, metadata !DIExpression()), !dbg !13057
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13058
  tail call fastcc void @sys_dlist_init.127(%struct._dnode* noundef nonnull %2) #24, !dbg !13059
  ret void, !dbg !13060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.127(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !13061 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13065, metadata !DIExpression()), !dbg !13066
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13067
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13068
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13069
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13070
  ret void, !dbg !13071
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13072 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !13073
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !13074
  ret void, !dbg !13075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !13076 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13081, metadata !DIExpression()), !dbg !13082
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13083
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13083
  %4 = load i8, i8* %3, align 2, !dbg !13083
  %5 = sext i8 %4 to i32, !dbg !13084
  ret i32 %5, !dbg !13085
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13090, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata i32 %1, metadata !13091, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13092, metadata !DIExpression()), !dbg !13093
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13094
  ret void, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13096 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !13097
  br i1 %1, label %8, label %2, !dbg !13098

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !13099
  br i1 %3, label %8, label %4, !dbg !13100

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13101
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !13102
  %7 = xor i1 %6, true, !dbg !13100
  br label %8, !dbg !13100

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13104 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13105, !range !5302
  %2 = icmp eq i8 %1, 0, !dbg !13105
  ret i1 %2, !dbg !13106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13107 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !13110
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13112, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !13114
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !13114
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !13110
  call void @llvm.dbg.value(metadata i32 undef, metadata !13109, metadata !DIExpression()), !dbg !13115
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13116
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11772, metadata !DIExpression()) #23, !dbg !13119
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13121
  %4 = load i8, i8* %3, align 1, !dbg !13122
  %5 = and i8 %4, 127, !dbg !13122
  store i8 %5, i8* %3, align 1, !dbg !13122
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11780, metadata !DIExpression()) #23, !dbg !13123
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !13125
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13126
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11789, metadata !DIExpression()) #23, !dbg !13127
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13129
  %8 = load i8, i8* %7, align 1, !dbg !13130
  %9 = or i8 %8, -128, !dbg !13130
  store i8 %9, i8* %7, align 1, !dbg !13130
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11796, metadata !DIExpression()) #23, !dbg !13131
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11803, metadata !DIExpression()) #23, !dbg !13133
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11809, metadata !DIExpression()) #23, !dbg !13133
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13135
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11810, metadata !DIExpression()) #23, !dbg !13133
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13136
  br i1 %11, label %22, label %12, !dbg !13135

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !11810, metadata !DIExpression()) #23, !dbg !13133
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13137
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !11810, metadata !DIExpression()) #23, !dbg !13133
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !13138
  %16 = icmp sgt i32 %15, 0, !dbg !13139
  br i1 %16, label %17, label %19, !dbg !13140

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13141
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !13142
  br label %24, !dbg !13143

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !13136
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !11810, metadata !DIExpression()) #23, !dbg !13133
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13136
  br i1 %21, label %22, label %12, !dbg !13135, !llvm.loop !13144

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13146
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !13147
  br label %24, !dbg !13148

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13112
  call void @llvm.dbg.value(metadata i32 %25, metadata !11615, metadata !DIExpression()) #23, !dbg !13114
  call void @llvm.dbg.value(metadata i32 %25, metadata !11609, metadata !DIExpression()) #23, !dbg !13110
  call void @llvm.dbg.value(metadata i32 %25, metadata !13109, metadata !DIExpression()), !dbg !13115
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13149
  call void @llvm.dbg.value(metadata i32 undef, metadata !12214, metadata !DIExpression()) #23, !dbg !13150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12219, metadata !DIExpression()) #23, !dbg !13150
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !13152
  ret void, !dbg !13153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13154 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13158, metadata !DIExpression()), !dbg !13161
  %3 = icmp eq i64 %2, -1, !dbg !13162
  br i1 %3, label %4, label %6, !dbg !13164

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13165
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !13167
  br label %11, !dbg !13168

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13159, metadata !DIExpression()), !dbg !13161
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !13169
  %8 = sext i32 %7 to i64, !dbg !13169
  call void @llvm.dbg.value(metadata i64 %8, metadata !13159, metadata !DIExpression()), !dbg !13161
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !13170
  %10 = trunc i64 %9 to i32, !dbg !13170
  call void @llvm.dbg.value(metadata i32 %10, metadata !13160, metadata !DIExpression()), !dbg !13161
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13161
  ret i32 %12, !dbg !13171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13172 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13176, metadata !DIExpression()), !dbg !13177
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13178, !srcloc !13180
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !13181
  ret void, !dbg !13182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13183 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13187, metadata !DIExpression()), !dbg !13191
  %2 = icmp eq i64 %0, 0, !dbg !13192
  br i1 %2, label %3, label %4, !dbg !13194

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !13195
  br label %29, !dbg !13197

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13189, metadata !DIExpression()), !dbg !13191
  %5 = icmp sgt i64 %0, -3, !dbg !13198
  br i1 %5, label %6, label %10, !dbg !13200

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13201
  %8 = trunc i64 %0 to i32, !dbg !13203
  %9 = add i32 %7, %8, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %9, metadata !13188, metadata !DIExpression()), !dbg !13191
  br label %13, !dbg !13204

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13205
  %12 = sub i32 -2, %11, !dbg !13205
  call void @llvm.dbg.value(metadata i32 %12, metadata !13188, metadata !DIExpression()), !dbg !13191
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13207
  call void @llvm.dbg.value(metadata i32 %14, metadata !13188, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !13208
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13210, !srcloc !11618
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13210
  call void @llvm.dbg.value(metadata i32 %16, metadata !11615, metadata !DIExpression()) #23, !dbg !13212
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %16, metadata !11609, metadata !DIExpression()) #23, !dbg !13208
  call void @llvm.dbg.value(metadata i32 %16, metadata !13190, metadata !DIExpression()), !dbg !13191
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13213
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13214
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !13215
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13216
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13217
  tail call fastcc void @z_add_thread_timeout.120(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !13217
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13218
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !13219
  call void @llvm.dbg.value(metadata i32 %16, metadata !12214, metadata !DIExpression()) #23, !dbg !13220
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12219, metadata !DIExpression()) #23, !dbg !13220
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !13222
  %22 = zext i32 %14 to i64, !dbg !13223
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13224
  %24 = zext i32 %23 to i64, !dbg !13224
  %25 = sub nsw i64 %22, %24, !dbg !13225
  call void @llvm.dbg.value(metadata i64 %25, metadata !13187, metadata !DIExpression()), !dbg !13191
  %26 = icmp sgt i64 %25, 0, !dbg !13226
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13226
  %28 = trunc i64 %27 to i32, !dbg !13226
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13191
  ret i32 %30, !dbg !13227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13228 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13230, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i64 %0, metadata !11650, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 10000, metadata !11653, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i32 1000, metadata !11654, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i8 1, metadata !11655, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i1 false, metadata !11656, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i1 false, metadata !11657, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i8 0, metadata !11658, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i1 false, metadata !11659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i1 true, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13232
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !13232
  call void @llvm.dbg.value(metadata i64 %0, metadata !11650, metadata !DIExpression()), !dbg !13232
  %2 = udiv i64 %0, 10, !dbg !13234
  ret i64 %2, !dbg !13238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13239 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13240, !srcloc !13242
  tail call void @z_impl_k_yield() #24, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13249, metadata !DIExpression()), !dbg !13251
  %2 = sext i32 %0 to i64, !dbg !13252
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !13253
  call void @llvm.dbg.value(metadata i64 %3, metadata !13250, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13251
  %4 = shl i64 %3, 32, !dbg !13254
  %5 = ashr exact i64 %4, 32, !dbg !13254
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !13255
  call void @llvm.dbg.value(metadata i32 %6, metadata !13250, metadata !DIExpression()), !dbg !13251
  %7 = sext i32 %6 to i64, !dbg !13256
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !13257
  %9 = trunc i64 %8 to i32, !dbg !13257
  ret i32 %9, !dbg !13258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13259 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13261, metadata !DIExpression()), !dbg !13262
  call void @llvm.dbg.value(metadata i64 %0, metadata !11650, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11653, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i32 10000, metadata !11654, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i8 1, metadata !11655, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i1 false, metadata !11656, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13263
  call void @llvm.dbg.value(metadata i1 true, metadata !11657, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13263
  call void @llvm.dbg.value(metadata i8 0, metadata !11658, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i1 false, metadata !11659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13263
  call void @llvm.dbg.value(metadata i1 true, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13263
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !13263
  %2 = add i64 %0, 99, !dbg !13265
  call void @llvm.dbg.value(metadata i64 %2, metadata !11650, metadata !DIExpression()), !dbg !13263
  %3 = udiv i64 %2, 100, !dbg !13266
  ret i64 %3, !dbg !13267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13268 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13270, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.value(metadata i64 %0, metadata !11650, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata i32 10000, metadata !11653, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11654, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata i8 1, metadata !11655, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata i1 false, metadata !11656, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13272
  call void @llvm.dbg.value(metadata i1 false, metadata !11657, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13272
  call void @llvm.dbg.value(metadata i8 0, metadata !11658, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata i1 true, metadata !11659, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13272
  call void @llvm.dbg.value(metadata i1 false, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13272
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !13272
  call void @llvm.dbg.value(metadata i64 0, metadata !11661, metadata !DIExpression()), !dbg !13272
  %2 = mul i64 %0, 100, !dbg !13274
  ret i64 %2, !dbg !13276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13279, metadata !DIExpression()), !dbg !13280
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !13281
  br i1 %2, label %14, label %3, !dbg !13283

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13284
  %5 = icmp slt i32 %4, 0, !dbg !13286
  br i1 %5, label %6, label %10, !dbg !13287

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13288
  %8 = load i8, i8* %7, align 1, !dbg !13288
  %9 = icmp eq i8 %8, 16, !dbg !13291
  br i1 %9, label %10, label %14, !dbg !13292

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13293
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13294
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13295, !srcloc !12254
  call void @llvm.dbg.value(metadata i32 %11, metadata !12250, metadata !DIExpression()) #23, !dbg !13299
  %12 = icmp eq i32 %11, 0, !dbg !13300
  br i1 %12, label %13, label %14, !dbg !13301

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13302
  br label %14, !dbg !13304

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13308, metadata !DIExpression()), !dbg !13309
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13310
  %3 = load i8, i8* %2, align 1, !dbg !13310
  %4 = and i8 %3, 2, !dbg !13311
  %5 = icmp ne i8 %4, 0, !dbg !13312
  ret i1 %5, !dbg !13313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13314 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13319
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13318, metadata !DIExpression()), !dbg !13320
  ret %struct.k_thread* %1, !dbg !13321
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13322 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13323, !srcloc !12254
  call void @llvm.dbg.value(metadata i32 %1, metadata !12250, metadata !DIExpression()) #23, !dbg !13326
  %2 = icmp eq i32 %1, 0, !dbg !13327
  br i1 %2, label %3, label %8, !dbg !13328

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13329
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !13330
  %6 = icmp ne i32 %5, 0, !dbg !13328
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13332 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13334, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !13337
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13339, !srcloc !11618
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13339
  call void @llvm.dbg.value(metadata i32 %3, metadata !11615, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %3, metadata !11609, metadata !DIExpression()) #23, !dbg !13337
  call void @llvm.dbg.value(metadata i32 %3, metadata !13335, metadata !DIExpression()), !dbg !13336
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13342
  %5 = load i8, i8* %4, align 4, !dbg !13342
  %6 = and i8 %5, 1, !dbg !13344
  %7 = icmp eq i8 %6, 0, !dbg !13345
  br i1 %7, label %9, label %8, !dbg !13346

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !13347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !13347
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !13350
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13352, !srcloc !11644
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13353, !srcloc !13355
  br label %24, !dbg !13356

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13357
  %11 = load i8, i8* %10, align 1, !dbg !13357
  %12 = and i8 %11, 8, !dbg !13359
  %13 = icmp eq i8 %12, 0, !dbg !13360
  br i1 %13, label %15, label %14, !dbg !13361

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !13362
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !13362
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !13365
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13367, !srcloc !11644
  br label %24, !dbg !13368

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !13369
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13370
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13372
  br i1 %17, label %18, label %23, !dbg !13373

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13374, !srcloc !12254
  call void @llvm.dbg.value(metadata i32 %19, metadata !12250, metadata !DIExpression()) #23, !dbg !13377
  %20 = icmp eq i32 %19, 0, !dbg !13378
  br i1 %20, label %21, label %23, !dbg !13379

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12214, metadata !DIExpression()) #23, !dbg !13380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12219, metadata !DIExpression()) #23, !dbg !13380
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13383
  br label %23, !dbg !13384

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11630, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 %3, metadata !11638, metadata !DIExpression()) #23, !dbg !13387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13389, !srcloc !11644
  br label %24, !dbg !13390

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13393, metadata !DIExpression()), !dbg !13394
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13395
  %3 = load i8, i8* %2, align 1, !dbg !13395
  %4 = and i8 %3, 8, !dbg !13397
  %5 = icmp eq i8 %4, 0, !dbg !13398
  br i1 %5, label %6, label %20, !dbg !13399

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13400
  %8 = or i8 %7, 8, !dbg !13400
  store i8 %8, i8* %2, align 1, !dbg !13400
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !13402
  br i1 %9, label %10, label %12, !dbg !13404

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11772, metadata !DIExpression()) #23, !dbg !13405
  %11 = and i8 %8, 95, !dbg !13408
  store i8 %11, i8* %2, align 1, !dbg !13408
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11780, metadata !DIExpression()) #23, !dbg !13409
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !13411
  br label %12, !dbg !13412

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13413
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13413
  %15 = icmp eq %union.anon* %14, null, !dbg !13415
  br i1 %15, label %17, label %16, !dbg !13416

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13417
  br label %17, !dbg !13419

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !13420
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13421
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !13422
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13423
  br label %20, !dbg !13424

20:                                               ; preds = %17, %1
  ret void, !dbg !13425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13426 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13430, metadata !DIExpression()), !dbg !13432
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13433
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13431, metadata !DIExpression()), !dbg !13432
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13434
  br i1 %3, label %10, label %4, !dbg !13435

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13436
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !13438
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13439, metadata !DIExpression()), !dbg !13445
  call void @llvm.dbg.value(metadata i32 0, metadata !13444, metadata !DIExpression()), !dbg !13445
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13447
  store i32 0, i32* %7, align 4, !dbg !13448
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13449
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13433
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13431, metadata !DIExpression()), !dbg !13432
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13434
  br i1 %9, label %10, label %4, !dbg !13435, !llvm.loop !13450

10:                                               ; preds = %4, %1
  ret void, !dbg !13452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13453 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13458, metadata !DIExpression()), !dbg !13461
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13457, metadata !DIExpression()), !dbg !13461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !13462
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13464, !srcloc !11618
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13464
  call void @llvm.dbg.value(metadata i32 %4, metadata !11615, metadata !DIExpression()) #23, !dbg !13466
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !13466
  call void @llvm.dbg.value(metadata i32 %4, metadata !11609, metadata !DIExpression()) #23, !dbg !13462
  call void @llvm.dbg.value(metadata i32 %4, metadata !13459, metadata !DIExpression()), !dbg !13461
  call void @llvm.dbg.value(metadata i32 0, metadata !13460, metadata !DIExpression()), !dbg !13461
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13467
  %6 = load i8, i8* %5, align 1, !dbg !13467
  %7 = and i8 %6, 8, !dbg !13469
  %8 = icmp eq i8 %7, 0, !dbg !13470
  br i1 %8, label %9, label %24, !dbg !13471

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13458, metadata !DIExpression()), !dbg !13461
  %11 = icmp eq i64 %10, 0, !dbg !13472
  br i1 %11, label %24, label %12, !dbg !13474

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13475
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13477
  br i1 %14, label %24, label %15, !dbg !13478

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13479
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13479
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13480
  %19 = icmp eq %union.anon* %17, %18, !dbg !13481
  br i1 %19, label %24, label %20, !dbg !13482

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13483
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !13485
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13486
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %4, metadata !12214, metadata !DIExpression()) #23, !dbg !13488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12219, metadata !DIExpression()) #23, !dbg !13488
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !13490
  call void @llvm.dbg.value(metadata i32 %23, metadata !13460, metadata !DIExpression()), !dbg !13461
  br label %26, !dbg !13491

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13492
  call void @llvm.dbg.value(metadata i32 %25, metadata !13460, metadata !DIExpression()), !dbg !13461
  call void @llvm.dbg.value(metadata i32 %4, metadata !11630, metadata !DIExpression()) #23, !dbg !13493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !13493
  call void @llvm.dbg.value(metadata i32 %4, metadata !11638, metadata !DIExpression()) #23, !dbg !13495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13497, !srcloc !11644
  br label %26, !dbg !13498

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13461
  ret i32 %27, !dbg !13499
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13500 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13504, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 %1, metadata !13505, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i8* %2, metadata !13506, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i8 0, metadata !13508, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 0, metadata !13509, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11603, metadata !DIExpression()) #23, !dbg !13514
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13516, !srcloc !11618
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()) #23, !dbg !13518
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()) #23, !dbg !13518
  call void @llvm.dbg.value(metadata i32 undef, metadata !11609, metadata !DIExpression()) #23, !dbg !13514
  call void @llvm.dbg.value(metadata i32 undef, metadata !13511, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i8 poison, metadata !13508, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 undef, metadata !13509, metadata !DIExpression()), !dbg !13513
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !13519
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13507, metadata !DIExpression()), !dbg !13512
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13522
  br i1 %7, label %12, label %8, !dbg !13524

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13525, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata i32 %1, metadata !13531, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata i8* %2, metadata !13532, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13439, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata i32 %1, metadata !13444, metadata !DIExpression()), !dbg !13536
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13538
  store i32 %1, i32* %9, align 4, !dbg !13539
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13540
  store i8* %2, i8** %10, align 4, !dbg !13541
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13542
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !13543
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !13544
  call void @llvm.dbg.value(metadata i8 1, metadata !13508, metadata !DIExpression()), !dbg !13512
  br label %12, !dbg !13545

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13516
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13516
  call void @llvm.dbg.value(metadata i32 %14, metadata !11615, metadata !DIExpression()) #23, !dbg !13518
  call void @llvm.dbg.value(metadata i32 %14, metadata !11609, metadata !DIExpression()) #23, !dbg !13514
  call void @llvm.dbg.value(metadata i32 %14, metadata !13511, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata i8 poison, metadata !13508, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.value(metadata i32 undef, metadata !11630, metadata !DIExpression()) #23, !dbg !13546
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11635, metadata !DIExpression()) #23, !dbg !13546
  call void @llvm.dbg.value(metadata i32 undef, metadata !11638, metadata !DIExpression()) #23, !dbg !13548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13550, !srcloc !11644
  call void @llvm.dbg.value(metadata i32 undef, metadata !13509, metadata !DIExpression()), !dbg !13513
  ret i1 %13, !dbg !13551
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13552 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13558, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.value(metadata i64 undef, metadata !13560, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13557, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13559, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.value(metadata i8** %4, metadata !13561, metadata !DIExpression()), !dbg !13563
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !13564
  call void @llvm.dbg.value(metadata i32 %6, metadata !13562, metadata !DIExpression()), !dbg !13563
  %7 = icmp eq i8** %4, null, !dbg !13565
  br i1 %7, label %12, label %8, !dbg !13567

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13568
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13570
  %11 = load i8*, i8** %10, align 4, !dbg !13570
  store i8* %11, i8** %4, align 4, !dbg !13571
  br label %12, !dbg !13572

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13573
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13574 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !13576
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !13577
  ret void, !dbg !13578
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13579 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13589, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13587, metadata !DIExpression()), !dbg !13606
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13588, metadata !DIExpression()), !dbg !13606
  %5 = icmp eq i64 %4, -1, !dbg !13607
  br i1 %5, label %55, label %6, !dbg !13609

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13610
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13611
  call void @llvm.dbg.value(metadata i32 0, metadata !13590, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !13620
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13622, !srcloc !13628
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13622
  call void @llvm.dbg.value(metadata i32 %9, metadata !13625, metadata !DIExpression()) #23, !dbg !13629
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !13629
  call void @llvm.dbg.value(metadata i32 %9, metadata !13619, metadata !DIExpression()) #23, !dbg !13620
  call void @llvm.dbg.value(metadata i32 %9, metadata !13596, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13590, metadata !DIExpression()), !dbg !13612
  %10 = icmp slt i64 %4, -1, !dbg !13630
  br i1 %10, label %11, label %17, !dbg !13631

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13632
  %13 = add i64 %4, %12, !dbg !13633
  %14 = sub i64 -2, %13, !dbg !13633
  call void @llvm.dbg.value(metadata i64 %14, metadata !13600, metadata !DIExpression()), !dbg !13634
  %15 = icmp sgt i64 %14, 1, !dbg !13635
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13635
  br label %22, !dbg !13636

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13637
  %19 = tail call fastcc i32 @elapsed.140() #24, !dbg !13639
  %20 = sext i32 %19 to i64, !dbg !13639
  %21 = add nsw i64 %18, %20, !dbg !13640
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13641
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13642
  store i64 %23, i64* %24, align 8, !dbg !13643
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !13644
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !13597, metadata !DIExpression()), !dbg !13646
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13647
  br i1 %26, label %42, label %27, !dbg !13647

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13648
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !13597, metadata !DIExpression()), !dbg !13646
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13652
  %31 = load i64, i64* %30, align 8, !dbg !13652
  %32 = icmp slt i64 %28, %31, !dbg !13653
  br i1 %32, label %33, label %38, !dbg !13654

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13652
  %35 = sub nsw i64 %31, %28, !dbg !13655
  store i64 %35, i64* %34, align 8, !dbg !13655
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13657
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13658
  tail call fastcc void @sys_dlist_insert.141(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !13659
  br label %44, !dbg !13660

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13661
  store i64 %39, i64* %24, align 8, !dbg !13661
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !13662
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !13597, metadata !DIExpression()), !dbg !13646
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13647
  br i1 %41, label %42, label %27, !dbg !13647, !llvm.loop !13663

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13665
  tail call fastcc void @sys_dlist_append.142(%struct._dnode* noundef %43) #24, !dbg !13668
  br label %44, !dbg !13669

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !13670
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13671
  br i1 %46, label %47, label %54, !dbg !13672

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !13673
  call void @llvm.dbg.value(metadata i32 %48, metadata !13603, metadata !DIExpression()), !dbg !13674
  %49 = icmp ne i32 %48, 0, !dbg !13675
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13677
  br i1 %52, label %54, label %53, !dbg !13677

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !13678
  br label %54, !dbg !13680

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13681, metadata !DIExpression()) #23, !dbg !13687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !13687
  call void @llvm.dbg.value(metadata i32 %9, metadata !13689, metadata !DIExpression()) #23, !dbg !13692
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13694, !srcloc !13695
  call void @llvm.dbg.value(metadata i32 undef, metadata !13590, metadata !DIExpression()), !dbg !13612
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.140() unnamed_addr #1 !dbg !13697 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13700
  %2 = icmp eq i32 %1, 0, !dbg !13701
  br i1 %2, label %3, label %5, !dbg !13700

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !13702
  br label %5, !dbg !13700

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13700
  ret i32 %6, !dbg !13703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !13704 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.145() #24, !dbg !13710
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13708, metadata !DIExpression()), !dbg !13711
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13712
  ret %struct._timeout* %2, !dbg !13713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.141(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13714 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13718, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13719, metadata !DIExpression()), !dbg !13722
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13723
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13723
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13720, metadata !DIExpression()), !dbg !13722
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13724
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13725
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13726
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13727
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13728
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13729
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13730
  ret void, !dbg !13731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !13732 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13736, metadata !DIExpression()), !dbg !13738
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13739
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.143(%struct._dnode* noundef %2) #24, !dbg !13740
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13737, metadata !DIExpression()), !dbg !13738
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !13741
  ret %struct._timeout* %4, !dbg !13742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.142(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13743 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13748, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13749, metadata !DIExpression()), !dbg !13751
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13752
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13750, metadata !DIExpression()), !dbg !13751
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13753
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !13754
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13755
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !13756
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !13757
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13758
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13759
  ret void, !dbg !13760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !13761 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !13766
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !13763, metadata !DIExpression()), !dbg !13767
  %2 = tail call fastcc i32 @elapsed.140() #24, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %2, metadata !13764, metadata !DIExpression()), !dbg !13767
  %3 = icmp eq %struct._timeout* %1, null, !dbg !13769
  br i1 %3, label %14, label %4, !dbg !13771

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !13772
  %6 = load i64, i64* %5, align 8, !dbg !13772
  %7 = sext i32 %2 to i64, !dbg !13773
  %8 = sub nsw i64 %6, %7, !dbg !13774
  %9 = icmp sgt i64 %8, 2147483647, !dbg !13775
  br i1 %9, label %14, label %10, !dbg !13776

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !13777
  %12 = select i1 %11, i64 %8, i64 0, !dbg !13777
  %13 = trunc i64 %12 to i32, !dbg !13777
  call void @llvm.dbg.value(metadata i32 %13, metadata !13765, metadata !DIExpression()), !dbg !13767
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !13779
  call void @llvm.dbg.value(metadata i32 %15, metadata !13765, metadata !DIExpression()), !dbg !13767
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13780
  %17 = icmp ne i32 %16, 0, !dbg !13782
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !13783
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !13783
  call void @llvm.dbg.value(metadata i32 %20, metadata !13765, metadata !DIExpression()), !dbg !13767
  ret i32 %20, !dbg !13784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.143(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13785 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13789, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13790, metadata !DIExpression()), !dbg !13791
  %2 = icmp eq %struct._dnode* %0, null, !dbg !13792
  br i1 %2, label %5, label %3, !dbg !13793

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.144(%struct._dnode* noundef nonnull %0) #24, !dbg !13794
  br label %5, !dbg !13793

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !13793
  ret %struct._dnode* %6, !dbg !13795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.144(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13796 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13798, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13799, metadata !DIExpression()), !dbg !13800
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13801
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !13802
  br i1 %3, label %7, label %4, !dbg !13803

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13804
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !13804
  br label %7, !dbg !13803

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !13803
  ret %struct._dnode* %8, !dbg !13805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.145() unnamed_addr #4 !dbg !13806 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13810, metadata !DIExpression()), !dbg !13811
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.146() #24, !dbg !13812
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !13812
  ret %struct._dnode* %3, !dbg !13813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.146() unnamed_addr #4 !dbg !13814 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13818, metadata !DIExpression()), !dbg !13819
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !13820
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !13821
  ret i1 %2, !dbg !13822
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13823 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13827, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 -22, metadata !13828, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 0, metadata !13829, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !13834
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13836, !srcloc !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13625, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #23, !dbg !13834
  call void @llvm.dbg.value(metadata i32 undef, metadata !13831, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i32 -22, metadata !13828, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 undef, metadata !13829, metadata !DIExpression()), !dbg !13833
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !13828, metadata !DIExpression()), !dbg !13832
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.149(%struct._dnode* noundef %3) #24, !dbg !13839
  br i1 %4, label %5, label %6, !dbg !13843

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !13844
  call void @llvm.dbg.value(metadata i32 0, metadata !13828, metadata !DIExpression()), !dbg !13832
  br label %6, !dbg !13846

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !13832
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13836
  call void @llvm.dbg.value(metadata i32 %8, metadata !13625, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata i32 %8, metadata !13619, metadata !DIExpression()) #23, !dbg !13834
  call void @llvm.dbg.value(metadata i32 %8, metadata !13831, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.value(metadata i32 %7, metadata !13828, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 undef, metadata !13681, metadata !DIExpression()) #23, !dbg !13847
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()) #23, !dbg !13849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13851, !srcloc !13695
  call void @llvm.dbg.value(metadata i32 undef, metadata !13829, metadata !DIExpression()), !dbg !13833
  ret i32 %7, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.149(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13853 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13859, metadata !DIExpression()), !dbg !13860
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13861
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13861
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13862
  ret i1 %4, !dbg !13863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13866, metadata !DIExpression()), !dbg !13867
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !13868
  %3 = icmp eq %struct._timeout* %2, null, !dbg !13870
  br i1 %3, label %10, label %4, !dbg !13871

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13872
  %6 = load i64, i64* %5, align 8, !dbg !13872
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !13874
  %8 = load i64, i64* %7, align 8, !dbg !13875
  %9 = add nsw i64 %8, %6, !dbg !13875
  store i64 %9, i64* %7, align 8, !dbg !13875
  br label %10, !dbg !13876

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13877
  tail call fastcc void @sys_dlist_remove.150(%struct._dnode* noundef %11) #24, !dbg !13878
  ret void, !dbg !13879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.150(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13880 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13884, metadata !DIExpression()), !dbg !13887
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13888
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13888
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13885, metadata !DIExpression()), !dbg !13887
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13889
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13889
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13886, metadata !DIExpression()), !dbg !13887
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13890
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13891
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13892
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13893
  tail call fastcc void @sys_dnode_init.151(%struct._dnode* noundef %0) #24, !dbg !13894
  ret void, !dbg !13895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.151(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !13896 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13898, metadata !DIExpression()), !dbg !13899
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13900
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13901
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13902
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13903
  ret void, !dbg !13904
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13905 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13911, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i64 0, metadata !13912, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i32 0, metadata !13913, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !13918
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13920, !srcloc !13628
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13920
  call void @llvm.dbg.value(metadata i32 %3, metadata !13625, metadata !DIExpression()) #23, !dbg !13922
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !13922
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #23, !dbg !13918
  call void @llvm.dbg.value(metadata i32 %3, metadata !13915, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.value(metadata i64 0, metadata !13912, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i32 undef, metadata !13913, metadata !DIExpression()), !dbg !13917
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !13923
  call void @llvm.dbg.value(metadata i64 %4, metadata !13912, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i32 %3, metadata !13681, metadata !DIExpression()) #23, !dbg !13926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !13926
  call void @llvm.dbg.value(metadata i32 %3, metadata !13689, metadata !DIExpression()) #23, !dbg !13928
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13930, !srcloc !13695
  call void @llvm.dbg.value(metadata i32 undef, metadata !13913, metadata !DIExpression()), !dbg !13917
  ret i64 %4, !dbg !13931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !13932 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13934, metadata !DIExpression()), !dbg !13938
  call void @llvm.dbg.value(metadata i64 0, metadata !13935, metadata !DIExpression()), !dbg !13938
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.152(%struct._timeout* noundef %0) #24, !dbg !13939
  br i1 %2, label %21, label %3, !dbg !13941

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !13942
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !13936, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i64 0, metadata !13935, metadata !DIExpression()), !dbg !13938
  %5 = icmp eq %struct._timeout* %4, null, !dbg !13944
  br i1 %5, label %16, label %6, !dbg !13946

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !13936, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i64 %8, metadata !13935, metadata !DIExpression()), !dbg !13938
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !13947
  %10 = load i64, i64* %9, align 8, !dbg !13947
  %11 = add nsw i64 %10, %8, !dbg !13949
  call void @llvm.dbg.value(metadata i64 %11, metadata !13935, metadata !DIExpression()), !dbg !13938
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !13950
  br i1 %12, label %16, label %13, !dbg !13952

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !13953
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !13936, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i64 %11, metadata !13935, metadata !DIExpression()), !dbg !13938
  %15 = icmp eq %struct._timeout* %14, null, !dbg !13944
  br i1 %15, label %16, label %6, !dbg !13946, !llvm.loop !13954

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !13938
  call void @llvm.dbg.value(metadata i64 %17, metadata !13935, metadata !DIExpression()), !dbg !13938
  %18 = tail call fastcc i32 @elapsed.140() #24, !dbg !13956
  %19 = sext i32 %18 to i64, !dbg !13956
  %20 = sub nsw i64 %17, %19, !dbg !13957
  br label %21, !dbg !13958

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !13938
  ret i64 %22, !dbg !13959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.152(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13960 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13964, metadata !DIExpression()), !dbg !13965
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13966
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.149(%struct._dnode* noundef %2) #24, !dbg !13967
  %4 = xor i1 %3, true, !dbg !13968
  ret i1 %4, !dbg !13969
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13970 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13972, metadata !DIExpression()), !dbg !13977
  call void @llvm.dbg.value(metadata i64 0, metadata !13973, metadata !DIExpression()), !dbg !13977
  call void @llvm.dbg.value(metadata i32 0, metadata !13974, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !13979
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13981, !srcloc !13628
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13981
  call void @llvm.dbg.value(metadata i32 %3, metadata !13625, metadata !DIExpression()) #23, !dbg !13983
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !13983
  call void @llvm.dbg.value(metadata i32 %3, metadata !13619, metadata !DIExpression()) #23, !dbg !13979
  call void @llvm.dbg.value(metadata i32 %3, metadata !13976, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i64 0, metadata !13973, metadata !DIExpression()), !dbg !13977
  call void @llvm.dbg.value(metadata i32 undef, metadata !13974, metadata !DIExpression()), !dbg !13978
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13984
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !13987
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13973, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13977
  call void @llvm.dbg.value(metadata i32 %3, metadata !13681, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %3, metadata !13689, metadata !DIExpression()) #23, !dbg !13990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13992, !srcloc !13695
  call void @llvm.dbg.value(metadata i32 undef, metadata !13974, metadata !DIExpression()), !dbg !13978
  %6 = add i64 %5, %4, !dbg !13993
  ret i64 %6, !dbg !13994
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13995 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13997, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i32 0, metadata !13998, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !14003
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14005, !srcloc !13628
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14005
  call void @llvm.dbg.value(metadata i32 %2, metadata !13625, metadata !DIExpression()) #23, !dbg !14007
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #23, !dbg !14003
  call void @llvm.dbg.value(metadata i32 %2, metadata !14000, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i32 -1, metadata !13997, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i32 undef, metadata !13998, metadata !DIExpression()), !dbg !14002
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %3, metadata !13997, metadata !DIExpression()), !dbg !14001
  call void @llvm.dbg.value(metadata i32 %2, metadata !13681, metadata !DIExpression()) #23, !dbg !14011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !14011
  call void @llvm.dbg.value(metadata i32 %2, metadata !13689, metadata !DIExpression()) #23, !dbg !14013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14015, !srcloc !13695
  call void @llvm.dbg.value(metadata i32 undef, metadata !13998, metadata !DIExpression()), !dbg !14002
  ret i32 %3, !dbg !14016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14019, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.value(metadata i1 %1, metadata !14020, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14029
  call void @llvm.dbg.value(metadata i32 0, metadata !14021, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !14031
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14033, !srcloc !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13625, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #23, !dbg !14031
  call void @llvm.dbg.value(metadata i32 undef, metadata !14023, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14021, metadata !DIExpression()), !dbg !14030
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !14036
  call void @llvm.dbg.value(metadata i32 %4, metadata !14024, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i1 undef, metadata !14027, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14037
  %5 = icmp slt i32 %4, 2, !dbg !14038
  call void @llvm.dbg.value(metadata i1 %5, metadata !14028, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14037
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14039
  call void @llvm.dbg.value(metadata i1 %6, metadata !14027, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14037
  br i1 %7, label %11, label %8, !dbg !14039

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14041
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14041
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !14043
  br label %11, !dbg !14044

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14033
  call void @llvm.dbg.value(metadata i32 %12, metadata !13625, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 %12, metadata !13619, metadata !DIExpression()) #23, !dbg !14031
  call void @llvm.dbg.value(metadata i32 %12, metadata !14023, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !13681, metadata !DIExpression()) #23, !dbg !14045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !14045
  call void @llvm.dbg.value(metadata i32 undef, metadata !13689, metadata !DIExpression()) #23, !dbg !14047
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14049, !srcloc !13695
  call void @llvm.dbg.value(metadata i32 1, metadata !14021, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14021, metadata !DIExpression()), !dbg !14030
  ret void, !dbg !14050
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14055, metadata !DIExpression()), !dbg !14060
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !14061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !14062
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14064, !srcloc !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13625, metadata !DIExpression()) #23, !dbg !14066
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !14066
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #23, !dbg !14062
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()), !dbg !14060
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14060
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()), !dbg !14060
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !14067
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14068
  br i1 %4, label %28, label %5, !dbg !14069

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14070
  %10 = load i64, i64* %9, align 8, !dbg !14070
  %11 = sext i32 %8 to i64, !dbg !14071
  %12 = icmp sgt i64 %10, %11, !dbg !14072
  br i1 %12, label %26, label %13, !dbg !14073

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14060
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14057, metadata !DIExpression()), !dbg !14074
  %15 = trunc i64 %10 to i32, !dbg !14075
  call void @llvm.dbg.value(metadata i32 %15, metadata !14059, metadata !DIExpression()), !dbg !14074
  %16 = sext i32 %15 to i64, !dbg !14076
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14077
  %18 = add i64 %17, %16, !dbg !14077
  store i64 %18, i64* @curr_tick, align 8, !dbg !14077
  store i64 0, i64* %9, align 8, !dbg !14078
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !14079
  call void @llvm.dbg.value(metadata i32 %14, metadata !13681, metadata !DIExpression()) #23, !dbg !14080
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !14080
  call void @llvm.dbg.value(metadata i32 %14, metadata !13689, metadata !DIExpression()) #23, !dbg !14082
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14084, !srcloc !13695
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14085
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14085
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !14086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !14087
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14089, !srcloc !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13625, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()) #23, !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()), !dbg !14060
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14092
  %23 = sub nsw i32 %22, %15, !dbg !14092
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14060
  call void @llvm.dbg.value(metadata i32 undef, metadata !14056, metadata !DIExpression()), !dbg !14060
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !14067
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14068
  br i1 %25, label %28, label %5, !dbg !14069, !llvm.loop !14093

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14095
  store i64 %27, i64* %9, align 8, !dbg !14095
  br label %32, !dbg !14098

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14060
  %31 = sext i32 %30 to i64, !dbg !14099
  br label %32, !dbg !14099

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14099
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14060
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14100
  %37 = add i64 %36, %33, !dbg !14100
  store i64 %37, i64* @curr_tick, align 8, !dbg !14100
  store i32 0, i32* @announce_remaining, align 4, !dbg !14101
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !14102
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !14103
  call void @llvm.dbg.value(metadata i32 %35, metadata !13681, metadata !DIExpression()) #23, !dbg !14104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !14104
  call void @llvm.dbg.value(metadata i32 %35, metadata !13689, metadata !DIExpression()) #23, !dbg !14106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14108, !srcloc !13695
  ret void, !dbg !14109
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14110 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14114, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 0, metadata !14115, metadata !DIExpression()), !dbg !14119
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13613, metadata !DIExpression()) #23, !dbg !14120
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14122, !srcloc !13628
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14122
  call void @llvm.dbg.value(metadata i32 %2, metadata !13625, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %2, metadata !13619, metadata !DIExpression()) #23, !dbg !14120
  call void @llvm.dbg.value(metadata i32 %2, metadata !14117, metadata !DIExpression()), !dbg !14119
  call void @llvm.dbg.value(metadata i64 0, metadata !14114, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i32 undef, metadata !14115, metadata !DIExpression()), !dbg !14119
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14125
  %4 = tail call fastcc i32 @elapsed.140() #24, !dbg !14128
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14114, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14118
  call void @llvm.dbg.value(metadata i32 %2, metadata !13681, metadata !DIExpression()) #23, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13686, metadata !DIExpression()) #23, !dbg !14129
  call void @llvm.dbg.value(metadata i32 %2, metadata !13689, metadata !DIExpression()) #23, !dbg !14131
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14133, !srcloc !13695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14115, metadata !DIExpression()), !dbg !14119
  %5 = sext i32 %4 to i64, !dbg !14128
  %6 = add i64 %3, %5, !dbg !14134
  ret i64 %6, !dbg !14135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14136 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14137
  %2 = trunc i64 %1 to i32, !dbg !14138
  ret i32 %2, !dbg !14139
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14140 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14141
  ret i64 %1, !dbg !14142
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14145, metadata !DIExpression()), !dbg !14152
  %2 = icmp eq i32 %0, 0, !dbg !14153
  br i1 %2, label %10, label %3, !dbg !14155

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14156
  call void @llvm.dbg.value(metadata i32 %4, metadata !14146, metadata !DIExpression()), !dbg !14152
  %5 = mul i32 %0, 84, !dbg !14157
  call void @llvm.dbg.value(metadata i32 %5, metadata !14147, metadata !DIExpression()), !dbg !14152
  br label %6, !dbg !14158

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14159
  call void @llvm.dbg.value(metadata i32 %7, metadata !14148, metadata !DIExpression()), !dbg !14160
  %8 = sub i32 %7, %4, !dbg !14161
  %9 = icmp ult i32 %8, %5, !dbg !14163
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14165 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !14166
  ret i32 %1, !dbg !14167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14168 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !14170
  ret i32 %1, !dbg !14171
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14172 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14176, metadata !DIExpression()), !dbg !14178
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14179

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !14180
  br label %14, !dbg !14184

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14177, metadata !DIExpression()), !dbg !14178
  %6 = icmp slt i64 %2, -1, !dbg !14185
  br i1 %6, label %7, label %9, !dbg !14188

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14189
  br label %14, !dbg !14190

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !14192
  %11 = icmp ugt i64 %2, 1, !dbg !14193
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14193
  %13 = add nsw i64 %10, %12, !dbg !14194
  br label %14, !dbg !14195

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14196
  ret i64 %15, !dbg !14197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14198 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.161, i32 0, i32 0)) #25, !dbg !14200
  ret void, !dbg !14201
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!615, !2, !2172, !2174, !27, !2264, !2266, !2304, !111, !168, !2306, !2317, !2363, !2365, !2393, !2421, !2464, !2536, !2581, !197, !351, !2609, !387, !397, !422, !647, !2614, !783, !849, !1158, !1377, !2652, !1490, !1580, !2654, !2739, !2803, !1631, !2806, !1638, !2000, !2824, !2020, !2826, !2135, !2829}
!llvm.ident = !{!2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831, !2831}
!llvm.module.flags = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 372, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !526, line: 72, type: !610, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !512, globals: !523, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!455 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!456 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!457 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!458 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!459 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!460 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!461 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!462 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!463 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!464 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!465 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!466 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!467 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!468 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!469 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!470 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!471 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!472 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!473 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!474 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!475 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!476 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!477 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!478 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!479 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!480 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!481 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!482 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!483 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!484 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!485 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!486 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!487 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!488 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!489 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!490 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!491 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!492 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!493 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!494 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!495 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!496 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!497 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!498 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!499 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!500 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!501 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!502 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!503 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!504 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!505 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!506 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!507 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!508 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!509 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!510 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!511 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!512 = !{!200, !103, !102, !513}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 364, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 356, size: 192, elements: !516)
!516 = !{!517, !518, !519, !520, !521, !522}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !515, file: !116, line: 358, baseType: !120, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !515, file: !116, line: 359, baseType: !120, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !515, file: !116, line: 360, baseType: !120, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !515, file: !116, line: 361, baseType: !120, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !515, file: !116, line: 362, baseType: !120, size: 32, offset: 128)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !515, file: !116, line: 363, baseType: !120, size: 32, offset: 160)
!523 = !{!524, !530, !546, !557, !574, !420, !576, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608}
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !422, file: !526, line: 424, type: !527, isLocal: false, isDefinition: true, align: 16)
!526 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 4)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !422, file: !526, line: 424, type: !532, isLocal: false, isDefinition: true, align: 32)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !533)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !534)
!534 = !{!535, !536, !537, !538, !544, !545}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !533, file: !141, line: 380, baseType: !144, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !533, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !533, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !533, file: !141, line: 386, baseType: !539, size: 32, offset: 96)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !541)
!541 = !{!542, !543}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !540, file: !141, line: 359, baseType: !154, size: 8)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !540, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !533, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !533, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !422, file: !526, line: 424, type: !548, isLocal: true, isDefinition: true, align: 32)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !550)
!550 = !{!551, !556}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !549, file: !132, line: 60, baseType: !552, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!553 = !DISubroutineType(types: !554)
!554 = !{!103, !555}
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !549, file: !132, line: 65, baseType: !555, size: 32, offset: 32)
!557 = !DIGlobalVariableExpression(var: !558, expr: !DIExpression())
!558 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !526, line: 423, type: !559, isLocal: true, isDefinition: true)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !526, line: 107, size: 1472, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !559, file: !526, line: 109, baseType: !562, size: 1472)
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 1472, elements: !572)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !526, line: 101, size: 64, elements: !564)
!564 = !{!565, !571}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !563, file: !526, line: 102, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !567, line: 63, baseType: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!569 = !DISubroutineType(types: !570)
!570 = !{null, !103, !102}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !563, file: !526, line: 103, baseType: !102, size: 32, offset: 32)
!572 = !{!573}
!573 = !DISubrange(count: 23)
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !422, file: !526, line: 424, type: !540, isLocal: true, isDefinition: true, align: 8)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !578, file: !526, line: 493, type: !583, isLocal: true, isDefinition: true, align: 32)
!578 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !526, file: !526, line: 460, type: !579, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !581)
!579 = !DISubroutineType(types: !580)
!580 = !{null, !555}
!581 = !{!582}
!582 = !DILocalVariable(name: "dev", arg: 1, scope: !578, file: !526, line: 460, type: !555)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !584)
!584 = !{!585, !587, !588, !589}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !583, file: !10, line: 55, baseType: !586, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !583, file: !10, line: 57, baseType: !586, size: 32, offset: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !583, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !583, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !578, file: !526, line: 497, type: !583, isLocal: true, isDefinition: true, align: 32)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !578, file: !526, line: 507, type: !583, isLocal: true, isDefinition: true, align: 32)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !578, file: !526, line: 512, type: !583, isLocal: true, isDefinition: true, align: 32)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !578, file: !526, line: 516, type: !583, isLocal: true, isDefinition: true, align: 32)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !578, file: !526, line: 523, type: !583, isLocal: true, isDefinition: true, align: 32)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !578, file: !526, line: 527, type: !583, isLocal: true, isDefinition: true, align: 32)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !578, file: !526, line: 581, type: !583, isLocal: true, isDefinition: true, align: 32)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !578, file: !526, line: 586, type: !583, isLocal: true, isDefinition: true, align: 32)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !578, file: !526, line: 591, type: !583, isLocal: true, isDefinition: true, align: 32)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !578, file: !526, line: 595, type: !583, isLocal: true, isDefinition: true, align: 32)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 736, elements: !572)
!611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !612)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 154, baseType: !425)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !615, file: !620, line: 22, type: !642, isLocal: false, isDefinition: true, align: 16)
!615 = distinct !DICompileUnit(language: DW_LANG_C99, file: !616, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !617, splitDebugInlining: false, nameTableKind: None)
!616 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!617 = !{!618, !613, !624, !626, !628, !630, !632, !634, !636, !638, !640}
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !615, file: !620, line: 17, type: !621, isLocal: false, isDefinition: true, align: 16)
!620 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !622)
!622 = !{!623}
!623 = !DISubrange(count: 12)
!624 = !DIGlobalVariableExpression(var: !625, expr: !DIExpression())
!625 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !615, file: !620, line: 29, type: !527, isLocal: false, isDefinition: true, align: 16)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !615, file: !620, line: 36, type: !527, isLocal: false, isDefinition: true, align: 16)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !615, file: !620, line: 43, type: !527, isLocal: false, isDefinition: true, align: 16)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !615, file: !620, line: 50, type: !527, isLocal: false, isDefinition: true, align: 16)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !615, file: !620, line: 57, type: !527, isLocal: false, isDefinition: true, align: 16)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !615, file: !620, line: 64, type: !527, isLocal: false, isDefinition: true, align: 16)
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !615, file: !620, line: 71, type: !527, isLocal: false, isDefinition: true, align: 16)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !615, file: !620, line: 78, type: !527, isLocal: false, isDefinition: true, align: 16)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !615, file: !620, line: 85, type: !527, isLocal: false, isDefinition: true, align: 16)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !643)
!643 = !{!644}
!644 = !DISubrange(count: 3)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !647, file: !709, line: 398, type: !742, isLocal: true, isDefinition: true)
!647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !649, retainedTypes: !662, globals: !706, splitDebugInlining: false, nameTableKind: None)
!648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!649 = !{!650, !30, !655}
!650 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !651, line: 197, baseType: !32, size: 32, elements: !652)
!651 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{!653, !654}
!653 = !DIEnumerator(name: "SUCCESS", value: 0)
!654 = !DIEnumerator(name: "ERROR", value: 1)
!655 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !656, line: 44, baseType: !32, size: 32, elements: !657)
!656 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = !{!658, !659, !660, !661}
!658 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!659 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!660 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!661 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!662 = !{!102, !103, !121, !663, !699, !705}
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !666)
!666 = !{!667, !668, !669, !670, !671, !672, !673, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !665, file: !116, line: 479, baseType: !120, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !665, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !665, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !665, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !665, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !665, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !665, file: !116, line: 485, baseType: !674, size: 64, offset: 192)
!674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !665, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !665, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !665, file: !116, line: 488, baseType: !674, size: 64, offset: 320)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !665, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !665, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !665, file: !116, line: 491, baseType: !674, size: 64, offset: 448)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !665, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !665, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !665, file: !116, line: 494, baseType: !674, size: 64, offset: 576)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !665, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !665, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !665, file: !116, line: 497, baseType: !674, size: 64, offset: 704)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !665, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !665, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !665, file: !116, line: 500, baseType: !674, size: 64, offset: 832)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !665, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !665, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !665, file: !116, line: 503, baseType: !674, size: 64, offset: 960)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !665, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !665, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !665, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !665, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !665, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !665, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !701, line: 343, size: 64, elements: !702)
!701 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!702 = !{!703, !704}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !700, file: !701, line: 344, baseType: !121, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !700, file: !701, line: 345, baseType: !121, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!706 = !{!707, !713, !729, !740, !645}
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !647, file: !709, line: 752, type: !710, isLocal: false, isDefinition: true, align: 16)
!709 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 848, elements: !711)
!711 = !{!712}
!712 = !DISubrange(count: 53)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !647, file: !709, line: 752, type: !715, isLocal: false, isDefinition: true, align: 32)
!715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !717)
!717 = !{!718, !719, !720, !721, !727, !728}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !716, file: !141, line: 380, baseType: !144, size: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !716, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !716, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !716, file: !141, line: 386, baseType: !722, size: 32, offset: 96)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !724)
!724 = !{!725, !726}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !723, file: !141, line: 359, baseType: !154, size: 8)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !723, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !716, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !716, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !647, file: !709, line: 752, type: !731, isLocal: true, isDefinition: true, align: 32)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !733)
!733 = !{!734, !739}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !732, file: !132, line: 60, baseType: !735, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 32)
!736 = !DISubroutineType(types: !737)
!737 = !{!103, !738}
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !732, file: !132, line: 65, baseType: !738, size: 32, offset: 32)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !647, file: !709, line: 752, type: !723, isLocal: true, isDefinition: true, align: 8)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !656, line: 100, size: 224, elements: !743)
!743 = !{!744, !750, !751, !760, !765, !770, !776}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !742, file: !656, line: 101, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !656, line: 76, baseType: !746)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!747 = !DISubroutineType(types: !748)
!748 = !{!103, !738, !749}
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !656, line: 56, baseType: !102)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !742, file: !656, line: 102, baseType: !745, size: 32, offset: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !742, file: !656, line: 103, baseType: !752, size: 32, offset: 64)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !656, line: 83, baseType: !753)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DISubroutineType(types: !755)
!755 = !{!103, !738, !749, !756, !102}
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !656, line: 72, baseType: !757)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 32)
!758 = !DISubroutineType(types: !759)
!759 = !{null, !738, !749, !102}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !742, file: !656, line: 104, baseType: !761, size: 32, offset: 96)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !656, line: 79, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 32)
!763 = !DISubroutineType(types: !764)
!764 = !{!103, !738, !749, !705}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !742, file: !656, line: 105, baseType: !766, size: 32, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !656, line: 88, baseType: !767)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 32)
!768 = !DISubroutineType(types: !769)
!769 = !{!655, !738, !749}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !742, file: !656, line: 106, baseType: !771, size: 32, offset: 160)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !656, line: 92, baseType: !772)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!773 = !DISubroutineType(types: !774)
!774 = !{!103, !738, !749, !775}
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !656, line: 64, baseType: !102)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !742, file: !656, line: 107, baseType: !777, size: 32, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !656, line: 96, baseType: !778)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!779 = !DISubroutineType(types: !780)
!780 = !{!103, !738, !749, !102}
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !783, file: !840, line: 603, type: !842, isLocal: true, isDefinition: true, align: 32)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !785, globals: !837, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!785 = !{!102, !103, !786}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !789, line: 336, size: 160, elements: !790)
!789 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!790 = !{!791, !811, !815, !819, !832}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !788, file: !789, line: 365, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!793 = !DISubroutineType(types: !794)
!794 = !{!103, !795, !810}
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !798)
!798 = !{!799, !800, !801, !802, !808, !809}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !797, file: !141, line: 380, baseType: !144, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !797, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !797, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !797, file: !141, line: 386, baseType: !803, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !804, file: !141, line: 359, baseType: !154, size: 8)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !804, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !797, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !797, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !788, file: !789, line: 366, baseType: !812, size: 32, offset: 32)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!813 = !DISubroutineType(types: !814)
!814 = !{null, !795, !155}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !788, file: !789, line: 374, baseType: !816, size: 32, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DISubroutineType(types: !818)
!818 = !{!103, !795}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !788, file: !789, line: 377, baseType: !820, size: 32, offset: 96)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DISubroutineType(types: !822)
!822 = !{!103, !795, !823}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !789, line: 122, size: 64, elements: !826)
!826 = !{!827, !828, !829, !830, !831}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !825, file: !789, line: 123, baseType: !121, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !825, file: !789, line: 124, baseType: !154, size: 8, offset: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !825, file: !789, line: 125, baseType: !154, size: 8, offset: 40)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !825, file: !789, line: 126, baseType: !154, size: 8, offset: 48)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !825, file: !789, line: 127, baseType: !154, size: 8, offset: 56)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !788, file: !789, line: 379, baseType: !833, size: 32, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DISubroutineType(types: !835)
!835 = !{!103, !795, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!837 = !{!781, !838}
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !783, file: !840, line: 38, type: !841, isLocal: true, isDefinition: true)
!840 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !844)
!844 = !{!845, !846}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !843, file: !132, line: 60, baseType: !816, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !843, file: !132, line: 65, baseType: !795, size: 32, offset: 32)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !849, file: !1021, line: 762, type: !1133, isLocal: true, isDefinition: true)
!849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !851, retainedTypes: !869, globals: !1018, splitDebugInlining: false, nameTableKind: None)
!850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!851 = !{!30, !852, !858, !863, !655}
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !853, line: 506, baseType: !32, size: 32, elements: !854)
!853 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!854 = !{!855, !856, !857}
!855 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!856 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!857 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !853, line: 512, baseType: !32, size: 32, elements: !859)
!859 = !{!860, !861, !862}
!860 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!861 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!862 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!863 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !567, line: 43, baseType: !32, size: 32, elements: !864)
!864 = !{!865, !866, !867, !868}
!865 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!866 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!867 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!868 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!869 = !{!102, !103, !870, !940, !945, !905, !858, !852, !950, !951, !121, !965, !920, !977, !978, !979}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !853, line: 523, size: 288, elements: !873)
!873 = !{!874, !895, !901, !906, !910, !911, !912, !916, !936}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !872, file: !853, line: 524, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 32)
!876 = !DISubroutineType(types: !877)
!877 = !{!103, !878, !893, !894}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !881)
!881 = !{!882, !883, !884, !885, !891, !892}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !880, file: !141, line: 380, baseType: !144, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !880, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !880, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !880, file: !141, line: 386, baseType: !886, size: 32, offset: 96)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !888)
!888 = !{!889, !890}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !887, file: !141, line: 359, baseType: !154, size: 8)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !887, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !880, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !880, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !853, line: 237, baseType: !154)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !853, line: 257, baseType: !121)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !872, file: !853, line: 530, baseType: !896, size: 32, offset: 32)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DISubroutineType(types: !898)
!898 = !{!103, !878, !899}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !853, line: 229, baseType: !121)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !872, file: !853, line: 532, baseType: !902, size: 32, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = !DISubroutineType(types: !904)
!904 = !{!103, !878, !905, !900}
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !853, line: 216, baseType: !121)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !872, file: !853, line: 535, baseType: !907, size: 32, offset: 96)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!908 = !DISubroutineType(types: !909)
!909 = !{!103, !878, !905}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !872, file: !853, line: 537, baseType: !907, size: 32, offset: 128)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !872, file: !853, line: 539, baseType: !907, size: 32, offset: 160)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !872, file: !853, line: 541, baseType: !913, size: 32, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{!103, !878, !893, !852, !858}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !872, file: !853, line: 544, baseType: !917, size: 32, offset: 224)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DISubroutineType(types: !919)
!919 = !{!103, !878, !920, !157}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !853, line: 478, size: 96, elements: !922)
!922 = !{!923, !930, !935}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !921, file: !853, line: 482, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !925, line: 33, baseType: !926)
!925 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !925, line: 29, size: 32, elements: !927)
!927 = !{!928}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !926, file: !925, line: 30, baseType: !929, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !921, file: !853, line: 485, baseType: !931, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !853, line: 464, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{null, !878, !920, !905}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !921, file: !853, line: 493, baseType: !905, size: 32, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !872, file: !853, line: 547, baseType: !937, size: 32, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!121, !878}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !853, line: 428, size: 32, elements: !943)
!943 = !{!944}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !942, file: !853, line: 434, baseType: !905, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !853, line: 441, size: 32, elements: !948)
!948 = !{!949}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !947, file: !853, line: 447, baseType: !905, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 396, baseType: !953)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 385, size: 320, elements: !954)
!954 = !{!955, !956, !957, !958, !959, !960, !961, !962, !963}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !953, file: !116, line: 387, baseType: !120, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !953, file: !116, line: 388, baseType: !120, size: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !953, file: !116, line: 389, baseType: !120, size: 32, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !953, file: !116, line: 390, baseType: !120, size: 32, offset: 96)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !953, file: !116, line: 391, baseType: !120, size: 32, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !953, file: !116, line: 392, baseType: !120, size: 32, offset: 160)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !953, file: !116, line: 393, baseType: !120, size: 32, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !953, file: !116, line: 394, baseType: !120, size: 32, offset: 224)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !953, file: !116, line: 395, baseType: !964, size: 64, offset: 256)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 411, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 402, size: 320, elements: !968)
!968 = !{!969, !970, !971, !973, !974, !975, !976}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !967, file: !116, line: 404, baseType: !120, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !967, file: !116, line: 405, baseType: !120, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !967, file: !116, line: 406, baseType: !972, size: 128, offset: 64)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !528)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !967, file: !116, line: 407, baseType: !121, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !967, file: !116, line: 408, baseType: !120, size: 32, offset: 224)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !967, file: !116, line: 409, baseType: !120, size: 32, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !967, file: !116, line: 410, baseType: !120, size: 32, offset: 288)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !656, line: 100, size: 224, elements: !982)
!982 = !{!983, !988, !989, !998, !1003, !1008, !1013}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !981, file: !656, line: 101, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !656, line: 76, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{!103, !878, !749}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !981, file: !656, line: 102, baseType: !984, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !981, file: !656, line: 103, baseType: !990, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !656, line: 83, baseType: !991)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{!103, !878, !749, !994, !102}
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !656, line: 72, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{null, !878, !749, !102}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !981, file: !656, line: 104, baseType: !999, size: 32, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !656, line: 79, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!103, !878, !749, !705}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !981, file: !656, line: 105, baseType: !1004, size: 32, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !656, line: 88, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!655, !878, !749}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !981, file: !656, line: 106, baseType: !1009, size: 32, offset: 160)
!1009 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !656, line: 92, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!103, !878, !749, !775}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !981, file: !656, line: 107, baseType: !1014, size: 32, offset: 192)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !656, line: 96, baseType: !1015)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!103, !878, !749, !102}
!1018 = !{!1019, !1025, !1027, !1037, !1039, !1041, !1043, !1048, !1050, !1052, !1057, !1059, !1061, !1063, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1099, !1101, !1103, !1105, !1107, !1109, !1111, !1113, !1115, !1117, !1119, !1121, !1123, !1125, !1127, !847, !1129, !1131, !1144, !1146, !1148, !1150, !1152, !1154}
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1020 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !849, file: !1021, line: 762, type: !1022, isLocal: false, isDefinition: true, align: 16)
!1021 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 112, elements: !1023)
!1023 = !{!1024}
!1024 = !DISubrange(count: 7)
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !849, file: !1021, line: 762, type: !879, isLocal: false, isDefinition: true, align: 32)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !849, file: !1021, line: 762, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1031)
!1031 = !{!1032, !1036}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1030, file: !132, line: 60, baseType: !1033, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!103, !878}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1030, file: !132, line: 65, baseType: !878, size: 32, offset: 32)
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !849, file: !1021, line: 766, type: !1022, isLocal: false, isDefinition: true, align: 16)
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !849, file: !1021, line: 766, type: !879, isLocal: false, isDefinition: true, align: 32)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !849, file: !1021, line: 766, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !849, file: !1021, line: 770, type: !1045, isLocal: false, isDefinition: true, align: 16)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 96, elements: !1046)
!1046 = !{!1047}
!1047 = !DISubrange(count: 6)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !849, file: !1021, line: 770, type: !879, isLocal: false, isDefinition: true, align: 32)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !849, file: !1021, line: 770, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !849, file: !1021, line: 774, type: !1054, isLocal: false, isDefinition: true, align: 16)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1055)
!1055 = !{!1056}
!1056 = !DISubrange(count: 5)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !849, file: !1021, line: 774, type: !879, isLocal: false, isDefinition: true, align: 32)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !849, file: !1021, line: 774, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !849, file: !1021, line: 778, type: !1054, isLocal: false, isDefinition: true, align: 16)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !849, file: !1021, line: 778, type: !879, isLocal: false, isDefinition: true, align: 32)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !849, file: !1021, line: 778, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !849, file: !1021, line: 782, type: !1054, isLocal: false, isDefinition: true, align: 16)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !849, file: !1021, line: 782, type: !879, isLocal: false, isDefinition: true, align: 32)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !849, file: !1021, line: 782, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1073 = !DIGlobalVariableExpression(var: !1074, expr: !DIExpression())
!1074 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !849, file: !1021, line: 786, type: !1054, isLocal: false, isDefinition: true, align: 16)
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !849, file: !1021, line: 786, type: !879, isLocal: false, isDefinition: true, align: 32)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !849, file: !1021, line: 786, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !849, file: !1021, line: 790, type: !1054, isLocal: false, isDefinition: true, align: 16)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !849, file: !1021, line: 790, type: !879, isLocal: false, isDefinition: true, align: 32)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !849, file: !1021, line: 790, type: !1029, isLocal: true, isDefinition: true, align: 32)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !849, file: !1021, line: 762, type: !1087, isLocal: true, isDefinition: true)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1088, line: 237, size: 128, elements: !1089)
!1088 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1089 = !{!1090, !1091, !1092}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1087, file: !1088, line: 239, baseType: !947, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1087, file: !1088, line: 241, baseType: !878, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1087, file: !1088, line: 243, baseType: !1093, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !925, line: 40, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !925, line: 35, size: 64, elements: !1095)
!1095 = !{!1096, !1098}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1094, file: !925, line: 36, baseType: !1097, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1094, file: !925, line: 37, baseType: !1097, size: 32, offset: 32)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !849, file: !1021, line: 762, type: !887, isLocal: true, isDefinition: true, align: 8)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !849, file: !1021, line: 766, type: !1087, isLocal: true, isDefinition: true)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !849, file: !1021, line: 766, type: !887, isLocal: true, isDefinition: true, align: 8)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !849, file: !1021, line: 770, type: !1087, isLocal: true, isDefinition: true)
!1107 = !DIGlobalVariableExpression(var: !1108, expr: !DIExpression())
!1108 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !849, file: !1021, line: 770, type: !887, isLocal: true, isDefinition: true, align: 8)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !849, file: !1021, line: 774, type: !1087, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !849, file: !1021, line: 774, type: !887, isLocal: true, isDefinition: true, align: 8)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !849, file: !1021, line: 778, type: !1087, isLocal: true, isDefinition: true)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !849, file: !1021, line: 778, type: !887, isLocal: true, isDefinition: true, align: 8)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !849, file: !1021, line: 782, type: !1087, isLocal: true, isDefinition: true)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !849, file: !1021, line: 782, type: !887, isLocal: true, isDefinition: true, align: 8)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !849, file: !1021, line: 786, type: !1087, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !849, file: !1021, line: 786, type: !887, isLocal: true, isDefinition: true, align: 8)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !849, file: !1021, line: 790, type: !1087, isLocal: true, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !849, file: !1021, line: 790, type: !887, isLocal: true, isDefinition: true, align: 8)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !849, file: !1021, line: 656, type: !871, isLocal: true, isDefinition: true)
!1131 = !DIGlobalVariableExpression(var: !1132, expr: !DIExpression())
!1132 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !849, file: !1021, line: 766, type: !1133, isLocal: true, isDefinition: true)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1088, line: 224, size: 160, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1134, file: !1088, line: 226, baseType: !942, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1134, file: !1088, line: 228, baseType: !705, size: 32, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1134, file: !1088, line: 230, baseType: !103, size: 32, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1134, file: !1088, line: 231, baseType: !1140, size: 64, offset: 96)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !701, line: 343, size: 64, elements: !1141)
!1141 = !{!1142, !1143}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1140, file: !701, line: 344, baseType: !121, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1140, file: !701, line: 345, baseType: !121, size: 32, offset: 32)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !849, file: !1021, line: 770, type: !1133, isLocal: true, isDefinition: true)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !849, file: !1021, line: 774, type: !1133, isLocal: true, isDefinition: true)
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !849, file: !1021, line: 778, type: !1133, isLocal: true, isDefinition: true)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !849, file: !1021, line: 782, type: !1133, isLocal: true, isDefinition: true)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !849, file: !1021, line: 786, type: !1133, isLocal: true, isDefinition: true)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !849, file: !1021, line: 790, type: !1133, isLocal: true, isDefinition: true)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1158, file: !1299, line: 1914, type: !1360, isLocal: true, isDefinition: true)
!1158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1160, retainedTypes: !1193, globals: !1296, splitDebugInlining: false, nameTableKind: None)
!1159 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!1160 = !{!30, !1161, !1168, !1175, !1182, !1188, !655}
!1161 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !789, line: 47, baseType: !32, size: 32, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1167}
!1163 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1164 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1165 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1166 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1167 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !789, line: 75, baseType: !32, size: 32, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174}
!1170 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1171 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1172 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1173 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1174 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !789, line: 92, baseType: !32, size: 32, elements: !1176)
!1176 = !{!1177, !1178, !1179, !1180, !1181}
!1177 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1178 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1179 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1180 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1181 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !789, line: 84, baseType: !32, size: 32, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187}
!1184 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1185 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1186 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1187 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !789, line: 107, baseType: !32, size: 32, elements: !1189)
!1189 = !{!1190, !1191, !1192}
!1190 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1191 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1192 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1193 = !{!102, !103, !1194, !155, !154, !1243, !121, !749, !1254, !265, !1293, !1295}
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1196)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !789, line: 336, size: 160, elements: !1197)
!1197 = !{!1198, !1217, !1221, !1225, !1238}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1196, file: !789, line: 365, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!103, !1202, !810}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1215, !1216}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1204, file: !141, line: 380, baseType: !144, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1204, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1204, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1204, file: !141, line: 386, baseType: !1210, size: 32, offset: 96)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1212)
!1212 = !{!1213, !1214}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1211, file: !141, line: 359, baseType: !154, size: 8)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1211, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1204, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1204, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1196, file: !789, line: 366, baseType: !1218, size: 32, offset: 32)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{null, !1202, !155}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1196, file: !789, line: 374, baseType: !1222, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!103, !1202}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1196, file: !789, line: 377, baseType: !1226, size: 32, offset: 96)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!103, !1202, !1229}
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !789, line: 122, size: 64, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1236, !1237}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1231, file: !789, line: 123, baseType: !121, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1231, file: !789, line: 124, baseType: !154, size: 8, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1231, file: !789, line: 125, baseType: !154, size: 8, offset: 40)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1231, file: !789, line: 126, baseType: !154, size: 8, offset: 48)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1231, file: !789, line: 127, baseType: !154, size: 8, offset: 56)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1196, file: !789, line: 379, baseType: !1239, size: 32, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!103, !1202, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 648, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 639, size: 224, elements: !1246)
!1246 = !{!1247, !1248, !1249, !1250, !1251, !1252, !1253}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1245, file: !116, line: 641, baseType: !120, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1245, file: !116, line: 642, baseType: !120, size: 32, offset: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1245, file: !116, line: 643, baseType: !120, size: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1245, file: !116, line: 644, baseType: !120, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1245, file: !116, line: 645, baseType: !120, size: 32, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1245, file: !116, line: 646, baseType: !120, size: 32, offset: 160)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1245, file: !116, line: 647, baseType: !120, size: 32, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !656, line: 100, size: 224, elements: !1257)
!1257 = !{!1258, !1263, !1264, !1273, !1278, !1283, !1288}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1256, file: !656, line: 101, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !656, line: 76, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!103, !1202, !749}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1256, file: !656, line: 102, baseType: !1259, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1256, file: !656, line: 103, baseType: !1265, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !656, line: 83, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!103, !1202, !749, !1269, !102}
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !656, line: 72, baseType: !1270)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{null, !1202, !749, !102}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1256, file: !656, line: 104, baseType: !1274, size: 32, offset: 96)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !656, line: 79, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!103, !1202, !749, !705}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1256, file: !656, line: 105, baseType: !1279, size: 32, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !656, line: 88, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!655, !1202, !749}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1256, file: !656, line: 106, baseType: !1284, size: 32, offset: 160)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !656, line: 92, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!103, !1202, !749, !775}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1256, file: !656, line: 107, baseType: !1289, size: 32, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !656, line: 96, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!103, !1202, !749, !102}
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1294)
!1294 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1296 = !{!1297, !1303, !1305, !1312, !1156, !1314, !1322, !1345, !1348, !1351, !1353}
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1158, file: !1299, line: 1914, type: !1300, isLocal: false, isDefinition: true, align: 16)
!1299 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1301)
!1301 = !{!1302}
!1302 = !DISubrange(count: 8)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1158, file: !1299, line: 1914, type: !1203, isLocal: false, isDefinition: true, align: 32)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1158, file: !1299, line: 1914, type: !1307, isLocal: true, isDefinition: true, align: 32)
!1307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1309)
!1309 = !{!1310, !1311}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1308, file: !132, line: 60, baseType: !1222, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1308, file: !132, line: 65, baseType: !1202, size: 32, offset: 32)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1158, file: !1299, line: 1914, type: !1211, isLocal: true, isDefinition: true, align: 8)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1158, file: !1299, line: 1914, type: !1316, isLocal: true, isDefinition: true)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1317, size: 64, elements: !345)
!1317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !701, line: 343, size: 64, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1318, file: !701, line: 344, baseType: !121, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1318, file: !701, line: 345, baseType: !121, size: 32, offset: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1158, file: !1299, line: 1914, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1326, line: 60, size: 64, elements: !1327)
!1326 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1327 = !{!1328, !1344}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1325, file: !1326, line: 69, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1326, line: 50, size: 64, elements: !1332)
!1332 = !{!1333, !1342, !1343}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1331, file: !1326, line: 52, baseType: !1334, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1337, line: 37, baseType: !1338)
!1337 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1337, line: 32, size: 64, elements: !1339)
!1339 = !{!1340, !1341}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1338, file: !1337, line: 34, baseType: !121, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1338, file: !1337, line: 36, baseType: !121, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1331, file: !1326, line: 54, baseType: !154, size: 8, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1331, file: !1326, line: 56, baseType: !154, size: 8, offset: 40)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1325, file: !1326, line: 71, baseType: !154, size: 8, offset: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1158, file: !1299, line: 1914, type: !1347, isLocal: true, isDefinition: true)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1330, size: 64, elements: !345)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1158, file: !1299, line: 1914, type: !1350, isLocal: true, isDefinition: true)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1335, size: 128, elements: !242)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1158, file: !1299, line: 1539, type: !1195, isLocal: true, isDefinition: true)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1158, file: !1299, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1356, line: 74, size: 64, elements: !1357)
!1356 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1357 = !{!1358, !1359}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1355, file: !1356, line: 76, baseType: !121, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1355, file: !1356, line: 78, baseType: !1202, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1356, line: 22, size: 224, elements: !1362)
!1362 = !{!1363, !1364, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1361, file: !1356, line: 24, baseType: !1243, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1361, file: !1356, line: 26, baseType: !1365, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1361, file: !1356, line: 28, baseType: !200, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1361, file: !1356, line: 30, baseType: !157, size: 8, offset: 96)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1361, file: !1356, line: 32, baseType: !103, size: 32, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1361, file: !1356, line: 34, baseType: !157, size: 8, offset: 160)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1361, file: !1356, line: 36, baseType: !157, size: 8, offset: 168)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1361, file: !1356, line: 38, baseType: !157, size: 8, offset: 176)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1361, file: !1356, line: 40, baseType: !157, size: 8, offset: 184)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1361, file: !1356, line: 41, baseType: !1374, size: 32, offset: 192)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1377, file: !1455, line: 65, type: !120, isLocal: true, isDefinition: true)
!1377 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1378, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1379, retainedTypes: !1380, globals: !1452, splitDebugInlining: false, nameTableKind: None)
!1378 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!1379 = !{!425}
!1380 = !{!1381, !1383, !586, !154, !121, !1391, !1422}
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1382, line: 46, baseType: !280)
!1382 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1390}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1385, file: !356, line: 766, baseType: !120, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1385, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1385, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1385, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1394)
!1394 = !{!1395, !1397, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1412, !1417, !1421}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1393, file: !356, line: 413, baseType: !1396, size: 256)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1301)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1393, file: !356, line: 414, baseType: !1398, size: 768, offset: 256)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1399)
!1399 = !{!1400}
!1400 = !DISubrange(count: 24)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1393, file: !356, line: 415, baseType: !1396, size: 256, offset: 1024)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1393, file: !356, line: 416, baseType: !1398, size: 768, offset: 1280)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1393, file: !356, line: 417, baseType: !1396, size: 256, offset: 2048)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1393, file: !356, line: 418, baseType: !1398, size: 768, offset: 2304)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1393, file: !356, line: 419, baseType: !1396, size: 256, offset: 3072)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1393, file: !356, line: 420, baseType: !1398, size: 768, offset: 3328)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1393, file: !356, line: 421, baseType: !1396, size: 256, offset: 4096)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1393, file: !356, line: 422, baseType: !1409, size: 1792, offset: 4352)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1410)
!1410 = !{!1411}
!1411 = !DISubrange(count: 56)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1393, file: !356, line: 423, baseType: !1413, size: 1920, offset: 6144)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1414, size: 1920, elements: !1415)
!1414 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1415 = !{!1416}
!1416 = !DISubrange(count: 240)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1393, file: !356, line: 424, baseType: !1418, size: 20608, offset: 8064)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 644)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1393, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1429, !1430, !1431, !1432, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1443, !1444, !1445, !1447, !1449, !1451}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1424, file: !356, line: 447, baseType: !360, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1424, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1424, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1424, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1424, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1424, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1424, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1414, size: 96, elements: !622)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1424, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1424, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1424, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1424, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1424, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1424, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1424, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1424, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1424, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1424, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1424, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !528)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1424, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1055)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1424, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1055)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1424, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1452 = !{!1453, !1479, !1482, !1484, !1486, !1375}
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1377, file: !1455, line: 285, type: !1456, isLocal: true, isDefinition: true, align: 32)
!1455 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1458)
!1458 = !{!1459, !1478}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1457, file: !132, line: 60, baseType: !1460, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!103, !1463}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1476, !1477}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1465, file: !141, line: 380, baseType: !144, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1465, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1465, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1465, file: !141, line: 386, baseType: !1471, size: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1473)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1472, file: !141, line: 359, baseType: !154, size: 8)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1472, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1465, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1465, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1457, file: !132, line: 65, baseType: !1463, size: 32, offset: 32)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "lock", scope: !1377, file: !1455, line: 34, type: !1481, isLocal: true, isDefinition: true)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "last_load", scope: !1377, file: !1455, line: 36, type: !121, isLocal: true, isDefinition: true)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1377, file: !1455, line: 48, type: !121, isLocal: true, isDefinition: true)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1377, file: !1455, line: 54, type: !121, isLocal: true, isDefinition: true)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1490, file: !1572, line: 22, type: !1574, isLocal: true, isDefinition: true)
!1490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1492, retainedTypes: !1493, globals: !1569, splitDebugInlining: false, nameTableKind: None)
!1491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!1492 = !{!852, !858}
!1493 = !{!1494, !1558, !1563, !905, !858, !852, !1568, !102}
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !853, line: 523, size: 288, elements: !1497)
!1497 = !{!1498, !1517, !1521, !1525, !1529, !1530, !1531, !1535, !1554}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1496, file: !853, line: 524, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!103, !1502, !893, !894}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1515, !1516}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1504, file: !141, line: 380, baseType: !144, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1504, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1504, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1504, file: !141, line: 386, baseType: !1510, size: 32, offset: 96)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1512)
!1512 = !{!1513, !1514}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1511, file: !141, line: 359, baseType: !154, size: 8)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1511, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1504, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1504, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1496, file: !853, line: 530, baseType: !1518, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!103, !1502, !899}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1496, file: !853, line: 532, baseType: !1522, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!103, !1502, !905, !900}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1496, file: !853, line: 535, baseType: !1526, size: 32, offset: 96)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!103, !1502, !905}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1496, file: !853, line: 537, baseType: !1526, size: 32, offset: 128)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1496, file: !853, line: 539, baseType: !1526, size: 32, offset: 160)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1496, file: !853, line: 541, baseType: !1532, size: 32, offset: 192)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!103, !1502, !893, !852, !858}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1496, file: !853, line: 544, baseType: !1536, size: 32, offset: 224)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!103, !1502, !1539, !157}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !853, line: 478, size: 96, elements: !1541)
!1541 = !{!1542, !1548, !1553}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1540, file: !853, line: 482, baseType: !1543, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !925, line: 33, baseType: !1544)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !925, line: 29, size: 32, elements: !1545)
!1545 = !{!1546}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1544, file: !925, line: 30, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1540, file: !853, line: 485, baseType: !1549, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !853, line: 464, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{null, !1502, !1539, !905}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1540, file: !853, line: 493, baseType: !905, size: 32, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1496, file: !853, line: 547, baseType: !1555, size: 32, offset: 256)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!121, !1502}
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !853, line: 428, size: 32, elements: !1561)
!1561 = !{!1562}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1560, file: !853, line: 434, baseType: !905, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !853, line: 441, size: 32, elements: !1566)
!1566 = !{!1567}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1565, file: !853, line: 447, baseType: !905, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1569 = !{!1570, !1488}
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1571 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1490, file: !1572, line: 37, type: !1573, isLocal: true, isDefinition: true)
!1572 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1575, size: 352, elements: !1576)
!1575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1502)
!1576 = !{!1577}
!1577 = !DISubrange(count: 11)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1580, file: !1621, line: 139, type: !1628, isLocal: false, isDefinition: true)
!1580 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1581, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1582, globals: !1618, splitDebugInlining: false, nameTableKind: None)
!1581 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1585, file: !116, line: 479, baseType: !120, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1585, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1585, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1585, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1585, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1585, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1585, file: !116, line: 485, baseType: !674, size: 64, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1585, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1585, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1585, file: !116, line: 488, baseType: !674, size: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1585, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1585, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1585, file: !116, line: 491, baseType: !674, size: 64, offset: 448)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1585, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1585, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1585, file: !116, line: 494, baseType: !674, size: 64, offset: 576)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1585, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1585, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1585, file: !116, line: 497, baseType: !674, size: 64, offset: 704)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1585, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1585, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1585, file: !116, line: 500, baseType: !674, size: 64, offset: 832)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1585, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1585, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1585, file: !116, line: 503, baseType: !674, size: 64, offset: 960)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1585, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1585, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1585, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1585, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1585, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1585, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!1618 = !{!1619, !1622, !1578}
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1580, file: !1621, line: 137, type: !121, isLocal: false, isDefinition: true)
!1621 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1580, file: !1621, line: 138, type: !1624, isLocal: false, isDefinition: true)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1625, size: 128, elements: !1626)
!1625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1626 = !{!1627}
!1627 = !DISubrange(count: 16)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1625, size: 64, elements: !1301)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1631, file: !1634, line: 23, type: !1635, isLocal: false, isDefinition: true)
!1631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1633, splitDebugInlining: false, nameTableKind: None)
!1632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!1633 = !{!1629}
!1634 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1638, file: !1642, line: 86, type: !1890, isLocal: false, isDefinition: true, align: 512)
!1638 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1639, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1640, retainedTypes: !1649, globals: !1723, splitDebugInlining: false, nameTableKind: None)
!1639 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!1640 = !{!1641, !30, !425}
!1641 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1642, line: 63, baseType: !32, size: 32, elements: !1643)
!1642 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1643 = !{!1644, !1645, !1646, !1647, !1648}
!1644 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1645 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1646 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1647 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1648 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1649 = !{!200, !102, !103, !1650, !977, !121, !1681, !586, !154, !1706}
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1653, line: 51, size: 64, elements: !1654)
!1653 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1654 = !{!1655, !1676}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1652, file: !1653, line: 52, baseType: !1656, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1653, line: 38, baseType: !1657)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!103, !1660, !1675, !265}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1673, !1674}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1662, file: !141, line: 380, baseType: !144, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1662, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1662, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1662, file: !141, line: 386, baseType: !1668, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1670)
!1670 = !{!1671, !1672}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1669, file: !141, line: 359, baseType: !154, size: 8)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1669, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1662, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1662, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1652, file: !1653, line: 53, baseType: !1677, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1653, line: 47, baseType: !1678)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!103, !1660, !1675, !265, !121}
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1683)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1684)
!1684 = !{!1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1683, file: !356, line: 447, baseType: !360, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1683, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1683, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1683, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1683, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1683, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1683, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1683, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1683, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1683, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1683, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1683, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1683, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1683, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1683, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1683, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1683, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1683, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1683, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1683, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1683, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1708, file: !356, line: 413, baseType: !1396, size: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1708, file: !356, line: 414, baseType: !1398, size: 768, offset: 256)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1708, file: !356, line: 415, baseType: !1396, size: 256, offset: 1024)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1708, file: !356, line: 416, baseType: !1398, size: 768, offset: 1280)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1708, file: !356, line: 417, baseType: !1396, size: 256, offset: 2048)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1708, file: !356, line: 418, baseType: !1398, size: 768, offset: 2304)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1708, file: !356, line: 419, baseType: !1396, size: 256, offset: 3072)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1708, file: !356, line: 420, baseType: !1398, size: 768, offset: 3328)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1708, file: !356, line: 421, baseType: !1396, size: 256, offset: 4096)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1708, file: !356, line: 422, baseType: !1409, size: 1792, offset: 4352)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1708, file: !356, line: 423, baseType: !1413, size: 1920, offset: 6144)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1708, file: !356, line: 424, baseType: !1418, size: 20608, offset: 8064)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1708, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1723 = !{!1724, !1846, !1855, !1857, !1636, !1860, !1862, !1867}
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "_kernel", scope: !1638, file: !1642, line: 40, type: !1726, isLocal: false, isDefinition: true)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1727)
!1727 = !{!1728, !1841}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1726, file: !247, line: 159, baseType: !1729, size: 192)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 192, elements: !345)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1835, !1836, !1837, !1838}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1730, file: !247, line: 102, baseType: !121, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1730, file: !247, line: 105, baseType: !977, size: 32, offset: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1730, file: !247, line: 108, baseType: !1735, size: 32, offset: 64)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1737)
!1737 = !{!1738, !1796, !1808, !1809, !1810, !1811, !1817, !1830}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1736, file: !211, line: 247, baseType: !1739, size: 384)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1740)
!1740 = !{!1741, !1765, !1772, !1773, !1774, !1783, !1784, !1785}
!1741 = !DIDerivedType(tag: DW_TAG_member, scope: !1739, file: !211, line: 60, baseType: !1742, size: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1739, file: !211, line: 60, size: 64, elements: !1743)
!1743 = !{!1744, !1759}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1742, file: !211, line: 61, baseType: !1745, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1747)
!1747 = !{!1748, !1754}
!1748 = !DIDerivedType(tag: DW_TAG_member, scope: !1746, file: !221, line: 38, baseType: !1749, size: 32)
!1749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1746, file: !221, line: 38, size: 32, elements: !1750)
!1750 = !{!1751, !1753}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1749, file: !221, line: 39, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1749, file: !221, line: 40, baseType: !1752, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, scope: !1746, file: !221, line: 42, baseType: !1755, size: 32, offset: 32)
!1755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1746, file: !221, line: 42, size: 32, elements: !1756)
!1756 = !{!1757, !1758}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1755, file: !221, line: 43, baseType: !1752, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1755, file: !221, line: 44, baseType: !1752, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1742, file: !211, line: 62, baseType: !1760, size: 64)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1761)
!1761 = !{!1762}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1760, file: !237, line: 50, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1764, size: 64, elements: !242)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1739, file: !211, line: 68, baseType: !1766, size: 32, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1769)
!1769 = !{!1770}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1768, file: !247, line: 232, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1746)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1739, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1739, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1774 = !DIDerivedType(tag: DW_TAG_member, scope: !1739, file: !211, line: 90, baseType: !1775, size: 16, offset: 112)
!1775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1739, file: !211, line: 90, size: 16, elements: !1776)
!1776 = !{!1777, !1782}
!1777 = !DIDerivedType(tag: DW_TAG_member, scope: !1775, file: !211, line: 91, baseType: !1778, size: 16)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1775, file: !211, line: 91, size: 16, elements: !1779)
!1779 = !{!1780, !1781}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1778, file: !211, line: 96, baseType: !261, size: 8)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1778, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1775, file: !211, line: 100, baseType: !265, size: 16)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1739, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1739, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1739, file: !211, line: 131, baseType: !1786, size: 192, offset: 192)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1787)
!1787 = !{!1788, !1789, !1795}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1786, file: !247, line: 245, baseType: !1745, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1786, file: !247, line: 246, baseType: !1790, size: 32, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1791)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 32)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{null, !1794}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1786, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1736, file: !211, line: 250, baseType: !1797, size: 288, offset: 384)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1797, file: !284, line: 26, baseType: !121, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1797, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1797, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1797, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1797, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1797, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1797, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1797, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1797, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1736, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1736, file: !211, line: 256, baseType: !1767, size: 64, offset: 704)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1736, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1736, file: !211, line: 300, baseType: !1812, size: 96, offset: 800)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1813)
!1813 = !{!1814, !1815, !1816}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1812, file: !211, line: 153, baseType: !22, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1812, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1812, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1736, file: !211, line: 325, baseType: !1818, size: 32, offset: 896)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1820)
!1820 = !{!1821, !1827, !1828}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1819, file: !307, line: 5074, baseType: !1822, size: 96)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1823)
!1823 = !{!1824, !1825, !1826}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1822, file: !311, line: 57, baseType: !314, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1822, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1822, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1819, file: !307, line: 5075, baseType: !1767, size: 64, offset: 96)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1819, file: !307, line: 5076, baseType: !1829, offset: 160)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1736, file: !211, line: 343, baseType: !1831, size: 64, offset: 928)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1832)
!1832 = !{!1833, !1834}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1831, file: !284, line: 63, baseType: !121, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1831, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1730, file: !247, line: 111, baseType: !1735, size: 32, offset: 96)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1730, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1730, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1730, file: !247, line: 153, baseType: !1839, offset: 168)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1840, line: 33, elements: !322)
!1840 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1726, file: !247, line: 170, baseType: !1842, size: 96, offset: 192)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1842, file: !247, line: 86, baseType: !1735, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1842, file: !247, line: 90, baseType: !1771, size: 64, offset: 32)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1638, file: !1642, line: 43, type: !1848, isLocal: false, isDefinition: true, align: 512)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1849, size: 8704, elements: !1853)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1850, line: 47, size: 8, elements: !1851)
!1850 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1849, file: !1850, line: 48, baseType: !146, size: 8)
!1853 = !{!1854}
!1854 = !DISubrange(count: 1088)
!1855 = !DIGlobalVariableExpression(var: !1856, expr: !DIExpression())
!1856 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1638, file: !1642, line: 44, type: !1736, isLocal: false, isDefinition: true)
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1638, file: !1642, line: 48, type: !1859, isLocal: false, isDefinition: true)
!1859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1736, size: 1024, elements: !345)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1638, file: !1642, line: 217, type: !157, isLocal: false, isDefinition: true)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1638, file: !1642, line: 50, type: !1864, isLocal: true, isDefinition: true, align: 512)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1849, size: 3072, elements: !1865)
!1865 = !{!346, !1866}
!1866 = !DISubrange(count: 384)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "levels", scope: !1869, file: !1642, line: 232, type: !1889, isLocal: true, isDefinition: true)
!1869 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1642, file: !1642, line: 230, type: !1870, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !1872)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{null, !1641}
!1872 = !{!1873, !1874, !1884, !1888}
!1873 = !DILocalVariable(name: "level", arg: 1, scope: !1869, file: !1642, line: 230, type: !1641)
!1874 = !DILocalVariable(name: "entry", scope: !1869, file: !1642, line: 244, type: !1875)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1877)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1878)
!1878 = !{!1879, !1883}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1877, file: !132, line: 60, baseType: !1880, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!103, !1660}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1877, file: !132, line: 65, baseType: !1660, size: 32, offset: 32)
!1884 = !DILocalVariable(name: "dev", scope: !1885, file: !1642, line: 247, type: !1660)
!1885 = distinct !DILexicalBlock(scope: !1886, file: !1642, line: 246, column: 64)
!1886 = distinct !DILexicalBlock(scope: !1887, file: !1642, line: 246, column: 2)
!1887 = distinct !DILexicalBlock(scope: !1869, file: !1642, line: 246, column: 2)
!1888 = !DILocalVariable(name: "rc", scope: !1885, file: !1642, line: 248, type: !103)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1875, size: 192, elements: !1046)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1849, size: 16896, elements: !1891)
!1891 = !{!346, !1892}
!1892 = !DISubrange(count: 2112)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "states_str", scope: !1895, file: !1896, line: 276, type: !2017, isLocal: true, isDefinition: true)
!1895 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1896, file: !1896, line: 271, type: !1897, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !2008)
!1896 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!144, !1899, !977, !200}
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1900)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1902)
!1902 = !{!1903, !1961, !1973, !1974, !1975, !1976, !1982, !1995}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1901, file: !211, line: 247, baseType: !1904, size: 384)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1905)
!1905 = !{!1906, !1930, !1937, !1938, !1939, !1948, !1949, !1950}
!1906 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !211, line: 60, baseType: !1907, size: 64)
!1907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !211, line: 60, size: 64, elements: !1908)
!1908 = !{!1909, !1924}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1907, file: !211, line: 61, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1912)
!1912 = !{!1913, !1919}
!1913 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !221, line: 38, baseType: !1914, size: 32)
!1914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1911, file: !221, line: 38, size: 32, elements: !1915)
!1915 = !{!1916, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1914, file: !221, line: 39, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1914, file: !221, line: 40, baseType: !1917, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !221, line: 42, baseType: !1920, size: 32, offset: 32)
!1920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1911, file: !221, line: 42, size: 32, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1920, file: !221, line: 43, baseType: !1917, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1920, file: !221, line: 44, baseType: !1917, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1907, file: !211, line: 62, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1926)
!1926 = !{!1927}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1925, file: !237, line: 50, baseType: !1928, size: 64)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 64, elements: !242)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1904, file: !211, line: 68, baseType: !1931, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1934)
!1934 = !{!1935}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1933, file: !247, line: 232, baseType: !1936, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1911)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1904, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1904, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1939 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !211, line: 90, baseType: !1940, size: 16, offset: 112)
!1940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !211, line: 90, size: 16, elements: !1941)
!1941 = !{!1942, !1947}
!1942 = !DIDerivedType(tag: DW_TAG_member, scope: !1940, file: !211, line: 91, baseType: !1943, size: 16)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1940, file: !211, line: 91, size: 16, elements: !1944)
!1944 = !{!1945, !1946}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1943, file: !211, line: 96, baseType: !261, size: 8)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1943, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1940, file: !211, line: 100, baseType: !265, size: 16)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1904, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1904, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1904, file: !211, line: 131, baseType: !1951, size: 192, offset: 192)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1952)
!1952 = !{!1953, !1954, !1960}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1951, file: !247, line: 245, baseType: !1910, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1951, file: !247, line: 246, baseType: !1955, size: 32, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1956)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{null, !1959}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1951, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1901, file: !211, line: 250, baseType: !1962, size: 288, offset: 384)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1962, file: !284, line: 26, baseType: !121, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1962, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1962, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1962, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1962, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1962, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1962, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1962, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1962, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1901, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1901, file: !211, line: 256, baseType: !1932, size: 64, offset: 704)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1901, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1901, file: !211, line: 300, baseType: !1977, size: 96, offset: 800)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1978)
!1978 = !{!1979, !1980, !1981}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1977, file: !211, line: 153, baseType: !22, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1977, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1977, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1901, file: !211, line: 325, baseType: !1983, size: 32, offset: 896)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1985)
!1985 = !{!1986, !1992, !1993}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1984, file: !307, line: 5074, baseType: !1987, size: 96)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1988)
!1988 = !{!1989, !1990, !1991}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1987, file: !311, line: 57, baseType: !314, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1987, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1987, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1984, file: !307, line: 5075, baseType: !1932, size: 64, offset: 96)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1984, file: !307, line: 5076, baseType: !1994, offset: 160)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1901, file: !211, line: 343, baseType: !1996, size: 64, offset: 928)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1997)
!1997 = !{!1998, !1999}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1996, file: !284, line: 63, baseType: !121, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1996, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2002, globals: !2004, splitDebugInlining: false, nameTableKind: None)
!2001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2002 = !{!102, !144, !1381, !154, !103, !2003, !24, !200, !977, !22, !121, !1293}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!2004 = !{!1893, !2005}
!2005 = !DIGlobalVariableExpression(var: !2006, expr: !DIExpression())
!2006 = distinct !DIGlobalVariable(name: "states_sz", scope: !1895, file: !1896, line: 279, type: !2007, isLocal: true, isDefinition: true)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1573, size: 256, elements: !1301)
!2008 = !{!2009, !2010, !2011, !2012, !2013, !2014, !2015}
!2009 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1895, file: !1896, line: 271, type: !1899)
!2010 = !DILocalVariable(name: "buf", arg: 2, scope: !1895, file: !1896, line: 271, type: !977)
!2011 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1895, file: !1896, line: 271, type: !200)
!2012 = !DILocalVariable(name: "off", scope: !1895, file: !1896, line: 273, type: !200)
!2013 = !DILocalVariable(name: "bit", scope: !1895, file: !1896, line: 274, type: !154)
!2014 = !DILocalVariable(name: "thread_state", scope: !1895, file: !1896, line: 275, type: !154)
!2015 = !DILocalVariable(name: "index", scope: !2016, file: !1896, line: 293, type: !154)
!2016 = distinct !DILexicalBlock(scope: !1895, file: !1896, line: 293, column: 2)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1301)
!2018 = !DIGlobalVariableExpression(var: !2019, expr: !DIExpression())
!2019 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2020, file: !2128, line: 56, type: !2117, isLocal: false, isDefinition: true)
!2020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2022, globals: !2125, splitDebugInlining: false, nameTableKind: None)
!2021 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2022 = !{!2023, !977, !102, !2123, !1675, !1381, !586, !103, !121, !1293, !2124}
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2025)
!2025 = !{!2026, !2084, !2096, !2097, !2098, !2099, !2105, !2118}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2024, file: !211, line: 247, baseType: !2027, size: 384)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2028)
!2028 = !{!2029, !2053, !2060, !2061, !2062, !2071, !2072, !2073}
!2029 = !DIDerivedType(tag: DW_TAG_member, scope: !2027, file: !211, line: 60, baseType: !2030, size: 64)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2027, file: !211, line: 60, size: 64, elements: !2031)
!2031 = !{!2032, !2047}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2030, file: !211, line: 61, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2035)
!2035 = !{!2036, !2042}
!2036 = !DIDerivedType(tag: DW_TAG_member, scope: !2034, file: !221, line: 38, baseType: !2037, size: 32)
!2037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2034, file: !221, line: 38, size: 32, elements: !2038)
!2038 = !{!2039, !2041}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2037, file: !221, line: 39, baseType: !2040, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2037, file: !221, line: 40, baseType: !2040, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2034, file: !221, line: 42, baseType: !2043, size: 32, offset: 32)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2034, file: !221, line: 42, size: 32, elements: !2044)
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2043, file: !221, line: 43, baseType: !2040, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2043, file: !221, line: 44, baseType: !2040, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2030, file: !211, line: 62, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2048, file: !237, line: 50, baseType: !2051, size: 64)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 64, elements: !242)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2027, file: !211, line: 68, baseType: !2054, size: 32, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2057)
!2057 = !{!2058}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2056, file: !247, line: 232, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2034)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2027, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2027, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2062 = !DIDerivedType(tag: DW_TAG_member, scope: !2027, file: !211, line: 90, baseType: !2063, size: 16, offset: 112)
!2063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2027, file: !211, line: 90, size: 16, elements: !2064)
!2064 = !{!2065, !2070}
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !2063, file: !211, line: 91, baseType: !2066, size: 16)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2063, file: !211, line: 91, size: 16, elements: !2067)
!2067 = !{!2068, !2069}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2066, file: !211, line: 96, baseType: !261, size: 8)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2066, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2063, file: !211, line: 100, baseType: !265, size: 16)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2027, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2027, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2027, file: !211, line: 131, baseType: !2074, size: 192, offset: 192)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2075)
!2075 = !{!2076, !2077, !2083}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2074, file: !247, line: 245, baseType: !2033, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2074, file: !247, line: 246, baseType: !2078, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2079)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{null, !2082}
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2074, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2024, file: !211, line: 250, baseType: !2085, size: 288, offset: 384)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2085, file: !284, line: 26, baseType: !121, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2085, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2085, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2085, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2085, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2085, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2085, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2085, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2085, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2024, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2024, file: !211, line: 256, baseType: !2055, size: 64, offset: 704)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2024, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2024, file: !211, line: 300, baseType: !2100, size: 96, offset: 800)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2101)
!2101 = !{!2102, !2103, !2104}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2100, file: !211, line: 153, baseType: !22, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2100, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2100, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2024, file: !211, line: 325, baseType: !2106, size: 32, offset: 896)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 32)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2108)
!2108 = !{!2109, !2115, !2116}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2107, file: !307, line: 5074, baseType: !2110, size: 96)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2111)
!2111 = !{!2112, !2113, !2114}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2110, file: !311, line: 57, baseType: !314, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2110, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2110, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2107, file: !307, line: 5075, baseType: !2055, size: 64, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2107, file: !307, line: 5076, baseType: !2117, offset: 160)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2024, file: !211, line: 343, baseType: !2119, size: 64, offset: 928)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2119, file: !284, line: 63, baseType: !121, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2119, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2125 = !{!2018, !2126, !2129, !2131}
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2020, file: !2128, line: 404, type: !103, isLocal: true, isDefinition: true)
!2128 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2020, file: !2128, line: 405, type: !103, isLocal: true, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "pending_current", scope: !2020, file: !2128, line: 425, type: !2023, isLocal: true, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2135, file: !2165, line: 15, type: !1293, isLocal: true, isDefinition: true)
!2135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2136, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2137, globals: !2162, splitDebugInlining: false, nameTableKind: None)
!2136 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2137 = !{!1381, !102, !586, !121, !1293, !103, !2138, !977, !280}
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2140)
!2140 = !{!2141, !2156, !2161}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2139, file: !247, line: 245, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2144)
!2144 = !{!2145, !2151}
!2145 = !DIDerivedType(tag: DW_TAG_member, scope: !2143, file: !221, line: 38, baseType: !2146, size: 32)
!2146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2143, file: !221, line: 38, size: 32, elements: !2147)
!2147 = !{!2148, !2150}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2146, file: !221, line: 39, baseType: !2149, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2146, file: !221, line: 40, baseType: !2149, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, scope: !2143, file: !221, line: 42, baseType: !2152, size: 32, offset: 32)
!2152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2143, file: !221, line: 42, size: 32, elements: !2153)
!2153 = !{!2154, !2155}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2152, file: !221, line: 43, baseType: !2149, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2152, file: !221, line: 44, baseType: !2149, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2139, file: !247, line: 246, baseType: !2157, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2158)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{null, !2138}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2139, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2162 = !{!2133, !2163, !2167, !2169}
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2135, file: !2165, line: 19, type: !2166, isLocal: true, isDefinition: true)
!2165 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2135, file: !2165, line: 25, type: !103, isLocal: true, isDefinition: true)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2135, file: !2165, line: 17, type: !2171, isLocal: true, isDefinition: true)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2143)
!2172 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2173, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2173 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2176, retainedTypes: !2177, globals: !2253, splitDebugInlining: false, nameTableKind: None)
!2175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/blinky/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2176 = !{!30, !852, !858}
!2177 = !{!102, !103, !2178, !2242, !2247, !905, !858, !852, !2252, !1381, !121, !1293}
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !853, line: 523, size: 288, elements: !2181)
!2181 = !{!2182, !2201, !2205, !2209, !2213, !2214, !2215, !2219, !2238}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2180, file: !853, line: 524, baseType: !2183, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!103, !2186, !893, !894}
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193, !2199, !2200}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2188, file: !141, line: 380, baseType: !144, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2188, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2188, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2188, file: !141, line: 386, baseType: !2194, size: 32, offset: 96)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2196)
!2196 = !{!2197, !2198}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2195, file: !141, line: 359, baseType: !154, size: 8)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2195, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2188, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2188, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2180, file: !853, line: 530, baseType: !2202, size: 32, offset: 32)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!103, !2186, !899}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2180, file: !853, line: 532, baseType: !2206, size: 32, offset: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!103, !2186, !905, !900}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2180, file: !853, line: 535, baseType: !2210, size: 32, offset: 96)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!103, !2186, !905}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2180, file: !853, line: 537, baseType: !2210, size: 32, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2180, file: !853, line: 539, baseType: !2210, size: 32, offset: 160)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2180, file: !853, line: 541, baseType: !2216, size: 32, offset: 192)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{!103, !2186, !893, !852, !858}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2180, file: !853, line: 544, baseType: !2220, size: 32, offset: 224)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!103, !2186, !2223, !157}
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !853, line: 478, size: 96, elements: !2225)
!2225 = !{!2226, !2232, !2237}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2224, file: !853, line: 482, baseType: !2227, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !925, line: 33, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !925, line: 29, size: 32, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2228, file: !925, line: 30, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2224, file: !853, line: 485, baseType: !2233, size: 32, offset: 32)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !853, line: 464, baseType: !2234)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{null, !2186, !2223, !905}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2224, file: !853, line: 493, baseType: !905, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2180, file: !853, line: 547, baseType: !2239, size: 32, offset: 256)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!121, !2186}
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !853, line: 428, size: 32, elements: !2245)
!2245 = !{!2246}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2244, file: !853, line: 434, baseType: !905, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2249)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !853, line: 441, size: 32, elements: !2250)
!2250 = !{!2251}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2249, file: !853, line: 447, baseType: !905, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2253 = !{!2254}
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "led", scope: !2174, file: !2256, line: 20, type: !2257, isLocal: true, isDefinition: true)
!2256 = !DIFile(filename: "zephyr/samples/basic/blinky/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2258)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !853, line: 271, size: 64, elements: !2259)
!2259 = !{!2260, !2261, !2262}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2258, file: !853, line: 273, baseType: !2186, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !2258, file: !853, line: 275, baseType: !893, size: 8, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !2258, file: !853, line: 277, baseType: !2263, size: 16, offset: 48)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !853, line: 249, baseType: !265)
!2264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2266 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2267, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2268, retainedTypes: !2288, splitDebugInlining: false, nameTableKind: None)
!2267 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2268 = !{!2269, !2277}
!2269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2270, line: 69, baseType: !32, size: 32, elements: !2271)
!2270 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2271 = !{!2272, !2273, !2274, !2275, !2276}
!2272 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2273 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2274 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2275 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2276 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2270, line: 56, baseType: !32, size: 32, elements: !2278)
!2278 = !{!2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287}
!2279 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2280 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2281 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2282 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2283 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2284 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2285 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2286 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2287 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2288 = !{!103, !2269, !2277, !2289, !262, !164, !2291, !2292, !155, !266, !144, !200, !102, !22, !32, !2294, !2295, !2296, !2297, !2298, !281, !2299, !2290, !2300, !2301, !2302, !2303}
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2270, line: 31, baseType: !2290)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2270, line: 32, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1294)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2297 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2305, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2305 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2308, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2307 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2308 = !{!2309, !30}
!2309 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2310, line: 27, baseType: !32, size: 32, elements: !2311)
!2310 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2311 = !{!2312, !2313, !2314, !2315, !2316}
!2312 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2313 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2314 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2315 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2316 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2318, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2319, retainedTypes: !2320, splitDebugInlining: false, nameTableKind: None)
!2318 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2319 = !{!425, !2309, !30}
!2320 = !{!612, !2321, !102, !103, !586, !121, !154, !2338}
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2323)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2324)
!2324 = !{!2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2323, file: !356, line: 413, baseType: !1396, size: 256)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2323, file: !356, line: 414, baseType: !1398, size: 768, offset: 256)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2323, file: !356, line: 415, baseType: !1396, size: 256, offset: 1024)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2323, file: !356, line: 416, baseType: !1398, size: 768, offset: 1280)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2323, file: !356, line: 417, baseType: !1396, size: 256, offset: 2048)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2323, file: !356, line: 418, baseType: !1398, size: 768, offset: 2304)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2323, file: !356, line: 419, baseType: !1396, size: 256, offset: 3072)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2323, file: !356, line: 420, baseType: !1398, size: 768, offset: 3328)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2323, file: !356, line: 421, baseType: !1396, size: 256, offset: 4096)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2323, file: !356, line: 422, baseType: !1409, size: 1792, offset: 4352)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2323, file: !356, line: 423, baseType: !1413, size: 1920, offset: 6144)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2323, file: !356, line: 424, baseType: !1418, size: 20608, offset: 8064)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2323, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2341)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2340, file: !356, line: 447, baseType: !360, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2340, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2340, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2340, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2340, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2340, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2340, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2340, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2340, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2340, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2340, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2340, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2340, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2340, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2340, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2340, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2340, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2340, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2340, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2340, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2340, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2364, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2364 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2366, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2367, splitDebugInlining: false, nameTableKind: None)
!2366 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2367 = !{!102, !103, !22, !2368}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2370, file: !356, line: 447, baseType: !360, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2370, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2370, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2370, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2370, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2370, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2370, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2370, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2370, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2370, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2370, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2370, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2370, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2370, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2370, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2370, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2370, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2370, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2370, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2370, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2370, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2394, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2395, splitDebugInlining: false, nameTableKind: None)
!2394 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2395 = !{!2396, !102, !103}
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2399)
!2399 = !{!2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2398, file: !356, line: 447, baseType: !360, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2398, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2398, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2398, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2398, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2398, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2398, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2398, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2398, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2398, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2398, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2398, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2398, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2398, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2398, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2398, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2398, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2398, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2398, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2398, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2398, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2422, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2423, splitDebugInlining: false, nameTableKind: None)
!2422 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2423 = !{!2424, !121, !102, !103}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2426, line: 98, size: 256, elements: !2427)
!2426 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2427 = !{!2428, !2433, !2438, !2443, !2448, !2453, !2458, !2463}
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2426, line: 99, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 99, size: 32, elements: !2430)
!2430 = !{!2431, !2432}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2429, file: !2426, line: 99, baseType: !121, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2429, file: !2426, line: 99, baseType: !121, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2426, line: 100, baseType: !2434, size: 32, offset: 32)
!2434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 100, size: 32, elements: !2435)
!2435 = !{!2436, !2437}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2434, file: !2426, line: 100, baseType: !121, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2434, file: !2426, line: 100, baseType: !121, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2426, line: 101, baseType: !2439, size: 32, offset: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 101, size: 32, elements: !2440)
!2440 = !{!2441, !2442}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2439, file: !2426, line: 101, baseType: !121, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2439, file: !2426, line: 101, baseType: !121, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2426, line: 102, baseType: !2444, size: 32, offset: 96)
!2444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 102, size: 32, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2444, file: !2426, line: 102, baseType: !121, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2444, file: !2426, line: 102, baseType: !121, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2426, line: 103, baseType: !2449, size: 32, offset: 128)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 103, size: 32, elements: !2450)
!2450 = !{!2451, !2452}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2449, file: !2426, line: 103, baseType: !121, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2449, file: !2426, line: 103, baseType: !121, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2426, line: 104, baseType: !2454, size: 32, offset: 160)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 104, size: 32, elements: !2455)
!2455 = !{!2456, !2457}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2454, file: !2426, line: 104, baseType: !121, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2454, file: !2426, line: 104, baseType: !121, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2426, line: 105, baseType: !2459, size: 32, offset: 192)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 105, size: 32, elements: !2460)
!2460 = !{!2461, !2462}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2459, file: !2426, line: 105, baseType: !121, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2459, file: !2426, line: 105, baseType: !121, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2425, file: !2426, line: 106, baseType: !121, size: 32, offset: 224)
!2464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2465, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2308, retainedTypes: !2466, splitDebugInlining: false, nameTableKind: None)
!2465 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2466 = !{!2467, !102, !103, !2492, !2535, !121}
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2469)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2470)
!2470 = !{!2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2469, file: !356, line: 447, baseType: !360, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2469, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2469, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2469, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2469, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2469, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2469, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2469, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2469, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2469, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2469, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2469, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2469, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2469, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2469, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2469, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2469, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2469, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2469, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2469, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2469, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2426, line: 141, baseType: !2494)
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2426, line: 97, size: 256, elements: !2495)
!2495 = !{!2496}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2494, file: !2426, line: 107, baseType: !2497, size: 256)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2426, line: 98, size: 256, elements: !2498)
!2498 = !{!2499, !2504, !2509, !2514, !2519, !2524, !2529, !2534}
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !2426, line: 99, baseType: !2500, size: 32)
!2500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !2426, line: 99, size: 32, elements: !2501)
!2501 = !{!2502, !2503}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2500, file: !2426, line: 99, baseType: !121, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2500, file: !2426, line: 99, baseType: !121, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !2426, line: 100, baseType: !2505, size: 32, offset: 32)
!2505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !2426, line: 100, size: 32, elements: !2506)
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2505, file: !2426, line: 100, baseType: !121, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2505, file: !2426, line: 100, baseType: !121, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !2426, line: 101, baseType: !2510, size: 32, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !2426, line: 101, size: 32, elements: !2511)
!2511 = !{!2512, !2513}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2510, file: !2426, line: 101, baseType: !121, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2510, file: !2426, line: 101, baseType: !121, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !2426, line: 102, baseType: !2515, size: 32, offset: 96)
!2515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !2426, line: 102, size: 32, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2515, file: !2426, line: 102, baseType: !121, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2515, file: !2426, line: 102, baseType: !121, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !2426, line: 103, baseType: !2520, size: 32, offset: 128)
!2520 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !2426, line: 103, size: 32, elements: !2521)
!2521 = !{!2522, !2523}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2520, file: !2426, line: 103, baseType: !121, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2520, file: !2426, line: 103, baseType: !121, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !2426, line: 104, baseType: !2525, size: 32, offset: 160)
!2525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !2426, line: 104, size: 32, elements: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2525, file: !2426, line: 104, baseType: !121, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2525, file: !2426, line: 104, baseType: !121, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !2426, line: 105, baseType: !2530, size: 32, offset: 192)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !2426, line: 105, size: 32, elements: !2531)
!2531 = !{!2532, !2533}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2530, file: !2426, line: 105, baseType: !121, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2530, file: !2426, line: 105, baseType: !121, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2497, file: !2426, line: 106, baseType: !121, size: 32, offset: 224)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1379, retainedTypes: !2538, splitDebugInlining: false, nameTableKind: None)
!2537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2538 = !{!612, !586, !154, !121, !2539, !2556}
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2541, file: !356, line: 413, baseType: !1396, size: 256)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2541, file: !356, line: 414, baseType: !1398, size: 768, offset: 256)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2541, file: !356, line: 415, baseType: !1396, size: 256, offset: 1024)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2541, file: !356, line: 416, baseType: !1398, size: 768, offset: 1280)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2541, file: !356, line: 417, baseType: !1396, size: 256, offset: 2048)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2541, file: !356, line: 418, baseType: !1398, size: 768, offset: 2304)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2541, file: !356, line: 419, baseType: !1396, size: 256, offset: 3072)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2541, file: !356, line: 420, baseType: !1398, size: 768, offset: 3328)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2541, file: !356, line: 421, baseType: !1396, size: 256, offset: 4096)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2541, file: !356, line: 422, baseType: !1409, size: 1792, offset: 4352)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2541, file: !356, line: 423, baseType: !1413, size: 1920, offset: 6144)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2541, file: !356, line: 424, baseType: !1418, size: 20608, offset: 8064)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2541, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2558)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2559)
!2559 = !{!2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2558, file: !356, line: 447, baseType: !360, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2558, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2558, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2558, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2558, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2558, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2558, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2558, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2558, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2558, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2558, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2558, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2558, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2558, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2558, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2558, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2558, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2558, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2558, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2558, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2558, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2583, splitDebugInlining: false, nameTableKind: None)
!2582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2583 = !{!2584, !102, !103}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2586, file: !356, line: 447, baseType: !360, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2586, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2586, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2586, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2586, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2586, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2586, file: !356, line: 453, baseType: !1433, size: 96, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2586, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2586, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2586, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2586, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2586, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2586, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2586, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2586, file: !356, line: 461, baseType: !1442, size: 64, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2586, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2586, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2586, file: !356, line: 464, baseType: !1446, size: 128, offset: 640)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2586, file: !356, line: 465, baseType: !1448, size: 160, offset: 768)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2586, file: !356, line: 466, baseType: !1450, size: 160, offset: 928)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2586, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2611, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2611 = !{!146, !977, !200, !810, !2612, !155, !102}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2616, splitDebugInlining: false, nameTableKind: None)
!2615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2616 = !{!2617}
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2619, file: !116, line: 479, baseType: !120, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2619, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2619, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2619, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2619, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2619, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2619, file: !116, line: 485, baseType: !674, size: 64, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2619, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2619, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2619, file: !116, line: 488, baseType: !674, size: 64, offset: 320)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2619, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2619, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2619, file: !116, line: 491, baseType: !674, size: 64, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2619, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2619, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2619, file: !116, line: 494, baseType: !674, size: 64, offset: 576)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2619, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2619, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2619, file: !116, line: 497, baseType: !674, size: 64, offset: 704)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2619, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2619, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2619, file: !116, line: 500, baseType: !674, size: 64, offset: 832)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2619, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2619, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2619, file: !116, line: 503, baseType: !674, size: 64, offset: 960)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2619, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2619, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2619, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2619, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2619, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2619, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2656, retainedTypes: !2672, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2656 = !{!2657, !2664, !2668}
!2657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2658, line: 38, baseType: !32, size: 32, elements: !2659)
!2658 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2659 = !{!2660, !2661, !2662, !2663}
!2660 = !DIEnumerator(name: "HAL_OK", value: 0)
!2661 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2662 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2663 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2664 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !651, line: 184, baseType: !32, size: 32, elements: !2665)
!2665 = !{!2666, !2667}
!2666 = !DIEnumerator(name: "RESET", value: 0)
!2667 = !DIEnumerator(name: "SET", value: 1)
!2668 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !651, line: 190, baseType: !32, size: 32, elements: !2669)
!2669 = !{!2670, !2671}
!2670 = !DIEnumerator(name: "DISABLE", value: 0)
!2671 = !DIEnumerator(name: "ENABLE", value: 1)
!2672 = !{!102, !2673, !154, !121, !1295, !2708, !2714, !2725, !265, !2726, !1293}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !2676)
!2676 = !{!2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2675, file: !116, line: 479, baseType: !120, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2675, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2675, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2675, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2675, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2675, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2675, file: !116, line: 485, baseType: !674, size: 64, offset: 192)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2675, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2675, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2675, file: !116, line: 488, baseType: !674, size: 64, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2675, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2675, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2675, file: !116, line: 491, baseType: !674, size: 64, offset: 448)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2675, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2675, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2675, file: !116, line: 494, baseType: !674, size: 64, offset: 576)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2675, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2675, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2675, file: !116, line: 497, baseType: !674, size: 64, offset: 704)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2675, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2675, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2675, file: !116, line: 500, baseType: !674, size: 64, offset: 832)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2675, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2675, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2675, file: !116, line: 503, baseType: !674, size: 64, offset: 960)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2675, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2675, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2675, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2675, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2675, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2675, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 471, baseType: !2710)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 467, size: 64, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2710, file: !116, line: 469, baseType: !120, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2710, file: !116, line: 470, baseType: !120, size: 32, offset: 32)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !2716)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !2717)
!2717 = !{!2718, !2719, !2720, !2721, !2722, !2723, !2724}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2716, file: !116, line: 372, baseType: !120, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2716, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2716, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2716, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2716, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2716, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2716, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 396, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 385, size: 320, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2728, file: !116, line: 387, baseType: !120, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2728, file: !116, line: 388, baseType: !120, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2728, file: !116, line: 389, baseType: !120, size: 32, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2728, file: !116, line: 390, baseType: !120, size: 32, offset: 96)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2728, file: !116, line: 391, baseType: !120, size: 32, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2728, file: !116, line: 392, baseType: !120, size: 32, offset: 160)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2728, file: !116, line: 393, baseType: !120, size: 32, offset: 192)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2728, file: !116, line: 394, baseType: !120, size: 32, offset: 224)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2728, file: !116, line: 395, baseType: !964, size: 64, offset: 256)
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2741, retainedTypes: !2742, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2741 = !{!650}
!2742 = !{!2743, !121, !2751, !2757, !2768}
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2745)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2746)
!2746 = !{!2747, !2748, !2749, !2750}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2745, file: !356, line: 766, baseType: !120, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2745, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2745, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2745, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 471, baseType: !2753)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 467, size: 64, elements: !2754)
!2754 = !{!2755, !2756}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2753, file: !116, line: 469, baseType: !120, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2753, file: !116, line: 470, baseType: !120, size: 32, offset: 32)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !2759)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !2760)
!2760 = !{!2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2759, file: !116, line: 372, baseType: !120, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2759, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2759, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2759, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2759, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2759, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2759, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !2770)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !2771)
!2771 = !{!2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2770, file: !116, line: 479, baseType: !120, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2770, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2770, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2770, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2770, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2770, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2770, file: !116, line: 485, baseType: !674, size: 64, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2770, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2770, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2770, file: !116, line: 488, baseType: !674, size: 64, offset: 320)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2770, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2770, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2770, file: !116, line: 491, baseType: !674, size: 64, offset: 448)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2770, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2770, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2770, file: !116, line: 494, baseType: !674, size: 64, offset: 576)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2770, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2770, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2770, file: !116, line: 497, baseType: !674, size: 64, offset: 704)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2770, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2770, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2770, file: !116, line: 500, baseType: !674, size: 64, offset: 832)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2770, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2770, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2770, file: !116, line: 503, baseType: !674, size: 64, offset: 960)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2770, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2770, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2770, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2770, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2770, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2770, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!2803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2805, splitDebugInlining: false, nameTableKind: None)
!2804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2805 = !{!102, !200}
!2806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2808, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2808 = !{!2809, !2816, !30}
!2809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2810, line: 14, baseType: !32, size: 32, elements: !2811)
!2810 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2811 = !{!2812, !2813, !2814, !2815}
!2812 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2813 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2814 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2815 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2816 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2810, line: 42, baseType: !32, size: 32, elements: !2817)
!2817 = !{!2818, !2819, !2820, !2821, !2822, !2823}
!2818 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2819 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2820 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2821 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2822 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2823 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2828, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2828 = !{!22, !102, !103}
!2829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2830 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2831 = !{!"Ubuntu clang version 14.0.6"}
!2832 = !{i32 7, !"Dwarf Version", i32 4}
!2833 = !{i32 2, !"Debug Info Version", i32 3}
!2834 = !{i32 1, !"wchar_size", i32 4}
!2835 = !{i32 1, !"min_enum_size", i32 4}
!2836 = !{i32 1, !"branch-target-enforcement", i32 0}
!2837 = !{i32 1, !"sign-return-address", i32 0}
!2838 = !{i32 1, !"sign-return-address-all", i32 0}
!2839 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2840 = !{i32 7, !"frame-pointer", i32 2}
!2841 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2842, file: !2842, line: 26, type: !2843, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2172, retainedNodes: !322)
!2842 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2843 = !DISubroutineType(types: !2844)
!2844 = !{null}
!2845 = !DILocation(line: 28, column: 1, scope: !2841)
!2846 = !{i64 2155025563, i64 2155025583, i64 2155025646}
!2847 = !DILocation(line: 29, column: 1, scope: !2841)
!2848 = !{i64 2155025978, i64 2155025998, i64 2155026061}
!2849 = !DILocation(line: 30, column: 1, scope: !2841)
!2850 = !{i64 2155026397, i64 2155026417, i64 2155026480}
!2851 = !DILocation(line: 31, column: 1, scope: !2841)
!2852 = !{i64 2155026816, i64 2155026836, i64 2155026899}
!2853 = !DILocation(line: 33, column: 1, scope: !2841)
!2854 = !{i64 2155027108, i64 2155027128, i64 2155027191}
!2855 = !DILocation(line: 35, column: 1, scope: !2841)
!2856 = !{i64 2155027433, i64 2155027453, i64 2155027516}
!2857 = !DILocation(line: 50, column: 1, scope: !2841)
!2858 = !{i64 2155027860, i64 2155027880, i64 2155027943}
!2859 = !DILocation(line: 54, column: 1, scope: !2841)
!2860 = !{i64 2155028299, i64 2155028319, i64 2155028382}
!2861 = !DILocation(line: 61, column: 1, scope: !2841)
!2862 = !{i64 2155028616, i64 2155028636, i64 2155028699}
!2863 = !DILocation(line: 63, column: 1, scope: !2841)
!2864 = !{i64 2155028996, i64 2155029016, i64 2155029079}
!2865 = !DILocation(line: 64, column: 1, scope: !2841)
!2866 = !{i64 2155029518, i64 2155029538, i64 2155029601}
!2867 = !DILocation(line: 65, column: 1, scope: !2841)
!2868 = !{i64 2155030016, i64 2155030036, i64 2155030099}
!2869 = !DILocation(line: 66, column: 1, scope: !2841)
!2870 = !{i64 2155030498, i64 2155030518, i64 2155030581}
!2871 = !DILocation(line: 67, column: 1, scope: !2841)
!2872 = !{i64 2155031005, i64 2155031025, i64 2155031088}
!2873 = !DILocation(line: 68, column: 1, scope: !2841)
!2874 = !{i64 2155031493, i64 2155031513, i64 2155031576}
!2875 = !DILocation(line: 70, column: 1, scope: !2841)
!2876 = !{i64 2155031961, i64 2155031981, i64 2155032044}
!2877 = !DILocation(line: 71, column: 1, scope: !2841)
!2878 = !{i64 2155036464, i64 2155036484, i64 2155036547}
!2879 = !DILocation(line: 72, column: 1, scope: !2841)
!2880 = !{i64 2155036922, i64 2155036942, i64 2155037005}
!2881 = !DILocation(line: 79, column: 1, scope: !2841)
!2882 = !{i64 2155037376, i64 2155037396, i64 2155037459}
!2883 = !DILocation(line: 80, column: 1, scope: !2841)
!2884 = !{i64 2155037887, i64 2155037907, i64 2155037970}
!2885 = !DILocation(line: 82, column: 1, scope: !2841)
!2886 = !{i64 2155038378, i64 2155038398, i64 2155038461}
!2887 = !DILocation(line: 97, column: 1, scope: !2841)
!2888 = !{i64 2155038715, i64 2155038735, i64 2155038798}
!2889 = !DILocation(line: 99, column: 1, scope: !2841)
!2890 = !{i64 2155038933, i64 2155038953, i64 2155039016}
!2891 = !DILocation(line: 102, column: 1, scope: !2841)
!2892 = !{i64 2155039190, i64 2155039210, i64 2155039273}
!2893 = !DILocation(line: 105, column: 1, scope: !2841)
!2894 = !{i64 2155039430, i64 2155039450, i64 2155039513}
!2895 = !DILocation(line: 115, column: 1, scope: !2841)
!2896 = !{i64 2155039769, i64 2155039789, i64 2155039852}
!2897 = !DILocation(line: 118, column: 1, scope: !2841)
!2898 = !{i64 2155040113, i64 2155040133, i64 2155040196}
!2899 = !DILocation(line: 32, column: 1, scope: !2900)
!2900 = !DILexicalBlockFile(scope: !2841, file: !2901, discriminator: 0)
!2901 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2902 = !{i64 2155040469, i64 2155040489, i64 2155040552}
!2903 = !DILocation(line: 33, column: 1, scope: !2900)
!2904 = !{i64 2155040981, i64 2155041001, i64 2155041064}
!2905 = !DILocation(line: 53, column: 1, scope: !2900)
!2906 = !{i64 2155041489, i64 2155041509, i64 2155041572}
!2907 = !DILocation(line: 54, column: 1, scope: !2900)
!2908 = !{i64 2155041907, i64 2155041927, i64 2155041990}
!2909 = !DILocation(line: 55, column: 1, scope: !2900)
!2910 = !{i64 2155042325, i64 2155042345, i64 2155042408}
!2911 = !DILocation(line: 56, column: 1, scope: !2900)
!2912 = !{i64 2155042743, i64 2155042763, i64 2155042826}
!2913 = !DILocation(line: 57, column: 1, scope: !2900)
!2914 = !{i64 2155043161, i64 2155043181, i64 2155043244}
!2915 = !DILocation(line: 58, column: 1, scope: !2900)
!2916 = !{i64 2155043579, i64 2155043599, i64 2155043662}
!2917 = !DILocation(line: 59, column: 1, scope: !2900)
!2918 = !{i64 2155043997, i64 2155044017, i64 2155044080}
!2919 = !DILocation(line: 60, column: 1, scope: !2900)
!2920 = !{i64 2155044421, i64 2155044441, i64 2155044504}
!2921 = !DILocation(line: 61, column: 1, scope: !2900)
!2922 = !{i64 2155044738, i64 2155044758, i64 2155044821}
!2923 = !DILocation(line: 70, column: 1, scope: !2900)
!2924 = !{i64 2155044967, i64 2155044987, i64 2155045050}
!2925 = !DILocation(line: 72, column: 1, scope: !2900)
!2926 = !{i64 2155045299, i64 2155045319, i64 2155045382}
!2927 = !DILocation(line: 73, column: 1, scope: !2900)
!2928 = !{i64 2155045749, i64 2155045769, i64 2155045832}
!2929 = !DILocation(line: 74, column: 1, scope: !2900)
!2930 = !{i64 2155050260, i64 2155050280, i64 2155050343}
!2931 = !DILocation(line: 75, column: 1, scope: !2900)
!2932 = !{i64 2155050710, i64 2155050730, i64 2155050793}
!2933 = !DILocation(line: 76, column: 1, scope: !2900)
!2934 = !{i64 2155051160, i64 2155051180, i64 2155051243}
!2935 = !DILocation(line: 77, column: 1, scope: !2900)
!2936 = !{i64 2155051610, i64 2155051630, i64 2155051693}
!2937 = !DILocation(line: 78, column: 1, scope: !2900)
!2938 = !{i64 2155052060, i64 2155052080, i64 2155052143}
!2939 = !DILocation(line: 79, column: 1, scope: !2900)
!2940 = !{i64 2155052510, i64 2155052530, i64 2155052593}
!2941 = !DILocation(line: 80, column: 1, scope: !2900)
!2942 = !{i64 2155052963, i64 2155052983, i64 2155053046}
!2943 = !DILocation(line: 84, column: 1, scope: !2900)
!2944 = !{i64 2155053295, i64 2155053315, i64 2155053378}
!2945 = !DILocation(line: 91, column: 1, scope: !2900)
!2946 = !{i64 2155053692, i64 2155053712, i64 2155053775}
!2947 = !DILocation(line: 93, column: 1, scope: !2900)
!2948 = !{i64 2155054059, i64 2155054079, i64 2155054142}
!2949 = !DILocation(line: 106, column: 1, scope: !2900)
!2950 = !{i64 2155054329, i64 2155054349, i64 2155054412}
!2951 = !DILocation(line: 11, column: 1, scope: !2952)
!2952 = !DILexicalBlockFile(scope: !2841, file: !2953, discriminator: 0)
!2953 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2954 = distinct !DISubprogram(name: "main", scope: !2256, file: !2256, line: 22, type: !2843, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2955)
!2955 = !{!2956}
!2956 = !DILocalVariable(name: "ret", scope: !2954, file: !2256, line: 24, type: !103)
!2957 = !DILocation(line: 26, column: 7, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2954, file: !2256, line: 26, column: 6)
!2959 = !DILocation(line: 26, column: 6, scope: !2954)
!2960 = !DILocation(line: 30, column: 8, scope: !2954)
!2961 = !DILocation(line: 0, scope: !2954)
!2962 = !DILocation(line: 31, column: 10, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2954, file: !2256, line: 31, column: 6)
!2964 = !DILocation(line: 31, column: 6, scope: !2954)
!2965 = !DILocation(line: 36, column: 9, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2954, file: !2256, line: 35, column: 12)
!2967 = !DILocation(line: 37, column: 11, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2966, file: !2256, line: 37, column: 7)
!2969 = !DILocation(line: 37, column: 7, scope: !2966)
!2970 = !DILocation(line: 40, column: 3, scope: !2966)
!2971 = distinct !{!2971, !2972, !2973}
!2972 = !DILocation(line: 35, column: 2, scope: !2954)
!2973 = !DILocation(line: 41, column: 2, scope: !2954)
!2974 = !DILocation(line: 42, column: 1, scope: !2954)
!2975 = distinct !DISubprogram(name: "device_is_ready", scope: !2976, file: !2976, line: 47, type: !2977, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2979)
!2976 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!157, !2186}
!2979 = !{!2980}
!2980 = !DILocalVariable(name: "dev", arg: 1, scope: !2975, file: !2976, line: 47, type: !2186)
!2981 = !DILocation(line: 0, scope: !2975)
!2982 = !DILocation(line: 55, column: 2, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2975, file: !2976, line: 55, column: 2)
!2984 = !{i64 2154983177}
!2985 = !DILocation(line: 56, column: 9, scope: !2975)
!2986 = !DILocation(line: 56, column: 2, scope: !2975)
!2987 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !853, file: !853, line: 731, type: !2988, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !2991)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!103, !2990, !894}
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 32)
!2991 = !{!2992, !2993}
!2992 = !DILocalVariable(name: "spec", arg: 1, scope: !2987, file: !853, line: 731, type: !2990)
!2993 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !2987, file: !853, line: 732, type: !894)
!2994 = !DILocation(line: 0, scope: !2987)
!2995 = !DILocation(line: 734, column: 9, scope: !2987)
!2996 = !DILocation(line: 734, column: 2, scope: !2987)
!2997 = distinct !DISubprogram(name: "gpio_pin_toggle_dt", scope: !853, file: !853, line: 1352, type: !2998, scopeLine: 1353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3000)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!103, !2990}
!3000 = !{!3001}
!3001 = !DILocalVariable(name: "spec", arg: 1, scope: !2997, file: !853, line: 1352, type: !2990)
!3002 = !DILocation(line: 1354, column: 9, scope: !2997)
!3003 = !DILocation(line: 1354, column: 2, scope: !2997)
!3004 = distinct !DISubprogram(name: "k_msleep", scope: !307, file: !307, line: 439, type: !3005, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3007)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!586, !586}
!3007 = !{!3008}
!3008 = !DILocalVariable(name: "ms", arg: 1, scope: !3004, file: !307, line: 439, type: !586)
!3009 = !DILocation(line: 0, scope: !3004)
!3010 = !DILocation(line: 441, column: 9, scope: !3004)
!3011 = !DILocation(line: 441, column: 2, scope: !3004)
!3012 = distinct !DISubprogram(name: "k_sleep", scope: !3013, file: !3013, line: 91, type: !3014, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3020)
!3013 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!3014 = !DISubroutineType(types: !3015)
!3015 = !{!586, !3016}
!3016 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1382, line: 67, baseType: !3017)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1382, line: 65, size: 64, elements: !3018)
!3018 = !{!3019}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3017, file: !1382, line: 66, baseType: !1381, size: 64)
!3020 = !{!3021}
!3021 = !DILocalVariable(name: "timeout", arg: 1, scope: !3012, file: !3013, line: 91, type: !3016)
!3022 = !DILocation(line: 0, scope: !3012)
!3023 = !DILocation(line: 99, column: 2, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3012, file: !3013, line: 99, column: 2)
!3025 = !{i64 2154737091}
!3026 = !DILocation(line: 100, column: 9, scope: !3012)
!3027 = !DILocation(line: 100, column: 2, scope: !3012)
!3028 = distinct !DISubprogram(name: "gpio_pin_toggle", scope: !853, file: !853, line: 1331, type: !3029, scopeLine: 1332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3031)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!103, !2186, !893}
!3031 = !{!3032, !3033, !3034}
!3032 = !DILocalVariable(name: "port", arg: 1, scope: !3028, file: !853, line: 1331, type: !2186)
!3033 = !DILocalVariable(name: "pin", arg: 2, scope: !3028, file: !853, line: 1331, type: !893)
!3034 = !DILocalVariable(name: "cfg", scope: !3028, file: !853, line: 1333, type: !3035)
!3035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2242)
!3036 = !DILocation(line: 0, scope: !3028)
!3037 = !DILocation(line: 1339, column: 9, scope: !3028)
!3038 = !DILocation(line: 1339, column: 2, scope: !3028)
!3039 = distinct !DISubprogram(name: "gpio_port_toggle_bits", scope: !3040, file: !3040, line: 222, type: !2211, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3041)
!3040 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!3041 = !{!3042, !3043}
!3042 = !DILocalVariable(name: "port", arg: 1, scope: !3039, file: !3040, line: 222, type: !2186)
!3043 = !DILocalVariable(name: "pins", arg: 2, scope: !3039, file: !3040, line: 222, type: !905)
!3044 = !DILocation(line: 0, scope: !3039)
!3045 = !DILocation(line: 231, column: 2, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3039, file: !3040, line: 231, column: 2)
!3047 = !{i64 2154998023}
!3048 = !DILocation(line: 232, column: 9, scope: !3039)
!3049 = !DILocation(line: 232, column: 2, scope: !3039)
!3050 = distinct !DISubprogram(name: "z_impl_gpio_port_toggle_bits", scope: !853, file: !853, line: 1098, type: !2211, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3051)
!3051 = !{!3052, !3053, !3054}
!3052 = !DILocalVariable(name: "port", arg: 1, scope: !3050, file: !853, line: 1098, type: !2186)
!3053 = !DILocalVariable(name: "pins", arg: 2, scope: !3050, file: !853, line: 1099, type: !905)
!3054 = !DILocalVariable(name: "api", scope: !3050, file: !853, line: 1101, type: !2178)
!3055 = !DILocation(line: 0, scope: !3050)
!3056 = !DILocation(line: 1102, column: 41, scope: !3050)
!3057 = !DILocation(line: 1104, column: 14, scope: !3050)
!3058 = !DILocation(line: 1104, column: 9, scope: !3050)
!3059 = !DILocation(line: 1104, column: 2, scope: !3050)
!3060 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !3040, file: !3040, line: 49, type: !2184, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3061)
!3061 = !{!3062, !3063, !3064}
!3062 = !DILocalVariable(name: "port", arg: 1, scope: !3060, file: !3040, line: 49, type: !2186)
!3063 = !DILocalVariable(name: "pin", arg: 2, scope: !3060, file: !3040, line: 49, type: !893)
!3064 = !DILocalVariable(name: "flags", arg: 3, scope: !3060, file: !3040, line: 49, type: !894)
!3065 = !DILocation(line: 0, scope: !3060)
!3066 = !DILocation(line: 59, column: 2, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3060, file: !3040, line: 59, column: 2)
!3068 = !{i64 2154997547}
!3069 = !DILocation(line: 60, column: 9, scope: !3060)
!3070 = !DILocation(line: 60, column: 2, scope: !3060)
!3071 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !853, file: !853, line: 667, type: !2184, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3072)
!3072 = !{!3073, !3074, !3075, !3076, !3077, !3078}
!3073 = !DILocalVariable(name: "port", arg: 1, scope: !3071, file: !853, line: 667, type: !2186)
!3074 = !DILocalVariable(name: "pin", arg: 2, scope: !3071, file: !853, line: 668, type: !893)
!3075 = !DILocalVariable(name: "flags", arg: 3, scope: !3071, file: !853, line: 669, type: !894)
!3076 = !DILocalVariable(name: "api", scope: !3071, file: !853, line: 671, type: !2178)
!3077 = !DILocalVariable(name: "cfg", scope: !3071, file: !853, line: 673, type: !3035)
!3078 = !DILocalVariable(name: "data", scope: !3071, file: !853, line: 675, type: !2252)
!3079 = !DILocation(line: 0, scope: !3071)
!3080 = !DILocation(line: 672, column: 41, scope: !3071)
!3081 = !DILocation(line: 676, column: 36, scope: !3071)
!3082 = !DILocation(line: 714, column: 9, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !853, line: 713, column: 9)
!3084 = distinct !DILexicalBlock(scope: !3071, file: !853, line: 711, column: 6)
!3085 = !DILocation(line: 714, column: 16, scope: !3083)
!3086 = !DILocation(line: 717, column: 14, scope: !3071)
!3087 = !DILocation(line: 717, column: 9, scope: !3071)
!3088 = !DILocation(line: 717, column: 2, scope: !3071)
!3089 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !2977, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2174, retainedNodes: !3090)
!3090 = !{!3091}
!3091 = !DILocalVariable(name: "dev", arg: 1, scope: !3089, file: !141, line: 730, type: !2186)
!3092 = !DILocation(line: 0, scope: !3089)
!3093 = !DILocation(line: 732, column: 9, scope: !3089)
!3094 = !DILocation(line: 732, column: 2, scope: !3089)
!3095 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3096)
!3096 = !{!3097}
!3097 = !DILocalVariable(name: "c", arg: 1, scope: !3095, file: !105, line: 45, type: !103)
!3098 = !DILocation(line: 0, scope: !3095)
!3099 = !DILocation(line: 50, column: 2, scope: !3095)
!3100 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3101, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3103)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{null, !106}
!3103 = !{!3104}
!3104 = !DILocalVariable(name: "fn", arg: 1, scope: !3100, file: !105, line: 63, type: !106)
!3105 = !DILocation(line: 0, scope: !3100)
!3106 = !DILocation(line: 65, column: 12, scope: !3100)
!3107 = !DILocation(line: 66, column: 1, scope: !3100)
!3108 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3109, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!102}
!3111 = !DILocation(line: 78, column: 9, scope: !3108)
!3112 = !DILocation(line: 78, column: 2, scope: !3108)
!3113 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3114, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3123)
!3114 = !DISubroutineType(types: !3115)
!3115 = !{null, !144, !3116}
!3116 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3117, line: 99, baseType: !3118)
!3117 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3117, line: 40, baseType: !3119)
!3119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3120)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3121)
!3121 = !{!3122}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3120, file: !105, line: 79, baseType: !102, size: 32)
!3123 = !{!3124, !3125, !3126}
!3124 = !DILocalVariable(name: "fmt", arg: 1, scope: !3113, file: !105, line: 113, type: !144)
!3125 = !DILocalVariable(name: "ap", arg: 2, scope: !3113, file: !105, line: 113, type: !3116)
!3126 = !DILocalVariable(name: "ctx", scope: !3127, file: !105, line: 121, type: !3129)
!3127 = distinct !DILexicalBlock(scope: !3128, file: !105, line: 120, column: 27)
!3128 = distinct !DILexicalBlock(scope: !3113, file: !105, line: 120, column: 6)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3130)
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3129, file: !105, line: 85, baseType: !32, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3129, file: !105, line: 86, baseType: !3133, offset: 32)
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !3134)
!3134 = !{!3135}
!3135 = !DISubrange(count: 0)
!3136 = !DILocation(line: 0, scope: !3113)
!3137 = !DILocation(line: 148, column: 3, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3128, file: !105, line: 138, column: 9)
!3139 = !DILocation(line: 155, column: 1, scope: !3113)
!3140 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3141, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3143)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!103, !103, !102}
!3143 = !{!3144, !3145}
!3144 = !DILocalVariable(name: "c", arg: 1, scope: !3140, file: !105, line: 107, type: !103)
!3145 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3140, file: !105, line: 107, type: !102)
!3146 = !DILocation(line: 0, scope: !3140)
!3147 = !DILocation(line: 110, column: 9, scope: !3140)
!3148 = !DILocation(line: 110, column: 2, scope: !3140)
!3149 = distinct !DISubprogram(name: "cbvprintf", scope: !3150, file: !3150, line: 739, type: !3151, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3157)
!3150 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!103, !3153, !102, !144, !3116}
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3150, line: 297, baseType: !3154)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 32)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!103, null}
!3157 = !{!3158, !3159, !3160, !3161}
!3158 = !DILocalVariable(name: "out", arg: 1, scope: !3149, file: !3150, line: 739, type: !3153)
!3159 = !DILocalVariable(name: "ctx", arg: 2, scope: !3149, file: !3150, line: 739, type: !102)
!3160 = !DILocalVariable(name: "format", arg: 3, scope: !3149, file: !3150, line: 739, type: !144)
!3161 = !DILocalVariable(name: "ap", arg: 4, scope: !3149, file: !3150, line: 739, type: !3116)
!3162 = !DILocation(line: 0, scope: !3149)
!3163 = !DILocation(line: 741, column: 9, scope: !3149)
!3164 = !DILocation(line: 741, column: 2, scope: !3149)
!3165 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3166, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3168)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{null, !977, !200}
!3168 = !{!3169, !3170, !3171}
!3169 = !DILocalVariable(name: "c", arg: 1, scope: !3165, file: !105, line: 157, type: !977)
!3170 = !DILocalVariable(name: "n", arg: 2, scope: !3165, file: !105, line: 157, type: !200)
!3171 = !DILocalVariable(name: "i", scope: !3165, file: !105, line: 159, type: !200)
!3172 = !DILocation(line: 0, scope: !3165)
!3173 = !DILocation(line: 164, column: 16, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3175, file: !105, line: 164, column: 2)
!3175 = distinct !DILexicalBlock(scope: !3165, file: !105, line: 164, column: 2)
!3176 = !DILocation(line: 164, column: 2, scope: !3175)
!3177 = !DILocation(line: 165, column: 3, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3174, file: !105, line: 164, column: 26)
!3179 = !DILocation(line: 165, column: 13, scope: !3178)
!3180 = !DILocation(line: 164, column: 22, scope: !3174)
!3181 = distinct !{!3181, !3176, !3182}
!3182 = !DILocation(line: 166, column: 2, scope: !3175)
!3183 = !DILocation(line: 171, column: 1, scope: !3165)
!3184 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3185, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{null, !144, null}
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "fmt", arg: 1, scope: !3184, file: !105, line: 203, type: !144)
!3189 = !DILocalVariable(name: "ap", scope: !3184, file: !105, line: 205, type: !3116)
!3190 = !DILocation(line: 0, scope: !3184)
!3191 = !DILocation(line: 205, column: 2, scope: !3184)
!3192 = !DILocation(line: 205, column: 10, scope: !3184)
!3193 = !DILocation(line: 207, column: 2, scope: !3184)
!3194 = !DILocation(line: 209, column: 2, scope: !3184)
!3195 = !DILocation(line: 211, column: 2, scope: !3184)
!3196 = !DILocation(line: 212, column: 1, scope: !3184)
!3197 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3198, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3200)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!103, !977, !200, !144, null}
!3200 = !{!3201, !3202, !3203, !3204, !3205}
!3201 = !DILocalVariable(name: "str", arg: 1, scope: !3197, file: !105, line: 239, type: !977)
!3202 = !DILocalVariable(name: "size", arg: 2, scope: !3197, file: !105, line: 239, type: !200)
!3203 = !DILocalVariable(name: "fmt", arg: 3, scope: !3197, file: !105, line: 239, type: !144)
!3204 = !DILocalVariable(name: "ap", scope: !3197, file: !105, line: 241, type: !3116)
!3205 = !DILocalVariable(name: "ret", scope: !3197, file: !105, line: 242, type: !103)
!3206 = !DILocation(line: 0, scope: !3197)
!3207 = !DILocation(line: 241, column: 2, scope: !3197)
!3208 = !DILocation(line: 241, column: 10, scope: !3197)
!3209 = !DILocation(line: 244, column: 2, scope: !3197)
!3210 = !DILocation(line: 245, column: 8, scope: !3197)
!3211 = !DILocation(line: 246, column: 2, scope: !3197)
!3212 = !DILocation(line: 249, column: 1, scope: !3197)
!3213 = !DILocation(line: 248, column: 2, scope: !3197)
!3214 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3215, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3217)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!103, !977, !200, !144, !3116}
!3217 = !{!3218, !3219, !3220, !3221, !3222}
!3218 = !DILocalVariable(name: "str", arg: 1, scope: !3214, file: !105, line: 251, type: !977)
!3219 = !DILocalVariable(name: "size", arg: 2, scope: !3214, file: !105, line: 251, type: !200)
!3220 = !DILocalVariable(name: "fmt", arg: 3, scope: !3214, file: !105, line: 251, type: !144)
!3221 = !DILocalVariable(name: "ap", arg: 4, scope: !3214, file: !105, line: 251, type: !3116)
!3222 = !DILocalVariable(name: "ctx", scope: !3214, file: !105, line: 253, type: !3223)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3224)
!3224 = !{!3225, !3226, !3227}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3223, file: !105, line: 218, baseType: !977, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3223, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3223, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3228 = !DILocation(line: 0, scope: !3214)
!3229 = !DILocation(line: 253, column: 2, scope: !3214)
!3230 = !DILocation(line: 253, column: 21, scope: !3214)
!3231 = !DILocation(line: 253, column: 27, scope: !3214)
!3232 = !DILocation(line: 255, column: 2, scope: !3214)
!3233 = !DILocation(line: 257, column: 10, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3214, file: !105, line: 257, column: 6)
!3235 = !DILocation(line: 257, column: 22, scope: !3234)
!3236 = !DILocation(line: 257, column: 16, scope: !3234)
!3237 = !DILocation(line: 257, column: 6, scope: !3214)
!3238 = !DILocation(line: 258, column: 3, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3234, file: !105, line: 257, column: 27)
!3240 = !DILocation(line: 258, column: 18, scope: !3239)
!3241 = !DILocation(line: 259, column: 2, scope: !3239)
!3242 = !DILocation(line: 262, column: 1, scope: !3214)
!3243 = !DILocation(line: 261, column: 2, scope: !3214)
!3244 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3245, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3248)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{!103, !103, !3247}
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3248 = !{!3249, !3250}
!3249 = !DILocalVariable(name: "c", arg: 1, scope: !3244, file: !105, line: 223, type: !103)
!3250 = !DILocalVariable(name: "ctx", arg: 2, scope: !3244, file: !105, line: 223, type: !3247)
!3251 = !DILocation(line: 0, scope: !3244)
!3252 = !DILocation(line: 225, column: 11, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3244, file: !105, line: 225, column: 6)
!3254 = !DILocation(line: 225, column: 15, scope: !3253)
!3255 = !DILocation(line: 0, scope: !3253)
!3256 = !DILocation(line: 225, column: 23, scope: !3253)
!3257 = !DILocation(line: 225, column: 45, scope: !3253)
!3258 = !DILocation(line: 225, column: 37, scope: !3253)
!3259 = !DILocation(line: 225, column: 6, scope: !3244)
!3260 = !DILocation(line: 226, column: 8, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3253, file: !105, line: 225, column: 50)
!3262 = !DILocation(line: 226, column: 13, scope: !3261)
!3263 = !DILocation(line: 227, column: 3, scope: !3261)
!3264 = !DILocation(line: 230, column: 29, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3244, file: !105, line: 230, column: 6)
!3266 = !DILocation(line: 230, column: 17, scope: !3265)
!3267 = !DILocation(line: 230, column: 6, scope: !3244)
!3268 = !DILocation(line: 231, column: 22, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !105, line: 230, column: 34)
!3270 = !DILocation(line: 231, column: 3, scope: !3269)
!3271 = !DILocation(line: 231, column: 26, scope: !3269)
!3272 = !DILocation(line: 232, column: 2, scope: !3269)
!3273 = !DILocation(line: 233, column: 28, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3265, file: !105, line: 232, column: 9)
!3275 = !DILocation(line: 233, column: 22, scope: !3274)
!3276 = !DILocation(line: 233, column: 3, scope: !3274)
!3277 = !DILocation(line: 233, column: 26, scope: !3274)
!3278 = !DILocation(line: 237, column: 1, scope: !3244)
!3279 = distinct !DISubprogram(name: "z_thread_entry", scope: !3280, file: !3280, line: 30, type: !3281, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !3288)
!3280 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3281 = !DISubroutineType(types: !3282)
!3282 = !{null, !3283, !102, !102, !102}
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3284, line: 46, baseType: !3285)
!3284 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 32)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{null, !102, !102, !102}
!3288 = !{!3289, !3290, !3291, !3292}
!3289 = !DILocalVariable(name: "entry", arg: 1, scope: !3279, file: !3280, line: 30, type: !3283)
!3290 = !DILocalVariable(name: "p1", arg: 2, scope: !3279, file: !3280, line: 31, type: !102)
!3291 = !DILocalVariable(name: "p2", arg: 3, scope: !3279, file: !3280, line: 31, type: !102)
!3292 = !DILocalVariable(name: "p3", arg: 4, scope: !3279, file: !3280, line: 31, type: !102)
!3293 = !DILocation(line: 0, scope: !3279)
!3294 = !DILocation(line: 36, column: 2, scope: !3279)
!3295 = !DILocation(line: 38, column: 17, scope: !3279)
!3296 = !DILocation(line: 38, column: 2, scope: !3279)
!3297 = !DILocation(line: 45, column: 2, scope: !3279)
!3298 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3299, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !322)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!3301}
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3302)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 32)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3304)
!3304 = !{!3305, !3363, !3375, !3376, !3377, !3378, !3384, !3397}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3303, file: !211, line: 247, baseType: !3306, size: 384)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3307)
!3307 = !{!3308, !3332, !3339, !3340, !3341, !3350, !3351, !3352}
!3308 = !DIDerivedType(tag: DW_TAG_member, scope: !3306, file: !211, line: 60, baseType: !3309, size: 64)
!3309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3306, file: !211, line: 60, size: 64, elements: !3310)
!3310 = !{!3311, !3326}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3309, file: !211, line: 61, baseType: !3312, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3313)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3314)
!3314 = !{!3315, !3321}
!3315 = !DIDerivedType(tag: DW_TAG_member, scope: !3313, file: !221, line: 38, baseType: !3316, size: 32)
!3316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3313, file: !221, line: 38, size: 32, elements: !3317)
!3317 = !{!3318, !3320}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3316, file: !221, line: 39, baseType: !3319, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3316, file: !221, line: 40, baseType: !3319, size: 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, scope: !3313, file: !221, line: 42, baseType: !3322, size: 32, offset: 32)
!3322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3313, file: !221, line: 42, size: 32, elements: !3323)
!3323 = !{!3324, !3325}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3322, file: !221, line: 43, baseType: !3319, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3322, file: !221, line: 44, baseType: !3319, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3309, file: !211, line: 62, baseType: !3327, size: 64)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3328)
!3328 = !{!3329}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3327, file: !237, line: 50, baseType: !3330, size: 64)
!3330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3331, size: 64, elements: !242)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3306, file: !211, line: 68, baseType: !3333, size: 32, offset: 64)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 32)
!3334 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3335)
!3335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3336)
!3336 = !{!3337}
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3335, file: !247, line: 232, baseType: !3338, size: 64)
!3338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3313)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3306, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3306, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3341 = !DIDerivedType(tag: DW_TAG_member, scope: !3306, file: !211, line: 90, baseType: !3342, size: 16, offset: 112)
!3342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3306, file: !211, line: 90, size: 16, elements: !3343)
!3343 = !{!3344, !3349}
!3344 = !DIDerivedType(tag: DW_TAG_member, scope: !3342, file: !211, line: 91, baseType: !3345, size: 16)
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3342, file: !211, line: 91, size: 16, elements: !3346)
!3346 = !{!3347, !3348}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3345, file: !211, line: 96, baseType: !261, size: 8)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3345, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3342, file: !211, line: 100, baseType: !265, size: 16)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3306, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3306, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3306, file: !211, line: 131, baseType: !3353, size: 192, offset: 192)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3354)
!3354 = !{!3355, !3356, !3362}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3353, file: !247, line: 245, baseType: !3312, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3353, file: !247, line: 246, baseType: !3357, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3358)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 32)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{null, !3361}
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3353, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3303, file: !211, line: 250, baseType: !3364, size: 288, offset: 384)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3365)
!3365 = !{!3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3364, file: !284, line: 26, baseType: !121, size: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3364, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3364, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3364, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3364, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3364, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3364, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3364, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3364, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3303, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3303, file: !211, line: 256, baseType: !3334, size: 64, offset: 704)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3303, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3303, file: !211, line: 300, baseType: !3379, size: 96, offset: 800)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3380)
!3380 = !{!3381, !3382, !3383}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3379, file: !211, line: 153, baseType: !22, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3379, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3379, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3303, file: !211, line: 325, baseType: !3385, size: 32, offset: 896)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 32)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3387)
!3387 = !{!3388, !3394, !3395}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3386, file: !307, line: 5074, baseType: !3389, size: 96)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3390)
!3390 = !{!3391, !3392, !3393}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3389, file: !311, line: 57, baseType: !314, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3389, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3389, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3386, file: !307, line: 5075, baseType: !3334, size: 64, offset: 96)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3386, file: !307, line: 5076, baseType: !3396, offset: 160)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3303, file: !211, line: 343, baseType: !3398, size: 64, offset: 928)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3399)
!3399 = !{!3400, !3401}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3398, file: !284, line: 63, baseType: !121, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3398, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3402 = !DILocation(line: 535, column: 9, scope: !3298)
!3403 = !DILocation(line: 535, column: 2, scope: !3298)
!3404 = distinct !DISubprogram(name: "k_thread_abort", scope: !3013, file: !3013, line: 188, type: !3405, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !3407)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{null, !3301}
!3407 = !{!3408}
!3408 = !DILocalVariable(name: "thread", arg: 1, scope: !3404, file: !3013, line: 188, type: !3301)
!3409 = !DILocation(line: 0, scope: !3404)
!3410 = !DILocation(line: 197, column: 2, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3404, file: !3013, line: 197, column: 2)
!3412 = !{i64 2154737841}
!3413 = !DILocation(line: 198, column: 2, scope: !3404)
!3414 = !DILocation(line: 199, column: 1, scope: !3404)
!3415 = distinct !DISubprogram(name: "z_current_get", scope: !3013, file: !3013, line: 173, type: !3299, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2264, retainedNodes: !322)
!3416 = !DILocation(line: 180, column: 2, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3415, file: !3013, line: 180, column: 2)
!3418 = !{i64 2154737773}
!3419 = !DILocation(line: 181, column: 9, scope: !3415)
!3420 = !DILocation(line: 181, column: 2, scope: !3415)
!3421 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2270, file: !2270, line: 1338, type: !3422, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3430)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!103, !3153, !102, !144, !3424, !121}
!3424 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3117, line: 99, baseType: !3425)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3117, line: 40, baseType: !3426)
!3426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2270, baseType: !3427)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3428)
!3428 = !{!3429}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3427, file: !2270, baseType: !102, size: 32)
!3430 = !{!3431, !3432, !3433, !3434, !3435, !3436, !3440, !3441, !3442, !3444, !3449, !3494, !3497, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3509, !3510, !3511, !3515, !3518, !3520, !3523, !3524, !3525, !3530, !3536, !3539, !3543, !3549, !3553, !3556, !3558, !3561}
!3431 = !DILocalVariable(name: "out", arg: 1, scope: !3421, file: !2270, line: 1338, type: !3153)
!3432 = !DILocalVariable(name: "ctx", arg: 2, scope: !3421, file: !2270, line: 1338, type: !102)
!3433 = !DILocalVariable(name: "fp", arg: 3, scope: !3421, file: !2270, line: 1338, type: !144)
!3434 = !DILocalVariable(name: "ap", arg: 4, scope: !3421, file: !2270, line: 1339, type: !3424)
!3435 = !DILocalVariable(name: "flags", arg: 5, scope: !3421, file: !2270, line: 1339, type: !121)
!3436 = !DILocalVariable(name: "buf", scope: !3421, file: !2270, line: 1341, type: !3437)
!3437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !3438)
!3438 = !{!3439}
!3439 = !DISubrange(count: 22)
!3440 = !DILocalVariable(name: "count", scope: !3421, file: !2270, line: 1342, type: !200)
!3441 = !DILocalVariable(name: "sint", scope: !3421, file: !2270, line: 1343, type: !2289)
!3442 = !DILocalVariable(name: "tagged_ap", scope: !3421, file: !2270, line: 1345, type: !3443)
!3443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3444 = !DILocalVariable(name: "rc", scope: !3445, file: !2270, line: 1377, type: !103)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !2270, line: 1377, column: 4)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !2270, line: 1376, column: 19)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1376, column: 7)
!3448 = distinct !DILexicalBlock(scope: !3421, file: !2270, line: 1375, column: 19)
!3449 = !DILocalVariable(name: "state", scope: !3448, file: !2270, line: 1395, type: !3450)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3421, file: !2270, line: 1392, size: 192, elements: !3451)
!3451 = !{!3452, !3462}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3450, file: !2270, line: 1393, baseType: !3453, size: 64)
!3453 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2270, line: 166, size: 64, elements: !3454)
!3454 = !{!3455, !3456, !3457, !3459, !3461}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3453, file: !2270, line: 168, baseType: !2289, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3453, file: !2270, line: 171, baseType: !2292, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3453, file: !2270, line: 174, baseType: !3458, size: 64)
!3458 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3453, file: !2270, line: 177, baseType: !3460, size: 64)
!3460 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3453, file: !2270, line: 180, baseType: !102, size: 32)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3450, file: !2270, line: 1394, baseType: !3463, size: 96, offset: 64)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2270, line: 189, size: 96, elements: !3464)
!3464 = !{!3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3489}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3463, file: !2270, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3463, file: !2270, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3463, file: !2270, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3463, file: !2270, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3463, file: !2270, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3463, file: !2270, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3463, file: !2270, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3463, file: !2270, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3463, file: !2270, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3463, file: !2270, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3463, file: !2270, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3463, file: !2270, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3463, file: !2270, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3463, file: !2270, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3463, file: !2270, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3463, file: !2270, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3463, file: !2270, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3463, file: !2270, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3463, file: !2270, line: 260, baseType: !155, size: 8, offset: 24)
!3484 = !DIDerivedType(tag: DW_TAG_member, scope: !3463, file: !2270, line: 262, baseType: !3485, size: 32, offset: 32)
!3485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3463, file: !2270, line: 262, size: 32, elements: !3486)
!3486 = !{!3487, !3488}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3485, file: !2270, line: 267, baseType: !103, size: 32)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3485, file: !2270, line: 289, baseType: !103, size: 32)
!3489 = !DIDerivedType(tag: DW_TAG_member, scope: !3463, file: !2270, line: 292, baseType: !3490, size: 32, offset: 64)
!3490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3463, file: !2270, line: 292, size: 32, elements: !3491)
!3491 = !{!3492, !3493}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3490, file: !2270, line: 297, baseType: !103, size: 32)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3490, file: !2270, line: 306, baseType: !103, size: 32)
!3494 = !DILocalVariable(name: "conv", scope: !3448, file: !2270, line: 1400, type: !3495)
!3495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3496)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 32)
!3497 = !DILocalVariable(name: "value", scope: !3448, file: !2270, line: 1401, type: !3498)
!3498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3499)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 32)
!3500 = !DILocalVariable(name: "sp", scope: !3448, file: !2270, line: 1402, type: !144)
!3501 = !DILocalVariable(name: "width", scope: !3448, file: !2270, line: 1403, type: !103)
!3502 = !DILocalVariable(name: "precision", scope: !3448, file: !2270, line: 1404, type: !103)
!3503 = !DILocalVariable(name: "bps", scope: !3448, file: !2270, line: 1405, type: !144)
!3504 = !DILocalVariable(name: "bpe", scope: !3448, file: !2270, line: 1406, type: !144)
!3505 = !DILocalVariable(name: "sign", scope: !3448, file: !2270, line: 1407, type: !146)
!3506 = !DILocalVariable(name: "arg", scope: !3507, file: !2270, line: 1432, type: !103)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !2270, line: 1431, column: 24)
!3508 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1431, column: 7)
!3509 = !DILocalVariable(name: "specifier_cat", scope: !3448, file: !2270, line: 1468, type: !2269)
!3510 = !DILocalVariable(name: "length_mod", scope: !3448, file: !2270, line: 1470, type: !2277)
!3511 = !DILocalVariable(name: "rc", scope: !3512, file: !2270, line: 1575, type: !103)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !2270, line: 1575, column: 4)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !2270, line: 1574, column: 43)
!3514 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1574, column: 7)
!3515 = !DILocalVariable(name: "rc", scope: !3516, file: !2270, line: 1584, type: !103)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !2270, line: 1584, column: 4)
!3517 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1582, column: 28)
!3518 = !DILocalVariable(name: "len", scope: !3519, file: !2270, line: 1589, type: !200)
!3519 = distinct !DILexicalBlock(scope: !3517, file: !2270, line: 1586, column: 13)
!3520 = !DILocalVariable(name: "len", scope: !3521, file: !2270, line: 1641, type: !200)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !2270, line: 1640, column: 24)
!3522 = distinct !DILexicalBlock(scope: !3517, file: !2270, line: 1640, column: 8)
!3523 = !DILocalVariable(name: "nj_len", scope: !3448, file: !2270, line: 1722, type: !200)
!3524 = !DILocalVariable(name: "pad_len", scope: !3448, file: !2270, line: 1723, type: !103)
!3525 = !DILocalVariable(name: "pad", scope: !3526, file: !2270, line: 1751, type: !146)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !2270, line: 1750, column: 26)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !2270, line: 1750, column: 8)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !2270, line: 1747, column: 18)
!3529 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1747, column: 7)
!3530 = !DILocalVariable(name: "rc", scope: !3531, file: !2270, line: 1758, type: !103)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !2270, line: 1758, column: 7)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !2270, line: 1757, column: 21)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !2270, line: 1757, column: 10)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !2270, line: 1756, column: 26)
!3535 = distinct !DILexicalBlock(scope: !3526, file: !2270, line: 1756, column: 9)
!3536 = !DILocalVariable(name: "rc", scope: !3537, file: !2270, line: 1765, type: !103)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !2270, line: 1765, column: 6)
!3538 = distinct !DILexicalBlock(scope: !3526, file: !2270, line: 1764, column: 25)
!3539 = !DILocalVariable(name: "rc", scope: !3540, file: !2270, line: 1774, type: !103)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !2270, line: 1774, column: 4)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !2270, line: 1773, column: 18)
!3542 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1773, column: 7)
!3543 = !DILocalVariable(name: "rc", scope: !3544, file: !2270, line: 1819, type: !103)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !2270, line: 1819, column: 5)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !2270, line: 1818, column: 44)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !2270, line: 1818, column: 8)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !2270, line: 1817, column: 10)
!3548 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1777, column: 7)
!3549 = !DILocalVariable(name: "rc", scope: !3550, file: !2270, line: 1823, type: !103)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !2270, line: 1823, column: 5)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !2270, line: 1822, column: 26)
!3552 = distinct !DILexicalBlock(scope: !3547, file: !2270, line: 1822, column: 8)
!3553 = !DILocalVariable(name: "rc", scope: !3554, file: !2270, line: 1828, type: !103)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !2270, line: 1828, column: 5)
!3555 = distinct !DILexicalBlock(scope: !3547, file: !2270, line: 1827, column: 26)
!3556 = !DILocalVariable(name: "rc", scope: !3557, file: !2270, line: 1831, type: !103)
!3557 = distinct !DILexicalBlock(scope: !3547, file: !2270, line: 1831, column: 4)
!3558 = !DILocalVariable(name: "rc", scope: !3559, file: !2270, line: 1836, type: !103)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !2270, line: 1836, column: 4)
!3560 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1835, column: 21)
!3561 = !DILabel(scope: !3517, name: "prec_int_pad0", file: !2270, line: 1634)
!3562 = !DILocation(line: 0, scope: !3421)
!3563 = !DILocation(line: 1341, column: 2, scope: !3421)
!3564 = !DILocation(line: 1341, column: 7, scope: !3421)
!3565 = !DILocation(line: 1375, column: 2, scope: !3421)
!3566 = !DILocation(line: 1342, column: 9, scope: !3421)
!3567 = !DILocation(line: 1375, column: 9, scope: !3421)
!3568 = !DILocation(line: 1377, column: 4, scope: !3445)
!3569 = !DILocation(line: 0, scope: !3445)
!3570 = !DILocation(line: 1377, column: 4, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3445, file: !2270, line: 1377, column: 4)
!3572 = distinct !{!3572, !3565, !3573}
!3573 = !DILocation(line: 1839, column: 2, scope: !3421)
!3574 = !DILocation(line: 1392, column: 3, scope: !3448)
!3575 = !DILocation(line: 1395, column: 5, scope: !3448)
!3576 = !DILocation(line: 0, scope: !3448)
!3577 = !DILocation(line: 1409, column: 8, scope: !3448)
!3578 = !DILocation(line: 1414, column: 13, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1414, column: 7)
!3580 = !DILocation(line: 1414, column: 7, scope: !3448)
!3581 = !DILocation(line: 1415, column: 12, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3579, file: !2270, line: 1414, column: 25)
!3583 = !DILocation(line: 1417, column: 14, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3582, file: !2270, line: 1417, column: 8)
!3585 = !DILocation(line: 1417, column: 8, scope: !3582)
!3586 = !DILocation(line: 1418, column: 21, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3584, file: !2270, line: 1417, column: 19)
!3588 = !DILocation(line: 1419, column: 13, scope: !3587)
!3589 = !DILocation(line: 1420, column: 4, scope: !3587)
!3590 = !DILocation(line: 1421, column: 20, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3579, file: !2270, line: 1421, column: 14)
!3592 = !DILocation(line: 1421, column: 14, scope: !3579)
!3593 = !DILocation(line: 1431, column: 13, scope: !3508)
!3594 = !DILocation(line: 1431, column: 7, scope: !3448)
!3595 = !DILocation(line: 1432, column: 14, scope: !3507)
!3596 = !DILocation(line: 0, scope: !3507)
!3597 = !DILocation(line: 1434, column: 12, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3507, file: !2270, line: 1434, column: 8)
!3599 = !DILocation(line: 1434, column: 8, scope: !3507)
!3600 = !DILocation(line: 1435, column: 24, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3598, file: !2270, line: 1434, column: 17)
!3602 = !DILocation(line: 1436, column: 4, scope: !3601)
!3603 = !DILocation(line: 1439, column: 20, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3508, file: !2270, line: 1439, column: 14)
!3605 = !DILocation(line: 1439, column: 14, scope: !3508)
!3606 = !DILocation(line: 1469, column: 37, scope: !3448)
!3607 = !DILocation(line: 1448, column: 20, scope: !3448)
!3608 = !DILocation(line: 1449, column: 22, scope: !3448)
!3609 = !DILocation(line: 1471, column: 34, scope: !3448)
!3610 = !DILocation(line: 1478, column: 7, scope: !3448)
!3611 = !DILocation(line: 1479, column: 4, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !2270, line: 1478, column: 40)
!3613 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1478, column: 7)
!3614 = !DILocation(line: 1484, column: 19, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !2270, line: 1479, column: 24)
!3616 = !DILocation(line: 1484, column: 17, scope: !3615)
!3617 = !DILocation(line: 1485, column: 5, scope: !3615)
!3618 = !DILocation(line: 1492, column: 20, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !2270, line: 1491, column: 12)
!3620 = distinct !DILexicalBlock(scope: !3615, file: !2270, line: 1487, column: 9)
!3621 = !DILocation(line: 1492, column: 18, scope: !3619)
!3622 = !DILocation(line: 1494, column: 5, scope: !3615)
!3623 = !DILocation(line: 1497, column: 23, scope: !3615)
!3624 = !DILocation(line: 1496, column: 17, scope: !3615)
!3625 = !DILocation(line: 1498, column: 5, scope: !3615)
!3626 = !DILocation(line: 1501, column: 23, scope: !3615)
!3627 = !DILocation(line: 1500, column: 17, scope: !3615)
!3628 = !DILocation(line: 1502, column: 5, scope: !3615)
!3629 = !DILocation(line: 1513, column: 23, scope: !3615)
!3630 = !DILocation(line: 1513, column: 6, scope: !3615)
!3631 = !DILocation(line: 1512, column: 17, scope: !3615)
!3632 = !DILocation(line: 1514, column: 5, scope: !3615)
!3633 = !DILocation(line: 0, scope: !3615)
!3634 = !DILocation(line: 1516, column: 8, scope: !3612)
!3635 = !DILocation(line: 1517, column: 19, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !2270, line: 1516, column: 33)
!3637 = distinct !DILexicalBlock(scope: !3612, file: !2270, line: 1516, column: 8)
!3638 = !DILocation(line: 1517, column: 17, scope: !3636)
!3639 = !DILocation(line: 1518, column: 4, scope: !3636)
!3640 = !DILocation(line: 1519, column: 19, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !2270, line: 1518, column: 39)
!3642 = distinct !DILexicalBlock(scope: !3637, file: !2270, line: 1518, column: 15)
!3643 = !DILocation(line: 1519, column: 17, scope: !3641)
!3644 = !DILocation(line: 1520, column: 4, scope: !3641)
!3645 = !DILocation(line: 1522, column: 4, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !2270, line: 1521, column: 47)
!3647 = distinct !DILexicalBlock(scope: !3613, file: !2270, line: 1521, column: 14)
!3648 = !DILocation(line: 1527, column: 19, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3646, file: !2270, line: 1522, column: 24)
!3650 = !DILocation(line: 1527, column: 17, scope: !3649)
!3651 = !DILocation(line: 1528, column: 5, scope: !3649)
!3652 = !DILocation(line: 0, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3649, file: !2270, line: 1530, column: 9)
!3654 = !DILocation(line: 1540, column: 23, scope: !3649)
!3655 = !DILocation(line: 1539, column: 17, scope: !3649)
!3656 = !DILocation(line: 1542, column: 5, scope: !3649)
!3657 = !DILocation(line: 1545, column: 23, scope: !3649)
!3658 = !DILocation(line: 1544, column: 17, scope: !3649)
!3659 = !DILocation(line: 1547, column: 5, scope: !3649)
!3660 = !DILocation(line: 1551, column: 23, scope: !3649)
!3661 = !DILocation(line: 1551, column: 6, scope: !3649)
!3662 = !DILocation(line: 1550, column: 17, scope: !3649)
!3663 = !DILocation(line: 1552, column: 5, scope: !3649)
!3664 = !DILocation(line: 0, scope: !3649)
!3665 = !DILocation(line: 1554, column: 8, scope: !3646)
!3666 = !DILocation(line: 1555, column: 19, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !2270, line: 1554, column: 33)
!3668 = distinct !DILexicalBlock(scope: !3646, file: !2270, line: 1554, column: 8)
!3669 = !DILocation(line: 1555, column: 17, scope: !3667)
!3670 = !DILocation(line: 1556, column: 4, scope: !3667)
!3671 = !DILocation(line: 1557, column: 19, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !2270, line: 1556, column: 39)
!3673 = distinct !DILexicalBlock(scope: !3668, file: !2270, line: 1556, column: 15)
!3674 = !DILocation(line: 1557, column: 17, scope: !3672)
!3675 = !DILocation(line: 1558, column: 4, scope: !3672)
!3676 = !DILocation(line: 0, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !2270, line: 1560, column: 8)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !2270, line: 1559, column: 45)
!3679 = distinct !DILexicalBlock(scope: !3647, file: !2270, line: 1559, column: 14)
!3680 = !DILocation(line: 1566, column: 17, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !2270, line: 1565, column: 46)
!3682 = distinct !DILexicalBlock(scope: !3679, file: !2270, line: 1565, column: 14)
!3683 = !DILocation(line: 1566, column: 15, scope: !3681)
!3684 = !DILocation(line: 1567, column: 3, scope: !3681)
!3685 = !DILocation(line: 1574, column: 21, scope: !3514)
!3686 = !DILocation(line: 1575, column: 4, scope: !3512)
!3687 = !DILocation(line: 0, scope: !3512)
!3688 = !DILocation(line: 1575, column: 4, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3512, file: !2270, line: 1575, column: 4)
!3690 = !DILocation(line: 1582, column: 17, scope: !3448)
!3691 = !DILocation(line: 1582, column: 3, scope: !3448)
!3692 = !DILocation(line: 1584, column: 4, scope: !3516)
!3693 = !DILocation(line: 0, scope: !3516)
!3694 = !DILocation(line: 1584, column: 4, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3516, file: !2270, line: 1584, column: 4)
!3696 = !DILocation(line: 1587, column: 31, scope: !3519)
!3697 = !DILocation(line: 1591, column: 18, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3519, file: !2270, line: 1591, column: 8)
!3699 = !DILocation(line: 1591, column: 8, scope: !3519)
!3700 = !DILocation(line: 1592, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !2270, line: 1591, column: 24)
!3702 = !DILocation(line: 0, scope: !3519)
!3703 = !DILocation(line: 1593, column: 4, scope: !3701)
!3704 = !DILocation(line: 1594, column: 11, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3698, file: !2270, line: 1593, column: 11)
!3706 = !DILocation(line: 1604, column: 51, scope: !3517)
!3707 = !DILocation(line: 1604, column: 13, scope: !3517)
!3708 = !DILocation(line: 1604, column: 11, scope: !3517)
!3709 = !DILocation(line: 1606, column: 4, scope: !3517)
!3710 = !DILocation(line: 1609, column: 14, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3517, file: !2270, line: 1609, column: 8)
!3712 = !DILocation(line: 1609, column: 8, scope: !3517)
!3713 = !DILocation(line: 1619, column: 18, scope: !3517)
!3714 = !DILocation(line: 1620, column: 13, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3517, file: !2270, line: 1620, column: 8)
!3716 = !DILocation(line: 1620, column: 8, scope: !3517)
!3717 = !DILocation(line: 1622, column: 36, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3715, file: !2270, line: 1620, column: 18)
!3719 = !DILocation(line: 1622, column: 17, scope: !3718)
!3720 = !DILocation(line: 1623, column: 4, scope: !3718)
!3721 = !DILocation(line: 1632, column: 29, scope: !3517)
!3722 = !DILocation(line: 1632, column: 10, scope: !3517)
!3723 = !DILocation(line: 1632, column: 4, scope: !3517)
!3724 = !DILocation(line: 1407, column: 8, scope: !3448)
!3725 = !DILocation(line: 0, scope: !3517)
!3726 = !DILocation(line: 1634, column: 3, scope: !3517)
!3727 = !DILocation(line: 1640, column: 18, scope: !3522)
!3728 = !DILocation(line: 1640, column: 8, scope: !3517)
!3729 = !DILocation(line: 1729, column: 13, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1729, column: 7)
!3731 = !DILocation(line: 1641, column: 22, scope: !3521)
!3732 = !DILocation(line: 0, scope: !3521)
!3733 = !DILocation(line: 1646, column: 21, scope: !3521)
!3734 = !DILocation(line: 1649, column: 13, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3521, file: !2270, line: 1649, column: 9)
!3736 = !DILocation(line: 1649, column: 9, scope: !3521)
!3737 = !DILocation(line: 1650, column: 35, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3735, file: !2270, line: 1649, column: 34)
!3739 = !DILocation(line: 1650, column: 23, scope: !3738)
!3740 = !DILocation(line: 1651, column: 5, scope: !3738)
!3741 = !DILocation(line: 1660, column: 15, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3517, file: !2270, line: 1660, column: 8)
!3743 = !DILocation(line: 1660, column: 19, scope: !3742)
!3744 = !DILocation(line: 1660, column: 8, scope: !3517)
!3745 = !DILocation(line: 1661, column: 23, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3742, file: !2270, line: 1660, column: 28)
!3747 = !DILocation(line: 1661, column: 11, scope: !3746)
!3748 = !DILocation(line: 1665, column: 22, scope: !3746)
!3749 = !DILocation(line: 1666, column: 21, scope: !3746)
!3750 = !DILocation(line: 1668, column: 5, scope: !3746)
!3751 = !DILocation(line: 1677, column: 30, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !2270, line: 1676, column: 49)
!3753 = distinct !DILexicalBlock(scope: !3517, file: !2270, line: 1676, column: 8)
!3754 = !DILocation(line: 1677, column: 5, scope: !3752)
!3755 = !DILocation(line: 1680, column: 4, scope: !3517)
!3756 = !DILocation(line: 0, scope: !3698)
!3757 = !DILocation(line: 1597, column: 14, scope: !3519)
!3758 = !DILocation(line: 1699, column: 11, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1699, column: 7)
!3760 = !DILocation(line: 1699, column: 7, scope: !3448)
!3761 = !DILocation(line: 1725, column: 7, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1725, column: 7)
!3763 = !DILocation(line: 1725, column: 12, scope: !3762)
!3764 = !DILocation(line: 1747, column: 13, scope: !3529)
!3765 = !DILocation(line: 1747, column: 7, scope: !3448)
!3766 = !DILocation(line: 1722, column: 24, scope: !3448)
!3767 = !DILocation(line: 1725, column: 7, scope: !3448)
!3768 = !DILocation(line: 1729, column: 7, scope: !3448)
!3769 = !DILocation(line: 1736, column: 13, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3448, file: !2270, line: 1736, column: 7)
!3771 = !DILocation(line: 1735, column: 19, scope: !3448)
!3772 = !DILocation(line: 1736, column: 7, scope: !3448)
!3773 = !DILocation(line: 1748, column: 10, scope: !3528)
!3774 = !DILocation(line: 1750, column: 15, scope: !3527)
!3775 = !DILocation(line: 1750, column: 8, scope: !3528)
!3776 = !DILocation(line: 0, scope: !3526)
!3777 = !DILocation(line: 1756, column: 15, scope: !3535)
!3778 = !DILocation(line: 1756, column: 9, scope: !3526)
!3779 = !DILocation(line: 1758, column: 7, scope: !3531)
!3780 = !DILocation(line: 0, scope: !3531)
!3781 = !DILocation(line: 1758, column: 7, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3531, file: !2270, line: 1758, column: 7)
!3783 = !DILocation(line: 1764, column: 5, scope: !3526)
!3784 = !DILocation(line: 0, scope: !3528)
!3785 = !DILocation(line: 1764, column: 20, scope: !3526)
!3786 = !DILocation(line: 1764, column: 17, scope: !3526)
!3787 = !DILocation(line: 1765, column: 6, scope: !3537)
!3788 = !DILocation(line: 0, scope: !3537)
!3789 = !DILocation(line: 1765, column: 6, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3537, file: !2270, line: 1765, column: 6)
!3791 = distinct !{!3791, !3783, !3792}
!3792 = !DILocation(line: 1766, column: 5, scope: !3526)
!3793 = !DILocation(line: 1773, column: 12, scope: !3542)
!3794 = !DILocation(line: 1773, column: 7, scope: !3448)
!3795 = !DILocation(line: 1773, column: 7, scope: !3542)
!3796 = !DILocation(line: 1774, column: 4, scope: !3540)
!3797 = !DILocation(line: 0, scope: !3540)
!3798 = !DILocation(line: 1774, column: 4, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3540, file: !2270, line: 1774, column: 4)
!3800 = !DILocation(line: 1818, column: 8, scope: !3546)
!3801 = !DILocation(line: 1818, column: 27, scope: !3546)
!3802 = !DILocation(line: 1818, column: 25, scope: !3546)
!3803 = !DILocation(line: 1818, column: 8, scope: !3547)
!3804 = !DILocation(line: 1819, column: 5, scope: !3544)
!3805 = !DILocation(line: 0, scope: !3544)
!3806 = !DILocation(line: 1819, column: 5, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3544, file: !2270, line: 1819, column: 5)
!3808 = !DILocation(line: 1822, column: 14, scope: !3552)
!3809 = !DILocation(line: 1822, column: 8, scope: !3547)
!3810 = !DILocation(line: 1823, column: 5, scope: !3550)
!3811 = !DILocation(line: 0, scope: !3550)
!3812 = !DILocation(line: 1823, column: 5, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3550, file: !2270, line: 1823, column: 5)
!3814 = !DILocation(line: 1826, column: 20, scope: !3547)
!3815 = !DILocation(line: 1827, column: 4, scope: !3547)
!3816 = !DILocation(line: 0, scope: !3547)
!3817 = !DILocation(line: 1827, column: 21, scope: !3547)
!3818 = !DILocation(line: 1827, column: 18, scope: !3547)
!3819 = !DILocation(line: 1828, column: 5, scope: !3554)
!3820 = !DILocation(line: 0, scope: !3554)
!3821 = !DILocation(line: 1828, column: 5, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3554, file: !2270, line: 1828, column: 5)
!3823 = distinct !{!3823, !3815, !3824}
!3824 = !DILocation(line: 1829, column: 4, scope: !3547)
!3825 = !DILocation(line: 1831, column: 4, scope: !3557)
!3826 = !DILocation(line: 0, scope: !3557)
!3827 = !DILocation(line: 1831, column: 4, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3557, file: !2270, line: 1831, column: 4)
!3829 = !DILocation(line: 1835, column: 16, scope: !3448)
!3830 = !DILocation(line: 1835, column: 3, scope: !3448)
!3831 = !DILocation(line: 1836, column: 4, scope: !3559)
!3832 = !DILocation(line: 0, scope: !3559)
!3833 = !DILocation(line: 1836, column: 4, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3559, file: !2270, line: 1836, column: 4)
!3835 = !DILocation(line: 1837, column: 4, scope: !3560)
!3836 = distinct !{!3836, !3830, !3837}
!3837 = !DILocation(line: 1838, column: 3, scope: !3448)
!3838 = !DILocation(line: 1844, column: 1, scope: !3421)
!3839 = distinct !DISubprogram(name: "extract_conversion", scope: !2270, file: !2270, line: 642, type: !3840, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3842)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!144, !3496, !144}
!3842 = !{!3843, !3844}
!3843 = !DILocalVariable(name: "conv", arg: 1, scope: !3839, file: !2270, line: 642, type: !3496)
!3844 = !DILocalVariable(name: "sp", arg: 2, scope: !3839, file: !2270, line: 643, type: !144)
!3845 = !DILocation(line: 0, scope: !3839)
!3846 = !DILocation(line: 645, column: 10, scope: !3839)
!3847 = !DILocation(line: 653, column: 2, scope: !3839)
!3848 = !DILocation(line: 654, column: 6, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3839, file: !2270, line: 654, column: 6)
!3850 = !DILocation(line: 654, column: 10, scope: !3849)
!3851 = !DILocation(line: 654, column: 6, scope: !3839)
!3852 = !DILocation(line: 655, column: 24, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3849, file: !2270, line: 654, column: 18)
!3854 = !DILocation(line: 655, column: 19, scope: !3853)
!3855 = !DILocation(line: 656, column: 3, scope: !3853)
!3856 = !DILocation(line: 659, column: 7, scope: !3839)
!3857 = !DILocation(line: 660, column: 7, scope: !3839)
!3858 = !DILocation(line: 661, column: 7, scope: !3839)
!3859 = !DILocation(line: 662, column: 7, scope: !3839)
!3860 = !DILocation(line: 663, column: 7, scope: !3839)
!3861 = !DILocation(line: 665, column: 2, scope: !3839)
!3862 = !DILocation(line: 666, column: 1, scope: !3839)
!3863 = distinct !DISubprogram(name: "outs", scope: !2270, file: !2270, line: 1319, type: !3864, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3866)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!103, !3153, !102, !144, !144}
!3866 = !{!3867, !3868, !3869, !3870, !3871, !3872}
!3867 = !DILocalVariable(name: "out", arg: 1, scope: !3863, file: !2270, line: 1319, type: !3153)
!3868 = !DILocalVariable(name: "ctx", arg: 2, scope: !3863, file: !2270, line: 1320, type: !102)
!3869 = !DILocalVariable(name: "sp", arg: 3, scope: !3863, file: !2270, line: 1321, type: !144)
!3870 = !DILocalVariable(name: "ep", arg: 4, scope: !3863, file: !2270, line: 1322, type: !144)
!3871 = !DILocalVariable(name: "count", scope: !3863, file: !2270, line: 1324, type: !200)
!3872 = !DILocalVariable(name: "rc", scope: !3873, file: !2270, line: 1327, type: !103)
!3873 = distinct !DILexicalBlock(scope: !3863, file: !2270, line: 1326, column: 45)
!3874 = !DILocation(line: 0, scope: !3863)
!3875 = !DILocation(line: 1326, column: 2, scope: !3863)
!3876 = !DILocation(line: 1324, column: 9, scope: !3863)
!3877 = !DILocation(line: 1326, column: 13, scope: !3863)
!3878 = !DILocation(line: 1326, column: 19, scope: !3863)
!3879 = !DILocation(line: 1327, column: 21, scope: !3873)
!3880 = !DILocation(line: 1326, column: 36, scope: !3863)
!3881 = !DILocation(line: 1326, column: 39, scope: !3863)
!3882 = !DILocation(line: 1327, column: 24, scope: !3873)
!3883 = !DILocation(line: 1327, column: 16, scope: !3873)
!3884 = !DILocation(line: 1327, column: 12, scope: !3873)
!3885 = !DILocation(line: 0, scope: !3873)
!3886 = !DILocation(line: 1329, column: 10, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3873, file: !2270, line: 1329, column: 7)
!3888 = !DILocation(line: 1329, column: 7, scope: !3873)
!3889 = distinct !{!3889, !3875, !3890}
!3890 = !DILocation(line: 1333, column: 2, scope: !3863)
!3891 = !DILocation(line: 1336, column: 1, scope: !3863)
!3892 = distinct !DISubprogram(name: "encode_uint", scope: !2270, file: !2270, line: 788, type: !3893, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3895)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!977, !2292, !3496, !977, !144}
!3895 = !{!3896, !3897, !3898, !3899, !3900, !3901, !3903, !3904}
!3896 = !DILocalVariable(name: "value", arg: 1, scope: !3892, file: !2270, line: 788, type: !2292)
!3897 = !DILocalVariable(name: "conv", arg: 2, scope: !3892, file: !2270, line: 789, type: !3496)
!3898 = !DILocalVariable(name: "bps", arg: 3, scope: !3892, file: !2270, line: 790, type: !977)
!3899 = !DILocalVariable(name: "bpe", arg: 4, scope: !3892, file: !2270, line: 791, type: !144)
!3900 = !DILocalVariable(name: "upcase", scope: !3892, file: !2270, line: 793, type: !157)
!3901 = !DILocalVariable(name: "radix", scope: !3892, file: !2270, line: 794, type: !3902)
!3902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3903 = !DILocalVariable(name: "bp", scope: !3892, file: !2270, line: 795, type: !977)
!3904 = !DILocalVariable(name: "lsv", scope: !3905, file: !2270, line: 798, type: !32)
!3905 = distinct !DILexicalBlock(scope: !3892, file: !2270, line: 797, column: 5)
!3906 = !DILocation(line: 0, scope: !3892)
!3907 = !DILocation(line: 793, column: 35, scope: !3892)
!3908 = !DILocation(line: 793, column: 24, scope: !3892)
!3909 = !DILocation(line: 793, column: 16, scope: !3892)
!3910 = !DILocation(line: 794, column: 29, scope: !3892)
!3911 = !DILocation(line: 795, column: 24, scope: !3892)
!3912 = !DILocation(line: 795, column: 17, scope: !3892)
!3913 = !DILocation(line: 797, column: 2, scope: !3892)
!3914 = !DILocation(line: 802, column: 9, scope: !3905)
!3915 = !DILocation(line: 798, column: 22, scope: !3905)
!3916 = !DILocation(line: 0, scope: !3905)
!3917 = !DILocation(line: 800, column: 16, scope: !3905)
!3918 = !DILocation(line: 800, column: 11, scope: !3905)
!3919 = !DILocation(line: 800, column: 4, scope: !3905)
!3920 = !DILocation(line: 800, column: 9, scope: !3905)
!3921 = !DILocation(line: 803, column: 18, scope: !3892)
!3922 = !DILocation(line: 803, column: 24, scope: !3892)
!3923 = !DILocation(line: 803, column: 2, scope: !3905)
!3924 = distinct !{!3924, !3913, !3925}
!3925 = !DILocation(line: 803, column: 37, scope: !3892)
!3926 = !DILocation(line: 808, column: 12, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3892, file: !2270, line: 808, column: 6)
!3928 = !DILocation(line: 808, column: 6, scope: !3892)
!3929 = !DILocation(line: 809, column: 7, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3927, file: !2270, line: 808, column: 23)
!3931 = !DILocation(line: 813, column: 3, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !2270, line: 811, column: 27)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !2270, line: 811, column: 14)
!3934 = distinct !DILexicalBlock(scope: !3930, file: !2270, line: 809, column: 7)
!3935 = !DILocation(line: 0, scope: !3934)
!3936 = !DILocation(line: 818, column: 2, scope: !3892)
!3937 = distinct !DISubprogram(name: "store_count", scope: !2270, file: !2270, line: 1280, type: !3938, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3942)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{null, !3940, !102, !103}
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 32)
!3941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3463)
!3942 = !{!3943, !3944, !3945}
!3943 = !DILocalVariable(name: "conv", arg: 1, scope: !3937, file: !2270, line: 1280, type: !3940)
!3944 = !DILocalVariable(name: "dp", arg: 2, scope: !3937, file: !2270, line: 1281, type: !102)
!3945 = !DILocalVariable(name: "count", arg: 3, scope: !3937, file: !2270, line: 1282, type: !103)
!3946 = !DILocation(line: 0, scope: !3937)
!3947 = !DILocation(line: 1284, column: 38, scope: !3937)
!3948 = !DILocation(line: 1284, column: 2, scope: !3937)
!3949 = !DILocation(line: 1286, column: 4, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3937, file: !2270, line: 1284, column: 50)
!3951 = !DILocation(line: 1286, column: 14, scope: !3950)
!3952 = !DILocation(line: 1287, column: 3, scope: !3950)
!3953 = !DILocation(line: 1289, column: 24, scope: !3950)
!3954 = !DILocation(line: 1289, column: 22, scope: !3950)
!3955 = !DILocation(line: 1290, column: 3, scope: !3950)
!3956 = !DILocation(line: 1292, column: 18, scope: !3950)
!3957 = !DILocation(line: 1292, column: 4, scope: !3950)
!3958 = !DILocation(line: 1292, column: 16, scope: !3950)
!3959 = !DILocation(line: 1293, column: 3, scope: !3950)
!3960 = !DILocation(line: 1295, column: 4, scope: !3950)
!3961 = !DILocation(line: 1295, column: 15, scope: !3950)
!3962 = !DILocation(line: 1296, column: 3, scope: !3950)
!3963 = !DILocation(line: 1298, column: 22, scope: !3950)
!3964 = !DILocation(line: 1298, column: 4, scope: !3950)
!3965 = !DILocation(line: 1298, column: 20, scope: !3950)
!3966 = !DILocation(line: 1299, column: 3, scope: !3950)
!3967 = !DILocation(line: 1301, column: 21, scope: !3950)
!3968 = !DILocation(line: 1301, column: 4, scope: !3950)
!3969 = !DILocation(line: 1301, column: 19, scope: !3950)
!3970 = !DILocation(line: 1302, column: 3, scope: !3950)
!3971 = !DILocation(line: 1304, column: 4, scope: !3950)
!3972 = !DILocation(line: 1304, column: 17, scope: !3950)
!3973 = !DILocation(line: 1305, column: 3, scope: !3950)
!3974 = !DILocation(line: 1307, column: 4, scope: !3950)
!3975 = !DILocation(line: 1307, column: 20, scope: !3950)
!3976 = !DILocation(line: 1308, column: 3, scope: !3950)
!3977 = !DILocation(line: 1316, column: 1, scope: !3937)
!3978 = distinct !DISubprogram(name: "isupper", scope: !3979, file: !3979, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3980)
!3979 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3980 = !{!3981}
!3981 = !DILocalVariable(name: "a", arg: 1, scope: !3978, file: !3979, line: 16, type: !103)
!3982 = !DILocation(line: 0, scope: !3978)
!3983 = !DILocation(line: 18, column: 29, scope: !3978)
!3984 = !DILocation(line: 18, column: 45, scope: !3978)
!3985 = !DILocation(line: 18, column: 2, scope: !3978)
!3986 = distinct !DISubprogram(name: "conversion_radix", scope: !2270, file: !2270, line: 761, type: !3987, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3989)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!200, !146}
!3989 = !{!3990}
!3990 = !DILocalVariable(name: "specifier", arg: 1, scope: !3986, file: !2270, line: 761, type: !146)
!3991 = !DILocation(line: 0, scope: !3986)
!3992 = !DILocation(line: 763, column: 2, scope: !3986)
!3993 = !DILocation(line: 770, column: 3, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3986, file: !2270, line: 763, column: 21)
!3995 = !DILocation(line: 774, column: 3, scope: !3994)
!3996 = !DILocation(line: 0, scope: !3994)
!3997 = !DILocation(line: 776, column: 1, scope: !3986)
!3998 = distinct !DISubprogram(name: "extract_flags", scope: !2270, file: !2270, line: 339, type: !3840, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !3999)
!3999 = !{!4000, !4001, !4002}
!4000 = !DILocalVariable(name: "conv", arg: 1, scope: !3998, file: !2270, line: 339, type: !3496)
!4001 = !DILocalVariable(name: "sp", arg: 2, scope: !3998, file: !2270, line: 340, type: !144)
!4002 = !DILocalVariable(name: "loop", scope: !3998, file: !2270, line: 342, type: !157)
!4003 = !DILocation(line: 0, scope: !3998)
!4004 = !DILocation(line: 344, column: 2, scope: !3998)
!4005 = !DILocation(line: 345, column: 11, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3998, file: !2270, line: 344, column: 5)
!4007 = !DILocation(line: 345, column: 3, scope: !4006)
!4008 = !DILocation(line: 351, column: 4, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4006, file: !2270, line: 345, column: 16)
!4010 = !DILocation(line: 354, column: 4, scope: !4009)
!4011 = !DILocation(line: 357, column: 4, scope: !4009)
!4012 = !DILocation(line: 360, column: 4, scope: !4009)
!4013 = !DILocation(line: 0, scope: !4009)
!4014 = !DILocation(line: 370, column: 12, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3998, file: !2270, line: 370, column: 6)
!4016 = !DILocation(line: 370, column: 22, scope: !4015)
!4017 = !DILocation(line: 371, column: 19, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4015, file: !2270, line: 370, column: 42)
!4019 = !DILocation(line: 372, column: 2, scope: !4018)
!4020 = !DILocation(line: 376, column: 2, scope: !3998)
!4021 = distinct !DISubprogram(name: "extract_width", scope: !2270, file: !2270, line: 388, type: !3840, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !4022)
!4022 = !{!4023, !4024, !4025, !4026}
!4023 = !DILocalVariable(name: "conv", arg: 1, scope: !4021, file: !2270, line: 388, type: !3496)
!4024 = !DILocalVariable(name: "sp", arg: 2, scope: !4021, file: !2270, line: 389, type: !144)
!4025 = !DILocalVariable(name: "wp", scope: !4021, file: !2270, line: 398, type: !144)
!4026 = !DILocalVariable(name: "width", scope: !4021, file: !2270, line: 399, type: !200)
!4027 = !DILocation(line: 0, scope: !4021)
!4028 = !DILocation(line: 391, column: 8, scope: !4021)
!4029 = !DILocation(line: 391, column: 22, scope: !4021)
!4030 = !DILocation(line: 393, column: 6, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4021, file: !2270, line: 393, column: 6)
!4032 = !DILocation(line: 393, column: 10, scope: !4031)
!4033 = !DILocation(line: 393, column: 6, scope: !4021)
!4034 = !DILocation(line: 394, column: 20, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4031, file: !2270, line: 393, column: 18)
!4036 = !DILocation(line: 395, column: 10, scope: !4035)
!4037 = !DILocation(line: 395, column: 3, scope: !4035)
!4038 = !DILocation(line: 399, column: 17, scope: !4021)
!4039 = !DILocation(line: 401, column: 6, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4021, file: !2270, line: 401, column: 6)
!4041 = !DILocation(line: 401, column: 9, scope: !4040)
!4042 = !DILocation(line: 401, column: 6, scope: !4021)
!4043 = !DILocation(line: 402, column: 23, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4040, file: !2270, line: 401, column: 16)
!4045 = !DILocation(line: 403, column: 9, scope: !4044)
!4046 = !DILocation(line: 403, column: 21, scope: !4044)
!4047 = !DILocation(line: 405, column: 11, scope: !4044)
!4048 = !DILocation(line: 404, column: 21, scope: !4044)
!4049 = !DILocation(line: 406, column: 2, scope: !4044)
!4050 = !DILocation(line: 409, column: 1, scope: !4021)
!4051 = distinct !DISubprogram(name: "extract_prec", scope: !2270, file: !2270, line: 420, type: !3840, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !4052)
!4052 = !{!4053, !4054, !4055}
!4053 = !DILocalVariable(name: "conv", arg: 1, scope: !4051, file: !2270, line: 420, type: !3496)
!4054 = !DILocalVariable(name: "sp", arg: 2, scope: !4051, file: !2270, line: 421, type: !144)
!4055 = !DILocalVariable(name: "prec", scope: !4051, file: !2270, line: 435, type: !200)
!4056 = !DILocation(line: 0, scope: !4051)
!4057 = !DILocation(line: 423, column: 24, scope: !4051)
!4058 = !DILocation(line: 423, column: 28, scope: !4051)
!4059 = !DILocation(line: 423, column: 8, scope: !4051)
!4060 = !DILocation(line: 423, column: 21, scope: !4051)
!4061 = !DILocation(line: 425, column: 6, scope: !4051)
!4062 = !DILocation(line: 428, column: 2, scope: !4051)
!4063 = !DILocation(line: 430, column: 6, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4051, file: !2270, line: 430, column: 6)
!4065 = !DILocation(line: 430, column: 10, scope: !4064)
!4066 = !DILocation(line: 430, column: 6, scope: !4051)
!4067 = !DILocation(line: 431, column: 19, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4064, file: !2270, line: 430, column: 18)
!4069 = !DILocation(line: 432, column: 10, scope: !4068)
!4070 = !DILocation(line: 432, column: 3, scope: !4068)
!4071 = !DILocation(line: 435, column: 16, scope: !4051)
!4072 = !DILocation(line: 437, column: 8, scope: !4051)
!4073 = !DILocation(line: 437, column: 19, scope: !4051)
!4074 = !DILocation(line: 439, column: 10, scope: !4051)
!4075 = !DILocation(line: 438, column: 20, scope: !4051)
!4076 = !DILocation(line: 441, column: 9, scope: !4051)
!4077 = !DILocation(line: 442, column: 1, scope: !4051)
!4078 = distinct !DISubprogram(name: "extract_length", scope: !2270, file: !2270, line: 453, type: !3840, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !4079)
!4079 = !{!4080, !4081}
!4080 = !DILocalVariable(name: "conv", arg: 1, scope: !4078, file: !2270, line: 453, type: !3496)
!4081 = !DILocalVariable(name: "sp", arg: 2, scope: !4078, file: !2270, line: 454, type: !144)
!4082 = !DILocation(line: 0, scope: !4078)
!4083 = !DILocation(line: 456, column: 10, scope: !4078)
!4084 = !DILocation(line: 456, column: 2, scope: !4078)
!4085 = !DILocation(line: 458, column: 8, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !2270, line: 458, column: 7)
!4087 = distinct !DILexicalBlock(scope: !4078, file: !2270, line: 456, column: 15)
!4088 = !DILocation(line: 458, column: 7, scope: !4086)
!4089 = !DILocation(line: 458, column: 13, scope: !4086)
!4090 = !DILocation(line: 0, scope: !4086)
!4091 = !DILocation(line: 458, column: 7, scope: !4087)
!4092 = !DILocation(line: 459, column: 21, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4086, file: !2270, line: 458, column: 21)
!4094 = !DILocation(line: 460, column: 4, scope: !4093)
!4095 = !DILocation(line: 461, column: 3, scope: !4093)
!4096 = !DILocation(line: 462, column: 21, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4086, file: !2270, line: 461, column: 10)
!4098 = !DILocation(line: 466, column: 8, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4087, file: !2270, line: 466, column: 7)
!4100 = !DILocation(line: 466, column: 7, scope: !4099)
!4101 = !DILocation(line: 466, column: 13, scope: !4099)
!4102 = !DILocation(line: 0, scope: !4099)
!4103 = !DILocation(line: 466, column: 7, scope: !4087)
!4104 = !DILocation(line: 467, column: 21, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4099, file: !2270, line: 466, column: 21)
!4106 = !DILocation(line: 468, column: 4, scope: !4105)
!4107 = !DILocation(line: 469, column: 3, scope: !4105)
!4108 = !DILocation(line: 470, column: 21, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4099, file: !2270, line: 469, column: 10)
!4110 = !DILocation(line: 474, column: 9, scope: !4087)
!4111 = !DILocation(line: 474, column: 20, scope: !4087)
!4112 = !DILocation(line: 475, column: 3, scope: !4087)
!4113 = !DILocation(line: 476, column: 3, scope: !4087)
!4114 = !DILocation(line: 478, column: 9, scope: !4087)
!4115 = !DILocation(line: 478, column: 20, scope: !4087)
!4116 = !DILocation(line: 479, column: 3, scope: !4087)
!4117 = !DILocation(line: 480, column: 3, scope: !4087)
!4118 = !DILocation(line: 482, column: 9, scope: !4087)
!4119 = !DILocation(line: 482, column: 20, scope: !4087)
!4120 = !DILocation(line: 483, column: 3, scope: !4087)
!4121 = !DILocation(line: 484, column: 3, scope: !4087)
!4122 = !DILocation(line: 486, column: 9, scope: !4087)
!4123 = !DILocation(line: 486, column: 20, scope: !4087)
!4124 = !DILocation(line: 487, column: 3, scope: !4087)
!4125 = !DILocation(line: 492, column: 21, scope: !4087)
!4126 = !DILocation(line: 493, column: 3, scope: !4087)
!4127 = !DILocation(line: 495, column: 9, scope: !4087)
!4128 = !DILocation(line: 495, column: 20, scope: !4087)
!4129 = !DILocation(line: 496, column: 3, scope: !4087)
!4130 = !DILocation(line: 498, column: 2, scope: !4078)
!4131 = distinct !DISubprogram(name: "extract_specifier", scope: !2270, file: !2270, line: 513, type: !3840, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !4132)
!4132 = !{!4133, !4134, !4135, !4136}
!4133 = !DILocalVariable(name: "conv", arg: 1, scope: !4131, file: !2270, line: 513, type: !3496)
!4134 = !DILocalVariable(name: "sp", arg: 2, scope: !4131, file: !2270, line: 514, type: !144)
!4135 = !DILocalVariable(name: "unsupported", scope: !4131, file: !2270, line: 516, type: !157)
!4136 = !DILabel(scope: !4137, name: "int_conv", file: !2270, line: 526)
!4137 = distinct !DILexicalBlock(scope: !4131, file: !2270, line: 520, column: 27)
!4138 = !DILocation(line: 0, scope: !4131)
!4139 = !DILocation(line: 518, column: 20, scope: !4131)
!4140 = !DILocation(line: 518, column: 8, scope: !4131)
!4141 = !DILocation(line: 518, column: 18, scope: !4131)
!4142 = !DILocation(line: 520, column: 2, scope: !4131)
!4143 = !DILocation(line: 525, column: 3, scope: !4137)
!4144 = !DILocation(line: 0, scope: !4137)
!4145 = !DILocation(line: 526, column: 1, scope: !4137)
!4146 = !DILocation(line: 528, column: 24, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4137, file: !2270, line: 528, column: 7)
!4148 = !DILocation(line: 528, column: 7, scope: !4137)
!4149 = !DILocation(line: 535, column: 23, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4137, file: !2270, line: 535, column: 7)
!4151 = !DILocation(line: 535, column: 7, scope: !4137)
!4152 = !DILocation(line: 536, column: 36, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4150, file: !2270, line: 535, column: 31)
!4154 = !DILocation(line: 537, column: 3, scope: !4153)
!4155 = !DILocation(line: 570, column: 9, scope: !4137)
!4156 = !DILocation(line: 570, column: 23, scope: !4137)
!4157 = !DILocation(line: 575, column: 4, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !2270, line: 573, column: 48)
!4159 = distinct !DILexicalBlock(scope: !4137, file: !2270, line: 573, column: 7)
!4160 = !DILocation(line: 603, column: 9, scope: !4137)
!4161 = !DILocation(line: 603, column: 23, scope: !4137)
!4162 = !DILocation(line: 605, column: 24, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4137, file: !2270, line: 605, column: 7)
!4164 = !DILocation(line: 605, column: 7, scope: !4137)
!4165 = !DILocation(line: 612, column: 9, scope: !4137)
!4166 = !DILocation(line: 612, column: 23, scope: !4137)
!4167 = !DILocation(line: 619, column: 24, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4137, file: !2270, line: 619, column: 7)
!4169 = !DILocation(line: 619, column: 7, scope: !4137)
!4170 = !DILocation(line: 625, column: 9, scope: !4137)
!4171 = !DILocation(line: 625, column: 17, scope: !4137)
!4172 = !DILocation(line: 626, column: 3, scope: !4137)
!4173 = !DILocation(line: 629, column: 20, scope: !4131)
!4174 = !DILocation(line: 629, column: 8, scope: !4131)
!4175 = !DILocation(line: 518, column: 23, scope: !4131)
!4176 = !DILocation(line: 631, column: 2, scope: !4131)
!4177 = distinct !DISubprogram(name: "extract_decimal", scope: !2270, file: !2270, line: 318, type: !4178, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !4181)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!200, !4180}
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!4181 = !{!4182, !4183, !4184}
!4182 = !DILocalVariable(name: "str", arg: 1, scope: !4177, file: !2270, line: 318, type: !4180)
!4183 = !DILocalVariable(name: "sp", scope: !4177, file: !2270, line: 320, type: !144)
!4184 = !DILocalVariable(name: "val", scope: !4177, file: !2270, line: 321, type: !200)
!4185 = !DILocation(line: 0, scope: !4177)
!4186 = !DILocation(line: 320, column: 19, scope: !4177)
!4187 = !DILocation(line: 323, column: 37, scope: !4177)
!4188 = !DILocation(line: 323, column: 17, scope: !4177)
!4189 = !DILocation(line: 323, column: 9, scope: !4177)
!4190 = !DILocation(line: 323, column: 2, scope: !4177)
!4191 = !DILocation(line: 324, column: 13, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4177, file: !2270, line: 323, column: 43)
!4193 = !DILocation(line: 324, column: 24, scope: !4192)
!4194 = !DILocation(line: 324, column: 19, scope: !4192)
!4195 = !DILocation(line: 324, column: 27, scope: !4192)
!4196 = distinct !{!4196, !4190, !4197}
!4197 = !DILocation(line: 325, column: 2, scope: !4177)
!4198 = !DILocation(line: 326, column: 7, scope: !4177)
!4199 = !DILocation(line: 327, column: 2, scope: !4177)
!4200 = distinct !DISubprogram(name: "isdigit", scope: !3979, file: !3979, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !4201)
!4201 = !{!4202}
!4202 = !DILocalVariable(name: "a", arg: 1, scope: !4200, file: !3979, line: 43, type: !103)
!4203 = !DILocation(line: 0, scope: !4200)
!4204 = !DILocation(line: 45, column: 29, scope: !4200)
!4205 = !DILocation(line: 45, column: 45, scope: !4200)
!4206 = !DILocation(line: 45, column: 2, scope: !4200)
!4207 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4208, file: !4208, line: 9, type: !2843, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2304, retainedNodes: !322)
!4208 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!4209 = !DILocation(line: 11, column: 1, scope: !4207)
!4210 = !{i64 2147561617, i64 2147561660, i64 2147561700}
!4211 = !DILocation(line: 12, column: 1, scope: !4207)
!4212 = !{i64 2147565844, i64 2147565887, i64 2147565927}
!4213 = !DILocation(line: 13, column: 1, scope: !4207)
!4214 = !{i64 2147566053, i64 2147566096, i64 2147566136}
!4215 = !DILocation(line: 14, column: 1, scope: !4207)
!4216 = !{i64 2147566222, i64 2147566265, i64 2147566305}
!4217 = !DILocation(line: 15, column: 1, scope: !4207)
!4218 = !{i64 2147566385, i64 2147566428, i64 2147566468}
!4219 = !DILocation(line: 16, column: 1, scope: !4207)
!4220 = !{i64 2147566569, i64 2147566612, i64 2147566652}
!4221 = !DILocation(line: 17, column: 1, scope: !4207)
!4222 = !{i64 2147566748, i64 2147566791, i64 2147566831}
!4223 = !DILocation(line: 18, column: 1, scope: !4207)
!4224 = !{i64 2147566990, i64 2147567033, i64 2147567073}
!4225 = !DILocation(line: 19, column: 1, scope: !4207)
!4226 = !{i64 2147567225, i64 2147567268, i64 2147567308}
!4227 = !DILocation(line: 20, column: 1, scope: !4207)
!4228 = !{i64 2147567412, i64 2147567455, i64 2147567495}
!4229 = !DILocation(line: 21, column: 1, scope: !4207)
!4230 = !{i64 2147567628, i64 2147567671, i64 2147567711}
!4231 = !DILocation(line: 22, column: 1, scope: !4207)
!4232 = !{i64 2147567831, i64 2147567874, i64 2147567914}
!4233 = !DILocation(line: 23, column: 1, scope: !4207)
!4234 = !{i64 2147568034, i64 2147568077, i64 2147568117}
!4235 = !DILocation(line: 24, column: 1, scope: !4207)
!4236 = !{i64 2147568209, i64 2147568252, i64 2147568292}
!4237 = !DILocation(line: 25, column: 1, scope: !4207)
!4238 = !{i64 2147568417, i64 2147568460, i64 2147568500}
!4239 = !DILocation(line: 26, column: 1, scope: !4207)
!4240 = !{i64 2147568621, i64 2147568664, i64 2147568704}
!4241 = !DILocation(line: 27, column: 1, scope: !4207)
!4242 = !{i64 2147568814, i64 2147568857, i64 2147568897}
!4243 = !DILocation(line: 28, column: 1, scope: !4207)
!4244 = !{i64 2147569016, i64 2147569059, i64 2147569099}
!4245 = !DILocation(line: 29, column: 1, scope: !4207)
!4246 = !{i64 2147569243, i64 2147569286, i64 2147569326}
!4247 = !DILocation(line: 30, column: 1, scope: !4207)
!4248 = !{i64 2147569445, i64 2147569488, i64 2147569528}
!4249 = !DILocation(line: 31, column: 1, scope: !4207)
!4250 = !{i64 2147569660, i64 2147569703, i64 2147569743}
!4251 = !DILocation(line: 32, column: 1, scope: !4207)
!4252 = !{i64 2147569832, i64 2147569875, i64 2147569915}
!4253 = !DILocation(line: 33, column: 1, scope: !4207)
!4254 = !{i64 2147570034, i64 2147570077, i64 2147570117}
!4255 = !DILocation(line: 34, column: 1, scope: !4207)
!4256 = !{i64 2147570260, i64 2147570303, i64 2147570343}
!4257 = !DILocation(line: 35, column: 1, scope: !4207)
!4258 = !{i64 2147570459, i64 2147570502, i64 2147570542}
!4259 = !DILocation(line: 36, column: 1, scope: !4207)
!4260 = !{i64 2147570634, i64 2147570677, i64 2147570717}
!4261 = !DILocation(line: 37, column: 1, scope: !4207)
!4262 = !{i64 2147570887, i64 2147570930, i64 2147570970}
!4263 = !DILocation(line: 38, column: 1, scope: !4207)
!4264 = !{i64 2147571128, i64 2147571171, i64 2147571211}
!4265 = !DILocation(line: 39, column: 1, scope: !4207)
!4266 = !{i64 2147571363, i64 2147571406, i64 2147571446}
!4267 = !DILocation(line: 40, column: 1, scope: !4207)
!4268 = !{i64 2147571595, i64 2147571638, i64 2147571678}
!4269 = !DILocation(line: 41, column: 1, scope: !4207)
!4270 = !{i64 2147571821, i64 2147571864, i64 2147571904}
!4271 = !DILocation(line: 42, column: 1, scope: !4207)
!4272 = !{i64 2147572047, i64 2147572090, i64 2147572130}
!4273 = !DILocation(line: 43, column: 1, scope: !4207)
!4274 = !{i64 2147572273, i64 2147572316, i64 2147572356}
!4275 = !DILocation(line: 44, column: 1, scope: !4207)
!4276 = !{i64 2147572508, i64 2147572551, i64 2147572591}
!4277 = !DILocation(line: 45, column: 1, scope: !4207)
!4278 = !{i64 2147572734, i64 2147572777, i64 2147572817}
!4279 = !DILocation(line: 46, column: 1, scope: !4207)
!4280 = !{i64 2147572981, i64 2147573024, i64 2147573064}
!4281 = !DILocation(line: 47, column: 1, scope: !4207)
!4282 = !{i64 2147573210, i64 2147573253, i64 2147573293}
!4283 = !DILocation(line: 48, column: 1, scope: !4207)
!4284 = !{i64 2147573442, i64 2147573485, i64 2147573525}
!4285 = !DILocation(line: 49, column: 1, scope: !4207)
!4286 = !{i64 2147573686, i64 2147573729, i64 2147573769}
!4287 = !DILocation(line: 50, column: 1, scope: !4207)
!4288 = !{i64 2147573924, i64 2147573967, i64 2147574007}
!4289 = !DILocation(line: 51, column: 1, scope: !4207)
!4290 = !{i64 2147574198, i64 2147574241, i64 2147574281}
!4291 = !DILocation(line: 52, column: 1, scope: !4207)
!4292 = !{i64 2147574436, i64 2147574479, i64 2147574519}
!4293 = !DILocation(line: 53, column: 1, scope: !4207)
!4294 = !{i64 2147578750, i64 2147578793, i64 2147578833}
!4295 = !DILocation(line: 54, column: 1, scope: !4207)
!4296 = !{i64 2147578994, i64 2147579037, i64 2147579077}
!4297 = !DILocation(line: 55, column: 1, scope: !4207)
!4298 = !{i64 2147579229, i64 2147579272, i64 2147579312}
!4299 = !DILocation(line: 56, column: 1, scope: !4207)
!4300 = !{i64 2147579479, i64 2147579522, i64 2147579562}
!4301 = !DILocation(line: 57, column: 1, scope: !4207)
!4302 = !{i64 2147579726, i64 2147579769, i64 2147579809}
!4303 = !DILocation(line: 58, column: 1, scope: !4207)
!4304 = !{i64 2147579961, i64 2147580004, i64 2147580044}
!4305 = !DILocation(line: 59, column: 1, scope: !4207)
!4306 = !{i64 2147580196, i64 2147580239, i64 2147580279}
!4307 = !DILocation(line: 60, column: 1, scope: !4207)
!4308 = !{i64 2147580431, i64 2147580474, i64 2147580514}
!4309 = !DILocation(line: 61, column: 1, scope: !4207)
!4310 = !{i64 2147580669, i64 2147580712, i64 2147580752}
!4311 = !DILocation(line: 62, column: 1, scope: !4207)
!4312 = !{i64 2147580910, i64 2147580953, i64 2147580993}
!4313 = !DILocation(line: 63, column: 1, scope: !4207)
!4314 = !{i64 2147581190, i64 2147581233, i64 2147581273}
!4315 = !DILocation(line: 64, column: 1, scope: !4207)
!4316 = !{i64 2147581449, i64 2147581492, i64 2147581532}
!4317 = !DILocation(line: 65, column: 1, scope: !4207)
!4318 = !{i64 2147581678, i64 2147581721, i64 2147581761}
!4319 = !DILocation(line: 66, column: 1, scope: !4207)
!4320 = !{i64 2147581904, i64 2147581947, i64 2147581987}
!4321 = !DILocation(line: 67, column: 1, scope: !4207)
!4322 = !{i64 2147582142, i64 2147582185, i64 2147582225}
!4323 = !DILocation(line: 68, column: 1, scope: !4207)
!4324 = !{i64 2147582371, i64 2147582414, i64 2147582454}
!4325 = !DILocation(line: 69, column: 1, scope: !4207)
!4326 = !{i64 2147582579, i64 2147582622, i64 2147582662}
!4327 = !DILocation(line: 70, column: 1, scope: !4207)
!4328 = !{i64 2147582790, i64 2147582833, i64 2147582873}
!4329 = !DILocation(line: 71, column: 1, scope: !4207)
!4330 = !{i64 2147583025, i64 2147583068, i64 2147583108}
!4331 = !DILocation(line: 72, column: 1, scope: !4207)
!4332 = !{i64 2147583254, i64 2147583297, i64 2147583337}
!4333 = !DILocation(line: 73, column: 1, scope: !4207)
!4334 = !{i64 2147583492, i64 2147583535, i64 2147583575}
!4335 = !DILocation(line: 74, column: 1, scope: !4207)
!4336 = !{i64 2147583724, i64 2147583767, i64 2147583807}
!4337 = !DILocation(line: 75, column: 1, scope: !4207)
!4338 = !{i64 2147583950, i64 2147583993, i64 2147584033}
!4339 = !DILocation(line: 76, column: 1, scope: !4207)
!4340 = !{i64 2147584167, i64 2147584210, i64 2147584250}
!4341 = !DILocation(line: 77, column: 1, scope: !4207)
!4342 = !{i64 2147584399, i64 2147584442, i64 2147584482}
!4343 = !DILocation(line: 78, column: 1, scope: !4207)
!4344 = !{i64 2147584625, i64 2147584668, i64 2147584708}
!4345 = !DILocation(line: 79, column: 1, scope: !4207)
!4346 = !{i64 2147584839, i64 2147584882, i64 2147584922}
!4347 = !DILocation(line: 80, column: 1, scope: !4207)
!4348 = !{i64 2147585059, i64 2147585102, i64 2147585142}
!4349 = !DILocation(line: 81, column: 1, scope: !4207)
!4350 = !{i64 2147585291, i64 2147585334, i64 2147585374}
!4351 = !DILocation(line: 82, column: 1, scope: !4207)
!4352 = !{i64 2147585499, i64 2147585542, i64 2147585582}
!4353 = !DILocation(line: 83, column: 1, scope: !4207)
!4354 = !{i64 2147585704, i64 2147585747, i64 2147585787}
!4355 = !DILocation(line: 84, column: 1, scope: !4207)
!4356 = !{i64 2147585921, i64 2147585964, i64 2147586004}
!4357 = !DILocation(line: 85, column: 1, scope: !4207)
!4358 = !{i64 2147586135, i64 2147586178, i64 2147586218}
!4359 = !DILocation(line: 86, column: 1, scope: !4207)
!4360 = !{i64 2147586361, i64 2147586404, i64 2147586444}
!4361 = !DILocation(line: 87, column: 1, scope: !4207)
!4362 = !{i64 2147586581, i64 2147586624, i64 2147586664}
!4363 = !DILocation(line: 88, column: 1, scope: !4207)
!4364 = !{i64 2147590847, i64 2147590890, i64 2147590930}
!4365 = !DILocation(line: 89, column: 1, scope: !4207)
!4366 = !{i64 2147591079, i64 2147591122, i64 2147591162}
!4367 = !DILocation(line: 90, column: 1, scope: !4207)
!4368 = !{i64 2147591314, i64 2147591357, i64 2147591397}
!4369 = !DILocation(line: 91, column: 1, scope: !4207)
!4370 = !{i64 2147591564, i64 2147591607, i64 2147591647}
!4371 = !DILocation(line: 92, column: 1, scope: !4207)
!4372 = !{i64 2147591814, i64 2147591857, i64 2147591897}
!4373 = !DILocation(line: 93, column: 1, scope: !4207)
!4374 = !{i64 2147592052, i64 2147592095, i64 2147592135}
!4375 = !DILocation(line: 94, column: 1, scope: !4207)
!4376 = !{i64 2147592263, i64 2147592306, i64 2147592346}
!4377 = !DILocation(line: 95, column: 1, scope: !4207)
!4378 = !{i64 2147592480, i64 2147592523, i64 2147592563}
!4379 = !DILocation(line: 96, column: 1, scope: !4207)
!4380 = !{i64 2147592676, i64 2147592719, i64 2147592759}
!4381 = !DILocation(line: 97, column: 1, scope: !4207)
!4382 = !{i64 2147592878, i64 2147592921, i64 2147592961}
!4383 = !DILocation(line: 98, column: 1, scope: !4207)
!4384 = !{i64 2147593071, i64 2147593114, i64 2147593154}
!4385 = !DILocation(line: 99, column: 1, scope: !4207)
!4386 = !{i64 2147593279, i64 2147593322, i64 2147593362}
!4387 = !DILocation(line: 100, column: 1, scope: !4207)
!4388 = !{i64 2147593475, i64 2147593518, i64 2147593558}
!4389 = !DILocation(line: 101, column: 1, scope: !4207)
!4390 = !{i64 2147593683, i64 2147593726, i64 2147593766}
!4391 = !DILocation(line: 102, column: 1, scope: !4207)
!4392 = !{i64 2147593894, i64 2147593937, i64 2147593977}
!4393 = !DILocation(line: 103, column: 1, scope: !4207)
!4394 = !{i64 2147594093, i64 2147594136, i64 2147594176}
!4395 = !DILocation(line: 104, column: 1, scope: !4207)
!4396 = !{i64 2147594268, i64 2147594311, i64 2147594351}
!4397 = !DILocation(line: 105, column: 1, scope: !4207)
!4398 = !{i64 2147594452, i64 2147594495, i64 2147594535}
!4399 = !DILocation(line: 106, column: 1, scope: !4207)
!4400 = !{i64 2147594654, i64 2147594697, i64 2147594737}
!4401 = !DILocation(line: 107, column: 1, scope: !4207)
!4402 = !{i64 2147594853, i64 2147594896, i64 2147594936}
!4403 = !DILocation(line: 108, column: 1, scope: !4207)
!4404 = !{i64 2147595019, i64 2147595062, i64 2147595102}
!4405 = !DILocation(line: 109, column: 1, scope: !4207)
!4406 = !{i64 2147595203, i64 2147595246, i64 2147595286}
!4407 = !DILocation(line: 110, column: 1, scope: !4207)
!4408 = !{i64 2147595393, i64 2147595436, i64 2147595476}
!4409 = !DILocation(line: 111, column: 1, scope: !4207)
!4410 = !{i64 2147595577, i64 2147595620, i64 2147595660}
!4411 = !DILocation(line: 112, column: 1, scope: !4207)
!4412 = !{i64 2147595791, i64 2147595834, i64 2147595874}
!4413 = !DILocation(line: 113, column: 1, scope: !4207)
!4414 = !{i64 2147596002, i64 2147596045, i64 2147596085}
!4415 = !DILocation(line: 114, column: 1, scope: !4207)
!4416 = !{i64 2147596225, i64 2147596268, i64 2147596308}
!4417 = !DILocation(line: 115, column: 1, scope: !4207)
!4418 = !{i64 2147596409, i64 2147596452, i64 2147596492}
!4419 = !DILocation(line: 116, column: 1, scope: !4207)
!4420 = !{i64 2147596623, i64 2147596666, i64 2147596706}
!4421 = !DILocation(line: 117, column: 1, scope: !4207)
!4422 = !{i64 2147596789, i64 2147596832, i64 2147596872}
!4423 = !DILocation(line: 118, column: 1, scope: !4207)
!4424 = !{i64 2147596970, i64 2147597013, i64 2147597053}
!4425 = !DILocation(line: 119, column: 1, scope: !4207)
!4426 = !{i64 2147597163, i64 2147597206, i64 2147597246}
!4427 = !DILocation(line: 120, column: 1, scope: !4207)
!4428 = !{i64 2147597389, i64 2147597432, i64 2147597472}
!4429 = !DILocation(line: 121, column: 1, scope: !4207)
!4430 = !{i64 2147597603, i64 2147597646, i64 2147597686}
!4431 = !DILocation(line: 122, column: 1, scope: !4207)
!4432 = !{i64 2147597829, i64 2147597872, i64 2147597912}
!4433 = !DILocation(line: 123, column: 1, scope: !4207)
!4434 = !{i64 2147598046, i64 2147598089, i64 2147598129}
!4435 = !DILocation(line: 124, column: 1, scope: !4207)
!4436 = !{i64 2147598323, i64 2147598366, i64 2147598406}
!4437 = !DILocation(line: 125, column: 1, scope: !4207)
!4438 = !{i64 2147598549, i64 2147598592, i64 2147598632}
!4439 = !DILocation(line: 126, column: 1, scope: !4207)
!4440 = !{i64 2147598757, i64 2147598800, i64 2147598840}
!4441 = !DILocation(line: 127, column: 1, scope: !4207)
!4442 = !{i64 2147598953, i64 2147598996, i64 2147599036}
!4443 = !DILocation(line: 128, column: 1, scope: !4207)
!4444 = !{i64 2147599218, i64 2147599261, i64 2147599301}
!4445 = !DILocation(line: 129, column: 1, scope: !4207)
!4446 = !{i64 2147599432, i64 2147599475, i64 2147599515}
!4447 = !DILocation(line: 130, column: 1, scope: !4207)
!4448 = !{i64 2147599607, i64 2147599650, i64 2147599690}
!4449 = !DILocation(line: 131, column: 1, scope: !4207)
!4450 = !{i64 2147599861, i64 2147599904, i64 2147599944}
!4451 = !DILocation(line: 132, column: 1, scope: !4207)
!4452 = !{i64 2147604121, i64 2147604164, i64 2147604204}
!4453 = !DILocation(line: 133, column: 1, scope: !4207)
!4454 = !{i64 2147604363, i64 2147604406, i64 2147604446}
!4455 = !DILocation(line: 134, column: 1, scope: !4207)
!4456 = !{i64 2147604526, i64 2147604569, i64 2147604609}
!4457 = !DILocation(line: 135, column: 1, scope: !4207)
!4458 = !{i64 2147604713, i64 2147604756, i64 2147604796}
!4459 = !DILocation(line: 136, column: 1, scope: !4207)
!4460 = !{i64 2147604906, i64 2147604949, i64 2147604989}
!4461 = !DILocation(line: 137, column: 1, scope: !4207)
!4462 = !{i64 2147605089, i64 2147605132, i64 2147605172}
!4463 = !DILocation(line: 138, column: 1, scope: !4207)
!4464 = !{i64 2147605303, i64 2147605346, i64 2147605386}
!4465 = !DILocation(line: 139, column: 1, scope: !4207)
!4466 = !{i64 2147605514, i64 2147605557, i64 2147605597}
!4467 = !DILocation(line: 140, column: 1, scope: !4207)
!4468 = !{i64 2147605734, i64 2147605777, i64 2147605817}
!4469 = !DILocation(line: 141, column: 1, scope: !4207)
!4470 = !{i64 2147605941, i64 2147605984, i64 2147606024}
!4471 = !DILocation(line: 142, column: 1, scope: !4207)
!4472 = !{i64 2147606214, i64 2147606257, i64 2147606297}
!4473 = !DILocation(line: 143, column: 1, scope: !4207)
!4474 = !{i64 2147606462, i64 2147606505, i64 2147606545}
!4475 = !DILocation(line: 144, column: 1, scope: !4207)
!4476 = !{i64 2147606661, i64 2147606704, i64 2147606744}
!4477 = !DILocation(line: 145, column: 1, scope: !4207)
!4478 = !{i64 2147606896, i64 2147606939, i64 2147606979}
!4479 = !DILocation(line: 146, column: 1, scope: !4207)
!4480 = !{i64 2147607146, i64 2147607189, i64 2147607229}
!4481 = !DILocation(line: 147, column: 1, scope: !4207)
!4482 = !{i64 2147607348, i64 2147607391, i64 2147607431}
!4483 = !DILocation(line: 148, column: 1, scope: !4207)
!4484 = !{i64 2147607571, i64 2147607614, i64 2147607654}
!4485 = !DILocation(line: 149, column: 1, scope: !4207)
!4486 = !{i64 2147607785, i64 2147607828, i64 2147607868}
!4487 = !DILocation(line: 150, column: 1, scope: !4207)
!4488 = !{i64 2147608029, i64 2147608072, i64 2147608112}
!4489 = !DILocation(line: 151, column: 1, scope: !4207)
!4490 = !{i64 2147608258, i64 2147608301, i64 2147608341}
!4491 = !DILocation(line: 152, column: 1, scope: !4207)
!4492 = !{i64 2147608487, i64 2147608530, i64 2147608570}
!4493 = !DILocation(line: 153, column: 1, scope: !4207)
!4494 = !{i64 2147608695, i64 2147608738, i64 2147608778}
!4495 = !DILocation(line: 154, column: 1, scope: !4207)
!4496 = !{i64 2147608933, i64 2147608976, i64 2147609016}
!4497 = !DILocation(line: 155, column: 1, scope: !4207)
!4498 = !{i64 2147609159, i64 2147609202, i64 2147609242}
!4499 = !DILocation(line: 156, column: 1, scope: !4207)
!4500 = !{i64 2147609418, i64 2147609461, i64 2147609501}
!4501 = !DILocation(line: 157, column: 1, scope: !4207)
!4502 = !{i64 2147609638, i64 2147609681, i64 2147609721}
!4503 = !DILocation(line: 158, column: 1, scope: !4207)
!4504 = !{i64 2147609870, i64 2147609913, i64 2147609953}
!4505 = !DILocation(line: 159, column: 1, scope: !4207)
!4506 = !{i64 2147610111, i64 2147610154, i64 2147610194}
!4507 = !DILocation(line: 160, column: 1, scope: !4207)
!4508 = !{i64 2147610352, i64 2147610395, i64 2147610435}
!4509 = !DILocation(line: 161, column: 1, scope: !4207)
!4510 = !{i64 2147610575, i64 2147610618, i64 2147610658}
!4511 = !DILocation(line: 162, column: 1, scope: !4207)
!4512 = !{i64 2147610792, i64 2147610835, i64 2147610875}
!4513 = !DILocation(line: 163, column: 1, scope: !4207)
!4514 = !{i64 2147611033, i64 2147611076, i64 2147611116}
!4515 = !DILocation(line: 164, column: 1, scope: !4207)
!4516 = !{i64 2147611220, i64 2147611263, i64 2147611303}
!4517 = !DILocation(line: 165, column: 1, scope: !4207)
!4518 = !{i64 2147611407, i64 2147611450, i64 2147611490}
!4519 = !DILocation(line: 166, column: 1, scope: !4207)
!4520 = !{i64 2147611570, i64 2147611613, i64 2147611653}
!4521 = !DILocation(line: 167, column: 1, scope: !4207)
!4522 = !{i64 2147611829, i64 2147611872, i64 2147611912}
!4523 = !DILocation(line: 168, column: 1, scope: !4207)
!4524 = !{i64 2147612052, i64 2147612095, i64 2147612135}
!4525 = !DILocation(line: 169, column: 1, scope: !4207)
!4526 = !{i64 2147612281, i64 2147612324, i64 2147612364}
!4527 = !DILocation(line: 170, column: 1, scope: !4207)
!4528 = !{i64 2147612477, i64 2147612520, i64 2147612560}
!4529 = !DILocation(line: 171, column: 1, scope: !4207)
!4530 = !{i64 2147616750, i64 2147616793, i64 2147616833}
!4531 = !DILocation(line: 172, column: 1, scope: !4207)
!4532 = !{i64 2147616971, i64 2147617014, i64 2147617054}
!4533 = !DILocation(line: 173, column: 1, scope: !4207)
!4534 = !{i64 2147617185, i64 2147617228, i64 2147617268}
!4535 = !DILocation(line: 174, column: 1, scope: !4207)
!4536 = !{i64 2147617375, i64 2147617418, i64 2147617458}
!4537 = !DILocation(line: 175, column: 1, scope: !4207)
!4538 = !{i64 2147617574, i64 2147617617, i64 2147617657}
!4539 = !DILocation(line: 176, column: 1, scope: !4207)
!4540 = !{i64 2147617779, i64 2147617822, i64 2147617862}
!4541 = !DILocation(line: 177, column: 1, scope: !4207)
!4542 = !{i64 2147617999, i64 2147618042, i64 2147618082}
!4543 = !DILocation(line: 178, column: 1, scope: !4207)
!4544 = !{i64 2147618200, i64 2147618243, i64 2147618283}
!4545 = !DILocation(line: 179, column: 1, scope: !4207)
!4546 = !{i64 2147618399, i64 2147618442, i64 2147618482}
!4547 = !DILocation(line: 180, column: 1, scope: !4207)
!4548 = !{i64 2147618604, i64 2147618647, i64 2147618687}
!4549 = !DILocation(line: 181, column: 1, scope: !4207)
!4550 = !{i64 2147618773, i64 2147618816, i64 2147618856}
!4551 = !DILocation(line: 182, column: 1, scope: !4207)
!4552 = !{i64 2147618957, i64 2147619000, i64 2147619040}
!4553 = !DILocation(line: 183, column: 1, scope: !4207)
!4554 = !{i64 2147619141, i64 2147619184, i64 2147619224}
!4555 = !DILocation(line: 184, column: 1, scope: !4207)
!4556 = !{i64 2147619328, i64 2147619371, i64 2147619411}
!4557 = !DILocation(line: 185, column: 1, scope: !4207)
!4558 = !{i64 2147619512, i64 2147619555, i64 2147619595}
!4559 = !DILocation(line: 186, column: 1, scope: !4207)
!4560 = !{i64 2147619750, i64 2147619793, i64 2147619833}
!4561 = !DILocation(line: 187, column: 1, scope: !4207)
!4562 = !{i64 2147619980, i64 2147620023, i64 2147620063}
!4563 = !DILocation(line: 188, column: 1, scope: !4207)
!4564 = !{i64 2147620209, i64 2147620252, i64 2147620292}
!4565 = !DILocation(line: 189, column: 1, scope: !4207)
!4566 = !{i64 2147620396, i64 2147620439, i64 2147620479}
!4567 = !DILocation(line: 190, column: 1, scope: !4207)
!4568 = !{i64 2147620592, i64 2147620635, i64 2147620675}
!4569 = !DILocation(line: 191, column: 1, scope: !4207)
!4570 = !{i64 2147620800, i64 2147620843, i64 2147620883}
!4571 = !DILocation(line: 192, column: 1, scope: !4207)
!4572 = !{i64 2147621012, i64 2147621055, i64 2147621095}
!4573 = !DILocation(line: 193, column: 1, scope: !4207)
!4574 = !{i64 2147621211, i64 2147621254, i64 2147621294}
!4575 = !DILocation(line: 194, column: 1, scope: !4207)
!4576 = !{i64 2147621449, i64 2147621492, i64 2147621532}
!4577 = !DILocation(line: 195, column: 1, scope: !4207)
!4578 = !{i64 2147621645, i64 2147621688, i64 2147621728}
!4579 = !DILocation(line: 196, column: 1, scope: !4207)
!4580 = !{i64 2147621847, i64 2147621890, i64 2147621930}
!4581 = !DILocation(line: 197, column: 1, scope: !4207)
!4582 = !{i64 2147622040, i64 2147622083, i64 2147622123}
!4583 = !DILocation(line: 198, column: 1, scope: !4207)
!4584 = !{i64 2147622274, i64 2147622317, i64 2147622357}
!4585 = !DILocation(line: 199, column: 1, scope: !4207)
!4586 = !{i64 2147622437, i64 2147622480, i64 2147622520}
!4587 = !DILocation(line: 200, column: 1, scope: !4207)
!4588 = !{i64 2147622676, i64 2147622719, i64 2147622759}
!4589 = !DILocation(line: 201, column: 1, scope: !4207)
!4590 = !{i64 2147622915, i64 2147622958, i64 2147622998}
!4591 = !DILocation(line: 202, column: 1, scope: !4207)
!4592 = !{i64 2147623151, i64 2147623194, i64 2147623234}
!4593 = !DILocation(line: 203, column: 1, scope: !4207)
!4594 = !{i64 2147623381, i64 2147623424, i64 2147623464}
!4595 = !DILocation(line: 204, column: 1, scope: !4207)
!4596 = !{i64 2147623568, i64 2147623611, i64 2147623651}
!4597 = !DILocation(line: 205, column: 1, scope: !4207)
!4598 = !{i64 2147623767, i64 2147623810, i64 2147623850}
!4599 = !DILocation(line: 206, column: 1, scope: !4207)
!4600 = !{i64 2147624038, i64 2147624081, i64 2147624121}
!4601 = !DILocation(line: 207, column: 1, scope: !4207)
!4602 = !{i64 2147624213, i64 2147624256, i64 2147624296}
!4603 = !DILocation(line: 208, column: 1, scope: !4207)
!4604 = !{i64 2147624447, i64 2147624490, i64 2147624530}
!4605 = !DILocation(line: 209, column: 1, scope: !4207)
!4606 = !{i64 2147624655, i64 2147624698, i64 2147624738}
!4607 = !DILocation(line: 210, column: 1, scope: !4207)
!4608 = !{i64 2147624873, i64 2147624916, i64 2147624956}
!4609 = !DILocation(line: 211, column: 1, scope: !4207)
!4610 = !{i64 2147625063, i64 2147625106, i64 2147625146}
!4611 = !DILocation(line: 212, column: 1, scope: !4207)
!4612 = !{i64 2147625259, i64 2147625302, i64 2147625342}
!4613 = !DILocation(line: 213, column: 1, scope: !4207)
!4614 = !{i64 2147625465, i64 2147625508, i64 2147625548}
!4615 = !DILocation(line: 214, column: 1, scope: !4207)
!4616 = !{i64 2147625670, i64 2147625713, i64 2147625753}
!4617 = !DILocation(line: 215, column: 1, scope: !4207)
!4618 = !{i64 2147629945, i64 2147629988, i64 2147630028}
!4619 = !DILocation(line: 216, column: 1, scope: !4207)
!4620 = !{i64 2147630171, i64 2147630214, i64 2147630254}
!4621 = !DILocation(line: 217, column: 1, scope: !4207)
!4622 = !{i64 2147630403, i64 2147630446, i64 2147630486}
!4623 = !DILocation(line: 218, column: 1, scope: !4207)
!4624 = !{i64 2147630587, i64 2147630630, i64 2147630670}
!4625 = !DILocation(line: 219, column: 1, scope: !4207)
!4626 = !{i64 2147630796, i64 2147630839, i64 2147630879}
!4627 = !DILocation(line: 220, column: 1, scope: !4207)
!4628 = !{i64 2147630980, i64 2147631023, i64 2147631063}
!4629 = !DILocation(line: 221, column: 1, scope: !4207)
!4630 = !{i64 2147631206, i64 2147631249, i64 2147631289}
!4631 = !DILocation(line: 222, column: 1, scope: !4207)
!4632 = !{i64 2147631432, i64 2147631475, i64 2147631515}
!4633 = !DILocation(line: 223, column: 1, scope: !4207)
!4634 = !{i64 2147631658, i64 2147631701, i64 2147631741}
!4635 = !DILocation(line: 224, column: 1, scope: !4207)
!4636 = !{i64 2147631884, i64 2147631927, i64 2147631967}
!4637 = !DILocation(line: 225, column: 1, scope: !4207)
!4638 = !{i64 2147632110, i64 2147632153, i64 2147632193}
!4639 = !DILocation(line: 226, column: 1, scope: !4207)
!4640 = !{i64 2147632342, i64 2147632385, i64 2147632425}
!4641 = !DILocation(line: 227, column: 1, scope: !4207)
!4642 = !{i64 2147632580, i64 2147632623, i64 2147632663}
!4643 = !DILocation(line: 228, column: 1, scope: !4207)
!4644 = !{i64 2147632800, i64 2147632843, i64 2147632883}
!4645 = !DILocation(line: 229, column: 1, scope: !4207)
!4646 = !{i64 2147633044, i64 2147633087, i64 2147633127}
!4647 = !DILocation(line: 230, column: 1, scope: !4207)
!4648 = !{i64 2147633285, i64 2147633328, i64 2147633368}
!4649 = !DILocation(line: 231, column: 1, scope: !4207)
!4650 = !{i64 2147633520, i64 2147633563, i64 2147633603}
!4651 = !DILocation(line: 232, column: 1, scope: !4207)
!4652 = !{i64 2147633752, i64 2147633795, i64 2147633835}
!4653 = !DILocation(line: 233, column: 1, scope: !4207)
!4654 = !{i64 2147633954, i64 2147633997, i64 2147634037}
!4655 = !DILocation(line: 234, column: 1, scope: !4207)
!4656 = !{i64 2147634204, i64 2147634247, i64 2147634287}
!4657 = !DILocation(line: 235, column: 1, scope: !4207)
!4658 = !{i64 2147634442, i64 2147634485, i64 2147634525}
!4659 = !DILocation(line: 236, column: 1, scope: !4207)
!4660 = !{i64 2147634626, i64 2147634669, i64 2147634709}
!4661 = !DILocation(line: 237, column: 1, scope: !4207)
!4662 = !{i64 2147634850, i64 2147634893, i64 2147634933}
!4663 = !DILocation(line: 238, column: 1, scope: !4207)
!4664 = !{i64 2147635088, i64 2147635131, i64 2147635171}
!4665 = !DILocation(line: 239, column: 1, scope: !4207)
!4666 = !{i64 2147635326, i64 2147635369, i64 2147635409}
!4667 = !DILocation(line: 240, column: 1, scope: !4207)
!4668 = !{i64 2147635519, i64 2147635562, i64 2147635602}
!4669 = !DILocation(line: 241, column: 1, scope: !4207)
!4670 = !{i64 2147635772, i64 2147635815, i64 2147635855}
!4671 = !DILocation(line: 242, column: 1, scope: !4207)
!4672 = !{i64 2147635986, i64 2147636029, i64 2147636069}
!4673 = !DILocation(line: 243, column: 1, scope: !4207)
!4674 = !{i64 2147636194, i64 2147636237, i64 2147636277}
!4675 = !DILocation(line: 244, column: 1, scope: !4207)
!4676 = !{i64 2147636384, i64 2147636427, i64 2147636467}
!4677 = !DILocation(line: 245, column: 1, scope: !4207)
!4678 = !{i64 2147636598, i64 2147636641, i64 2147636681}
!4679 = !DILocation(line: 246, column: 1, scope: !4207)
!4680 = !{i64 2147636860, i64 2147636903, i64 2147636943}
!4681 = !DILocation(line: 247, column: 1, scope: !4207)
!4682 = !{i64 2147637071, i64 2147637114, i64 2147637154}
!4683 = !DILocation(line: 248, column: 1, scope: !4207)
!4684 = !{i64 2147637315, i64 2147637358, i64 2147637398}
!4685 = !DILocation(line: 249, column: 1, scope: !4207)
!4686 = !{i64 2147637526, i64 2147637569, i64 2147637609}
!4687 = !DILocation(line: 250, column: 1, scope: !4207)
!4688 = !{i64 2147637755, i64 2147637798, i64 2147637838}
!4689 = !DILocation(line: 251, column: 1, scope: !4207)
!4690 = !{i64 2147638020, i64 2147638063, i64 2147638103}
!4691 = !DILocation(line: 252, column: 1, scope: !4207)
!4692 = !{i64 2147638225, i64 2147638268, i64 2147638308}
!4693 = !DILocation(line: 253, column: 1, scope: !4207)
!4694 = !{i64 2147642482, i64 2147642525, i64 2147642565}
!4695 = !DILocation(line: 254, column: 1, scope: !4207)
!4696 = !{i64 2147642705, i64 2147642748, i64 2147642788}
!4697 = !DILocation(line: 255, column: 1, scope: !4207)
!4698 = !{i64 2147642868, i64 2147642911, i64 2147642951}
!4699 = !DILocation(line: 256, column: 1, scope: !4207)
!4700 = !{i64 2147643073, i64 2147643116, i64 2147643156}
!4701 = !DILocation(line: 257, column: 1, scope: !4207)
!4702 = !{i64 2147643293, i64 2147643336, i64 2147643376}
!4703 = !DILocation(line: 258, column: 1, scope: !4207)
!4704 = !{i64 2147643507, i64 2147643550, i64 2147643590}
!4705 = !DILocation(line: 259, column: 1, scope: !4207)
!4706 = !{i64 2147643721, i64 2147643764, i64 2147643804}
!4707 = !DILocation(line: 260, column: 1, scope: !4207)
!4708 = !{i64 2147643932, i64 2147643975, i64 2147644015}
!4709 = !DILocation(line: 261, column: 1, scope: !4207)
!4710 = !{i64 2147644125, i64 2147644168, i64 2147644208}
!4711 = !DILocation(line: 262, column: 1, scope: !4207)
!4712 = !{i64 2147644324, i64 2147644367, i64 2147644407}
!4713 = !DILocation(line: 263, column: 1, scope: !4207)
!4714 = !{i64 2147644496, i64 2147644539, i64 2147644579}
!4715 = !DILocation(line: 264, column: 1, scope: !4207)
!4716 = !{i64 2147644689, i64 2147644732, i64 2147644772}
!4717 = !DILocation(line: 265, column: 1, scope: !4207)
!4718 = !{i64 2147644885, i64 2147644928, i64 2147644968}
!4719 = !DILocation(line: 266, column: 1, scope: !4207)
!4720 = !{i64 2147645112, i64 2147645155, i64 2147645195}
!4721 = !DILocation(line: 267, column: 1, scope: !4207)
!4722 = !{i64 2147645329, i64 2147645372, i64 2147645412}
!4723 = !DILocation(line: 268, column: 1, scope: !4207)
!4724 = !{i64 2147645621, i64 2147645664, i64 2147645704}
!4725 = !DILocation(line: 269, column: 1, scope: !4207)
!4726 = !{i64 2147645853, i64 2147645896, i64 2147645936}
!4727 = !DILocation(line: 270, column: 1, scope: !4207)
!4728 = !{i64 2147646070, i64 2147646113, i64 2147646153}
!4729 = !DILocation(line: 271, column: 1, scope: !4207)
!4730 = !{i64 2147646277, i64 2147646320, i64 2147646360}
!4731 = !DILocation(line: 272, column: 1, scope: !4207)
!4732 = !{i64 2147646478, i64 2147646521, i64 2147646561}
!4733 = !DILocation(line: 273, column: 1, scope: !4207)
!4734 = !{i64 2147646710, i64 2147646753, i64 2147646793}
!4735 = !DILocation(line: 274, column: 1, scope: !4207)
!4736 = !{i64 2147646918, i64 2147646961, i64 2147647001}
!4737 = !DILocation(line: 275, column: 1, scope: !4207)
!4738 = !{i64 2147647108, i64 2147647151, i64 2147647191}
!4739 = !DILocation(line: 276, column: 1, scope: !4207)
!4740 = !{i64 2147647334, i64 2147647377, i64 2147647417}
!4741 = !DILocation(line: 277, column: 1, scope: !4207)
!4742 = !{i64 2147647523, i64 2147647566, i64 2147647606}
!4743 = !DILocation(line: 278, column: 1, scope: !4207)
!4744 = !{i64 2147647794, i64 2147647837, i64 2147647877}
!4745 = !DILocation(line: 279, column: 1, scope: !4207)
!4746 = !{i64 2147648014, i64 2147648057, i64 2147648097}
!4747 = !DILocation(line: 280, column: 1, scope: !4207)
!4748 = !{i64 2147648267, i64 2147648310, i64 2147648350}
!4749 = !DILocation(line: 281, column: 1, scope: !4207)
!4750 = !{i64 2147648475, i64 2147648518, i64 2147648558}
!4751 = !DILocation(line: 282, column: 1, scope: !4207)
!4752 = !{i64 2147648707, i64 2147648750, i64 2147648790}
!4753 = !DILocation(line: 283, column: 1, scope: !4207)
!4754 = !{i64 2147648918, i64 2147648961, i64 2147649001}
!4755 = !DILocation(line: 284, column: 1, scope: !4207)
!4756 = !{i64 2147649108, i64 2147649151, i64 2147649191}
!4757 = !DILocation(line: 285, column: 1, scope: !4207)
!4758 = !{i64 2147649322, i64 2147649365, i64 2147649405}
!4759 = !DILocation(line: 286, column: 1, scope: !4207)
!4760 = !{i64 2147649521, i64 2147649564, i64 2147649604}
!4761 = !DILocation(line: 287, column: 1, scope: !4207)
!4762 = !{i64 2147649708, i64 2147649751, i64 2147649791}
!4763 = !DILocation(line: 288, column: 1, scope: !4207)
!4764 = !{i64 2147649916, i64 2147649959, i64 2147649999}
!4765 = !DILocation(line: 289, column: 1, scope: !4207)
!4766 = !{i64 2147650145, i64 2147650188, i64 2147650228}
!4767 = !DILocation(line: 290, column: 1, scope: !4207)
!4768 = !{i64 2147650347, i64 2147650390, i64 2147650430}
!4769 = !DILocation(line: 291, column: 1, scope: !4207)
!4770 = !{i64 2147650546, i64 2147650589, i64 2147650629}
!4771 = !DILocation(line: 292, column: 1, scope: !4207)
!4772 = !{i64 2147650763, i64 2147650806, i64 2147650846}
!4773 = !DILocation(line: 294, column: 1, scope: !4207)
!4774 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4775)
!4775 = !{!4776, !4777}
!4776 = !DILocalVariable(name: "arg", arg: 1, scope: !4774, file: !129, line: 30, type: !138)
!4777 = !DILocalVariable(name: "key", scope: !4774, file: !129, line: 32, type: !121)
!4778 = !DILocation(line: 0, scope: !4774)
!4779 = !DILocation(line: 37, column: 2, scope: !4774)
!4780 = !DILocation(line: 38, column: 2, scope: !4774)
!4781 = !DILocation(line: 55, column: 2, scope: !4782, inlinedAt: !4789)
!4782 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4783, file: !4783, line: 42, type: !4784, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4786)
!4783 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4784 = !DISubroutineType(types: !4785)
!4785 = !{!32}
!4786 = !{!4787, !4788}
!4787 = !DILocalVariable(name: "key", scope: !4782, file: !4783, line: 44, type: !32)
!4788 = !DILocalVariable(name: "tmp", scope: !4782, file: !4783, line: 53, type: !32)
!4789 = distinct !DILocation(line: 40, column: 8, scope: !4774)
!4790 = !{i64 2130516}
!4791 = !DILocation(line: 0, scope: !4782, inlinedAt: !4789)
!4792 = !DILocalVariable(name: "key", arg: 1, scope: !4793, file: !4783, line: 84, type: !32)
!4793 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4796)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{null, !32}
!4796 = !{!4792}
!4797 = !DILocation(line: 0, scope: !4793, inlinedAt: !4798)
!4798 = distinct !DILocation(line: 47, column: 2, scope: !4774)
!4799 = !DILocation(line: 95, column: 2, scope: !4793, inlinedAt: !4798)
!4800 = !{i64 2131333}
!4801 = !DILocation(line: 51, column: 18, scope: !4774)
!4802 = !DILocation(line: 53, column: 2, scope: !4774)
!4803 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4804, file: !4804, line: 1609, type: !2843, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4804 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4805 = !DILocation(line: 1611, column: 3, scope: !4803)
!4806 = !DILocation(line: 1612, column: 1, scope: !4803)
!4807 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4804, file: !4804, line: 1629, type: !2843, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4808 = !DILocation(line: 1631, column: 3, scope: !4807)
!4809 = !DILocation(line: 1632, column: 1, scope: !4807)
!4810 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !4811)
!4811 = !{!4812}
!4812 = !DILocalVariable(name: "dev", arg: 1, scope: !4810, file: !171, line: 26, type: !179)
!4813 = !DILocation(line: 0, scope: !4810)
!4814 = !DILocation(line: 68, column: 2, scope: !4810)
!4815 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4816, file: !4816, line: 57, type: !4817, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !4863)
!4816 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4817 = !DISubroutineType(types: !4818)
!4818 = !{null, !32, !4819}
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 32)
!4820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4821)
!4821 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2426, line: 141, baseType: !4822)
!4822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2426, line: 97, size: 256, elements: !4823)
!4823 = !{!4824}
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4822, file: !2426, line: 107, baseType: !4825, size: 256)
!4825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2426, line: 98, size: 256, elements: !4826)
!4826 = !{!4827, !4832, !4837, !4842, !4847, !4852, !4857, !4862}
!4827 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2426, line: 99, baseType: !4828, size: 32)
!4828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4825, file: !2426, line: 99, size: 32, elements: !4829)
!4829 = !{!4830, !4831}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4828, file: !2426, line: 99, baseType: !121, size: 32)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4828, file: !2426, line: 99, baseType: !121, size: 32)
!4832 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2426, line: 100, baseType: !4833, size: 32, offset: 32)
!4833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4825, file: !2426, line: 100, size: 32, elements: !4834)
!4834 = !{!4835, !4836}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4833, file: !2426, line: 100, baseType: !121, size: 32)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4833, file: !2426, line: 100, baseType: !121, size: 32)
!4837 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2426, line: 101, baseType: !4838, size: 32, offset: 64)
!4838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4825, file: !2426, line: 101, size: 32, elements: !4839)
!4839 = !{!4840, !4841}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4838, file: !2426, line: 101, baseType: !121, size: 32)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4838, file: !2426, line: 101, baseType: !121, size: 32)
!4842 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2426, line: 102, baseType: !4843, size: 32, offset: 96)
!4843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4825, file: !2426, line: 102, size: 32, elements: !4844)
!4844 = !{!4845, !4846}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4843, file: !2426, line: 102, baseType: !121, size: 32)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4843, file: !2426, line: 102, baseType: !121, size: 32)
!4847 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2426, line: 103, baseType: !4848, size: 32, offset: 128)
!4848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4825, file: !2426, line: 103, size: 32, elements: !4849)
!4849 = !{!4850, !4851}
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4848, file: !2426, line: 103, baseType: !121, size: 32)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4848, file: !2426, line: 103, baseType: !121, size: 32)
!4852 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2426, line: 104, baseType: !4853, size: 32, offset: 160)
!4853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4825, file: !2426, line: 104, size: 32, elements: !4854)
!4854 = !{!4855, !4856}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4853, file: !2426, line: 104, baseType: !121, size: 32)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4853, file: !2426, line: 104, baseType: !121, size: 32)
!4857 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2426, line: 105, baseType: !4858, size: 32, offset: 192)
!4858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4825, file: !2426, line: 105, size: 32, elements: !4859)
!4859 = !{!4860, !4861}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4858, file: !2426, line: 105, baseType: !121, size: 32)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4858, file: !2426, line: 105, baseType: !121, size: 32)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4825, file: !2426, line: 106, baseType: !121, size: 32, offset: 224)
!4863 = !{!4864, !4865}
!4864 = !DILocalVariable(name: "reason", arg: 1, scope: !4815, file: !4816, line: 57, type: !32)
!4865 = !DILocalVariable(name: "esf", arg: 2, scope: !4815, file: !4816, line: 57, type: !4819)
!4866 = !DILocation(line: 0, scope: !4815)
!4867 = !DILocation(line: 63, column: 2, scope: !4815)
!4868 = !DILocation(line: 64, column: 1, scope: !4815)
!4869 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4816, file: !4816, line: 82, type: !4870, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !4885)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{null, !4819, !4872}
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 32)
!4873 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !4874)
!4874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4875)
!4875 = !{!4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4874, file: !284, line: 26, baseType: !121, size: 32)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4874, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4874, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4874, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4874, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4874, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4874, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4874, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4874, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4885 = !{!4886, !4887, !4888}
!4886 = !DILocalVariable(name: "esf", arg: 1, scope: !4869, file: !4816, line: 82, type: !4819)
!4887 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4869, file: !4816, line: 82, type: !4872)
!4888 = !DILocalVariable(name: "reason", scope: !4869, file: !4816, line: 88, type: !32)
!4889 = !DILocation(line: 0, scope: !4869)
!4890 = !DILocation(line: 88, column: 35, scope: !4869)
!4891 = !DILocation(line: 108, column: 2, scope: !4869)
!4892 = !DILocation(line: 131, column: 1, scope: !4869)
!4893 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4816, file: !4816, line: 133, type: !4894, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !4896)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{null, !102}
!4896 = !{!4897, !4898, !4899}
!4897 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4893, file: !4816, line: 133, type: !102)
!4898 = !DILocalVariable(name: "ssf_contents", scope: !4893, file: !4816, line: 135, type: !705)
!4899 = !DILocalVariable(name: "oops_esf", scope: !4893, file: !4816, line: 136, type: !4821)
!4900 = !DILocation(line: 0, scope: !4893)
!4901 = !DILocation(line: 136, column: 2, scope: !4893)
!4902 = !DILocation(line: 136, column: 15, scope: !4893)
!4903 = !DILocation(line: 139, column: 22, scope: !4893)
!4904 = !DILocation(line: 139, column: 17, scope: !4893)
!4905 = !DILocation(line: 139, column: 20, scope: !4893)
!4906 = !DILocation(line: 141, column: 2, scope: !4893)
!4907 = !DILocation(line: 142, column: 2, scope: !4893)
!4908 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4909, file: !4909, line: 40, type: !4794, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4910)
!4909 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4910 = !{!4911}
!4911 = !DILocalVariable(name: "irq", arg: 1, scope: !4908, file: !4909, line: 40, type: !32)
!4912 = !DILocation(line: 0, scope: !4908)
!4913 = !DILocation(line: 42, column: 2, scope: !4908)
!4914 = !DILocation(line: 43, column: 1, scope: !4908)
!4915 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !4916, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4918)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{null, !612}
!4918 = !{!4919}
!4919 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4915, file: !356, line: 1684, type: !612)
!4920 = !DILocation(line: 0, scope: !4915)
!4921 = !DILocation(line: 1686, column: 23, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4915, file: !356, line: 1686, column: 7)
!4923 = !DILocation(line: 1686, column: 7, scope: !4915)
!4924 = !DILocation(line: 1688, column: 5, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4922, file: !356, line: 1687, column: 3)
!4926 = !{i64 2151023488}
!4927 = !DILocation(line: 1689, column: 81, scope: !4925)
!4928 = !DILocation(line: 1689, column: 60, scope: !4925)
!4929 = !DILocation(line: 1689, column: 34, scope: !4925)
!4930 = !DILocation(line: 1689, column: 5, scope: !4925)
!4931 = !DILocation(line: 1689, column: 43, scope: !4925)
!4932 = !DILocation(line: 1690, column: 5, scope: !4925)
!4933 = !{i64 2151023602}
!4934 = !DILocation(line: 1691, column: 3, scope: !4925)
!4935 = !DILocation(line: 1692, column: 1, scope: !4915)
!4936 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4909, file: !4909, line: 45, type: !4794, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4937)
!4937 = !{!4938}
!4938 = !DILocalVariable(name: "irq", arg: 1, scope: !4936, file: !4909, line: 45, type: !32)
!4939 = !DILocation(line: 0, scope: !4936)
!4940 = !DILocation(line: 47, column: 2, scope: !4936)
!4941 = !DILocation(line: 48, column: 1, scope: !4936)
!4942 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !4916, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4943)
!4943 = !{!4944}
!4944 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4942, file: !356, line: 1722, type: !612)
!4945 = !DILocation(line: 0, scope: !4942)
!4946 = !DILocation(line: 1724, column: 23, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4942, file: !356, line: 1724, column: 7)
!4948 = !DILocation(line: 1724, column: 7, scope: !4942)
!4949 = !DILocation(line: 1726, column: 81, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !356, line: 1725, column: 3)
!4951 = !DILocation(line: 1726, column: 60, scope: !4950)
!4952 = !DILocation(line: 1726, column: 34, scope: !4950)
!4953 = !DILocation(line: 1726, column: 5, scope: !4950)
!4954 = !DILocation(line: 1726, column: 43, scope: !4950)
!4955 = !DILocation(line: 271, column: 3, scope: !4956, inlinedAt: !4958)
!4956 = distinct !DISubprogram(name: "__DSB", scope: !4957, file: !4957, line: 269, type: !2843, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !322)
!4957 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4958 = distinct !DILocation(line: 1727, column: 5, scope: !4950)
!4959 = !{i64 3477871}
!4960 = !DILocation(line: 260, column: 3, scope: !4961, inlinedAt: !4962)
!4961 = distinct !DISubprogram(name: "__ISB", scope: !4957, file: !4957, line: 258, type: !2843, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !322)
!4962 = distinct !DILocation(line: 1728, column: 5, scope: !4950)
!4963 = !{i64 3477588}
!4964 = !DILocation(line: 1729, column: 3, scope: !4950)
!4965 = !DILocation(line: 1730, column: 1, scope: !4942)
!4966 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4909, file: !4909, line: 50, type: !4967, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4969)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!103, !32}
!4969 = !{!4970}
!4970 = !DILocalVariable(name: "irq", arg: 1, scope: !4966, file: !4909, line: 50, type: !32)
!4971 = !DILocation(line: 0, scope: !4966)
!4972 = !DILocation(line: 52, column: 20, scope: !4966)
!4973 = !DILocation(line: 52, column: 9, scope: !4966)
!4974 = !DILocation(line: 52, column: 41, scope: !4966)
!4975 = !DILocation(line: 52, column: 39, scope: !4966)
!4976 = !DILocation(line: 52, column: 2, scope: !4966)
!4977 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4909, file: !4909, line: 64, type: !4978, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4980)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !32, !32, !121}
!4980 = !{!4981, !4982, !4983}
!4981 = !DILocalVariable(name: "irq", arg: 1, scope: !4977, file: !4909, line: 64, type: !32)
!4982 = !DILocalVariable(name: "prio", arg: 2, scope: !4977, file: !4909, line: 64, type: !32)
!4983 = !DILocalVariable(name: "flags", arg: 3, scope: !4977, file: !4909, line: 64, type: !121)
!4984 = !DILocation(line: 0, scope: !4977)
!4985 = !DILocation(line: 83, column: 8, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !4909, line: 82, column: 9)
!4987 = distinct !DILexicalBlock(scope: !4977, file: !4909, line: 76, column: 6)
!4988 = !DILocation(line: 95, column: 2, scope: !4977)
!4989 = !DILocation(line: 96, column: 1, scope: !4977)
!4990 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !4993)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{null, !612, !121}
!4993 = !{!4994, !4995}
!4994 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4990, file: !356, line: 1814, type: !612)
!4995 = !DILocalVariable(name: "priority", arg: 2, scope: !4990, file: !356, line: 1814, type: !121)
!4996 = !DILocation(line: 0, scope: !4990)
!4997 = !DILocation(line: 0, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4990, file: !356, line: 1816, column: 7)
!4999 = !DILocation(line: 1816, column: 7, scope: !4990)
!5000 = !DILocation(line: 1824, column: 1, scope: !4990)
!5001 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4909, file: !4909, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !5002)
!5002 = !{!5003}
!5003 = !DILocalVariable(name: "unused", arg: 1, scope: !5001, file: !4909, line: 155, type: !13)
!5004 = !DILocation(line: 0, scope: !5001)
!5005 = !DILocation(line: 159, column: 2, scope: !5001)
!5006 = !DILocation(line: 160, column: 1, scope: !5001)
!5007 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5008, file: !5008, line: 87, type: !2843, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2363, retainedNodes: !322)
!5008 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5009 = !DILocation(line: 89, column: 2, scope: !5007)
!5010 = !DILocation(line: 90, column: 2, scope: !5007)
!5011 = !DILocation(line: 91, column: 1, scope: !5007)
!5012 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5008, file: !5008, line: 23, type: !2843, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5013 = !DISubprogram(name: "z_arm_int_exit", scope: !5014, file: !5014, line: 153, type: !2843, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5014 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5015 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5016, file: !5016, line: 256, type: !2843, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !322)
!5016 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5017 = !DILocation(line: 258, column: 2, scope: !5015)
!5018 = !DILocation(line: 260, column: 2, scope: !5015)
!5019 = !DILocation(line: 262, column: 2, scope: !5015)
!5020 = !DILocation(line: 263, column: 2, scope: !5015)
!5021 = !DILocation(line: 267, column: 2, scope: !5015)
!5022 = !DILocation(line: 268, column: 2, scope: !5015)
!5023 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5016, file: !5016, line: 53, type: !2843, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !322)
!5024 = !DILocation(line: 55, column: 12, scope: !5023)
!5025 = !DILocation(line: 271, column: 3, scope: !5026, inlinedAt: !5027)
!5026 = distinct !DISubprogram(name: "__DSB", scope: !4957, file: !4957, line: 269, type: !2843, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !322)
!5027 = distinct !DILocation(line: 56, column: 2, scope: !5023)
!5028 = !{i64 3476542}
!5029 = !DILocation(line: 260, column: 3, scope: !5030, inlinedAt: !5031)
!5030 = distinct !DISubprogram(name: "__ISB", scope: !4957, file: !4957, line: 258, type: !2843, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !322)
!5031 = distinct !DILocation(line: 57, column: 2, scope: !5023)
!5032 = !{i64 3476259}
!5033 = !DILocation(line: 58, column: 1, scope: !5023)
!5034 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5016, file: !5016, line: 96, type: !2843, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !322)
!5035 = !DILocation(line: 103, column: 13, scope: !5034)
!5036 = !DILocation(line: 975, column: 3, scope: !5037, inlinedAt: !5042)
!5037 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4957, file: !4957, line: 971, type: !5038, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !5040)
!5038 = !DISubroutineType(types: !5039)
!5039 = !{!121}
!5040 = !{!5041}
!5041 = !DILocalVariable(name: "result", scope: !5037, file: !4957, line: 973, type: !121)
!5042 = distinct !DILocation(line: 189, column: 16, scope: !5034)
!5043 = !{i64 3497372}
!5044 = !DILocation(line: 0, scope: !5037, inlinedAt: !5042)
!5045 = !DILocation(line: 189, column: 32, scope: !5034)
!5046 = !DILocalVariable(name: "control", arg: 1, scope: !5047, file: !4957, line: 1001, type: !121)
!5047 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4957, file: !4957, line: 1001, type: !5048, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2365, retainedNodes: !5050)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{null, !121}
!5050 = !{!5046}
!5051 = !DILocation(line: 0, scope: !5047, inlinedAt: !5052)
!5052 = distinct !DILocation(line: 189, column: 2, scope: !5034)
!5053 = !DILocation(line: 1003, column: 3, scope: !5047, inlinedAt: !5052)
!5054 = !{i64 3498092}
!5055 = !DILocation(line: 260, column: 3, scope: !5030, inlinedAt: !5056)
!5056 = distinct !DILocation(line: 1004, column: 3, scope: !5047, inlinedAt: !5052)
!5057 = !DILocation(line: 191, column: 1, scope: !5034)
!5058 = distinct !DISubprogram(name: "arch_swap", scope: !5059, file: !5059, line: 33, type: !4967, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !5060)
!5059 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5060 = !{!5061}
!5061 = !DILocalVariable(name: "key", arg: 1, scope: !5058, file: !5059, line: 33, type: !32)
!5062 = !DILocation(line: 0, scope: !5058)
!5063 = !DILocation(line: 36, column: 2, scope: !5058)
!5064 = !DILocation(line: 36, column: 17, scope: !5058)
!5065 = !DILocation(line: 36, column: 25, scope: !5058)
!5066 = !DILocation(line: 37, column: 37, scope: !5058)
!5067 = !DILocation(line: 37, column: 17, scope: !5058)
!5068 = !DILocation(line: 37, column: 35, scope: !5058)
!5069 = !DILocation(line: 41, column: 12, scope: !5058)
!5070 = !DILocalVariable(name: "key", arg: 1, scope: !5071, file: !4783, line: 84, type: !32)
!5071 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2393, retainedNodes: !5072)
!5072 = !{!5070}
!5073 = !DILocation(line: 0, scope: !5071, inlinedAt: !5074)
!5074 = distinct !DILocation(line: 44, column: 2, scope: !5058)
!5075 = !DILocation(line: 95, column: 2, scope: !5071, inlinedAt: !5074)
!5076 = !{i64 2238606}
!5077 = !DILocation(line: 53, column: 9, scope: !5058)
!5078 = !DILocation(line: 53, column: 24, scope: !5058)
!5079 = !DILocation(line: 53, column: 2, scope: !5058)
!5080 = distinct !DISubprogram(name: "arch_new_thread", scope: !5081, file: !5081, line: 56, type: !5082, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !5189)
!5081 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5082 = !DISubroutineType(types: !5083)
!5083 = !{null, !5084, !5184, !977, !3283, !102, !102, !102}
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 32)
!5085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5086)
!5086 = !{!5087, !5145, !5157, !5158, !5159, !5160, !5166, !5179}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5085, file: !211, line: 247, baseType: !5088, size: 384)
!5088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5089)
!5089 = !{!5090, !5114, !5121, !5122, !5123, !5132, !5133, !5134}
!5090 = !DIDerivedType(tag: DW_TAG_member, scope: !5088, file: !211, line: 60, baseType: !5091, size: 64)
!5091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5088, file: !211, line: 60, size: 64, elements: !5092)
!5092 = !{!5093, !5108}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5091, file: !211, line: 61, baseType: !5094, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5095)
!5095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5096)
!5096 = !{!5097, !5103}
!5097 = !DIDerivedType(tag: DW_TAG_member, scope: !5095, file: !221, line: 38, baseType: !5098, size: 32)
!5098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5095, file: !221, line: 38, size: 32, elements: !5099)
!5099 = !{!5100, !5102}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5098, file: !221, line: 39, baseType: !5101, size: 32)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 32)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5098, file: !221, line: 40, baseType: !5101, size: 32)
!5103 = !DIDerivedType(tag: DW_TAG_member, scope: !5095, file: !221, line: 42, baseType: !5104, size: 32, offset: 32)
!5104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5095, file: !221, line: 42, size: 32, elements: !5105)
!5105 = !{!5106, !5107}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5104, file: !221, line: 43, baseType: !5101, size: 32)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5104, file: !221, line: 44, baseType: !5101, size: 32)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5091, file: !211, line: 62, baseType: !5109, size: 64)
!5109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5110)
!5110 = !{!5111}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5109, file: !237, line: 50, baseType: !5112, size: 64)
!5112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5113, size: 64, elements: !242)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 32)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5088, file: !211, line: 68, baseType: !5115, size: 32, offset: 64)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 32)
!5116 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5117)
!5117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5118)
!5118 = !{!5119}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5117, file: !247, line: 232, baseType: !5120, size: 64)
!5120 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5095)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5088, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5088, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5123 = !DIDerivedType(tag: DW_TAG_member, scope: !5088, file: !211, line: 90, baseType: !5124, size: 16, offset: 112)
!5124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5088, file: !211, line: 90, size: 16, elements: !5125)
!5125 = !{!5126, !5131}
!5126 = !DIDerivedType(tag: DW_TAG_member, scope: !5124, file: !211, line: 91, baseType: !5127, size: 16)
!5127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5124, file: !211, line: 91, size: 16, elements: !5128)
!5128 = !{!5129, !5130}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5127, file: !211, line: 96, baseType: !261, size: 8)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5127, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5124, file: !211, line: 100, baseType: !265, size: 16)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5088, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5088, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5088, file: !211, line: 131, baseType: !5135, size: 192, offset: 192)
!5135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5136)
!5136 = !{!5137, !5138, !5144}
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5135, file: !247, line: 245, baseType: !5094, size: 64)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5135, file: !247, line: 246, baseType: !5139, size: 32, offset: 64)
!5139 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5140)
!5140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5141, size: 32)
!5141 = !DISubroutineType(types: !5142)
!5142 = !{null, !5143}
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 32)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5135, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5085, file: !211, line: 250, baseType: !5146, size: 288, offset: 384)
!5146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5147)
!5147 = !{!5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156}
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5146, file: !284, line: 26, baseType: !121, size: 32)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5146, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5146, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5146, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5146, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5146, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5146, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5146, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5146, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5085, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5085, file: !211, line: 256, baseType: !5116, size: 64, offset: 704)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5085, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5085, file: !211, line: 300, baseType: !5161, size: 96, offset: 800)
!5161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5162)
!5162 = !{!5163, !5164, !5165}
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5161, file: !211, line: 153, baseType: !22, size: 32)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5161, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5161, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5085, file: !211, line: 325, baseType: !5167, size: 32, offset: 896)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5168, size: 32)
!5168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5169)
!5169 = !{!5170, !5176, !5177}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5168, file: !307, line: 5074, baseType: !5171, size: 96)
!5171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5172)
!5172 = !{!5173, !5174, !5175}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5171, file: !311, line: 57, baseType: !314, size: 32)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5171, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5171, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5168, file: !307, line: 5075, baseType: !5116, size: 64, offset: 96)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5168, file: !307, line: 5076, baseType: !5178, offset: 160)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5085, file: !211, line: 343, baseType: !5180, size: 64, offset: 928)
!5180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5181)
!5181 = !{!5182, !5183}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5180, file: !284, line: 63, baseType: !121, size: 32)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5180, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 32)
!5185 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3284, line: 44, baseType: !5186)
!5186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1850, line: 47, size: 8, elements: !5187)
!5187 = !{!5188}
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5186, file: !1850, line: 48, baseType: !146, size: 8)
!5189 = !{!5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197}
!5190 = !DILocalVariable(name: "thread", arg: 1, scope: !5080, file: !5081, line: 56, type: !5084)
!5191 = !DILocalVariable(name: "stack", arg: 2, scope: !5080, file: !5081, line: 56, type: !5184)
!5192 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5080, file: !5081, line: 57, type: !977)
!5193 = !DILocalVariable(name: "entry", arg: 4, scope: !5080, file: !5081, line: 57, type: !3283)
!5194 = !DILocalVariable(name: "p1", arg: 5, scope: !5080, file: !5081, line: 58, type: !102)
!5195 = !DILocalVariable(name: "p2", arg: 6, scope: !5080, file: !5081, line: 58, type: !102)
!5196 = !DILocalVariable(name: "p3", arg: 7, scope: !5080, file: !5081, line: 58, type: !102)
!5197 = !DILocalVariable(name: "iframe", scope: !5080, file: !5081, line: 60, type: !2424)
!5198 = !DILocation(line: 0, scope: !5080)
!5199 = !DILocation(line: 85, column: 11, scope: !5080)
!5200 = !DILocation(line: 93, column: 10, scope: !5080)
!5201 = !DILocation(line: 98, column: 13, scope: !5080)
!5202 = !DILocation(line: 100, column: 15, scope: !5080)
!5203 = !DILocation(line: 100, column: 10, scope: !5080)
!5204 = !DILocation(line: 100, column: 13, scope: !5080)
!5205 = !DILocation(line: 101, column: 15, scope: !5080)
!5206 = !DILocation(line: 101, column: 10, scope: !5080)
!5207 = !DILocation(line: 101, column: 13, scope: !5080)
!5208 = !DILocation(line: 102, column: 15, scope: !5080)
!5209 = !DILocation(line: 102, column: 10, scope: !5080)
!5210 = !DILocation(line: 102, column: 13, scope: !5080)
!5211 = !DILocation(line: 103, column: 15, scope: !5080)
!5212 = !DILocation(line: 103, column: 10, scope: !5080)
!5213 = !DILocation(line: 103, column: 13, scope: !5080)
!5214 = !DILocation(line: 106, column: 10, scope: !5080)
!5215 = !DILocation(line: 106, column: 15, scope: !5080)
!5216 = !DILocation(line: 122, column: 29, scope: !5080)
!5217 = !DILocation(line: 122, column: 23, scope: !5080)
!5218 = !DILocation(line: 122, column: 27, scope: !5080)
!5219 = !DILocation(line: 123, column: 15, scope: !5080)
!5220 = !DILocation(line: 123, column: 23, scope: !5080)
!5221 = !DILocation(line: 143, column: 1, scope: !5080)
!5222 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5081, file: !5081, line: 385, type: !5223, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !5226)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!121, !5225, !5225}
!5225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5226 = !{!5227, !5228, !5229, !5232}
!5227 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5222, file: !5081, line: 385, type: !5225)
!5228 = !DILocalVariable(name: "psp", arg: 2, scope: !5222, file: !5081, line: 385, type: !5225)
!5229 = !DILocalVariable(name: "thread", scope: !5222, file: !5081, line: 388, type: !5230)
!5230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5231, size: 32)
!5231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5085)
!5232 = !DILocalVariable(name: "guard_len", scope: !5222, file: !5081, line: 405, type: !121)
!5233 = !DILocation(line: 0, scope: !5222)
!5234 = !DILocation(line: 388, column: 34, scope: !5222)
!5235 = !DILocation(line: 390, column: 13, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5222, file: !5081, line: 390, column: 6)
!5237 = !DILocation(line: 390, column: 6, scope: !5222)
!5238 = !DILocation(line: 438, column: 6, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5222, file: !5081, line: 438, column: 6)
!5240 = !DILocation(line: 438, column: 6, scope: !5222)
!5241 = !DILocation(line: 442, column: 3, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5239, file: !5081, line: 440, column: 22)
!5243 = !DILocation(line: 455, column: 1, scope: !5222)
!5244 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5081, file: !5081, line: 530, type: !5245, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !5247)
!5245 = !DISubroutineType(types: !5246)
!5246 = !{null, !5084, !977, !3283}
!5247 = !{!5248, !5249, !5250}
!5248 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5244, file: !5081, line: 530, type: !5084)
!5249 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5244, file: !5081, line: 530, type: !977)
!5250 = !DILocalVariable(name: "_main", arg: 3, scope: !5244, file: !5081, line: 531, type: !3283)
!5251 = !DILocation(line: 0, scope: !5244)
!5252 = !DILocation(line: 535, column: 11, scope: !5244)
!5253 = !DILocation(line: 560, column: 2, scope: !5244)
!5254 = !DILocation(line: 576, column: 2, scope: !5244)
!5255 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5256 = !DILocation(line: 603, column: 2, scope: !5244)
!5257 = distinct !DISubprogram(name: "z_arm_fault", scope: !5258, file: !5258, line: 1036, type: !5259, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5274)
!5258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5259 = !DISubroutineType(types: !5260)
!5260 = !{null, !121, !121, !121, !5261}
!5261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5262, size: 32)
!5262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5263)
!5263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5264)
!5264 = !{!5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5263, file: !284, line: 26, baseType: !121, size: 32)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5263, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5263, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5263, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5263, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5263, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5263, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5263, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5263, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5274 = !{!5275, !5276, !5277, !5278, !5279, !5280, !5281, !5282, !5283, !5284}
!5275 = !DILocalVariable(name: "msp", arg: 1, scope: !5257, file: !5258, line: 1036, type: !121)
!5276 = !DILocalVariable(name: "psp", arg: 2, scope: !5257, file: !5258, line: 1036, type: !121)
!5277 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5257, file: !5258, line: 1036, type: !121)
!5278 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5257, file: !5258, line: 1037, type: !5261)
!5279 = !DILocalVariable(name: "reason", scope: !5257, file: !5258, line: 1039, type: !121)
!5280 = !DILocalVariable(name: "fault", scope: !5257, file: !5258, line: 1040, type: !103)
!5281 = !DILocalVariable(name: "recoverable", scope: !5257, file: !5258, line: 1041, type: !157)
!5282 = !DILocalVariable(name: "nested_exc", scope: !5257, file: !5258, line: 1041, type: !157)
!5283 = !DILocalVariable(name: "esf", scope: !5257, file: !5258, line: 1042, type: !2492)
!5284 = !DILocalVariable(name: "esf_copy", scope: !5257, file: !5258, line: 1047, type: !2493)
!5285 = !DILocation(line: 0, scope: !5257)
!5286 = !DILocation(line: 1040, column: 19, scope: !5257)
!5287 = !DILocation(line: 1040, column: 24, scope: !5257)
!5288 = !DILocation(line: 1041, column: 2, scope: !5257)
!5289 = !DILocation(line: 1047, column: 2, scope: !5257)
!5290 = !DILocation(line: 1047, column: 15, scope: !5257)
!5291 = !DILocalVariable(name: "key", arg: 1, scope: !5292, file: !4783, line: 84, type: !32)
!5292 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5293)
!5293 = !{!5291}
!5294 = !DILocation(line: 0, scope: !5292, inlinedAt: !5295)
!5295 = distinct !DILocation(line: 1050, column: 2, scope: !5257)
!5296 = !DILocation(line: 95, column: 2, scope: !5292, inlinedAt: !5295)
!5297 = !{i64 2271850}
!5298 = !DILocation(line: 1055, column: 9, scope: !5257)
!5299 = !DILocation(line: 1063, column: 11, scope: !5257)
!5300 = !DILocation(line: 1064, column: 6, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5257, file: !5258, line: 1064, column: 6)
!5302 = !{i8 0, i8 2}
!5303 = !DILocation(line: 1064, column: 6, scope: !5257)
!5304 = !DILocation(line: 1070, column: 20, scope: !5257)
!5305 = !DILocation(line: 1070, column: 2, scope: !5257)
!5306 = !DILocation(line: 1089, column: 6, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5257, file: !5258, line: 1089, column: 6)
!5308 = !DILocation(line: 0, scope: !5307)
!5309 = !DILocation(line: 1089, column: 6, scope: !5257)
!5310 = !DILocation(line: 1090, column: 28, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !5258, line: 1090, column: 7)
!5312 = distinct !DILexicalBlock(scope: !5307, file: !5258, line: 1089, column: 18)
!5313 = !DILocation(line: 1090, column: 44, scope: !5311)
!5314 = !DILocation(line: 1090, column: 7, scope: !5312)
!5315 = !DILocation(line: 1091, column: 24, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5311, file: !5258, line: 1090, column: 50)
!5317 = !DILocation(line: 1092, column: 3, scope: !5316)
!5318 = !DILocation(line: 1094, column: 23, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5307, file: !5258, line: 1093, column: 9)
!5320 = !DILocation(line: 1097, column: 2, scope: !5257)
!5321 = !DILocation(line: 1098, column: 1, scope: !5257)
!5322 = distinct !DISubprogram(name: "get_esf", scope: !5258, file: !5258, line: 894, type: !5323, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5326)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!2492, !121, !121, !121, !5325}
!5325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5326 = !{!5327, !5328, !5329, !5330, !5331, !5332}
!5327 = !DILocalVariable(name: "msp", arg: 1, scope: !5322, file: !5258, line: 894, type: !121)
!5328 = !DILocalVariable(name: "psp", arg: 2, scope: !5322, file: !5258, line: 894, type: !121)
!5329 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5322, file: !5258, line: 894, type: !121)
!5330 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5322, file: !5258, line: 895, type: !5325)
!5331 = !DILocalVariable(name: "alternative_state_exc", scope: !5322, file: !5258, line: 897, type: !157)
!5332 = !DILocalVariable(name: "ptr_esf", scope: !5322, file: !5258, line: 898, type: !2492)
!5333 = !DILocation(line: 0, scope: !5322)
!5334 = !DILocation(line: 900, column: 14, scope: !5322)
!5335 = !DILocation(line: 902, column: 49, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5322, file: !5258, line: 902, column: 6)
!5337 = !DILocation(line: 902, column: 6, scope: !5322)
!5338 = !DILocation(line: 983, column: 18, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5322, file: !5258, line: 983, column: 6)
!5340 = !DILocation(line: 991, column: 7, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5342, file: !5258, line: 990, column: 30)
!5342 = distinct !DILexicalBlock(scope: !5322, file: !5258, line: 990, column: 6)
!5343 = !DILocation(line: 998, column: 16, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5345, file: !5258, line: 995, column: 10)
!5345 = distinct !DILexicalBlock(scope: !5341, file: !5258, line: 991, column: 7)
!5346 = !DILocation(line: 1002, column: 2, scope: !5322)
!5347 = !DILocation(line: 1003, column: 1, scope: !5322)
!5348 = distinct !DISubprogram(name: "fault_handle", scope: !5258, file: !5258, line: 786, type: !5349, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5351)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{!121, !2492, !103, !5325}
!5351 = !{!5352, !5353, !5354, !5355}
!5352 = !DILocalVariable(name: "esf", arg: 1, scope: !5348, file: !5258, line: 786, type: !2492)
!5353 = !DILocalVariable(name: "fault", arg: 2, scope: !5348, file: !5258, line: 786, type: !103)
!5354 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5348, file: !5258, line: 786, type: !5325)
!5355 = !DILocalVariable(name: "reason", scope: !5348, file: !5258, line: 788, type: !121)
!5356 = !DILocation(line: 0, scope: !5348)
!5357 = !DILocation(line: 790, column: 15, scope: !5348)
!5358 = !DILocation(line: 792, column: 2, scope: !5348)
!5359 = !DILocation(line: 794, column: 12, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5348, file: !5258, line: 792, column: 17)
!5361 = !DILocation(line: 795, column: 3, scope: !5360)
!5362 = !DILocation(line: 800, column: 12, scope: !5360)
!5363 = !DILocation(line: 801, column: 3, scope: !5360)
!5364 = !DILocation(line: 803, column: 12, scope: !5360)
!5365 = !DILocation(line: 804, column: 3, scope: !5360)
!5366 = !DILocation(line: 806, column: 12, scope: !5360)
!5367 = !DILocation(line: 807, column: 3, scope: !5360)
!5368 = !DILocation(line: 814, column: 3, scope: !5360)
!5369 = !DILocation(line: 815, column: 3, scope: !5360)
!5370 = !DILocation(line: 829, column: 2, scope: !5348)
!5371 = distinct !DISubprogram(name: "hard_fault", scope: !5258, file: !5258, line: 709, type: !5372, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5374)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!121, !2492, !5325}
!5374 = !{!5375, !5376, !5377}
!5375 = !DILocalVariable(name: "esf", arg: 1, scope: !5371, file: !5258, line: 709, type: !2492)
!5376 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5371, file: !5258, line: 709, type: !5325)
!5377 = !DILocalVariable(name: "reason", scope: !5371, file: !5258, line: 711, type: !121)
!5378 = !DILocation(line: 0, scope: !5371)
!5379 = !DILocation(line: 732, column: 15, scope: !5371)
!5380 = !DILocation(line: 734, column: 12, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5371, file: !5258, line: 734, column: 6)
!5382 = !DILocation(line: 734, column: 17, scope: !5381)
!5383 = !DILocation(line: 734, column: 41, scope: !5381)
!5384 = !DILocation(line: 734, column: 6, scope: !5371)
!5385 = !DILocation(line: 736, column: 19, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5381, file: !5258, line: 736, column: 13)
!5387 = !DILocation(line: 736, column: 49, scope: !5386)
!5388 = !DILocation(line: 736, column: 13, scope: !5381)
!5389 = !DILocation(line: 738, column: 19, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !5258, line: 738, column: 13)
!5391 = !DILocation(line: 738, column: 24, scope: !5390)
!5392 = !DILocation(line: 738, column: 47, scope: !5390)
!5393 = !DILocation(line: 738, column: 13, scope: !5386)
!5394 = !DILocation(line: 740, column: 7, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !5258, line: 740, column: 7)
!5396 = distinct !DILexicalBlock(scope: !5390, file: !5258, line: 738, column: 53)
!5397 = !DILocation(line: 740, column: 7, scope: !5396)
!5398 = !DILocation(line: 742, column: 24, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5395, file: !5258, line: 740, column: 38)
!5400 = !DILocation(line: 743, column: 3, scope: !5399)
!5401 = !DILocation(line: 743, column: 20, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5395, file: !5258, line: 743, column: 14)
!5403 = !DILocation(line: 743, column: 25, scope: !5402)
!5404 = !DILocation(line: 743, column: 52, scope: !5402)
!5405 = !DILocation(line: 743, column: 14, scope: !5395)
!5406 = !DILocation(line: 744, column: 13, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5402, file: !5258, line: 743, column: 58)
!5408 = !DILocation(line: 745, column: 3, scope: !5407)
!5409 = !DILocation(line: 745, column: 20, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5402, file: !5258, line: 745, column: 14)
!5411 = !DILocation(line: 745, column: 25, scope: !5410)
!5412 = !DILocation(line: 745, column: 52, scope: !5410)
!5413 = !DILocation(line: 745, column: 14, scope: !5402)
!5414 = !DILocation(line: 746, column: 13, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5410, file: !5258, line: 745, column: 58)
!5416 = !DILocation(line: 747, column: 3, scope: !5415)
!5417 = !DILocation(line: 747, column: 20, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5410, file: !5258, line: 747, column: 14)
!5419 = !DILocation(line: 747, column: 52, scope: !5418)
!5420 = !DILocation(line: 747, column: 14, scope: !5410)
!5421 = !DILocation(line: 748, column: 13, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5418, file: !5258, line: 747, column: 58)
!5423 = !DILocation(line: 753, column: 3, scope: !5422)
!5424 = !DILocation(line: 766, column: 2, scope: !5371)
!5425 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5258, file: !5258, line: 229, type: !5349, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5426)
!5426 = !{!5427, !5428, !5429, !5430, !5431, !5432, !5435}
!5427 = !DILocalVariable(name: "esf", arg: 1, scope: !5425, file: !5258, line: 229, type: !2492)
!5428 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5425, file: !5258, line: 229, type: !103)
!5429 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5425, file: !5258, line: 230, type: !5325)
!5430 = !DILocalVariable(name: "reason", scope: !5425, file: !5258, line: 232, type: !121)
!5431 = !DILocalVariable(name: "mmfar", scope: !5425, file: !5258, line: 233, type: !121)
!5432 = !DILocalVariable(name: "temp", scope: !5433, file: !5258, line: 254, type: !121)
!5433 = distinct !DILexicalBlock(scope: !5434, file: !5258, line: 244, column: 48)
!5434 = distinct !DILexicalBlock(scope: !5425, file: !5258, line: 244, column: 6)
!5435 = !DILocalVariable(name: "min_stack_ptr", scope: !5436, file: !5258, line: 309, type: !121)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !5258, line: 308, column: 43)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !5258, line: 308, column: 7)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !5258, line: 289, column: 40)
!5439 = distinct !DILexicalBlock(scope: !5425, file: !5258, line: 288, column: 6)
!5440 = !DILocation(line: 0, scope: !5425)
!5441 = !DILocation(line: 237, column: 12, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5425, file: !5258, line: 237, column: 6)
!5443 = !DILocation(line: 241, column: 12, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5425, file: !5258, line: 241, column: 6)
!5445 = !DILocation(line: 244, column: 12, scope: !5434)
!5446 = !DILocation(line: 244, column: 17, scope: !5434)
!5447 = !DILocation(line: 244, column: 42, scope: !5434)
!5448 = !DILocation(line: 244, column: 6, scope: !5425)
!5449 = !DILocation(line: 254, column: 24, scope: !5433)
!5450 = !DILocation(line: 0, scope: !5433)
!5451 = !DILocation(line: 256, column: 13, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5433, file: !5258, line: 256, column: 7)
!5453 = !DILocation(line: 256, column: 18, scope: !5452)
!5454 = !DILocation(line: 256, column: 44, scope: !5452)
!5455 = !DILocation(line: 256, column: 7, scope: !5433)
!5456 = !DILocation(line: 259, column: 24, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !5258, line: 259, column: 8)
!5458 = distinct !DILexicalBlock(scope: !5452, file: !5258, line: 256, column: 50)
!5459 = !DILocation(line: 259, column: 8, scope: !5458)
!5460 = !DILocation(line: 261, column: 15, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !5258, line: 259, column: 30)
!5462 = !DILocation(line: 262, column: 4, scope: !5461)
!5463 = !DILocation(line: 265, column: 12, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5425, file: !5258, line: 265, column: 6)
!5465 = !DILocation(line: 269, column: 12, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5425, file: !5258, line: 269, column: 6)
!5467 = !DILocation(line: 288, column: 12, scope: !5439)
!5468 = !DILocation(line: 288, column: 17, scope: !5439)
!5469 = !DILocation(line: 288, column: 41, scope: !5439)
!5470 = !DILocation(line: 289, column: 9, scope: !5439)
!5471 = !DILocation(line: 289, column: 14, scope: !5439)
!5472 = !DILocation(line: 288, column: 6, scope: !5425)
!5473 = !DILocation(line: 308, column: 12, scope: !5437)
!5474 = !DILocation(line: 308, column: 17, scope: !5437)
!5475 = !DILocation(line: 308, column: 7, scope: !5438)
!5476 = !DILocation(line: 310, column: 6, scope: !5436)
!5477 = !DILocation(line: 309, column: 29, scope: !5436)
!5478 = !DILocation(line: 0, scope: !5436)
!5479 = !DILocation(line: 312, column: 8, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5436, file: !5258, line: 312, column: 8)
!5481 = !DILocation(line: 312, column: 8, scope: !5436)
!5482 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5483, file: !4957, line: 1099, type: !121)
!5483 = distinct !DISubprogram(name: "__set_PSP", scope: !4957, file: !4957, line: 1099, type: !5048, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5484)
!5484 = !{!5482}
!5485 = !DILocation(line: 0, scope: !5483, inlinedAt: !5486)
!5486 = distinct !DILocation(line: 338, column: 5, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5480, file: !5258, line: 312, column: 23)
!5488 = !DILocation(line: 1101, column: 3, scope: !5483, inlinedAt: !5486)
!5489 = !{i64 3527511}
!5490 = !DILocation(line: 341, column: 4, scope: !5487)
!5491 = !DILocation(line: 360, column: 12, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5425, file: !5258, line: 360, column: 6)
!5493 = !DILocation(line: 360, column: 17, scope: !5492)
!5494 = !DILocation(line: 360, column: 41, scope: !5492)
!5495 = !DILocation(line: 360, column: 6, scope: !5425)
!5496 = !DILocation(line: 361, column: 14, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5492, file: !5258, line: 360, column: 47)
!5498 = !DILocation(line: 362, column: 2, scope: !5497)
!5499 = !DILocation(line: 366, column: 12, scope: !5425)
!5500 = !DILocation(line: 369, column: 15, scope: !5425)
!5501 = !DILocation(line: 371, column: 2, scope: !5425)
!5502 = distinct !DISubprogram(name: "bus_fault", scope: !5258, file: !5258, line: 383, type: !5503, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5505)
!5503 = !DISubroutineType(types: !5504)
!5504 = !{!103, !2492, !103, !5325}
!5505 = !{!5506, !5507, !5508, !5509, !5510}
!5506 = !DILocalVariable(name: "esf", arg: 1, scope: !5502, file: !5258, line: 383, type: !2492)
!5507 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5502, file: !5258, line: 383, type: !103)
!5508 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5502, file: !5258, line: 383, type: !5325)
!5509 = !DILocalVariable(name: "reason", scope: !5502, file: !5258, line: 385, type: !121)
!5510 = !DILocalVariable(name: "bfar", scope: !5511, file: !5258, line: 405, type: !121)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !5258, line: 395, column: 42)
!5512 = distinct !DILexicalBlock(scope: !5502, file: !5258, line: 395, column: 6)
!5513 = !DILocation(line: 0, scope: !5502)
!5514 = !DILocation(line: 389, column: 11, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5502, file: !5258, line: 389, column: 6)
!5516 = !DILocation(line: 392, column: 11, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5502, file: !5258, line: 392, column: 6)
!5518 = !DILocation(line: 395, column: 11, scope: !5512)
!5519 = !DILocation(line: 395, column: 16, scope: !5512)
!5520 = !DILocation(line: 395, column: 6, scope: !5502)
!5521 = !DILocation(line: 405, column: 3, scope: !5511)
!5522 = !DILocation(line: 0, scope: !5511)
!5523 = !DILocation(line: 407, column: 13, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5511, file: !5258, line: 407, column: 7)
!5525 = !DILocation(line: 407, column: 18, scope: !5524)
!5526 = !DILocation(line: 407, column: 44, scope: !5524)
!5527 = !DILocation(line: 407, column: 7, scope: !5511)
!5528 = !DILocation(line: 411, column: 15, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !5258, line: 409, column: 30)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !5258, line: 409, column: 8)
!5531 = distinct !DILexicalBlock(scope: !5524, file: !5258, line: 407, column: 50)
!5532 = !DILocation(line: 412, column: 4, scope: !5529)
!5533 = !DILocation(line: 415, column: 11, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5502, file: !5258, line: 415, column: 6)
!5535 = !DILocation(line: 418, column: 12, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5502, file: !5258, line: 418, column: 6)
!5537 = !DILocation(line: 418, column: 17, scope: !5536)
!5538 = !DILocation(line: 418, column: 41, scope: !5536)
!5539 = !DILocation(line: 418, column: 6, scope: !5502)
!5540 = !DILocation(line: 423, column: 18, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5536, file: !5258, line: 423, column: 13)
!5542 = !DILocation(line: 524, column: 12, scope: !5502)
!5543 = !DILocation(line: 526, column: 15, scope: !5502)
!5544 = !DILocation(line: 528, column: 2, scope: !5502)
!5545 = distinct !DISubprogram(name: "usage_fault", scope: !5258, file: !5258, line: 539, type: !5546, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5550)
!5546 = !DISubroutineType(types: !5547)
!5547 = !{!121, !5548}
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 32)
!5549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2493)
!5550 = !{!5551, !5552}
!5551 = !DILocalVariable(name: "esf", arg: 1, scope: !5545, file: !5258, line: 539, type: !5548)
!5552 = !DILocalVariable(name: "reason", scope: !5545, file: !5258, line: 541, type: !121)
!5553 = !DILocation(line: 0, scope: !5545)
!5554 = !DILocation(line: 546, column: 12, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5545, file: !5258, line: 546, column: 6)
!5556 = !DILocation(line: 549, column: 12, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5545, file: !5258, line: 549, column: 6)
!5558 = !DILocation(line: 567, column: 12, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5545, file: !5258, line: 567, column: 6)
!5560 = !DILocation(line: 570, column: 12, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5545, file: !5258, line: 570, column: 6)
!5562 = !DILocation(line: 573, column: 12, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5545, file: !5258, line: 573, column: 6)
!5564 = !DILocation(line: 576, column: 12, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5545, file: !5258, line: 576, column: 6)
!5566 = !DILocation(line: 581, column: 12, scope: !5545)
!5567 = !DILocation(line: 583, column: 2, scope: !5545)
!5568 = distinct !DISubprogram(name: "debug_monitor", scope: !5258, file: !5258, line: 632, type: !5569, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5571)
!5569 = !DISubroutineType(types: !5570)
!5570 = !{null, !2492, !5325}
!5571 = !{!5572, !5573}
!5572 = !DILocalVariable(name: "esf", arg: 1, scope: !5568, file: !5258, line: 632, type: !2492)
!5573 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5568, file: !5258, line: 632, type: !5325)
!5574 = !DILocation(line: 0, scope: !5568)
!5575 = !DILocation(line: 634, column: 15, scope: !5568)
!5576 = !DILocation(line: 652, column: 1, scope: !5568)
!5577 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5258, file: !5258, line: 658, type: !5578, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !5580)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{!157, !2492}
!5580 = !{!5581, !5582, !5583}
!5581 = !DILocalVariable(name: "esf", arg: 1, scope: !5577, file: !5258, line: 658, type: !2492)
!5582 = !DILocalVariable(name: "ret_addr", scope: !5577, file: !5258, line: 660, type: !2535)
!5583 = !DILocalVariable(name: "fault_insn", scope: !5577, file: !5258, line: 686, type: !265)
!5584 = !DILocation(line: 0, scope: !5577)
!5585 = !DILocation(line: 660, column: 46, scope: !5577)
!5586 = !DILocation(line: 660, column: 23, scope: !5577)
!5587 = !DILocation(line: 682, column: 11, scope: !5577)
!5588 = !DILocation(line: 271, column: 3, scope: !5589, inlinedAt: !5590)
!5589 = distinct !DISubprogram(name: "__DSB", scope: !4957, file: !4957, line: 269, type: !2843, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !322)
!5590 = distinct !DILocation(line: 683, column: 2, scope: !5577)
!5591 = !{i64 3503646}
!5592 = !DILocation(line: 260, column: 3, scope: !5593, inlinedAt: !5594)
!5593 = distinct !DISubprogram(name: "__ISB", scope: !4957, file: !4957, line: 258, type: !2843, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !322)
!5594 = distinct !DILocation(line: 684, column: 2, scope: !5577)
!5595 = !{i64 3503363}
!5596 = !DILocation(line: 686, column: 35, scope: !5577)
!5597 = !DILocation(line: 686, column: 24, scope: !5577)
!5598 = !DILocation(line: 688, column: 11, scope: !5577)
!5599 = !DILocation(line: 271, column: 3, scope: !5589, inlinedAt: !5600)
!5600 = distinct !DILocation(line: 689, column: 2, scope: !5577)
!5601 = !DILocation(line: 260, column: 3, scope: !5593, inlinedAt: !5602)
!5602 = distinct !DILocation(line: 690, column: 2, scope: !5577)
!5603 = !DILocation(line: 693, column: 45, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5577, file: !5258, line: 693, column: 6)
!5605 = !DILocation(line: 699, column: 1, scope: !5577)
!5606 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5258, file: !5258, line: 1107, type: !2843, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2464, retainedNodes: !322)
!5607 = !DILocation(line: 1111, column: 11, scope: !5606)
!5608 = !DILocation(line: 1136, column: 1, scope: !5606)
!5609 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5610, file: !5610, line: 26, type: !2843, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !5611)
!5610 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5611 = !{!5612}
!5612 = !DILocalVariable(name: "irq", scope: !5609, file: !5610, line: 28, type: !103)
!5613 = !DILocation(line: 0, scope: !5609)
!5614 = !DILocation(line: 30, column: 2, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5609, file: !5610, line: 30, column: 2)
!5616 = !DILocation(line: 31, column: 3, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5618, file: !5610, line: 30, column: 39)
!5618 = distinct !DILexicalBlock(scope: !5615, file: !5610, line: 30, column: 2)
!5619 = !DILocation(line: 30, column: 35, scope: !5618)
!5620 = !DILocation(line: 30, column: 13, scope: !5618)
!5621 = distinct !{!5621, !5614, !5622}
!5622 = !DILocation(line: 32, column: 2, scope: !5615)
!5623 = !DILocation(line: 33, column: 1, scope: !5609)
!5624 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !5625)
!5625 = !{!5626, !5627}
!5626 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5624, file: !356, line: 1814, type: !612)
!5627 = !DILocalVariable(name: "priority", arg: 2, scope: !5624, file: !356, line: 1814, type: !121)
!5628 = !DILocation(line: 0, scope: !5624)
!5629 = !DILocation(line: 1816, column: 7, scope: !5624)
!5630 = !DILocation(line: 0, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5624, file: !356, line: 1816, column: 7)
!5632 = !DILocation(line: 1824, column: 1, scope: !5624)
!5633 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5634, file: !5634, line: 27, type: !5635, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !5738)
!5634 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5635 = !DISubroutineType(types: !5636)
!5636 = !{null, !5637}
!5637 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !5638)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 32)
!5639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5640)
!5640 = !{!5641, !5699, !5711, !5712, !5713, !5714, !5720, !5733}
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5639, file: !211, line: 247, baseType: !5642, size: 384)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5643)
!5643 = !{!5644, !5668, !5675, !5676, !5677, !5686, !5687, !5688}
!5644 = !DIDerivedType(tag: DW_TAG_member, scope: !5642, file: !211, line: 60, baseType: !5645, size: 64)
!5645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5642, file: !211, line: 60, size: 64, elements: !5646)
!5646 = !{!5647, !5662}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5645, file: !211, line: 61, baseType: !5648, size: 64)
!5648 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5649)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5650)
!5650 = !{!5651, !5657}
!5651 = !DIDerivedType(tag: DW_TAG_member, scope: !5649, file: !221, line: 38, baseType: !5652, size: 32)
!5652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5649, file: !221, line: 38, size: 32, elements: !5653)
!5653 = !{!5654, !5656}
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5652, file: !221, line: 39, baseType: !5655, size: 32)
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 32)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5652, file: !221, line: 40, baseType: !5655, size: 32)
!5657 = !DIDerivedType(tag: DW_TAG_member, scope: !5649, file: !221, line: 42, baseType: !5658, size: 32, offset: 32)
!5658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5649, file: !221, line: 42, size: 32, elements: !5659)
!5659 = !{!5660, !5661}
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5658, file: !221, line: 43, baseType: !5655, size: 32)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5658, file: !221, line: 44, baseType: !5655, size: 32)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5645, file: !211, line: 62, baseType: !5663, size: 64)
!5663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5664)
!5664 = !{!5665}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5663, file: !237, line: 50, baseType: !5666, size: 64)
!5666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5667, size: 64, elements: !242)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 32)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5642, file: !211, line: 68, baseType: !5669, size: 32, offset: 64)
!5669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5670, size: 32)
!5670 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5671)
!5671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5672)
!5672 = !{!5673}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5671, file: !247, line: 232, baseType: !5674, size: 64)
!5674 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5649)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5642, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5642, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5677 = !DIDerivedType(tag: DW_TAG_member, scope: !5642, file: !211, line: 90, baseType: !5678, size: 16, offset: 112)
!5678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5642, file: !211, line: 90, size: 16, elements: !5679)
!5679 = !{!5680, !5685}
!5680 = !DIDerivedType(tag: DW_TAG_member, scope: !5678, file: !211, line: 91, baseType: !5681, size: 16)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5678, file: !211, line: 91, size: 16, elements: !5682)
!5682 = !{!5683, !5684}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5681, file: !211, line: 96, baseType: !261, size: 8)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5681, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5678, file: !211, line: 100, baseType: !265, size: 16)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5642, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5642, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5642, file: !211, line: 131, baseType: !5689, size: 192, offset: 192)
!5689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5690)
!5690 = !{!5691, !5692, !5698}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5689, file: !247, line: 245, baseType: !5648, size: 64)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5689, file: !247, line: 246, baseType: !5693, size: 32, offset: 64)
!5693 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5694)
!5694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5695, size: 32)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{null, !5697}
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 32)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5689, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5639, file: !211, line: 250, baseType: !5700, size: 288, offset: 384)
!5700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5701)
!5701 = !{!5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710}
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5700, file: !284, line: 26, baseType: !121, size: 32)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5700, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5700, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5700, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5700, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5700, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5700, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5700, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5700, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5639, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5639, file: !211, line: 256, baseType: !5670, size: 64, offset: 704)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5639, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5639, file: !211, line: 300, baseType: !5715, size: 96, offset: 800)
!5715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5716)
!5716 = !{!5717, !5718, !5719}
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5715, file: !211, line: 153, baseType: !22, size: 32)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5715, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5715, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5639, file: !211, line: 325, baseType: !5721, size: 32, offset: 896)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 32)
!5722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5723)
!5723 = !{!5724, !5730, !5731}
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5722, file: !307, line: 5074, baseType: !5725, size: 96)
!5725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5726)
!5726 = !{!5727, !5728, !5729}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5725, file: !311, line: 57, baseType: !314, size: 32)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5725, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5725, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5722, file: !307, line: 5075, baseType: !5670, size: 64, offset: 96)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5722, file: !307, line: 5076, baseType: !5732, offset: 160)
!5732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5639, file: !211, line: 343, baseType: !5734, size: 64, offset: 928)
!5734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5735)
!5735 = !{!5736, !5737}
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5734, file: !284, line: 63, baseType: !121, size: 32)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5734, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5738 = !{!5739}
!5739 = !DILocalVariable(name: "thread", arg: 1, scope: !5633, file: !5634, line: 27, type: !5637)
!5740 = !DILocation(line: 0, scope: !5633)
!5741 = !DILocation(line: 29, column: 6, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5633, file: !5634, line: 29, column: 6)
!5743 = !DILocation(line: 29, column: 15, scope: !5742)
!5744 = !DILocation(line: 29, column: 6, scope: !5633)
!5745 = !DILocation(line: 1031, column: 3, scope: !5746, inlinedAt: !5749)
!5746 = distinct !DISubprogram(name: "__get_IPSR", scope: !4957, file: !4957, line: 1027, type: !5038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !5747)
!5747 = !{!5748}
!5748 = !DILocalVariable(name: "result", scope: !5746, file: !4957, line: 1029, type: !121)
!5749 = distinct !DILocation(line: 48, column: 10, scope: !5750, inlinedAt: !5754)
!5750 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5751, file: !5751, line: 46, type: !5752, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !322)
!5751 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5752 = !DISubroutineType(types: !5753)
!5753 = !{!157}
!5754 = distinct !DILocation(line: 30, column: 7, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !5634, line: 30, column: 7)
!5756 = distinct !DILexicalBlock(scope: !5742, file: !5634, line: 29, column: 26)
!5757 = !{i64 3492494}
!5758 = !DILocation(line: 0, scope: !5746, inlinedAt: !5749)
!5759 = !DILocation(line: 48, column: 9, scope: !5750, inlinedAt: !5754)
!5760 = !DILocation(line: 30, column: 7, scope: !5756)
!5761 = !DILocation(line: 42, column: 14, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5755, file: !5634, line: 30, column: 25)
!5763 = !DILocation(line: 48, column: 15, scope: !5762)
!5764 = !DILocation(line: 49, column: 3, scope: !5762)
!5765 = !DILocation(line: 52, column: 2, scope: !5633)
!5766 = !DILocation(line: 53, column: 1, scope: !5633)
!5767 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2843, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!5768 = !DILocation(line: 134, column: 2, scope: !5767)
!5769 = !DILocation(line: 156, column: 1, scope: !5767)
!5770 = !DILocation(line: 0, scope: !205)
!5771 = !DILocation(line: 289, column: 36, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!5773 = !DILocation(line: 289, column: 42, scope: !5772)
!5774 = !DILocation(line: 300, column: 36, scope: !205)
!5775 = !DILocation(line: 301, column: 35, scope: !205)
!5776 = !DILocation(line: 302, column: 37, scope: !205)
!5777 = !DILocation(line: 311, column: 2, scope: !205)
!5778 = !DILocation(line: 316, column: 1, scope: !205)
!5779 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2843, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5780 = !DILocation(line: 188, column: 12, scope: !5779)
!5781 = !DILocation(line: 271, column: 3, scope: !5782, inlinedAt: !5783)
!5782 = distinct !DISubprogram(name: "__DSB", scope: !4957, file: !4957, line: 269, type: !2843, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5783 = distinct !DILocation(line: 192, column: 2, scope: !5779)
!5784 = !{i64 3661322}
!5785 = !DILocation(line: 260, column: 3, scope: !5786, inlinedAt: !5787)
!5786 = distinct !DISubprogram(name: "__ISB", scope: !4957, file: !4957, line: 258, type: !2843, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5787 = distinct !DILocation(line: 193, column: 2, scope: !5779)
!5788 = !{i64 3661039}
!5789 = !DILocation(line: 194, column: 1, scope: !5779)
!5790 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2843, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5791 = !DILocation(line: 282, column: 3, scope: !5792, inlinedAt: !5793)
!5792 = distinct !DISubprogram(name: "__DMB", scope: !4957, file: !4957, line: 280, type: !2843, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5793 = distinct !DILocation(line: 202, column: 2, scope: !5790)
!5794 = !{i64 3661598}
!5795 = !DILocation(line: 205, column: 12, scope: !5790)
!5796 = !DILocation(line: 206, column: 1, scope: !5790)
!5797 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !5798, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5811)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{null, !5800, !1625, !5225, !5225}
!5800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5801, size: 32)
!5801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5802)
!5802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !5803)
!5803 = !{!5804, !5805, !5806}
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5802, file: !335, line: 53, baseType: !22, size: 32)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5802, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5802, file: !335, line: 55, baseType: !5807, size: 32, offset: 64)
!5807 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !5808)
!5808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !5809)
!5809 = !{!5810}
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5808, file: !341, line: 150, baseType: !121, size: 32)
!5811 = !{!5812, !5813, !5814, !5815}
!5812 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5797, file: !384, line: 276, type: !5800)
!5813 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5797, file: !384, line: 276, type: !1625)
!5814 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5797, file: !384, line: 277, type: !5225)
!5815 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5797, file: !384, line: 277, type: !5225)
!5816 = !DILocation(line: 0, scope: !5797)
!5817 = !DILocation(line: 279, column: 6, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5797, file: !384, line: 279, column: 6)
!5819 = !DILocation(line: 285, column: 1, scope: !5797)
!5820 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5821, file: !5821, line: 220, type: !5822, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5824)
!5821 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!103, !5800, !1625, !5225, !5225}
!5824 = !{!5825, !5826, !5827, !5828, !5829}
!5825 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5820, file: !5821, line: 221, type: !5800)
!5826 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5820, file: !5821, line: 221, type: !1625)
!5827 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5820, file: !5821, line: 222, type: !5225)
!5828 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5820, file: !5821, line: 223, type: !5225)
!5829 = !DILocalVariable(name: "mpu_reg_index", scope: !5820, file: !5821, line: 225, type: !103)
!5830 = !DILocation(line: 0, scope: !5820)
!5831 = !DILocation(line: 225, column: 22, scope: !5820)
!5832 = !DILocation(line: 233, column: 18, scope: !5820)
!5833 = !DILocation(line: 236, column: 23, scope: !5820)
!5834 = !DILocation(line: 236, column: 21, scope: !5820)
!5835 = !DILocation(line: 238, column: 2, scope: !5820)
!5836 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !5837, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5839)
!5837 = !DISubroutineType(types: !5838)
!5838 = !{!103, !5800, !154, !154, !157}
!5839 = !{!5840, !5841, !5842, !5843, !5844, !5845}
!5840 = !DILocalVariable(name: "regions", arg: 1, scope: !5836, file: !384, line: 106, type: !5800)
!5841 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5836, file: !384, line: 106, type: !154)
!5842 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5836, file: !384, line: 106, type: !154)
!5843 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5836, file: !384, line: 107, type: !157)
!5844 = !DILocalVariable(name: "i", scope: !5836, file: !384, line: 109, type: !103)
!5845 = !DILocalVariable(name: "reg_index", scope: !5836, file: !384, line: 110, type: !103)
!5846 = !DILocation(line: 0, scope: !5836)
!5847 = !DILocation(line: 110, column: 18, scope: !5836)
!5848 = !DILocation(line: 112, column: 16, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5850, file: !384, line: 112, column: 2)
!5850 = distinct !DILexicalBlock(scope: !5836, file: !384, line: 112, column: 2)
!5851 = !DILocation(line: 112, column: 2, scope: !5850)
!5852 = !DILocation(line: 113, column: 7, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5854, file: !384, line: 113, column: 7)
!5854 = distinct !DILexicalBlock(scope: !5849, file: !384, line: 112, column: 36)
!5855 = !DILocation(line: 113, column: 18, scope: !5853)
!5856 = !DILocation(line: 113, column: 23, scope: !5853)
!5857 = !DILocation(line: 113, column: 7, scope: !5854)
!5858 = !DILocation(line: 118, column: 23, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5854, file: !384, line: 118, column: 7)
!5860 = !DILocation(line: 119, column: 7, scope: !5859)
!5861 = !DILocation(line: 118, column: 7, scope: !5854)
!5862 = !DILocation(line: 124, column: 36, scope: !5854)
!5863 = !DILocation(line: 124, column: 15, scope: !5854)
!5864 = !DILocation(line: 126, column: 17, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5854, file: !384, line: 126, column: 7)
!5866 = !DILocation(line: 126, column: 7, scope: !5854)
!5867 = !DILocation(line: 131, column: 12, scope: !5854)
!5868 = !DILocation(line: 132, column: 2, scope: !5854)
!5869 = !DILocation(line: 112, column: 32, scope: !5849)
!5870 = distinct !{!5870, !5851, !5871}
!5871 = !DILocation(line: 132, column: 2, scope: !5850)
!5872 = !DILocation(line: 135, column: 1, scope: !5836)
!5873 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5821, file: !5821, line: 63, type: !5874, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5876)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{!103, !5800}
!5876 = !{!5877, !5878}
!5877 = !DILocalVariable(name: "part", arg: 1, scope: !5873, file: !5821, line: 63, type: !5800)
!5878 = !DILocalVariable(name: "partition_is_valid", scope: !5873, file: !5821, line: 70, type: !103)
!5879 = !DILocation(line: 0, scope: !5873)
!5880 = !DILocation(line: 71, column: 11, scope: !5873)
!5881 = !DILocation(line: 71, column: 37, scope: !5873)
!5882 = !{i32 0, i32 33}
!5883 = !DILocation(line: 72, column: 3, scope: !5873)
!5884 = !DILocation(line: 71, column: 30, scope: !5873)
!5885 = !DILocation(line: 75, column: 11, scope: !5873)
!5886 = !DILocation(line: 75, column: 17, scope: !5873)
!5887 = !DILocation(line: 75, column: 38, scope: !5873)
!5888 = !DILocation(line: 77, column: 2, scope: !5873)
!5889 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !5890, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5892)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{!103, !1625, !5800}
!5892 = !{!5893, !5894, !5895}
!5893 = !DILocalVariable(name: "index", arg: 1, scope: !5889, file: !384, line: 79, type: !1625)
!5894 = !DILocalVariable(name: "new_region", arg: 2, scope: !5889, file: !384, line: 80, type: !5800)
!5895 = !DILocalVariable(name: "region_conf", scope: !5889, file: !384, line: 82, type: !373)
!5896 = !DILocation(line: 0, scope: !5889)
!5897 = !DILocation(line: 82, column: 2, scope: !5889)
!5898 = !DILocation(line: 82, column: 24, scope: !5889)
!5899 = !DILocation(line: 87, column: 33, scope: !5889)
!5900 = !DILocation(line: 87, column: 14, scope: !5889)
!5901 = !DILocation(line: 87, column: 19, scope: !5889)
!5902 = !DILocation(line: 91, column: 55, scope: !5889)
!5903 = !DILocation(line: 92, column: 16, scope: !5889)
!5904 = !DILocation(line: 92, column: 53, scope: !5889)
!5905 = !DILocation(line: 91, column: 2, scope: !5889)
!5906 = !DILocation(line: 95, column: 9, scope: !5889)
!5907 = !DILocation(line: 97, column: 1, scope: !5889)
!5908 = !DILocation(line: 95, column: 2, scope: !5889)
!5909 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5821, file: !5821, line: 113, type: !5910, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5915)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{null, !5912, !5913, !121, !121}
!5912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 32)
!5914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5807)
!5915 = !{!5916, !5917, !5918, !5919}
!5916 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5909, file: !5821, line: 114, type: !5912)
!5917 = !DILocalVariable(name: "attr", arg: 2, scope: !5909, file: !5821, line: 115, type: !5913)
!5918 = !DILocalVariable(name: "base", arg: 3, scope: !5909, file: !5821, line: 115, type: !121)
!5919 = !DILocalVariable(name: "size", arg: 4, scope: !5909, file: !5821, line: 115, type: !121)
!5920 = !DILocation(line: 0, scope: !5909)
!5921 = !DILocation(line: 127, column: 23, scope: !5909)
!5922 = !DILocation(line: 127, column: 35, scope: !5909)
!5923 = !DILocation(line: 127, column: 33, scope: !5909)
!5924 = !DILocation(line: 127, column: 10, scope: !5909)
!5925 = !DILocation(line: 127, column: 15, scope: !5909)
!5926 = !DILocation(line: 129, column: 1, scope: !5909)
!5927 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !5928, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5930)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{!103, !1625, !371}
!5930 = !{!5931, !5932}
!5931 = !DILocalVariable(name: "index", arg: 1, scope: !5927, file: !384, line: 57, type: !1625)
!5932 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5927, file: !384, line: 58, type: !371)
!5933 = !DILocation(line: 0, scope: !5927)
!5934 = !DILocation(line: 61, column: 6, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5927, file: !384, line: 61, column: 6)
!5936 = !DILocation(line: 61, column: 12, scope: !5935)
!5937 = !DILocation(line: 61, column: 6, scope: !5927)
!5938 = !DILocation(line: 71, column: 2, scope: !5927)
!5939 = !DILocation(line: 73, column: 2, scope: !5927)
!5940 = !DILocation(line: 74, column: 1, scope: !5927)
!5941 = distinct !DISubprogram(name: "region_init", scope: !5821, file: !5821, line: 29, type: !5942, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{null, !5225, !371}
!5944 = !{!5945, !5946}
!5945 = !DILocalVariable(name: "index", arg: 1, scope: !5941, file: !5821, line: 29, type: !5225)
!5946 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5941, file: !5821, line: 30, type: !371)
!5947 = !DILocation(line: 0, scope: !5941)
!5948 = !DILocation(line: 33, column: 2, scope: !5941)
!5949 = !DILocation(line: 47, column: 28, scope: !5941)
!5950 = !DILocation(line: 47, column: 33, scope: !5941)
!5951 = !DILocation(line: 48, column: 26, scope: !5941)
!5952 = !DILocation(line: 47, column: 12, scope: !5941)
!5953 = !DILocation(line: 49, column: 32, scope: !5941)
!5954 = !DILocation(line: 49, column: 37, scope: !5941)
!5955 = !DILocation(line: 49, column: 12, scope: !5941)
!5956 = !DILocation(line: 53, column: 1, scope: !5941)
!5957 = distinct !DISubprogram(name: "set_region_number", scope: !5958, file: !5958, line: 32, type: !5048, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5959)
!5958 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5959 = !{!5960}
!5960 = !DILocalVariable(name: "index", arg: 1, scope: !5957, file: !5958, line: 32, type: !121)
!5961 = !DILocation(line: 0, scope: !5957)
!5962 = !DILocation(line: 34, column: 11, scope: !5957)
!5963 = !DILocation(line: 35, column: 1, scope: !5957)
!5964 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5821, file: !5821, line: 88, type: !5965, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5967)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{!121, !121}
!5967 = !{!5968}
!5968 = !DILocalVariable(name: "size", arg: 1, scope: !5964, file: !5821, line: 88, type: !121)
!5969 = !DILocation(line: 0, scope: !5964)
!5970 = !DILocation(line: 91, column: 11, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5964, file: !5821, line: 91, column: 6)
!5972 = !DILocation(line: 91, column: 6, scope: !5964)
!5973 = !DILocation(line: 100, column: 11, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5964, file: !5821, line: 100, column: 6)
!5975 = !DILocation(line: 100, column: 6, scope: !5964)
!5976 = !DILocation(line: 104, column: 35, scope: !5964)
!5977 = !DILocation(line: 104, column: 16, scope: !5964)
!5978 = !DILocation(line: 104, column: 50, scope: !5964)
!5979 = !DILocation(line: 104, column: 72, scope: !5964)
!5980 = !DILocation(line: 104, column: 2, scope: !5964)
!5981 = !DILocation(line: 106, column: 1, scope: !5964)
!5982 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !5983, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5985)
!5983 = !DISubroutineType(types: !5984)
!5984 = !{null, !5800, !154}
!5985 = !{!5986, !5987}
!5986 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5982, file: !384, line: 308, type: !5800)
!5987 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5982, file: !384, line: 308, type: !154)
!5988 = !DILocation(line: 0, scope: !5982)
!5989 = !DILocation(line: 310, column: 6, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5982, file: !384, line: 310, column: 6)
!5991 = !DILocation(line: 316, column: 1, scope: !5982)
!5992 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5821, file: !5821, line: 249, type: !5993, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5995)
!5993 = !DISubroutineType(types: !5994)
!5994 = !{!103, !5800, !154}
!5995 = !{!5996, !5997, !5998, !5999}
!5996 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5992, file: !5821, line: 250, type: !5800)
!5997 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5992, file: !5821, line: 250, type: !154)
!5998 = !DILocalVariable(name: "mpu_reg_index", scope: !5992, file: !5821, line: 252, type: !103)
!5999 = !DILocalVariable(name: "i", scope: !6000, file: !5821, line: 264, type: !103)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !5821, line: 264, column: 3)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !5821, line: 261, column: 32)
!6002 = distinct !DILexicalBlock(scope: !5992, file: !5821, line: 261, column: 6)
!6003 = !DILocation(line: 0, scope: !5992)
!6004 = !DILocation(line: 252, column: 22, scope: !5992)
!6005 = !DILocation(line: 258, column: 18, scope: !5992)
!6006 = !DILocation(line: 261, column: 20, scope: !6002)
!6007 = !DILocation(line: 261, column: 6, scope: !5992)
!6008 = !DILocation(line: 0, scope: !6000)
!6009 = !DILocation(line: 265, column: 4, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !5821, line: 264, column: 59)
!6011 = distinct !DILexicalBlock(scope: !6000, file: !5821, line: 264, column: 3)
!6012 = !DILocation(line: 264, column: 55, scope: !6011)
!6013 = !DILocation(line: 264, column: 33, scope: !6011)
!6014 = !DILocation(line: 264, column: 3, scope: !6000)
!6015 = distinct !{!6015, !6014, !6016}
!6016 = !DILocation(line: 266, column: 3, scope: !6000)
!6017 = !DILocation(line: 269, column: 2, scope: !5992)
!6018 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6019, file: !6019, line: 218, type: !5048, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6020)
!6019 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6020 = !{!6021}
!6021 = !DILocalVariable(name: "rnr", arg: 1, scope: !6018, file: !6019, line: 218, type: !121)
!6022 = !DILocation(line: 0, scope: !6018)
!6023 = !DILocation(line: 220, column: 12, scope: !6018)
!6024 = !DILocation(line: 221, column: 13, scope: !6018)
!6025 = !DILocation(line: 222, column: 1, scope: !6018)
!6026 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !6027, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6029)
!6027 = !DISubroutineType(types: !6028)
!6028 = !{!103}
!6029 = !{!6030}
!6030 = !DILocalVariable(name: "r_index", scope: !6026, file: !384, line: 328, type: !121)
!6031 = !DILocation(line: 330, column: 17, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6026, file: !384, line: 330, column: 6)
!6033 = !DILocation(line: 330, column: 29, scope: !6032)
!6034 = !DILocation(line: 330, column: 6, scope: !6026)
!6035 = !DILocation(line: 347, column: 2, scope: !6026)
!6036 = !DILocation(line: 0, scope: !6026)
!6037 = !DILocation(line: 364, column: 29, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !384, line: 364, column: 2)
!6039 = distinct !DILexicalBlock(scope: !6026, file: !384, line: 364, column: 2)
!6040 = !DILocation(line: 364, column: 2, scope: !6039)
!6041 = !DILocation(line: 365, column: 25, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6038, file: !384, line: 364, column: 66)
!6043 = !DILocation(line: 365, column: 3, scope: !6042)
!6044 = !DILocation(line: 364, column: 62, scope: !6038)
!6045 = distinct !{!6045, !6040, !6046}
!6046 = !DILocation(line: 366, column: 2, scope: !6039)
!6047 = !DILocation(line: 369, column: 23, scope: !6026)
!6048 = !DILocation(line: 369, column: 21, scope: !6026)
!6049 = !DILocation(line: 372, column: 2, scope: !6026)
!6050 = !DILocation(line: 443, column: 2, scope: !6026)
!6051 = !DILocation(line: 444, column: 1, scope: !6026)
!6052 = distinct !DISubprogram(name: "strcpy", scope: !6053, file: !6053, line: 20, type: !6054, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6058)
!6053 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!977, !6056, !6057}
!6056 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !977)
!6057 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!6058 = !{!6059, !6060, !6061}
!6059 = !DILocalVariable(name: "d", arg: 1, scope: !6052, file: !6053, line: 20, type: !6056)
!6060 = !DILocalVariable(name: "s", arg: 2, scope: !6052, file: !6053, line: 20, type: !6057)
!6061 = !DILocalVariable(name: "dest", scope: !6052, file: !6053, line: 22, type: !977)
!6062 = !DILocation(line: 0, scope: !6052)
!6063 = !DILocation(line: 24, column: 9, scope: !6052)
!6064 = !DILocation(line: 24, column: 12, scope: !6052)
!6065 = !DILocation(line: 24, column: 2, scope: !6052)
!6066 = !DILocation(line: 25, column: 6, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6052, file: !6053, line: 24, column: 21)
!6068 = !DILocation(line: 26, column: 4, scope: !6067)
!6069 = !DILocation(line: 27, column: 4, scope: !6067)
!6070 = distinct !{!6070, !6065, !6071}
!6071 = !DILocation(line: 28, column: 2, scope: !6052)
!6072 = !DILocation(line: 30, column: 5, scope: !6052)
!6073 = !DILocation(line: 32, column: 2, scope: !6052)
!6074 = distinct !DISubprogram(name: "strncpy", scope: !6053, file: !6053, line: 42, type: !6075, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6077)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{!977, !6056, !6057, !200}
!6077 = !{!6078, !6079, !6080, !6081}
!6078 = !DILocalVariable(name: "d", arg: 1, scope: !6074, file: !6053, line: 42, type: !6056)
!6079 = !DILocalVariable(name: "s", arg: 2, scope: !6074, file: !6053, line: 42, type: !6057)
!6080 = !DILocalVariable(name: "n", arg: 3, scope: !6074, file: !6053, line: 42, type: !200)
!6081 = !DILocalVariable(name: "dest", scope: !6074, file: !6053, line: 44, type: !977)
!6082 = !DILocation(line: 0, scope: !6074)
!6083 = !DILocation(line: 46, column: 12, scope: !6074)
!6084 = !DILocation(line: 46, column: 17, scope: !6074)
!6085 = !DILocation(line: 46, column: 20, scope: !6074)
!6086 = !DILocation(line: 46, column: 23, scope: !6074)
!6087 = !DILocation(line: 46, column: 2, scope: !6074)
!6088 = !DILocation(line: 47, column: 6, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6074, file: !6053, line: 46, column: 32)
!6090 = !DILocation(line: 48, column: 4, scope: !6089)
!6091 = !DILocation(line: 49, column: 4, scope: !6089)
!6092 = !DILocation(line: 50, column: 4, scope: !6089)
!6093 = distinct !{!6093, !6087, !6094}
!6094 = !DILocation(line: 51, column: 2, scope: !6074)
!6095 = !DILocation(line: 54, column: 6, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6074, file: !6053, line: 53, column: 16)
!6097 = !DILocation(line: 55, column: 4, scope: !6096)
!6098 = !DILocation(line: 56, column: 4, scope: !6096)
!6099 = !DILocation(line: 53, column: 11, scope: !6074)
!6100 = !DILocation(line: 53, column: 2, scope: !6074)
!6101 = distinct !{!6101, !6100, !6102}
!6102 = !DILocation(line: 57, column: 2, scope: !6074)
!6103 = !DILocation(line: 59, column: 2, scope: !6074)
!6104 = distinct !DISubprogram(name: "strchr", scope: !6053, file: !6053, line: 69, type: !6105, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6107)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!977, !144, !103}
!6107 = !{!6108, !6109, !6110}
!6108 = !DILocalVariable(name: "s", arg: 1, scope: !6104, file: !6053, line: 69, type: !144)
!6109 = !DILocalVariable(name: "c", arg: 2, scope: !6104, file: !6053, line: 69, type: !103)
!6110 = !DILocalVariable(name: "tmp", scope: !6104, file: !6053, line: 71, type: !146)
!6111 = !DILocation(line: 0, scope: !6104)
!6112 = !DILocation(line: 73, column: 2, scope: !6104)
!6113 = !DILocation(line: 73, column: 10, scope: !6104)
!6114 = !DILocation(line: 73, column: 13, scope: !6104)
!6115 = !DILocation(line: 73, column: 21, scope: !6104)
!6116 = !DILocation(line: 74, column: 4, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6104, file: !6053, line: 73, column: 38)
!6118 = distinct !{!6118, !6112, !6119}
!6119 = !DILocation(line: 75, column: 2, scope: !6104)
!6120 = !DILocation(line: 77, column: 9, scope: !6104)
!6121 = !DILocation(line: 77, column: 2, scope: !6104)
!6122 = distinct !DISubprogram(name: "strrchr", scope: !6053, file: !6053, line: 87, type: !6105, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6123)
!6123 = !{!6124, !6125, !6126}
!6124 = !DILocalVariable(name: "s", arg: 1, scope: !6122, file: !6053, line: 87, type: !144)
!6125 = !DILocalVariable(name: "c", arg: 2, scope: !6122, file: !6053, line: 87, type: !103)
!6126 = !DILocalVariable(name: "match", scope: !6122, file: !6053, line: 89, type: !977)
!6127 = !DILocation(line: 0, scope: !6122)
!6128 = !DILocation(line: 91, column: 2, scope: !6122)
!6129 = !DILocation(line: 92, column: 7, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !6053, line: 92, column: 7)
!6131 = distinct !DILexicalBlock(scope: !6122, file: !6053, line: 91, column: 5)
!6132 = !DILocation(line: 92, column: 10, scope: !6130)
!6133 = !DILocation(line: 92, column: 7, scope: !6131)
!6134 = !DILocation(line: 95, column: 13, scope: !6122)
!6135 = !DILocation(line: 95, column: 2, scope: !6131)
!6136 = distinct !{!6136, !6128, !6137}
!6137 = !DILocation(line: 95, column: 15, scope: !6122)
!6138 = !DILocation(line: 97, column: 2, scope: !6122)
!6139 = distinct !DISubprogram(name: "strlen", scope: !6053, file: !6053, line: 107, type: !6140, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6142)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{!200, !144}
!6142 = !{!6143, !6144}
!6143 = !DILocalVariable(name: "s", arg: 1, scope: !6139, file: !6053, line: 107, type: !144)
!6144 = !DILocalVariable(name: "n", scope: !6139, file: !6053, line: 109, type: !200)
!6145 = !DILocation(line: 0, scope: !6139)
!6146 = !DILocation(line: 111, column: 9, scope: !6139)
!6147 = !DILocation(line: 111, column: 12, scope: !6139)
!6148 = !DILocation(line: 111, column: 2, scope: !6139)
!6149 = !DILocation(line: 112, column: 4, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6139, file: !6053, line: 111, column: 21)
!6151 = !DILocation(line: 113, column: 4, scope: !6150)
!6152 = distinct !{!6152, !6148, !6153}
!6153 = !DILocation(line: 114, column: 2, scope: !6139)
!6154 = !DILocation(line: 116, column: 2, scope: !6139)
!6155 = distinct !DISubprogram(name: "strnlen", scope: !6053, file: !6053, line: 126, type: !6156, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6158)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{!200, !144, !200}
!6158 = !{!6159, !6160, !6161}
!6159 = !DILocalVariable(name: "s", arg: 1, scope: !6155, file: !6053, line: 126, type: !144)
!6160 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6155, file: !6053, line: 126, type: !200)
!6161 = !DILocalVariable(name: "n", scope: !6155, file: !6053, line: 128, type: !200)
!6162 = !DILocation(line: 0, scope: !6155)
!6163 = !DILocation(line: 130, column: 9, scope: !6155)
!6164 = !DILocation(line: 130, column: 12, scope: !6155)
!6165 = !DILocation(line: 130, column: 20, scope: !6155)
!6166 = !DILocation(line: 130, column: 2, scope: !6155)
!6167 = !DILocation(line: 131, column: 4, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6155, file: !6053, line: 130, column: 35)
!6169 = !DILocation(line: 132, column: 4, scope: !6168)
!6170 = distinct !{!6170, !6166, !6171}
!6171 = !DILocation(line: 133, column: 2, scope: !6155)
!6172 = !DILocation(line: 135, column: 2, scope: !6155)
!6173 = distinct !DISubprogram(name: "strcmp", scope: !6053, file: !6053, line: 145, type: !6174, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6176)
!6174 = !DISubroutineType(types: !6175)
!6175 = !{!103, !144, !144}
!6176 = !{!6177, !6178}
!6177 = !DILocalVariable(name: "s1", arg: 1, scope: !6173, file: !6053, line: 145, type: !144)
!6178 = !DILocalVariable(name: "s2", arg: 2, scope: !6173, file: !6053, line: 145, type: !144)
!6179 = !DILocation(line: 0, scope: !6173)
!6180 = !DILocation(line: 147, column: 10, scope: !6173)
!6181 = !DILocation(line: 147, column: 17, scope: !6173)
!6182 = !DILocation(line: 147, column: 14, scope: !6173)
!6183 = !DILocation(line: 147, column: 22, scope: !6173)
!6184 = !DILocation(line: 148, column: 5, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6173, file: !6053, line: 147, column: 40)
!6186 = !DILocation(line: 149, column: 5, scope: !6185)
!6187 = distinct !{!6187, !6188, !6189}
!6188 = !DILocation(line: 147, column: 2, scope: !6173)
!6189 = !DILocation(line: 150, column: 2, scope: !6173)
!6190 = !DILocation(line: 152, column: 9, scope: !6173)
!6191 = !DILocation(line: 152, column: 15, scope: !6173)
!6192 = !DILocation(line: 152, column: 13, scope: !6173)
!6193 = !DILocation(line: 152, column: 2, scope: !6173)
!6194 = distinct !DISubprogram(name: "strncmp", scope: !6053, file: !6053, line: 162, type: !6195, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6197)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{!103, !144, !144, !200}
!6197 = !{!6198, !6199, !6200}
!6198 = !DILocalVariable(name: "s1", arg: 1, scope: !6194, file: !6053, line: 162, type: !144)
!6199 = !DILocalVariable(name: "s2", arg: 2, scope: !6194, file: !6053, line: 162, type: !144)
!6200 = !DILocalVariable(name: "n", arg: 3, scope: !6194, file: !6053, line: 162, type: !200)
!6201 = !DILocation(line: 0, scope: !6194)
!6202 = !DILocation(line: 164, column: 17, scope: !6194)
!6203 = !DILocation(line: 164, column: 21, scope: !6194)
!6204 = !DILocation(line: 164, column: 28, scope: !6194)
!6205 = !DILocation(line: 164, column: 25, scope: !6194)
!6206 = !DILocation(line: 164, column: 33, scope: !6194)
!6207 = !DILocation(line: 165, column: 5, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6194, file: !6053, line: 164, column: 51)
!6209 = !DILocation(line: 166, column: 5, scope: !6208)
!6210 = !DILocation(line: 167, column: 4, scope: !6208)
!6211 = distinct !{!6211, !6212, !6213}
!6212 = !DILocation(line: 164, column: 2, scope: !6194)
!6213 = !DILocation(line: 168, column: 2, scope: !6194)
!6214 = !DILocation(line: 170, column: 25, scope: !6194)
!6215 = !DILocation(line: 170, column: 31, scope: !6194)
!6216 = !DILocation(line: 170, column: 29, scope: !6194)
!6217 = !DILocation(line: 170, column: 9, scope: !6194)
!6218 = !DILocation(line: 170, column: 2, scope: !6194)
!6219 = distinct !DISubprogram(name: "strtok_r", scope: !6053, file: !6053, line: 180, type: !6220, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6223)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{!977, !977, !144, !6222}
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!6223 = !{!6224, !6225, !6226, !6227, !6228}
!6224 = !DILocalVariable(name: "str", arg: 1, scope: !6219, file: !6053, line: 180, type: !977)
!6225 = !DILocalVariable(name: "sep", arg: 2, scope: !6219, file: !6053, line: 180, type: !144)
!6226 = !DILocalVariable(name: "state", arg: 3, scope: !6219, file: !6053, line: 180, type: !6222)
!6227 = !DILocalVariable(name: "start", scope: !6219, file: !6053, line: 182, type: !977)
!6228 = !DILocalVariable(name: "end", scope: !6219, file: !6053, line: 182, type: !977)
!6229 = !DILocation(line: 0, scope: !6219)
!6230 = !DILocation(line: 184, column: 10, scope: !6219)
!6231 = !DILocation(line: 184, column: 22, scope: !6219)
!6232 = !DILocation(line: 187, column: 9, scope: !6219)
!6233 = !DILocation(line: 187, column: 16, scope: !6219)
!6234 = !DILocation(line: 187, column: 19, scope: !6219)
!6235 = !DILocation(line: 187, column: 2, scope: !6219)
!6236 = !DILocation(line: 188, column: 8, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6219, file: !6053, line: 187, column: 40)
!6238 = distinct !{!6238, !6235, !6239}
!6239 = !DILocation(line: 189, column: 2, scope: !6219)
!6240 = !DILocation(line: 198, column: 9, scope: !6219)
!6241 = !DILocation(line: 198, column: 18, scope: !6219)
!6242 = !DILocation(line: 198, column: 17, scope: !6219)
!6243 = !DILocation(line: 198, column: 2, scope: !6219)
!6244 = !DILocation(line: 199, column: 6, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6219, file: !6053, line: 198, column: 37)
!6246 = !DILocation(line: 198, column: 14, scope: !6219)
!6247 = distinct !{!6247, !6243, !6248}
!6248 = !DILocation(line: 200, column: 2, scope: !6219)
!6249 = !DILocation(line: 203, column: 8, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6251, file: !6053, line: 202, column: 20)
!6251 = distinct !DILexicalBlock(scope: !6219, file: !6053, line: 202, column: 6)
!6252 = !DILocation(line: 204, column: 16, scope: !6250)
!6253 = !DILocation(line: 205, column: 2, scope: !6250)
!6254 = !DILocation(line: 210, column: 1, scope: !6219)
!6255 = distinct !DISubprogram(name: "strcat", scope: !6053, file: !6053, line: 212, type: !6054, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6256)
!6256 = !{!6257, !6258}
!6257 = !DILocalVariable(name: "dest", arg: 1, scope: !6255, file: !6053, line: 212, type: !6056)
!6258 = !DILocalVariable(name: "src", arg: 2, scope: !6255, file: !6053, line: 212, type: !6057)
!6259 = !DILocation(line: 0, scope: !6255)
!6260 = !DILocation(line: 214, column: 16, scope: !6255)
!6261 = !DILocation(line: 214, column: 14, scope: !6255)
!6262 = !DILocation(line: 214, column: 2, scope: !6255)
!6263 = !DILocation(line: 215, column: 2, scope: !6255)
!6264 = distinct !DISubprogram(name: "strncat", scope: !6053, file: !6053, line: 218, type: !6075, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6265)
!6265 = !{!6266, !6267, !6268, !6269, !6270}
!6266 = !DILocalVariable(name: "dest", arg: 1, scope: !6264, file: !6053, line: 218, type: !6056)
!6267 = !DILocalVariable(name: "src", arg: 2, scope: !6264, file: !6053, line: 218, type: !6057)
!6268 = !DILocalVariable(name: "n", arg: 3, scope: !6264, file: !6053, line: 219, type: !200)
!6269 = !DILocalVariable(name: "orig_dest", scope: !6264, file: !6053, line: 221, type: !977)
!6270 = !DILocalVariable(name: "len", scope: !6264, file: !6053, line: 222, type: !200)
!6271 = !DILocation(line: 0, scope: !6264)
!6272 = !DILocation(line: 222, column: 15, scope: !6264)
!6273 = !DILocation(line: 224, column: 7, scope: !6264)
!6274 = !DILocation(line: 225, column: 14, scope: !6264)
!6275 = !DILocation(line: 225, column: 19, scope: !6264)
!6276 = !DILocation(line: 225, column: 11, scope: !6264)
!6277 = !DILocation(line: 225, column: 23, scope: !6264)
!6278 = !DILocation(line: 225, column: 28, scope: !6264)
!6279 = !DILocation(line: 225, column: 2, scope: !6264)
!6280 = !DILocation(line: 226, column: 17, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6264, file: !6053, line: 225, column: 38)
!6282 = !DILocation(line: 226, column: 8, scope: !6281)
!6283 = !DILocation(line: 226, column: 11, scope: !6281)
!6284 = distinct !{!6284, !6279, !6285}
!6285 = !DILocation(line: 227, column: 2, scope: !6264)
!6286 = !DILocation(line: 228, column: 8, scope: !6264)
!6287 = !DILocation(line: 230, column: 2, scope: !6264)
!6288 = distinct !DISubprogram(name: "memcmp", scope: !6053, file: !6053, line: 239, type: !6289, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6291)
!6289 = !DISubroutineType(types: !6290)
!6290 = !{!103, !13, !13, !200}
!6291 = !{!6292, !6293, !6294, !6295, !6296}
!6292 = !DILocalVariable(name: "m1", arg: 1, scope: !6288, file: !6053, line: 239, type: !13)
!6293 = !DILocalVariable(name: "m2", arg: 2, scope: !6288, file: !6053, line: 239, type: !13)
!6294 = !DILocalVariable(name: "n", arg: 3, scope: !6288, file: !6053, line: 239, type: !200)
!6295 = !DILocalVariable(name: "c1", scope: !6288, file: !6053, line: 241, type: !144)
!6296 = !DILocalVariable(name: "c2", scope: !6288, file: !6053, line: 242, type: !144)
!6297 = !DILocation(line: 0, scope: !6288)
!6298 = !DILocation(line: 244, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6288, file: !6053, line: 244, column: 6)
!6300 = !DILocation(line: 244, column: 6, scope: !6288)
!6301 = !DILocation(line: 248, column: 10, scope: !6288)
!6302 = !DILocation(line: 248, column: 14, scope: !6288)
!6303 = !DILocation(line: 248, column: 19, scope: !6288)
!6304 = !DILocation(line: 248, column: 2, scope: !6288)
!6305 = !DILocation(line: 248, column: 23, scope: !6288)
!6306 = !DILocation(line: 248, column: 30, scope: !6288)
!6307 = !DILocation(line: 248, column: 27, scope: !6288)
!6308 = !DILocation(line: 249, column: 5, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6288, file: !6053, line: 248, column: 36)
!6310 = !DILocation(line: 250, column: 5, scope: !6309)
!6311 = distinct !{!6311, !6304, !6312}
!6312 = !DILocation(line: 251, column: 2, scope: !6288)
!6313 = !DILocation(line: 253, column: 9, scope: !6288)
!6314 = !DILocation(line: 253, column: 15, scope: !6288)
!6315 = !DILocation(line: 253, column: 13, scope: !6288)
!6316 = !DILocation(line: 253, column: 2, scope: !6288)
!6317 = !DILocation(line: 254, column: 1, scope: !6288)
!6318 = distinct !DISubprogram(name: "memmove", scope: !6053, file: !6053, line: 263, type: !6319, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6321)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!102, !102, !13, !200}
!6321 = !{!6322, !6323, !6324, !6325, !6326}
!6322 = !DILocalVariable(name: "d", arg: 1, scope: !6318, file: !6053, line: 263, type: !102)
!6323 = !DILocalVariable(name: "s", arg: 2, scope: !6318, file: !6053, line: 263, type: !13)
!6324 = !DILocalVariable(name: "n", arg: 3, scope: !6318, file: !6053, line: 263, type: !200)
!6325 = !DILocalVariable(name: "dest", scope: !6318, file: !6053, line: 265, type: !977)
!6326 = !DILocalVariable(name: "src", scope: !6318, file: !6053, line: 266, type: !144)
!6327 = !DILocation(line: 0, scope: !6318)
!6328 = !DILocation(line: 268, column: 21, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6318, file: !6053, line: 268, column: 6)
!6330 = !DILocation(line: 268, column: 28, scope: !6329)
!6331 = !DILocation(line: 268, column: 6, scope: !6318)
!6332 = !DILocation(line: 280, column: 12, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !6053, line: 278, column: 9)
!6334 = !DILocation(line: 280, column: 3, scope: !6333)
!6335 = !DILocation(line: 275, column: 5, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !6053, line: 274, column: 17)
!6337 = distinct !DILexicalBlock(scope: !6329, file: !6053, line: 268, column: 33)
!6338 = !DILocation(line: 276, column: 14, scope: !6336)
!6339 = !DILocation(line: 276, column: 4, scope: !6336)
!6340 = !DILocation(line: 276, column: 12, scope: !6336)
!6341 = !DILocation(line: 274, column: 12, scope: !6337)
!6342 = !DILocation(line: 274, column: 3, scope: !6337)
!6343 = distinct !{!6343, !6342, !6344}
!6344 = !DILocation(line: 277, column: 3, scope: !6337)
!6345 = !DILocation(line: 281, column: 12, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6333, file: !6053, line: 280, column: 17)
!6347 = !DILocation(line: 281, column: 10, scope: !6346)
!6348 = !DILocation(line: 282, column: 8, scope: !6346)
!6349 = !DILocation(line: 283, column: 7, scope: !6346)
!6350 = !DILocation(line: 284, column: 5, scope: !6346)
!6351 = distinct !{!6351, !6334, !6352}
!6352 = !DILocation(line: 285, column: 3, scope: !6333)
!6353 = !DILocation(line: 288, column: 2, scope: !6318)
!6354 = distinct !DISubprogram(name: "memcpy", scope: !6053, file: !6053, line: 298, type: !6355, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6359)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!102, !6357, !6358, !200}
!6357 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6358 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6359 = !{!6360, !6361, !6362, !6363, !6364}
!6360 = !DILocalVariable(name: "d", arg: 1, scope: !6354, file: !6053, line: 298, type: !6357)
!6361 = !DILocalVariable(name: "s", arg: 2, scope: !6354, file: !6053, line: 298, type: !6358)
!6362 = !DILocalVariable(name: "n", arg: 3, scope: !6354, file: !6053, line: 298, type: !200)
!6363 = !DILocalVariable(name: "d_byte", scope: !6354, file: !6053, line: 302, type: !810)
!6364 = !DILocalVariable(name: "s_byte", scope: !6354, file: !6053, line: 303, type: !2612)
!6365 = !DILocation(line: 0, scope: !6354)
!6366 = !DILocation(line: 337, column: 11, scope: !6354)
!6367 = !DILocation(line: 337, column: 2, scope: !6354)
!6368 = !DILocation(line: 338, column: 25, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6354, file: !6053, line: 337, column: 16)
!6370 = !DILocation(line: 338, column: 17, scope: !6369)
!6371 = !DILocation(line: 338, column: 11, scope: !6369)
!6372 = !DILocation(line: 338, column: 15, scope: !6369)
!6373 = !DILocation(line: 339, column: 4, scope: !6369)
!6374 = distinct !{!6374, !6367, !6375}
!6375 = !DILocation(line: 340, column: 2, scope: !6354)
!6376 = !DILocation(line: 342, column: 2, scope: !6354)
!6377 = distinct !DISubprogram(name: "memset", scope: !6053, file: !6053, line: 352, type: !6378, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6380)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{!102, !102, !103, !200}
!6380 = !{!6381, !6382, !6383, !6384, !6385}
!6381 = !DILocalVariable(name: "buf", arg: 1, scope: !6377, file: !6053, line: 352, type: !102)
!6382 = !DILocalVariable(name: "c", arg: 2, scope: !6377, file: !6053, line: 352, type: !103)
!6383 = !DILocalVariable(name: "n", arg: 3, scope: !6377, file: !6053, line: 352, type: !200)
!6384 = !DILocalVariable(name: "d_byte", scope: !6377, file: !6053, line: 356, type: !810)
!6385 = !DILocalVariable(name: "c_byte", scope: !6377, file: !6053, line: 357, type: !155)
!6386 = !DILocation(line: 0, scope: !6377)
!6387 = !DILocation(line: 357, column: 25, scope: !6377)
!6388 = !DILocation(line: 389, column: 11, scope: !6377)
!6389 = !DILocation(line: 389, column: 2, scope: !6377)
!6390 = !DILocation(line: 390, column: 11, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6377, file: !6053, line: 389, column: 16)
!6392 = !DILocation(line: 390, column: 15, scope: !6391)
!6393 = !DILocation(line: 391, column: 4, scope: !6391)
!6394 = distinct !{!6394, !6389, !6395}
!6395 = !DILocation(line: 392, column: 2, scope: !6377)
!6396 = !DILocation(line: 394, column: 2, scope: !6377)
!6397 = distinct !DISubprogram(name: "memchr", scope: !6053, file: !6053, line: 404, type: !6398, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6400)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!102, !13, !103, !200}
!6400 = !{!6401, !6402, !6403, !6404}
!6401 = !DILocalVariable(name: "s", arg: 1, scope: !6397, file: !6053, line: 404, type: !13)
!6402 = !DILocalVariable(name: "c", arg: 2, scope: !6397, file: !6053, line: 404, type: !103)
!6403 = !DILocalVariable(name: "n", arg: 3, scope: !6397, file: !6053, line: 404, type: !200)
!6404 = !DILocalVariable(name: "p", scope: !6405, file: !6053, line: 407, type: !2612)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !6053, line: 406, column: 14)
!6406 = distinct !DILexicalBlock(scope: !6397, file: !6053, line: 406, column: 6)
!6407 = !DILocation(line: 0, scope: !6397)
!6408 = !DILocation(line: 406, column: 8, scope: !6406)
!6409 = !DILocation(line: 406, column: 6, scope: !6397)
!6410 = !DILocation(line: 409, column: 3, scope: !6405)
!6411 = !DILocation(line: 0, scope: !6405)
!6412 = !DILocation(line: 410, column: 8, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !6053, line: 410, column: 8)
!6414 = distinct !DILexicalBlock(scope: !6405, file: !6053, line: 409, column: 6)
!6415 = !DILocation(line: 410, column: 13, scope: !6413)
!6416 = !DILocation(line: 410, column: 8, scope: !6414)
!6417 = distinct !{!6417, !6410, !6418}
!6418 = !DILocation(line: 414, column: 20, scope: !6405)
!6419 = !DILocation(line: 417, column: 2, scope: !6397)
!6420 = !DILocation(line: 418, column: 1, scope: !6397)
!6421 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !3101, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6422)
!6422 = !{!6423}
!6423 = !DILocalVariable(name: "hook", arg: 1, scope: !6421, file: !394, line: 23, type: !106)
!6424 = !DILocation(line: 0, scope: !6421)
!6425 = !DILocation(line: 25, column: 15, scope: !6421)
!6426 = !DILocation(line: 26, column: 1, scope: !6421)
!6427 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6428)
!6428 = !{!6429}
!6429 = !DILocalVariable(name: "c", arg: 1, scope: !6427, file: !394, line: 14, type: !103)
!6430 = !DILocation(line: 0, scope: !6427)
!6431 = !DILocation(line: 18, column: 2, scope: !6427)
!6432 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6433, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6435)
!6433 = !DISubroutineType(types: !6434)
!6434 = !{!103, !103, !390}
!6435 = !{!6436, !6437}
!6436 = !DILocalVariable(name: "c", arg: 1, scope: !6432, file: !394, line: 28, type: !103)
!6437 = !DILocalVariable(name: "stream", arg: 2, scope: !6432, file: !394, line: 28, type: !390)
!6438 = !DILocation(line: 0, scope: !6432)
!6439 = !DILocation(line: 30, column: 27, scope: !6432)
!6440 = !DILocation(line: 30, column: 50, scope: !6432)
!6441 = !DILocation(line: 30, column: 9, scope: !6432)
!6442 = !DILocation(line: 30, column: 2, scope: !6432)
!6443 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6433, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6444)
!6444 = !{!6445, !6446}
!6445 = !DILocalVariable(name: "c", arg: 1, scope: !6443, file: !394, line: 41, type: !103)
!6446 = !DILocalVariable(name: "stream", arg: 2, scope: !6443, file: !394, line: 41, type: !390)
!6447 = !DILocation(line: 0, scope: !6443)
!6448 = !DILocation(line: 43, column: 9, scope: !6443)
!6449 = !DILocation(line: 43, column: 2, scope: !6443)
!6450 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6451, file: !6451, line: 72, type: !6433, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6452)
!6451 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!6452 = !{!6453, !6454}
!6453 = !DILocalVariable(name: "c", arg: 1, scope: !6450, file: !6451, line: 72, type: !103)
!6454 = !DILocalVariable(name: "stream", arg: 2, scope: !6450, file: !6451, line: 72, type: !390)
!6455 = !DILocation(line: 0, scope: !6450)
!6456 = !DILocation(line: 81, column: 2, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6450, file: !6451, line: 81, column: 2)
!6458 = !{i64 2154803390}
!6459 = !DILocation(line: 82, column: 9, scope: !6450)
!6460 = !DILocation(line: 82, column: 2, scope: !6450)
!6461 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !6462, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6465)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{!103, !6057, !6464}
!6464 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!6465 = !{!6466, !6467, !6468, !6469}
!6466 = !DILocalVariable(name: "s", arg: 1, scope: !6461, file: !394, line: 46, type: !6057)
!6467 = !DILocalVariable(name: "stream", arg: 2, scope: !6461, file: !394, line: 46, type: !6464)
!6468 = !DILocalVariable(name: "len", scope: !6461, file: !394, line: 48, type: !103)
!6469 = !DILocalVariable(name: "ret", scope: !6461, file: !394, line: 49, type: !103)
!6470 = !DILocation(line: 0, scope: !6461)
!6471 = !DILocation(line: 48, column: 12, scope: !6461)
!6472 = !DILocation(line: 51, column: 8, scope: !6461)
!6473 = !DILocation(line: 53, column: 13, scope: !6461)
!6474 = !DILocation(line: 53, column: 9, scope: !6461)
!6475 = !DILocation(line: 53, column: 2, scope: !6461)
!6476 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !6477, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6479)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!200, !6358, !200, !200, !6464}
!6479 = !{!6480, !6481, !6482, !6483}
!6480 = !DILocalVariable(name: "ptr", arg: 1, scope: !6476, file: !394, line: 99, type: !6358)
!6481 = !DILocalVariable(name: "size", arg: 2, scope: !6476, file: !394, line: 99, type: !200)
!6482 = !DILocalVariable(name: "nitems", arg: 3, scope: !6476, file: !394, line: 99, type: !200)
!6483 = !DILocalVariable(name: "stream", arg: 4, scope: !6476, file: !394, line: 100, type: !6464)
!6484 = !DILocation(line: 0, scope: !6476)
!6485 = !DILocation(line: 102, column: 9, scope: !6476)
!6486 = !DILocation(line: 102, column: 2, scope: !6476)
!6487 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6451, file: !6451, line: 96, type: !6477, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6488)
!6488 = !{!6489, !6490, !6491, !6492}
!6489 = !DILocalVariable(name: "ptr", arg: 1, scope: !6487, file: !6451, line: 96, type: !6358)
!6490 = !DILocalVariable(name: "size", arg: 2, scope: !6487, file: !6451, line: 96, type: !200)
!6491 = !DILocalVariable(name: "nitems", arg: 3, scope: !6487, file: !6451, line: 96, type: !200)
!6492 = !DILocalVariable(name: "stream", arg: 4, scope: !6487, file: !6451, line: 96, type: !6464)
!6493 = !DILocation(line: 0, scope: !6487)
!6494 = !DILocation(line: 107, column: 2, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6487, file: !6451, line: 107, column: 2)
!6496 = !{i64 2154803494}
!6497 = !DILocation(line: 108, column: 9, scope: !6487)
!6498 = !DILocation(line: 108, column: 2, scope: !6487)
!6499 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !6477, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6500)
!6500 = !{!6501, !6502, !6503, !6504, !6505, !6506, !6507, !6508}
!6501 = !DILocalVariable(name: "ptr", arg: 1, scope: !6499, file: !394, line: 56, type: !6358)
!6502 = !DILocalVariable(name: "size", arg: 2, scope: !6499, file: !394, line: 56, type: !200)
!6503 = !DILocalVariable(name: "nitems", arg: 3, scope: !6499, file: !394, line: 57, type: !200)
!6504 = !DILocalVariable(name: "stream", arg: 4, scope: !6499, file: !394, line: 57, type: !6464)
!6505 = !DILocalVariable(name: "i", scope: !6499, file: !394, line: 59, type: !200)
!6506 = !DILocalVariable(name: "j", scope: !6499, file: !394, line: 60, type: !200)
!6507 = !DILocalVariable(name: "p", scope: !6499, file: !394, line: 61, type: !2612)
!6508 = !DILabel(scope: !6499, name: "done", file: !394, line: 82)
!6509 = !DILocation(line: 0, scope: !6499)
!6510 = !DILocation(line: 63, column: 14, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6499, file: !394, line: 63, column: 6)
!6512 = !DILocation(line: 63, column: 24, scope: !6511)
!6513 = !DILocation(line: 72, column: 3, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6499, file: !394, line: 70, column: 5)
!6515 = !DILocation(line: 0, scope: !6514)
!6516 = !DILocation(line: 73, column: 8, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !394, line: 73, column: 8)
!6518 = distinct !DILexicalBlock(scope: !6514, file: !394, line: 72, column: 6)
!6519 = !DILocation(line: 73, column: 29, scope: !6517)
!6520 = !DILocation(line: 73, column: 27, scope: !6517)
!6521 = !DILocation(line: 73, column: 21, scope: !6517)
!6522 = !DILocation(line: 73, column: 33, scope: !6517)
!6523 = !DILocation(line: 73, column: 8, scope: !6518)
!6524 = !DILocation(line: 76, column: 5, scope: !6518)
!6525 = !DILocation(line: 77, column: 14, scope: !6514)
!6526 = !DILocation(line: 77, column: 3, scope: !6518)
!6527 = distinct !{!6527, !6513, !6528}
!6528 = !DILocation(line: 77, column: 17, scope: !6514)
!6529 = !DILocation(line: 79, column: 4, scope: !6514)
!6530 = !DILocation(line: 80, column: 13, scope: !6499)
!6531 = !DILocation(line: 80, column: 2, scope: !6514)
!6532 = distinct !{!6532, !6533, !6534}
!6533 = !DILocation(line: 70, column: 2, scope: !6499)
!6534 = !DILocation(line: 80, column: 16, scope: !6499)
!6535 = !DILocation(line: 82, column: 1, scope: !6499)
!6536 = !DILocation(line: 83, column: 17, scope: !6499)
!6537 = !DILocation(line: 83, column: 2, scope: !6499)
!6538 = !DILocation(line: 84, column: 1, scope: !6499)
!6539 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !6540, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6542)
!6540 = !DISubroutineType(types: !6541)
!6541 = !{!103, !144}
!6542 = !{!6543}
!6543 = !DILocalVariable(name: "s", arg: 1, scope: !6539, file: !394, line: 106, type: !144)
!6544 = !DILocation(line: 0, scope: !6539)
!6545 = !DILocation(line: 108, column: 6, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6539, file: !394, line: 108, column: 6)
!6547 = !DILocation(line: 108, column: 23, scope: !6546)
!6548 = !DILocation(line: 108, column: 6, scope: !6539)
!6549 = !DILocation(line: 112, column: 9, scope: !6539)
!6550 = !DILocation(line: 112, column: 29, scope: !6539)
!6551 = !DILocation(line: 112, column: 2, scope: !6539)
!6552 = !DILocation(line: 113, column: 1, scope: !6539)
!6553 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !526, file: !526, line: 368, type: !579, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6554)
!6554 = !{!6555}
!6555 = !DILocalVariable(name: "dev", arg: 1, scope: !6553, file: !526, line: 368, type: !555)
!6556 = !DILocation(line: 0, scope: !6553)
!6557 = !DILocation(line: 370, column: 2, scope: !6553)
!6558 = !DILocation(line: 371, column: 1, scope: !6553)
!6559 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !526, file: !526, line: 243, type: !6560, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6562)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{null, !103, !103, !555}
!6562 = !{!6563, !6564, !6565, !6566, !6568}
!6563 = !DILocalVariable(name: "min", arg: 1, scope: !6559, file: !526, line: 243, type: !103)
!6564 = !DILocalVariable(name: "max", arg: 2, scope: !6559, file: !526, line: 243, type: !103)
!6565 = !DILocalVariable(name: "dev", arg: 3, scope: !6559, file: !526, line: 243, type: !555)
!6566 = !DILocalVariable(name: "data", scope: !6559, file: !526, line: 245, type: !6567)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!6568 = !DILocalVariable(name: "line", scope: !6559, file: !526, line: 246, type: !103)
!6569 = !DILocation(line: 0, scope: !6559)
!6570 = !DILocation(line: 245, column: 38, scope: !6559)
!6571 = !DILocation(line: 249, column: 24, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !526, line: 249, column: 2)
!6573 = distinct !DILexicalBlock(scope: !6559, file: !526, line: 249, column: 2)
!6574 = !DILocation(line: 249, column: 2, scope: !6573)
!6575 = !DILocation(line: 251, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !526, line: 251, column: 7)
!6577 = distinct !DILexicalBlock(scope: !6572, file: !526, line: 249, column: 39)
!6578 = !DILocation(line: 251, column: 7, scope: !6577)
!6579 = !DILocation(line: 253, column: 4, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6576, file: !526, line: 251, column: 36)
!6581 = !DILocation(line: 256, column: 24, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6580, file: !526, line: 256, column: 8)
!6583 = !DILocation(line: 256, column: 9, scope: !6582)
!6584 = !DILocation(line: 256, column: 8, scope: !6580)
!6585 = !DILocation(line: 260, column: 43, scope: !6580)
!6586 = !DILocation(line: 260, column: 4, scope: !6580)
!6587 = !DILocation(line: 261, column: 3, scope: !6580)
!6588 = !DILocation(line: 249, column: 35, scope: !6572)
!6589 = distinct !{!6589, !6574, !6590}
!6590 = !DILocation(line: 262, column: 2, scope: !6573)
!6591 = !DILocation(line: 263, column: 1, scope: !6559)
!6592 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !526, file: !526, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6593)
!6593 = !{!6594}
!6594 = !DILocalVariable(name: "line", arg: 1, scope: !6592, file: !526, line: 158, type: !103)
!6595 = !DILocation(line: 0, scope: !6592)
!6596 = !DILocation(line: 170, column: 38, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !526, line: 160, column: 17)
!6598 = distinct !DILexicalBlock(scope: !6592, file: !526, line: 160, column: 6)
!6599 = !DILocation(line: 170, column: 10, scope: !6597)
!6600 = !DILocation(line: 176, column: 1, scope: !6592)
!6601 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !526, file: !526, line: 183, type: !6602, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6604)
!6602 = !DISubroutineType(types: !6603)
!6603 = !{null, !103}
!6604 = !{!6605}
!6605 = !DILocalVariable(name: "line", arg: 1, scope: !6601, file: !526, line: 183, type: !103)
!6606 = !DILocation(line: 0, scope: !6601)
!6607 = !DILocation(line: 195, column: 28, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6609, file: !526, line: 185, column: 17)
!6609 = distinct !DILexicalBlock(scope: !6601, file: !526, line: 185, column: 6)
!6610 = !DILocation(line: 195, column: 3, scope: !6608)
!6611 = !DILocation(line: 200, column: 1, scope: !6601)
!6612 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6613, file: !6613, line: 910, type: !5048, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6614)
!6613 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6614 = !{!6615}
!6615 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6612, file: !6613, line: 910, type: !121)
!6616 = !DILocation(line: 0, scope: !6612)
!6617 = !DILocation(line: 912, column: 3, scope: !6612)
!6618 = !DILocation(line: 913, column: 1, scope: !6612)
!6619 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6613, file: !6613, line: 834, type: !5965, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6620)
!6620 = !{!6621}
!6621 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6619, file: !6613, line: 834, type: !121)
!6622 = !DILocation(line: 0, scope: !6619)
!6623 = !DILocation(line: 836, column: 11, scope: !6619)
!6624 = !DILocation(line: 836, column: 40, scope: !6619)
!6625 = !DILocation(line: 836, column: 3, scope: !6619)
!6626 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !526, file: !526, line: 304, type: !579, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6627)
!6627 = !{!6628}
!6628 = !DILocalVariable(name: "dev", arg: 1, scope: !6626, file: !526, line: 304, type: !555)
!6629 = !DILocation(line: 0, scope: !6626)
!6630 = !DILocation(line: 306, column: 2, scope: !6626)
!6631 = !DILocation(line: 307, column: 1, scope: !6626)
!6632 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !526, file: !526, line: 299, type: !579, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6633)
!6633 = !{!6634}
!6634 = !DILocalVariable(name: "dev", arg: 1, scope: !6632, file: !526, line: 299, type: !555)
!6635 = !DILocation(line: 0, scope: !6632)
!6636 = !DILocation(line: 301, column: 2, scope: !6632)
!6637 = !DILocation(line: 302, column: 1, scope: !6632)
!6638 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !526, file: !526, line: 294, type: !579, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6639)
!6639 = !{!6640}
!6640 = !DILocalVariable(name: "dev", arg: 1, scope: !6638, file: !526, line: 294, type: !555)
!6641 = !DILocation(line: 0, scope: !6638)
!6642 = !DILocation(line: 296, column: 2, scope: !6638)
!6643 = !DILocation(line: 297, column: 1, scope: !6638)
!6644 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !526, file: !526, line: 397, type: !579, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6645)
!6645 = !{!6646}
!6646 = !DILocalVariable(name: "dev", arg: 1, scope: !6644, file: !526, line: 397, type: !555)
!6647 = !DILocation(line: 0, scope: !6644)
!6648 = !DILocation(line: 399, column: 2, scope: !6644)
!6649 = !DILocation(line: 400, column: 1, scope: !6644)
!6650 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !526, file: !526, line: 392, type: !579, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6651)
!6651 = !{!6652}
!6652 = !DILocalVariable(name: "dev", arg: 1, scope: !6650, file: !526, line: 392, type: !555)
!6653 = !DILocation(line: 0, scope: !6650)
!6654 = !DILocation(line: 394, column: 2, scope: !6650)
!6655 = !DILocation(line: 395, column: 1, scope: !6650)
!6656 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !526, file: !526, line: 289, type: !579, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6657)
!6657 = !{!6658}
!6658 = !DILocalVariable(name: "dev", arg: 1, scope: !6656, file: !526, line: 289, type: !555)
!6659 = !DILocation(line: 0, scope: !6656)
!6660 = !DILocation(line: 291, column: 2, scope: !6656)
!6661 = !DILocation(line: 292, column: 1, scope: !6656)
!6662 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !526, file: !526, line: 387, type: !579, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6663)
!6663 = !{!6664}
!6664 = !DILocalVariable(name: "dev", arg: 1, scope: !6662, file: !526, line: 387, type: !555)
!6665 = !DILocation(line: 0, scope: !6662)
!6666 = !DILocation(line: 389, column: 2, scope: !6662)
!6667 = !DILocation(line: 390, column: 1, scope: !6662)
!6668 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !526, file: !526, line: 382, type: !579, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6669)
!6669 = !{!6670}
!6670 = !DILocalVariable(name: "dev", arg: 1, scope: !6668, file: !526, line: 382, type: !555)
!6671 = !DILocation(line: 0, scope: !6668)
!6672 = !DILocation(line: 384, column: 2, scope: !6668)
!6673 = !DILocation(line: 385, column: 1, scope: !6668)
!6674 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !526, file: !526, line: 373, type: !579, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6675)
!6675 = !{!6676}
!6676 = !DILocalVariable(name: "dev", arg: 1, scope: !6674, file: !526, line: 373, type: !555)
!6677 = !DILocation(line: 0, scope: !6674)
!6678 = !DILocation(line: 375, column: 2, scope: !6674)
!6679 = !DILocation(line: 376, column: 1, scope: !6674)
!6680 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !526, file: !526, line: 284, type: !579, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6681)
!6681 = !{!6682}
!6682 = !DILocalVariable(name: "dev", arg: 1, scope: !6680, file: !526, line: 284, type: !555)
!6683 = !DILocation(line: 0, scope: !6680)
!6684 = !DILocation(line: 286, column: 2, scope: !6680)
!6685 = !DILocation(line: 287, column: 1, scope: !6680)
!6686 = distinct !DISubprogram(name: "stm32_exti_init", scope: !526, file: !526, line: 416, type: !553, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6687)
!6687 = !{!6688}
!6688 = !DILocalVariable(name: "dev", arg: 1, scope: !6686, file: !526, line: 416, type: !555)
!6689 = !DILocation(line: 0, scope: !6686)
!6690 = !DILocation(line: 418, column: 2, scope: !6686)
!6691 = !DILocation(line: 420, column: 2, scope: !6686)
!6692 = !DILocation(line: 0, scope: !578)
!6693 = !DILocation(line: 493, column: 2, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !578, file: !526, line: 493, column: 2)
!6695 = !DILocation(line: 497, column: 2, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !578, file: !526, line: 497, column: 2)
!6697 = !DILocation(line: 507, column: 2, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !578, file: !526, line: 507, column: 2)
!6699 = !DILocation(line: 512, column: 2, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !578, file: !526, line: 512, column: 2)
!6701 = !DILocation(line: 516, column: 2, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !578, file: !526, line: 516, column: 2)
!6703 = !DILocation(line: 523, column: 2, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !578, file: !526, line: 523, column: 2)
!6705 = !DILocation(line: 527, column: 2, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !578, file: !526, line: 527, column: 2)
!6707 = !DILocation(line: 581, column: 2, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !578, file: !526, line: 581, column: 2)
!6709 = !DILocation(line: 586, column: 2, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !578, file: !526, line: 586, column: 2)
!6711 = !DILocation(line: 591, column: 2, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !578, file: !526, line: 591, column: 2)
!6713 = !DILocation(line: 595, column: 2, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !578, file: !526, line: 595, column: 2)
!6715 = !DILocation(line: 607, column: 1, scope: !578)
!6716 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !526, file: !526, line: 112, type: !6602, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6717)
!6717 = !{!6718, !6719}
!6718 = !DILocalVariable(name: "line", arg: 1, scope: !6716, file: !526, line: 112, type: !103)
!6719 = !DILocalVariable(name: "irqnum", scope: !6716, file: !526, line: 114, type: !103)
!6720 = !DILocation(line: 0, scope: !6716)
!6721 = !DILocation(line: 121, column: 11, scope: !6716)
!6722 = !DILocation(line: 130, column: 26, scope: !6716)
!6723 = !DILocation(line: 130, column: 2, scope: !6716)
!6724 = !DILocation(line: 134, column: 2, scope: !6716)
!6725 = !DILocation(line: 135, column: 1, scope: !6716)
!6726 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6613, file: !6613, line: 268, type: !5048, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6727)
!6727 = !{!6728}
!6728 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6726, file: !6613, line: 268, type: !121)
!6729 = !DILocation(line: 0, scope: !6726)
!6730 = !DILocation(line: 270, column: 3, scope: !6726)
!6731 = !DILocation(line: 271, column: 1, scope: !6726)
!6732 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !526, file: !526, line: 137, type: !6602, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6733)
!6733 = !{!6734}
!6734 = !DILocalVariable(name: "line", arg: 1, scope: !6732, file: !526, line: 137, type: !103)
!6735 = !DILocation(line: 0, scope: !6732)
!6736 = !DILocation(line: 141, column: 11, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6732, file: !526, line: 141, column: 6)
!6738 = !DILocation(line: 141, column: 6, scope: !6732)
!6739 = !DILocation(line: 145, column: 28, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6737, file: !526, line: 141, column: 17)
!6741 = !DILocation(line: 145, column: 3, scope: !6740)
!6742 = !DILocation(line: 147, column: 2, scope: !6740)
!6743 = !DILocation(line: 151, column: 1, scope: !6732)
!6744 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6613, file: !6613, line: 309, type: !5048, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6745)
!6745 = !{!6746}
!6746 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6744, file: !6613, line: 309, type: !121)
!6747 = !DILocation(line: 0, scope: !6744)
!6748 = !DILocation(line: 311, column: 3, scope: !6744)
!6749 = !DILocation(line: 312, column: 1, scope: !6744)
!6750 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !526, file: !526, line: 202, type: !6751, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6753)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{null, !103, !103}
!6753 = !{!6754, !6755}
!6754 = !DILocalVariable(name: "line", arg: 1, scope: !6750, file: !526, line: 202, type: !103)
!6755 = !DILocalVariable(name: "trigger", arg: 2, scope: !6750, file: !526, line: 202, type: !103)
!6756 = !DILocation(line: 0, scope: !6750)
!6757 = !DILocation(line: 211, column: 2, scope: !6750)
!6758 = !DILocation(line: 213, column: 36, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6750, file: !526, line: 211, column: 19)
!6760 = !DILocation(line: 213, column: 3, scope: !6759)
!6761 = !DILocation(line: 214, column: 3, scope: !6759)
!6762 = !DILocation(line: 215, column: 3, scope: !6759)
!6763 = !DILocation(line: 217, column: 35, scope: !6759)
!6764 = !DILocation(line: 217, column: 3, scope: !6759)
!6765 = !DILocation(line: 218, column: 3, scope: !6759)
!6766 = !DILocation(line: 219, column: 3, scope: !6759)
!6767 = !DILocation(line: 221, column: 36, scope: !6759)
!6768 = !DILocation(line: 221, column: 3, scope: !6759)
!6769 = !DILocation(line: 222, column: 3, scope: !6759)
!6770 = !DILocation(line: 223, column: 3, scope: !6759)
!6771 = !DILocation(line: 225, column: 35, scope: !6759)
!6772 = !DILocation(line: 225, column: 3, scope: !6759)
!6773 = !DILocation(line: 226, column: 3, scope: !6759)
!6774 = !DILocation(line: 227, column: 3, scope: !6759)
!6775 = !DILocation(line: 232, column: 1, scope: !6750)
!6776 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6613, file: !6613, line: 573, type: !5048, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6777)
!6777 = !{!6778}
!6778 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6776, file: !6613, line: 573, type: !121)
!6779 = !DILocation(line: 0, scope: !6776)
!6780 = !DILocation(line: 575, column: 3, scope: !6776)
!6781 = !DILocation(line: 577, column: 1, scope: !6776)
!6782 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6613, file: !6613, line: 703, type: !5048, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6783)
!6783 = !{!6784}
!6784 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6782, file: !6613, line: 703, type: !121)
!6785 = !DILocation(line: 0, scope: !6782)
!6786 = !DILocation(line: 705, column: 3, scope: !6782)
!6787 = !DILocation(line: 706, column: 1, scope: !6782)
!6788 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6613, file: !6613, line: 529, type: !5048, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6789)
!6789 = !{!6790}
!6790 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6788, file: !6613, line: 529, type: !121)
!6791 = !DILocation(line: 0, scope: !6788)
!6792 = !DILocation(line: 531, column: 3, scope: !6788)
!6793 = !DILocation(line: 533, column: 1, scope: !6788)
!6794 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6613, file: !6613, line: 661, type: !5048, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6795)
!6795 = !{!6796}
!6796 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6794, file: !6613, line: 661, type: !121)
!6797 = !DILocation(line: 0, scope: !6794)
!6798 = !DILocation(line: 663, column: 3, scope: !6794)
!6799 = !DILocation(line: 664, column: 1, scope: !6794)
!6800 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !526, file: !526, line: 433, type: !6801, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6803)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!103, !103, !566, !102}
!6803 = !{!6804, !6805, !6806, !6807, !6809}
!6804 = !DILocalVariable(name: "line", arg: 1, scope: !6800, file: !526, line: 433, type: !103)
!6805 = !DILocalVariable(name: "cb", arg: 2, scope: !6800, file: !526, line: 433, type: !566)
!6806 = !DILocalVariable(name: "arg", arg: 3, scope: !6800, file: !526, line: 433, type: !102)
!6807 = !DILocalVariable(name: "dev", scope: !6800, file: !526, line: 435, type: !6808)
!6808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!6809 = !DILocalVariable(name: "data", scope: !6800, file: !526, line: 436, type: !6567)
!6810 = !DILocation(line: 0, scope: !6800)
!6811 = !DILocation(line: 438, column: 21, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6800, file: !526, line: 438, column: 6)
!6813 = !DILocation(line: 438, column: 6, scope: !6812)
!6814 = !DILocation(line: 438, column: 6, scope: !6800)
!6815 = !DILocation(line: 442, column: 20, scope: !6800)
!6816 = !DILocation(line: 443, column: 17, scope: !6800)
!6817 = !DILocation(line: 443, column: 22, scope: !6800)
!6818 = !DILocation(line: 445, column: 2, scope: !6800)
!6819 = !DILocation(line: 446, column: 1, scope: !6800)
!6820 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !526, file: !526, line: 448, type: !6602, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6821)
!6821 = !{!6822, !6823, !6824}
!6822 = !DILocalVariable(name: "line", arg: 1, scope: !6820, file: !526, line: 448, type: !103)
!6823 = !DILocalVariable(name: "dev", scope: !6820, file: !526, line: 450, type: !6808)
!6824 = !DILocalVariable(name: "data", scope: !6820, file: !526, line: 451, type: !6567)
!6825 = !DILocation(line: 0, scope: !6820)
!6826 = !DILocation(line: 453, column: 17, scope: !6820)
!6827 = !DILocation(line: 453, column: 20, scope: !6820)
!6828 = !DILocation(line: 454, column: 17, scope: !6820)
!6829 = !DILocation(line: 454, column: 22, scope: !6820)
!6830 = !DILocation(line: 455, column: 1, scope: !6820)
!6831 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !709, file: !709, line: 183, type: !747, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6832)
!6832 = !{!6833, !6834, !6835, !6836, !6837}
!6833 = !DILocalVariable(name: "dev", arg: 1, scope: !6831, file: !709, line: 183, type: !738)
!6834 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6831, file: !709, line: 184, type: !749)
!6835 = !DILocalVariable(name: "pclken", scope: !6831, file: !709, line: 186, type: !699)
!6836 = !DILocalVariable(name: "reg", scope: !6831, file: !709, line: 187, type: !1295)
!6837 = !DILocalVariable(name: "reg_val", scope: !6831, file: !709, line: 188, type: !121)
!6838 = !DILocation(line: 0, scope: !6831)
!6839 = !DILocation(line: 192, column: 6, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6831, file: !709, line: 192, column: 6)
!6841 = !DILocation(line: 192, column: 6, scope: !6831)
!6842 = !DILocation(line: 197, column: 52, scope: !6831)
!6843 = !DILocation(line: 197, column: 8, scope: !6831)
!6844 = !DILocation(line: 198, column: 12, scope: !6831)
!6845 = !DILocation(line: 199, column: 21, scope: !6831)
!6846 = !DILocation(line: 199, column: 10, scope: !6831)
!6847 = !DILocation(line: 200, column: 7, scope: !6831)
!6848 = !DILocation(line: 202, column: 2, scope: !6831)
!6849 = !DILocation(line: 203, column: 1, scope: !6831)
!6850 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !709, file: !709, line: 205, type: !747, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6851)
!6851 = !{!6852, !6853, !6854, !6855, !6856}
!6852 = !DILocalVariable(name: "dev", arg: 1, scope: !6850, file: !709, line: 205, type: !738)
!6853 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6850, file: !709, line: 206, type: !749)
!6854 = !DILocalVariable(name: "pclken", scope: !6850, file: !709, line: 208, type: !699)
!6855 = !DILocalVariable(name: "reg", scope: !6850, file: !709, line: 209, type: !1295)
!6856 = !DILocalVariable(name: "reg_val", scope: !6850, file: !709, line: 210, type: !121)
!6857 = !DILocation(line: 0, scope: !6850)
!6858 = !DILocation(line: 214, column: 6, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6850, file: !709, line: 214, column: 6)
!6860 = !DILocation(line: 214, column: 6, scope: !6850)
!6861 = !DILocation(line: 219, column: 52, scope: !6850)
!6862 = !DILocation(line: 219, column: 8, scope: !6850)
!6863 = !DILocation(line: 220, column: 12, scope: !6850)
!6864 = !DILocation(line: 221, column: 22, scope: !6850)
!6865 = !DILocation(line: 221, column: 13, scope: !6850)
!6866 = !DILocation(line: 221, column: 10, scope: !6850)
!6867 = !DILocation(line: 222, column: 7, scope: !6850)
!6868 = !DILocation(line: 224, column: 2, scope: !6850)
!6869 = !DILocation(line: 225, column: 1, scope: !6850)
!6870 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !709, file: !709, line: 262, type: !763, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6871)
!6871 = !{!6872, !6873, !6874, !6875, !6876, !6877, !6878, !6879}
!6872 = !DILocalVariable(name: "clock", arg: 1, scope: !6870, file: !709, line: 262, type: !738)
!6873 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6870, file: !709, line: 263, type: !749)
!6874 = !DILocalVariable(name: "rate", arg: 3, scope: !6870, file: !709, line: 264, type: !705)
!6875 = !DILocalVariable(name: "pclken", scope: !6870, file: !709, line: 266, type: !699)
!6876 = !DILocalVariable(name: "ahb_clock", scope: !6870, file: !709, line: 273, type: !121)
!6877 = !DILocalVariable(name: "apb1_clock", scope: !6870, file: !709, line: 274, type: !121)
!6878 = !DILocalVariable(name: "apb2_clock", scope: !6870, file: !709, line: 276, type: !121)
!6879 = !DILocalVariable(name: "ahb3_clock", scope: !6870, file: !709, line: 286, type: !121)
!6880 = !DILocation(line: 0, scope: !6870)
!6881 = !DILocation(line: 273, column: 23, scope: !6870)
!6882 = !DILocation(line: 274, column: 24, scope: !6870)
!6883 = !DILocation(line: 299, column: 18, scope: !6870)
!6884 = !DILocation(line: 299, column: 2, scope: !6870)
!6885 = !DILocation(line: 319, column: 3, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6870, file: !709, line: 299, column: 23)
!6887 = !DILocation(line: 323, column: 3, scope: !6886)
!6888 = !DILocation(line: 346, column: 33, scope: !6886)
!6889 = !DILocation(line: 346, column: 11, scope: !6886)
!6890 = !DILocation(line: 350, column: 3, scope: !6886)
!6891 = !DILocation(line: 354, column: 33, scope: !6886)
!6892 = !DILocation(line: 354, column: 11, scope: !6886)
!6893 = !DILocation(line: 358, column: 3, scope: !6886)
!6894 = !DILocation(line: 374, column: 3, scope: !6886)
!6895 = !DILocation(line: 379, column: 3, scope: !6886)
!6896 = !DILocation(line: 0, scope: !6886)
!6897 = !DILocation(line: 396, column: 1, scope: !6870)
!6898 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !709, file: !709, line: 227, type: !779, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6899)
!6899 = !{!6900, !6901, !6902, !6903, !6904, !6905, !6906, !6907}
!6900 = !DILocalVariable(name: "dev", arg: 1, scope: !6898, file: !709, line: 227, type: !738)
!6901 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6898, file: !709, line: 228, type: !749)
!6902 = !DILocalVariable(name: "data", arg: 3, scope: !6898, file: !709, line: 229, type: !102)
!6903 = !DILocalVariable(name: "pclken", scope: !6898, file: !709, line: 233, type: !699)
!6904 = !DILocalVariable(name: "reg", scope: !6898, file: !709, line: 234, type: !1295)
!6905 = !DILocalVariable(name: "reg_val", scope: !6898, file: !709, line: 235, type: !121)
!6906 = !DILocalVariable(name: "dt_val", scope: !6898, file: !709, line: 235, type: !121)
!6907 = !DILocalVariable(name: "err", scope: !6898, file: !709, line: 236, type: !103)
!6908 = !DILocation(line: 0, scope: !6898)
!6909 = !DILocation(line: 241, column: 30, scope: !6898)
!6910 = !DILocation(line: 241, column: 8, scope: !6898)
!6911 = !DILocation(line: 242, column: 10, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6898, file: !709, line: 242, column: 6)
!6913 = !DILocation(line: 242, column: 6, scope: !6898)
!6914 = !DILocation(line: 247, column: 11, scope: !6898)
!6915 = !DILocation(line: 248, column: 6, scope: !6898)
!6916 = !DILocation(line: 247, column: 44, scope: !6898)
!6917 = !DILocation(line: 250, column: 6, scope: !6898)
!6918 = !DILocation(line: 249, column: 52, scope: !6898)
!6919 = !DILocation(line: 249, column: 8, scope: !6898)
!6920 = !DILocation(line: 251, column: 12, scope: !6898)
!6921 = !DILocation(line: 252, column: 10, scope: !6898)
!6922 = !DILocation(line: 253, column: 7, scope: !6898)
!6923 = !DILocation(line: 255, column: 2, scope: !6898)
!6924 = !DILocation(line: 260, column: 1, scope: !6898)
!6925 = distinct !DISubprogram(name: "enabled_clock", scope: !709, file: !709, line: 100, type: !6926, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6928)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!103, !121}
!6928 = !{!6929, !6930}
!6929 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6925, file: !709, line: 100, type: !121)
!6930 = !DILocalVariable(name: "r", scope: !6925, file: !709, line: 102, type: !103)
!6931 = !DILocation(line: 0, scope: !6925)
!6932 = !DILocation(line: 104, column: 2, scope: !6925)
!6933 = !DILocation(line: 180, column: 2, scope: !6925)
!6934 = !DILocation(line: 181, column: 1, scope: !6925)
!6935 = distinct !DISubprogram(name: "get_bus_clock", scope: !709, file: !709, line: 79, type: !6936, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6938)
!6936 = !DISubroutineType(types: !6937)
!6937 = !{!121, !121, !121}
!6938 = !{!6939, !6940}
!6939 = !DILocalVariable(name: "clock", arg: 1, scope: !6935, file: !709, line: 79, type: !121)
!6940 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6935, file: !709, line: 79, type: !121)
!6941 = !DILocation(line: 0, scope: !6935)
!6942 = !DILocation(line: 81, column: 15, scope: !6935)
!6943 = !DILocation(line: 81, column: 2, scope: !6935)
!6944 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !709, file: !709, line: 68, type: !6945, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6947)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!121, !121, !103, !103, !103}
!6947 = !{!6948, !6949, !6950, !6951}
!6948 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6944, file: !709, line: 68, type: !121)
!6949 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6944, file: !709, line: 69, type: !103)
!6950 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6944, file: !709, line: 70, type: !103)
!6951 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6944, file: !709, line: 71, type: !103)
!6952 = !DILocation(line: 0, scope: !6944)
!6953 = !DILocation(line: 75, column: 22, scope: !6944)
!6954 = !DILocation(line: 76, column: 13, scope: !6944)
!6955 = !DILocation(line: 75, column: 34, scope: !6944)
!6956 = !DILocation(line: 75, column: 2, scope: !6944)
!6957 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !709, file: !709, line: 641, type: !736, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !6958)
!6958 = !{!6959, !6960, !6961}
!6959 = !DILocalVariable(name: "dev", arg: 1, scope: !6957, file: !709, line: 641, type: !738)
!6960 = !DILocalVariable(name: "old_flash_freq", scope: !6957, file: !709, line: 664, type: !121)
!6961 = !DILocalVariable(name: "new_flash_freq", scope: !6957, file: !709, line: 665, type: !121)
!6962 = !DILocation(line: 0, scope: !6957)
!6963 = !DILocation(line: 646, column: 2, scope: !6957)
!6964 = !DILocation(line: 667, column: 19, scope: !6957)
!6965 = !DILocation(line: 674, column: 21, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6957, file: !709, line: 674, column: 6)
!6967 = !DILocation(line: 674, column: 6, scope: !6957)
!6968 = !DILocation(line: 675, column: 3, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6966, file: !709, line: 674, column: 59)
!6970 = !DILocation(line: 676, column: 2, scope: !6969)
!6971 = !DILocation(line: 680, column: 2, scope: !6957)
!6972 = !DILocation(line: 683, column: 2, scope: !6957)
!6973 = !DILocation(line: 690, column: 3, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !709, line: 689, column: 9)
!6975 = distinct !DILexicalBlock(scope: !6957, file: !709, line: 685, column: 6)
!6976 = !DILocation(line: 695, column: 2, scope: !6957)
!6977 = !DILocation(line: 696, column: 2, scope: !6957)
!6978 = !DILocation(line: 696, column: 9, scope: !6957)
!6979 = !DILocation(line: 696, column: 34, scope: !6957)
!6980 = distinct !{!6980, !6977, !6981}
!6981 = !DILocation(line: 697, column: 2, scope: !6957)
!6982 = !DILocation(line: 720, column: 21, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6957, file: !709, line: 720, column: 6)
!6984 = !DILocation(line: 720, column: 6, scope: !6957)
!6985 = !DILocation(line: 721, column: 3, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6983, file: !709, line: 720, column: 60)
!6987 = !DILocation(line: 722, column: 2, scope: !6986)
!6988 = !DILocation(line: 725, column: 18, scope: !6957)
!6989 = !DILocation(line: 728, column: 2, scope: !6957)
!6990 = !DILocation(line: 730, column: 2, scope: !6957)
!6991 = !DILocation(line: 745, column: 2, scope: !6957)
!6992 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6993, file: !6993, line: 3275, type: !5038, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!6993 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6994 = !DILocation(line: 3277, column: 21, scope: !6992)
!6995 = !DILocation(line: 3277, column: 3, scope: !6992)
!6996 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !709, file: !709, line: 507, type: !2843, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!6997 = !DILocation(line: 516, column: 4, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !709, line: 515, column: 10)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !709, line: 513, column: 7)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !709, line: 510, column: 37)
!7001 = distinct !DILexicalBlock(scope: !6996, file: !709, line: 510, column: 6)
!7002 = !DILocation(line: 526, column: 3, scope: !7000)
!7003 = !DILocation(line: 527, column: 3, scope: !7000)
!7004 = !DILocation(line: 527, column: 10, scope: !7000)
!7005 = !DILocation(line: 527, column: 31, scope: !7000)
!7006 = distinct !{!7006, !7003, !7007}
!7007 = !DILocation(line: 529, column: 3, scope: !7000)
!7008 = !DILocation(line: 583, column: 3, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !709, line: 577, column: 37)
!7010 = distinct !DILexicalBlock(scope: !6996, file: !709, line: 577, column: 6)
!7011 = !DILocation(line: 584, column: 3, scope: !7009)
!7012 = !DILocation(line: 584, column: 10, scope: !7009)
!7013 = !DILocation(line: 584, column: 31, scope: !7009)
!7014 = distinct !{!7014, !7011, !7015}
!7015 = !DILocation(line: 585, column: 3, scope: !7009)
!7016 = !DILocation(line: 627, column: 1, scope: !6996)
!7017 = distinct !DISubprogram(name: "set_up_plls", scope: !709, file: !709, line: 448, type: !2843, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7018 = !DILocation(line: 460, column: 6, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7017, file: !709, line: 460, column: 6)
!7020 = !DILocation(line: 460, column: 31, scope: !7019)
!7021 = !DILocation(line: 460, column: 6, scope: !7017)
!7022 = !DILocation(line: 461, column: 3, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7019, file: !709, line: 460, column: 67)
!7024 = !DILocation(line: 462, column: 3, scope: !7023)
!7025 = !DILocation(line: 463, column: 2, scope: !7023)
!7026 = !DILocation(line: 464, column: 2, scope: !7017)
!7027 = !DILocation(line: 488, column: 2, scope: !7017)
!7028 = !DILocation(line: 492, column: 2, scope: !7017)
!7029 = !DILocation(line: 496, column: 2, scope: !7017)
!7030 = !DILocation(line: 499, column: 2, scope: !7017)
!7031 = !DILocation(line: 500, column: 2, scope: !7017)
!7032 = !DILocation(line: 500, column: 9, scope: !7017)
!7033 = !DILocation(line: 500, column: 30, scope: !7017)
!7034 = distinct !{!7034, !7031, !7035}
!7035 = !DILocation(line: 502, column: 2, scope: !7017)
!7036 = !DILocation(line: 505, column: 1, scope: !7017)
!7037 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6993, file: !6993, line: 3224, type: !5048, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7038)
!7038 = !{!7039}
!7039 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7037, file: !6993, line: 3224, type: !121)
!7040 = !DILocation(line: 0, scope: !7037)
!7041 = !DILocation(line: 3226, column: 3, scope: !7037)
!7042 = !DILocation(line: 3227, column: 1, scope: !7037)
!7043 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6993, file: !6993, line: 3188, type: !5048, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7044)
!7044 = !{!7045}
!7045 = !DILocalVariable(name: "Source", arg: 1, scope: !7043, file: !6993, line: 3188, type: !121)
!7046 = !DILocation(line: 0, scope: !7043)
!7047 = !DILocation(line: 3190, column: 3, scope: !7043)
!7048 = !DILocation(line: 3191, column: 1, scope: !7043)
!7049 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6993, file: !6993, line: 3204, type: !5038, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7050 = !DILocation(line: 3206, column: 21, scope: !7049)
!7051 = !DILocation(line: 3206, column: 3, scope: !7049)
!7052 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6993, file: !6993, line: 3240, type: !5048, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7053)
!7053 = !{!7054}
!7054 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7052, file: !6993, line: 3240, type: !121)
!7055 = !DILocation(line: 0, scope: !7052)
!7056 = !DILocation(line: 3242, column: 3, scope: !7052)
!7057 = !DILocation(line: 3243, column: 1, scope: !7052)
!7058 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6993, file: !6993, line: 3256, type: !5048, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7059)
!7059 = !{!7060}
!7060 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7058, file: !6993, line: 3256, type: !121)
!7061 = !DILocation(line: 0, scope: !7058)
!7062 = !DILocation(line: 3258, column: 3, scope: !7058)
!7063 = !DILocation(line: 3259, column: 1, scope: !7058)
!7064 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !709, file: !709, line: 409, type: !2843, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7065 = !DILocation(line: 412, column: 6, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7064, file: !709, line: 412, column: 6)
!7067 = !DILocation(line: 412, column: 27, scope: !7066)
!7068 = !DILocation(line: 412, column: 6, scope: !7064)
!7069 = !DILocation(line: 414, column: 3, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7066, file: !709, line: 412, column: 33)
!7071 = !DILocation(line: 415, column: 3, scope: !7070)
!7072 = !DILocation(line: 415, column: 10, scope: !7070)
!7073 = !DILocation(line: 415, column: 31, scope: !7070)
!7074 = distinct !{!7074, !7071, !7075}
!7075 = !DILocation(line: 417, column: 3, scope: !7070)
!7076 = !DILocation(line: 421, column: 2, scope: !7064)
!7077 = !DILocation(line: 422, column: 2, scope: !7064)
!7078 = !DILocation(line: 422, column: 9, scope: !7064)
!7079 = !DILocation(line: 422, column: 34, scope: !7064)
!7080 = distinct !{!7080, !7077, !7081}
!7081 = !DILocation(line: 423, column: 2, scope: !7064)
!7082 = !DILocation(line: 424, column: 1, scope: !7064)
!7083 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6993, file: !6993, line: 4195, type: !2843, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7084 = !DILocation(line: 4197, column: 3, scope: !7083)
!7085 = !DILocation(line: 4198, column: 1, scope: !7083)
!7086 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6993, file: !6993, line: 4184, type: !2843, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7087 = !DILocation(line: 4186, column: 3, scope: !7086)
!7088 = !DILocation(line: 4187, column: 1, scope: !7086)
!7089 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6993, file: !6993, line: 4205, type: !5038, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7090 = !DILocation(line: 4207, column: 11, scope: !7089)
!7091 = !DILocation(line: 4207, column: 44, scope: !7089)
!7092 = !DILocation(line: 4207, column: 3, scope: !7089)
!7093 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6993, file: !6993, line: 3007, type: !5038, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7094 = !DILocation(line: 3009, column: 11, scope: !7093)
!7095 = !DILocation(line: 3009, column: 44, scope: !7093)
!7096 = !DILocation(line: 3009, column: 3, scope: !7093)
!7097 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6993, file: !6993, line: 2987, type: !2843, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7098 = !DILocation(line: 2989, column: 3, scope: !7097)
!7099 = !DILocation(line: 2990, column: 1, scope: !7097)
!7100 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6993, file: !6993, line: 2939, type: !2843, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7101 = !DILocation(line: 2941, column: 3, scope: !7100)
!7102 = !DILocation(line: 2942, column: 1, scope: !7100)
!7103 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6993, file: !6993, line: 2949, type: !2843, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7104 = !DILocation(line: 2951, column: 3, scope: !7103)
!7105 = !DILocation(line: 2952, column: 1, scope: !7103)
!7106 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6993, file: !6993, line: 2969, type: !5038, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7107 = !DILocation(line: 2971, column: 11, scope: !7106)
!7108 = !DILocation(line: 2971, column: 44, scope: !7106)
!7109 = !DILocation(line: 2971, column: 3, scope: !7106)
!7110 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6993, file: !6993, line: 3143, type: !2843, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7111 = !DILocation(line: 3145, column: 3, scope: !7110)
!7112 = !DILocation(line: 3146, column: 1, scope: !7110)
!7113 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6993, file: !6993, line: 3163, type: !5038, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !322)
!7114 = !DILocation(line: 3165, column: 11, scope: !7113)
!7115 = !DILocation(line: 3165, column: 46, scope: !7113)
!7116 = !DILocation(line: 3165, column: 3, scope: !7113)
!7117 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7118, file: !7118, line: 40, type: !5038, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !322)
!7118 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7119 = !DILocation(line: 45, column: 3, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !7118, line: 44, column: 44)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !7118, line: 44, column: 13)
!7122 = distinct !DILexicalBlock(scope: !7117, file: !7118, line: 42, column: 6)
!7123 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7118, file: !7118, line: 56, type: !2843, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !322)
!7124 = !DILocation(line: 58, column: 2, scope: !7123)
!7125 = !DILocation(line: 62, column: 1, scope: !7123)
!7126 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6993, file: !6993, line: 4304, type: !7127, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !7129)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{null, !121, !121, !121, !121}
!7129 = !{!7130, !7131, !7132, !7133}
!7130 = !DILocalVariable(name: "Source", arg: 1, scope: !7126, file: !6993, line: 4304, type: !121)
!7131 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7126, file: !6993, line: 4304, type: !121)
!7132 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7126, file: !6993, line: 4304, type: !121)
!7133 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7126, file: !6993, line: 4304, type: !121)
!7134 = !DILocation(line: 0, scope: !7126)
!7135 = !DILocation(line: 4306, column: 3, scope: !7126)
!7136 = !DILocation(line: 4308, column: 3, scope: !7126)
!7137 = !DILocation(line: 4312, column: 1, scope: !7126)
!7138 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7118, file: !7118, line: 69, type: !2843, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !322)
!7139 = !DILocation(line: 72, column: 2, scope: !7138)
!7140 = !DILocation(line: 73, column: 1, scope: !7138)
!7141 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7142, file: !7142, line: 1185, type: !5048, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !7143)
!7142 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7143 = !{!7144, !7145}
!7144 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7141, file: !7142, line: 1185, type: !121)
!7145 = !DILocalVariable(name: "tmpreg", scope: !7141, file: !7142, line: 1187, type: !120)
!7146 = !DILocation(line: 0, scope: !7141)
!7147 = !DILocation(line: 1187, column: 3, scope: !7141)
!7148 = !DILocation(line: 1187, column: 17, scope: !7141)
!7149 = !DILocation(line: 1188, column: 3, scope: !7141)
!7150 = !DILocation(line: 1190, column: 12, scope: !7141)
!7151 = !DILocation(line: 1190, column: 10, scope: !7141)
!7152 = !DILocation(line: 1191, column: 9, scope: !7141)
!7153 = !DILocation(line: 1192, column: 1, scope: !7141)
!7154 = distinct !DISubprogram(name: "uart_console_init", scope: !840, file: !840, line: 588, type: !817, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !7155)
!7155 = !{!7156}
!7156 = !DILocalVariable(name: "arg", arg: 1, scope: !7154, file: !840, line: 588, type: !795)
!7157 = !DILocation(line: 0, scope: !7154)
!7158 = !DILocation(line: 593, column: 7, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7154, file: !840, line: 593, column: 6)
!7160 = !DILocation(line: 593, column: 6, scope: !7154)
!7161 = !DILocation(line: 597, column: 2, scope: !7154)
!7162 = !DILocation(line: 599, column: 2, scope: !7154)
!7163 = !DILocation(line: 600, column: 1, scope: !7154)
!7164 = distinct !DISubprogram(name: "device_is_ready", scope: !2976, file: !2976, line: 47, type: !7165, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !7167)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!157, !795}
!7167 = !{!7168}
!7168 = !DILocalVariable(name: "dev", arg: 1, scope: !7164, file: !2976, line: 47, type: !795)
!7169 = !DILocation(line: 0, scope: !7164)
!7170 = !DILocation(line: 55, column: 2, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7164, file: !2976, line: 55, column: 2)
!7172 = !{i64 2154951470}
!7173 = !DILocation(line: 56, column: 9, scope: !7164)
!7174 = !DILocation(line: 56, column: 2, scope: !7164)
!7175 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !840, file: !840, line: 573, type: !2843, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !322)
!7176 = !DILocation(line: 576, column: 2, scope: !7175)
!7177 = !DILocation(line: 579, column: 2, scope: !7175)
!7178 = !DILocation(line: 581, column: 1, scope: !7175)
!7179 = distinct !DISubprogram(name: "console_out", scope: !840, file: !840, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !7180)
!7180 = !{!7181}
!7181 = !DILocalVariable(name: "c", arg: 1, scope: !7179, file: !840, line: 77, type: !103)
!7182 = !DILocation(line: 0, scope: !7179)
!7183 = !DILocation(line: 89, column: 11, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7179, file: !840, line: 89, column: 6)
!7185 = !DILocation(line: 89, column: 6, scope: !7179)
!7186 = !DILocation(line: 90, column: 3, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7184, file: !840, line: 89, column: 17)
!7188 = !DILocation(line: 91, column: 2, scope: !7187)
!7189 = !DILocation(line: 92, column: 34, scope: !7179)
!7190 = !DILocation(line: 92, column: 2, scope: !7179)
!7191 = !DILocation(line: 94, column: 2, scope: !7179)
!7192 = distinct !DISubprogram(name: "uart_poll_out", scope: !7193, file: !7193, line: 95, type: !813, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !7194)
!7193 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/blinky")
!7194 = !{!7195, !7196}
!7195 = !DILocalVariable(name: "dev", arg: 1, scope: !7192, file: !7193, line: 95, type: !795)
!7196 = !DILocalVariable(name: "out_char", arg: 2, scope: !7192, file: !7193, line: 95, type: !155)
!7197 = !DILocation(line: 0, scope: !7192)
!7198 = !DILocation(line: 105, column: 2, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7192, file: !7193, line: 105, column: 2)
!7200 = !{i64 2155034861}
!7201 = !DILocation(line: 106, column: 2, scope: !7192)
!7202 = !DILocation(line: 107, column: 1, scope: !7192)
!7203 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !789, file: !789, line: 574, type: !813, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !7204)
!7204 = !{!7205, !7206, !7207}
!7205 = !DILocalVariable(name: "dev", arg: 1, scope: !7203, file: !789, line: 574, type: !795)
!7206 = !DILocalVariable(name: "out_char", arg: 2, scope: !7203, file: !789, line: 575, type: !155)
!7207 = !DILocalVariable(name: "api", scope: !7203, file: !789, line: 577, type: !786)
!7208 = !DILocation(line: 0, scope: !7203)
!7209 = !DILocation(line: 578, column: 40, scope: !7203)
!7210 = !DILocation(line: 580, column: 7, scope: !7203)
!7211 = !DILocation(line: 580, column: 2, scope: !7203)
!7212 = !DILocation(line: 581, column: 1, scope: !7203)
!7213 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7165, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !7214)
!7214 = !{!7215}
!7215 = !DILocalVariable(name: "dev", arg: 1, scope: !7213, file: !141, line: 730, type: !795)
!7216 = !DILocation(line: 0, scope: !7213)
!7217 = !DILocation(line: 732, column: 9, scope: !7213)
!7218 = !DILocation(line: 732, column: 2, scope: !7213)
!7219 = distinct !DISubprogram(name: "uart_register_input", scope: !840, file: !840, line: 560, type: !7220, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !7265)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{null, !7222, !7222, !7262}
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 32)
!7223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !7224)
!7224 = !{!7225}
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7223, file: !307, line: 2209, baseType: !7226, size: 128)
!7226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !7227)
!7227 = !{!7228, !7241, !7243}
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7226, file: !307, line: 1710, baseType: !7229, size: 64)
!7229 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7230, line: 46, baseType: !7231)
!7230 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7230, line: 41, size: 64, elements: !7232)
!7232 = !{!7233, !7240}
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7231, file: !7230, line: 42, baseType: !7234, size: 32)
!7234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7235, size: 32)
!7235 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7230, line: 39, baseType: !7236)
!7236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7230, line: 35, size: 32, elements: !7237)
!7237 = !{!7238}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7236, file: !7230, line: 36, baseType: !7239, size: 32)
!7239 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7230, line: 32, baseType: !121)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7231, file: !7230, line: 43, baseType: !7234, size: 32, offset: 32)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7226, file: !307, line: 1711, baseType: !7242, offset: 64)
!7242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7226, file: !307, line: 1712, baseType: !7244, size: 64, offset: 64)
!7244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !7245)
!7245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !7246)
!7246 = !{!7247}
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7245, file: !247, line: 232, baseType: !7248, size: 64)
!7248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !7249)
!7249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !7250)
!7250 = !{!7251, !7257}
!7251 = !DIDerivedType(tag: DW_TAG_member, scope: !7249, file: !221, line: 38, baseType: !7252, size: 32)
!7252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7249, file: !221, line: 38, size: 32, elements: !7253)
!7253 = !{!7254, !7256}
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7252, file: !221, line: 39, baseType: !7255, size: 32)
!7255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7249, size: 32)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7252, file: !221, line: 40, baseType: !7255, size: 32)
!7257 = !DIDerivedType(tag: DW_TAG_member, scope: !7249, file: !221, line: 42, baseType: !7258, size: 32, offset: 32)
!7258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7249, file: !221, line: 42, size: 32, elements: !7259)
!7259 = !{!7260, !7261}
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7258, file: !221, line: 43, baseType: !7255, size: 32)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7258, file: !221, line: 44, baseType: !7255, size: 32)
!7262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7263, size: 32)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!154, !977, !154}
!7265 = !{!7266, !7267, !7268}
!7266 = !DILocalVariable(name: "avail", arg: 1, scope: !7219, file: !840, line: 560, type: !7222)
!7267 = !DILocalVariable(name: "lines", arg: 2, scope: !7219, file: !840, line: 560, type: !7222)
!7268 = !DILocalVariable(name: "completion", arg: 3, scope: !7219, file: !840, line: 561, type: !7262)
!7269 = !DILocation(line: 0, scope: !7219)
!7270 = !DILocation(line: 566, column: 1, scope: !7219)
!7271 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1021, file: !1021, line: 523, type: !876, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7272)
!7272 = !{!7273, !7274, !7275, !7276, !7277}
!7273 = !DILocalVariable(name: "dev", arg: 1, scope: !7271, file: !1021, line: 523, type: !878)
!7274 = !DILocalVariable(name: "pin", arg: 2, scope: !7271, file: !1021, line: 524, type: !893)
!7275 = !DILocalVariable(name: "flags", arg: 3, scope: !7271, file: !1021, line: 524, type: !894)
!7276 = !DILocalVariable(name: "err", scope: !7271, file: !1021, line: 526, type: !103)
!7277 = !DILocalVariable(name: "pincfg", scope: !7271, file: !1021, line: 527, type: !103)
!7278 = !DILocation(line: 0, scope: !7271)
!7279 = !DILocation(line: 527, column: 2, scope: !7271)
!7280 = !DILocation(line: 532, column: 8, scope: !7271)
!7281 = !DILocation(line: 533, column: 10, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7271, file: !1021, line: 533, column: 6)
!7283 = !DILocation(line: 533, column: 6, scope: !7271)
!7284 = !DILocation(line: 543, column: 13, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7271, file: !1021, line: 543, column: 6)
!7286 = !DILocation(line: 543, column: 28, scope: !7285)
!7287 = !DILocation(line: 543, column: 6, scope: !7271)
!7288 = !DILocation(line: 544, column: 14, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !1021, line: 544, column: 7)
!7290 = distinct !DILexicalBlock(scope: !7285, file: !1021, line: 543, column: 34)
!7291 = !DILocation(line: 544, column: 39, scope: !7289)
!7292 = !DILocation(line: 544, column: 7, scope: !7290)
!7293 = !DILocation(line: 545, column: 38, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7289, file: !1021, line: 544, column: 45)
!7295 = !DILocation(line: 545, column: 4, scope: !7294)
!7296 = !DILocation(line: 546, column: 3, scope: !7294)
!7297 = !DILocation(line: 546, column: 21, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7289, file: !1021, line: 546, column: 14)
!7299 = !DILocation(line: 546, column: 45, scope: !7298)
!7300 = !DILocation(line: 546, column: 14, scope: !7289)
!7301 = !DILocation(line: 547, column: 40, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7298, file: !1021, line: 546, column: 51)
!7303 = !DILocation(line: 547, column: 4, scope: !7302)
!7304 = !DILocation(line: 548, column: 3, scope: !7302)
!7305 = !DILocation(line: 551, column: 32, scope: !7271)
!7306 = !DILocation(line: 551, column: 37, scope: !7271)
!7307 = !DILocation(line: 551, column: 2, scope: !7271)
!7308 = !DILocation(line: 554, column: 6, scope: !7271)
!7309 = !DILocation(line: 562, column: 1, scope: !7271)
!7310 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1021, file: !1021, line: 410, type: !7311, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7313)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{!103, !878, !705}
!7313 = !{!7314, !7315, !7316, !7318}
!7314 = !DILocalVariable(name: "dev", arg: 1, scope: !7310, file: !1021, line: 410, type: !878)
!7315 = !DILocalVariable(name: "value", arg: 2, scope: !7310, file: !1021, line: 410, type: !705)
!7316 = !DILocalVariable(name: "cfg", scope: !7310, file: !1021, line: 412, type: !7317)
!7317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!7318 = !DILocalVariable(name: "gpio", scope: !7310, file: !1021, line: 413, type: !951)
!7319 = !DILocation(line: 0, scope: !7310)
!7320 = !DILocation(line: 412, column: 45, scope: !7310)
!7321 = !DILocation(line: 413, column: 44, scope: !7310)
!7322 = !DILocation(line: 415, column: 11, scope: !7310)
!7323 = !DILocation(line: 415, column: 9, scope: !7310)
!7324 = !DILocation(line: 417, column: 2, scope: !7310)
!7325 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1021, file: !1021, line: 420, type: !903, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7326)
!7326 = !{!7327, !7328, !7329, !7330, !7331, !7332}
!7327 = !DILocalVariable(name: "dev", arg: 1, scope: !7325, file: !1021, line: 420, type: !878)
!7328 = !DILocalVariable(name: "mask", arg: 2, scope: !7325, file: !1021, line: 421, type: !905)
!7329 = !DILocalVariable(name: "value", arg: 3, scope: !7325, file: !1021, line: 422, type: !900)
!7330 = !DILocalVariable(name: "cfg", scope: !7325, file: !1021, line: 424, type: !7317)
!7331 = !DILocalVariable(name: "gpio", scope: !7325, file: !1021, line: 425, type: !951)
!7332 = !DILocalVariable(name: "port_value", scope: !7325, file: !1021, line: 426, type: !121)
!7333 = !DILocation(line: 0, scope: !7325)
!7334 = !DILocation(line: 424, column: 45, scope: !7325)
!7335 = !DILocation(line: 425, column: 44, scope: !7325)
!7336 = !DILocation(line: 430, column: 15, scope: !7325)
!7337 = !DILocation(line: 431, column: 46, scope: !7325)
!7338 = !DILocation(line: 431, column: 44, scope: !7325)
!7339 = !DILocation(line: 431, column: 61, scope: !7325)
!7340 = !DILocation(line: 431, column: 53, scope: !7325)
!7341 = !DILocation(line: 431, column: 2, scope: !7325)
!7342 = !DILocation(line: 435, column: 2, scope: !7325)
!7343 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1021, file: !1021, line: 438, type: !908, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7344)
!7344 = !{!7345, !7346, !7347, !7348}
!7345 = !DILocalVariable(name: "dev", arg: 1, scope: !7343, file: !1021, line: 438, type: !878)
!7346 = !DILocalVariable(name: "pins", arg: 2, scope: !7343, file: !1021, line: 439, type: !905)
!7347 = !DILocalVariable(name: "cfg", scope: !7343, file: !1021, line: 441, type: !7317)
!7348 = !DILocalVariable(name: "gpio", scope: !7343, file: !1021, line: 442, type: !951)
!7349 = !DILocation(line: 0, scope: !7343)
!7350 = !DILocation(line: 441, column: 45, scope: !7343)
!7351 = !DILocation(line: 442, column: 44, scope: !7343)
!7352 = !DILocation(line: 448, column: 2, scope: !7343)
!7353 = !DILocation(line: 450, column: 2, scope: !7343)
!7354 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1021, file: !1021, line: 453, type: !908, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7355)
!7355 = !{!7356, !7357, !7358, !7359}
!7356 = !DILocalVariable(name: "dev", arg: 1, scope: !7354, file: !1021, line: 453, type: !878)
!7357 = !DILocalVariable(name: "pins", arg: 2, scope: !7354, file: !1021, line: 454, type: !905)
!7358 = !DILocalVariable(name: "cfg", scope: !7354, file: !1021, line: 456, type: !7317)
!7359 = !DILocalVariable(name: "gpio", scope: !7354, file: !1021, line: 457, type: !951)
!7360 = !DILocation(line: 0, scope: !7354)
!7361 = !DILocation(line: 456, column: 45, scope: !7354)
!7362 = !DILocation(line: 457, column: 44, scope: !7354)
!7363 = !DILocation(line: 467, column: 2, scope: !7354)
!7364 = !DILocation(line: 470, column: 2, scope: !7354)
!7365 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1021, file: !1021, line: 473, type: !908, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7366)
!7366 = !{!7367, !7368, !7369, !7370}
!7367 = !DILocalVariable(name: "dev", arg: 1, scope: !7365, file: !1021, line: 473, type: !878)
!7368 = !DILocalVariable(name: "pins", arg: 2, scope: !7365, file: !1021, line: 474, type: !905)
!7369 = !DILocalVariable(name: "cfg", scope: !7365, file: !1021, line: 476, type: !7317)
!7370 = !DILocalVariable(name: "gpio", scope: !7365, file: !1021, line: 477, type: !951)
!7371 = !DILocation(line: 0, scope: !7365)
!7372 = !DILocation(line: 476, column: 45, scope: !7365)
!7373 = !DILocation(line: 477, column: 44, scope: !7365)
!7374 = !DILocation(line: 484, column: 2, scope: !7365)
!7375 = !DILocation(line: 487, column: 2, scope: !7365)
!7376 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1021, file: !1021, line: 594, type: !914, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7377)
!7377 = !{!7378, !7379, !7380, !7381, !7382, !7383, !7385, !7386, !7387}
!7378 = !DILocalVariable(name: "dev", arg: 1, scope: !7376, file: !1021, line: 594, type: !878)
!7379 = !DILocalVariable(name: "pin", arg: 2, scope: !7376, file: !1021, line: 595, type: !893)
!7380 = !DILocalVariable(name: "mode", arg: 3, scope: !7376, file: !1021, line: 596, type: !852)
!7381 = !DILocalVariable(name: "trig", arg: 4, scope: !7376, file: !1021, line: 597, type: !858)
!7382 = !DILocalVariable(name: "cfg", scope: !7376, file: !1021, line: 599, type: !7317)
!7383 = !DILocalVariable(name: "data", scope: !7376, file: !1021, line: 600, type: !7384)
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!7385 = !DILocalVariable(name: "edge", scope: !7376, file: !1021, line: 601, type: !103)
!7386 = !DILocalVariable(name: "err", scope: !7376, file: !1021, line: 602, type: !103)
!7387 = !DILabel(scope: !7376, name: "exit", file: !1021, line: 643)
!7388 = !DILocation(line: 0, scope: !7376)
!7389 = !DILocation(line: 599, column: 45, scope: !7376)
!7390 = !DILocation(line: 604, column: 6, scope: !7376)
!7391 = !DILocation(line: 605, column: 34, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !1021, line: 605, column: 7)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !1021, line: 604, column: 38)
!7394 = distinct !DILexicalBlock(scope: !7376, file: !1021, line: 604, column: 6)
!7395 = !DILocation(line: 605, column: 7, scope: !7392)
!7396 = !DILocation(line: 605, column: 47, scope: !7392)
!7397 = !DILocation(line: 605, column: 39, scope: !7392)
!7398 = !DILocation(line: 605, column: 7, scope: !7393)
!7399 = !DILocation(line: 606, column: 4, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7392, file: !1021, line: 605, column: 53)
!7401 = !DILocation(line: 607, column: 4, scope: !7400)
!7402 = !DILocation(line: 608, column: 4, scope: !7400)
!7403 = !DILocation(line: 609, column: 3, scope: !7400)
!7404 = !DILocation(line: 600, column: 38, scope: !7376)
!7405 = !DILocation(line: 620, column: 30, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7376, file: !1021, line: 620, column: 6)
!7407 = !DILocation(line: 620, column: 6, scope: !7406)
!7408 = !DILocation(line: 620, column: 57, scope: !7406)
!7409 = !DILocation(line: 620, column: 6, scope: !7376)
!7410 = !DILocation(line: 625, column: 29, scope: !7376)
!7411 = !DILocation(line: 625, column: 2, scope: !7376)
!7412 = !DILocation(line: 627, column: 2, scope: !7376)
!7413 = !DILocation(line: 630, column: 3, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7376, file: !1021, line: 627, column: 16)
!7415 = !DILocation(line: 633, column: 3, scope: !7414)
!7416 = !DILocation(line: 636, column: 3, scope: !7414)
!7417 = !DILocation(line: 639, column: 2, scope: !7376)
!7418 = !DILocation(line: 641, column: 2, scope: !7376)
!7419 = !DILocation(line: 643, column: 1, scope: !7376)
!7420 = !DILocation(line: 644, column: 2, scope: !7376)
!7421 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1021, file: !1021, line: 647, type: !918, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7422)
!7422 = !{!7423, !7424, !7425, !7426}
!7423 = !DILocalVariable(name: "dev", arg: 1, scope: !7421, file: !1021, line: 647, type: !878)
!7424 = !DILocalVariable(name: "callback", arg: 2, scope: !7421, file: !1021, line: 648, type: !920)
!7425 = !DILocalVariable(name: "set", arg: 3, scope: !7421, file: !1021, line: 649, type: !157)
!7426 = !DILocalVariable(name: "data", scope: !7421, file: !1021, line: 651, type: !7384)
!7427 = !DILocation(line: 0, scope: !7421)
!7428 = !DILocation(line: 651, column: 38, scope: !7421)
!7429 = !DILocation(line: 653, column: 37, scope: !7421)
!7430 = !DILocation(line: 653, column: 9, scope: !7421)
!7431 = !DILocation(line: 653, column: 2, scope: !7421)
!7432 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7433, file: !7433, line: 38, type: !7434, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7437)
!7433 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!103, !7436, !920, !157}
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!7437 = !{!7438, !7439, !7440}
!7438 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7432, file: !7433, line: 38, type: !7436)
!7439 = !DILocalVariable(name: "callback", arg: 2, scope: !7432, file: !7433, line: 39, type: !920)
!7440 = !DILocalVariable(name: "set", arg: 3, scope: !7432, file: !7433, line: 40, type: !157)
!7441 = !DILocation(line: 0, scope: !7432)
!7442 = !DILocation(line: 45, column: 7, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7432, file: !7433, line: 45, column: 6)
!7444 = !DILocation(line: 45, column: 6, scope: !7432)
!7445 = !DILocation(line: 46, column: 56, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !7433, line: 46, column: 7)
!7447 = distinct !DILexicalBlock(scope: !7443, file: !7433, line: 45, column: 38)
!7448 = !DILocation(line: 46, column: 8, scope: !7446)
!7449 = !DILocation(line: 46, column: 7, scope: !7447)
!7450 = !DILocation(line: 51, column: 13, scope: !7443)
!7451 = !DILocation(line: 56, column: 43, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !7433, line: 55, column: 11)
!7453 = distinct !DILexicalBlock(scope: !7432, file: !7433, line: 55, column: 6)
!7454 = !DILocation(line: 56, column: 3, scope: !7452)
!7455 = !DILocation(line: 57, column: 2, scope: !7452)
!7456 = !DILocation(line: 60, column: 1, scope: !7432)
!7457 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !925, file: !925, line: 261, type: !7458, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!157, !7436}
!7460 = !{!7461}
!7461 = !DILocalVariable(name: "list", arg: 1, scope: !7457, file: !925, line: 261, type: !7436)
!7462 = !DILocation(line: 0, scope: !7457)
!7463 = !DILocation(line: 261, column: 1, scope: !7457)
!7464 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !925, file: !925, line: 417, type: !7465, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7467)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{!157, !7436, !1097}
!7467 = !{!7468, !7469, !7470, !7471}
!7468 = !DILocalVariable(name: "list", arg: 1, scope: !7464, file: !925, line: 417, type: !7436)
!7469 = !DILocalVariable(name: "node", arg: 2, scope: !7464, file: !925, line: 417, type: !1097)
!7470 = !DILocalVariable(name: "prev", scope: !7464, file: !925, line: 417, type: !1097)
!7471 = !DILocalVariable(name: "test", scope: !7464, file: !925, line: 417, type: !1097)
!7472 = !DILocation(line: 0, scope: !7464)
!7473 = !DILocation(line: 417, column: 1, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7464, file: !925, line: 417, column: 1)
!7475 = !DILocation(line: 417, column: 1, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7474, file: !925, line: 417, column: 1)
!7477 = !DILocation(line: 417, column: 1, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !925, line: 417, column: 1)
!7479 = distinct !DILexicalBlock(scope: !7476, file: !925, line: 417, column: 1)
!7480 = !DILocation(line: 417, column: 1, scope: !7479)
!7481 = distinct !{!7481, !7473, !7473}
!7482 = !DILocation(line: 417, column: 1, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7478, file: !925, line: 417, column: 1)
!7484 = !DILocation(line: 417, column: 1, scope: !7464)
!7485 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !925, file: !925, line: 298, type: !7486, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7488)
!7486 = !DISubroutineType(types: !7487)
!7487 = !{null, !7436, !1097}
!7488 = !{!7489, !7490}
!7489 = !DILocalVariable(name: "list", arg: 1, scope: !7485, file: !925, line: 298, type: !7436)
!7490 = !DILocalVariable(name: "node", arg: 2, scope: !7485, file: !925, line: 298, type: !1097)
!7491 = !DILocation(line: 0, scope: !7485)
!7492 = !DILocation(line: 298, column: 1, scope: !7485)
!7493 = !DILocation(line: 298, column: 1, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7485, file: !925, line: 298, column: 1)
!7495 = !DILocation(line: 298, column: 1, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7494, file: !925, line: 298, column: 1)
!7497 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !925, file: !925, line: 231, type: !7498, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7500)
!7498 = !DISubroutineType(types: !7499)
!7499 = !{!1097, !7436}
!7500 = !{!7501}
!7501 = !DILocalVariable(name: "list", arg: 1, scope: !7497, file: !925, line: 231, type: !7436)
!7502 = !DILocation(line: 0, scope: !7497)
!7503 = !DILocation(line: 233, column: 15, scope: !7497)
!7504 = !DILocation(line: 233, column: 2, scope: !7497)
!7505 = distinct !DISubprogram(name: "z_snode_next_set", scope: !925, file: !925, line: 209, type: !7506, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7508)
!7506 = !DISubroutineType(types: !7507)
!7507 = !{null, !1097, !1097}
!7508 = !{!7509, !7510}
!7509 = !DILocalVariable(name: "parent", arg: 1, scope: !7505, file: !925, line: 209, type: !1097)
!7510 = !DILocalVariable(name: "child", arg: 2, scope: !7505, file: !925, line: 209, type: !1097)
!7511 = !DILocation(line: 0, scope: !7505)
!7512 = !DILocation(line: 211, column: 10, scope: !7505)
!7513 = !DILocation(line: 211, column: 15, scope: !7505)
!7514 = !DILocation(line: 212, column: 1, scope: !7505)
!7515 = distinct !DISubprogram(name: "z_slist_head_set", scope: !925, file: !925, line: 214, type: !7486, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7516)
!7516 = !{!7517, !7518}
!7517 = !DILocalVariable(name: "list", arg: 1, scope: !7515, file: !925, line: 214, type: !7436)
!7518 = !DILocalVariable(name: "node", arg: 2, scope: !7515, file: !925, line: 214, type: !1097)
!7519 = !DILocation(line: 0, scope: !7515)
!7520 = !DILocation(line: 216, column: 8, scope: !7515)
!7521 = !DILocation(line: 216, column: 13, scope: !7515)
!7522 = !DILocation(line: 217, column: 1, scope: !7515)
!7523 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !925, file: !925, line: 243, type: !7498, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7524)
!7524 = !{!7525}
!7525 = !DILocalVariable(name: "list", arg: 1, scope: !7523, file: !925, line: 243, type: !7436)
!7526 = !DILocation(line: 0, scope: !7523)
!7527 = !DILocation(line: 245, column: 15, scope: !7523)
!7528 = !DILocation(line: 245, column: 2, scope: !7523)
!7529 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !925, file: !925, line: 219, type: !7486, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7530)
!7530 = !{!7531, !7532}
!7531 = !DILocalVariable(name: "list", arg: 1, scope: !7529, file: !925, line: 219, type: !7436)
!7532 = !DILocalVariable(name: "node", arg: 2, scope: !7529, file: !925, line: 219, type: !1097)
!7533 = !DILocation(line: 0, scope: !7529)
!7534 = !DILocation(line: 221, column: 8, scope: !7529)
!7535 = !DILocation(line: 221, column: 13, scope: !7529)
!7536 = !DILocation(line: 222, column: 1, scope: !7529)
!7537 = distinct !DISubprogram(name: "sys_slist_remove", scope: !925, file: !925, line: 401, type: !7538, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7540)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{null, !7436, !1097, !1097}
!7540 = !{!7541, !7542, !7543}
!7541 = !DILocalVariable(name: "list", arg: 1, scope: !7537, file: !925, line: 401, type: !7436)
!7542 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7537, file: !925, line: 401, type: !1097)
!7543 = !DILocalVariable(name: "node", arg: 3, scope: !7537, file: !925, line: 401, type: !1097)
!7544 = !DILocation(line: 0, scope: !7537)
!7545 = !DILocation(line: 401, column: 1, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7537, file: !925, line: 401, column: 1)
!7547 = !DILocation(line: 0, scope: !7546)
!7548 = !DILocation(line: 401, column: 1, scope: !7537)
!7549 = !DILocation(line: 401, column: 1, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !925, line: 401, column: 1)
!7551 = !DILocation(line: 401, column: 1, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7550, file: !925, line: 401, column: 1)
!7553 = !DILocation(line: 401, column: 1, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7552, file: !925, line: 401, column: 1)
!7555 = !DILocation(line: 401, column: 1, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7546, file: !925, line: 401, column: 1)
!7557 = !DILocation(line: 401, column: 1, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7556, file: !925, line: 401, column: 1)
!7559 = !DILocation(line: 401, column: 1, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7558, file: !925, line: 401, column: 1)
!7561 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !925, file: !925, line: 285, type: !7562, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7564)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!1097, !1097}
!7564 = !{!7565}
!7565 = !DILocalVariable(name: "node", arg: 1, scope: !7561, file: !925, line: 285, type: !1097)
!7566 = !DILocation(line: 0, scope: !7561)
!7567 = !DILocation(line: 285, column: 1, scope: !7561)
!7568 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !925, file: !925, line: 274, type: !7562, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7569)
!7569 = !{!7570}
!7570 = !DILocalVariable(name: "node", arg: 1, scope: !7568, file: !925, line: 274, type: !1097)
!7571 = !DILocation(line: 0, scope: !7568)
!7572 = !DILocation(line: 274, column: 1, scope: !7568)
!7573 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !925, file: !925, line: 204, type: !7562, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7574)
!7574 = !{!7575}
!7575 = !DILocalVariable(name: "node", arg: 1, scope: !7573, file: !925, line: 204, type: !1097)
!7576 = !DILocation(line: 0, scope: !7573)
!7577 = !DILocation(line: 206, column: 15, scope: !7573)
!7578 = !DILocation(line: 206, column: 2, scope: !7573)
!7579 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1021, file: !1021, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7580)
!7580 = !{!7581, !7582, !7583}
!7581 = !DILocalVariable(name: "pin", arg: 1, scope: !7579, file: !1021, line: 342, type: !103)
!7582 = !DILocalVariable(name: "line", scope: !7579, file: !1021, line: 344, type: !121)
!7583 = !DILocalVariable(name: "port", scope: !7579, file: !1021, line: 345, type: !103)
!7584 = !DILocation(line: 0, scope: !7579)
!7585 = !DILocation(line: 344, column: 18, scope: !7579)
!7586 = !{i32 983040, i32 0}
!7587 = !DILocation(line: 356, column: 9, scope: !7579)
!7588 = !DILocation(line: 370, column: 2, scope: !7579)
!7589 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1021, file: !1021, line: 37, type: !569, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7590)
!7590 = !{!7591, !7592, !7593}
!7591 = !DILocalVariable(name: "line", arg: 1, scope: !7589, file: !1021, line: 37, type: !103)
!7592 = !DILocalVariable(name: "arg", arg: 2, scope: !7589, file: !1021, line: 37, type: !102)
!7593 = !DILocalVariable(name: "data", scope: !7589, file: !1021, line: 39, type: !7384)
!7594 = !DILocation(line: 0, scope: !7589)
!7595 = !DILocation(line: 41, column: 29, scope: !7589)
!7596 = !DILocation(line: 41, column: 39, scope: !7589)
!7597 = !DILocation(line: 41, column: 44, scope: !7589)
!7598 = !DILocation(line: 41, column: 2, scope: !7589)
!7599 = !DILocation(line: 42, column: 1, scope: !7589)
!7600 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1021, file: !1021, line: 376, type: !7601, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7603)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!103, !103, !103}
!7603 = !{!7604, !7605, !7606, !7608, !7609}
!7604 = !DILocalVariable(name: "port", arg: 1, scope: !7600, file: !1021, line: 376, type: !103)
!7605 = !DILocalVariable(name: "pin", arg: 2, scope: !7600, file: !1021, line: 376, type: !103)
!7606 = !DILocalVariable(name: "clk", scope: !7600, file: !1021, line: 386, type: !7607)
!7607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!7608 = !DILocalVariable(name: "pclken", scope: !7600, file: !1021, line: 387, type: !1140)
!7609 = !DILocalVariable(name: "ret", scope: !7600, file: !1021, line: 396, type: !103)
!7610 = !DILocation(line: 0, scope: !7600)
!7611 = !DILocation(line: 387, column: 2, scope: !7600)
!7612 = !DILocation(line: 387, column: 22, scope: !7600)
!7613 = !DILocation(line: 399, column: 8, scope: !7600)
!7614 = !DILocation(line: 400, column: 10, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7600, file: !1021, line: 400, column: 6)
!7616 = !DILocation(line: 400, column: 6, scope: !7600)
!7617 = !DILocation(line: 405, column: 2, scope: !7600)
!7618 = !DILocation(line: 407, column: 2, scope: !7600)
!7619 = !DILocation(line: 408, column: 1, scope: !7600)
!7620 = distinct !DISubprogram(name: "clock_control_on", scope: !656, file: !656, line: 123, type: !986, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7621)
!7621 = !{!7622, !7623, !7624}
!7622 = !DILocalVariable(name: "dev", arg: 1, scope: !7620, file: !656, line: 123, type: !878)
!7623 = !DILocalVariable(name: "sys", arg: 2, scope: !7620, file: !656, line: 124, type: !749)
!7624 = !DILocalVariable(name: "api", scope: !7620, file: !656, line: 126, type: !979)
!7625 = !DILocation(line: 0, scope: !7620)
!7626 = !DILocation(line: 127, column: 49, scope: !7620)
!7627 = !DILocation(line: 129, column: 14, scope: !7620)
!7628 = !DILocation(line: 129, column: 9, scope: !7620)
!7629 = !DILocation(line: 129, column: 2, scope: !7620)
!7630 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1021, file: !1021, line: 311, type: !6751, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7631)
!7631 = !{!7632, !7633, !7634}
!7632 = !DILocalVariable(name: "port", arg: 1, scope: !7630, file: !1021, line: 311, type: !103)
!7633 = !DILocalVariable(name: "pin", arg: 2, scope: !7630, file: !1021, line: 311, type: !103)
!7634 = !DILocalVariable(name: "line", scope: !7630, file: !1021, line: 313, type: !121)
!7635 = !DILocation(line: 0, scope: !7630)
!7636 = !DILocation(line: 313, column: 18, scope: !7630)
!7637 = !DILocation(line: 337, column: 2, scope: !7630)
!7638 = !DILocation(line: 340, column: 1, scope: !7630)
!7639 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1021, file: !1021, line: 295, type: !7640, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7642)
!7640 = !DISubroutineType(types: !7641)
!7641 = !{!121, !103}
!7642 = !{!7643}
!7643 = !DILocalVariable(name: "pin", arg: 1, scope: !7639, file: !1021, line: 295, type: !103)
!7644 = !DILocation(line: 0, scope: !7639)
!7645 = !DILocation(line: 307, column: 46, scope: !7639)
!7646 = !DILocation(line: 307, column: 27, scope: !7639)
!7647 = !DILocation(line: 307, column: 32, scope: !7639)
!7648 = !DILocation(line: 307, column: 14, scope: !7639)
!7649 = !DILocation(line: 307, column: 39, scope: !7639)
!7650 = !DILocation(line: 307, column: 2, scope: !7639)
!7651 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4804, file: !4804, line: 671, type: !7652, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7654)
!7652 = !DISubroutineType(types: !7653)
!7653 = !{null, !121, !121}
!7654 = !{!7655, !7656}
!7655 = !DILocalVariable(name: "Port", arg: 1, scope: !7651, file: !4804, line: 671, type: !121)
!7656 = !DILocalVariable(name: "Line", arg: 2, scope: !7651, file: !4804, line: 671, type: !121)
!7657 = !DILocation(line: 0, scope: !7651)
!7658 = !DILocation(line: 673, column: 3, scope: !7651)
!7659 = !DILocalVariable(name: "value", arg: 1, scope: !7660, file: !4957, line: 373, type: !121)
!7660 = distinct !DISubprogram(name: "__RBIT", scope: !4957, file: !4957, line: 373, type: !5965, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7661)
!7661 = !{!7659, !7662}
!7662 = !DILocalVariable(name: "result", scope: !7660, file: !4957, line: 375, type: !121)
!7663 = !DILocation(line: 0, scope: !7660, inlinedAt: !7664)
!7664 = distinct !DILocation(line: 673, column: 3, scope: !7651)
!7665 = !DILocation(line: 380, column: 4, scope: !7660, inlinedAt: !7664)
!7666 = !{i64 3499794}
!7667 = !DILocalVariable(name: "value", arg: 1, scope: !7668, file: !4957, line: 403, type: !121)
!7668 = distinct !DISubprogram(name: "__CLZ", scope: !4957, file: !4957, line: 403, type: !7669, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7671)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!154, !121}
!7671 = !{!7667}
!7672 = !DILocation(line: 0, scope: !7668, inlinedAt: !7673)
!7673 = distinct !DILocation(line: 673, column: 3, scope: !7651)
!7674 = !DILocation(line: 414, column: 7, scope: !7668, inlinedAt: !7673)
!7675 = !DILocation(line: 674, column: 1, scope: !7651)
!7676 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7433, file: !7433, line: 69, type: !7677, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7679)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{null, !7436, !878, !121}
!7679 = !{!7680, !7681, !7682, !7683, !7684}
!7680 = !DILocalVariable(name: "list", arg: 1, scope: !7676, file: !7433, line: 69, type: !7436)
!7681 = !DILocalVariable(name: "port", arg: 2, scope: !7676, file: !7433, line: 70, type: !878)
!7682 = !DILocalVariable(name: "pins", arg: 3, scope: !7676, file: !7433, line: 71, type: !121)
!7683 = !DILocalVariable(name: "cb", scope: !7676, file: !7433, line: 73, type: !920)
!7684 = !DILocalVariable(name: "tmp", scope: !7676, file: !7433, line: 73, type: !920)
!7685 = !DILocation(line: 0, scope: !7676)
!7686 = !DILocation(line: 75, column: 2, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7676, file: !7433, line: 75, column: 2)
!7688 = !DILocation(line: 0, scope: !7687)
!7689 = !DILocation(line: 76, column: 11, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7433, line: 76, column: 7)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !7433, line: 75, column: 57)
!7692 = distinct !DILexicalBlock(scope: !7687, file: !7433, line: 75, column: 2)
!7693 = !DILocation(line: 76, column: 20, scope: !7690)
!7694 = !DILocation(line: 76, column: 7, scope: !7691)
!7695 = !DILocation(line: 78, column: 8, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7690, file: !7433, line: 76, column: 28)
!7697 = !DILocation(line: 78, column: 4, scope: !7696)
!7698 = !DILocation(line: 79, column: 3, scope: !7696)
!7699 = !DILocation(line: 75, column: 2, scope: !7692)
!7700 = !DILocation(line: 81, column: 1, scope: !7676)
!7701 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4804, file: !4804, line: 710, type: !5965, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7702)
!7702 = !{!7703}
!7703 = !DILocalVariable(name: "Line", arg: 1, scope: !7701, file: !4804, line: 710, type: !121)
!7704 = !DILocation(line: 0, scope: !7701)
!7705 = !DILocation(line: 712, column: 21, scope: !7701)
!7706 = !DILocation(line: 0, scope: !7660, inlinedAt: !7707)
!7707 = distinct !DILocation(line: 712, column: 76, scope: !7701)
!7708 = !DILocation(line: 380, column: 4, scope: !7660, inlinedAt: !7707)
!7709 = !DILocation(line: 0, scope: !7668, inlinedAt: !7710)
!7710 = distinct !DILocation(line: 712, column: 76, scope: !7701)
!7711 = !DILocation(line: 414, column: 7, scope: !7668, inlinedAt: !7710)
!7712 = !DILocation(line: 712, column: 73, scope: !7701)
!7713 = !DILocation(line: 712, column: 3, scope: !7701)
!7714 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7715, file: !7715, line: 910, type: !7716, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7718)
!7715 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7716 = !DISubroutineType(types: !7717)
!7717 = !{null, !951, !121}
!7718 = !{!7719, !7720}
!7719 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7714, file: !7715, line: 910, type: !951)
!7720 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7714, file: !7715, line: 910, type: !121)
!7721 = !DILocation(line: 0, scope: !7714)
!7722 = !DILocation(line: 912, column: 3, scope: !7714)
!7723 = !DILocation(line: 913, column: 1, scope: !7714)
!7724 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7715, file: !7715, line: 823, type: !7725, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7727)
!7725 = !DISubroutineType(types: !7726)
!7726 = !{!121, !951}
!7727 = !{!7728}
!7728 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7724, file: !7715, line: 823, type: !951)
!7729 = !DILocation(line: 0, scope: !7724)
!7730 = !DILocation(line: 825, column: 21, scope: !7724)
!7731 = !DILocation(line: 825, column: 3, scope: !7724)
!7732 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7715, file: !7715, line: 812, type: !7716, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7733)
!7733 = !{!7734, !7735}
!7734 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7732, file: !7715, line: 812, type: !951)
!7735 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7732, file: !7715, line: 812, type: !121)
!7736 = !DILocation(line: 0, scope: !7732)
!7737 = !DILocation(line: 814, column: 3, scope: !7732)
!7738 = !DILocation(line: 815, column: 1, scope: !7732)
!7739 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7715, file: !7715, line: 771, type: !7725, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7740)
!7740 = !{!7741}
!7741 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7739, file: !7715, line: 771, type: !951)
!7742 = !DILocation(line: 0, scope: !7739)
!7743 = !DILocation(line: 773, column: 21, scope: !7739)
!7744 = !DILocation(line: 773, column: 3, scope: !7739)
!7745 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1021, file: !1021, line: 47, type: !7746, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7748)
!7746 = !DISubroutineType(types: !7747)
!7747 = !{!103, !894, !2294}
!7748 = !{!7749, !7750}
!7749 = !DILocalVariable(name: "flags", arg: 1, scope: !7745, file: !1021, line: 47, type: !894)
!7750 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7745, file: !1021, line: 47, type: !2294)
!7751 = !DILocation(line: 0, scope: !7745)
!7752 = !DILocation(line: 50, column: 13, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7745, file: !1021, line: 50, column: 6)
!7754 = !DILocation(line: 50, column: 28, scope: !7753)
!7755 = !DILocation(line: 50, column: 6, scope: !7745)
!7756 = !DILocation(line: 53, column: 11, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7753, file: !1021, line: 50, column: 34)
!7758 = !DILocation(line: 55, column: 14, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7757, file: !1021, line: 55, column: 7)
!7760 = !DILocation(line: 55, column: 35, scope: !7759)
!7761 = !DILocation(line: 55, column: 7, scope: !7757)
!7762 = !DILocation(line: 56, column: 14, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !1021, line: 56, column: 8)
!7764 = distinct !DILexicalBlock(scope: !7759, file: !1021, line: 55, column: 41)
!7765 = !DILocation(line: 56, column: 8, scope: !7764)
!7766 = !DILocation(line: 0, scope: !7759)
!7767 = !DILocation(line: 66, column: 14, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7757, file: !1021, line: 66, column: 7)
!7769 = !DILocation(line: 66, column: 30, scope: !7768)
!7770 = !DILocation(line: 66, column: 7, scope: !7757)
!7771 = !DILocation(line: 67, column: 12, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7768, file: !1021, line: 66, column: 36)
!7773 = !DILocation(line: 68, column: 3, scope: !7772)
!7774 = !DILocation(line: 68, column: 21, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7768, file: !1021, line: 68, column: 14)
!7776 = !DILocation(line: 68, column: 39, scope: !7775)
!7777 = !DILocation(line: 68, column: 14, scope: !7768)
!7778 = !DILocation(line: 69, column: 12, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7775, file: !1021, line: 68, column: 45)
!7780 = !DILocation(line: 70, column: 3, scope: !7779)
!7781 = !DILocation(line: 72, column: 21, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7753, file: !1021, line: 72, column: 14)
!7783 = !DILocation(line: 72, column: 35, scope: !7782)
!7784 = !DILocation(line: 72, column: 14, scope: !7753)
!7785 = !DILocation(line: 77, column: 14, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !1021, line: 77, column: 7)
!7787 = distinct !DILexicalBlock(scope: !7782, file: !1021, line: 72, column: 41)
!7788 = !DILocation(line: 77, column: 30, scope: !7786)
!7789 = !DILocation(line: 77, column: 7, scope: !7787)
!7790 = !DILocation(line: 0, scope: !7753)
!7791 = !DILocation(line: 90, column: 1, scope: !7745)
!7792 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1021, file: !1021, line: 157, type: !7793, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7795)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{null, !878, !103, !103, !103}
!7795 = !{!7796, !7797, !7798, !7799, !7800, !7801, !7802, !7803, !7804, !7805, !7806}
!7796 = !DILocalVariable(name: "dev", arg: 1, scope: !7792, file: !1021, line: 157, type: !878)
!7797 = !DILocalVariable(name: "pin", arg: 2, scope: !7792, file: !1021, line: 157, type: !103)
!7798 = !DILocalVariable(name: "conf", arg: 3, scope: !7792, file: !1021, line: 158, type: !103)
!7799 = !DILocalVariable(name: "func", arg: 4, scope: !7792, file: !1021, line: 158, type: !103)
!7800 = !DILocalVariable(name: "cfg", scope: !7792, file: !1021, line: 160, type: !7317)
!7801 = !DILocalVariable(name: "gpio", scope: !7792, file: !1021, line: 161, type: !951)
!7802 = !DILocalVariable(name: "pin_ll", scope: !7792, file: !1021, line: 163, type: !103)
!7803 = !DILocalVariable(name: "mode", scope: !7792, file: !1021, line: 227, type: !32)
!7804 = !DILocalVariable(name: "otype", scope: !7792, file: !1021, line: 227, type: !32)
!7805 = !DILocalVariable(name: "ospeed", scope: !7792, file: !1021, line: 227, type: !32)
!7806 = !DILocalVariable(name: "pupd", scope: !7792, file: !1021, line: 227, type: !32)
!7807 = !DILocation(line: 0, scope: !7792)
!7808 = !DILocation(line: 160, column: 45, scope: !7792)
!7809 = !DILocation(line: 161, column: 44, scope: !7792)
!7810 = !DILocation(line: 163, column: 15, scope: !7792)
!7811 = !DILocation(line: 229, column: 14, scope: !7792)
!7812 = !DILocation(line: 246, column: 47, scope: !7792)
!7813 = !DILocation(line: 246, column: 2, scope: !7792)
!7814 = !DILocation(line: 248, column: 43, scope: !7792)
!7815 = !DILocation(line: 248, column: 2, scope: !7792)
!7816 = !DILocation(line: 250, column: 40, scope: !7792)
!7817 = !DILocation(line: 250, column: 2, scope: !7792)
!7818 = !DILocation(line: 252, column: 11, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7792, file: !1021, line: 252, column: 6)
!7820 = !DILocation(line: 252, column: 6, scope: !7792)
!7821 = !DILocation(line: 253, column: 11, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !1021, line: 253, column: 7)
!7823 = distinct !DILexicalBlock(scope: !7819, file: !1021, line: 252, column: 36)
!7824 = !DILocation(line: 253, column: 7, scope: !7823)
!7825 = !DILocation(line: 254, column: 4, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !1021, line: 253, column: 16)
!7827 = !DILocation(line: 255, column: 3, scope: !7826)
!7828 = !DILocation(line: 256, column: 4, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7822, file: !1021, line: 255, column: 10)
!7830 = !DILocation(line: 260, column: 40, scope: !7792)
!7831 = !DILocation(line: 260, column: 2, scope: !7792)
!7832 = !DILocation(line: 265, column: 1, scope: !7792)
!7833 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1021, file: !1021, line: 137, type: !7640, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7834)
!7834 = !{!7835, !7836}
!7835 = !DILocalVariable(name: "pin", arg: 1, scope: !7833, file: !1021, line: 137, type: !103)
!7836 = !DILocalVariable(name: "pinval", scope: !7833, file: !1021, line: 139, type: !121)
!7837 = !DILocation(line: 0, scope: !7833)
!7838 = !DILocation(line: 149, column: 13, scope: !7833)
!7839 = !DILocation(line: 151, column: 2, scope: !7833)
!7840 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7715, file: !7715, line: 342, type: !7841, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7843)
!7841 = !DISubroutineType(types: !7842)
!7842 = !{null, !951, !121, !121}
!7843 = !{!7844, !7845, !7846}
!7844 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7840, file: !7715, line: 342, type: !951)
!7845 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7840, file: !7715, line: 342, type: !121)
!7846 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7840, file: !7715, line: 342, type: !121)
!7847 = !DILocation(line: 0, scope: !7840)
!7848 = !DILocation(line: 344, column: 3, scope: !7840)
!7849 = !DILocation(line: 345, column: 1, scope: !7840)
!7850 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7715, file: !7715, line: 413, type: !7841, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7851)
!7851 = !{!7852, !7853, !7854}
!7852 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7850, file: !7715, line: 413, type: !951)
!7853 = !DILocalVariable(name: "Pin", arg: 2, scope: !7850, file: !7715, line: 413, type: !121)
!7854 = !DILocalVariable(name: "Speed", arg: 3, scope: !7850, file: !7715, line: 413, type: !121)
!7855 = !DILocation(line: 0, scope: !7850)
!7856 = !DILocation(line: 415, column: 3, scope: !7850)
!7857 = !DILocation(line: 0, scope: !7660, inlinedAt: !7858)
!7858 = distinct !DILocation(line: 415, column: 3, scope: !7850)
!7859 = !DILocation(line: 380, column: 4, scope: !7660, inlinedAt: !7858)
!7860 = !DILocation(line: 0, scope: !7668, inlinedAt: !7861)
!7861 = distinct !DILocation(line: 415, column: 3, scope: !7850)
!7862 = !DILocation(line: 414, column: 7, scope: !7668, inlinedAt: !7861)
!7863 = !DILocation(line: 0, scope: !7660, inlinedAt: !7864)
!7864 = distinct !DILocation(line: 415, column: 3, scope: !7850)
!7865 = !DILocation(line: 0, scope: !7668, inlinedAt: !7866)
!7866 = distinct !DILocation(line: 415, column: 3, scope: !7850)
!7867 = !DILocation(line: 417, column: 1, scope: !7850)
!7868 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7715, file: !7715, line: 484, type: !7841, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7869)
!7869 = !{!7870, !7871, !7872}
!7870 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7868, file: !7715, line: 484, type: !951)
!7871 = !DILocalVariable(name: "Pin", arg: 2, scope: !7868, file: !7715, line: 484, type: !121)
!7872 = !DILocalVariable(name: "Pull", arg: 3, scope: !7868, file: !7715, line: 484, type: !121)
!7873 = !DILocation(line: 0, scope: !7868)
!7874 = !DILocation(line: 486, column: 3, scope: !7868)
!7875 = !DILocation(line: 0, scope: !7660, inlinedAt: !7876)
!7876 = distinct !DILocation(line: 486, column: 3, scope: !7868)
!7877 = !DILocation(line: 380, column: 4, scope: !7660, inlinedAt: !7876)
!7878 = !DILocation(line: 0, scope: !7668, inlinedAt: !7879)
!7879 = distinct !DILocation(line: 486, column: 3, scope: !7868)
!7880 = !DILocation(line: 414, column: 7, scope: !7668, inlinedAt: !7879)
!7881 = !DILocation(line: 0, scope: !7660, inlinedAt: !7882)
!7882 = distinct !DILocation(line: 486, column: 3, scope: !7868)
!7883 = !DILocation(line: 0, scope: !7668, inlinedAt: !7884)
!7884 = distinct !DILocation(line: 486, column: 3, scope: !7868)
!7885 = !DILocation(line: 487, column: 1, scope: !7868)
!7886 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7715, file: !7715, line: 556, type: !7841, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7887)
!7887 = !{!7888, !7889, !7890}
!7888 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7886, file: !7715, line: 556, type: !951)
!7889 = !DILocalVariable(name: "Pin", arg: 2, scope: !7886, file: !7715, line: 556, type: !121)
!7890 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7886, file: !7715, line: 556, type: !121)
!7891 = !DILocation(line: 0, scope: !7886)
!7892 = !DILocation(line: 558, column: 3, scope: !7886)
!7893 = !DILocation(line: 0, scope: !7660, inlinedAt: !7894)
!7894 = distinct !DILocation(line: 558, column: 3, scope: !7886)
!7895 = !DILocation(line: 380, column: 4, scope: !7660, inlinedAt: !7894)
!7896 = !DILocation(line: 0, scope: !7668, inlinedAt: !7897)
!7897 = distinct !DILocation(line: 558, column: 3, scope: !7886)
!7898 = !DILocation(line: 414, column: 7, scope: !7668, inlinedAt: !7897)
!7899 = !DILocation(line: 0, scope: !7660, inlinedAt: !7900)
!7900 = distinct !DILocation(line: 558, column: 3, scope: !7886)
!7901 = !DILocation(line: 0, scope: !7668, inlinedAt: !7902)
!7902 = distinct !DILocation(line: 558, column: 3, scope: !7886)
!7903 = !DILocation(line: 560, column: 1, scope: !7886)
!7904 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7715, file: !7715, line: 633, type: !7841, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7905)
!7905 = !{!7906, !7907, !7908}
!7906 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7904, file: !7715, line: 633, type: !951)
!7907 = !DILocalVariable(name: "Pin", arg: 2, scope: !7904, file: !7715, line: 633, type: !121)
!7908 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7904, file: !7715, line: 633, type: !121)
!7909 = !DILocation(line: 0, scope: !7904)
!7910 = !DILocation(line: 635, column: 3, scope: !7904)
!7911 = !DILocation(line: 0, scope: !7660, inlinedAt: !7912)
!7912 = distinct !DILocation(line: 635, column: 3, scope: !7904)
!7913 = !DILocation(line: 380, column: 4, scope: !7660, inlinedAt: !7912)
!7914 = !DILocation(line: 0, scope: !7668, inlinedAt: !7915)
!7915 = distinct !DILocation(line: 635, column: 3, scope: !7904)
!7916 = !DILocation(line: 414, column: 7, scope: !7668, inlinedAt: !7915)
!7917 = !DILocation(line: 0, scope: !7660, inlinedAt: !7918)
!7918 = distinct !DILocation(line: 635, column: 3, scope: !7904)
!7919 = !DILocation(line: 0, scope: !7668, inlinedAt: !7920)
!7920 = distinct !DILocation(line: 635, column: 3, scope: !7904)
!7921 = !DILocation(line: 637, column: 1, scope: !7904)
!7922 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7715, file: !7715, line: 273, type: !7841, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7923)
!7923 = !{!7924, !7925, !7926}
!7924 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7922, file: !7715, line: 273, type: !951)
!7925 = !DILocalVariable(name: "Pin", arg: 2, scope: !7922, file: !7715, line: 273, type: !121)
!7926 = !DILocalVariable(name: "Mode", arg: 3, scope: !7922, file: !7715, line: 273, type: !121)
!7927 = !DILocation(line: 0, scope: !7922)
!7928 = !DILocation(line: 275, column: 3, scope: !7922)
!7929 = !DILocation(line: 0, scope: !7660, inlinedAt: !7930)
!7930 = distinct !DILocation(line: 275, column: 3, scope: !7922)
!7931 = !DILocation(line: 380, column: 4, scope: !7660, inlinedAt: !7930)
!7932 = !DILocation(line: 0, scope: !7668, inlinedAt: !7933)
!7933 = distinct !DILocation(line: 275, column: 3, scope: !7922)
!7934 = !DILocation(line: 414, column: 7, scope: !7668, inlinedAt: !7933)
!7935 = !DILocation(line: 0, scope: !7660, inlinedAt: !7936)
!7936 = distinct !DILocation(line: 275, column: 3, scope: !7922)
!7937 = !DILocation(line: 0, scope: !7668, inlinedAt: !7938)
!7938 = distinct !DILocation(line: 275, column: 3, scope: !7922)
!7939 = !DILocation(line: 276, column: 1, scope: !7922)
!7940 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1021, file: !1021, line: 698, type: !1034, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7941)
!7941 = !{!7942, !7943, !7944}
!7942 = !DILocalVariable(name: "dev", arg: 1, scope: !7940, file: !1021, line: 698, type: !878)
!7943 = !DILocalVariable(name: "data", scope: !7940, file: !1021, line: 700, type: !7384)
!7944 = !DILocalVariable(name: "ret", scope: !7940, file: !1021, line: 701, type: !103)
!7945 = !DILocation(line: 0, scope: !7940)
!7946 = !DILocation(line: 700, column: 38, scope: !7940)
!7947 = !DILocation(line: 703, column: 8, scope: !7940)
!7948 = !DILocation(line: 703, column: 12, scope: !7940)
!7949 = !DILocation(line: 705, column: 7, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7940, file: !1021, line: 705, column: 6)
!7951 = !DILocation(line: 705, column: 6, scope: !7940)
!7952 = !DILocation(line: 722, column: 8, scope: !7940)
!7953 = !DILocation(line: 723, column: 10, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7940, file: !1021, line: 723, column: 6)
!7955 = !DILocation(line: 723, column: 6, scope: !7940)
!7956 = !DILocation(line: 731, column: 1, scope: !7940)
!7957 = distinct !DISubprogram(name: "device_is_ready", scope: !2976, file: !2976, line: 47, type: !7958, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7960)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{!157, !878}
!7960 = !{!7961}
!7961 = !DILocalVariable(name: "dev", arg: 1, scope: !7957, file: !2976, line: 47, type: !878)
!7962 = !DILocation(line: 0, scope: !7957)
!7963 = !DILocation(line: 55, column: 2, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7957, file: !2976, line: 55, column: 2)
!7965 = !{i64 2154942677}
!7966 = !DILocation(line: 56, column: 9, scope: !7957)
!7967 = !DILocation(line: 56, column: 2, scope: !7957)
!7968 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1021, file: !1021, line: 270, type: !7969, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7971)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{!103, !878, !157}
!7971 = !{!7972, !7973, !7974, !7975, !7976}
!7972 = !DILocalVariable(name: "dev", arg: 1, scope: !7968, file: !1021, line: 270, type: !878)
!7973 = !DILocalVariable(name: "on", arg: 2, scope: !7968, file: !1021, line: 270, type: !157)
!7974 = !DILocalVariable(name: "cfg", scope: !7968, file: !1021, line: 272, type: !7317)
!7975 = !DILocalVariable(name: "ret", scope: !7968, file: !1021, line: 273, type: !103)
!7976 = !DILocalVariable(name: "clk", scope: !7968, file: !1021, line: 278, type: !7607)
!7977 = !DILocation(line: 0, scope: !7968)
!7978 = !DILocation(line: 272, column: 45, scope: !7968)
!7979 = !DILocation(line: 282, column: 38, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7981, file: !1021, line: 280, column: 10)
!7981 = distinct !DILexicalBlock(scope: !7968, file: !1021, line: 280, column: 6)
!7982 = !DILocation(line: 282, column: 6, scope: !7980)
!7983 = !DILocation(line: 281, column: 9, scope: !7980)
!7984 = !DILocation(line: 293, column: 1, scope: !7968)
!7985 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7958, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7986)
!7986 = !{!7987}
!7987 = !DILocalVariable(name: "dev", arg: 1, scope: !7985, file: !141, line: 730, type: !878)
!7988 = !DILocation(line: 0, scope: !7985)
!7989 = !DILocation(line: 732, column: 9, scope: !7985)
!7990 = !DILocation(line: 732, column: 2, scope: !7985)
!7991 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1021, file: !1021, line: 496, type: !7992, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !7994)
!7992 = !DISubroutineType(types: !7993)
!7993 = !{!103, !878, !103, !103, !103}
!7994 = !{!7995, !7996, !7997, !7998, !7999, !8000}
!7995 = !DILocalVariable(name: "dev", arg: 1, scope: !7991, file: !1021, line: 496, type: !878)
!7996 = !DILocalVariable(name: "pin", arg: 2, scope: !7991, file: !1021, line: 496, type: !103)
!7997 = !DILocalVariable(name: "conf", arg: 3, scope: !7991, file: !1021, line: 496, type: !103)
!7998 = !DILocalVariable(name: "func", arg: 4, scope: !7991, file: !1021, line: 496, type: !103)
!7999 = !DILocalVariable(name: "ret", scope: !7991, file: !1021, line: 498, type: !103)
!8000 = !DILocalVariable(name: "gpio_out", scope: !8001, file: !1021, line: 508, type: !121)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !1021, line: 507, column: 27)
!8002 = distinct !DILexicalBlock(scope: !7991, file: !1021, line: 507, column: 6)
!8003 = !DILocation(line: 0, scope: !7991)
!8004 = !DILocation(line: 505, column: 2, scope: !7991)
!8005 = !DILocation(line: 507, column: 11, scope: !8002)
!8006 = !DILocation(line: 507, column: 6, scope: !7991)
!8007 = !DILocation(line: 508, column: 28, scope: !8001)
!8008 = !DILocation(line: 0, scope: !8001)
!8009 = !DILocation(line: 510, column: 16, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8001, file: !1021, line: 510, column: 7)
!8011 = !DILocation(line: 0, scope: !8010)
!8012 = !DILocation(line: 510, column: 7, scope: !8001)
!8013 = !DILocation(line: 511, column: 4, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8010, file: !1021, line: 510, column: 32)
!8015 = !DILocation(line: 512, column: 3, scope: !8014)
!8016 = !DILocation(line: 513, column: 4, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !1021, line: 512, column: 39)
!8018 = distinct !DILexicalBlock(scope: !8010, file: !1021, line: 512, column: 14)
!8019 = !DILocation(line: 514, column: 3, scope: !8017)
!8020 = !DILocation(line: 518, column: 1, scope: !7991)
!8021 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1299, file: !1299, line: 526, type: !1200, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8022)
!8022 = !{!8023, !8024, !8025}
!8023 = !DILocalVariable(name: "dev", arg: 1, scope: !8021, file: !1299, line: 526, type: !1202)
!8024 = !DILocalVariable(name: "c", arg: 2, scope: !8021, file: !1299, line: 526, type: !810)
!8025 = !DILocalVariable(name: "config", scope: !8021, file: !1299, line: 528, type: !8026)
!8026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!8027 = !DILocation(line: 0, scope: !8021)
!8028 = !DILocation(line: 528, column: 48, scope: !8021)
!8029 = !DILocation(line: 531, column: 40, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8021, file: !1299, line: 531, column: 6)
!8031 = !DILocation(line: 531, column: 6, scope: !8030)
!8032 = !DILocation(line: 531, column: 6, scope: !8021)
!8033 = !DILocation(line: 532, column: 34, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8030, file: !1299, line: 531, column: 48)
!8035 = !DILocation(line: 532, column: 3, scope: !8034)
!8036 = !DILocation(line: 533, column: 2, scope: !8034)
!8037 = !DILocation(line: 539, column: 42, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8021, file: !1299, line: 539, column: 6)
!8039 = !DILocation(line: 539, column: 7, scope: !8038)
!8040 = !DILocation(line: 539, column: 6, scope: !8021)
!8041 = !DILocation(line: 543, column: 52, scope: !8021)
!8042 = !DILocation(line: 543, column: 22, scope: !8021)
!8043 = !DILocation(line: 543, column: 5, scope: !8021)
!8044 = !DILocation(line: 545, column: 2, scope: !8021)
!8045 = !DILocation(line: 546, column: 1, scope: !8021)
!8046 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1299, file: !1299, line: 548, type: !1219, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8047)
!8047 = !{!8048, !8049, !8050, !8051}
!8048 = !DILocalVariable(name: "dev", arg: 1, scope: !8046, file: !1299, line: 548, type: !1202)
!8049 = !DILocalVariable(name: "c", arg: 2, scope: !8046, file: !1299, line: 549, type: !155)
!8050 = !DILocalVariable(name: "config", scope: !8046, file: !1299, line: 551, type: !8026)
!8051 = !DILocalVariable(name: "key", scope: !8046, file: !1299, line: 555, type: !32)
!8052 = !DILocation(line: 0, scope: !8046)
!8053 = !DILocation(line: 551, column: 48, scope: !8046)
!8054 = !DILocation(line: 562, column: 2, scope: !8046)
!8055 = !DILocation(line: 563, column: 41, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !1299, line: 563, column: 7)
!8057 = distinct !DILexicalBlock(scope: !8046, file: !1299, line: 562, column: 12)
!8058 = !DILocation(line: 563, column: 7, scope: !8056)
!8059 = !DILocation(line: 563, column: 7, scope: !8057)
!8060 = !DILocation(line: 55, column: 2, scope: !8061, inlinedAt: !8065)
!8061 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4783, file: !4783, line: 42, type: !4784, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8062)
!8062 = !{!8063, !8064}
!8063 = !DILocalVariable(name: "key", scope: !8061, file: !4783, line: 44, type: !32)
!8064 = !DILocalVariable(name: "tmp", scope: !8061, file: !4783, line: 53, type: !32)
!8065 = distinct !DILocation(line: 564, column: 10, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8056, file: !1299, line: 563, column: 49)
!8067 = !{i64 2288207}
!8068 = !DILocation(line: 0, scope: !8061, inlinedAt: !8065)
!8069 = !DILocation(line: 565, column: 42, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8066, file: !1299, line: 565, column: 8)
!8071 = !DILocation(line: 565, column: 8, scope: !8070)
!8072 = !DILocation(line: 565, column: 8, scope: !8066)
!8073 = !DILocalVariable(name: "key", arg: 1, scope: !8074, file: !4783, line: 84, type: !32)
!8074 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8075)
!8075 = !{!8073}
!8076 = !DILocation(line: 0, scope: !8074, inlinedAt: !8077)
!8077 = distinct !DILocation(line: 568, column: 4, scope: !8066)
!8078 = !DILocation(line: 95, column: 2, scope: !8074, inlinedAt: !8077)
!8079 = !{i64 2289024}
!8080 = !DILocation(line: 569, column: 3, scope: !8066)
!8081 = distinct !{!8081, !8054, !8082}
!8082 = !DILocation(line: 570, column: 2, scope: !8046)
!8083 = !DILocation(line: 592, column: 33, scope: !8046)
!8084 = !DILocation(line: 592, column: 2, scope: !8046)
!8085 = !DILocation(line: 0, scope: !8074, inlinedAt: !8086)
!8086 = distinct !DILocation(line: 593, column: 2, scope: !8046)
!8087 = !DILocation(line: 95, column: 2, scope: !8074, inlinedAt: !8086)
!8088 = !DILocation(line: 594, column: 1, scope: !8046)
!8089 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1299, file: !1299, line: 596, type: !1223, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8090)
!8090 = !{!8091, !8092, !8093}
!8091 = !DILocalVariable(name: "dev", arg: 1, scope: !8089, file: !1299, line: 596, type: !1202)
!8092 = !DILocalVariable(name: "config", scope: !8089, file: !1299, line: 598, type: !8026)
!8093 = !DILocalVariable(name: "err", scope: !8089, file: !1299, line: 599, type: !121)
!8094 = !DILocation(line: 0, scope: !8089)
!8095 = !DILocation(line: 598, column: 48, scope: !8089)
!8096 = !DILocation(line: 606, column: 40, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 606, column: 6)
!8098 = !DILocation(line: 606, column: 6, scope: !8097)
!8099 = !DILocation(line: 606, column: 6, scope: !8089)
!8100 = !DILocation(line: 610, column: 39, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 610, column: 6)
!8102 = !DILocation(line: 610, column: 6, scope: !8101)
!8103 = !DILocation(line: 610, column: 6, scope: !8089)
!8104 = !DILocation(line: 614, column: 39, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 614, column: 6)
!8106 = !DILocation(line: 614, column: 6, scope: !8105)
!8107 = !DILocation(line: 614, column: 6, scope: !8089)
!8108 = !DILocation(line: 619, column: 40, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 619, column: 6)
!8110 = !DILocation(line: 619, column: 6, scope: !8109)
!8111 = !DILocation(line: 619, column: 6, scope: !8089)
!8112 = !DILocation(line: 623, column: 10, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 623, column: 6)
!8114 = !DILocation(line: 623, column: 6, scope: !8089)
!8115 = !DILocation(line: 624, column: 34, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8113, file: !1299, line: 623, column: 24)
!8117 = !DILocation(line: 624, column: 3, scope: !8116)
!8118 = !DILocation(line: 625, column: 2, scope: !8116)
!8119 = !DILocation(line: 632, column: 10, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 632, column: 6)
!8121 = !DILocation(line: 632, column: 6, scope: !8089)
!8122 = !DILocation(line: 633, column: 34, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8120, file: !1299, line: 632, column: 32)
!8124 = !DILocation(line: 633, column: 3, scope: !8123)
!8125 = !DILocation(line: 634, column: 2, scope: !8123)
!8126 = !DILocation(line: 636, column: 10, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 636, column: 6)
!8128 = !DILocation(line: 636, column: 6, scope: !8089)
!8129 = !DILocation(line: 637, column: 33, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8127, file: !1299, line: 636, column: 31)
!8131 = !DILocation(line: 637, column: 3, scope: !8130)
!8132 = !DILocation(line: 638, column: 2, scope: !8130)
!8133 = !DILocation(line: 640, column: 10, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8089, file: !1299, line: 640, column: 6)
!8135 = !DILocation(line: 640, column: 6, scope: !8089)
!8136 = !DILocation(line: 641, column: 33, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8134, file: !1299, line: 640, column: 32)
!8138 = !DILocation(line: 641, column: 3, scope: !8137)
!8139 = !DILocation(line: 642, column: 2, scope: !8137)
!8140 = !DILocation(line: 646, column: 32, scope: !8089)
!8141 = !DILocation(line: 646, column: 2, scope: !8089)
!8142 = !DILocation(line: 648, column: 2, scope: !8089)
!8143 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1299, file: !1299, line: 419, type: !1227, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8144)
!8144 = !{!8145, !8146, !8147, !8148, !8150, !8151, !8152, !8153}
!8145 = !DILocalVariable(name: "dev", arg: 1, scope: !8143, file: !1299, line: 419, type: !1202)
!8146 = !DILocalVariable(name: "cfg", arg: 2, scope: !8143, file: !1299, line: 420, type: !1229)
!8147 = !DILocalVariable(name: "config", scope: !8143, file: !1299, line: 422, type: !8026)
!8148 = !DILocalVariable(name: "data", scope: !8143, file: !1299, line: 423, type: !8149)
!8149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!8150 = !DILocalVariable(name: "parity", scope: !8143, file: !1299, line: 424, type: !5225)
!8151 = !DILocalVariable(name: "stopbits", scope: !8143, file: !1299, line: 425, type: !5225)
!8152 = !DILocalVariable(name: "databits", scope: !8143, file: !1299, line: 426, type: !5225)
!8153 = !DILocalVariable(name: "flowctrl", scope: !8143, file: !1299, line: 428, type: !5225)
!8154 = !DILocation(line: 0, scope: !8143)
!8155 = !DILocation(line: 422, column: 48, scope: !8143)
!8156 = !DILocation(line: 423, column: 38, scope: !8143)
!8157 = !DILocation(line: 424, column: 56, scope: !8143)
!8158 = !DILocation(line: 424, column: 51, scope: !8143)
!8159 = !DILocation(line: 424, column: 26, scope: !8143)
!8160 = !DILocation(line: 425, column: 60, scope: !8143)
!8161 = !DILocation(line: 425, column: 55, scope: !8143)
!8162 = !DILocation(line: 425, column: 28, scope: !8143)
!8163 = !DILocation(line: 426, column: 60, scope: !8143)
!8164 = !DILocation(line: 426, column: 55, scope: !8143)
!8165 = !DILocation(line: 426, column: 28, scope: !8143)
!8166 = !DILocation(line: 428, column: 58, scope: !8143)
!8167 = !DILocation(line: 428, column: 53, scope: !8143)
!8168 = !DILocation(line: 428, column: 28, scope: !8143)
!8169 = !DILocation(line: 431, column: 44, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 431, column: 6)
!8171 = !DILocation(line: 438, column: 22, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 437, column: 6)
!8173 = !DILocation(line: 437, column: 6, scope: !8143)
!8174 = !DILocation(line: 448, column: 6, scope: !8143)
!8175 = !DILocation(line: 465, column: 47, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 465, column: 6)
!8177 = !DILocation(line: 475, column: 21, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 475, column: 6)
!8179 = !DILocation(line: 475, column: 6, scope: !8143)
!8180 = !DILocation(line: 476, column: 8, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !1299, line: 476, column: 7)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !1299, line: 475, column: 49)
!8183 = !DILocation(line: 477, column: 34, scope: !8181)
!8184 = !DILocation(line: 476, column: 7, scope: !8182)
!8185 = !DILocation(line: 482, column: 27, scope: !8143)
!8186 = !DILocation(line: 482, column: 2, scope: !8143)
!8187 = !DILocation(line: 484, column: 16, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 484, column: 6)
!8189 = !DILocation(line: 484, column: 13, scope: !8188)
!8190 = !DILocation(line: 484, column: 6, scope: !8143)
!8191 = !DILocation(line: 485, column: 3, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8188, file: !1299, line: 484, column: 44)
!8193 = !DILocation(line: 486, column: 2, scope: !8192)
!8194 = !DILocation(line: 488, column: 18, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 488, column: 6)
!8196 = !DILocation(line: 488, column: 15, scope: !8195)
!8197 = !DILocation(line: 488, column: 6, scope: !8143)
!8198 = !DILocation(line: 489, column: 3, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8195, file: !1299, line: 488, column: 48)
!8200 = !DILocation(line: 490, column: 2, scope: !8199)
!8201 = !DILocation(line: 492, column: 18, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 492, column: 6)
!8203 = !DILocation(line: 492, column: 15, scope: !8202)
!8204 = !DILocation(line: 492, column: 6, scope: !8143)
!8205 = !DILocation(line: 493, column: 3, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8202, file: !1299, line: 492, column: 48)
!8207 = !DILocation(line: 494, column: 2, scope: !8206)
!8208 = !DILocation(line: 496, column: 18, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 496, column: 6)
!8210 = !DILocation(line: 496, column: 15, scope: !8209)
!8211 = !DILocation(line: 496, column: 6, scope: !8143)
!8212 = !DILocation(line: 497, column: 3, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8209, file: !1299, line: 496, column: 46)
!8214 = !DILocation(line: 498, column: 2, scope: !8213)
!8215 = !DILocation(line: 500, column: 11, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8143, file: !1299, line: 500, column: 6)
!8217 = !DILocation(line: 500, column: 29, scope: !8216)
!8218 = !DILocation(line: 500, column: 20, scope: !8216)
!8219 = !DILocation(line: 500, column: 6, scope: !8143)
!8220 = !DILocation(line: 501, column: 3, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8216, file: !1299, line: 500, column: 40)
!8222 = !DILocation(line: 502, column: 26, scope: !8221)
!8223 = !DILocation(line: 502, column: 19, scope: !8221)
!8224 = !DILocation(line: 503, column: 2, scope: !8221)
!8225 = !DILocation(line: 505, column: 26, scope: !8143)
!8226 = !DILocation(line: 505, column: 2, scope: !8143)
!8227 = !DILocation(line: 506, column: 2, scope: !8143)
!8228 = !DILocation(line: 507, column: 1, scope: !8143)
!8229 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1299, file: !1299, line: 509, type: !1240, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8230)
!8230 = !{!8231, !8232, !8233}
!8231 = !DILocalVariable(name: "dev", arg: 1, scope: !8229, file: !1299, line: 509, type: !1202)
!8232 = !DILocalVariable(name: "cfg", arg: 2, scope: !8229, file: !1299, line: 510, type: !1242)
!8233 = !DILocalVariable(name: "data", scope: !8229, file: !1299, line: 512, type: !8149)
!8234 = !DILocation(line: 0, scope: !8229)
!8235 = !DILocation(line: 512, column: 38, scope: !8229)
!8236 = !DILocation(line: 514, column: 24, scope: !8229)
!8237 = !DILocation(line: 514, column: 7, scope: !8229)
!8238 = !DILocation(line: 514, column: 16, scope: !8229)
!8239 = !DILocation(line: 515, column: 41, scope: !8229)
!8240 = !{i32 0, i32 1537}
!8241 = !DILocation(line: 515, column: 16, scope: !8229)
!8242 = !DILocation(line: 515, column: 7, scope: !8229)
!8243 = !DILocation(line: 515, column: 14, scope: !8229)
!8244 = !DILocation(line: 517, column: 3, scope: !8229)
!8245 = !{i32 0, i32 12289}
!8246 = !DILocation(line: 516, column: 19, scope: !8229)
!8247 = !DILocation(line: 516, column: 7, scope: !8229)
!8248 = !DILocation(line: 516, column: 17, scope: !8229)
!8249 = !DILocation(line: 519, column: 3, scope: !8229)
!8250 = !DILocation(line: 519, column: 33, scope: !8229)
!8251 = !DILocation(line: 518, column: 19, scope: !8229)
!8252 = !DILocation(line: 518, column: 7, scope: !8229)
!8253 = !DILocation(line: 518, column: 17, scope: !8229)
!8254 = !DILocation(line: 521, column: 3, scope: !8229)
!8255 = !{i32 0, i32 769}
!8256 = !DILocation(line: 520, column: 19, scope: !8229)
!8257 = !DILocation(line: 520, column: 7, scope: !8229)
!8258 = !DILocation(line: 520, column: 17, scope: !8229)
!8259 = !DILocation(line: 522, column: 2, scope: !8229)
!8260 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1299, file: !1299, line: 205, type: !8261, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8263)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!121, !1202}
!8263 = !{!8264, !8265}
!8264 = !DILocalVariable(name: "dev", arg: 1, scope: !8260, file: !1299, line: 205, type: !1202)
!8265 = !DILocalVariable(name: "config", scope: !8260, file: !1299, line: 207, type: !8026)
!8266 = !DILocation(line: 0, scope: !8260)
!8267 = !DILocation(line: 207, column: 48, scope: !8260)
!8268 = !DILocation(line: 209, column: 36, scope: !8260)
!8269 = !DILocation(line: 209, column: 9, scope: !8260)
!8270 = !DILocation(line: 209, column: 2, scope: !8260)
!8271 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1299, file: !1299, line: 270, type: !8272, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8274)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!1168, !121}
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "parity", arg: 1, scope: !8271, file: !1299, line: 270, type: !121)
!8276 = !DILocation(line: 0, scope: !8271)
!8277 = !DILocation(line: 272, column: 2, scope: !8271)
!8278 = !DILocation(line: 281, column: 1, scope: !8271)
!8279 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1299, file: !1299, line: 220, type: !8261, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8280)
!8280 = !{!8281, !8282}
!8281 = !DILocalVariable(name: "dev", arg: 1, scope: !8279, file: !1299, line: 220, type: !1202)
!8282 = !DILocalVariable(name: "config", scope: !8279, file: !1299, line: 222, type: !8026)
!8283 = !DILocation(line: 0, scope: !8279)
!8284 = !DILocation(line: 222, column: 48, scope: !8279)
!8285 = !DILocation(line: 224, column: 44, scope: !8279)
!8286 = !DILocation(line: 224, column: 9, scope: !8279)
!8287 = !DILocation(line: 224, column: 2, scope: !8279)
!8288 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1299, file: !1299, line: 304, type: !8289, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8291)
!8289 = !DISubroutineType(types: !8290)
!8290 = !{!1182, !121}
!8291 = !{!8292}
!8292 = !DILocalVariable(name: "sb", arg: 1, scope: !8288, file: !1299, line: 304, type: !121)
!8293 = !DILocation(line: 0, scope: !8288)
!8294 = !DILocation(line: 306, column: 2, scope: !8288)
!8295 = !DILocation(line: 0, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8288, file: !1299, line: 306, column: 14)
!8297 = !DILocation(line: 323, column: 1, scope: !8288)
!8298 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1299, file: !1299, line: 235, type: !8261, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8299)
!8299 = !{!8300, !8301}
!8300 = !DILocalVariable(name: "dev", arg: 1, scope: !8298, file: !1299, line: 235, type: !1202)
!8301 = !DILocalVariable(name: "config", scope: !8298, file: !1299, line: 237, type: !8026)
!8302 = !DILocation(line: 0, scope: !8298)
!8303 = !DILocation(line: 237, column: 48, scope: !8298)
!8304 = !DILocation(line: 239, column: 39, scope: !8298)
!8305 = !DILocation(line: 239, column: 9, scope: !8298)
!8306 = !DILocation(line: 239, column: 2, scope: !8298)
!8307 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1299, file: !1299, line: 355, type: !8308, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8310)
!8308 = !DISubroutineType(types: !8309)
!8309 = !{!1175, !121, !121}
!8310 = !{!8311, !8312}
!8311 = !DILocalVariable(name: "db", arg: 1, scope: !8307, file: !1299, line: 355, type: !121)
!8312 = !DILocalVariable(name: "p", arg: 2, scope: !8307, file: !1299, line: 356, type: !121)
!8313 = !DILocation(line: 0, scope: !8307)
!8314 = !DILocation(line: 358, column: 2, scope: !8307)
!8315 = !DILocation(line: 384, column: 1, scope: !8307)
!8316 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1299, file: !1299, line: 250, type: !8261, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8317)
!8317 = !{!8318, !8319}
!8318 = !DILocalVariable(name: "dev", arg: 1, scope: !8316, file: !1299, line: 250, type: !1202)
!8319 = !DILocalVariable(name: "config", scope: !8316, file: !1299, line: 252, type: !8026)
!8320 = !DILocation(line: 0, scope: !8316)
!8321 = !DILocation(line: 252, column: 48, scope: !8316)
!8322 = !DILocation(line: 254, column: 40, scope: !8316)
!8323 = !DILocation(line: 254, column: 9, scope: !8316)
!8324 = !DILocation(line: 254, column: 2, scope: !8316)
!8325 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1299, file: !1299, line: 409, type: !8326, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8328)
!8326 = !DISubroutineType(types: !8327)
!8327 = !{!1188, !121}
!8328 = !{!8329}
!8329 = !DILocalVariable(name: "fc", arg: 1, scope: !8325, file: !1299, line: 409, type: !121)
!8330 = !DILocation(line: 0, scope: !8325)
!8331 = !DILocation(line: 411, column: 9, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8325, file: !1299, line: 411, column: 6)
!8333 = !DILocation(line: 416, column: 1, scope: !8325)
!8334 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8335, file: !8335, line: 967, type: !8336, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8338)
!8335 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8336 = !DISubroutineType(types: !8337)
!8337 = !{!121, !1243}
!8338 = !{!8339}
!8339 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8334, file: !8335, line: 967, type: !1243)
!8340 = !DILocation(line: 0, scope: !8334)
!8341 = !DILocation(line: 969, column: 21, scope: !8334)
!8342 = !DILocation(line: 969, column: 3, scope: !8334)
!8343 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8335, file: !8335, line: 601, type: !8336, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8344)
!8344 = !{!8345}
!8345 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8343, file: !8335, line: 601, type: !1243)
!8346 = !DILocation(line: 0, scope: !8343)
!8347 = !DILocation(line: 603, column: 21, scope: !8343)
!8348 = !DILocation(line: 603, column: 3, scope: !8343)
!8349 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8335, file: !8335, line: 820, type: !8336, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8350)
!8350 = !{!8351}
!8351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8349, file: !8335, line: 820, type: !1243)
!8352 = !DILocation(line: 0, scope: !8349)
!8353 = !DILocation(line: 822, column: 21, scope: !8349)
!8354 = !DILocation(line: 822, column: 3, scope: !8349)
!8355 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8335, file: !8335, line: 547, type: !8336, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8356)
!8356 = !{!8357}
!8357 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8355, file: !8335, line: 547, type: !1243)
!8358 = !DILocation(line: 0, scope: !8355)
!8359 = !DILocation(line: 549, column: 21, scope: !8355)
!8360 = !DILocation(line: 549, column: 3, scope: !8355)
!8361 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1299, file: !1299, line: 257, type: !8362, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8364)
!8362 = !DISubroutineType(types: !8363)
!8363 = !{!121, !1168}
!8364 = !{!8365}
!8365 = !DILocalVariable(name: "parity", arg: 1, scope: !8361, file: !1299, line: 257, type: !1168)
!8366 = !DILocation(line: 0, scope: !8361)
!8367 = !DILocation(line: 259, column: 2, scope: !8361)
!8368 = !DILocation(line: 268, column: 1, scope: !8361)
!8369 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1299, file: !1299, line: 283, type: !8370, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8372)
!8370 = !DISubroutineType(types: !8371)
!8371 = !{!121, !1182}
!8372 = !{!8373}
!8373 = !DILocalVariable(name: "sb", arg: 1, scope: !8369, file: !1299, line: 283, type: !1182)
!8374 = !DILocation(line: 0, scope: !8369)
!8375 = !DILocation(line: 285, column: 2, scope: !8369)
!8376 = !DILocation(line: 0, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8369, file: !1299, line: 285, column: 14)
!8378 = !DILocation(line: 302, column: 1, scope: !8369)
!8379 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1299, file: !1299, line: 325, type: !8380, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8382)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{!121, !1175, !1168}
!8382 = !{!8383, !8384}
!8383 = !DILocalVariable(name: "db", arg: 1, scope: !8379, file: !1299, line: 325, type: !1175)
!8384 = !DILocalVariable(name: "p", arg: 2, scope: !8379, file: !1299, line: 326, type: !1168)
!8385 = !DILocation(line: 0, scope: !8379)
!8386 = !DILocation(line: 328, column: 2, scope: !8379)
!8387 = !DILocation(line: 353, column: 1, scope: !8379)
!8388 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1299, file: !1299, line: 393, type: !8389, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8391)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!121, !1188}
!8391 = !{!8392}
!8392 = !DILocalVariable(name: "fc", arg: 1, scope: !8388, file: !1299, line: 393, type: !1188)
!8393 = !DILocation(line: 0, scope: !8388)
!8394 = !DILocation(line: 395, column: 9, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8388, file: !1299, line: 395, column: 6)
!8396 = !DILocation(line: 400, column: 1, scope: !8388)
!8397 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8335, file: !8335, line: 424, type: !8398, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8400)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{null, !1243}
!8400 = !{!8401}
!8401 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8397, file: !8335, line: 424, type: !1243)
!8402 = !DILocation(line: 0, scope: !8397)
!8403 = !DILocation(line: 426, column: 3, scope: !8397)
!8404 = !DILocation(line: 427, column: 1, scope: !8397)
!8405 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1299, file: !1299, line: 197, type: !8406, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8408)
!8406 = !DISubroutineType(types: !8407)
!8407 = !{null, !1202, !121}
!8408 = !{!8409, !8410, !8411}
!8409 = !DILocalVariable(name: "dev", arg: 1, scope: !8405, file: !1299, line: 197, type: !1202)
!8410 = !DILocalVariable(name: "parity", arg: 2, scope: !8405, file: !1299, line: 198, type: !121)
!8411 = !DILocalVariable(name: "config", scope: !8405, file: !1299, line: 200, type: !8026)
!8412 = !DILocation(line: 0, scope: !8405)
!8413 = !DILocation(line: 200, column: 48, scope: !8405)
!8414 = !DILocation(line: 202, column: 29, scope: !8405)
!8415 = !DILocation(line: 202, column: 2, scope: !8405)
!8416 = !DILocation(line: 203, column: 1, scope: !8405)
!8417 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1299, file: !1299, line: 212, type: !8406, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8418)
!8418 = !{!8419, !8420, !8421}
!8419 = !DILocalVariable(name: "dev", arg: 1, scope: !8417, file: !1299, line: 212, type: !1202)
!8420 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8417, file: !1299, line: 213, type: !121)
!8421 = !DILocalVariable(name: "config", scope: !8417, file: !1299, line: 215, type: !8026)
!8422 = !DILocation(line: 0, scope: !8417)
!8423 = !DILocation(line: 215, column: 48, scope: !8417)
!8424 = !DILocation(line: 217, column: 37, scope: !8417)
!8425 = !DILocation(line: 217, column: 2, scope: !8417)
!8426 = !DILocation(line: 218, column: 1, scope: !8417)
!8427 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1299, file: !1299, line: 227, type: !8406, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8428)
!8428 = !{!8429, !8430, !8431}
!8429 = !DILocalVariable(name: "dev", arg: 1, scope: !8427, file: !1299, line: 227, type: !1202)
!8430 = !DILocalVariable(name: "databits", arg: 2, scope: !8427, file: !1299, line: 228, type: !121)
!8431 = !DILocalVariable(name: "config", scope: !8427, file: !1299, line: 230, type: !8026)
!8432 = !DILocation(line: 0, scope: !8427)
!8433 = !DILocation(line: 230, column: 48, scope: !8427)
!8434 = !DILocation(line: 232, column: 32, scope: !8427)
!8435 = !DILocation(line: 232, column: 2, scope: !8427)
!8436 = !DILocation(line: 233, column: 1, scope: !8427)
!8437 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1299, file: !1299, line: 242, type: !8406, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8438)
!8438 = !{!8439, !8440, !8441}
!8439 = !DILocalVariable(name: "dev", arg: 1, scope: !8437, file: !1299, line: 242, type: !1202)
!8440 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8437, file: !1299, line: 243, type: !121)
!8441 = !DILocalVariable(name: "config", scope: !8437, file: !1299, line: 245, type: !8026)
!8442 = !DILocation(line: 0, scope: !8437)
!8443 = !DILocation(line: 245, column: 48, scope: !8437)
!8444 = !DILocation(line: 247, column: 33, scope: !8437)
!8445 = !DILocation(line: 247, column: 2, scope: !8437)
!8446 = !DILocation(line: 248, column: 1, scope: !8437)
!8447 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1299, file: !1299, line: 107, type: !8406, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8448)
!8448 = !{!8449, !8450, !8451, !8452, !8453}
!8449 = !DILocalVariable(name: "dev", arg: 1, scope: !8447, file: !1299, line: 107, type: !1202)
!8450 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8447, file: !1299, line: 107, type: !121)
!8451 = !DILocalVariable(name: "config", scope: !8447, file: !1299, line: 109, type: !8026)
!8452 = !DILocalVariable(name: "data", scope: !8447, file: !1299, line: 110, type: !8149)
!8453 = !DILocalVariable(name: "clock_rate", scope: !8447, file: !1299, line: 112, type: !121)
!8454 = !DILocation(line: 0, scope: !8447)
!8455 = !DILocation(line: 109, column: 48, scope: !8447)
!8456 = !DILocation(line: 110, column: 38, scope: !8447)
!8457 = !DILocation(line: 112, column: 2, scope: !8447)
!8458 = !DILocation(line: 123, column: 36, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !1299, line: 123, column: 7)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !1299, line: 122, column: 9)
!8461 = distinct !DILexicalBlock(scope: !8447, file: !1299, line: 115, column: 6)
!8462 = !DILocation(line: 124, column: 42, scope: !8459)
!8463 = !DILocation(line: 123, column: 7, scope: !8459)
!8464 = !DILocation(line: 125, column: 22, scope: !8459)
!8465 = !DILocation(line: 123, column: 7, scope: !8460)
!8466 = !DILocation(line: 176, column: 36, scope: !8447)
!8467 = !DILocation(line: 176, column: 3, scope: !8447)
!8468 = !DILocation(line: 179, column: 32, scope: !8447)
!8469 = !DILocation(line: 180, column: 10, scope: !8447)
!8470 = !DILocation(line: 179, column: 3, scope: !8447)
!8471 = !DILocation(line: 195, column: 1, scope: !8447)
!8472 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8335, file: !8335, line: 410, type: !8398, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8473)
!8473 = !{!8474}
!8474 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8472, file: !8335, line: 410, type: !1243)
!8475 = !DILocation(line: 0, scope: !8472)
!8476 = !DILocation(line: 412, column: 3, scope: !8472)
!8477 = !DILocation(line: 413, column: 1, scope: !8472)
!8478 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !656, file: !656, line: 216, type: !1276, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8479)
!8479 = !{!8480, !8481, !8482, !8483}
!8480 = !DILocalVariable(name: "dev", arg: 1, scope: !8478, file: !656, line: 216, type: !1202)
!8481 = !DILocalVariable(name: "sys", arg: 2, scope: !8478, file: !656, line: 217, type: !749)
!8482 = !DILocalVariable(name: "rate", arg: 3, scope: !8478, file: !656, line: 218, type: !705)
!8483 = !DILocalVariable(name: "api", scope: !8478, file: !656, line: 220, type: !1254)
!8484 = !DILocation(line: 0, scope: !8478)
!8485 = !DILocation(line: 221, column: 49, scope: !8478)
!8486 = !DILocation(line: 223, column: 11, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8478, file: !656, line: 223, column: 6)
!8488 = !DILocation(line: 223, column: 20, scope: !8487)
!8489 = !DILocation(line: 223, column: 6, scope: !8478)
!8490 = !DILocation(line: 227, column: 9, scope: !8478)
!8491 = !DILocation(line: 227, column: 2, scope: !8478)
!8492 = !DILocation(line: 228, column: 1, scope: !8478)
!8493 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8335, file: !8335, line: 615, type: !8494, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8496)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{null, !1243, !121}
!8496 = !{!8497, !8498}
!8497 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8493, file: !8335, line: 615, type: !1243)
!8498 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8493, file: !8335, line: 615, type: !121)
!8499 = !DILocation(line: 0, scope: !8493)
!8500 = !DILocation(line: 617, column: 3, scope: !8493)
!8501 = !DILocation(line: 618, column: 1, scope: !8493)
!8502 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8335, file: !8335, line: 1020, type: !8503, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8505)
!8503 = !DISubroutineType(types: !8504)
!8504 = !{null, !1243, !121, !121, !121}
!8505 = !{!8506, !8507, !8508, !8509}
!8506 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8502, file: !8335, line: 1020, type: !1243)
!8507 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8502, file: !8335, line: 1020, type: !121)
!8508 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8502, file: !8335, line: 1020, type: !121)
!8509 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8502, file: !8335, line: 1021, type: !121)
!8510 = !DILocation(line: 0, scope: !8502)
!8511 = !DILocation(line: 1029, column: 30, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !8335, line: 1028, column: 3)
!8513 = distinct !DILexicalBlock(scope: !8502, file: !8335, line: 1023, column: 7)
!8514 = !DILocation(line: 1029, column: 19, scope: !8512)
!8515 = !DILocation(line: 1029, column: 13, scope: !8512)
!8516 = !DILocation(line: 1029, column: 17, scope: !8512)
!8517 = !DILocation(line: 1031, column: 1, scope: !8502)
!8518 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8335, file: !8335, line: 949, type: !8494, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8519)
!8519 = !{!8520, !8521}
!8520 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8518, file: !8335, line: 949, type: !1243)
!8521 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8518, file: !8335, line: 949, type: !121)
!8522 = !DILocation(line: 0, scope: !8518)
!8523 = !DILocation(line: 951, column: 3, scope: !8518)
!8524 = !DILocation(line: 952, column: 1, scope: !8518)
!8525 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8335, file: !8335, line: 588, type: !8494, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8526)
!8526 = !{!8527, !8528}
!8527 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8525, file: !8335, line: 588, type: !1243)
!8528 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8525, file: !8335, line: 588, type: !121)
!8529 = !DILocation(line: 0, scope: !8525)
!8530 = !DILocation(line: 590, column: 3, scope: !8525)
!8531 = !DILocation(line: 591, column: 1, scope: !8525)
!8532 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8335, file: !8335, line: 805, type: !8494, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8533)
!8533 = !{!8534, !8535}
!8534 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8532, file: !8335, line: 805, type: !1243)
!8535 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8532, file: !8335, line: 805, type: !121)
!8536 = !DILocation(line: 0, scope: !8532)
!8537 = !DILocation(line: 807, column: 3, scope: !8532)
!8538 = !DILocation(line: 808, column: 1, scope: !8532)
!8539 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8335, file: !8335, line: 532, type: !8494, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8540)
!8540 = !{!8541, !8542}
!8541 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8539, file: !8335, line: 532, type: !1243)
!8542 = !DILocalVariable(name: "Parity", arg: 2, scope: !8539, file: !8335, line: 532, type: !121)
!8543 = !DILocation(line: 0, scope: !8539)
!8544 = !DILocation(line: 534, column: 3, scope: !8539)
!8545 = !DILocation(line: 535, column: 1, scope: !8539)
!8546 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8335, file: !8335, line: 1770, type: !8336, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8547)
!8547 = !{!8548}
!8548 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8546, file: !8335, line: 1770, type: !1243)
!8549 = !DILocation(line: 0, scope: !8546)
!8550 = !DILocation(line: 1772, column: 11, scope: !8546)
!8551 = !DILocation(line: 1772, column: 46, scope: !8546)
!8552 = !DILocation(line: 1772, column: 3, scope: !8546)
!8553 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8335, file: !8335, line: 1737, type: !8336, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8554)
!8554 = !{!8555}
!8555 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8553, file: !8335, line: 1737, type: !1243)
!8556 = !DILocation(line: 0, scope: !8553)
!8557 = !DILocation(line: 1739, column: 11, scope: !8553)
!8558 = !DILocation(line: 1739, column: 3, scope: !8553)
!8559 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8335, file: !8335, line: 1748, type: !8336, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8560)
!8560 = !{!8561}
!8561 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8559, file: !8335, line: 1748, type: !1243)
!8562 = !DILocation(line: 0, scope: !8559)
!8563 = !DILocation(line: 1750, column: 11, scope: !8559)
!8564 = !DILocation(line: 1750, column: 45, scope: !8559)
!8565 = !DILocation(line: 1750, column: 3, scope: !8559)
!8566 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8335, file: !8335, line: 1827, type: !8336, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8567)
!8567 = !{!8568}
!8568 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8566, file: !8335, line: 1827, type: !1243)
!8569 = !DILocation(line: 0, scope: !8566)
!8570 = !DILocation(line: 1829, column: 11, scope: !8566)
!8571 = !DILocation(line: 1829, column: 46, scope: !8566)
!8572 = !DILocation(line: 1829, column: 3, scope: !8566)
!8573 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8335, file: !8335, line: 1992, type: !8398, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8574)
!8574 = !{!8575}
!8575 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8573, file: !8335, line: 1992, type: !1243)
!8576 = !DILocation(line: 0, scope: !8573)
!8577 = !DILocation(line: 1994, column: 3, scope: !8573)
!8578 = !DILocation(line: 1995, column: 1, scope: !8573)
!8579 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8335, file: !8335, line: 1934, type: !8398, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8580)
!8580 = !{!8581, !8582}
!8581 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8579, file: !8335, line: 1934, type: !1243)
!8582 = !DILocalVariable(name: "tmpreg", scope: !8579, file: !8335, line: 1936, type: !120)
!8583 = !DILocation(line: 0, scope: !8579)
!8584 = !DILocation(line: 1936, column: 3, scope: !8579)
!8585 = !DILocation(line: 1936, column: 17, scope: !8579)
!8586 = !DILocation(line: 1937, column: 20, scope: !8579)
!8587 = !DILocation(line: 1937, column: 10, scope: !8579)
!8588 = !DILocation(line: 1938, column: 10, scope: !8579)
!8589 = !DILocation(line: 1939, column: 20, scope: !8579)
!8590 = !DILocation(line: 1939, column: 10, scope: !8579)
!8591 = !DILocation(line: 1940, column: 10, scope: !8579)
!8592 = !DILocation(line: 1941, column: 1, scope: !8579)
!8593 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8335, file: !8335, line: 1877, type: !8398, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8594)
!8594 = !{!8595, !8596}
!8595 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8593, file: !8335, line: 1877, type: !1243)
!8596 = !DILocalVariable(name: "tmpreg", scope: !8593, file: !8335, line: 1879, type: !120)
!8597 = !DILocation(line: 0, scope: !8593)
!8598 = !DILocation(line: 1879, column: 3, scope: !8593)
!8599 = !DILocation(line: 1879, column: 17, scope: !8593)
!8600 = !DILocation(line: 1880, column: 20, scope: !8593)
!8601 = !DILocation(line: 1880, column: 10, scope: !8593)
!8602 = !DILocation(line: 1881, column: 10, scope: !8593)
!8603 = !DILocation(line: 1882, column: 20, scope: !8593)
!8604 = !DILocation(line: 1882, column: 10, scope: !8593)
!8605 = !DILocation(line: 1883, column: 10, scope: !8593)
!8606 = !DILocation(line: 1884, column: 1, scope: !8593)
!8607 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8335, file: !8335, line: 1896, type: !8398, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8608)
!8608 = !{!8609, !8610}
!8609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8607, file: !8335, line: 1896, type: !1243)
!8610 = !DILocalVariable(name: "tmpreg", scope: !8607, file: !8335, line: 1898, type: !120)
!8611 = !DILocation(line: 0, scope: !8607)
!8612 = !DILocation(line: 1898, column: 3, scope: !8607)
!8613 = !DILocation(line: 1898, column: 17, scope: !8607)
!8614 = !DILocation(line: 1899, column: 20, scope: !8607)
!8615 = !DILocation(line: 1899, column: 10, scope: !8607)
!8616 = !DILocation(line: 1900, column: 10, scope: !8607)
!8617 = !DILocation(line: 1901, column: 20, scope: !8607)
!8618 = !DILocation(line: 1901, column: 10, scope: !8607)
!8619 = !DILocation(line: 1902, column: 10, scope: !8607)
!8620 = !DILocation(line: 1903, column: 1, scope: !8607)
!8621 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8335, file: !8335, line: 1915, type: !8398, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8622)
!8622 = !{!8623, !8624}
!8623 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8621, file: !8335, line: 1915, type: !1243)
!8624 = !DILocalVariable(name: "tmpreg", scope: !8621, file: !8335, line: 1917, type: !120)
!8625 = !DILocation(line: 0, scope: !8621)
!8626 = !DILocation(line: 1917, column: 3, scope: !8621)
!8627 = !DILocation(line: 1917, column: 17, scope: !8621)
!8628 = !DILocation(line: 1918, column: 20, scope: !8621)
!8629 = !DILocation(line: 1918, column: 10, scope: !8621)
!8630 = !DILocation(line: 1919, column: 10, scope: !8621)
!8631 = !DILocation(line: 1920, column: 20, scope: !8621)
!8632 = !DILocation(line: 1920, column: 10, scope: !8621)
!8633 = !DILocation(line: 1921, column: 10, scope: !8621)
!8634 = !DILocation(line: 1922, column: 1, scope: !8621)
!8635 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8335, file: !8335, line: 1814, type: !8336, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8636)
!8636 = !{!8637}
!8637 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8635, file: !8335, line: 1814, type: !1243)
!8638 = !DILocation(line: 0, scope: !8635)
!8639 = !DILocation(line: 1816, column: 11, scope: !8635)
!8640 = !DILocation(line: 1816, column: 46, scope: !8635)
!8641 = !DILocation(line: 1816, column: 3, scope: !8635)
!8642 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8335, file: !8335, line: 2426, type: !8643, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8645)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{null, !1243, !154}
!8645 = !{!8646, !8647}
!8646 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8642, file: !8335, line: 2426, type: !1243)
!8647 = !DILocalVariable(name: "Value", arg: 2, scope: !8642, file: !8335, line: 2426, type: !154)
!8648 = !DILocation(line: 0, scope: !8642)
!8649 = !DILocation(line: 2428, column: 16, scope: !8642)
!8650 = !DILocation(line: 2428, column: 11, scope: !8642)
!8651 = !DILocation(line: 2428, column: 14, scope: !8642)
!8652 = !DILocation(line: 2429, column: 1, scope: !8642)
!8653 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8335, file: !8335, line: 1792, type: !8336, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8654)
!8654 = !{!8655}
!8655 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8653, file: !8335, line: 1792, type: !1243)
!8656 = !DILocation(line: 0, scope: !8653)
!8657 = !DILocation(line: 1794, column: 11, scope: !8653)
!8658 = !DILocation(line: 1794, column: 47, scope: !8653)
!8659 = !DILocation(line: 1794, column: 3, scope: !8653)
!8660 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8335, file: !8335, line: 2403, type: !8661, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8663)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{!154, !1243}
!8663 = !{!8664}
!8664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8660, file: !8335, line: 2403, type: !1243)
!8665 = !DILocation(line: 0, scope: !8660)
!8666 = !DILocation(line: 2405, column: 20, scope: !8660)
!8667 = !DILocation(line: 2405, column: 10, scope: !8660)
!8668 = !DILocation(line: 2405, column: 3, scope: !8660)
!8669 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1299, file: !1299, line: 1583, type: !1223, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8670)
!8670 = !{!8671, !8672, !8673, !8674, !8675, !8676}
!8671 = !DILocalVariable(name: "dev", arg: 1, scope: !8669, file: !1299, line: 1583, type: !1202)
!8672 = !DILocalVariable(name: "config", scope: !8669, file: !1299, line: 1585, type: !8026)
!8673 = !DILocalVariable(name: "data", scope: !8669, file: !1299, line: 1586, type: !8149)
!8674 = !DILocalVariable(name: "ll_parity", scope: !8669, file: !1299, line: 1587, type: !121)
!8675 = !DILocalVariable(name: "ll_datawidth", scope: !8669, file: !1299, line: 1588, type: !121)
!8676 = !DILocalVariable(name: "err", scope: !8669, file: !1299, line: 1589, type: !103)
!8677 = !DILocation(line: 0, scope: !8669)
!8678 = !DILocation(line: 1585, column: 48, scope: !8669)
!8679 = !DILocation(line: 1586, column: 38, scope: !8669)
!8680 = !DILocation(line: 1591, column: 2, scope: !8669)
!8681 = !DILocation(line: 1593, column: 29, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8669, file: !1299, line: 1593, column: 6)
!8683 = !DILocation(line: 1593, column: 7, scope: !8682)
!8684 = !DILocation(line: 1593, column: 6, scope: !8669)
!8685 = !DILocation(line: 1599, column: 31, scope: !8669)
!8686 = !DILocation(line: 1599, column: 71, scope: !8669)
!8687 = !DILocation(line: 1599, column: 8, scope: !8669)
!8688 = !DILocation(line: 1600, column: 10, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8669, file: !1299, line: 1600, column: 6)
!8690 = !DILocation(line: 1600, column: 6, scope: !8669)
!8691 = !DILocation(line: 1616, column: 36, scope: !8669)
!8692 = !DILocation(line: 1616, column: 8, scope: !8669)
!8693 = !DILocation(line: 1617, column: 10, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8669, file: !1299, line: 1617, column: 6)
!8695 = !DILocation(line: 1617, column: 6, scope: !8669)
!8696 = !DILocation(line: 1621, column: 27, scope: !8669)
!8697 = !DILocation(line: 1621, column: 2, scope: !8669)
!8698 = !DILocation(line: 1624, column: 40, scope: !8669)
!8699 = !DILocation(line: 1624, column: 2, scope: !8669)
!8700 = !DILocation(line: 1630, column: 14, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8669, file: !1299, line: 1630, column: 6)
!8702 = !DILocation(line: 1630, column: 6, scope: !8669)
!8703 = !DILocation(line: 1638, column: 2, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !1299, line: 1634, column: 34)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !1299, line: 1634, column: 13)
!8706 = !DILocation(line: 0, scope: !8701)
!8707 = !DILocation(line: 1649, column: 35, scope: !8669)
!8708 = !DILocation(line: 1649, column: 2, scope: !8669)
!8709 = !DILocation(line: 1654, column: 14, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8669, file: !1299, line: 1654, column: 6)
!8711 = !DILocation(line: 1654, column: 6, scope: !8669)
!8712 = !DILocation(line: 1655, column: 3, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8710, file: !1299, line: 1654, column: 31)
!8714 = !DILocation(line: 1656, column: 2, scope: !8713)
!8715 = !DILocation(line: 1659, column: 37, scope: !8669)
!8716 = !DILocation(line: 1659, column: 2, scope: !8669)
!8717 = !DILocation(line: 1662, column: 14, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8669, file: !1299, line: 1662, column: 6)
!8719 = !DILocation(line: 1662, column: 6, scope: !8669)
!8720 = !DILocation(line: 1663, column: 37, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8718, file: !1299, line: 1662, column: 27)
!8722 = !DILocation(line: 1663, column: 3, scope: !8721)
!8723 = !DILocation(line: 1664, column: 2, scope: !8721)
!8724 = !DILocation(line: 1684, column: 26, scope: !8669)
!8725 = !DILocation(line: 1684, column: 2, scope: !8669)
!8726 = !DILocation(line: 1722, column: 2, scope: !8669)
!8727 = !DILocation(line: 1724, column: 1, scope: !8669)
!8728 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1299, file: !1299, line: 651, type: !8729, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8731)
!8729 = !DISubroutineType(types: !8730)
!8730 = !{null, !1202}
!8731 = !{!8732, !8733, !8734}
!8732 = !DILocalVariable(name: "dev", arg: 1, scope: !8728, file: !1299, line: 651, type: !1202)
!8733 = !DILocalVariable(name: "data", scope: !8728, file: !1299, line: 653, type: !8149)
!8734 = !DILocalVariable(name: "clk", scope: !8728, file: !1299, line: 654, type: !8735)
!8735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!8736 = !DILocation(line: 0, scope: !8728)
!8737 = !DILocation(line: 653, column: 38, scope: !8728)
!8738 = !DILocation(line: 656, column: 8, scope: !8728)
!8739 = !DILocation(line: 656, column: 14, scope: !8728)
!8740 = !DILocation(line: 657, column: 1, scope: !8728)
!8741 = distinct !DISubprogram(name: "device_is_ready", scope: !2976, file: !2976, line: 47, type: !8742, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8744)
!8742 = !DISubroutineType(types: !8743)
!8743 = !{!157, !1202}
!8744 = !{!8745}
!8745 = !DILocalVariable(name: "dev", arg: 1, scope: !8741, file: !2976, line: 47, type: !1202)
!8746 = !DILocation(line: 0, scope: !8741)
!8747 = !DILocation(line: 55, column: 2, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8741, file: !2976, line: 55, column: 2)
!8749 = !{i64 2155033840}
!8750 = !DILocation(line: 56, column: 9, scope: !8741)
!8751 = !DILocation(line: 56, column: 2, scope: !8741)
!8752 = distinct !DISubprogram(name: "clock_control_on", scope: !656, file: !656, line: 123, type: !1261, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8753)
!8753 = !{!8754, !8755, !8756}
!8754 = !DILocalVariable(name: "dev", arg: 1, scope: !8752, file: !656, line: 123, type: !1202)
!8755 = !DILocalVariable(name: "sys", arg: 2, scope: !8752, file: !656, line: 124, type: !749)
!8756 = !DILocalVariable(name: "api", scope: !8752, file: !656, line: 126, type: !1254)
!8757 = !DILocation(line: 0, scope: !8752)
!8758 = !DILocation(line: 127, column: 49, scope: !8752)
!8759 = !DILocation(line: 129, column: 14, scope: !8752)
!8760 = !DILocation(line: 129, column: 9, scope: !8752)
!8761 = !DILocation(line: 129, column: 2, scope: !8752)
!8762 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1326, file: !1326, line: 342, type: !8763, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!103, !1374, !154}
!8765 = !{!8766, !8767, !8768, !8769}
!8766 = !DILocalVariable(name: "config", arg: 1, scope: !8762, file: !1326, line: 342, type: !1374)
!8767 = !DILocalVariable(name: "id", arg: 2, scope: !8762, file: !1326, line: 343, type: !154)
!8768 = !DILocalVariable(name: "ret", scope: !8762, file: !1326, line: 345, type: !103)
!8769 = !DILocalVariable(name: "state", scope: !8762, file: !1326, line: 346, type: !1329)
!8770 = !DILocation(line: 0, scope: !8762)
!8771 = !DILocation(line: 346, column: 2, scope: !8762)
!8772 = !DILocation(line: 348, column: 8, scope: !8762)
!8773 = !DILocation(line: 349, column: 10, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8762, file: !1326, line: 349, column: 6)
!8775 = !DILocation(line: 349, column: 6, scope: !8762)
!8776 = !DILocation(line: 353, column: 44, scope: !8762)
!8777 = !DILocation(line: 353, column: 9, scope: !8762)
!8778 = !DILocation(line: 353, column: 2, scope: !8762)
!8779 = !DILocation(line: 354, column: 1, scope: !8762)
!8780 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8335, file: !8335, line: 497, type: !8494, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8781)
!8781 = !{!8782, !8783, !8784}
!8782 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8780, file: !8335, line: 497, type: !1243)
!8783 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8780, file: !8335, line: 497, type: !121)
!8784 = !DILocalVariable(name: "val", scope: !8785, file: !8335, line: 499, type: !121)
!8785 = distinct !DILexicalBlock(scope: !8780, file: !8335, line: 499, column: 3)
!8786 = !DILocation(line: 0, scope: !8780)
!8787 = !DILocation(line: 499, column: 3, scope: !8785)
!8788 = !DILocalVariable(name: "addr", arg: 1, scope: !8789, file: !4957, line: 476, type: !1295)
!8789 = distinct !DISubprogram(name: "__LDREXW", scope: !4957, file: !4957, line: 476, type: !8790, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8792)
!8790 = !DISubroutineType(types: !8791)
!8791 = !{!121, !1295}
!8792 = !{!8788, !8793}
!8793 = !DILocalVariable(name: "result", scope: !8789, file: !4957, line: 478, type: !121)
!8794 = !DILocation(line: 0, scope: !8789, inlinedAt: !8795)
!8795 = distinct !DILocation(line: 499, column: 3, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8785, file: !8335, line: 499, column: 3)
!8797 = !DILocation(line: 480, column: 4, scope: !8789, inlinedAt: !8795)
!8798 = !{i64 3527401}
!8799 = !DILocation(line: 499, column: 3, scope: !8796)
!8800 = !DILocation(line: 0, scope: !8785)
!8801 = !DILocalVariable(name: "value", arg: 1, scope: !8802, file: !4957, line: 527, type: !121)
!8802 = distinct !DISubprogram(name: "__STREXW", scope: !4957, file: !4957, line: 527, type: !8803, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8805)
!8803 = !DISubroutineType(types: !8804)
!8804 = !{!121, !121, !1295}
!8805 = !{!8801, !8806, !8807}
!8806 = !DILocalVariable(name: "addr", arg: 2, scope: !8802, file: !4957, line: 527, type: !1295)
!8807 = !DILocalVariable(name: "result", scope: !8802, file: !4957, line: 529, type: !121)
!8808 = !DILocation(line: 0, scope: !8802, inlinedAt: !8809)
!8809 = distinct !DILocation(line: 499, column: 3, scope: !8785)
!8810 = !DILocation(line: 531, column: 4, scope: !8802, inlinedAt: !8809)
!8811 = !{i64 3528837}
!8812 = distinct !{!8812, !8787, !8787}
!8813 = !DILocation(line: 500, column: 1, scope: !8780)
!8814 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8335, file: !8335, line: 850, type: !8503, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8815)
!8815 = !{!8816, !8817, !8818, !8819}
!8816 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8814, file: !8335, line: 850, type: !1243)
!8817 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8814, file: !8335, line: 850, type: !121)
!8818 = !DILocalVariable(name: "Parity", arg: 3, scope: !8814, file: !8335, line: 850, type: !121)
!8819 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8814, file: !8335, line: 851, type: !121)
!8820 = !DILocation(line: 0, scope: !8814)
!8821 = !DILocation(line: 853, column: 3, scope: !8814)
!8822 = !DILocation(line: 854, column: 3, scope: !8814)
!8823 = !DILocation(line: 855, column: 1, scope: !8814)
!8824 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8335, file: !8335, line: 1337, type: !8398, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8825)
!8825 = !{!8826}
!8826 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8824, file: !8335, line: 1337, type: !1243)
!8827 = !DILocation(line: 0, scope: !8824)
!8828 = !DILocation(line: 1339, column: 3, scope: !8824)
!8829 = !DILocation(line: 1340, column: 1, scope: !8824)
!8830 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1326, file: !1326, line: 316, type: !8831, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8833)
!8831 = !DISubroutineType(types: !8832)
!8832 = !{!103, !1374, !1329}
!8833 = !{!8834, !8835, !8836}
!8834 = !DILocalVariable(name: "config", arg: 1, scope: !8830, file: !1326, line: 317, type: !1374)
!8835 = !DILocalVariable(name: "state", arg: 2, scope: !8830, file: !1326, line: 318, type: !1329)
!8836 = !DILocalVariable(name: "reg", scope: !8830, file: !1326, line: 320, type: !22)
!8837 = !DILocation(line: 0, scope: !8830)
!8838 = !DILocation(line: 329, column: 39, scope: !8830)
!8839 = !DILocation(line: 329, column: 52, scope: !8830)
!8840 = !DILocation(line: 329, column: 9, scope: !8830)
!8841 = !DILocation(line: 329, column: 2, scope: !8830)
!8842 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8742, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1158, retainedNodes: !8843)
!8843 = !{!8844}
!8844 = !DILocalVariable(name: "dev", arg: 1, scope: !8842, file: !141, line: 730, type: !1202)
!8845 = !DILocation(line: 0, scope: !8842)
!8846 = !DILocation(line: 732, column: 9, scope: !8842)
!8847 = !DILocation(line: 732, column: 2, scope: !8842)
!8848 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1455, file: !1455, line: 270, type: !1461, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8849)
!8849 = !{!8850}
!8850 = !DILocalVariable(name: "dev", arg: 1, scope: !8848, file: !1455, line: 270, type: !1463)
!8851 = !DILocation(line: 0, scope: !8848)
!8852 = !DILocation(line: 274, column: 2, scope: !8848)
!8853 = !DILocation(line: 275, column: 12, scope: !8848)
!8854 = !DILocation(line: 276, column: 15, scope: !8848)
!8855 = !DILocation(line: 277, column: 16, scope: !8848)
!8856 = !DILocation(line: 278, column: 15, scope: !8848)
!8857 = !DILocation(line: 279, column: 16, scope: !8848)
!8858 = !DILocation(line: 282, column: 2, scope: !8848)
!8859 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8860)
!8860 = !{!8861, !8862}
!8861 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8859, file: !356, line: 1814, type: !612)
!8862 = !DILocalVariable(name: "priority", arg: 2, scope: !8859, file: !356, line: 1814, type: !121)
!8863 = !DILocation(line: 0, scope: !8859)
!8864 = !DILocation(line: 1822, column: 46, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !356, line: 1821, column: 3)
!8866 = distinct !DILexicalBlock(scope: !8859, file: !356, line: 1816, column: 7)
!8867 = !DILocation(line: 1824, column: 1, scope: !8859)
!8868 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1455, file: !1455, line: 118, type: !4894, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8869)
!8869 = !{!8870, !8871}
!8870 = !DILocalVariable(name: "arg", arg: 1, scope: !8868, file: !1455, line: 118, type: !102)
!8871 = !DILocalVariable(name: "dticks", scope: !8868, file: !1455, line: 121, type: !121)
!8872 = !DILocation(line: 0, scope: !8868)
!8873 = !DILocation(line: 124, column: 2, scope: !8868)
!8874 = !DILocation(line: 129, column: 17, scope: !8868)
!8875 = !DILocation(line: 129, column: 14, scope: !8868)
!8876 = !DILocation(line: 130, column: 15, scope: !8868)
!8877 = !DILocation(line: 145, column: 27, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !1455, line: 132, column: 16)
!8879 = distinct !DILexicalBlock(scope: !8868, file: !1455, line: 132, column: 6)
!8880 = !DILocation(line: 145, column: 25, scope: !8878)
!8881 = !DILocation(line: 145, column: 45, scope: !8878)
!8882 = !DILocation(line: 146, column: 30, scope: !8878)
!8883 = !DILocation(line: 146, column: 20, scope: !8878)
!8884 = !DILocation(line: 147, column: 3, scope: !8878)
!8885 = !DILocation(line: 151, column: 2, scope: !8868)
!8886 = !DILocation(line: 152, column: 1, scope: !8868)
!8887 = distinct !DISubprogram(name: "elapsed", scope: !1455, file: !1455, line: 85, type: !5038, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8888)
!8888 = !{!8889, !8890, !8891}
!8889 = !DILocalVariable(name: "val1", scope: !8887, file: !1455, line: 87, type: !121)
!8890 = !DILocalVariable(name: "ctrl", scope: !8887, file: !1455, line: 88, type: !121)
!8891 = !DILocalVariable(name: "val2", scope: !8887, file: !1455, line: 89, type: !121)
!8892 = !DILocation(line: 87, column: 27, scope: !8887)
!8893 = !DILocation(line: 0, scope: !8887)
!8894 = !DILocation(line: 88, column: 27, scope: !8887)
!8895 = !DILocation(line: 89, column: 27, scope: !8887)
!8896 = !DILocation(line: 105, column: 12, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8887, file: !1455, line: 105, column: 6)
!8898 = !DILocation(line: 106, column: 6, scope: !8897)
!8899 = !DILocation(line: 107, column: 16, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8897, file: !1455, line: 106, column: 24)
!8901 = !DILocation(line: 111, column: 18, scope: !8900)
!8902 = !DILocation(line: 112, column: 2, scope: !8900)
!8903 = !DILocation(line: 114, column: 20, scope: !8887)
!8904 = !DILocation(line: 114, column: 30, scope: !8887)
!8905 = !DILocation(line: 114, column: 28, scope: !8887)
!8906 = !DILocation(line: 114, column: 2, scope: !8887)
!8907 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1455, file: !1455, line: 154, type: !8908, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8910)
!8908 = !DISubroutineType(types: !8909)
!8909 = !{null, !586, !157}
!8910 = !{!8911, !8912, !8913, !8914, !8915, !8916, !8917, !8922, !8923}
!8911 = !DILocalVariable(name: "ticks", arg: 1, scope: !8907, file: !1455, line: 154, type: !586)
!8912 = !DILocalVariable(name: "idle", arg: 2, scope: !8907, file: !1455, line: 154, type: !157)
!8913 = !DILocalVariable(name: "delay", scope: !8907, file: !1455, line: 169, type: !121)
!8914 = !DILocalVariable(name: "val1", scope: !8907, file: !1455, line: 170, type: !121)
!8915 = !DILocalVariable(name: "val2", scope: !8907, file: !1455, line: 170, type: !121)
!8916 = !DILocalVariable(name: "last_load_", scope: !8907, file: !1455, line: 171, type: !121)
!8917 = !DILocalVariable(name: "key", scope: !8907, file: !1455, line: 176, type: !8918)
!8918 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !8919)
!8919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !8920)
!8920 = !{!8921}
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8919, file: !321, line: 33, baseType: !103, size: 32)
!8922 = !DILocalVariable(name: "pending", scope: !8907, file: !1455, line: 178, type: !121)
!8923 = !DILocalVariable(name: "unannounced", scope: !8907, file: !1455, line: 185, type: !121)
!8924 = !DILocation(line: 0, scope: !8907)
!8925 = !DILocation(line: 162, column: 49, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8907, file: !1455, line: 162, column: 6)
!8927 = !DILocation(line: 163, column: 17, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8926, file: !1455, line: 162, column: 78)
!8929 = !DILocation(line: 164, column: 13, scope: !8928)
!8930 = !DILocation(line: 165, column: 3, scope: !8928)
!8931 = !DILocation(line: 171, column: 24, scope: !8907)
!8932 = !DILocation(line: 173, column: 10, scope: !8907)
!8933 = !DILocation(line: 174, column: 10, scope: !8907)
!8934 = !DILocalVariable(name: "l", arg: 1, scope: !8935, file: !321, line: 136, type: !8938)
!8935 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !8936, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8939)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!8918, !8938}
!8938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 32)
!8939 = !{!8934, !8940}
!8940 = !DILocalVariable(name: "k", scope: !8935, file: !321, line: 139, type: !8918)
!8941 = !DILocation(line: 0, scope: !8935, inlinedAt: !8942)
!8942 = distinct !DILocation(line: 176, column: 25, scope: !8907)
!8943 = !DILocation(line: 55, column: 2, scope: !8944, inlinedAt: !8948)
!8944 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4783, file: !4783, line: 42, type: !4784, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8945)
!8945 = !{!8946, !8947}
!8946 = !DILocalVariable(name: "key", scope: !8944, file: !4783, line: 44, type: !32)
!8947 = !DILocalVariable(name: "tmp", scope: !8944, file: !4783, line: 53, type: !32)
!8948 = distinct !DILocation(line: 145, column: 10, scope: !8935, inlinedAt: !8942)
!8949 = !{i64 2220742}
!8950 = !DILocation(line: 0, scope: !8944, inlinedAt: !8948)
!8951 = !DILocation(line: 178, column: 21, scope: !8907)
!8952 = !DILocation(line: 180, column: 18, scope: !8907)
!8953 = !DILocation(line: 182, column: 14, scope: !8907)
!8954 = !DILocation(line: 183, column: 15, scope: !8907)
!8955 = !DILocation(line: 185, column: 39, scope: !8907)
!8956 = !DILocation(line: 185, column: 37, scope: !8907)
!8957 = !DILocation(line: 187, column: 27, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8907, file: !1455, line: 187, column: 6)
!8959 = !DILocation(line: 187, column: 6, scope: !8907)
!8960 = !DILocation(line: 202, column: 27, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8958, file: !1455, line: 195, column: 9)
!8962 = !DILocation(line: 202, column: 48, scope: !8961)
!8963 = !DILocation(line: 203, column: 9, scope: !8961)
!8964 = !DILocation(line: 204, column: 11, scope: !8961)
!8965 = !DILocation(line: 205, column: 13, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8961, file: !1455, line: 205, column: 7)
!8967 = !DILocation(line: 205, column: 7, scope: !8961)
!8968 = !DILocation(line: 0, scope: !8958)
!8969 = !DILocation(line: 212, column: 18, scope: !8907)
!8970 = !DILocation(line: 214, column: 28, scope: !8907)
!8971 = !DILocation(line: 214, column: 16, scope: !8907)
!8972 = !DILocation(line: 215, column: 15, scope: !8907)
!8973 = !DILocation(line: 227, column: 11, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8907, file: !1455, line: 227, column: 6)
!8975 = !DILocation(line: 227, column: 6, scope: !8907)
!8976 = !DILocation(line: 228, column: 15, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8974, file: !1455, line: 227, column: 19)
!8978 = !DILocation(line: 228, column: 38, scope: !8977)
!8979 = !DILocation(line: 228, column: 24, scope: !8977)
!8980 = !DILocation(line: 229, column: 2, scope: !8977)
!8981 = !DILocation(line: 230, column: 24, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8974, file: !1455, line: 229, column: 9)
!8983 = !DILocation(line: 230, column: 15, scope: !8982)
!8984 = !DILocation(line: 0, scope: !8974)
!8985 = !DILocalVariable(name: "key", arg: 2, scope: !8986, file: !321, line: 190, type: !8918)
!8986 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !8987, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8989)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{null, !8938, !8918}
!8989 = !{!8990, !8985}
!8990 = !DILocalVariable(name: "l", arg: 1, scope: !8986, file: !321, line: 189, type: !8938)
!8991 = !DILocation(line: 0, scope: !8986, inlinedAt: !8992)
!8992 = distinct !DILocation(line: 232, column: 2, scope: !8907)
!8993 = !DILocalVariable(name: "key", arg: 1, scope: !8994, file: !4783, line: 84, type: !32)
!8994 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !8995)
!8995 = !{!8993}
!8996 = !DILocation(line: 0, scope: !8994, inlinedAt: !8997)
!8997 = distinct !DILocation(line: 215, column: 2, scope: !8986, inlinedAt: !8992)
!8998 = !DILocation(line: 95, column: 2, scope: !8994, inlinedAt: !8997)
!8999 = !{i64 2221559}
!9000 = !DILocation(line: 234, column: 1, scope: !8907)
!9001 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1455, file: !1455, line: 236, type: !5038, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !9002)
!9002 = !{!9003, !9004}
!9003 = !DILocalVariable(name: "key", scope: !9001, file: !1455, line: 242, type: !8918)
!9004 = !DILocalVariable(name: "cyc", scope: !9001, file: !1455, line: 243, type: !121)
!9005 = !DILocation(line: 0, scope: !8935, inlinedAt: !9006)
!9006 = distinct !DILocation(line: 242, column: 25, scope: !9001)
!9007 = !DILocation(line: 55, column: 2, scope: !8944, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 145, column: 10, scope: !8935, inlinedAt: !9006)
!9009 = !DILocation(line: 0, scope: !8944, inlinedAt: !9008)
!9010 = !DILocation(line: 0, scope: !9001)
!9011 = !DILocation(line: 243, column: 17, scope: !9001)
!9012 = !DILocation(line: 243, column: 29, scope: !9001)
!9013 = !DILocation(line: 243, column: 27, scope: !9001)
!9014 = !DILocation(line: 243, column: 43, scope: !9001)
!9015 = !DILocation(line: 243, column: 41, scope: !9001)
!9016 = !DILocation(line: 0, scope: !8986, inlinedAt: !9017)
!9017 = distinct !DILocation(line: 245, column: 2, scope: !9001)
!9018 = !DILocation(line: 0, scope: !8994, inlinedAt: !9019)
!9019 = distinct !DILocation(line: 215, column: 2, scope: !8986, inlinedAt: !9017)
!9020 = !DILocation(line: 95, column: 2, scope: !8994, inlinedAt: !9019)
!9021 = !DILocation(line: 246, column: 13, scope: !9001)
!9022 = !DILocation(line: 246, column: 2, scope: !9001)
!9023 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1455, file: !1455, line: 249, type: !5038, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !9024)
!9024 = !{!9025, !9026}
!9025 = !DILocalVariable(name: "key", scope: !9023, file: !1455, line: 251, type: !8918)
!9026 = !DILocalVariable(name: "ret", scope: !9023, file: !1455, line: 252, type: !121)
!9027 = !DILocation(line: 0, scope: !8935, inlinedAt: !9028)
!9028 = distinct !DILocation(line: 251, column: 25, scope: !9023)
!9029 = !DILocation(line: 55, column: 2, scope: !8944, inlinedAt: !9030)
!9030 = distinct !DILocation(line: 145, column: 10, scope: !8935, inlinedAt: !9028)
!9031 = !DILocation(line: 0, scope: !8944, inlinedAt: !9030)
!9032 = !DILocation(line: 0, scope: !9023)
!9033 = !DILocation(line: 252, column: 17, scope: !9023)
!9034 = !DILocation(line: 252, column: 29, scope: !9023)
!9035 = !DILocation(line: 252, column: 27, scope: !9023)
!9036 = !DILocation(line: 0, scope: !8986, inlinedAt: !9037)
!9037 = distinct !DILocation(line: 254, column: 2, scope: !9023)
!9038 = !DILocation(line: 0, scope: !8994, inlinedAt: !9039)
!9039 = distinct !DILocation(line: 215, column: 2, scope: !8986, inlinedAt: !9037)
!9040 = !DILocation(line: 95, column: 2, scope: !8994, inlinedAt: !9039)
!9041 = !DILocation(line: 255, column: 2, scope: !9023)
!9042 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1455, file: !1455, line: 258, type: !2843, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !322)
!9043 = !DILocation(line: 260, column: 6, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9042, file: !1455, line: 260, column: 6)
!9045 = !DILocation(line: 260, column: 16, scope: !9044)
!9046 = !DILocation(line: 260, column: 6, scope: !9042)
!9047 = !DILocation(line: 261, column: 17, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9044, file: !1455, line: 260, column: 34)
!9049 = !DILocation(line: 262, column: 2, scope: !9048)
!9050 = !DILocation(line: 263, column: 1, scope: !9042)
!9051 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1455, file: !1455, line: 265, type: !2843, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1377, retainedNodes: !322)
!9052 = !DILocation(line: 267, column: 16, scope: !9051)
!9053 = !DILocation(line: 268, column: 1, scope: !9051)
!9054 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9055, file: !9055, line: 9, type: !9056, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !9079)
!9055 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9056 = !DISubroutineType(types: !9057)
!9057 = !{!103, !9058, !154, !9078}
!9058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9059, size: 32)
!9059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9060)
!9060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1326, line: 60, size: 64, elements: !9061)
!9061 = !{!9062, !9077}
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9060, file: !1326, line: 69, baseType: !9063, size: 32)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9065)
!9065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1326, line: 50, size: 64, elements: !9066)
!9066 = !{!9067, !9075, !9076}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9065, file: !1326, line: 52, baseType: !9068, size: 32)
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9070)
!9070 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1337, line: 37, baseType: !9071)
!9071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1337, line: 32, size: 64, elements: !9072)
!9072 = !{!9073, !9074}
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9071, file: !1337, line: 34, baseType: !121, size: 32)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9071, file: !1337, line: 36, baseType: !121, size: 32, offset: 32)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9065, file: !1326, line: 54, baseType: !154, size: 8, offset: 32)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9065, file: !1326, line: 56, baseType: !154, size: 8, offset: 40)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9060, file: !1326, line: 71, baseType: !154, size: 8, offset: 32)
!9078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9063, size: 32)
!9079 = !{!9080, !9081, !9082}
!9080 = !DILocalVariable(name: "config", arg: 1, scope: !9054, file: !9055, line: 9, type: !9058)
!9081 = !DILocalVariable(name: "id", arg: 2, scope: !9054, file: !9055, line: 9, type: !154)
!9082 = !DILocalVariable(name: "state", arg: 3, scope: !9054, file: !9055, line: 10, type: !9078)
!9083 = !DILocation(line: 0, scope: !9054)
!9084 = !DILocation(line: 12, column: 20, scope: !9054)
!9085 = !DILocation(line: 13, column: 27, scope: !9054)
!9086 = !DILocation(line: 13, column: 42, scope: !9054)
!9087 = !DILocation(line: 13, column: 19, scope: !9054)
!9088 = !DILocation(line: 13, column: 16, scope: !9054)
!9089 = !DILocation(line: 13, column: 2, scope: !9054)
!9090 = distinct !{!9090, !9089, !9091}
!9091 = !DILocation(line: 19, column: 2, scope: !9054)
!9092 = !DILocation(line: 14, column: 23, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9094, file: !9055, line: 14, column: 7)
!9094 = distinct !DILexicalBlock(scope: !9054, file: !9055, line: 13, column: 54)
!9095 = !DILocation(line: 14, column: 10, scope: !9093)
!9096 = !DILocation(line: 18, column: 11, scope: !9094)
!9097 = !DILocation(line: 14, column: 7, scope: !9094)
!9098 = !DILocation(line: 22, column: 1, scope: !9054)
!9099 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1572, file: !1572, line: 193, type: !9100, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1490, retainedNodes: !9109)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!103, !9102, !154, !22}
!9102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9103, size: 32)
!9103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9104)
!9104 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1337, line: 37, baseType: !9105)
!9105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1337, line: 32, size: 64, elements: !9106)
!9106 = !{!9107, !9108}
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9105, file: !1337, line: 34, baseType: !121, size: 32)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9105, file: !1337, line: 36, baseType: !121, size: 32, offset: 32)
!9109 = !{!9110, !9111, !9112, !9113, !9114, !9115, !9116, !9117, !9119}
!9110 = !DILocalVariable(name: "pins", arg: 1, scope: !9099, file: !1572, line: 193, type: !9102)
!9111 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9099, file: !1572, line: 193, type: !154)
!9112 = !DILocalVariable(name: "reg", arg: 3, scope: !9099, file: !1572, line: 194, type: !22)
!9113 = !DILocalVariable(name: "pin", scope: !9099, file: !1572, line: 196, type: !121)
!9114 = !DILocalVariable(name: "mux", scope: !9099, file: !1572, line: 196, type: !121)
!9115 = !DILocalVariable(name: "pin_cgf", scope: !9099, file: !1572, line: 197, type: !121)
!9116 = !DILocalVariable(name: "ret", scope: !9099, file: !1572, line: 198, type: !103)
!9117 = !DILocalVariable(name: "i", scope: !9118, file: !1572, line: 209, type: !154)
!9118 = distinct !DILexicalBlock(scope: !9099, file: !1572, line: 209, column: 2)
!9119 = !DILocalVariable(name: "gpio_out", scope: !9120, file: !1572, line: 239, type: !121)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !1572, line: 238, column: 55)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !1572, line: 238, column: 14)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !1572, line: 236, column: 14)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !1572, line: 234, column: 7)
!9124 = distinct !DILexicalBlock(scope: !9125, file: !1572, line: 209, column: 41)
!9125 = distinct !DILexicalBlock(scope: !9118, file: !1572, line: 209, column: 2)
!9126 = !DILocation(line: 0, scope: !9099)
!9127 = !DILocation(line: 0, scope: !9118)
!9128 = !DILocation(line: 209, column: 25, scope: !9125)
!9129 = !DILocation(line: 209, column: 2, scope: !9118)
!9130 = distinct !{!9130, !9129, !9131}
!9131 = !DILocation(line: 259, column: 2, scope: !9118)
!9132 = !DILocation(line: 210, column: 17, scope: !9124)
!9133 = !DILocation(line: 234, column: 7, scope: !9123)
!9134 = !DILocation(line: 234, column: 33, scope: !9123)
!9135 = !DILocation(line: 234, column: 7, scope: !9124)
!9136 = !DILocation(line: 235, column: 22, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9123, file: !1572, line: 234, column: 49)
!9138 = !DILocation(line: 235, column: 29, scope: !9137)
!9139 = !DILocation(line: 236, column: 3, scope: !9137)
!9140 = !DILocation(line: 236, column: 14, scope: !9123)
!9141 = !DILocation(line: 239, column: 32, scope: !9120)
!9142 = !DILocation(line: 0, scope: !9120)
!9143 = !DILocation(line: 241, column: 8, scope: !9120)
!9144 = !DILocation(line: 246, column: 3, scope: !9120)
!9145 = !DILocation(line: 252, column: 9, scope: !9124)
!9146 = !DILocation(line: 255, column: 9, scope: !9124)
!9147 = !DILocation(line: 256, column: 11, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9124, file: !1572, line: 256, column: 7)
!9149 = !DILocation(line: 209, column: 37, scope: !9125)
!9150 = !DILocation(line: 256, column: 7, scope: !9124)
!9151 = !DILocation(line: 262, column: 1, scope: !9099)
!9152 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1572, file: !1572, line: 176, type: !9153, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1490, retainedNodes: !9155)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!103, !121, !121, !121}
!9155 = !{!9156, !9157, !9158, !9159}
!9156 = !DILocalVariable(name: "pin", arg: 1, scope: !9152, file: !1572, line: 176, type: !121)
!9157 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9152, file: !1572, line: 176, type: !121)
!9158 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9152, file: !1572, line: 176, type: !121)
!9159 = !DILocalVariable(name: "port_device", scope: !9152, file: !1572, line: 178, type: !1502)
!9160 = !DILocation(line: 0, scope: !9152)
!9161 = !DILocation(line: 180, column: 22, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9152, file: !1572, line: 180, column: 6)
!9163 = !DILocation(line: 180, column: 6, scope: !9152)
!9164 = !DILocation(line: 180, column: 6, scope: !9162)
!9165 = !DILocation(line: 184, column: 16, scope: !9152)
!9166 = !DILocation(line: 186, column: 19, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9152, file: !1572, line: 186, column: 6)
!9168 = !DILocation(line: 186, column: 28, scope: !9167)
!9169 = !DILocation(line: 186, column: 33, scope: !9167)
!9170 = !DILocation(line: 186, column: 6, scope: !9152)
!9171 = !DILocation(line: 190, column: 43, scope: !9152)
!9172 = !DILocation(line: 190, column: 9, scope: !9152)
!9173 = !DILocation(line: 190, column: 2, scope: !9152)
!9174 = !DILocation(line: 191, column: 1, scope: !9152)
!9175 = distinct !DISubprogram(name: "device_is_ready", scope: !2976, file: !2976, line: 47, type: !9176, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1490, retainedNodes: !9178)
!9176 = !DISubroutineType(types: !9177)
!9177 = !{!157, !1502}
!9178 = !{!9179}
!9179 = !DILocalVariable(name: "dev", arg: 1, scope: !9175, file: !2976, line: 47, type: !1502)
!9180 = !DILocation(line: 0, scope: !9175)
!9181 = !DILocation(line: 55, column: 2, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9175, file: !2976, line: 55, column: 2)
!9183 = !{i64 2149458812}
!9184 = !DILocation(line: 56, column: 9, scope: !9175)
!9185 = !DILocation(line: 56, column: 2, scope: !9175)
!9186 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9176, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1490, retainedNodes: !9187)
!9187 = !{!9188}
!9188 = !DILocalVariable(name: "dev", arg: 1, scope: !9186, file: !141, line: 730, type: !1502)
!9189 = !DILocation(line: 0, scope: !9186)
!9190 = !DILocation(line: 732, column: 9, scope: !9186)
!9191 = !DILocation(line: 732, column: 2, scope: !9186)
!9192 = distinct !DISubprogram(name: "SystemInit", scope: !1621, file: !1621, line: 167, type: !2843, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1580, retainedNodes: !322)
!9193 = !DILocation(line: 182, column: 1, scope: !9192)
!9194 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1621, file: !1621, line: 220, type: !2843, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1580, retainedNodes: !9195)
!9195 = !{!9196, !9197, !9198, !9199, !9200}
!9196 = !DILocalVariable(name: "tmp", scope: !9194, file: !1621, line: 222, type: !121)
!9197 = !DILocalVariable(name: "pllvco", scope: !9194, file: !1621, line: 222, type: !121)
!9198 = !DILocalVariable(name: "pllp", scope: !9194, file: !1621, line: 222, type: !121)
!9199 = !DILocalVariable(name: "pllsource", scope: !9194, file: !1621, line: 222, type: !121)
!9200 = !DILocalVariable(name: "pllm", scope: !9194, file: !1621, line: 222, type: !121)
!9201 = !DILocation(line: 0, scope: !9194)
!9202 = !DILocation(line: 225, column: 14, scope: !9194)
!9203 = !DILocation(line: 225, column: 19, scope: !9194)
!9204 = !DILocation(line: 227, column: 3, scope: !9194)
!9205 = !DILocation(line: 240, column: 25, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9194, file: !1621, line: 228, column: 3)
!9207 = !DILocation(line: 241, column: 19, scope: !9206)
!9208 = !DILocation(line: 241, column: 27, scope: !9206)
!9209 = !DILocation(line: 0, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9206, file: !1621, line: 243, column: 11)
!9211 = !DILocation(line: 254, column: 22, scope: !9206)
!9212 = !DILocation(line: 254, column: 62, scope: !9206)
!9213 = !DILocation(line: 255, column: 31, scope: !9206)
!9214 = !DILocation(line: 256, column: 7, scope: !9206)
!9215 = !DILocation(line: 0, scope: !9206)
!9216 = !DILocation(line: 263, column: 30, scope: !9194)
!9217 = !DILocation(line: 263, column: 52, scope: !9194)
!9218 = !DILocation(line: 263, column: 9, scope: !9194)
!9219 = !DILocation(line: 265, column: 19, scope: !9194)
!9220 = !DILocation(line: 266, column: 1, scope: !9194)
!9221 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9222, file: !9222, line: 200, type: !9223, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9222 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9223 = !DISubroutineType(types: !9224)
!9224 = !{!9225}
!9225 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2658, line: 44, baseType: !2657)
!9226 = !DILocation(line: 202, column: 3, scope: !9221)
!9227 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9222, file: !9222, line: 219, type: !9228, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !9253)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{!9225, !9230}
!9230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9231, size: 32)
!9231 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9232, line: 70, baseType: !9233)
!9232 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9232, line: 49, size: 416, elements: !9234)
!9234 = !{!9235, !9236, !9237, !9238, !9239, !9240, !9241}
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9233, file: !9232, line: 51, baseType: !121, size: 32)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9233, file: !9232, line: 54, baseType: !121, size: 32, offset: 32)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9233, file: !9232, line: 57, baseType: !121, size: 32, offset: 64)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9233, file: !9232, line: 60, baseType: !121, size: 32, offset: 96)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9233, file: !9232, line: 63, baseType: !121, size: 32, offset: 128)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9233, file: !9232, line: 66, baseType: !121, size: 32, offset: 160)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9233, file: !9232, line: 69, baseType: !9242, size: 224, offset: 192)
!9242 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9243, line: 73, baseType: !9244)
!9243 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9243, line: 45, size: 224, elements: !9245)
!9245 = !{!9246, !9247, !9248, !9249, !9250, !9251, !9252}
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9244, file: !9243, line: 47, baseType: !121, size: 32)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9244, file: !9243, line: 50, baseType: !121, size: 32, offset: 32)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9244, file: !9243, line: 53, baseType: !121, size: 32, offset: 64)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9244, file: !9243, line: 56, baseType: !121, size: 32, offset: 96)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9244, file: !9243, line: 60, baseType: !121, size: 32, offset: 128)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9244, file: !9243, line: 63, baseType: !121, size: 32, offset: 160)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !9244, file: !9243, line: 68, baseType: !121, size: 32, offset: 192)
!9253 = !{!9254, !9255, !9256, !9257, !9261}
!9254 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9227, file: !9222, line: 219, type: !9230)
!9255 = !DILocalVariable(name: "tickstart", scope: !9227, file: !9222, line: 221, type: !121)
!9256 = !DILocalVariable(name: "pll_config", scope: !9227, file: !9222, line: 221, type: !121)
!9257 = !DILocalVariable(name: "pwrclkchanged", scope: !9258, file: !9222, line: 391, type: !9260)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !9222, line: 390, column: 3)
!9259 = distinct !DILexicalBlock(scope: !9227, file: !9222, line: 389, column: 6)
!9260 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !651, line: 188, baseType: !2664)
!9261 = !DILocalVariable(name: "tmpreg", scope: !9262, file: !9222, line: 400, type: !120)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !9222, line: 400, column: 7)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !9222, line: 399, column: 5)
!9264 = distinct !DILexicalBlock(scope: !9258, file: !9222, line: 398, column: 8)
!9265 = !DILocation(line: 0, scope: !9227)
!9266 = !DILocation(line: 224, column: 24, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9227, file: !9222, line: 224, column: 6)
!9268 = !DILocation(line: 224, column: 6, scope: !9227)
!9269 = !DILocation(line: 232, column: 27, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9227, file: !9222, line: 232, column: 6)
!9271 = !DILocation(line: 232, column: 43, scope: !9270)
!9272 = !DILocation(line: 232, column: 69, scope: !9270)
!9273 = !DILocation(line: 232, column: 6, scope: !9227)
!9274 = !DILocation(line: 237, column: 9, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9276, file: !9222, line: 237, column: 8)
!9276 = distinct !DILexicalBlock(scope: !9270, file: !9222, line: 233, column: 3)
!9277 = !DILocation(line: 237, column: 39, scope: !9275)
!9278 = !DILocation(line: 237, column: 60, scope: !9275)
!9279 = !DILocation(line: 238, column: 9, scope: !9275)
!9280 = !DILocation(line: 238, column: 39, scope: !9275)
!9281 = !DILocation(line: 238, column: 60, scope: !9275)
!9282 = !DILocation(line: 238, column: 70, scope: !9275)
!9283 = !DILocation(line: 238, column: 78, scope: !9275)
!9284 = !DILocation(line: 238, column: 100, scope: !9275)
!9285 = !DILocation(line: 237, column: 8, scope: !9276)
!9286 = !DILocation(line: 240, column: 11, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9288, file: !9222, line: 240, column: 10)
!9288 = distinct !DILexicalBlock(scope: !9275, file: !9222, line: 239, column: 5)
!9289 = !DILocation(line: 240, column: 57, scope: !9287)
!9290 = !DILocation(line: 240, column: 80, scope: !9287)
!9291 = !DILocation(line: 240, column: 89, scope: !9287)
!9292 = !DILocation(line: 240, column: 10, scope: !9288)
!9293 = !DILocation(line: 248, column: 7, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9295, file: !9222, line: 248, column: 7)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !9222, line: 248, column: 7)
!9296 = distinct !DILexicalBlock(scope: !9275, file: !9222, line: 246, column: 5)
!9297 = !DILocation(line: 248, column: 7, scope: !9295)
!9298 = !DILocation(line: 248, column: 7, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9294, file: !9222, line: 248, column: 7)
!9300 = !DILocation(line: 248, column: 7, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9302, file: !9222, line: 248, column: 7)
!9302 = distinct !DILexicalBlock(scope: !9294, file: !9222, line: 248, column: 7)
!9303 = !DILocation(line: 248, column: 7, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9302, file: !9222, line: 248, column: 7)
!9305 = !DILocation(line: 0, scope: !9294)
!9306 = !DILocation(line: 251, column: 30, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9296, file: !9222, line: 251, column: 10)
!9308 = !DILocation(line: 251, column: 40, scope: !9307)
!9309 = !DILocation(line: 0, scope: !9307)
!9310 = !DILocation(line: 251, column: 10, scope: !9296)
!9311 = !DILocation(line: 257, column: 15, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9307, file: !9222, line: 252, column: 7)
!9313 = !DILocation(line: 257, column: 51, scope: !9312)
!9314 = !DILocation(line: 257, column: 9, scope: !9312)
!9315 = !DILocation(line: 259, column: 15, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !9222, line: 259, column: 14)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !9222, line: 258, column: 9)
!9318 = !DILocation(line: 259, column: 29, scope: !9316)
!9319 = !DILocation(line: 259, column: 43, scope: !9316)
!9320 = !DILocation(line: 259, column: 14, scope: !9317)
!9321 = distinct !{!9321, !9314, !9322}
!9322 = !DILocation(line: 263, column: 9, scope: !9312)
!9323 = !DILocation(line: 271, column: 15, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9307, file: !9222, line: 266, column: 7)
!9325 = !DILocation(line: 271, column: 9, scope: !9324)
!9326 = !DILocation(line: 273, column: 15, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !9222, line: 273, column: 14)
!9328 = distinct !DILexicalBlock(scope: !9324, file: !9222, line: 272, column: 9)
!9329 = !DILocation(line: 273, column: 29, scope: !9327)
!9330 = !DILocation(line: 273, column: 43, scope: !9327)
!9331 = !DILocation(line: 273, column: 14, scope: !9328)
!9332 = distinct !{!9332, !9325, !9333}
!9333 = !DILocation(line: 277, column: 9, scope: !9324)
!9334 = !DILocation(line: 282, column: 27, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9227, file: !9222, line: 282, column: 6)
!9336 = !DILocation(line: 282, column: 43, scope: !9335)
!9337 = !DILocation(line: 282, column: 69, scope: !9335)
!9338 = !DILocation(line: 282, column: 6, scope: !9227)
!9339 = !DILocation(line: 289, column: 9, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !9222, line: 289, column: 8)
!9341 = distinct !DILexicalBlock(scope: !9335, file: !9222, line: 283, column: 3)
!9342 = !DILocation(line: 289, column: 39, scope: !9340)
!9343 = !DILocation(line: 289, column: 60, scope: !9340)
!9344 = !DILocation(line: 290, column: 9, scope: !9340)
!9345 = !DILocation(line: 290, column: 39, scope: !9340)
!9346 = !DILocation(line: 290, column: 60, scope: !9340)
!9347 = !DILocation(line: 290, column: 70, scope: !9340)
!9348 = !DILocation(line: 290, column: 78, scope: !9340)
!9349 = !DILocation(line: 290, column: 100, scope: !9340)
!9350 = !DILocation(line: 289, column: 8, scope: !9341)
!9351 = !DILocation(line: 293, column: 11, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !9222, line: 293, column: 10)
!9353 = distinct !DILexicalBlock(scope: !9340, file: !9222, line: 291, column: 5)
!9354 = !DILocation(line: 293, column: 57, scope: !9352)
!9355 = !DILocation(line: 293, column: 80, scope: !9352)
!9356 = !DILocation(line: 293, column: 89, scope: !9352)
!9357 = !DILocation(line: 293, column: 10, scope: !9353)
!9358 = !DILocation(line: 307, column: 30, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !9222, line: 307, column: 10)
!9360 = distinct !DILexicalBlock(scope: !9340, file: !9222, line: 305, column: 5)
!9361 = !DILocation(line: 307, column: 39, scope: !9359)
!9362 = !DILocation(line: 307, column: 10, scope: !9360)
!9363 = !DILocation(line: 310, column: 9, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9359, file: !9222, line: 308, column: 7)
!9365 = !DILocation(line: 313, column: 21, scope: !9364)
!9366 = !DILocation(line: 316, column: 9, scope: !9364)
!9367 = !DILocation(line: 316, column: 15, scope: !9364)
!9368 = !DILocation(line: 316, column: 51, scope: !9364)
!9369 = !DILocation(line: 318, column: 15, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !9222, line: 318, column: 14)
!9371 = distinct !DILexicalBlock(scope: !9364, file: !9222, line: 317, column: 9)
!9372 = !DILocation(line: 318, column: 29, scope: !9370)
!9373 = !DILocation(line: 318, column: 43, scope: !9370)
!9374 = !DILocation(line: 318, column: 14, scope: !9371)
!9375 = distinct !{!9375, !9366, !9376}
!9376 = !DILocation(line: 322, column: 9, scope: !9364)
!9377 = !DILocation(line: 330, column: 9, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9359, file: !9222, line: 328, column: 7)
!9379 = !DILocation(line: 333, column: 21, scope: !9378)
!9380 = !DILocation(line: 336, column: 9, scope: !9378)
!9381 = !DILocation(line: 336, column: 15, scope: !9378)
!9382 = !DILocation(line: 338, column: 15, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !9222, line: 338, column: 14)
!9384 = distinct !DILexicalBlock(scope: !9378, file: !9222, line: 337, column: 9)
!9385 = !DILocation(line: 338, column: 29, scope: !9383)
!9386 = !DILocation(line: 338, column: 43, scope: !9383)
!9387 = !DILocation(line: 338, column: 14, scope: !9384)
!9388 = distinct !{!9388, !9380, !9389}
!9389 = !DILocation(line: 342, column: 9, scope: !9378)
!9390 = !DILocation(line: 0, scope: !9340)
!9391 = !DILocation(line: 347, column: 27, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9227, file: !9222, line: 347, column: 6)
!9393 = !DILocation(line: 347, column: 43, scope: !9392)
!9394 = !DILocation(line: 347, column: 69, scope: !9392)
!9395 = !DILocation(line: 347, column: 6, scope: !9227)
!9396 = !DILocation(line: 353, column: 28, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9398, file: !9222, line: 353, column: 8)
!9398 = distinct !DILexicalBlock(scope: !9392, file: !9222, line: 348, column: 3)
!9399 = !DILocation(line: 353, column: 37, scope: !9397)
!9400 = !DILocation(line: 353, column: 8, scope: !9398)
!9401 = !DILocation(line: 356, column: 7, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9397, file: !9222, line: 354, column: 5)
!9403 = !DILocation(line: 359, column: 19, scope: !9402)
!9404 = !DILocation(line: 362, column: 7, scope: !9402)
!9405 = !DILocation(line: 362, column: 13, scope: !9402)
!9406 = !DILocation(line: 362, column: 49, scope: !9402)
!9407 = !DILocation(line: 364, column: 13, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9409, file: !9222, line: 364, column: 12)
!9409 = distinct !DILexicalBlock(scope: !9402, file: !9222, line: 363, column: 7)
!9410 = !DILocation(line: 364, column: 27, scope: !9408)
!9411 = !DILocation(line: 364, column: 41, scope: !9408)
!9412 = !DILocation(line: 364, column: 12, scope: !9409)
!9413 = distinct !{!9413, !9404, !9414}
!9414 = !DILocation(line: 368, column: 7, scope: !9402)
!9415 = !DILocation(line: 373, column: 7, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9397, file: !9222, line: 371, column: 5)
!9417 = !DILocation(line: 376, column: 19, scope: !9416)
!9418 = !DILocation(line: 379, column: 7, scope: !9416)
!9419 = !DILocation(line: 379, column: 13, scope: !9416)
!9420 = !DILocation(line: 381, column: 13, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !9222, line: 381, column: 12)
!9422 = distinct !DILexicalBlock(scope: !9416, file: !9222, line: 380, column: 7)
!9423 = !DILocation(line: 381, column: 27, scope: !9421)
!9424 = !DILocation(line: 381, column: 41, scope: !9421)
!9425 = !DILocation(line: 381, column: 12, scope: !9422)
!9426 = distinct !{!9426, !9418, !9427}
!9427 = !DILocation(line: 385, column: 7, scope: !9416)
!9428 = !DILocation(line: 389, column: 27, scope: !9259)
!9429 = !DILocation(line: 389, column: 43, scope: !9259)
!9430 = !DILocation(line: 389, column: 69, scope: !9259)
!9431 = !DILocation(line: 389, column: 6, scope: !9227)
!9432 = !DILocation(line: 0, scope: !9258)
!9433 = !DILocation(line: 398, column: 8, scope: !9264)
!9434 = !DILocation(line: 398, column: 8, scope: !9258)
!9435 = !DILocation(line: 400, column: 7, scope: !9262)
!9436 = !DILocation(line: 400, column: 7, scope: !9263)
!9437 = !DILocation(line: 402, column: 5, scope: !9263)
!9438 = !DILocation(line: 404, column: 8, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9258, file: !9222, line: 404, column: 8)
!9440 = !DILocation(line: 404, column: 8, scope: !9258)
!9441 = !DILocation(line: 407, column: 7, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9439, file: !9222, line: 405, column: 5)
!9443 = !DILocation(line: 410, column: 19, scope: !9442)
!9444 = !DILocation(line: 412, column: 7, scope: !9442)
!9445 = !DILocation(line: 412, column: 13, scope: !9442)
!9446 = !DILocation(line: 414, column: 13, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !9222, line: 414, column: 12)
!9448 = distinct !DILexicalBlock(scope: !9442, file: !9222, line: 413, column: 7)
!9449 = !DILocation(line: 414, column: 27, scope: !9447)
!9450 = !DILocation(line: 414, column: 40, scope: !9447)
!9451 = !DILocation(line: 414, column: 12, scope: !9448)
!9452 = distinct !{!9452, !9444, !9453}
!9453 = !DILocation(line: 418, column: 7, scope: !9442)
!9454 = !DILocation(line: 422, column: 5, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9456, file: !9222, line: 422, column: 5)
!9456 = distinct !DILexicalBlock(scope: !9258, file: !9222, line: 422, column: 5)
!9457 = !DILocation(line: 422, column: 5, scope: !9456)
!9458 = !DILocation(line: 422, column: 5, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9455, file: !9222, line: 422, column: 5)
!9460 = !DILocation(line: 422, column: 5, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !9222, line: 422, column: 5)
!9462 = distinct !DILexicalBlock(scope: !9455, file: !9222, line: 422, column: 5)
!9463 = !DILocation(line: 422, column: 5, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9462, file: !9222, line: 422, column: 5)
!9465 = !DILocation(line: 0, scope: !9455)
!9466 = !DILocation(line: 424, column: 28, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9258, file: !9222, line: 424, column: 8)
!9468 = !DILocation(line: 424, column: 38, scope: !9467)
!9469 = !DILocation(line: 0, scope: !9467)
!9470 = !DILocation(line: 424, column: 8, scope: !9258)
!9471 = !DILocation(line: 430, column: 13, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9467, file: !9222, line: 425, column: 5)
!9473 = !DILocation(line: 430, column: 49, scope: !9472)
!9474 = !DILocation(line: 430, column: 7, scope: !9472)
!9475 = !DILocation(line: 432, column: 13, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !9222, line: 432, column: 12)
!9477 = distinct !DILexicalBlock(scope: !9472, file: !9222, line: 431, column: 7)
!9478 = !DILocation(line: 432, column: 27, scope: !9476)
!9479 = !DILocation(line: 432, column: 41, scope: !9476)
!9480 = !DILocation(line: 432, column: 12, scope: !9477)
!9481 = distinct !{!9481, !9474, !9482}
!9482 = !DILocation(line: 436, column: 7, scope: !9472)
!9483 = !DILocation(line: 444, column: 13, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9467, file: !9222, line: 439, column: 5)
!9485 = !DILocation(line: 444, column: 7, scope: !9484)
!9486 = !DILocation(line: 446, column: 13, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !9222, line: 446, column: 12)
!9488 = distinct !DILexicalBlock(scope: !9484, file: !9222, line: 445, column: 7)
!9489 = !DILocation(line: 446, column: 27, scope: !9487)
!9490 = !DILocation(line: 446, column: 41, scope: !9487)
!9491 = !DILocation(line: 446, column: 12, scope: !9488)
!9492 = distinct !{!9492, !9485, !9493}
!9493 = !DILocation(line: 450, column: 7, scope: !9484)
!9494 = !DILocation(line: 454, column: 8, scope: !9258)
!9495 = !DILocation(line: 456, column: 7, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !9222, line: 455, column: 5)
!9497 = distinct !DILexicalBlock(scope: !9258, file: !9222, line: 454, column: 8)
!9498 = !DILocation(line: 457, column: 5, scope: !9496)
!9499 = !DILocation(line: 462, column: 31, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9227, file: !9222, line: 462, column: 7)
!9501 = !DILocation(line: 462, column: 41, scope: !9500)
!9502 = !DILocation(line: 462, column: 7, scope: !9227)
!9503 = !DILocation(line: 465, column: 8, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !9222, line: 465, column: 8)
!9505 = distinct !DILexicalBlock(scope: !9500, file: !9222, line: 463, column: 3)
!9506 = !DILocation(line: 465, column: 38, scope: !9504)
!9507 = !DILocation(line: 465, column: 8, scope: !9505)
!9508 = !DILocation(line: 467, column: 44, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9510, file: !9222, line: 467, column: 10)
!9510 = distinct !DILexicalBlock(scope: !9504, file: !9222, line: 466, column: 5)
!9511 = !DILocation(line: 0, scope: !9509)
!9512 = !DILocation(line: 467, column: 10, scope: !9510)
!9513 = !DILocation(line: 483, column: 15, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9509, file: !9222, line: 468, column: 7)
!9515 = !DILocation(line: 483, column: 9, scope: !9514)
!9516 = !DILocation(line: 485, column: 15, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !9222, line: 485, column: 14)
!9518 = distinct !DILexicalBlock(scope: !9514, file: !9222, line: 484, column: 9)
!9519 = !DILocation(line: 485, column: 29, scope: !9517)
!9520 = !DILocation(line: 485, column: 43, scope: !9517)
!9521 = !DILocation(line: 485, column: 14, scope: !9518)
!9522 = distinct !{!9522, !9515, !9523}
!9523 = !DILocation(line: 489, column: 9, scope: !9514)
!9524 = !DILocation(line: 492, column: 9, scope: !9514)
!9525 = !DILocation(line: 498, column: 9, scope: !9514)
!9526 = !DILocation(line: 501, column: 21, scope: !9514)
!9527 = !DILocation(line: 504, column: 9, scope: !9514)
!9528 = !DILocation(line: 504, column: 15, scope: !9514)
!9529 = !DILocation(line: 504, column: 51, scope: !9514)
!9530 = !DILocation(line: 506, column: 15, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !9222, line: 506, column: 14)
!9532 = distinct !DILexicalBlock(scope: !9514, file: !9222, line: 505, column: 9)
!9533 = !DILocation(line: 506, column: 29, scope: !9531)
!9534 = !DILocation(line: 506, column: 43, scope: !9531)
!9535 = !DILocation(line: 506, column: 14, scope: !9532)
!9536 = distinct !{!9536, !9527, !9537}
!9537 = !DILocation(line: 510, column: 9, scope: !9514)
!9538 = !DILocation(line: 521, column: 15, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9509, file: !9222, line: 513, column: 7)
!9540 = !DILocation(line: 521, column: 9, scope: !9539)
!9541 = !DILocation(line: 523, column: 15, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !9222, line: 523, column: 14)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !9222, line: 522, column: 9)
!9544 = !DILocation(line: 523, column: 29, scope: !9542)
!9545 = !DILocation(line: 523, column: 43, scope: !9542)
!9546 = !DILocation(line: 523, column: 14, scope: !9543)
!9547 = distinct !{!9547, !9540, !9548}
!9548 = !DILocation(line: 527, column: 9, scope: !9539)
!9549 = !DILocation(line: 533, column: 44, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9551, file: !9222, line: 533, column: 10)
!9551 = distinct !DILexicalBlock(scope: !9504, file: !9222, line: 531, column: 5)
!9552 = !DILocation(line: 533, column: 10, scope: !9551)
!9553 = !DILocation(line: 540, column: 27, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !9222, line: 538, column: 7)
!9555 = !DILocation(line: 543, column: 14, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9554, file: !9222, line: 542, column: 13)
!9557 = !DILocation(line: 543, column: 81, scope: !9556)
!9558 = !DILocation(line: 543, column: 55, scope: !9556)
!9559 = !DILocation(line: 543, column: 92, scope: !9556)
!9560 = !DILocation(line: 544, column: 14, scope: !9556)
!9561 = !DILocation(line: 544, column: 80, scope: !9556)
!9562 = !DILocation(line: 544, column: 53, scope: !9556)
!9563 = !DILocation(line: 544, column: 111, scope: !9556)
!9564 = !DILocation(line: 545, column: 14, scope: !9556)
!9565 = !DILocation(line: 545, column: 80, scope: !9556)
!9566 = !DILocation(line: 545, column: 86, scope: !9556)
!9567 = !DILocation(line: 545, column: 53, scope: !9556)
!9568 = !DILocation(line: 545, column: 111, scope: !9556)
!9569 = !DILocation(line: 546, column: 14, scope: !9556)
!9570 = !DILocation(line: 546, column: 82, scope: !9556)
!9571 = !DILocation(line: 546, column: 101, scope: !9556)
!9572 = !DILocation(line: 546, column: 53, scope: !9556)
!9573 = !DILocation(line: 546, column: 126, scope: !9556)
!9574 = !DILocation(line: 547, column: 14, scope: !9556)
!9575 = !DILocation(line: 547, column: 80, scope: !9556)
!9576 = !DILocation(line: 547, column: 85, scope: !9556)
!9577 = !DILocation(line: 547, column: 53, scope: !9556)
!9578 = !DILocation(line: 547, column: 111, scope: !9556)
!9579 = !DILocation(line: 548, column: 14, scope: !9556)
!9580 = !DILocation(line: 548, column: 80, scope: !9556)
!9581 = !DILocation(line: 548, column: 85, scope: !9556)
!9582 = !DILocation(line: 548, column: 53, scope: !9556)
!9583 = !DILocation(line: 542, column: 13, scope: !9554)
!9584 = !DILocation(line: 563, column: 3, scope: !9227)
!9585 = !DILocation(line: 564, column: 1, scope: !9227)
!9586 = !DISubprogram(name: "HAL_GetTick", scope: !9587, file: !9587, line: 234, type: !5038, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9587 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9588 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !9222, file: !9222, line: 591, type: !9589, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !9600)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{!9225, !9591, !121}
!9591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9592, size: 32)
!9592 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9232, line: 92, baseType: !9593)
!9593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9232, line: 75, size: 160, elements: !9594)
!9594 = !{!9595, !9596, !9597, !9598, !9599}
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !9593, file: !9232, line: 77, baseType: !121, size: 32)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !9593, file: !9232, line: 80, baseType: !121, size: 32, offset: 32)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !9593, file: !9232, line: 83, baseType: !121, size: 32, offset: 64)
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !9593, file: !9232, line: 86, baseType: !121, size: 32, offset: 96)
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !9593, file: !9232, line: 89, baseType: !121, size: 32, offset: 128)
!9600 = !{!9601, !9602, !9603}
!9601 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9588, file: !9222, line: 591, type: !9591)
!9602 = !DILocalVariable(name: "FLatency", arg: 2, scope: !9588, file: !9222, line: 591, type: !121)
!9603 = !DILocalVariable(name: "tickstart", scope: !9588, file: !9222, line: 593, type: !121)
!9604 = !DILocation(line: 0, scope: !9588)
!9605 = !DILocation(line: 596, column: 24, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9588, file: !9222, line: 596, column: 6)
!9607 = !DILocation(line: 596, column: 6, scope: !9588)
!9608 = !DILocation(line: 610, column: 17, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9588, file: !9222, line: 610, column: 6)
!9610 = !DILocation(line: 610, column: 15, scope: !9609)
!9611 = !DILocation(line: 610, column: 6, scope: !9588)
!9612 = !DILocation(line: 613, column: 5, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !9222, line: 611, column: 3)
!9614 = !DILocation(line: 617, column: 8, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9613, file: !9222, line: 617, column: 8)
!9616 = !DILocation(line: 617, column: 34, scope: !9615)
!9617 = !DILocation(line: 617, column: 8, scope: !9613)
!9618 = !DILocation(line: 624, column: 27, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9588, file: !9222, line: 624, column: 6)
!9620 = !DILocation(line: 624, column: 38, scope: !9619)
!9621 = !DILocation(line: 624, column: 60, scope: !9619)
!9622 = !DILocation(line: 624, column: 6, scope: !9588)
!9623 = !DILocation(line: 628, column: 40, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !9222, line: 628, column: 8)
!9625 = distinct !DILexicalBlock(scope: !9619, file: !9222, line: 625, column: 3)
!9626 = !DILocation(line: 628, column: 63, scope: !9624)
!9627 = !DILocation(line: 628, column: 8, scope: !9625)
!9628 = !DILocation(line: 630, column: 7, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9624, file: !9222, line: 629, column: 5)
!9630 = !DILocation(line: 633, column: 29, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9625, file: !9222, line: 633, column: 8)
!9632 = !DILocation(line: 631, column: 5, scope: !9629)
!9633 = !DILocation(line: 633, column: 40, scope: !9631)
!9634 = !DILocation(line: 633, column: 63, scope: !9631)
!9635 = !DILocation(line: 633, column: 8, scope: !9625)
!9636 = !DILocation(line: 635, column: 7, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9631, file: !9222, line: 634, column: 5)
!9638 = !DILocation(line: 636, column: 5, scope: !9637)
!9639 = !DILocation(line: 639, column: 5, scope: !9625)
!9640 = !DILocation(line: 643, column: 27, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9588, file: !9222, line: 643, column: 6)
!9642 = !DILocation(line: 640, column: 3, scope: !9625)
!9643 = !DILocation(line: 643, column: 38, scope: !9641)
!9644 = !DILocation(line: 643, column: 62, scope: !9641)
!9645 = !DILocation(line: 643, column: 6, scope: !9588)
!9646 = !DILocation(line: 648, column: 27, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9648, file: !9222, line: 648, column: 8)
!9648 = distinct !DILexicalBlock(scope: !9641, file: !9222, line: 644, column: 3)
!9649 = !DILocation(line: 648, column: 8, scope: !9648)
!9650 = !DILocation(line: 651, column: 10, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9652, file: !9222, line: 651, column: 10)
!9652 = distinct !DILexicalBlock(scope: !9647, file: !9222, line: 649, column: 5)
!9653 = !DILocation(line: 651, column: 46, scope: !9651)
!9654 = !DILocation(line: 651, column: 10, scope: !9652)
!9655 = !DILocation(line: 661, column: 10, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9657, file: !9222, line: 661, column: 10)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !9222, line: 659, column: 5)
!9658 = distinct !DILexicalBlock(scope: !9647, file: !9222, line: 657, column: 13)
!9659 = !DILocation(line: 661, column: 46, scope: !9656)
!9660 = !DILocation(line: 661, column: 10, scope: !9657)
!9661 = !DILocation(line: 670, column: 10, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9663, file: !9222, line: 670, column: 10)
!9663 = distinct !DILexicalBlock(scope: !9658, file: !9222, line: 668, column: 5)
!9664 = !DILocation(line: 670, column: 46, scope: !9662)
!9665 = !DILocation(line: 670, column: 10, scope: !9663)
!9666 = !DILocation(line: 676, column: 5, scope: !9648)
!9667 = !DILocation(line: 679, column: 17, scope: !9648)
!9668 = !DILocation(line: 681, column: 5, scope: !9648)
!9669 = !DILocation(line: 681, column: 12, scope: !9648)
!9670 = !DILocation(line: 681, column: 65, scope: !9648)
!9671 = !DILocation(line: 681, column: 78, scope: !9648)
!9672 = !DILocation(line: 681, column: 42, scope: !9648)
!9673 = !DILocation(line: 683, column: 12, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9675, file: !9222, line: 683, column: 11)
!9675 = distinct !DILexicalBlock(scope: !9648, file: !9222, line: 682, column: 5)
!9676 = !DILocation(line: 683, column: 26, scope: !9674)
!9677 = !DILocation(line: 683, column: 39, scope: !9674)
!9678 = !DILocation(line: 683, column: 11, scope: !9675)
!9679 = distinct !{!9679, !9668, !9680}
!9680 = !DILocation(line: 687, column: 5, scope: !9648)
!9681 = !DILocation(line: 691, column: 17, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9588, file: !9222, line: 691, column: 6)
!9683 = !DILocation(line: 691, column: 15, scope: !9682)
!9684 = !DILocation(line: 691, column: 6, scope: !9588)
!9685 = !DILocation(line: 694, column: 5, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9682, file: !9222, line: 692, column: 3)
!9687 = !DILocation(line: 698, column: 8, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9686, file: !9222, line: 698, column: 8)
!9689 = !DILocation(line: 698, column: 34, scope: !9688)
!9690 = !DILocation(line: 698, column: 8, scope: !9686)
!9691 = !DILocation(line: 705, column: 27, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9588, file: !9222, line: 705, column: 6)
!9693 = !DILocation(line: 705, column: 38, scope: !9692)
!9694 = !DILocation(line: 705, column: 61, scope: !9692)
!9695 = !DILocation(line: 705, column: 6, scope: !9588)
!9696 = !DILocation(line: 708, column: 5, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9692, file: !9222, line: 706, column: 3)
!9698 = !DILocation(line: 712, column: 27, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9588, file: !9222, line: 712, column: 6)
!9700 = !DILocation(line: 709, column: 3, scope: !9697)
!9701 = !DILocation(line: 712, column: 38, scope: !9699)
!9702 = !DILocation(line: 712, column: 61, scope: !9699)
!9703 = !DILocation(line: 712, column: 6, scope: !9588)
!9704 = !DILocation(line: 715, column: 5, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9699, file: !9222, line: 713, column: 3)
!9706 = !DILocation(line: 716, column: 3, scope: !9705)
!9707 = !DILocation(line: 719, column: 21, scope: !9588)
!9708 = !DILocation(line: 719, column: 70, scope: !9588)
!9709 = !DILocation(line: 719, column: 91, scope: !9588)
!9710 = !DILocation(line: 719, column: 50, scope: !9588)
!9711 = !DILocation(line: 719, column: 47, scope: !9588)
!9712 = !DILocation(line: 719, column: 19, scope: !9588)
!9713 = !DILocation(line: 722, column: 17, scope: !9588)
!9714 = !DILocation(line: 722, column: 3, scope: !9588)
!9715 = !DILocation(line: 724, column: 3, scope: !9588)
!9716 = !DILocation(line: 725, column: 1, scope: !9588)
!9717 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9222, file: !9222, line: 885, type: !5038, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !9718)
!9718 = !{!9719, !9720, !9721, !9722}
!9719 = !DILocalVariable(name: "pllm", scope: !9717, file: !9222, line: 887, type: !121)
!9720 = !DILocalVariable(name: "pllvco", scope: !9717, file: !9222, line: 887, type: !121)
!9721 = !DILocalVariable(name: "pllp", scope: !9717, file: !9222, line: 887, type: !121)
!9722 = !DILocalVariable(name: "sysclockfreq", scope: !9717, file: !9222, line: 888, type: !121)
!9723 = !DILocation(line: 0, scope: !9717)
!9724 = !DILocation(line: 891, column: 16, scope: !9717)
!9725 = !DILocation(line: 891, column: 21, scope: !9717)
!9726 = !DILocation(line: 891, column: 3, scope: !9717)
!9727 = !DILocation(line: 907, column: 19, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9729, file: !9222, line: 904, column: 5)
!9729 = distinct !DILexicalBlock(scope: !9717, file: !9222, line: 892, column: 3)
!9730 = !DILocation(line: 907, column: 27, scope: !9728)
!9731 = !DILocation(line: 908, column: 10, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9728, file: !9222, line: 908, column: 10)
!9733 = !DILocation(line: 0, scope: !9732)
!9734 = !DILocation(line: 918, column: 23, scope: !9728)
!9735 = !DILocation(line: 918, column: 82, scope: !9728)
!9736 = !DILocation(line: 920, column: 28, scope: !9728)
!9737 = !DILocation(line: 921, column: 7, scope: !9728)
!9738 = !DILocation(line: 0, scope: !9729)
!9739 = !DILocation(line: 929, column: 3, scope: !9717)
!9740 = !DISubprogram(name: "HAL_InitTick", scope: !9587, file: !9587, line: 223, type: !9741, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{!9225, !121}
!9743 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !9222, file: !9222, line: 775, type: !9744, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !9746)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{null, !121, !121, !121}
!9746 = !{!9747, !9748, !9749, !9750, !9760}
!9747 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !9743, file: !9222, line: 775, type: !121)
!9748 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !9743, file: !9222, line: 775, type: !121)
!9749 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !9743, file: !9222, line: 775, type: !121)
!9750 = !DILocalVariable(name: "GPIO_InitStruct", scope: !9743, file: !9222, line: 777, type: !9751)
!9751 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !9752, line: 62, baseType: !9753)
!9752 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9752, line: 46, size: 160, elements: !9754)
!9754 = !{!9755, !9756, !9757, !9758, !9759}
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !9753, file: !9752, line: 48, baseType: !121, size: 32)
!9756 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !9753, file: !9752, line: 51, baseType: !121, size: 32, offset: 32)
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !9753, file: !9752, line: 54, baseType: !121, size: 32, offset: 64)
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !9753, file: !9752, line: 57, baseType: !121, size: 32, offset: 96)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !9753, file: !9752, line: 60, baseType: !121, size: 32, offset: 128)
!9760 = !DILocalVariable(name: "tmpreg", scope: !9761, file: !9222, line: 787, type: !120)
!9761 = distinct !DILexicalBlock(scope: !9762, file: !9222, line: 787, column: 5)
!9762 = distinct !DILexicalBlock(scope: !9763, file: !9222, line: 783, column: 3)
!9763 = distinct !DILexicalBlock(scope: !9743, file: !9222, line: 782, column: 6)
!9764 = !DILocation(line: 0, scope: !9743)
!9765 = !DILocation(line: 777, column: 3, scope: !9743)
!9766 = !DILocation(line: 777, column: 20, scope: !9743)
!9767 = !DILocation(line: 782, column: 15, scope: !9763)
!9768 = !DILocation(line: 782, column: 6, scope: !9743)
!9769 = !DILocation(line: 787, column: 5, scope: !9761)
!9770 = !DILocation(line: 787, column: 5, scope: !9762)
!9771 = !DILocation(line: 790, column: 21, scope: !9762)
!9772 = !DILocation(line: 790, column: 25, scope: !9762)
!9773 = !DILocation(line: 791, column: 21, scope: !9762)
!9774 = !DILocation(line: 791, column: 26, scope: !9762)
!9775 = !DILocation(line: 792, column: 21, scope: !9762)
!9776 = !DILocation(line: 792, column: 27, scope: !9762)
!9777 = !DILocation(line: 793, column: 21, scope: !9762)
!9778 = !DILocation(line: 793, column: 26, scope: !9762)
!9779 = !DILocation(line: 794, column: 21, scope: !9762)
!9780 = !DILocation(line: 794, column: 31, scope: !9762)
!9781 = !DILocation(line: 795, column: 5, scope: !9762)
!9782 = !DILocation(line: 798, column: 5, scope: !9762)
!9783 = !DILocation(line: 804, column: 3, scope: !9762)
!9784 = !DILocation(line: 830, column: 1, scope: !9743)
!9785 = !DISubprogram(name: "HAL_GPIO_Init", scope: !9752, file: !9752, line: 224, type: !9786, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{null, !2726, !9788}
!9788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9751, size: 32)
!9789 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !9222, file: !9222, line: 841, type: !2843, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9790 = !DILocation(line: 843, column: 38, scope: !9789)
!9791 = !DILocation(line: 844, column: 1, scope: !9789)
!9792 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !9222, file: !9222, line: 850, type: !2843, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9793 = !DILocation(line: 852, column: 38, scope: !9792)
!9794 = !DILocation(line: 853, column: 1, scope: !9792)
!9795 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !9222, file: !9222, line: 941, type: !5038, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9796 = !DILocation(line: 943, column: 10, scope: !9795)
!9797 = !DILocation(line: 943, column: 3, scope: !9795)
!9798 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !9222, file: !9222, line: 952, type: !5038, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9799 = !DILocation(line: 955, column: 11, scope: !9798)
!9800 = !DILocation(line: 955, column: 56, scope: !9798)
!9801 = !DILocation(line: 955, column: 78, scope: !9798)
!9802 = !DILocation(line: 955, column: 36, scope: !9798)
!9803 = !DILocation(line: 955, column: 33, scope: !9798)
!9804 = !DILocation(line: 955, column: 3, scope: !9798)
!9805 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !9222, file: !9222, line: 964, type: !5038, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9806 = !DILocation(line: 967, column: 11, scope: !9805)
!9807 = !DILocation(line: 967, column: 55, scope: !9805)
!9808 = !DILocation(line: 967, column: 77, scope: !9805)
!9809 = !DILocation(line: 967, column: 35, scope: !9805)
!9810 = !DILocation(line: 967, column: 32, scope: !9805)
!9811 = !DILocation(line: 967, column: 3, scope: !9805)
!9812 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9222, file: !9222, line: 977, type: !9813, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !9815)
!9813 = !DISubroutineType(types: !9814)
!9814 = !{null, !9230}
!9815 = !{!9816}
!9816 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9812, file: !9222, line: 977, type: !9230)
!9817 = !DILocation(line: 0, scope: !9812)
!9818 = !DILocation(line: 980, column: 22, scope: !9812)
!9819 = !DILocation(line: 980, column: 37, scope: !9812)
!9820 = !DILocation(line: 983, column: 12, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9812, file: !9222, line: 983, column: 6)
!9822 = !DILocation(line: 983, column: 15, scope: !9821)
!9823 = !DILocation(line: 983, column: 31, scope: !9821)
!9824 = !DILocation(line: 983, column: 6, scope: !9812)
!9825 = !DILocation(line: 985, column: 24, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !9222, line: 984, column: 3)
!9827 = !DILocation(line: 985, column: 33, scope: !9826)
!9828 = !DILocation(line: 986, column: 3, scope: !9826)
!9829 = !DILocation(line: 987, column: 17, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9821, file: !9222, line: 987, column: 11)
!9831 = !DILocation(line: 987, column: 20, scope: !9830)
!9832 = !DILocation(line: 987, column: 35, scope: !9830)
!9833 = !DILocation(line: 0, scope: !9830)
!9834 = !DILocation(line: 987, column: 11, scope: !9821)
!9835 = !DILocation(line: 989, column: 33, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9830, file: !9222, line: 988, column: 3)
!9837 = !DILocation(line: 990, column: 3, scope: !9836)
!9838 = !DILocation(line: 993, column: 33, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9830, file: !9222, line: 992, column: 3)
!9840 = !DILocation(line: 997, column: 12, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9812, file: !9222, line: 997, column: 6)
!9842 = !DILocation(line: 997, column: 15, scope: !9841)
!9843 = !DILocation(line: 1003, column: 24, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9841, file: !9222, line: 1002, column: 3)
!9845 = !DILocation(line: 1003, column: 33, scope: !9844)
!9846 = !DILocation(line: 1006, column: 61, scope: !9812)
!9847 = !DILocation(line: 1006, column: 81, scope: !9812)
!9848 = !DILocation(line: 1006, column: 22, scope: !9812)
!9849 = !DILocation(line: 1006, column: 42, scope: !9812)
!9850 = !DILocation(line: 1009, column: 12, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9812, file: !9222, line: 1009, column: 6)
!9852 = !DILocation(line: 1009, column: 17, scope: !9851)
!9853 = !DILocation(line: 1009, column: 35, scope: !9851)
!9854 = !DILocation(line: 1009, column: 6, scope: !9812)
!9855 = !DILocation(line: 1011, column: 24, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9851, file: !9222, line: 1010, column: 3)
!9857 = !DILocation(line: 1011, column: 33, scope: !9856)
!9858 = !DILocation(line: 1012, column: 3, scope: !9856)
!9859 = !DILocation(line: 1013, column: 17, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9851, file: !9222, line: 1013, column: 11)
!9861 = !DILocation(line: 1013, column: 22, scope: !9860)
!9862 = !DILocation(line: 1013, column: 39, scope: !9860)
!9863 = !DILocation(line: 0, scope: !9860)
!9864 = !DILocation(line: 1013, column: 11, scope: !9851)
!9865 = !DILocation(line: 1015, column: 33, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9860, file: !9222, line: 1014, column: 3)
!9867 = !DILocation(line: 1016, column: 3, scope: !9866)
!9868 = !DILocation(line: 1019, column: 33, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9860, file: !9222, line: 1018, column: 3)
!9870 = !DILocation(line: 1023, column: 12, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9812, file: !9222, line: 1023, column: 6)
!9872 = !DILocation(line: 1023, column: 16, scope: !9871)
!9873 = !DILocation(line: 1029, column: 24, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9871, file: !9222, line: 1028, column: 3)
!9875 = !DILocation(line: 1029, column: 33, scope: !9874)
!9876 = !DILocation(line: 1033, column: 12, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9812, file: !9222, line: 1033, column: 6)
!9878 = !DILocation(line: 1033, column: 15, scope: !9877)
!9879 = !DILocation(line: 1033, column: 30, scope: !9877)
!9880 = !DILocation(line: 1033, column: 6, scope: !9812)
!9881 = !DILocation(line: 1039, column: 28, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9877, file: !9222, line: 1038, column: 3)
!9883 = !DILocation(line: 1039, column: 37, scope: !9882)
!9884 = !DILocation(line: 1041, column: 54, scope: !9812)
!9885 = !DILocation(line: 1041, column: 62, scope: !9812)
!9886 = !DILocation(line: 1041, column: 26, scope: !9812)
!9887 = !DILocation(line: 1041, column: 36, scope: !9812)
!9888 = !DILocation(line: 1042, column: 49, scope: !9812)
!9889 = !DILocation(line: 1042, column: 57, scope: !9812)
!9890 = !DILocation(line: 1042, column: 26, scope: !9812)
!9891 = !DILocation(line: 1042, column: 31, scope: !9812)
!9892 = !DILocation(line: 1043, column: 50, scope: !9812)
!9893 = !DILocation(line: 1043, column: 78, scope: !9812)
!9894 = !DILocation(line: 1043, column: 26, scope: !9812)
!9895 = !DILocation(line: 1043, column: 31, scope: !9812)
!9896 = !DILocation(line: 1044, column: 52, scope: !9812)
!9897 = !DILocation(line: 1044, column: 102, scope: !9812)
!9898 = !DILocation(line: 1044, column: 109, scope: !9812)
!9899 = !DILocation(line: 1044, column: 26, scope: !9812)
!9900 = !DILocation(line: 1044, column: 31, scope: !9812)
!9901 = !DILocation(line: 1045, column: 50, scope: !9812)
!9902 = !DILocation(line: 1045, column: 78, scope: !9812)
!9903 = !DILocation(line: 1045, column: 26, scope: !9812)
!9904 = !DILocation(line: 1045, column: 31, scope: !9812)
!9905 = !DILocation(line: 1046, column: 1, scope: !9812)
!9906 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !9222, file: !9222, line: 1056, type: !9907, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !9909)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{null, !9591, !705}
!9909 = !{!9910, !9911}
!9910 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9906, file: !9222, line: 1056, type: !9591)
!9911 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !9906, file: !9222, line: 1056, type: !705)
!9912 = !DILocation(line: 0, scope: !9906)
!9913 = !DILocation(line: 1059, column: 22, scope: !9906)
!9914 = !DILocation(line: 1059, column: 32, scope: !9906)
!9915 = !DILocation(line: 1062, column: 53, scope: !9906)
!9916 = !DILocation(line: 1062, column: 58, scope: !9906)
!9917 = !DILocation(line: 1062, column: 22, scope: !9906)
!9918 = !DILocation(line: 1062, column: 35, scope: !9906)
!9919 = !DILocation(line: 1065, column: 54, scope: !9906)
!9920 = !DILocation(line: 1065, column: 59, scope: !9906)
!9921 = !DILocation(line: 1065, column: 22, scope: !9906)
!9922 = !DILocation(line: 1065, column: 36, scope: !9906)
!9923 = !DILocation(line: 1068, column: 55, scope: !9906)
!9924 = !DILocation(line: 1068, column: 60, scope: !9906)
!9925 = !DILocation(line: 1068, column: 22, scope: !9906)
!9926 = !DILocation(line: 1068, column: 37, scope: !9906)
!9927 = !DILocation(line: 1071, column: 56, scope: !9906)
!9928 = !DILocation(line: 1071, column: 79, scope: !9906)
!9929 = !DILocation(line: 1071, column: 22, scope: !9906)
!9930 = !DILocation(line: 1071, column: 37, scope: !9906)
!9931 = !DILocation(line: 1074, column: 34, scope: !9906)
!9932 = !DILocation(line: 1074, column: 38, scope: !9906)
!9933 = !DILocation(line: 1074, column: 14, scope: !9906)
!9934 = !DILocation(line: 1075, column: 1, scope: !9906)
!9935 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !9222, file: !9222, line: 1082, type: !2843, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9936 = !DILocation(line: 1085, column: 6, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9935, file: !9222, line: 1085, column: 6)
!9938 = !DILocation(line: 1085, column: 6, scope: !9935)
!9939 = !DILocation(line: 1088, column: 5, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9937, file: !9222, line: 1086, column: 3)
!9941 = !DILocation(line: 1091, column: 5, scope: !9940)
!9942 = !DILocation(line: 1092, column: 3, scope: !9940)
!9943 = !DILocation(line: 1093, column: 1, scope: !9935)
!9944 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !9222, file: !9222, line: 1099, type: !2843, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !322)
!9945 = !DILocation(line: 1104, column: 1, scope: !9944)
!9946 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !9947, file: !9947, line: 257, type: !5048, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9948)
!9947 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9948 = !{!9949}
!9949 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9946, file: !9947, line: 257, type: !121)
!9950 = !DILocation(line: 0, scope: !9946)
!9951 = !DILocation(line: 260, column: 3, scope: !9946)
!9952 = !DILocation(line: 261, column: 1, scope: !9946)
!9953 = distinct !DISubprogram(name: "LL_InitTick", scope: !9954, file: !9954, line: 260, type: !7652, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9955)
!9954 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9955 = !{!9956, !9957}
!9956 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9953, file: !9954, line: 260, type: !121)
!9957 = !DILocalVariable(name: "Ticks", arg: 2, scope: !9953, file: !9954, line: 260, type: !121)
!9958 = !DILocation(line: 0, scope: !9953)
!9959 = !DILocation(line: 263, column: 46, scope: !9953)
!9960 = !DILocation(line: 263, column: 55, scope: !9953)
!9961 = !DILocation(line: 263, column: 18, scope: !9953)
!9962 = !DILocation(line: 264, column: 18, scope: !9953)
!9963 = !DILocation(line: 265, column: 18, scope: !9953)
!9964 = !DILocation(line: 267, column: 1, scope: !9953)
!9965 = distinct !DISubprogram(name: "LL_mDelay", scope: !9947, file: !9947, line: 273, type: !5048, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9966)
!9966 = !{!9967, !9968}
!9967 = !DILocalVariable(name: "Delay", arg: 1, scope: !9965, file: !9947, line: 273, type: !121)
!9968 = !DILocalVariable(name: "tmp", scope: !9965, file: !9947, line: 275, type: !120)
!9969 = !DILocation(line: 0, scope: !9965)
!9970 = !DILocation(line: 275, column: 3, scope: !9965)
!9971 = !DILocation(line: 275, column: 18, scope: !9965)
!9972 = !DILocation(line: 275, column: 33, scope: !9965)
!9973 = !DILocation(line: 277, column: 10, scope: !9965)
!9974 = !DILocation(line: 280, column: 12, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9965, file: !9947, line: 280, column: 6)
!9976 = !DILocation(line: 285, column: 3, scope: !9965)
!9977 = !DILocation(line: 287, column: 18, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !9947, line: 287, column: 8)
!9979 = distinct !DILexicalBlock(scope: !9965, file: !9947, line: 286, column: 3)
!9980 = !DILocation(line: 292, column: 1, scope: !9965)
!9981 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !9947, file: !9947, line: 323, type: !5048, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9982)
!9982 = !{!9983}
!9983 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9981, file: !9947, line: 323, type: !121)
!9984 = !DILocation(line: 0, scope: !9981)
!9985 = !DILocation(line: 326, column: 19, scope: !9981)
!9986 = !DILocation(line: 327, column: 1, scope: !9981)
!9987 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !9947, file: !9947, line: 338, type: !9988, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9991)
!9988 = !DISubroutineType(types: !9989)
!9989 = !{!9990, !121}
!9990 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !651, line: 201, baseType: !650)
!9991 = !{!9992, !9993, !9994, !9995, !9996}
!9992 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !9987, file: !9947, line: 338, type: !121)
!9993 = !DILocalVariable(name: "timeout", scope: !9987, file: !9947, line: 340, type: !121)
!9994 = !DILocalVariable(name: "getlatency", scope: !9987, file: !9947, line: 341, type: !121)
!9995 = !DILocalVariable(name: "latency", scope: !9987, file: !9947, line: 342, type: !121)
!9996 = !DILocalVariable(name: "status", scope: !9987, file: !9947, line: 343, type: !9990)
!9997 = !DILocation(line: 0, scope: !9987)
!9998 = !DILocation(line: 347, column: 21, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9987, file: !9947, line: 347, column: 6)
!10000 = !DILocation(line: 347, column: 6, scope: !9987)
!10001 = !DILocation(line: 353, column: 8, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10003, file: !9947, line: 353, column: 8)
!10003 = distinct !DILexicalBlock(scope: !9999, file: !9947, line: 352, column: 3)
!10004 = !DILocation(line: 353, column: 40, scope: !10002)
!10005 = !DILocation(line: 353, column: 8, scope: !10003)
!10006 = !DILocation(line: 374, column: 55, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10008, file: !9947, line: 374, column: 10)
!10008 = distinct !DILexicalBlock(scope: !10002, file: !9947, line: 354, column: 5)
!10009 = !DILocation(line: 368, column: 26, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10008, file: !9947, line: 368, column: 10)
!10011 = !DILocation(line: 368, column: 55, scope: !10010)
!10012 = !DILocation(line: 380, column: 57, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10014, file: !9947, line: 380, column: 12)
!10014 = distinct !DILexicalBlock(scope: !10007, file: !9947, line: 379, column: 7)
!10015 = !DILocation(line: 387, column: 8, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10003, file: !9947, line: 387, column: 8)
!10017 = !DILocation(line: 387, column: 40, scope: !10016)
!10018 = !DILocation(line: 387, column: 8, scope: !10003)
!10019 = !DILocation(line: 407, column: 26, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10021, file: !9947, line: 407, column: 10)
!10021 = distinct !DILexicalBlock(scope: !10016, file: !9947, line: 388, column: 5)
!10022 = !DILocation(line: 407, column: 55, scope: !10020)
!10023 = !DILocation(line: 413, column: 28, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !9947, line: 413, column: 12)
!10025 = distinct !DILexicalBlock(scope: !10020, file: !9947, line: 412, column: 7)
!10026 = !DILocation(line: 413, column: 57, scope: !10024)
!10027 = !DILocation(line: 0, scope: !10003)
!10028 = !DILocation(line: 420, column: 8, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10003, file: !9947, line: 420, column: 8)
!10030 = !DILocation(line: 420, column: 40, scope: !10029)
!10031 = !DILocation(line: 420, column: 8, scope: !10003)
!10032 = !DILocation(line: 429, column: 26, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10034, file: !9947, line: 429, column: 10)
!10034 = distinct !DILexicalBlock(scope: !10029, file: !9947, line: 421, column: 5)
!10035 = !DILocation(line: 429, column: 55, scope: !10033)
!10036 = !DILocation(line: 435, column: 28, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !9947, line: 435, column: 12)
!10038 = distinct !DILexicalBlock(scope: !10033, file: !9947, line: 434, column: 7)
!10039 = !DILocation(line: 435, column: 57, scope: !10037)
!10040 = !DILocation(line: 444, column: 5, scope: !10003)
!10041 = !DILocation(line: 448, column: 5, scope: !10003)
!10042 = !DILocation(line: 451, column: 18, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10003, file: !9947, line: 449, column: 5)
!10044 = !DILocation(line: 452, column: 12, scope: !10043)
!10045 = !DILocation(line: 453, column: 26, scope: !10003)
!10046 = !DILocation(line: 453, column: 38, scope: !10003)
!10047 = !DILocation(line: 453, column: 5, scope: !10043)
!10048 = distinct !{!10048, !10041, !10049}
!10049 = !DILocation(line: 453, column: 54, scope: !10003)
!10050 = !DILocation(line: 0, scope: !9999)
!10051 = !DILocation(line: 464, column: 3, scope: !9987)
!10052 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10053, file: !10053, line: 519, type: !5038, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10053 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10054 = !DILocation(line: 521, column: 21, scope: !10052)
!10055 = !DILocation(line: 521, column: 3, scope: !10052)
!10056 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4804, file: !4804, line: 1543, type: !5048, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10057)
!10057 = !{!10058}
!10058 = !DILocalVariable(name: "Latency", arg: 1, scope: !10056, file: !4804, line: 1543, type: !121)
!10059 = !DILocation(line: 0, scope: !10056)
!10060 = !DILocation(line: 1545, column: 3, scope: !10056)
!10061 = !DILocation(line: 1546, column: 1, scope: !10056)
!10062 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4804, file: !4804, line: 1569, type: !5038, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10063 = !DILocation(line: 1571, column: 21, scope: !10062)
!10064 = !DILocation(line: 1571, column: 3, scope: !10062)
!10065 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !9947, file: !9947, line: 483, type: !10066, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10082)
!10066 = !DISubroutineType(types: !10067)
!10067 = !{!9990, !10068, !10075}
!10068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10069, size: 32)
!10069 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !9954, line: 114, baseType: !10070)
!10070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9954, line: 94, size: 96, elements: !10071)
!10071 = !{!10072, !10073, !10074}
!10072 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10070, file: !9954, line: 96, baseType: !121, size: 32)
!10073 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10070, file: !9954, line: 102, baseType: !121, size: 32, offset: 32)
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10070, file: !9954, line: 109, baseType: !121, size: 32, offset: 64)
!10075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10076, size: 32)
!10076 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !9954, line: 139, baseType: !10077)
!10077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9954, line: 119, size: 96, elements: !10078)
!10078 = !{!10079, !10080, !10081}
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10077, file: !9954, line: 121, baseType: !121, size: 32)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10077, file: !9954, line: 127, baseType: !121, size: 32, offset: 32)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10077, file: !9954, line: 133, baseType: !121, size: 32, offset: 64)
!10082 = !{!10083, !10084, !10085, !10086}
!10083 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10065, file: !9947, line: 483, type: !10068)
!10084 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10065, file: !9947, line: 484, type: !10075)
!10085 = !DILocalVariable(name: "status", scope: !10065, file: !9947, line: 486, type: !9990)
!10086 = !DILocalVariable(name: "pllfreq", scope: !10065, file: !9947, line: 487, type: !121)
!10087 = !DILocation(line: 0, scope: !10065)
!10088 = !DILocation(line: 490, column: 6, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10065, file: !9947, line: 490, column: 6)
!10090 = !DILocation(line: 490, column: 25, scope: !10089)
!10091 = !DILocation(line: 490, column: 6, scope: !10065)
!10092 = !DILocation(line: 493, column: 15, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10089, file: !9947, line: 491, column: 3)
!10094 = !DILocation(line: 496, column: 8, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10093, file: !9947, line: 496, column: 8)
!10096 = !DILocation(line: 496, column: 29, scope: !10095)
!10097 = !DILocation(line: 496, column: 8, scope: !10093)
!10098 = !DILocation(line: 498, column: 7, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10095, file: !9947, line: 497, column: 5)
!10100 = !DILocation(line: 499, column: 7, scope: !10099)
!10101 = !DILocation(line: 499, column: 14, scope: !10099)
!10102 = !DILocation(line: 499, column: 35, scope: !10099)
!10103 = distinct !{!10103, !10100, !10104}
!10104 = !DILocation(line: 502, column: 7, scope: !10099)
!10105 = !DILocation(line: 506, column: 76, scope: !10093)
!10106 = !DILocation(line: 506, column: 103, scope: !10093)
!10107 = !DILocation(line: 507, column: 54, scope: !10093)
!10108 = !DILocation(line: 506, column: 5, scope: !10093)
!10109 = !DILocation(line: 510, column: 14, scope: !10093)
!10110 = !DILocation(line: 511, column: 3, scope: !10093)
!10111 = !DILocation(line: 0, scope: !10089)
!10112 = !DILocation(line: 518, column: 3, scope: !10065)
!10113 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !9947, file: !9947, line: 642, type: !10114, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!9990}
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "status", scope: !10113, file: !9947, line: 644, type: !9990)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 647, column: 6, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10113, file: !9947, line: 647, column: 6)
!10121 = !DILocation(line: 647, column: 27, scope: !10120)
!10122 = !DILocation(line: 663, column: 6, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10113, file: !9947, line: 663, column: 6)
!10124 = !DILocation(line: 663, column: 30, scope: !10123)
!10125 = !DILocation(line: 663, column: 6, scope: !10113)
!10126 = !DILocation(line: 669, column: 3, scope: !10113)
!10127 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !9947, file: !9947, line: 611, type: !10128, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10130)
!10128 = !DISubroutineType(types: !10129)
!10129 = !{!121, !121, !10068}
!10130 = !{!10131, !10132, !10133}
!10131 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10127, file: !9947, line: 611, type: !121)
!10132 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10127, file: !9947, line: 611, type: !10068)
!10133 = !DILocalVariable(name: "pllfreq", scope: !10127, file: !9947, line: 613, type: !121)
!10134 = !DILocation(line: 0, scope: !10127)
!10135 = !DILocation(line: 622, column: 56, scope: !10127)
!10136 = !DILocation(line: 622, column: 61, scope: !10127)
!10137 = !DILocation(line: 622, column: 32, scope: !10127)
!10138 = !DILocation(line: 626, column: 45, scope: !10127)
!10139 = !DILocation(line: 626, column: 50, scope: !10127)
!10140 = !DILocation(line: 626, column: 21, scope: !10127)
!10141 = !DILocation(line: 630, column: 47, scope: !10127)
!10142 = !DILocation(line: 630, column: 82, scope: !10127)
!10143 = !DILocation(line: 630, column: 21, scope: !10127)
!10144 = !DILocation(line: 633, column: 3, scope: !10127)
!10145 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6993, file: !6993, line: 3007, type: !5038, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10146 = !DILocation(line: 3009, column: 11, scope: !10145)
!10147 = !DILocation(line: 3009, column: 44, scope: !10145)
!10148 = !DILocation(line: 3009, column: 3, scope: !10145)
!10149 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6993, file: !6993, line: 2987, type: !2843, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10150 = !DILocation(line: 2989, column: 3, scope: !10149)
!10151 = !DILocation(line: 2990, column: 1, scope: !10149)
!10152 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6993, file: !6993, line: 4304, type: !7127, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10153)
!10153 = !{!10154, !10155, !10156, !10157}
!10154 = !DILocalVariable(name: "Source", arg: 1, scope: !10152, file: !6993, line: 4304, type: !121)
!10155 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10152, file: !6993, line: 4304, type: !121)
!10156 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10152, file: !6993, line: 4304, type: !121)
!10157 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10152, file: !6993, line: 4304, type: !121)
!10158 = !DILocation(line: 0, scope: !10152)
!10159 = !DILocation(line: 4306, column: 3, scope: !10152)
!10160 = !DILocation(line: 4308, column: 3, scope: !10152)
!10161 = !DILocation(line: 4312, column: 1, scope: !10152)
!10162 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !9947, file: !9947, line: 681, type: !10163, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10165)
!10163 = !DISubroutineType(types: !10164)
!10164 = !{!9990, !121, !10075}
!10165 = !{!10166, !10167, !10168, !10169}
!10166 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10162, file: !9947, line: 681, type: !121)
!10167 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10162, file: !9947, line: 681, type: !10075)
!10168 = !DILocalVariable(name: "status", scope: !10162, file: !9947, line: 683, type: !9990)
!10169 = !DILocalVariable(name: "hclk_frequency", scope: !10162, file: !9947, line: 684, type: !121)
!10170 = !DILocation(line: 0, scope: !10162)
!10171 = !DILocation(line: 691, column: 20, scope: !10162)
!10172 = !DILocation(line: 694, column: 6, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10162, file: !9947, line: 694, column: 6)
!10174 = !DILocation(line: 694, column: 22, scope: !10173)
!10175 = !DILocation(line: 694, column: 6, scope: !10162)
!10176 = !DILocation(line: 697, column: 14, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10173, file: !9947, line: 695, column: 3)
!10178 = !DILocation(line: 701, column: 13, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10162, file: !9947, line: 701, column: 6)
!10180 = !DILocation(line: 701, column: 6, scope: !10162)
!10181 = !DILocation(line: 704, column: 5, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10179, file: !9947, line: 702, column: 3)
!10183 = !DILocation(line: 705, column: 5, scope: !10182)
!10184 = !DILocation(line: 705, column: 12, scope: !10182)
!10185 = !DILocation(line: 705, column: 33, scope: !10182)
!10186 = distinct !{!10186, !10183, !10187}
!10187 = !DILocation(line: 708, column: 5, scope: !10182)
!10188 = !DILocation(line: 711, column: 49, scope: !10182)
!10189 = !DILocation(line: 711, column: 5, scope: !10182)
!10190 = !DILocation(line: 712, column: 5, scope: !10182)
!10191 = !DILocation(line: 713, column: 5, scope: !10182)
!10192 = !DILocation(line: 713, column: 12, scope: !10182)
!10193 = !DILocation(line: 713, column: 37, scope: !10182)
!10194 = distinct !{!10194, !10191, !10195}
!10195 = !DILocation(line: 716, column: 5, scope: !10182)
!10196 = !DILocation(line: 719, column: 50, scope: !10182)
!10197 = !DILocation(line: 719, column: 5, scope: !10182)
!10198 = !DILocation(line: 720, column: 50, scope: !10182)
!10199 = !DILocation(line: 720, column: 5, scope: !10182)
!10200 = !DILocation(line: 721, column: 3, scope: !10182)
!10201 = !DILocation(line: 724, column: 6, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10162, file: !9947, line: 724, column: 6)
!10203 = !DILocation(line: 724, column: 22, scope: !10202)
!10204 = !DILocation(line: 724, column: 6, scope: !10162)
!10205 = !DILocation(line: 727, column: 14, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10202, file: !9947, line: 725, column: 3)
!10207 = !DILocation(line: 728, column: 3, scope: !10206)
!10208 = !DILocation(line: 731, column: 13, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10162, file: !9947, line: 731, column: 6)
!10210 = !DILocation(line: 731, column: 6, scope: !10162)
!10211 = !DILocation(line: 733, column: 5, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10209, file: !9947, line: 732, column: 3)
!10213 = !DILocation(line: 734, column: 3, scope: !10212)
!10214 = !DILocation(line: 736, column: 3, scope: !10162)
!10215 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6993, file: !6993, line: 4184, type: !2843, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10216 = !DILocation(line: 4186, column: 3, scope: !10215)
!10217 = !DILocation(line: 4187, column: 1, scope: !10215)
!10218 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6993, file: !6993, line: 4205, type: !5038, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10219 = !DILocation(line: 4207, column: 11, scope: !10218)
!10220 = !DILocation(line: 4207, column: 44, scope: !10218)
!10221 = !DILocation(line: 4207, column: 3, scope: !10218)
!10222 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6993, file: !6993, line: 3224, type: !5048, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10223)
!10223 = !{!10224}
!10224 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10222, file: !6993, line: 3224, type: !121)
!10225 = !DILocation(line: 0, scope: !10222)
!10226 = !DILocation(line: 3226, column: 3, scope: !10222)
!10227 = !DILocation(line: 3227, column: 1, scope: !10222)
!10228 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6993, file: !6993, line: 3188, type: !5048, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10229)
!10229 = !{!10230}
!10230 = !DILocalVariable(name: "Source", arg: 1, scope: !10228, file: !6993, line: 3188, type: !121)
!10231 = !DILocation(line: 0, scope: !10228)
!10232 = !DILocation(line: 3190, column: 3, scope: !10228)
!10233 = !DILocation(line: 3191, column: 1, scope: !10228)
!10234 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6993, file: !6993, line: 3204, type: !5038, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10235 = !DILocation(line: 3206, column: 21, scope: !10234)
!10236 = !DILocation(line: 3206, column: 3, scope: !10234)
!10237 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6993, file: !6993, line: 3240, type: !5048, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10238)
!10238 = !{!10239}
!10239 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10237, file: !6993, line: 3240, type: !121)
!10240 = !DILocation(line: 0, scope: !10237)
!10241 = !DILocation(line: 3242, column: 3, scope: !10237)
!10242 = !DILocation(line: 3243, column: 1, scope: !10237)
!10243 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6993, file: !6993, line: 3256, type: !5048, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10244)
!10244 = !{!10245}
!10245 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10243, file: !6993, line: 3256, type: !121)
!10246 = !DILocation(line: 0, scope: !10243)
!10247 = !DILocation(line: 3258, column: 3, scope: !10243)
!10248 = !DILocation(line: 3259, column: 1, scope: !10243)
!10249 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !6993, file: !6993, line: 5153, type: !5038, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10250 = !DILocation(line: 5155, column: 11, scope: !10249)
!10251 = !DILocation(line: 5155, column: 47, scope: !10249)
!10252 = !DILocation(line: 5155, column: 3, scope: !10249)
!10253 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !9947, file: !9947, line: 540, type: !10254, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10256)
!10254 = !DISubroutineType(types: !10255)
!10255 = !{!9990, !121, !121, !10068, !10075}
!10256 = !{!10257, !10258, !10259, !10260, !10261, !10262}
!10257 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10253, file: !9947, line: 540, type: !121)
!10258 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10253, file: !9947, line: 540, type: !121)
!10259 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10253, file: !9947, line: 541, type: !10068)
!10260 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10253, file: !9947, line: 541, type: !10075)
!10261 = !DILocalVariable(name: "status", scope: !10253, file: !9947, line: 543, type: !9990)
!10262 = !DILocalVariable(name: "pllfreq", scope: !10253, file: !9947, line: 544, type: !121)
!10263 = !DILocation(line: 0, scope: !10253)
!10264 = !DILocation(line: 551, column: 6, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10253, file: !9947, line: 551, column: 6)
!10266 = !DILocation(line: 551, column: 25, scope: !10265)
!10267 = !DILocation(line: 551, column: 6, scope: !10253)
!10268 = !DILocation(line: 554, column: 15, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10265, file: !9947, line: 552, column: 3)
!10270 = !DILocation(line: 557, column: 8, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10269, file: !9947, line: 557, column: 8)
!10272 = !DILocation(line: 557, column: 29, scope: !10271)
!10273 = !DILocation(line: 557, column: 8, scope: !10269)
!10274 = !DILocation(line: 560, column: 20, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10276, file: !9947, line: 560, column: 10)
!10276 = distinct !DILexicalBlock(scope: !10271, file: !9947, line: 558, column: 5)
!10277 = !DILocation(line: 560, column: 10, scope: !10276)
!10278 = !DILocation(line: 562, column: 9, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10275, file: !9947, line: 561, column: 7)
!10280 = !DILocation(line: 563, column: 7, scope: !10279)
!10281 = !DILocation(line: 566, column: 9, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10275, file: !9947, line: 565, column: 7)
!10283 = !DILocation(line: 570, column: 7, scope: !10276)
!10284 = !DILocation(line: 571, column: 7, scope: !10276)
!10285 = !DILocation(line: 571, column: 14, scope: !10276)
!10286 = !DILocation(line: 571, column: 35, scope: !10276)
!10287 = distinct !{!10287, !10284, !10288}
!10288 = !DILocation(line: 574, column: 7, scope: !10276)
!10289 = !DILocation(line: 578, column: 76, scope: !10269)
!10290 = !DILocation(line: 578, column: 103, scope: !10269)
!10291 = !DILocation(line: 579, column: 54, scope: !10269)
!10292 = !DILocation(line: 578, column: 5, scope: !10269)
!10293 = !DILocation(line: 582, column: 14, scope: !10269)
!10294 = !DILocation(line: 583, column: 3, scope: !10269)
!10295 = !DILocation(line: 0, scope: !10265)
!10296 = !DILocation(line: 590, column: 3, scope: !10253)
!10297 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6993, file: !6993, line: 2969, type: !5038, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10298 = !DILocation(line: 2971, column: 11, scope: !10297)
!10299 = !DILocation(line: 2971, column: 44, scope: !10297)
!10300 = !DILocation(line: 2971, column: 3, scope: !10297)
!10301 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6993, file: !6993, line: 2929, type: !2843, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10302 = !DILocation(line: 2931, column: 3, scope: !10301)
!10303 = !DILocation(line: 2932, column: 1, scope: !10301)
!10304 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6993, file: !6993, line: 2939, type: !2843, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10305 = !DILocation(line: 2941, column: 3, scope: !10304)
!10306 = !DILocation(line: 2942, column: 1, scope: !10304)
!10307 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6993, file: !6993, line: 2949, type: !2843, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !322)
!10308 = !DILocation(line: 2951, column: 3, scope: !10307)
!10309 = !DILocation(line: 2952, column: 1, scope: !10307)
!10310 = distinct !DISubprogram(name: "z_device_state_init", scope: !10311, file: !10311, line: 23, type: !2843, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10312)
!10311 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10312 = !{!10313}
!10313 = !DILocalVariable(name: "dev", scope: !10310, file: !10311, line: 25, type: !10314)
!10314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10315, size: 32)
!10315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10316)
!10316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10317)
!10317 = !{!10318, !10319, !10320, !10321, !10327, !10328}
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10316, file: !141, line: 380, baseType: !144, size: 32)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10316, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10316, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10316, file: !141, line: 386, baseType: !10322, size: 32, offset: 96)
!10322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10323, size: 32)
!10323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !10324)
!10324 = !{!10325, !10326}
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10323, file: !141, line: 359, baseType: !154, size: 8)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10323, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10316, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10316, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!10329 = !DILocation(line: 0, scope: !10310)
!10330 = !DILocation(line: 31, column: 1, scope: !10310)
!10331 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10311, file: !10311, line: 33, type: !10332, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10334)
!10332 = !DISubroutineType(types: !10333)
!10333 = !{!10314, !144}
!10334 = !{!10335, !10336}
!10335 = !DILocalVariable(name: "name", arg: 1, scope: !10331, file: !10311, line: 33, type: !144)
!10336 = !DILocalVariable(name: "dev", scope: !10331, file: !10311, line: 35, type: !10314)
!10337 = !DILocation(line: 0, scope: !10331)
!10338 = !DILocation(line: 40, column: 12, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10331, file: !10311, line: 40, column: 6)
!10340 = !DILocation(line: 40, column: 21, scope: !10339)
!10341 = !DILocation(line: 40, column: 25, scope: !10339)
!10342 = !DILocation(line: 40, column: 33, scope: !10339)
!10343 = !DILocation(line: 40, column: 6, scope: !10331)
!10344 = !DILocation(line: 55, column: 2, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10331, file: !10311, line: 55, column: 2)
!10346 = !DILocation(line: 50, column: 7, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10348, file: !10311, line: 50, column: 7)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !10311, line: 49, column: 57)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !10311, line: 49, column: 2)
!10350 = distinct !DILexicalBlock(scope: !10331, file: !10311, line: 49, column: 2)
!10351 = !DILocation(line: 50, column: 30, scope: !10347)
!10352 = !DILocation(line: 50, column: 39, scope: !10347)
!10353 = !DILocation(line: 50, column: 44, scope: !10347)
!10354 = !DILocation(line: 50, column: 7, scope: !10348)
!10355 = !DILocation(line: 49, column: 53, scope: !10349)
!10356 = !DILocation(line: 49, column: 33, scope: !10349)
!10357 = !DILocation(line: 49, column: 2, scope: !10350)
!10358 = distinct !{!10358, !10357, !10359}
!10359 = !DILocation(line: 53, column: 2, scope: !10350)
!10360 = !DILocation(line: 56, column: 7, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !10311, line: 56, column: 7)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !10311, line: 55, column: 57)
!10363 = distinct !DILexicalBlock(scope: !10345, file: !10311, line: 55, column: 2)
!10364 = !DILocation(line: 56, column: 30, scope: !10361)
!10365 = !DILocation(line: 56, column: 52, scope: !10361)
!10366 = !DILocation(line: 56, column: 34, scope: !10361)
!10367 = !DILocation(line: 56, column: 58, scope: !10361)
!10368 = !DILocation(line: 56, column: 7, scope: !10362)
!10369 = !DILocation(line: 55, column: 53, scope: !10363)
!10370 = !DILocation(line: 55, column: 33, scope: !10363)
!10371 = distinct !{!10371, !10344, !10372}
!10372 = !DILocation(line: 59, column: 2, scope: !10345)
!10373 = !DILocation(line: 62, column: 1, scope: !10331)
!10374 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10311, file: !10311, line: 93, type: !10375, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10377)
!10375 = !DISubroutineType(types: !10376)
!10376 = !{!157, !10314}
!10377 = !{!10378}
!10378 = !DILocalVariable(name: "dev", arg: 1, scope: !10374, file: !10311, line: 93, type: !10314)
!10379 = !DILocation(line: 0, scope: !10374)
!10380 = !DILocation(line: 99, column: 10, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10374, file: !10311, line: 99, column: 6)
!10382 = !DILocation(line: 99, column: 6, scope: !10374)
!10383 = !DILocation(line: 103, column: 14, scope: !10374)
!10384 = !DILocation(line: 103, column: 21, scope: !10374)
!10385 = !DILocation(line: 103, column: 33, scope: !10374)
!10386 = !DILocation(line: 103, column: 49, scope: !10374)
!10387 = !DILocation(line: 103, column: 58, scope: !10374)
!10388 = !DILocation(line: 104, column: 1, scope: !10374)
!10389 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10311, file: !10311, line: 87, type: !10390, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10393)
!10390 = !DISubroutineType(types: !10391)
!10391 = !{!200, !10392}
!10392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10314, size: 32)
!10393 = !{!10394}
!10394 = !DILocalVariable(name: "devices", arg: 1, scope: !10389, file: !10311, line: 87, type: !10392)
!10395 = !DILocation(line: 0, scope: !10389)
!10396 = !DILocation(line: 89, column: 11, scope: !10389)
!10397 = !DILocation(line: 90, column: 2, scope: !10389)
!10398 = distinct !DISubprogram(name: "device_required_foreach", scope: !10311, file: !10311, line: 125, type: !10399, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10405)
!10399 = !DISubroutineType(types: !10400)
!10400 = !{!103, !10314, !10401, !102}
!10401 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !10402)
!10402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10403, size: 32)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!103, !10314, !102}
!10405 = !{!10406, !10407, !10408, !10409, !10410}
!10406 = !DILocalVariable(name: "dev", arg: 1, scope: !10398, file: !10311, line: 125, type: !10314)
!10407 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10398, file: !10311, line: 126, type: !10401)
!10408 = !DILocalVariable(name: "context", arg: 3, scope: !10398, file: !10311, line: 127, type: !102)
!10409 = !DILocalVariable(name: "handle_count", scope: !10398, file: !10311, line: 129, type: !200)
!10410 = !DILocalVariable(name: "handles", scope: !10398, file: !10311, line: 130, type: !160)
!10411 = !DILocation(line: 0, scope: !10398)
!10412 = !DILocation(line: 129, column: 2, scope: !10398)
!10413 = !DILocation(line: 129, column: 9, scope: !10398)
!10414 = !DILocation(line: 130, column: 35, scope: !10398)
!10415 = !DILocation(line: 132, column: 33, scope: !10398)
!10416 = !DILocation(line: 132, column: 9, scope: !10398)
!10417 = !DILocation(line: 133, column: 1, scope: !10398)
!10418 = !DILocation(line: 132, column: 2, scope: !10398)
!10419 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !10420, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10422)
!10420 = !DISubroutineType(types: !10421)
!10421 = !{!160, !10314, !2301}
!10422 = !{!10423, !10424, !10425, !10426}
!10423 = !DILocalVariable(name: "dev", arg: 1, scope: !10419, file: !141, line: 493, type: !10314)
!10424 = !DILocalVariable(name: "count", arg: 2, scope: !10419, file: !141, line: 493, type: !2301)
!10425 = !DILocalVariable(name: "rv", scope: !10419, file: !141, line: 495, type: !160)
!10426 = !DILocalVariable(name: "i", scope: !10427, file: !141, line: 498, type: !200)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !141, line: 497, column: 18)
!10428 = distinct !DILexicalBlock(scope: !10419, file: !141, line: 497, column: 6)
!10429 = !DILocation(line: 0, scope: !10419)
!10430 = !DILocation(line: 495, column: 35, scope: !10419)
!10431 = !DILocation(line: 497, column: 9, scope: !10428)
!10432 = !DILocation(line: 497, column: 6, scope: !10419)
!10433 = !DILocation(line: 0, scope: !10427)
!10434 = !DILocation(line: 500, column: 11, scope: !10427)
!10435 = !DILocation(line: 500, column: 40, scope: !10427)
!10436 = !DILocation(line: 502, column: 4, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10427, file: !141, line: 501, column: 40)
!10438 = distinct !{!10438, !10439, !10440}
!10439 = !DILocation(line: 500, column: 3, scope: !10427)
!10440 = !DILocation(line: 503, column: 3, scope: !10427)
!10441 = !DILocation(line: 504, column: 10, scope: !10427)
!10442 = !DILocation(line: 505, column: 2, scope: !10427)
!10443 = !DILocation(line: 507, column: 2, scope: !10419)
!10444 = distinct !DISubprogram(name: "device_visitor", scope: !10311, file: !10311, line: 106, type: !10445, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10447)
!10445 = !DISubroutineType(types: !10446)
!10446 = !{!103, !160, !200, !10401, !102}
!10447 = !{!10448, !10449, !10450, !10451, !10452, !10454, !10457, !10458}
!10448 = !DILocalVariable(name: "handles", arg: 1, scope: !10444, file: !10311, line: 106, type: !160)
!10449 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10444, file: !10311, line: 107, type: !200)
!10450 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10444, file: !10311, line: 108, type: !10401)
!10451 = !DILocalVariable(name: "context", arg: 4, scope: !10444, file: !10311, line: 109, type: !102)
!10452 = !DILocalVariable(name: "i", scope: !10453, file: !10311, line: 112, type: !200)
!10453 = distinct !DILexicalBlock(scope: !10444, file: !10311, line: 112, column: 2)
!10454 = !DILocalVariable(name: "dh", scope: !10455, file: !10311, line: 113, type: !162)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !10311, line: 112, column: 44)
!10456 = distinct !DILexicalBlock(scope: !10453, file: !10311, line: 112, column: 2)
!10457 = !DILocalVariable(name: "rdev", scope: !10455, file: !10311, line: 114, type: !10314)
!10458 = !DILocalVariable(name: "rc", scope: !10455, file: !10311, line: 115, type: !103)
!10459 = !DILocation(line: 0, scope: !10444)
!10460 = !DILocation(line: 0, scope: !10453)
!10461 = !DILocation(line: 112, column: 23, scope: !10456)
!10462 = !DILocation(line: 112, column: 2, scope: !10453)
!10463 = distinct !{!10463, !10462, !10464}
!10464 = !DILocation(line: 120, column: 2, scope: !10453)
!10465 = !DILocation(line: 113, column: 24, scope: !10455)
!10466 = !DILocation(line: 0, scope: !10455)
!10467 = !DILocation(line: 114, column: 31, scope: !10455)
!10468 = !DILocation(line: 115, column: 12, scope: !10455)
!10469 = !DILocation(line: 117, column: 10, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10455, file: !10311, line: 117, column: 7)
!10471 = !DILocation(line: 112, column: 39, scope: !10456)
!10472 = !DILocation(line: 123, column: 1, scope: !10444)
!10473 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !10474, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10476)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{!10314, !162}
!10476 = !{!10477, !10478, !10479}
!10477 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10473, file: !141, line: 439, type: !162)
!10478 = !DILocalVariable(name: "dev", scope: !10473, file: !141, line: 443, type: !10314)
!10479 = !DILocalVariable(name: "numdev", scope: !10473, file: !141, line: 444, type: !200)
!10480 = !DILocation(line: 0, scope: !10473)
!10481 = !DILocation(line: 446, column: 7, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10473, file: !141, line: 446, column: 6)
!10483 = !DILocation(line: 446, column: 18, scope: !10482)
!10484 = !DILocation(line: 446, column: 23, scope: !10482)
!10485 = !DILocation(line: 450, column: 2, scope: !10473)
!10486 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10311, file: !10311, line: 135, type: !10399, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10487)
!10487 = !{!10488, !10489, !10490, !10491, !10492}
!10488 = !DILocalVariable(name: "dev", arg: 1, scope: !10486, file: !10311, line: 135, type: !10314)
!10489 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10486, file: !10311, line: 136, type: !10401)
!10490 = !DILocalVariable(name: "context", arg: 3, scope: !10486, file: !10311, line: 137, type: !102)
!10491 = !DILocalVariable(name: "handle_count", scope: !10486, file: !10311, line: 139, type: !200)
!10492 = !DILocalVariable(name: "handles", scope: !10486, file: !10311, line: 140, type: !160)
!10493 = !DILocation(line: 0, scope: !10486)
!10494 = !DILocation(line: 139, column: 2, scope: !10486)
!10495 = !DILocation(line: 139, column: 9, scope: !10486)
!10496 = !DILocation(line: 140, column: 35, scope: !10486)
!10497 = !DILocation(line: 142, column: 33, scope: !10486)
!10498 = !DILocation(line: 142, column: 9, scope: !10486)
!10499 = !DILocation(line: 143, column: 1, scope: !10486)
!10500 = !DILocation(line: 142, column: 2, scope: !10486)
!10501 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !10420, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !10502)
!10502 = !{!10503, !10504, !10505, !10506, !10507}
!10503 = !DILocalVariable(name: "dev", arg: 1, scope: !10501, file: !141, line: 573, type: !10314)
!10504 = !DILocalVariable(name: "count", arg: 2, scope: !10501, file: !141, line: 573, type: !2301)
!10505 = !DILocalVariable(name: "rv", scope: !10501, file: !141, line: 575, type: !160)
!10506 = !DILocalVariable(name: "region", scope: !10501, file: !141, line: 576, type: !200)
!10507 = !DILocalVariable(name: "i", scope: !10501, file: !141, line: 577, type: !200)
!10508 = !DILocation(line: 0, scope: !10501)
!10509 = !DILocation(line: 575, column: 35, scope: !10501)
!10510 = !DILocation(line: 579, column: 9, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10501, file: !141, line: 579, column: 6)
!10512 = !DILocation(line: 579, column: 6, scope: !10501)
!10513 = !DILocation(line: 582, column: 8, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10515, file: !141, line: 582, column: 8)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !141, line: 581, column: 23)
!10516 = distinct !DILexicalBlock(scope: !10511, file: !141, line: 579, column: 18)
!10517 = !DILocation(line: 582, column: 12, scope: !10514)
!10518 = !DILocation(line: 585, column: 6, scope: !10515)
!10519 = !DILocation(line: 0, scope: !10516)
!10520 = !DILocation(line: 581, column: 17, scope: !10516)
!10521 = !DILocation(line: 581, column: 3, scope: !10516)
!10522 = !DILocation(line: 588, column: 10, scope: !10516)
!10523 = !DILocation(line: 588, column: 16, scope: !10516)
!10524 = !DILocation(line: 589, column: 4, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10516, file: !141, line: 588, column: 39)
!10526 = !DILocation(line: 588, column: 3, scope: !10516)
!10527 = distinct !{!10527, !10526, !10528}
!10528 = !DILocation(line: 590, column: 3, scope: !10516)
!10529 = !DILocation(line: 591, column: 10, scope: !10516)
!10530 = !DILocation(line: 592, column: 2, scope: !10516)
!10531 = !DILocation(line: 575, column: 25, scope: !10501)
!10532 = !DILocation(line: 594, column: 2, scope: !10501)
!10533 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1634, file: !1634, line: 49, type: !10534, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !322)
!10534 = !DISubroutineType(types: !10535)
!10535 = !{!2294}
!10536 = !DILocation(line: 51, column: 10, scope: !10533)
!10537 = !DILocation(line: 51, column: 20, scope: !10533)
!10538 = !DILocation(line: 51, column: 2, scope: !10533)
!10539 = distinct !DISubprogram(name: "coredump", scope: !2810, file: !2810, line: 209, type: !10540, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10686)
!10540 = !DISubroutineType(types: !10541)
!10541 = !{null, !32, !10542, !10586}
!10542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10543, size: 32)
!10543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10544)
!10544 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2426, line: 141, baseType: !10545)
!10545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2426, line: 97, size: 256, elements: !10546)
!10546 = !{!10547}
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10545, file: !2426, line: 107, baseType: !10548, size: 256)
!10548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2426, line: 98, size: 256, elements: !10549)
!10549 = !{!10550, !10555, !10560, !10565, !10570, !10575, !10580, !10585}
!10550 = !DIDerivedType(tag: DW_TAG_member, scope: !10548, file: !2426, line: 99, baseType: !10551, size: 32)
!10551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10548, file: !2426, line: 99, size: 32, elements: !10552)
!10552 = !{!10553, !10554}
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10551, file: !2426, line: 99, baseType: !121, size: 32)
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10551, file: !2426, line: 99, baseType: !121, size: 32)
!10555 = !DIDerivedType(tag: DW_TAG_member, scope: !10548, file: !2426, line: 100, baseType: !10556, size: 32, offset: 32)
!10556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10548, file: !2426, line: 100, size: 32, elements: !10557)
!10557 = !{!10558, !10559}
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10556, file: !2426, line: 100, baseType: !121, size: 32)
!10559 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10556, file: !2426, line: 100, baseType: !121, size: 32)
!10560 = !DIDerivedType(tag: DW_TAG_member, scope: !10548, file: !2426, line: 101, baseType: !10561, size: 32, offset: 64)
!10561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10548, file: !2426, line: 101, size: 32, elements: !10562)
!10562 = !{!10563, !10564}
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10561, file: !2426, line: 101, baseType: !121, size: 32)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10561, file: !2426, line: 101, baseType: !121, size: 32)
!10565 = !DIDerivedType(tag: DW_TAG_member, scope: !10548, file: !2426, line: 102, baseType: !10566, size: 32, offset: 96)
!10566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10548, file: !2426, line: 102, size: 32, elements: !10567)
!10567 = !{!10568, !10569}
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10566, file: !2426, line: 102, baseType: !121, size: 32)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10566, file: !2426, line: 102, baseType: !121, size: 32)
!10570 = !DIDerivedType(tag: DW_TAG_member, scope: !10548, file: !2426, line: 103, baseType: !10571, size: 32, offset: 128)
!10571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10548, file: !2426, line: 103, size: 32, elements: !10572)
!10572 = !{!10573, !10574}
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10571, file: !2426, line: 103, baseType: !121, size: 32)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10571, file: !2426, line: 103, baseType: !121, size: 32)
!10575 = !DIDerivedType(tag: DW_TAG_member, scope: !10548, file: !2426, line: 104, baseType: !10576, size: 32, offset: 160)
!10576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10548, file: !2426, line: 104, size: 32, elements: !10577)
!10577 = !{!10578, !10579}
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10576, file: !2426, line: 104, baseType: !121, size: 32)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10576, file: !2426, line: 104, baseType: !121, size: 32)
!10580 = !DIDerivedType(tag: DW_TAG_member, scope: !10548, file: !2426, line: 105, baseType: !10581, size: 32, offset: 192)
!10581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10548, file: !2426, line: 105, size: 32, elements: !10582)
!10582 = !{!10583, !10584}
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10581, file: !2426, line: 105, baseType: !121, size: 32)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10581, file: !2426, line: 105, baseType: !121, size: 32)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10548, file: !2426, line: 106, baseType: !121, size: 32, offset: 224)
!10586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10587, size: 32)
!10587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !10588)
!10588 = !{!10589, !10647, !10659, !10660, !10661, !10662, !10668, !10681}
!10589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10587, file: !211, line: 247, baseType: !10590, size: 384)
!10590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !10591)
!10591 = !{!10592, !10616, !10623, !10624, !10625, !10634, !10635, !10636}
!10592 = !DIDerivedType(tag: DW_TAG_member, scope: !10590, file: !211, line: 60, baseType: !10593, size: 64)
!10593 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10590, file: !211, line: 60, size: 64, elements: !10594)
!10594 = !{!10595, !10610}
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10593, file: !211, line: 61, baseType: !10596, size: 64)
!10596 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !10597)
!10597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !10598)
!10598 = !{!10599, !10605}
!10599 = !DIDerivedType(tag: DW_TAG_member, scope: !10597, file: !221, line: 38, baseType: !10600, size: 32)
!10600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10597, file: !221, line: 38, size: 32, elements: !10601)
!10601 = !{!10602, !10604}
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10600, file: !221, line: 39, baseType: !10603, size: 32)
!10603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10597, size: 32)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10600, file: !221, line: 40, baseType: !10603, size: 32)
!10605 = !DIDerivedType(tag: DW_TAG_member, scope: !10597, file: !221, line: 42, baseType: !10606, size: 32, offset: 32)
!10606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10597, file: !221, line: 42, size: 32, elements: !10607)
!10607 = !{!10608, !10609}
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10606, file: !221, line: 43, baseType: !10603, size: 32)
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10606, file: !221, line: 44, baseType: !10603, size: 32)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10593, file: !211, line: 62, baseType: !10611, size: 64)
!10611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !10612)
!10612 = !{!10613}
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10611, file: !237, line: 50, baseType: !10614, size: 64)
!10614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10615, size: 64, elements: !242)
!10615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10611, size: 32)
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10590, file: !211, line: 68, baseType: !10617, size: 32, offset: 64)
!10617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10618, size: 32)
!10618 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !10619)
!10619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !10620)
!10620 = !{!10621}
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10619, file: !247, line: 232, baseType: !10622, size: 64)
!10622 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !10597)
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10590, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10590, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!10625 = !DIDerivedType(tag: DW_TAG_member, scope: !10590, file: !211, line: 90, baseType: !10626, size: 16, offset: 112)
!10626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10590, file: !211, line: 90, size: 16, elements: !10627)
!10627 = !{!10628, !10633}
!10628 = !DIDerivedType(tag: DW_TAG_member, scope: !10626, file: !211, line: 91, baseType: !10629, size: 16)
!10629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10626, file: !211, line: 91, size: 16, elements: !10630)
!10630 = !{!10631, !10632}
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10629, file: !211, line: 96, baseType: !261, size: 8)
!10632 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10629, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10626, file: !211, line: 100, baseType: !265, size: 16)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10590, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10590, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10590, file: !211, line: 131, baseType: !10637, size: 192, offset: 192)
!10637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !10638)
!10638 = !{!10639, !10640, !10646}
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10637, file: !247, line: 245, baseType: !10596, size: 64)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10637, file: !247, line: 246, baseType: !10641, size: 32, offset: 64)
!10641 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !10642)
!10642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10643, size: 32)
!10643 = !DISubroutineType(types: !10644)
!10644 = !{null, !10645}
!10645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10637, size: 32)
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10637, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10587, file: !211, line: 250, baseType: !10648, size: 288, offset: 384)
!10648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !10649)
!10649 = !{!10650, !10651, !10652, !10653, !10654, !10655, !10656, !10657, !10658}
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10648, file: !284, line: 26, baseType: !121, size: 32)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10648, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!10652 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10648, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10648, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!10654 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10648, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10648, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10648, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10648, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10648, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10587, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10587, file: !211, line: 256, baseType: !10618, size: 64, offset: 704)
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10587, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10587, file: !211, line: 300, baseType: !10663, size: 96, offset: 800)
!10663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !10664)
!10664 = !{!10665, !10666, !10667}
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10663, file: !211, line: 153, baseType: !22, size: 32)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10663, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10663, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10587, file: !211, line: 325, baseType: !10669, size: 32, offset: 896)
!10669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10670, size: 32)
!10670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !10671)
!10671 = !{!10672, !10678, !10679}
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10670, file: !307, line: 5074, baseType: !10673, size: 96)
!10673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !10674)
!10674 = !{!10675, !10676, !10677}
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10673, file: !311, line: 57, baseType: !314, size: 32)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10673, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10673, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!10678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10670, file: !307, line: 5075, baseType: !10618, size: 64, offset: 96)
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10670, file: !307, line: 5076, baseType: !10680, offset: 160)
!10680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10587, file: !211, line: 343, baseType: !10682, size: 64, offset: 928)
!10682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !10683)
!10683 = !{!10684, !10685}
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10682, file: !284, line: 63, baseType: !121, size: 32)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10682, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!10686 = !{!10687, !10688, !10689}
!10687 = !DILocalVariable(name: "reason", arg: 1, scope: !10539, file: !2810, line: 209, type: !32)
!10688 = !DILocalVariable(name: "esf", arg: 2, scope: !10539, file: !2810, line: 209, type: !10542)
!10689 = !DILocalVariable(name: "thread", arg: 3, scope: !10539, file: !2810, line: 210, type: !10586)
!10690 = !DILocation(line: 0, scope: !10539)
!10691 = !DILocation(line: 212, column: 1, scope: !10539)
!10692 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2810, file: !2810, line: 214, type: !10693, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10695)
!10693 = !DISubroutineType(types: !10694)
!10694 = !{null, !22, !22}
!10695 = !{!10696, !10697}
!10696 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10692, file: !2810, line: 214, type: !22)
!10697 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10692, file: !2810, line: 214, type: !22)
!10698 = !DILocation(line: 0, scope: !10692)
!10699 = !DILocation(line: 216, column: 1, scope: !10692)
!10700 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2810, file: !2810, line: 218, type: !10701, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10703)
!10701 = !DISubroutineType(types: !10702)
!10702 = !{null, !1675, !200}
!10703 = !{!10704, !10705}
!10704 = !DILocalVariable(name: "buf", arg: 1, scope: !10700, file: !2810, line: 218, type: !1675)
!10705 = !DILocalVariable(name: "buflen", arg: 2, scope: !10700, file: !2810, line: 218, type: !200)
!10706 = !DILocation(line: 0, scope: !10700)
!10707 = !DILocation(line: 220, column: 1, scope: !10700)
!10708 = distinct !DISubprogram(name: "coredump_query", scope: !2810, file: !2810, line: 222, type: !10709, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10711)
!10709 = !DISubroutineType(types: !10710)
!10710 = !{!103, !2809, !102}
!10711 = !{!10712, !10713}
!10712 = !DILocalVariable(name: "query_id", arg: 1, scope: !10708, file: !2810, line: 222, type: !2809)
!10713 = !DILocalVariable(name: "arg", arg: 2, scope: !10708, file: !2810, line: 222, type: !102)
!10714 = !DILocation(line: 0, scope: !10708)
!10715 = !DILocation(line: 224, column: 2, scope: !10708)
!10716 = distinct !DISubprogram(name: "coredump_cmd", scope: !2810, file: !2810, line: 227, type: !10717, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10719)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{!103, !2816, !102}
!10719 = !{!10720, !10721}
!10720 = !DILocalVariable(name: "query_id", arg: 1, scope: !10716, file: !2810, line: 227, type: !2816)
!10721 = !DILocalVariable(name: "arg", arg: 2, scope: !10716, file: !2810, line: 227, type: !102)
!10722 = !DILocation(line: 0, scope: !10716)
!10723 = !DILocation(line: 229, column: 2, scope: !10716)
!10724 = distinct !DISubprogram(name: "arch_system_halt", scope: !10725, file: !10725, line: 23, type: !4794, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10726)
!10725 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10726 = !{!10727}
!10727 = !DILocalVariable(name: "reason", arg: 1, scope: !10724, file: !10725, line: 23, type: !32)
!10728 = !DILocation(line: 0, scope: !10724)
!10729 = !DILocation(line: 55, column: 2, scope: !10730, inlinedAt: !10734)
!10730 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4783, file: !4783, line: 42, type: !4784, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10731)
!10731 = !{!10732, !10733}
!10732 = !DILocalVariable(name: "key", scope: !10730, file: !4783, line: 44, type: !32)
!10733 = !DILocalVariable(name: "tmp", scope: !10730, file: !4783, line: 53, type: !32)
!10734 = distinct !DILocation(line: 31, column: 8, scope: !10724)
!10735 = !{i64 2240767}
!10736 = !DILocation(line: 0, scope: !10730, inlinedAt: !10734)
!10737 = !DILocation(line: 32, column: 2, scope: !10724)
!10738 = !DILocation(line: 32, column: 2, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10740, file: !10725, line: 32, column: 2)
!10740 = distinct !DILexicalBlock(scope: !10724, file: !10725, line: 32, column: 2)
!10741 = distinct !{!10741, !10742, !10743}
!10742 = !DILocation(line: 32, column: 2, scope: !10740)
!10743 = !DILocation(line: 34, column: 2, scope: !10740)
!10744 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10725, file: !10725, line: 39, type: !10745, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10747)
!10745 = !DISubroutineType(types: !10746)
!10746 = !{null, !32, !10542}
!10747 = !{!10748, !10749}
!10748 = !DILocalVariable(name: "reason", arg: 1, scope: !10744, file: !10725, line: 39, type: !32)
!10749 = !DILocalVariable(name: "esf", arg: 2, scope: !10744, file: !10725, line: 40, type: !10542)
!10750 = !DILocation(line: 0, scope: !10744)
!10751 = !DILocation(line: 46, column: 2, scope: !10744)
!10752 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10725, file: !10725, line: 81, type: !4794, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10753)
!10753 = !{!10754}
!10754 = !DILocalVariable(name: "reason", arg: 1, scope: !10752, file: !10725, line: 81, type: !32)
!10755 = !DILocation(line: 0, scope: !10752)
!10756 = !DILocation(line: 83, column: 2, scope: !10752)
!10757 = distinct !DISubprogram(name: "z_fatal_error", scope: !10725, file: !10725, line: 96, type: !10745, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10758)
!10758 = !{!10759, !10760, !10761, !10762}
!10759 = !DILocalVariable(name: "reason", arg: 1, scope: !10757, file: !10725, line: 96, type: !32)
!10760 = !DILocalVariable(name: "esf", arg: 2, scope: !10757, file: !10725, line: 96, type: !10542)
!10761 = !DILocalVariable(name: "key", scope: !10757, file: !10725, line: 102, type: !32)
!10762 = !DILocalVariable(name: "thread", scope: !10757, file: !10725, line: 103, type: !10586)
!10763 = !DILocation(line: 0, scope: !10757)
!10764 = !DILocation(line: 55, column: 2, scope: !10730, inlinedAt: !10765)
!10765 = distinct !DILocation(line: 102, column: 21, scope: !10757)
!10766 = !DILocation(line: 0, scope: !10730, inlinedAt: !10765)
!10767 = !DILocation(line: 119, column: 11, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10757, file: !10725, line: 119, column: 6)
!10769 = !DILocation(line: 119, column: 20, scope: !10768)
!10770 = !DILocation(line: 131, column: 2, scope: !10757)
!10771 = !DILocation(line: 151, column: 7, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10773, file: !10725, line: 146, column: 32)
!10773 = distinct !DILexicalBlock(scope: !10757, file: !10725, line: 146, column: 6)
!10774 = !DILocation(line: 151, column: 21, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10772, file: !10725, line: 151, column: 7)
!10776 = !DILocation(line: 104, column: 4, scope: !10757)
!10777 = !DILocalVariable(name: "key", arg: 1, scope: !10778, file: !4783, line: 84, type: !32)
!10778 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10779)
!10779 = !{!10777}
!10780 = !DILocation(line: 0, scope: !10778, inlinedAt: !10781)
!10781 = distinct !DILocation(line: 186, column: 2, scope: !10757)
!10782 = !DILocation(line: 95, column: 2, scope: !10778, inlinedAt: !10781)
!10783 = !{i64 2241584}
!10784 = !DILocation(line: 189, column: 3, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10786, file: !10725, line: 188, column: 41)
!10786 = distinct !DILexicalBlock(scope: !10757, file: !10725, line: 188, column: 6)
!10787 = !DILocation(line: 191, column: 1, scope: !10757)
!10788 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !10789, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !322)
!10789 = !DISubroutineType(types: !10790)
!10790 = !{!10791}
!10791 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !10586)
!10792 = !DILocation(line: 535, column: 9, scope: !10788)
!10793 = !DILocation(line: 535, column: 2, scope: !10788)
!10794 = distinct !DISubprogram(name: "k_thread_abort", scope: !3013, file: !3013, line: 188, type: !10795, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !10797)
!10795 = !DISubroutineType(types: !10796)
!10796 = !{null, !10791}
!10797 = !{!10798}
!10798 = !DILocalVariable(name: "thread", arg: 1, scope: !10794, file: !3013, line: 188, type: !10791)
!10799 = !DILocation(line: 0, scope: !10794)
!10800 = !DILocation(line: 197, column: 2, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10794, file: !3013, line: 197, column: 2)
!10802 = !{i64 2154741546}
!10803 = !DILocation(line: 198, column: 2, scope: !10794)
!10804 = !DILocation(line: 199, column: 1, scope: !10794)
!10805 = distinct !DISubprogram(name: "z_current_get", scope: !3013, file: !3013, line: 173, type: !10789, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !322)
!10806 = !DILocation(line: 180, column: 2, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10805, file: !3013, line: 180, column: 2)
!10808 = !{i64 2154741478}
!10809 = !DILocation(line: 181, column: 9, scope: !10805)
!10810 = !DILocation(line: 181, column: 2, scope: !10805)
!10811 = distinct !DISubprogram(name: "z_early_memset", scope: !1642, file: !1642, line: 108, type: !10812, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10814)
!10812 = !DISubroutineType(types: !10813)
!10813 = !{null, !102, !103, !200}
!10814 = !{!10815, !10816, !10817}
!10815 = !DILocalVariable(name: "dst", arg: 1, scope: !10811, file: !1642, line: 108, type: !102)
!10816 = !DILocalVariable(name: "c", arg: 2, scope: !10811, file: !1642, line: 108, type: !103)
!10817 = !DILocalVariable(name: "n", arg: 3, scope: !10811, file: !1642, line: 108, type: !200)
!10818 = !DILocation(line: 0, scope: !10811)
!10819 = !DILocation(line: 110, column: 9, scope: !10811)
!10820 = !DILocation(line: 111, column: 1, scope: !10811)
!10821 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1642, file: !1642, line: 121, type: !10822, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10824)
!10822 = !DISubroutineType(types: !10823)
!10823 = !{null, !102, !13, !200}
!10824 = !{!10825, !10826, !10827}
!10825 = !DILocalVariable(name: "dst", arg: 1, scope: !10821, file: !1642, line: 121, type: !102)
!10826 = !DILocalVariable(name: "src", arg: 2, scope: !10821, file: !1642, line: 121, type: !13)
!10827 = !DILocalVariable(name: "n", arg: 3, scope: !10821, file: !1642, line: 121, type: !200)
!10828 = !DILocation(line: 0, scope: !10821)
!10829 = !DILocation(line: 123, column: 9, scope: !10821)
!10830 = !DILocation(line: 124, column: 1, scope: !10821)
!10831 = distinct !DISubprogram(name: "z_bss_zero", scope: !1642, file: !1642, line: 132, type: !2843, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !322)
!10832 = !DILocation(line: 143, column: 2, scope: !10831)
!10833 = !DILocation(line: 168, column: 1, scope: !10831)
!10834 = distinct !DISubprogram(name: "z_init_cpu", scope: !1642, file: !1642, line: 372, type: !6602, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10835)
!10835 = !{!10836}
!10836 = !DILocalVariable(name: "id", arg: 1, scope: !10834, file: !1642, line: 372, type: !103)
!10837 = !DILocation(line: 0, scope: !10834)
!10838 = !DILocation(line: 374, column: 2, scope: !10834)
!10839 = !DILocation(line: 375, column: 34, scope: !10834)
!10840 = !DILocation(line: 375, column: 19, scope: !10834)
!10841 = !DILocation(line: 375, column: 31, scope: !10834)
!10842 = !DILocation(line: 376, column: 24, scope: !10834)
!10843 = !DILocation(line: 376, column: 19, scope: !10834)
!10844 = !DILocation(line: 376, column: 22, scope: !10834)
!10845 = !DILocation(line: 378, column: 26, scope: !10834)
!10846 = !DILocation(line: 378, column: 4, scope: !10834)
!10847 = !DILocation(line: 378, column: 50, scope: !10834)
!10848 = !DILocation(line: 377, column: 19, scope: !10834)
!10849 = !DILocation(line: 377, column: 29, scope: !10834)
!10850 = !DILocation(line: 384, column: 1, scope: !10834)
!10851 = distinct !DISubprogram(name: "init_idle_thread", scope: !1642, file: !1642, line: 343, type: !6602, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10852)
!10852 = !{!10853, !10854, !10855, !10858}
!10853 = !DILocalVariable(name: "i", arg: 1, scope: !10851, file: !1642, line: 343, type: !103)
!10854 = !DILocalVariable(name: "thread", scope: !10851, file: !1642, line: 345, type: !1735)
!10855 = !DILocalVariable(name: "stack", scope: !10851, file: !1642, line: 346, type: !10856)
!10856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10857, size: 32)
!10857 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3284, line: 44, baseType: !1849)
!10858 = !DILocalVariable(name: "tname", scope: !10851, file: !1642, line: 358, type: !977)
!10859 = !DILocation(line: 0, scope: !10851)
!10860 = !DILocation(line: 345, column: 29, scope: !10851)
!10861 = !DILocation(line: 346, column: 28, scope: !10851)
!10862 = !DILocation(line: 362, column: 37, scope: !10851)
!10863 = !DILocation(line: 362, column: 36, scope: !10851)
!10864 = !DILocation(line: 361, column: 2, scope: !10851)
!10865 = !DILocation(line: 365, column: 2, scope: !10851)
!10866 = !DILocation(line: 370, column: 1, scope: !10851)
!10867 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1850, file: !1850, line: 331, type: !10868, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10870)
!10868 = !DISubroutineType(types: !10869)
!10869 = !{!977, !10856}
!10870 = !{!10871}
!10871 = !DILocalVariable(name: "sym", arg: 1, scope: !10867, file: !1850, line: 331, type: !10856)
!10872 = !DILocation(line: 0, scope: !10867)
!10873 = !DILocation(line: 333, column: 21, scope: !10867)
!10874 = !DILocation(line: 333, column: 2, scope: !10867)
!10875 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10876, file: !10876, line: 155, type: !10877, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10879)
!10876 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10877 = !DISubroutineType(types: !10878)
!10878 = !{null, !1735}
!10879 = !{!10880}
!10880 = !DILocalVariable(name: "thread", arg: 1, scope: !10875, file: !10876, line: 155, type: !1735)
!10881 = !DILocation(line: 0, scope: !10875)
!10882 = !DILocation(line: 157, column: 15, scope: !10875)
!10883 = !DILocation(line: 157, column: 28, scope: !10875)
!10884 = !DILocation(line: 158, column: 1, scope: !10875)
!10885 = distinct !DISubprogram(name: "z_cstart", scope: !1642, file: !1642, line: 501, type: !2843, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10886)
!10886 = !{!10887}
!10887 = !DILocalVariable(name: "dummy_thread", scope: !10885, file: !1642, line: 518, type: !1736)
!10888 = !DILocation(line: 507, column: 2, scope: !10885)
!10889 = !DILocation(line: 43, column: 14, scope: !10890, inlinedAt: !10894)
!10890 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10891, file: !10891, line: 40, type: !2843, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10892)
!10891 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10892 = !{!10893}
!10893 = !DILocalVariable(name: "msp", scope: !10890, file: !10891, line: 42, type: !121)
!10894 = distinct !DILocation(line: 44, column: 2, scope: !10895, inlinedAt: !10897)
!10895 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10896, file: !10896, line: 42, type: !2843, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !322)
!10896 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10897 = distinct !DILocation(line: 510, column: 2, scope: !10885)
!10898 = !DILocation(line: 43, column: 3, scope: !10890, inlinedAt: !10894)
!10899 = !DILocation(line: 43, column: 60, scope: !10890, inlinedAt: !10894)
!10900 = !DILocation(line: 0, scope: !10890, inlinedAt: !10894)
!10901 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10902, file: !4957, line: 1153, type: !121)
!10902 = distinct !DISubprogram(name: "__set_MSP", scope: !4957, file: !4957, line: 1153, type: !5048, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10903)
!10903 = !{!10901}
!10904 = !DILocation(line: 0, scope: !10902, inlinedAt: !10905)
!10905 = distinct !DILocation(line: 46, column: 2, scope: !10890, inlinedAt: !10894)
!10906 = !DILocation(line: 1155, column: 3, scope: !10902, inlinedAt: !10905)
!10907 = !{i64 3515143}
!10908 = !DILocation(line: 62, column: 11, scope: !10890, inlinedAt: !10894)
!10909 = !DILocation(line: 102, column: 2, scope: !10910, inlinedAt: !10911)
!10910 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5751, file: !5751, line: 97, type: !2843, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !322)
!10911 = distinct !DILocation(line: 45, column: 2, scope: !10895, inlinedAt: !10897)
!10912 = !DILocation(line: 108, column: 2, scope: !10910, inlinedAt: !10911)
!10913 = !DILocation(line: 112, column: 2, scope: !10910, inlinedAt: !10911)
!10914 = !DILocation(line: 113, column: 2, scope: !10910, inlinedAt: !10911)
!10915 = !DILocation(line: 114, column: 2, scope: !10910, inlinedAt: !10911)
!10916 = !DILocation(line: 116, column: 2, scope: !10910, inlinedAt: !10911)
!10917 = !DILocation(line: 123, column: 13, scope: !10910, inlinedAt: !10911)
!10918 = !DILocation(line: 46, column: 2, scope: !10895, inlinedAt: !10897)
!10919 = !DILocation(line: 47, column: 2, scope: !10895, inlinedAt: !10897)
!10920 = !DILocation(line: 174, column: 12, scope: !10921, inlinedAt: !10922)
!10921 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5751, file: !5751, line: 169, type: !2843, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !322)
!10922 = distinct !DILocation(line: 48, column: 2, scope: !10895, inlinedAt: !10897)
!10923 = !DILocation(line: 179, column: 12, scope: !10921, inlinedAt: !10922)
!10924 = !DILocation(line: 50, column: 2, scope: !10895, inlinedAt: !10897)
!10925 = !DILocation(line: 57, column: 2, scope: !10895, inlinedAt: !10897)
!10926 = !DILocation(line: 518, column: 2, scope: !10885)
!10927 = !DILocation(line: 518, column: 18, scope: !10885)
!10928 = !DILocation(line: 520, column: 2, scope: !10885)
!10929 = !DILocation(line: 523, column: 2, scope: !10885)
!10930 = !DILocation(line: 526, column: 2, scope: !10885)
!10931 = !DILocation(line: 527, column: 2, scope: !10885)
!10932 = !DILocation(line: 543, column: 24, scope: !10885)
!10933 = !DILocation(line: 543, column: 2, scope: !10885)
!10934 = !DILocation(line: 0, scope: !1869)
!10935 = !DILocation(line: 246, column: 15, scope: !1887)
!10936 = !DILocation(line: 246, column: 36, scope: !1886)
!10937 = !DILocation(line: 246, column: 2, scope: !1887)
!10938 = !DILocation(line: 247, column: 37, scope: !1885)
!10939 = !DILocation(line: 0, scope: !1885)
!10940 = !DILocation(line: 248, column: 19, scope: !1885)
!10941 = !DILocation(line: 248, column: 12, scope: !1885)
!10942 = !DILocation(line: 250, column: 11, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !1885, file: !1642, line: 250, column: 7)
!10944 = !DILocation(line: 250, column: 7, scope: !1885)
!10945 = !DILocation(line: 254, column: 11, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !1642, line: 254, column: 8)
!10947 = distinct !DILexicalBlock(scope: !10943, file: !1642, line: 250, column: 20)
!10948 = !DILocation(line: 254, column: 8, scope: !10947)
!10949 = !DILocation(line: 255, column: 9, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10946, file: !1642, line: 254, column: 17)
!10951 = !DILocation(line: 258, column: 9, scope: !10950)
!10952 = !DILocation(line: 261, column: 28, scope: !10950)
!10953 = !DILocation(line: 261, column: 10, scope: !10950)
!10954 = !DILocation(line: 261, column: 17, scope: !10950)
!10955 = !DILocation(line: 261, column: 26, scope: !10950)
!10956 = !DILocation(line: 262, column: 4, scope: !10950)
!10957 = !DILocation(line: 263, column: 9, scope: !10947)
!10958 = !DILocation(line: 263, column: 16, scope: !10947)
!10959 = !DILocation(line: 263, column: 28, scope: !10947)
!10960 = !DILocation(line: 264, column: 3, scope: !10947)
!10961 = !DILocation(line: 246, column: 60, scope: !1886)
!10962 = distinct !{!10962, !10937, !10963}
!10963 = !DILocation(line: 265, column: 2, scope: !1887)
!10964 = !DILocation(line: 266, column: 1, scope: !1869)
!10965 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !4991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10966)
!10966 = !{!10967, !10968}
!10967 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10965, file: !356, line: 1814, type: !612)
!10968 = !DILocalVariable(name: "priority", arg: 2, scope: !10965, file: !356, line: 1814, type: !121)
!10969 = !DILocation(line: 0, scope: !10965)
!10970 = !DILocation(line: 1822, column: 48, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !356, line: 1821, column: 3)
!10972 = distinct !DILexicalBlock(scope: !10965, file: !356, line: 1816, column: 7)
!10973 = !DILocation(line: 1822, column: 32, scope: !10971)
!10974 = !DILocation(line: 1822, column: 40, scope: !10971)
!10975 = !DILocation(line: 1822, column: 5, scope: !10971)
!10976 = !DILocation(line: 1822, column: 46, scope: !10971)
!10977 = !DILocation(line: 1824, column: 1, scope: !10965)
!10978 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10896, file: !10896, line: 32, type: !2843, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10979 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10980, file: !10980, line: 215, type: !10877, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10981)
!10980 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10981 = !{!10982}
!10982 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10979, file: !10980, line: 215, type: !1735)
!10983 = !DILocation(line: 0, scope: !10979)
!10984 = !DILocation(line: 217, column: 21, scope: !10979)
!10985 = !DILocation(line: 217, column: 34, scope: !10979)
!10986 = !DILocation(line: 221, column: 21, scope: !10979)
!10987 = !DILocation(line: 221, column: 34, scope: !10979)
!10988 = !DILocation(line: 223, column: 27, scope: !10979)
!10989 = !DILocation(line: 223, column: 33, scope: !10979)
!10990 = !DILocation(line: 224, column: 27, scope: !10979)
!10991 = !DILocation(line: 224, column: 32, scope: !10979)
!10992 = !DILocation(line: 232, column: 16, scope: !10979)
!10993 = !DILocation(line: 232, column: 30, scope: !10979)
!10994 = !DILocation(line: 239, column: 24, scope: !10979)
!10995 = !DILocation(line: 240, column: 1, scope: !10979)
!10996 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1642, file: !1642, line: 399, type: !10997, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !10999)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!977}
!10999 = !{!11000}
!11000 = !DILocalVariable(name: "stack_ptr", scope: !10996, file: !1642, line: 401, type: !977)
!11001 = !DILocation(line: 404, column: 2, scope: !10996)
!11002 = !DILocation(line: 416, column: 24, scope: !10996)
!11003 = !DILocation(line: 418, column: 14, scope: !10996)
!11004 = !DILocation(line: 0, scope: !10996)
!11005 = !DILocation(line: 423, column: 2, scope: !10996)
!11006 = !DILocation(line: 424, column: 2, scope: !10996)
!11007 = !DILocation(line: 426, column: 2, scope: !10996)
!11008 = !DILocation(line: 428, column: 2, scope: !10996)
!11009 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1642, file: !1642, line: 432, type: !11010, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !11012)
!11010 = !DISubroutineType(types: !11011)
!11011 = !{null, !977}
!11012 = !{!11013}
!11013 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11009, file: !1642, line: 432, type: !977)
!11014 = !DILocation(line: 0, scope: !11009)
!11015 = !DILocation(line: 435, column: 2, scope: !11009)
!11016 = !DILocation(line: 445, column: 2, scope: !11009)
!11017 = distinct !DISubprogram(name: "bg_thread_main", scope: !1642, file: !1642, line: 277, type: !3286, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1638, retainedNodes: !11018)
!11018 = !{!11019, !11020, !11021}
!11019 = !DILocalVariable(name: "unused1", arg: 1, scope: !11017, file: !1642, line: 277, type: !102)
!11020 = !DILocalVariable(name: "unused2", arg: 2, scope: !11017, file: !1642, line: 277, type: !102)
!11021 = !DILocalVariable(name: "unused3", arg: 3, scope: !11017, file: !1642, line: 277, type: !102)
!11022 = !DILocation(line: 0, scope: !11017)
!11023 = !DILocation(line: 291, column: 20, scope: !11017)
!11024 = !DILocation(line: 293, column: 2, scope: !11017)
!11025 = !DILocation(line: 297, column: 2, scope: !11017)
!11026 = !DILocation(line: 305, column: 2, scope: !11017)
!11027 = !DILocation(line: 307, column: 2, scope: !11017)
!11028 = !DILocation(line: 330, column: 8, scope: !11017)
!11029 = !DILocation(line: 333, column: 34, scope: !11017)
!11030 = !DILocation(line: 339, column: 1, scope: !11017)
!11031 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1896, file: !1896, line: 45, type: !11032, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11040)
!11032 = !DISubroutineType(types: !11033)
!11033 = !{null, !11034, !102}
!11034 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !11035)
!11035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11036, size: 32)
!11036 = !DISubroutineType(types: !11037)
!11037 = !{null, !11038, !102}
!11038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11039, size: 32)
!11039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1901)
!11040 = !{!11041, !11042}
!11041 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11031, file: !1896, line: 45, type: !11034)
!11042 = !DILocalVariable(name: "user_data", arg: 2, scope: !11031, file: !1896, line: 45, type: !102)
!11043 = !DILocation(line: 0, scope: !11031)
!11044 = !DILocation(line: 71, column: 1, scope: !11031)
!11045 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1896, file: !1896, line: 73, type: !11032, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11046)
!11046 = !{!11047, !11048}
!11047 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11045, file: !1896, line: 73, type: !11034)
!11048 = !DILocalVariable(name: "user_data", arg: 2, scope: !11045, file: !1896, line: 73, type: !102)
!11049 = !DILocation(line: 0, scope: !11045)
!11050 = !DILocation(line: 95, column: 1, scope: !11045)
!11051 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1896, file: !1896, line: 97, type: !5752, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!11052 = !DILocation(line: 1031, column: 3, scope: !11053, inlinedAt: !11056)
!11053 = distinct !DISubprogram(name: "__get_IPSR", scope: !4957, file: !4957, line: 1027, type: !5038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11054)
!11054 = !{!11055}
!11055 = !DILocalVariable(name: "result", scope: !11053, file: !4957, line: 1029, type: !121)
!11056 = distinct !DILocation(line: 48, column: 10, scope: !11057, inlinedAt: !11058)
!11057 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5751, file: !5751, line: 46, type: !5752, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!11058 = distinct !DILocation(line: 99, column: 9, scope: !11051)
!11059 = !{i64 3520794}
!11060 = !DILocation(line: 0, scope: !11053, inlinedAt: !11056)
!11061 = !DILocation(line: 48, column: 9, scope: !11057, inlinedAt: !11058)
!11062 = !DILocation(line: 99, column: 2, scope: !11051)
!11063 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1896, file: !1896, line: 106, type: !2843, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!11064 = !DILocation(line: 108, column: 2, scope: !11063)
!11065 = !DILocation(line: 108, column: 17, scope: !11063)
!11066 = !DILocation(line: 108, column: 30, scope: !11063)
!11067 = !DILocation(line: 109, column: 1, scope: !11063)
!11068 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1896, file: !1896, line: 116, type: !2843, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!11069 = !DILocation(line: 118, column: 2, scope: !11068)
!11070 = !DILocation(line: 118, column: 17, scope: !11068)
!11071 = !DILocation(line: 118, column: 30, scope: !11068)
!11072 = !DILocation(line: 119, column: 1, scope: !11068)
!11073 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1896, file: !1896, line: 126, type: !5752, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !322)
!11074 = !DILocation(line: 128, column: 10, scope: !11073)
!11075 = !DILocation(line: 128, column: 25, scope: !11073)
!11076 = !DILocation(line: 128, column: 38, scope: !11073)
!11077 = !DILocation(line: 128, column: 53, scope: !11073)
!11078 = !DILocation(line: 128, column: 2, scope: !11073)
!11079 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1896, file: !1896, line: 187, type: !11080, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11082)
!11080 = !DISubroutineType(types: !11081)
!11081 = !{!103, !1900, !144}
!11082 = !{!11083, !11084}
!11083 = !DILocalVariable(name: "thread", arg: 1, scope: !11079, file: !1896, line: 187, type: !1900)
!11084 = !DILocalVariable(name: "value", arg: 2, scope: !11079, file: !1896, line: 187, type: !144)
!11085 = !DILocation(line: 0, scope: !11079)
!11086 = !DILocation(line: 206, column: 2, scope: !11079)
!11087 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1896, file: !1896, line: 238, type: !11088, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11090)
!11088 = !DISubroutineType(types: !11089)
!11089 = !{!144, !1900}
!11090 = !{!11091}
!11091 = !DILocalVariable(name: "thread", arg: 1, scope: !11087, file: !1896, line: 238, type: !1900)
!11092 = !DILocation(line: 0, scope: !11087)
!11093 = !DILocation(line: 244, column: 2, scope: !11087)
!11094 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1896, file: !1896, line: 248, type: !11095, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11097)
!11095 = !DISubroutineType(types: !11096)
!11096 = !{!103, !1899, !977, !200}
!11097 = !{!11098, !11099, !11100}
!11098 = !DILocalVariable(name: "thread", arg: 1, scope: !11094, file: !1896, line: 248, type: !1899)
!11099 = !DILocalVariable(name: "buf", arg: 2, scope: !11094, file: !1896, line: 248, type: !977)
!11100 = !DILocalVariable(name: "size", arg: 3, scope: !11094, file: !1896, line: 248, type: !200)
!11101 = !DILocation(line: 0, scope: !11094)
!11102 = !DILocation(line: 257, column: 2, scope: !11094)
!11103 = !DILocation(line: 0, scope: !1895)
!11104 = !DILocation(line: 281, column: 11, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !1895, file: !1896, line: 281, column: 6)
!11106 = !DILocation(line: 281, column: 20, scope: !11105)
!11107 = !DILocation(line: 275, column: 45, scope: !1895)
!11108 = !DILocation(line: 285, column: 10, scope: !1895)
!11109 = !DILocation(line: 0, scope: !2016)
!11110 = !DILocation(line: 293, column: 39, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !2016, file: !1896, line: 293, column: 2)
!11112 = !DILocation(line: 293, column: 2, scope: !2016)
!11113 = !DILocation(line: 273, column: 14, scope: !1895)
!11114 = !DILocation(line: 309, column: 2, scope: !1895)
!11115 = !DILocation(line: 309, column: 11, scope: !1895)
!11116 = !DILocation(line: 311, column: 2, scope: !1895)
!11117 = !DILocation(line: 293, column: 26, scope: !11111)
!11118 = !DILocation(line: 294, column: 9, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11111, file: !1896, line: 293, column: 54)
!11120 = !DILocation(line: 295, column: 21, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11119, file: !1896, line: 295, column: 7)
!11122 = !DILocation(line: 295, column: 28, scope: !11121)
!11123 = !DILocation(line: 295, column: 7, scope: !11119)
!11124 = !DILocation(line: 299, column: 25, scope: !11119)
!11125 = !DILocation(line: 299, column: 41, scope: !11119)
!11126 = !DILocation(line: 300, column: 7, scope: !11119)
!11127 = !DILocation(line: 300, column: 26, scope: !11119)
!11128 = !DILocation(line: 299, column: 10, scope: !11119)
!11129 = !DILocation(line: 299, column: 7, scope: !11119)
!11130 = !DILocation(line: 302, column: 16, scope: !11119)
!11131 = !DILocation(line: 304, column: 20, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11119, file: !1896, line: 304, column: 7)
!11133 = !DILocation(line: 304, column: 7, scope: !11119)
!11134 = !DILocation(line: 305, column: 26, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11132, file: !1896, line: 304, column: 26)
!11136 = !DILocation(line: 305, column: 42, scope: !11135)
!11137 = !DILocation(line: 305, column: 11, scope: !11135)
!11138 = !DILocation(line: 305, column: 8, scope: !11135)
!11139 = !DILocation(line: 306, column: 3, scope: !11135)
!11140 = !DILocation(line: 293, column: 50, scope: !11111)
!11141 = !DILocation(line: 312, column: 1, scope: !1895)
!11142 = distinct !DISubprogram(name: "copy_bytes", scope: !1896, file: !1896, line: 261, type: !11143, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11145)
!11143 = !DISubroutineType(types: !11144)
!11144 = !{!200, !977, !200, !144, !200}
!11145 = !{!11146, !11147, !11148, !11149, !11150}
!11146 = !DILocalVariable(name: "dest", arg: 1, scope: !11142, file: !1896, line: 261, type: !977)
!11147 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11142, file: !1896, line: 261, type: !200)
!11148 = !DILocalVariable(name: "src", arg: 3, scope: !11142, file: !1896, line: 261, type: !144)
!11149 = !DILocalVariable(name: "src_size", arg: 4, scope: !11142, file: !1896, line: 261, type: !200)
!11150 = !DILocalVariable(name: "bytes_to_copy", scope: !11142, file: !1896, line: 263, type: !200)
!11151 = !DILocation(line: 0, scope: !11142)
!11152 = !DILocation(line: 265, column: 18, scope: !11142)
!11153 = !DILocation(line: 266, column: 2, scope: !11142)
!11154 = !DILocation(line: 268, column: 2, scope: !11142)
!11155 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1896, file: !1896, line: 383, type: !11156, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11158)
!11156 = !DISubroutineType(types: !11157)
!11157 = !{null, !1900}
!11158 = !{!11159}
!11159 = !DILocalVariable(name: "thread", arg: 1, scope: !11155, file: !1896, line: 383, type: !1900)
!11160 = !DILocation(line: 0, scope: !11155)
!11161 = !DILocation(line: 387, column: 2, scope: !11155)
!11162 = !DILocation(line: 388, column: 1, scope: !11155)
!11163 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1896, file: !1896, line: 528, type: !11164, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11171)
!11164 = !DISubroutineType(types: !11165)
!11165 = !{!977, !1900, !11166, !200, !3283, !102, !102, !102, !103, !121, !144}
!11166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11167, size: 32)
!11167 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3284, line: 44, baseType: !11168)
!11168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1850, line: 47, size: 8, elements: !11169)
!11169 = !{!11170}
!11170 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11168, file: !1850, line: 48, baseType: !146, size: 8)
!11171 = !{!11172, !11173, !11174, !11175, !11176, !11177, !11178, !11179, !11180, !11181, !11182}
!11172 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11163, file: !1896, line: 528, type: !1900)
!11173 = !DILocalVariable(name: "stack", arg: 2, scope: !11163, file: !1896, line: 529, type: !11166)
!11174 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11163, file: !1896, line: 529, type: !200)
!11175 = !DILocalVariable(name: "entry", arg: 4, scope: !11163, file: !1896, line: 530, type: !3283)
!11176 = !DILocalVariable(name: "p1", arg: 5, scope: !11163, file: !1896, line: 531, type: !102)
!11177 = !DILocalVariable(name: "p2", arg: 6, scope: !11163, file: !1896, line: 531, type: !102)
!11178 = !DILocalVariable(name: "p3", arg: 7, scope: !11163, file: !1896, line: 531, type: !102)
!11179 = !DILocalVariable(name: "prio", arg: 8, scope: !11163, file: !1896, line: 532, type: !103)
!11180 = !DILocalVariable(name: "options", arg: 9, scope: !11163, file: !1896, line: 532, type: !121)
!11181 = !DILocalVariable(name: "name", arg: 10, scope: !11163, file: !1896, line: 532, type: !144)
!11182 = !DILocalVariable(name: "stack_ptr", scope: !11163, file: !1896, line: 534, type: !977)
!11183 = !DILocation(line: 0, scope: !11163)
!11184 = !DILocation(line: 550, column: 28, scope: !11163)
!11185 = !DILocation(line: 550, column: 2, scope: !11163)
!11186 = !DILocation(line: 553, column: 34, scope: !11163)
!11187 = !DILocation(line: 553, column: 2, scope: !11163)
!11188 = !DILocation(line: 554, column: 14, scope: !11163)
!11189 = !DILocation(line: 564, column: 2, scope: !11163)
!11190 = !DILocation(line: 567, column: 14, scope: !11163)
!11191 = !DILocation(line: 567, column: 24, scope: !11163)
!11192 = !DILocation(line: 612, column: 7, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11163, file: !1896, line: 612, column: 6)
!11194 = !DILocation(line: 612, column: 6, scope: !11163)
!11195 = !DILocation(line: 627, column: 40, scope: !11163)
!11196 = !DILocation(line: 637, column: 2, scope: !11163)
!11197 = !DILocation(line: 613, column: 15, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11193, file: !1896, line: 612, column: 17)
!11199 = !DILocation(line: 613, column: 29, scope: !11198)
!11200 = !DILocation(line: 638, column: 1, scope: !11163)
!11201 = distinct !DISubprogram(name: "z_waitq_init", scope: !11202, file: !11202, line: 47, type: !11203, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11205)
!11202 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11203 = !DISubroutineType(types: !11204)
!11204 = !{null, !1931}
!11205 = !{!11206}
!11206 = !DILocalVariable(name: "w", arg: 1, scope: !11201, file: !11202, line: 47, type: !1931)
!11207 = !DILocation(line: 0, scope: !11201)
!11208 = !DILocation(line: 49, column: 21, scope: !11201)
!11209 = !DILocation(line: 49, column: 2, scope: !11201)
!11210 = !DILocation(line: 50, column: 1, scope: !11201)
!11211 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1896, file: !1896, line: 791, type: !11212, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11215)
!11212 = !DISubroutineType(types: !11213)
!11213 = !{null, !11214, !103, !121, !32}
!11214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!11215 = !{!11216, !11217, !11218, !11219}
!11216 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11211, file: !1896, line: 791, type: !11214)
!11217 = !DILocalVariable(name: "priority", arg: 2, scope: !11211, file: !1896, line: 791, type: !103)
!11218 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11211, file: !1896, line: 792, type: !121)
!11219 = !DILocalVariable(name: "options", arg: 4, scope: !11211, file: !1896, line: 792, type: !32)
!11220 = !DILocation(line: 0, scope: !11211)
!11221 = !DILocation(line: 795, column: 15, scope: !11211)
!11222 = !DILocation(line: 795, column: 25, scope: !11211)
!11223 = !DILocation(line: 796, column: 30, scope: !11211)
!11224 = !DILocation(line: 796, column: 15, scope: !11211)
!11225 = !DILocation(line: 796, column: 28, scope: !11211)
!11226 = !DILocation(line: 797, column: 30, scope: !11211)
!11227 = !DILocation(line: 797, column: 15, scope: !11211)
!11228 = !DILocation(line: 797, column: 28, scope: !11211)
!11229 = !DILocation(line: 799, column: 22, scope: !11211)
!11230 = !DILocation(line: 799, column: 15, scope: !11211)
!11231 = !DILocation(line: 799, column: 20, scope: !11211)
!11232 = !DILocation(line: 801, column: 15, scope: !11211)
!11233 = !DILocation(line: 801, column: 28, scope: !11211)
!11234 = !DILocation(line: 814, column: 2, scope: !11211)
!11235 = !DILocation(line: 815, column: 1, scope: !11211)
!11236 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1896, file: !1896, line: 449, type: !11237, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11239)
!11237 = !DISubroutineType(types: !11238)
!11238 = !{!977, !1900, !11166, !200}
!11239 = !{!11240, !11241, !11242, !11243, !11244, !11245, !11246, !11247}
!11240 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11236, file: !1896, line: 449, type: !1900)
!11241 = !DILocalVariable(name: "stack", arg: 2, scope: !11236, file: !1896, line: 450, type: !11166)
!11242 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11236, file: !1896, line: 450, type: !200)
!11243 = !DILocalVariable(name: "stack_obj_size", scope: !11236, file: !1896, line: 452, type: !200)
!11244 = !DILocalVariable(name: "stack_buf_size", scope: !11236, file: !1896, line: 452, type: !200)
!11245 = !DILocalVariable(name: "stack_ptr", scope: !11236, file: !1896, line: 453, type: !977)
!11246 = !DILocalVariable(name: "stack_buf_start", scope: !11236, file: !1896, line: 453, type: !977)
!11247 = !DILocalVariable(name: "delta", scope: !11236, file: !1896, line: 454, type: !200)
!11248 = !DILocation(line: 0, scope: !11236)
!11249 = !DILocation(line: 465, column: 20, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11236, file: !1896, line: 463, column: 2)
!11251 = !DILocation(line: 466, column: 21, scope: !11250)
!11252 = !DILocation(line: 473, column: 28, scope: !11236)
!11253 = !DILocation(line: 514, column: 33, scope: !11236)
!11254 = !DILocation(line: 514, column: 25, scope: !11236)
!11255 = !DILocation(line: 514, column: 31, scope: !11236)
!11256 = !DILocation(line: 515, column: 25, scope: !11236)
!11257 = !DILocation(line: 515, column: 30, scope: !11236)
!11258 = !DILocation(line: 516, column: 25, scope: !11236)
!11259 = !DILocation(line: 516, column: 31, scope: !11236)
!11260 = !DILocation(line: 520, column: 2, scope: !11236)
!11261 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1850, file: !1850, line: 331, type: !11262, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11264)
!11262 = !DISubroutineType(types: !11263)
!11263 = !{!977, !11166}
!11264 = !{!11265}
!11265 = !DILocalVariable(name: "sym", arg: 1, scope: !11261, file: !1850, line: 331, type: !11166)
!11266 = !DILocation(line: 0, scope: !11261)
!11267 = !DILocation(line: 333, column: 21, scope: !11261)
!11268 = !DILocation(line: 333, column: 2, scope: !11261)
!11269 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11270, file: !11270, line: 40, type: !11271, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11273)
!11270 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11271 = !DISubroutineType(types: !11272)
!11272 = !{null, !11214}
!11273 = !{!11274}
!11274 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11269, file: !11270, line: 40, type: !11214)
!11275 = !DILocation(line: 0, scope: !11269)
!11276 = !DILocation(line: 42, column: 31, scope: !11269)
!11277 = !DILocation(line: 42, column: 2, scope: !11269)
!11278 = !DILocation(line: 43, column: 1, scope: !11269)
!11279 = distinct !DISubprogram(name: "z_init_timeout", scope: !11270, file: !11270, line: 25, type: !1957, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11280)
!11280 = !{!11281}
!11281 = !DILocalVariable(name: "to", arg: 1, scope: !11279, file: !11270, line: 25, type: !1959)
!11282 = !DILocation(line: 0, scope: !11279)
!11283 = !DILocation(line: 27, column: 22, scope: !11279)
!11284 = !DILocation(line: 27, column: 2, scope: !11279)
!11285 = !DILocation(line: 28, column: 1, scope: !11279)
!11286 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11287, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11289)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{null, !2003}
!11289 = !{!11290}
!11290 = !DILocalVariable(name: "node", arg: 1, scope: !11286, file: !221, line: 211, type: !2003)
!11291 = !DILocation(line: 0, scope: !11286)
!11292 = !DILocation(line: 213, column: 8, scope: !11286)
!11293 = !DILocation(line: 213, column: 13, scope: !11286)
!11294 = !DILocation(line: 214, column: 8, scope: !11286)
!11295 = !DILocation(line: 214, column: 13, scope: !11286)
!11296 = !DILocation(line: 215, column: 1, scope: !11286)
!11297 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11298, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11301)
!11298 = !DISubroutineType(types: !11299)
!11299 = !{null, !11300}
!11300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!11301 = !{!11302}
!11302 = !DILocalVariable(name: "list", arg: 1, scope: !11297, file: !221, line: 197, type: !11300)
!11303 = !DILocation(line: 0, scope: !11297)
!11304 = !DILocation(line: 199, column: 8, scope: !11297)
!11305 = !DILocation(line: 199, column: 13, scope: !11297)
!11306 = !DILocation(line: 200, column: 8, scope: !11297)
!11307 = !DILocation(line: 200, column: 13, scope: !11297)
!11308 = !DILocation(line: 201, column: 1, scope: !11297)
!11309 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1896, file: !1896, line: 641, type: !11310, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11316)
!11310 = !DISubroutineType(types: !11311)
!11311 = !{!1899, !1900, !11166, !200, !3283, !102, !102, !102, !103, !121, !11312}
!11312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1382, line: 67, baseType: !11313)
!11313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1382, line: 65, size: 64, elements: !11314)
!11314 = !{!11315}
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11313, file: !1382, line: 66, baseType: !1381, size: 64)
!11316 = !{!11317, !11318, !11319, !11320, !11321, !11322, !11323, !11324, !11325, !11326}
!11317 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11309, file: !1896, line: 641, type: !1900)
!11318 = !DILocalVariable(name: "stack", arg: 2, scope: !11309, file: !1896, line: 642, type: !11166)
!11319 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11309, file: !1896, line: 643, type: !200)
!11320 = !DILocalVariable(name: "entry", arg: 4, scope: !11309, file: !1896, line: 643, type: !3283)
!11321 = !DILocalVariable(name: "p1", arg: 5, scope: !11309, file: !1896, line: 644, type: !102)
!11322 = !DILocalVariable(name: "p2", arg: 6, scope: !11309, file: !1896, line: 644, type: !102)
!11323 = !DILocalVariable(name: "p3", arg: 7, scope: !11309, file: !1896, line: 644, type: !102)
!11324 = !DILocalVariable(name: "prio", arg: 8, scope: !11309, file: !1896, line: 645, type: !103)
!11325 = !DILocalVariable(name: "options", arg: 9, scope: !11309, file: !1896, line: 645, type: !121)
!11326 = !DILocalVariable(name: "delay", arg: 10, scope: !11309, file: !1896, line: 645, type: !11312)
!11327 = !DILocation(line: 0, scope: !11309)
!11328 = !DILocation(line: 649, column: 2, scope: !11309)
!11329 = !DILocation(line: 652, column: 7, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11309, file: !1896, line: 652, column: 6)
!11331 = !DILocation(line: 652, column: 6, scope: !11309)
!11332 = !DILocation(line: 653, column: 3, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11330, file: !1896, line: 652, column: 39)
!11334 = !DILocation(line: 654, column: 2, scope: !11333)
!11335 = !DILocation(line: 656, column: 2, scope: !11309)
!11336 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1896, file: !1896, line: 401, type: !11337, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11339)
!11337 = !DISubroutineType(types: !11338)
!11338 = !{null, !1900, !11312}
!11339 = !{!11340, !11341}
!11340 = !DILocalVariable(name: "thread", arg: 1, scope: !11336, file: !1896, line: 401, type: !1900)
!11341 = !DILocalVariable(name: "delay", arg: 2, scope: !11336, file: !1896, line: 401, type: !11312)
!11342 = !DILocation(line: 0, scope: !11336)
!11343 = !DILocation(line: 404, column: 6, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11336, file: !1896, line: 404, column: 6)
!11345 = !DILocation(line: 404, column: 6, scope: !11336)
!11346 = !DILocation(line: 405, column: 3, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11344, file: !1896, line: 404, column: 38)
!11348 = !DILocation(line: 406, column: 2, scope: !11347)
!11349 = !DILocation(line: 407, column: 3, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11344, file: !1896, line: 406, column: 9)
!11351 = !DILocation(line: 413, column: 1, scope: !11336)
!11352 = distinct !DISubprogram(name: "k_thread_start", scope: !3013, file: !3013, line: 205, type: !11353, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11355)
!11353 = !DISubroutineType(types: !11354)
!11354 = !{null, !1899}
!11355 = !{!11356}
!11356 = !DILocalVariable(name: "thread", arg: 1, scope: !11352, file: !3013, line: 205, type: !1899)
!11357 = !DILocation(line: 0, scope: !11352)
!11358 = !DILocation(line: 214, column: 2, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11352, file: !3013, line: 214, column: 2)
!11360 = !{i64 2154766770}
!11361 = !DILocation(line: 215, column: 2, scope: !11352)
!11362 = !DILocation(line: 216, column: 1, scope: !11352)
!11363 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11270, file: !11270, line: 47, type: !11337, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11364)
!11364 = !{!11365, !11366}
!11365 = !DILocalVariable(name: "thread", arg: 1, scope: !11363, file: !11270, line: 47, type: !1900)
!11366 = !DILocalVariable(name: "ticks", arg: 2, scope: !11363, file: !11270, line: 47, type: !11312)
!11367 = !DILocation(line: 0, scope: !11363)
!11368 = !DILocation(line: 49, column: 30, scope: !11363)
!11369 = !DILocation(line: 49, column: 2, scope: !11363)
!11370 = !DILocation(line: 50, column: 1, scope: !11363)
!11371 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1896, file: !1896, line: 748, type: !2843, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11372)
!11372 = !{!11373, !11391}
!11373 = !DILocalVariable(name: "thread_data", scope: !11374, file: !1896, line: 750, type: !11375)
!11374 = distinct !DILexicalBlock(scope: !11371, file: !1896, line: 750, column: 2)
!11375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11376, size: 32)
!11376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !11377)
!11377 = !{!11378, !11379, !11380, !11381, !11382, !11383, !11384, !11385, !11386, !11387, !11388, !11390}
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11376, file: !307, line: 621, baseType: !1900, size: 32)
!11379 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11376, file: !307, line: 622, baseType: !11166, size: 32, offset: 32)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11376, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11376, file: !307, line: 624, baseType: !3283, size: 32, offset: 96)
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11376, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!11383 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11376, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!11384 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11376, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11376, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11376, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11376, file: !307, line: 630, baseType: !586, size: 32, offset: 288)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11376, file: !307, line: 631, baseType: !11389, size: 32, offset: 320)
!11389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11376, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!11391 = !DILocalVariable(name: "thread_data", scope: !11392, file: !1896, line: 781, type: !11375)
!11392 = distinct !DILexicalBlock(scope: !11371, file: !1896, line: 781, column: 2)
!11393 = !DILocation(line: 0, scope: !11374)
!11394 = !DILocation(line: 750, column: 2, scope: !11374)
!11395 = !DILocation(line: 780, column: 2, scope: !11371)
!11396 = !DILocation(line: 0, scope: !11392)
!11397 = !DILocation(line: 781, column: 2, scope: !11392)
!11398 = !DILocation(line: 752, column: 17, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !1896, line: 750, column: 38)
!11400 = distinct !DILexicalBlock(scope: !11374, file: !1896, line: 750, column: 2)
!11401 = !DILocation(line: 753, column: 17, scope: !11399)
!11402 = !DILocation(line: 754, column: 17, scope: !11399)
!11403 = !DILocation(line: 755, column: 17, scope: !11399)
!11404 = !DILocation(line: 756, column: 17, scope: !11399)
!11405 = !DILocation(line: 757, column: 17, scope: !11399)
!11406 = !DILocation(line: 758, column: 17, scope: !11399)
!11407 = !DILocation(line: 759, column: 17, scope: !11399)
!11408 = !DILocation(line: 760, column: 17, scope: !11399)
!11409 = !DILocation(line: 751, column: 3, scope: !11399)
!11410 = !DILocation(line: 763, column: 16, scope: !11399)
!11411 = !DILocation(line: 763, column: 29, scope: !11399)
!11412 = !DILocation(line: 763, column: 39, scope: !11399)
!11413 = !DILocation(line: 750, column: 2, scope: !11400)
!11414 = !DILocation(line: 750, column: 2, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11400, file: !1896, line: 750, column: 2)
!11416 = distinct !{!11416, !11394, !11417}
!11417 = !DILocation(line: 764, column: 2, scope: !11374)
!11418 = !DILocation(line: 787, column: 2, scope: !11371)
!11419 = !DILocation(line: 788, column: 1, scope: !11371)
!11420 = !DILocation(line: 782, column: 20, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !1896, line: 782, column: 7)
!11422 = distinct !DILexicalBlock(scope: !11423, file: !1896, line: 781, column: 38)
!11423 = distinct !DILexicalBlock(scope: !11392, file: !1896, line: 781, column: 2)
!11424 = !DILocation(line: 782, column: 31, scope: !11421)
!11425 = !DILocation(line: 782, column: 7, scope: !11422)
!11426 = !DILocation(line: 783, column: 37, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11421, file: !1896, line: 782, column: 51)
!11428 = !DILocation(line: 784, column: 10, scope: !11427)
!11429 = !DILocation(line: 783, column: 4, scope: !11427)
!11430 = !DILocation(line: 785, column: 3, scope: !11427)
!11431 = !DILocation(line: 781, column: 2, scope: !11423)
!11432 = !DILocation(line: 781, column: 2, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11423, file: !1896, line: 781, column: 2)
!11434 = distinct !{!11434, !11397, !11435}
!11435 = !DILocation(line: 786, column: 2, scope: !11392)
!11436 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11437, file: !11437, line: 403, type: !11438, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11440)
!11437 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11438 = !DISubroutineType(types: !11439)
!11439 = !{!1293, !1293}
!11440 = !{!11441}
!11441 = !DILocalVariable(name: "t", arg: 1, scope: !11436, file: !11437, line: 403, type: !1293)
!11442 = !DILocation(line: 0, scope: !11436)
!11443 = !DILocalVariable(name: "t", arg: 1, scope: !11444, file: !11437, line: 102, type: !1293)
!11444 = distinct !DISubprogram(name: "z_tmcvt", scope: !11437, file: !11437, line: 102, type: !11445, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11447)
!11445 = !DISubroutineType(types: !11446)
!11446 = !{!1293, !1293, !121, !121, !157, !157, !157, !157}
!11447 = !{!11443, !11448, !11449, !11450, !11451, !11452, !11453, !11454, !11455, !11456, !11457}
!11448 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11444, file: !11437, line: 102, type: !121)
!11449 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11444, file: !11437, line: 103, type: !121)
!11450 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11444, file: !11437, line: 103, type: !157)
!11451 = !DILocalVariable(name: "result32", arg: 5, scope: !11444, file: !11437, line: 104, type: !157)
!11452 = !DILocalVariable(name: "round_up", arg: 6, scope: !11444, file: !11437, line: 104, type: !157)
!11453 = !DILocalVariable(name: "round_off", arg: 7, scope: !11444, file: !11437, line: 105, type: !157)
!11454 = !DILocalVariable(name: "mul_ratio", scope: !11444, file: !11437, line: 107, type: !157)
!11455 = !DILocalVariable(name: "div_ratio", scope: !11444, file: !11437, line: 109, type: !157)
!11456 = !DILocalVariable(name: "off", scope: !11444, file: !11437, line: 116, type: !1293)
!11457 = !DILocalVariable(name: "rdivisor", scope: !11458, file: !11437, line: 119, type: !121)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !11437, line: 118, column: 18)
!11459 = distinct !DILexicalBlock(scope: !11444, file: !11437, line: 118, column: 6)
!11460 = !DILocation(line: 0, scope: !11444, inlinedAt: !11461)
!11461 = distinct !DILocation(line: 406, column: 9, scope: !11436)
!11462 = !DILocation(line: 145, column: 13, scope: !11463, inlinedAt: !11461)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !11437, line: 144, column: 10)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !11437, line: 142, column: 7)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !11437, line: 141, column: 24)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !11437, line: 141, column: 13)
!11467 = distinct !DILexicalBlock(scope: !11444, file: !11437, line: 134, column: 6)
!11468 = !DILocation(line: 406, column: 2, scope: !11436)
!11469 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1896, file: !1896, line: 817, type: !3281, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11470)
!11470 = !{!11471, !11472, !11473, !11474}
!11471 = !DILocalVariable(name: "entry", arg: 1, scope: !11469, file: !1896, line: 817, type: !3283)
!11472 = !DILocalVariable(name: "p1", arg: 2, scope: !11469, file: !1896, line: 818, type: !102)
!11473 = !DILocalVariable(name: "p2", arg: 3, scope: !11469, file: !1896, line: 818, type: !102)
!11474 = !DILocalVariable(name: "p3", arg: 4, scope: !11469, file: !1896, line: 818, type: !102)
!11475 = !DILocation(line: 0, scope: !11469)
!11476 = !DILocation(line: 822, column: 2, scope: !11469)
!11477 = !DILocation(line: 822, column: 17, scope: !11469)
!11478 = !DILocation(line: 822, column: 30, scope: !11469)
!11479 = !DILocation(line: 823, column: 2, scope: !11469)
!11480 = !DILocation(line: 845, column: 2, scope: !11469)
!11481 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1896, file: !1896, line: 888, type: !11482, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11484)
!11482 = !DISubroutineType(types: !11483)
!11483 = !{!103, !1900}
!11484 = !{!11485}
!11485 = !DILocalVariable(name: "thread", arg: 1, scope: !11481, file: !1896, line: 888, type: !1900)
!11486 = !DILocation(line: 0, scope: !11481)
!11487 = !DILocation(line: 893, column: 2, scope: !11481)
!11488 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1896, file: !1896, line: 897, type: !11489, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11491)
!11489 = !DISubroutineType(types: !11490)
!11490 = !{!103, !1900, !32}
!11491 = !{!11492, !11493}
!11492 = !DILocalVariable(name: "thread", arg: 1, scope: !11488, file: !1896, line: 897, type: !1900)
!11493 = !DILocalVariable(name: "options", arg: 2, scope: !11488, file: !1896, line: 897, type: !32)
!11494 = !DILocation(line: 0, scope: !11488)
!11495 = !DILocation(line: 902, column: 2, scope: !11488)
!11496 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1896, file: !1896, line: 1072, type: !11497, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11502)
!11497 = !DISubroutineType(types: !11498)
!11498 = !{!103, !1899, !11499}
!11499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11500, size: 32)
!11500 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !11501)
!11501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!11502 = !{!11503, !11504}
!11503 = !DILocalVariable(name: "thread", arg: 1, scope: !11496, file: !1896, line: 1072, type: !1899)
!11504 = !DILocalVariable(name: "stats", arg: 2, scope: !11496, file: !1896, line: 1073, type: !11499)
!11505 = !DILocation(line: 0, scope: !11496)
!11506 = !DILocation(line: 1075, column: 14, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11496, file: !1896, line: 1075, column: 6)
!11508 = !DILocation(line: 1075, column: 23, scope: !11507)
!11509 = !DILocation(line: 1086, column: 1, scope: !11496)
!11510 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1896, file: !1896, line: 1088, type: !11511, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2000, retainedNodes: !11513)
!11511 = !DISubroutineType(types: !11512)
!11512 = !{!103, !11499}
!11513 = !{!11514}
!11514 = !DILocalVariable(name: "stats", arg: 1, scope: !11510, file: !1896, line: 1088, type: !11499)
!11515 = !DILocation(line: 0, scope: !11510)
!11516 = !DILocation(line: 1094, column: 12, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11510, file: !1896, line: 1094, column: 6)
!11518 = !DILocation(line: 1120, column: 1, scope: !11510)
!11519 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11520, file: !11520, line: 20, type: !2843, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2824, retainedNodes: !322)
!11520 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11521 = !DILocation(line: 30, column: 2, scope: !11519)
!11522 = !DILocation(line: 31, column: 1, scope: !11519)
!11523 = distinct !DISubprogram(name: "idle", scope: !11520, file: !11520, line: 33, type: !3286, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2824, retainedNodes: !11524)
!11524 = !{!11525, !11526, !11527}
!11525 = !DILocalVariable(name: "unused1", arg: 1, scope: !11523, file: !11520, line: 33, type: !102)
!11526 = !DILocalVariable(name: "unused2", arg: 2, scope: !11523, file: !11520, line: 33, type: !102)
!11527 = !DILocalVariable(name: "unused3", arg: 3, scope: !11523, file: !11520, line: 33, type: !102)
!11528 = !DILocation(line: 0, scope: !11523)
!11529 = !DILocation(line: 41, column: 2, scope: !11523)
!11530 = !DILocation(line: 55, column: 2, scope: !11531, inlinedAt: !11535)
!11531 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4783, file: !4783, line: 42, type: !4784, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2824, retainedNodes: !11532)
!11532 = !{!11533, !11534}
!11533 = !DILocalVariable(name: "key", scope: !11531, file: !4783, line: 44, type: !32)
!11534 = !DILocalVariable(name: "tmp", scope: !11531, file: !4783, line: 53, type: !32)
!11535 = distinct !DILocation(line: 62, column: 10, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11523, file: !11520, line: 41, column: 15)
!11537 = !{i64 2239109}
!11538 = !DILocation(line: 0, scope: !11531, inlinedAt: !11535)
!11539 = !DILocation(line: 86, column: 3, scope: !11536)
!11540 = distinct !{!11540, !11529, !11541}
!11541 = !DILocation(line: 105, column: 2, scope: !11523)
!11542 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2843, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2824, retainedNodes: !322)
!11543 = !DILocation(line: 5629, column: 2, scope: !11542)
!11544 = !DILocation(line: 5630, column: 1, scope: !11542)
!11545 = !DISubprogram(name: "arch_cpu_idle", scope: !3284, file: !3284, line: 167, type: !2843, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11546 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2128, file: !2128, line: 93, type: !11547, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11549)
!11547 = !DISubroutineType(types: !11548)
!11548 = !{!586, !2023, !2023}
!11549 = !{!11550, !11551, !11552, !11553}
!11550 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11546, file: !2128, line: 93, type: !2023)
!11551 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11546, file: !2128, line: 94, type: !2023)
!11552 = !DILocalVariable(name: "b1", scope: !11546, file: !2128, line: 97, type: !586)
!11553 = !DILocalVariable(name: "b2", scope: !11546, file: !2128, line: 98, type: !586)
!11554 = !DILocation(line: 0, scope: !11546)
!11555 = !DILocation(line: 97, column: 30, scope: !11546)
!11556 = !DILocation(line: 98, column: 30, scope: !11546)
!11557 = !DILocation(line: 100, column: 9, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11546, file: !2128, line: 100, column: 6)
!11559 = !DILocation(line: 100, column: 6, scope: !11546)
!11560 = !DILocation(line: 125, column: 1, scope: !11546)
!11561 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2128, file: !2128, line: 428, type: !11562, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11564)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{null, !2023}
!11564 = !{!11565}
!11565 = !DILocalVariable(name: "curr", arg: 1, scope: !11561, file: !2128, line: 428, type: !2023)
!11566 = !DILocation(line: 0, scope: !11561)
!11567 = !DILocation(line: 434, column: 6, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11561, file: !2128, line: 434, column: 6)
!11569 = !DILocation(line: 434, column: 23, scope: !11568)
!11570 = !DILocation(line: 434, column: 6, scope: !11561)
!11571 = !DILocation(line: 435, column: 50, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11568, file: !2128, line: 434, column: 29)
!11573 = !DILocation(line: 435, column: 48, scope: !11572)
!11574 = !DILocation(line: 435, column: 29, scope: !11572)
!11575 = !DILocation(line: 436, column: 24, scope: !11572)
!11576 = !DILocation(line: 436, column: 3, scope: !11572)
!11577 = !DILocation(line: 437, column: 2, scope: !11572)
!11578 = !DILocation(line: 438, column: 1, scope: !11561)
!11579 = distinct !DISubprogram(name: "slice_time", scope: !2128, file: !2128, line: 407, type: !11580, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11582)
!11580 = !DISubroutineType(types: !11581)
!11581 = !{!103, !2023}
!11582 = !{!11583, !11584}
!11583 = !DILocalVariable(name: "curr", arg: 1, scope: !11579, file: !2128, line: 407, type: !2023)
!11584 = !DILocalVariable(name: "ret", scope: !11579, file: !2128, line: 409, type: !103)
!11585 = !DILocation(line: 0, scope: !11579)
!11586 = !DILocation(line: 409, column: 12, scope: !11579)
!11587 = !DILocation(line: 416, column: 2, scope: !11579)
!11588 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2128, file: !2128, line: 440, type: !11589, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11591)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{null, !586, !103}
!11591 = !{!11592, !11593, !11594, !11600}
!11592 = !DILocalVariable(name: "slice", arg: 1, scope: !11588, file: !2128, line: 440, type: !586)
!11593 = !DILocalVariable(name: "prio", arg: 2, scope: !11588, file: !2128, line: 440, type: !103)
!11594 = !DILocalVariable(name: "__i", scope: !11595, file: !2128, line: 442, type: !11596)
!11595 = distinct !DILexicalBlock(scope: !11588, file: !2128, line: 442, column: 2)
!11596 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !11597)
!11597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !11598)
!11598 = !{!11599}
!11599 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11597, file: !321, line: 33, baseType: !103, size: 32)
!11600 = !DILocalVariable(name: "__key", scope: !11595, file: !2128, line: 442, type: !11596)
!11601 = !DILocation(line: 0, scope: !11588)
!11602 = !DILocation(line: 0, scope: !11595)
!11603 = !DILocalVariable(name: "l", arg: 1, scope: !11604, file: !321, line: 136, type: !11607)
!11604 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !11605, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11608)
!11605 = !DISubroutineType(types: !11606)
!11606 = !{!11596, !11607}
!11607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!11608 = !{!11603, !11609}
!11609 = !DILocalVariable(name: "k", scope: !11604, file: !321, line: 139, type: !11596)
!11610 = !DILocation(line: 0, scope: !11604, inlinedAt: !11611)
!11611 = distinct !DILocation(line: 442, column: 2, scope: !11595)
!11612 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !11617)
!11613 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4783, file: !4783, line: 42, type: !4784, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11614)
!11614 = !{!11615, !11616}
!11615 = !DILocalVariable(name: "key", scope: !11613, file: !4783, line: 44, type: !32)
!11616 = !DILocalVariable(name: "tmp", scope: !11613, file: !4783, line: 53, type: !32)
!11617 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !11611)
!11618 = !{i64 2283080}
!11619 = !DILocation(line: 0, scope: !11613, inlinedAt: !11617)
!11620 = !DILocation(line: 443, column: 29, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11622, file: !2128, line: 442, column: 26)
!11622 = distinct !DILexicalBlock(scope: !11595, file: !2128, line: 442, column: 2)
!11623 = !DILocation(line: 444, column: 17, scope: !11621)
!11624 = !DILocation(line: 445, column: 51, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11621, file: !2128, line: 445, column: 7)
!11626 = !DILocation(line: 445, column: 7, scope: !11621)
!11627 = !DILocation(line: 0, scope: !11621)
!11628 = !DILocation(line: 451, column: 18, scope: !11621)
!11629 = !DILocation(line: 452, column: 3, scope: !11621)
!11630 = !DILocalVariable(name: "key", arg: 2, scope: !11631, file: !321, line: 190, type: !11596)
!11631 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !11632, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11634)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{null, !11607, !11596}
!11634 = !{!11635, !11630}
!11635 = !DILocalVariable(name: "l", arg: 1, scope: !11631, file: !321, line: 189, type: !11607)
!11636 = !DILocation(line: 0, scope: !11631, inlinedAt: !11637)
!11637 = distinct !DILocation(line: 442, column: 2, scope: !11622)
!11638 = !DILocalVariable(name: "key", arg: 1, scope: !11639, file: !4783, line: 84, type: !32)
!11639 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11640)
!11640 = !{!11638}
!11641 = !DILocation(line: 0, scope: !11639, inlinedAt: !11642)
!11642 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !11637)
!11643 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !11642)
!11644 = !{i64 2283897}
!11645 = !DILocation(line: 454, column: 1, scope: !11588)
!11646 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11437, file: !11437, line: 389, type: !5965, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11647)
!11647 = !{!11648}
!11648 = !DILocalVariable(name: "t", arg: 1, scope: !11646, file: !11437, line: 389, type: !121)
!11649 = !DILocation(line: 0, scope: !11646)
!11650 = !DILocalVariable(name: "t", arg: 1, scope: !11651, file: !11437, line: 102, type: !1293)
!11651 = distinct !DISubprogram(name: "z_tmcvt", scope: !11437, file: !11437, line: 102, type: !11445, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11652)
!11652 = !{!11650, !11653, !11654, !11655, !11656, !11657, !11658, !11659, !11660, !11661, !11662}
!11653 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11651, file: !11437, line: 102, type: !121)
!11654 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11651, file: !11437, line: 103, type: !121)
!11655 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11651, file: !11437, line: 103, type: !157)
!11656 = !DILocalVariable(name: "result32", arg: 5, scope: !11651, file: !11437, line: 104, type: !157)
!11657 = !DILocalVariable(name: "round_up", arg: 6, scope: !11651, file: !11437, line: 104, type: !157)
!11658 = !DILocalVariable(name: "round_off", arg: 7, scope: !11651, file: !11437, line: 105, type: !157)
!11659 = !DILocalVariable(name: "mul_ratio", scope: !11651, file: !11437, line: 107, type: !157)
!11660 = !DILocalVariable(name: "div_ratio", scope: !11651, file: !11437, line: 109, type: !157)
!11661 = !DILocalVariable(name: "off", scope: !11651, file: !11437, line: 116, type: !1293)
!11662 = !DILocalVariable(name: "rdivisor", scope: !11663, file: !11437, line: 119, type: !121)
!11663 = distinct !DILexicalBlock(scope: !11664, file: !11437, line: 118, column: 18)
!11664 = distinct !DILexicalBlock(scope: !11651, file: !11437, line: 118, column: 6)
!11665 = !DILocation(line: 0, scope: !11651, inlinedAt: !11666)
!11666 = distinct !DILocation(line: 392, column: 9, scope: !11646)
!11667 = !DILocation(line: 143, column: 25, scope: !11668, inlinedAt: !11666)
!11668 = distinct !DILexicalBlock(scope: !11669, file: !11437, line: 142, column: 17)
!11669 = distinct !DILexicalBlock(scope: !11670, file: !11437, line: 142, column: 7)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !11437, line: 141, column: 24)
!11671 = distinct !DILexicalBlock(scope: !11672, file: !11437, line: 141, column: 13)
!11672 = distinct !DILexicalBlock(scope: !11651, file: !11437, line: 134, column: 6)
!11673 = !DILocation(line: 392, column: 2, scope: !11646)
!11674 = distinct !DISubprogram(name: "z_time_slice", scope: !2128, file: !2128, line: 502, type: !6602, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11675)
!11675 = !{!11676, !11677}
!11676 = !DILocalVariable(name: "ticks", arg: 1, scope: !11674, file: !2128, line: 502, type: !103)
!11677 = !DILocalVariable(name: "key", scope: !11674, file: !2128, line: 511, type: !11596)
!11678 = !DILocation(line: 0, scope: !11674)
!11679 = !DILocation(line: 0, scope: !11604, inlinedAt: !11680)
!11680 = distinct !DILocation(line: 511, column: 25, scope: !11674)
!11681 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !11680)
!11683 = !DILocation(line: 0, scope: !11613, inlinedAt: !11682)
!11684 = !DILocation(line: 514, column: 6, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11674, file: !2128, line: 514, column: 6)
!11686 = !DILocation(line: 514, column: 25, scope: !11685)
!11687 = !DILocation(line: 514, column: 22, scope: !11685)
!11688 = !DILocation(line: 514, column: 6, scope: !11674)
!11689 = !DILocation(line: 515, column: 3, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11685, file: !2128, line: 514, column: 35)
!11691 = !DILocation(line: 0, scope: !11631, inlinedAt: !11692)
!11692 = distinct !DILocation(line: 516, column: 3, scope: !11690)
!11693 = !DILocation(line: 0, scope: !11639, inlinedAt: !11694)
!11694 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !11692)
!11695 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !11694)
!11696 = !DILocation(line: 517, column: 3, scope: !11690)
!11697 = !DILocation(line: 519, column: 18, scope: !11674)
!11698 = !DILocation(line: 522, column: 6, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11674, file: !2128, line: 522, column: 6)
!11700 = !DILocation(line: 522, column: 27, scope: !11699)
!11701 = !DILocation(line: 522, column: 30, scope: !11699)
!11702 = !DILocation(line: 522, column: 6, scope: !11674)
!11703 = !DILocation(line: 523, column: 30, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !2128, line: 523, column: 7)
!11705 = distinct !DILexicalBlock(scope: !11699, file: !2128, line: 522, column: 51)
!11706 = !DILocation(line: 523, column: 13, scope: !11704)
!11707 = !DILocation(line: 523, column: 7, scope: !11705)
!11708 = !DILocation(line: 530, column: 10, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11704, file: !2128, line: 523, column: 43)
!11710 = !DILocation(line: 531, column: 3, scope: !11709)
!11711 = !DILocation(line: 532, column: 30, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11704, file: !2128, line: 531, column: 10)
!11713 = !DILocation(line: 535, column: 29, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11699, file: !2128, line: 534, column: 9)
!11715 = !DILocation(line: 0, scope: !11631, inlinedAt: !11716)
!11716 = distinct !DILocation(line: 537, column: 2, scope: !11674)
!11717 = !DILocation(line: 0, scope: !11639, inlinedAt: !11718)
!11718 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !11716)
!11719 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !11718)
!11720 = !DILocation(line: 538, column: 1, scope: !11674)
!11721 = distinct !DISubprogram(name: "sliceable", scope: !2128, file: !2128, line: 468, type: !11722, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11724)
!11722 = !DISubroutineType(types: !11723)
!11723 = !{!157, !2023}
!11724 = !{!11725, !11726}
!11725 = !DILocalVariable(name: "thread", arg: 1, scope: !11721, file: !2128, line: 468, type: !2023)
!11726 = !DILocalVariable(name: "ret", scope: !11721, file: !2128, line: 470, type: !157)
!11727 = !DILocation(line: 0, scope: !11721)
!11728 = !DILocation(line: 470, column: 13, scope: !11721)
!11729 = !DILocation(line: 471, column: 3, scope: !11721)
!11730 = !DILocation(line: 471, column: 7, scope: !11721)
!11731 = !DILocation(line: 472, column: 3, scope: !11721)
!11732 = !DILocation(line: 472, column: 37, scope: !11721)
!11733 = !DILocation(line: 472, column: 24, scope: !11721)
!11734 = !DILocation(line: 472, column: 43, scope: !11721)
!11735 = !DILocation(line: 472, column: 7, scope: !11721)
!11736 = !DILocation(line: 473, column: 3, scope: !11721)
!11737 = !DILocation(line: 473, column: 7, scope: !11721)
!11738 = !DILocation(line: 473, column: 6, scope: !11721)
!11739 = !DILocation(line: 479, column: 2, scope: !11721)
!11740 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2128, file: !2128, line: 482, type: !11741, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11743)
!11741 = !DISubroutineType(types: !11742)
!11742 = !{!11596, !11596}
!11743 = !{!11744, !11745}
!11744 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11740, file: !2128, line: 482, type: !11596)
!11745 = !DILocalVariable(name: "curr", scope: !11740, file: !2128, line: 484, type: !2023)
!11746 = !DILocation(line: 0, scope: !11740)
!11747 = !DILocation(line: 484, column: 26, scope: !11740)
!11748 = !DILocation(line: 493, column: 7, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11740, file: !2128, line: 493, column: 6)
!11750 = !DILocation(line: 493, column: 6, scope: !11740)
!11751 = !DILocation(line: 494, column: 3, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11749, file: !2128, line: 493, column: 49)
!11753 = !DILocation(line: 495, column: 2, scope: !11752)
!11754 = !DILocation(line: 496, column: 2, scope: !11740)
!11755 = !DILocation(line: 499, column: 1, scope: !11740)
!11756 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10876, file: !10876, line: 106, type: !11722, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11757)
!11757 = !{!11758, !11759}
!11758 = !DILocalVariable(name: "thread", arg: 1, scope: !11756, file: !10876, line: 106, type: !2023)
!11759 = !DILocalVariable(name: "state", scope: !11756, file: !10876, line: 108, type: !154)
!11760 = !DILocation(line: 0, scope: !11756)
!11761 = !DILocation(line: 108, column: 31, scope: !11756)
!11762 = !DILocation(line: 110, column: 16, scope: !11756)
!11763 = !DILocation(line: 111, column: 41, scope: !11756)
!11764 = !DILocation(line: 110, column: 2, scope: !11756)
!11765 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2128, file: !2128, line: 393, type: !11562, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11766)
!11766 = !{!11767}
!11767 = !DILocalVariable(name: "thread", arg: 1, scope: !11765, file: !2128, line: 393, type: !2023)
!11768 = !DILocation(line: 0, scope: !11765)
!11769 = !DILocation(line: 395, column: 6, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11765, file: !2128, line: 395, column: 6)
!11771 = !DILocation(line: 395, column: 6, scope: !11765)
!11772 = !DILocalVariable(name: "thread", arg: 1, scope: !11773, file: !2128, line: 264, type: !2023)
!11773 = distinct !DISubprogram(name: "dequeue_thread", scope: !2128, file: !2128, line: 264, type: !11562, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11774)
!11774 = !{!11772}
!11775 = !DILocation(line: 0, scope: !11773, inlinedAt: !11776)
!11776 = distinct !DILocation(line: 396, column: 3, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11770, file: !2128, line: 395, column: 34)
!11778 = !DILocation(line: 266, column: 15, scope: !11773, inlinedAt: !11776)
!11779 = !DILocation(line: 266, column: 28, scope: !11773, inlinedAt: !11776)
!11780 = !DILocalVariable(name: "thread", arg: 1, scope: !11781, file: !2128, line: 232, type: !2023)
!11781 = distinct !DISubprogram(name: "runq_remove", scope: !2128, file: !2128, line: 232, type: !11562, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11782)
!11782 = !{!11780}
!11783 = !DILocation(line: 0, scope: !11781, inlinedAt: !11784)
!11784 = distinct !DILocation(line: 268, column: 3, scope: !11785, inlinedAt: !11776)
!11785 = distinct !DILexicalBlock(scope: !11786, file: !2128, line: 267, column: 35)
!11786 = distinct !DILexicalBlock(scope: !11773, file: !2128, line: 267, column: 6)
!11787 = !DILocation(line: 234, column: 2, scope: !11781, inlinedAt: !11784)
!11788 = !DILocation(line: 397, column: 2, scope: !11777)
!11789 = !DILocalVariable(name: "thread", arg: 1, scope: !11790, file: !2128, line: 250, type: !2023)
!11790 = distinct !DISubprogram(name: "queue_thread", scope: !2128, file: !2128, line: 250, type: !11562, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11791)
!11791 = !{!11789}
!11792 = !DILocation(line: 0, scope: !11790, inlinedAt: !11793)
!11793 = distinct !DILocation(line: 398, column: 2, scope: !11765)
!11794 = !DILocation(line: 252, column: 15, scope: !11790, inlinedAt: !11793)
!11795 = !DILocation(line: 252, column: 28, scope: !11790, inlinedAt: !11793)
!11796 = !DILocalVariable(name: "thread", arg: 1, scope: !11797, file: !2128, line: 227, type: !2023)
!11797 = distinct !DISubprogram(name: "runq_add", scope: !2128, file: !2128, line: 227, type: !11562, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11798)
!11798 = !{!11796}
!11799 = !DILocation(line: 0, scope: !11797, inlinedAt: !11800)
!11800 = distinct !DILocation(line: 254, column: 3, scope: !11801, inlinedAt: !11793)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !2128, line: 253, column: 35)
!11802 = distinct !DILexicalBlock(scope: !11790, file: !2128, line: 253, column: 6)
!11803 = !DILocalVariable(name: "pq", arg: 1, scope: !11804, file: !2128, line: 181, type: !11807)
!11804 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2128, file: !2128, line: 181, type: !11805, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11808)
!11805 = !DISubroutineType(types: !11806)
!11806 = !{null, !11807, !2023}
!11807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!11808 = !{!11803, !11809, !11810}
!11809 = !DILocalVariable(name: "thread", arg: 2, scope: !11804, file: !2128, line: 182, type: !2023)
!11810 = !DILocalVariable(name: "t", scope: !11804, file: !2128, line: 184, type: !2023)
!11811 = !DILocation(line: 0, scope: !11804, inlinedAt: !11812)
!11812 = distinct !DILocation(line: 229, column: 2, scope: !11797, inlinedAt: !11800)
!11813 = !DILocation(line: 188, column: 2, scope: !11814, inlinedAt: !11812)
!11814 = distinct !DILexicalBlock(scope: !11804, file: !2128, line: 188, column: 2)
!11815 = !DILocation(line: 188, column: 2, scope: !11816, inlinedAt: !11812)
!11816 = distinct !DILexicalBlock(scope: !11814, file: !2128, line: 188, column: 2)
!11817 = !DILocation(line: 0, scope: !11814, inlinedAt: !11812)
!11818 = !DILocation(line: 189, column: 7, scope: !11819, inlinedAt: !11812)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !2128, line: 189, column: 7)
!11820 = distinct !DILexicalBlock(scope: !11816, file: !2128, line: 188, column: 56)
!11821 = !DILocation(line: 189, column: 35, scope: !11819, inlinedAt: !11812)
!11822 = !DILocation(line: 189, column: 7, scope: !11820, inlinedAt: !11812)
!11823 = !DILocation(line: 191, column: 21, scope: !11824, inlinedAt: !11812)
!11824 = distinct !DILexicalBlock(scope: !11819, file: !2128, line: 189, column: 40)
!11825 = !DILocation(line: 190, column: 4, scope: !11824, inlinedAt: !11812)
!11826 = !DILocation(line: 192, column: 4, scope: !11824, inlinedAt: !11812)
!11827 = distinct !{!11827, !11813, !11828}
!11828 = !DILocation(line: 194, column: 2, scope: !11814, inlinedAt: !11812)
!11829 = !DILocation(line: 196, column: 37, scope: !11804, inlinedAt: !11812)
!11830 = !DILocation(line: 196, column: 2, scope: !11804, inlinedAt: !11812)
!11831 = !DILocation(line: 197, column: 1, scope: !11804, inlinedAt: !11812)
!11832 = !DILocation(line: 399, column: 25, scope: !11765)
!11833 = !DILocation(line: 399, column: 22, scope: !11765)
!11834 = !DILocation(line: 399, column: 2, scope: !11765)
!11835 = !DILocation(line: 400, column: 1, scope: !11765)
!11836 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10876, file: !10876, line: 136, type: !11722, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11837)
!11837 = !{!11838}
!11838 = !DILocalVariable(name: "thread", arg: 1, scope: !11836, file: !10876, line: 136, type: !2023)
!11839 = !DILocation(line: 0, scope: !11836)
!11840 = !DILocation(line: 138, column: 9, scope: !11836)
!11841 = !DILocation(line: 138, column: 2, scope: !11836)
!11842 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2128, file: !2128, line: 1137, type: !11805, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11843)
!11843 = !{!11844, !11845}
!11844 = !DILocalVariable(name: "pq", arg: 1, scope: !11842, file: !2128, line: 1137, type: !11807)
!11845 = !DILocalVariable(name: "thread", arg: 2, scope: !11842, file: !2128, line: 1137, type: !2023)
!11846 = !DILocation(line: 0, scope: !11842)
!11847 = !DILocation(line: 1141, column: 33, scope: !11842)
!11848 = !DILocation(line: 1141, column: 2, scope: !11842)
!11849 = !DILocation(line: 1142, column: 1, scope: !11842)
!11850 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !11851, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11853)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{!2124, !11807}
!11853 = !{!11854}
!11854 = !DILocalVariable(name: "list", arg: 1, scope: !11850, file: !221, line: 294, type: !11807)
!11855 = !DILocation(line: 0, scope: !11850)
!11856 = !DILocation(line: 296, column: 9, scope: !11850)
!11857 = !DILocation(line: 296, column: 49, scope: !11850)
!11858 = !DILocation(line: 296, column: 2, scope: !11850)
!11859 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !11860, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11862)
!11860 = !DISubroutineType(types: !11861)
!11861 = !{null, !2124, !2124}
!11862 = !{!11863, !11864, !11865}
!11863 = !DILocalVariable(name: "successor", arg: 1, scope: !11859, file: !221, line: 443, type: !2124)
!11864 = !DILocalVariable(name: "node", arg: 2, scope: !11859, file: !221, line: 443, type: !2124)
!11865 = !DILocalVariable(name: "prev", scope: !11859, file: !221, line: 445, type: !11866)
!11866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2124)
!11867 = !DILocation(line: 0, scope: !11859)
!11868 = !DILocation(line: 445, column: 39, scope: !11859)
!11869 = !DILocation(line: 447, column: 8, scope: !11859)
!11870 = !DILocation(line: 447, column: 13, scope: !11859)
!11871 = !DILocation(line: 448, column: 8, scope: !11859)
!11872 = !DILocation(line: 448, column: 13, scope: !11859)
!11873 = !DILocation(line: 449, column: 8, scope: !11859)
!11874 = !DILocation(line: 449, column: 13, scope: !11859)
!11875 = !DILocation(line: 450, column: 18, scope: !11859)
!11876 = !DILocation(line: 451, column: 1, scope: !11859)
!11877 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !11878, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11880)
!11878 = !DISubroutineType(types: !11879)
!11879 = !{!2124, !11807, !2124}
!11880 = !{!11881, !11882}
!11881 = !DILocalVariable(name: "list", arg: 1, scope: !11877, file: !221, line: 341, type: !11807)
!11882 = !DILocalVariable(name: "node", arg: 2, scope: !11877, file: !221, line: 342, type: !2124)
!11883 = !DILocation(line: 0, scope: !11877)
!11884 = !DILocation(line: 344, column: 15, scope: !11877)
!11885 = !DILocation(line: 344, column: 9, scope: !11877)
!11886 = !DILocation(line: 344, column: 26, scope: !11877)
!11887 = !DILocation(line: 344, column: 2, scope: !11877)
!11888 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !11889, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11891)
!11889 = !DISubroutineType(types: !11890)
!11890 = !{null, !11807, !2124}
!11891 = !{!11892, !11893, !11894}
!11892 = !DILocalVariable(name: "list", arg: 1, scope: !11888, file: !221, line: 404, type: !11807)
!11893 = !DILocalVariable(name: "node", arg: 2, scope: !11888, file: !221, line: 404, type: !2124)
!11894 = !DILocalVariable(name: "tail", scope: !11888, file: !221, line: 406, type: !11866)
!11895 = !DILocation(line: 0, scope: !11888)
!11896 = !DILocation(line: 406, column: 34, scope: !11888)
!11897 = !DILocation(line: 408, column: 8, scope: !11888)
!11898 = !DILocation(line: 408, column: 13, scope: !11888)
!11899 = !DILocation(line: 409, column: 8, scope: !11888)
!11900 = !DILocation(line: 409, column: 13, scope: !11888)
!11901 = !DILocation(line: 411, column: 8, scope: !11888)
!11902 = !DILocation(line: 411, column: 13, scope: !11888)
!11903 = !DILocation(line: 412, column: 13, scope: !11888)
!11904 = !DILocation(line: 413, column: 1, scope: !11888)
!11905 = distinct !DISubprogram(name: "update_cache", scope: !2128, file: !2128, line: 559, type: !6602, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11906)
!11906 = !{!11907, !11908}
!11907 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11905, file: !2128, line: 559, type: !103)
!11908 = !DILocalVariable(name: "thread", scope: !11905, file: !2128, line: 562, type: !2023)
!11909 = !DILocation(line: 0, scope: !11905)
!11910 = !DILocation(line: 239, column: 9, scope: !11911, inlinedAt: !11914)
!11911 = distinct !DISubprogram(name: "runq_best", scope: !2128, file: !2128, line: 237, type: !11912, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!11912 = !DISubroutineType(types: !11913)
!11913 = !{!2023}
!11914 = distinct !DILocation(line: 314, column: 28, scope: !11915, inlinedAt: !11918)
!11915 = distinct !DISubprogram(name: "next_up", scope: !2128, file: !2128, line: 312, type: !11912, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11916)
!11916 = !{!11917}
!11917 = !DILocalVariable(name: "thread", scope: !11915, file: !2128, line: 314, type: !2023)
!11918 = distinct !DILocation(line: 562, column: 28, scope: !11905)
!11919 = !DILocation(line: 0, scope: !11915, inlinedAt: !11918)
!11920 = !DILocation(line: 340, column: 17, scope: !11915, inlinedAt: !11918)
!11921 = !DILocation(line: 340, column: 9, scope: !11915, inlinedAt: !11918)
!11922 = !DILocalVariable(name: "thread", arg: 1, scope: !11923, file: !2128, line: 127, type: !2023)
!11923 = distinct !DISubprogram(name: "should_preempt", scope: !2128, file: !2128, line: 127, type: !11924, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11926)
!11924 = !DISubroutineType(types: !11925)
!11925 = !{!157, !2023, !103}
!11926 = !{!11922, !11927}
!11927 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11923, file: !2128, line: 128, type: !103)
!11928 = !DILocation(line: 0, scope: !11923, inlinedAt: !11929)
!11929 = distinct !DILocation(line: 564, column: 6, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11905, file: !2128, line: 564, column: 6)
!11931 = !DILocation(line: 133, column: 17, scope: !11932, inlinedAt: !11929)
!11932 = distinct !DILexicalBlock(scope: !11923, file: !2128, line: 133, column: 6)
!11933 = !DILocation(line: 0, scope: !11930)
!11934 = !DILocation(line: 133, column: 6, scope: !11923, inlinedAt: !11929)
!11935 = !DILocation(line: 140, column: 6, scope: !11936, inlinedAt: !11929)
!11936 = distinct !DILexicalBlock(scope: !11923, file: !2128, line: 140, column: 6)
!11937 = !DILocation(line: 140, column: 6, scope: !11923, inlinedAt: !11929)
!11938 = !DILocation(line: 150, column: 9, scope: !11939, inlinedAt: !11929)
!11939 = distinct !DILexicalBlock(scope: !11923, file: !2128, line: 149, column: 6)
!11940 = !DILocation(line: 149, column: 6, scope: !11923, inlinedAt: !11929)
!11941 = !DILocation(line: 157, column: 6, scope: !11942, inlinedAt: !11929)
!11942 = distinct !DILexicalBlock(scope: !11923, file: !2128, line: 157, column: 6)
!11943 = !DILocation(line: 564, column: 6, scope: !11905)
!11944 = !DILocation(line: 566, column: 14, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !2128, line: 566, column: 7)
!11946 = distinct !DILexicalBlock(scope: !11930, file: !2128, line: 564, column: 42)
!11947 = !DILocation(line: 566, column: 7, scope: !11946)
!11948 = !DILocation(line: 567, column: 4, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11945, file: !2128, line: 566, column: 27)
!11950 = !DILocation(line: 568, column: 3, scope: !11949)
!11951 = !DILocation(line: 585, column: 1, scope: !11905)
!11952 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2128, file: !2128, line: 1144, type: !11953, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11955)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{!2023, !11807}
!11955 = !{!11956, !11957, !11958}
!11956 = !DILocalVariable(name: "pq", arg: 1, scope: !11952, file: !2128, line: 1144, type: !11807)
!11957 = !DILocalVariable(name: "thread", scope: !11952, file: !2128, line: 1146, type: !2023)
!11958 = !DILocalVariable(name: "n", scope: !11952, file: !2128, line: 1147, type: !2124)
!11959 = !DILocation(line: 0, scope: !11952)
!11960 = !DILocation(line: 1147, column: 19, scope: !11952)
!11961 = !DILocation(line: 1152, column: 2, scope: !11952)
!11962 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10876, file: !10876, line: 115, type: !11722, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11963)
!11963 = !{!11964}
!11964 = !DILocalVariable(name: "thread", arg: 1, scope: !11962, file: !10876, line: 115, type: !2023)
!11965 = !DILocation(line: 0, scope: !11962)
!11966 = !DILocation(line: 117, column: 46, scope: !11962)
!11967 = !DILocation(line: 117, column: 10, scope: !11962)
!11968 = !DILocation(line: 117, column: 9, scope: !11962)
!11969 = !DILocation(line: 117, column: 2, scope: !11962)
!11970 = distinct !DISubprogram(name: "is_preempt", scope: !2128, file: !2128, line: 62, type: !11580, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11971)
!11971 = !{!11972}
!11972 = !DILocalVariable(name: "thread", arg: 1, scope: !11970, file: !2128, line: 62, type: !2023)
!11973 = !DILocation(line: 0, scope: !11970)
!11974 = !DILocation(line: 65, column: 22, scope: !11970)
!11975 = !DILocation(line: 65, column: 30, scope: !11970)
!11976 = !DILocation(line: 65, column: 2, scope: !11970)
!11977 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11270, file: !11270, line: 35, type: !11978, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11982)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!157, !11980}
!11980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11981, size: 32)
!11981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2074)
!11982 = !{!11983}
!11983 = !DILocalVariable(name: "to", arg: 1, scope: !11977, file: !11270, line: 35, type: !11980)
!11984 = !DILocation(line: 0, scope: !11977)
!11985 = !DILocation(line: 37, column: 35, scope: !11977)
!11986 = !DILocation(line: 37, column: 10, scope: !11977)
!11987 = !DILocation(line: 37, column: 9, scope: !11977)
!11988 = !DILocation(line: 37, column: 2, scope: !11977)
!11989 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !11990, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !11994)
!11990 = !DISubroutineType(types: !11991)
!11991 = !{!157, !11992}
!11992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11993, size: 32)
!11993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2033)
!11994 = !{!11995}
!11995 = !DILocalVariable(name: "node", arg: 1, scope: !11989, file: !221, line: 225, type: !11992)
!11996 = !DILocation(line: 0, scope: !11989)
!11997 = !DILocation(line: 227, column: 15, scope: !11989)
!11998 = !DILocation(line: 227, column: 20, scope: !11989)
!11999 = !DILocation(line: 227, column: 2, scope: !11989)
!12000 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !11878, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12001)
!12001 = !{!12002, !12003}
!12002 = !DILocalVariable(name: "list", arg: 1, scope: !12000, file: !221, line: 325, type: !11807)
!12003 = !DILocalVariable(name: "node", arg: 2, scope: !12000, file: !221, line: 326, type: !2124)
!12004 = !DILocation(line: 0, scope: !12000)
!12005 = !DILocation(line: 328, column: 24, scope: !12000)
!12006 = !DILocation(line: 328, column: 15, scope: !12000)
!12007 = !DILocation(line: 328, column: 9, scope: !12000)
!12008 = !DILocation(line: 328, column: 45, scope: !12000)
!12009 = !DILocation(line: 328, column: 2, scope: !12000)
!12010 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !12011, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12013)
!12011 = !DISubroutineType(types: !12012)
!12012 = !{!157, !11807}
!12013 = !{!12014}
!12014 = !DILocalVariable(name: "list", arg: 1, scope: !12010, file: !221, line: 266, type: !11807)
!12015 = !DILocation(line: 0, scope: !12010)
!12016 = !DILocation(line: 268, column: 15, scope: !12010)
!12017 = !DILocation(line: 268, column: 20, scope: !12010)
!12018 = !DILocation(line: 268, column: 2, scope: !12010)
!12019 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !12020, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12022)
!12020 = !DISubroutineType(types: !12021)
!12021 = !{null, !2124}
!12022 = !{!12023, !12024, !12025}
!12023 = !DILocalVariable(name: "node", arg: 1, scope: !12019, file: !221, line: 496, type: !2124)
!12024 = !DILocalVariable(name: "prev", scope: !12019, file: !221, line: 498, type: !11866)
!12025 = !DILocalVariable(name: "next", scope: !12019, file: !221, line: 499, type: !11866)
!12026 = !DILocation(line: 0, scope: !12019)
!12027 = !DILocation(line: 498, column: 34, scope: !12019)
!12028 = !DILocation(line: 499, column: 34, scope: !12019)
!12029 = !DILocation(line: 501, column: 8, scope: !12019)
!12030 = !DILocation(line: 501, column: 13, scope: !12019)
!12031 = !DILocation(line: 502, column: 8, scope: !12019)
!12032 = !DILocation(line: 502, column: 13, scope: !12019)
!12033 = !DILocation(line: 503, column: 2, scope: !12019)
!12034 = !DILocation(line: 504, column: 1, scope: !12019)
!12035 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !12020, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12036)
!12036 = !{!12037}
!12037 = !DILocalVariable(name: "node", arg: 1, scope: !12035, file: !221, line: 211, type: !2124)
!12038 = !DILocation(line: 0, scope: !12035)
!12039 = !DILocation(line: 213, column: 8, scope: !12035)
!12040 = !DILocation(line: 213, column: 13, scope: !12035)
!12041 = !DILocation(line: 214, column: 8, scope: !12035)
!12042 = !DILocation(line: 214, column: 13, scope: !12035)
!12043 = !DILocation(line: 215, column: 1, scope: !12035)
!12044 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10876, file: !10876, line: 131, type: !12045, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12047)
!12045 = !DISubroutineType(types: !12046)
!12046 = !{!157, !2023, !121}
!12047 = !{!12048, !12049}
!12048 = !DILocalVariable(name: "thread", arg: 1, scope: !12044, file: !10876, line: 131, type: !2023)
!12049 = !DILocalVariable(name: "state", arg: 2, scope: !12044, file: !10876, line: 131, type: !121)
!12050 = !DILocation(line: 0, scope: !12044)
!12051 = !DILocation(line: 133, column: 23, scope: !12044)
!12052 = !DILocation(line: 133, column: 45, scope: !12044)
!12053 = !DILocation(line: 133, column: 2, scope: !12044)
!12054 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10876, file: !10876, line: 211, type: !12055, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12057)
!12055 = !DISubroutineType(types: !12056)
!12056 = !{!157, !103, !103}
!12057 = !{!12058, !12059}
!12058 = !DILocalVariable(name: "prio", arg: 1, scope: !12054, file: !10876, line: 211, type: !103)
!12059 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12054, file: !10876, line: 211, type: !103)
!12060 = !DILocation(line: 0, scope: !12054)
!12061 = !DILocation(line: 213, column: 9, scope: !12054)
!12062 = !DILocation(line: 213, column: 2, scope: !12054)
!12063 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10876, file: !10876, line: 83, type: !11722, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12064)
!12064 = !{!12065}
!12065 = !DILocalVariable(name: "thread", arg: 1, scope: !12063, file: !10876, line: 83, type: !2023)
!12066 = !DILocation(line: 0, scope: !12063)
!12067 = !DILocation(line: 89, column: 16, scope: !12063)
!12068 = !DILocation(line: 89, column: 2, scope: !12063)
!12069 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10876, file: !10876, line: 206, type: !12055, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12070)
!12070 = !{!12071, !12072}
!12071 = !DILocalVariable(name: "prio1", arg: 1, scope: !12069, file: !10876, line: 206, type: !103)
!12072 = !DILocalVariable(name: "prio2", arg: 2, scope: !12069, file: !10876, line: 206, type: !103)
!12073 = !DILocation(line: 0, scope: !12069)
!12074 = !DILocation(line: 208, column: 15, scope: !12069)
!12075 = !DILocation(line: 208, column: 2, scope: !12069)
!12076 = distinct !DISubprogram(name: "z_ready_thread", scope: !2128, file: !2128, line: 635, type: !11562, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12077)
!12077 = !{!12078, !12079, !12081}
!12078 = !DILocalVariable(name: "thread", arg: 1, scope: !12076, file: !2128, line: 635, type: !2023)
!12079 = !DILocalVariable(name: "__i", scope: !12080, file: !2128, line: 637, type: !11596)
!12080 = distinct !DILexicalBlock(scope: !12076, file: !2128, line: 637, column: 2)
!12081 = !DILocalVariable(name: "__key", scope: !12080, file: !2128, line: 637, type: !11596)
!12082 = !DILocation(line: 0, scope: !12076)
!12083 = !DILocation(line: 0, scope: !12080)
!12084 = !DILocation(line: 0, scope: !11604, inlinedAt: !12085)
!12085 = distinct !DILocation(line: 637, column: 2, scope: !12080)
!12086 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12087)
!12087 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12085)
!12088 = !DILocation(line: 0, scope: !11613, inlinedAt: !12087)
!12089 = !DILocation(line: 639, column: 4, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12091, file: !2128, line: 638, column: 41)
!12091 = distinct !DILexicalBlock(scope: !12092, file: !2128, line: 638, column: 7)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !2128, line: 637, column: 26)
!12093 = distinct !DILexicalBlock(scope: !12080, file: !2128, line: 637, column: 2)
!12094 = !DILocation(line: 0, scope: !11631, inlinedAt: !12095)
!12095 = distinct !DILocation(line: 637, column: 2, scope: !12093)
!12096 = !DILocation(line: 0, scope: !11639, inlinedAt: !12097)
!12097 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12095)
!12098 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12097)
!12099 = !DILocation(line: 642, column: 1, scope: !12076)
!12100 = distinct !DISubprogram(name: "ready_thread", scope: !2128, file: !2128, line: 617, type: !11562, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12101)
!12101 = !{!12102}
!12102 = !DILocalVariable(name: "thread", arg: 1, scope: !12100, file: !2128, line: 617, type: !2023)
!12103 = !DILocation(line: 0, scope: !12100)
!12104 = !DILocation(line: 626, column: 7, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12100, file: !2128, line: 626, column: 6)
!12106 = !DILocation(line: 626, column: 34, scope: !12105)
!12107 = !DILocation(line: 626, column: 37, scope: !12105)
!12108 = !DILocation(line: 626, column: 6, scope: !12100)
!12109 = !DILocation(line: 0, scope: !11790, inlinedAt: !12110)
!12110 = distinct !DILocation(line: 629, column: 3, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12105, file: !2128, line: 626, column: 64)
!12112 = !DILocation(line: 252, column: 15, scope: !11790, inlinedAt: !12110)
!12113 = !DILocation(line: 252, column: 28, scope: !11790, inlinedAt: !12110)
!12114 = !DILocation(line: 0, scope: !11797, inlinedAt: !12115)
!12115 = distinct !DILocation(line: 254, column: 3, scope: !11801, inlinedAt: !12110)
!12116 = !DILocation(line: 0, scope: !11804, inlinedAt: !12117)
!12117 = distinct !DILocation(line: 229, column: 2, scope: !11797, inlinedAt: !12115)
!12118 = !DILocation(line: 188, column: 2, scope: !11814, inlinedAt: !12117)
!12119 = !DILocation(line: 188, column: 2, scope: !11816, inlinedAt: !12117)
!12120 = !DILocation(line: 0, scope: !11814, inlinedAt: !12117)
!12121 = !DILocation(line: 189, column: 7, scope: !11819, inlinedAt: !12117)
!12122 = !DILocation(line: 189, column: 35, scope: !11819, inlinedAt: !12117)
!12123 = !DILocation(line: 189, column: 7, scope: !11820, inlinedAt: !12117)
!12124 = !DILocation(line: 191, column: 21, scope: !11824, inlinedAt: !12117)
!12125 = !DILocation(line: 190, column: 4, scope: !11824, inlinedAt: !12117)
!12126 = !DILocation(line: 192, column: 4, scope: !11824, inlinedAt: !12117)
!12127 = distinct !{!12127, !12118, !12128}
!12128 = !DILocation(line: 194, column: 2, scope: !11814, inlinedAt: !12117)
!12129 = !DILocation(line: 196, column: 37, scope: !11804, inlinedAt: !12117)
!12130 = !DILocation(line: 196, column: 2, scope: !11804, inlinedAt: !12117)
!12131 = !DILocation(line: 197, column: 1, scope: !11804, inlinedAt: !12117)
!12132 = !DILocation(line: 630, column: 3, scope: !12111)
!12133 = !DILocation(line: 632, column: 2, scope: !12111)
!12134 = !DILocation(line: 633, column: 1, scope: !12100)
!12135 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10876, file: !10876, line: 120, type: !11722, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12136)
!12136 = !{!12137}
!12137 = !DILocalVariable(name: "thread", arg: 1, scope: !12135, file: !10876, line: 120, type: !2023)
!12138 = !DILocation(line: 0, scope: !12135)
!12139 = !DILocation(line: 122, column: 12, scope: !12135)
!12140 = !DILocation(line: 122, column: 62, scope: !12135)
!12141 = !DILocation(line: 123, column: 4, scope: !12135)
!12142 = !DILocation(line: 122, column: 2, scope: !12135)
!12143 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2128, file: !2128, line: 644, type: !11562, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12144)
!12144 = !{!12145, !12146, !12148}
!12145 = !DILocalVariable(name: "thread", arg: 1, scope: !12143, file: !2128, line: 644, type: !2023)
!12146 = !DILocalVariable(name: "__i", scope: !12147, file: !2128, line: 646, type: !11596)
!12147 = distinct !DILexicalBlock(scope: !12143, file: !2128, line: 646, column: 2)
!12148 = !DILocalVariable(name: "__key", scope: !12147, file: !2128, line: 646, type: !11596)
!12149 = !DILocation(line: 0, scope: !12143)
!12150 = !DILocation(line: 0, scope: !12147)
!12151 = !DILocation(line: 0, scope: !11604, inlinedAt: !12152)
!12152 = distinct !DILocation(line: 646, column: 2, scope: !12147)
!12153 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12154)
!12154 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12152)
!12155 = !DILocation(line: 0, scope: !11613, inlinedAt: !12154)
!12156 = !DILocation(line: 647, column: 3, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12158, file: !2128, line: 646, column: 26)
!12158 = distinct !DILexicalBlock(scope: !12147, file: !2128, line: 646, column: 2)
!12159 = !DILocation(line: 0, scope: !11631, inlinedAt: !12160)
!12160 = distinct !DILocation(line: 646, column: 2, scope: !12158)
!12161 = !DILocation(line: 0, scope: !11639, inlinedAt: !12162)
!12162 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12160)
!12163 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12162)
!12164 = !DILocation(line: 649, column: 1, scope: !12143)
!12165 = distinct !DISubprogram(name: "z_sched_start", scope: !2128, file: !2128, line: 651, type: !11562, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12166)
!12166 = !{!12167, !12168}
!12167 = !DILocalVariable(name: "thread", arg: 1, scope: !12165, file: !2128, line: 651, type: !2023)
!12168 = !DILocalVariable(name: "key", scope: !12165, file: !2128, line: 653, type: !11596)
!12169 = !DILocation(line: 0, scope: !12165)
!12170 = !DILocation(line: 0, scope: !11604, inlinedAt: !12171)
!12171 = distinct !DILocation(line: 653, column: 25, scope: !12165)
!12172 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12173)
!12173 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12171)
!12174 = !DILocation(line: 0, scope: !11613, inlinedAt: !12173)
!12175 = !DILocation(line: 655, column: 6, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12165, file: !2128, line: 655, column: 6)
!12177 = !DILocation(line: 655, column: 6, scope: !12165)
!12178 = !DILocation(line: 0, scope: !11631, inlinedAt: !12179)
!12179 = distinct !DILocation(line: 656, column: 3, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12176, file: !2128, line: 655, column: 36)
!12181 = !DILocation(line: 0, scope: !11639, inlinedAt: !12182)
!12182 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12179)
!12183 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12182)
!12184 = !DILocation(line: 657, column: 3, scope: !12180)
!12185 = !DILocation(line: 660, column: 2, scope: !12165)
!12186 = !DILocation(line: 661, column: 2, scope: !12165)
!12187 = !DILocation(line: 662, column: 2, scope: !12165)
!12188 = !DILocation(line: 663, column: 1, scope: !12165)
!12189 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10876, file: !10876, line: 126, type: !11722, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12190)
!12190 = !{!12191}
!12191 = !DILocalVariable(name: "thread", arg: 1, scope: !12189, file: !10876, line: 126, type: !2023)
!12192 = !DILocation(line: 0, scope: !12189)
!12193 = !DILocation(line: 128, column: 23, scope: !12189)
!12194 = !DILocation(line: 128, column: 36, scope: !12189)
!12195 = !DILocation(line: 128, column: 56, scope: !12189)
!12196 = !DILocation(line: 128, column: 2, scope: !12189)
!12197 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10876, file: !10876, line: 155, type: !11562, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12198)
!12198 = !{!12199}
!12199 = !DILocalVariable(name: "thread", arg: 1, scope: !12197, file: !10876, line: 155, type: !2023)
!12200 = !DILocation(line: 0, scope: !12197)
!12201 = !DILocation(line: 157, column: 15, scope: !12197)
!12202 = !DILocation(line: 157, column: 28, scope: !12197)
!12203 = !DILocation(line: 158, column: 1, scope: !12197)
!12204 = distinct !DISubprogram(name: "z_reschedule", scope: !2128, file: !2128, line: 967, type: !11632, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12205)
!12205 = !{!12206, !12207}
!12206 = !DILocalVariable(name: "lock", arg: 1, scope: !12204, file: !2128, line: 967, type: !11607)
!12207 = !DILocalVariable(name: "key", arg: 2, scope: !12204, file: !2128, line: 967, type: !11596)
!12208 = !DILocation(line: 0, scope: !12204)
!12209 = !DILocation(line: 969, column: 6, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12204, file: !2128, line: 969, column: 6)
!12211 = !DILocation(line: 969, column: 23, scope: !12210)
!12212 = !DILocation(line: 969, column: 26, scope: !12210)
!12213 = !DILocation(line: 969, column: 6, scope: !12204)
!12214 = !DILocalVariable(name: "key", arg: 2, scope: !12215, file: !10980, line: 193, type: !11596)
!12215 = distinct !DISubprogram(name: "z_swap", scope: !10980, file: !10980, line: 193, type: !12216, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12218)
!12216 = !DISubroutineType(types: !12217)
!12217 = !{!103, !11607, !11596}
!12218 = !{!12219, !12214}
!12219 = !DILocalVariable(name: "lock", arg: 1, scope: !12215, file: !10980, line: 193, type: !11607)
!12220 = !DILocation(line: 0, scope: !12215, inlinedAt: !12221)
!12221 = distinct !DILocation(line: 970, column: 3, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12210, file: !2128, line: 969, column: 39)
!12223 = !DILocation(line: 196, column: 9, scope: !12215, inlinedAt: !12221)
!12224 = !DILocation(line: 971, column: 2, scope: !12222)
!12225 = !DILocation(line: 0, scope: !11631, inlinedAt: !12226)
!12226 = distinct !DILocation(line: 972, column: 3, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12210, file: !2128, line: 971, column: 9)
!12228 = !DILocation(line: 0, scope: !11639, inlinedAt: !12229)
!12229 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12226)
!12230 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12229)
!12231 = !DILocation(line: 975, column: 1, scope: !12204)
!12232 = distinct !DISubprogram(name: "resched", scope: !2128, file: !2128, line: 940, type: !12233, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12235)
!12233 = !DISubroutineType(types: !12234)
!12234 = !{!157, !121}
!12235 = !{!12236}
!12236 = !DILocalVariable(name: "key", arg: 1, scope: !12232, file: !2128, line: 940, type: !121)
!12237 = !DILocation(line: 0, scope: !12232)
!12238 = !DILocalVariable(name: "key", arg: 1, scope: !12239, file: !4783, line: 112, type: !32)
!12239 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4783, file: !4783, line: 112, type: !12240, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12242)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{!157, !32}
!12242 = !{!12238}
!12243 = !DILocation(line: 0, scope: !12239, inlinedAt: !12244)
!12244 = distinct !DILocation(line: 946, column: 9, scope: !12232)
!12245 = !DILocation(line: 115, column: 13, scope: !12239, inlinedAt: !12244)
!12246 = !DILocation(line: 946, column: 32, scope: !12232)
!12247 = !DILocation(line: 1031, column: 3, scope: !12248, inlinedAt: !12251)
!12248 = distinct !DISubprogram(name: "__get_IPSR", scope: !4957, file: !4957, line: 1027, type: !5038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12249)
!12249 = !{!12250}
!12250 = !DILocalVariable(name: "result", scope: !12248, file: !4957, line: 1029, type: !121)
!12251 = distinct !DILocation(line: 48, column: 10, scope: !12252, inlinedAt: !12253)
!12252 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5751, file: !5751, line: 46, type: !5752, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!12253 = distinct !DILocation(line: 946, column: 36, scope: !12232)
!12254 = !{i64 3537951}
!12255 = !DILocation(line: 0, scope: !12248, inlinedAt: !12251)
!12256 = !DILocation(line: 48, column: 9, scope: !12252, inlinedAt: !12253)
!12257 = !DILocation(line: 946, column: 2, scope: !12232)
!12258 = distinct !DISubprogram(name: "need_swap", scope: !2128, file: !2128, line: 953, type: !5752, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12259)
!12259 = !{!12260}
!12260 = !DILocalVariable(name: "new_thread", scope: !12258, file: !2128, line: 959, type: !2023)
!12261 = !DILocation(line: 962, column: 31, scope: !12258)
!12262 = !DILocation(line: 0, scope: !12258)
!12263 = !DILocation(line: 963, column: 23, scope: !12258)
!12264 = !DILocation(line: 963, column: 20, scope: !12258)
!12265 = !DILocation(line: 963, column: 2, scope: !12258)
!12266 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10980, file: !10980, line: 181, type: !4967, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12267)
!12267 = !{!12268, !12269}
!12268 = !DILocalVariable(name: "key", arg: 1, scope: !12266, file: !10980, line: 181, type: !32)
!12269 = !DILocalVariable(name: "ret", scope: !12266, file: !10980, line: 183, type: !103)
!12270 = !DILocation(line: 0, scope: !12266)
!12271 = !DILocation(line: 185, column: 8, scope: !12266)
!12272 = !DILocation(line: 186, column: 2, scope: !12266)
!12273 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2128, file: !2128, line: 665, type: !11562, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12274)
!12274 = !{!12275, !12276, !12278}
!12275 = !DILocalVariable(name: "thread", arg: 1, scope: !12273, file: !2128, line: 665, type: !2023)
!12276 = !DILocalVariable(name: "__i", scope: !12277, file: !2128, line: 671, type: !11596)
!12277 = distinct !DILexicalBlock(scope: !12273, file: !2128, line: 671, column: 2)
!12278 = !DILocalVariable(name: "__key", scope: !12277, file: !2128, line: 671, type: !11596)
!12279 = !DILocation(line: 0, scope: !12273)
!12280 = !DILocation(line: 669, column: 8, scope: !12273)
!12281 = !DILocation(line: 0, scope: !12277)
!12282 = !DILocation(line: 0, scope: !11604, inlinedAt: !12283)
!12283 = distinct !DILocation(line: 671, column: 2, scope: !12277)
!12284 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12285)
!12285 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12283)
!12286 = !DILocation(line: 0, scope: !11613, inlinedAt: !12285)
!12287 = !DILocation(line: 672, column: 7, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12289, file: !2128, line: 672, column: 7)
!12289 = distinct !DILexicalBlock(scope: !12290, file: !2128, line: 671, column: 26)
!12290 = distinct !DILexicalBlock(scope: !12277, file: !2128, line: 671, column: 2)
!12291 = !DILocation(line: 672, column: 7, scope: !12289)
!12292 = !DILocation(line: 0, scope: !11773, inlinedAt: !12293)
!12293 = distinct !DILocation(line: 673, column: 4, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12288, file: !2128, line: 672, column: 35)
!12295 = !DILocation(line: 266, column: 15, scope: !11773, inlinedAt: !12293)
!12296 = !DILocation(line: 266, column: 28, scope: !11773, inlinedAt: !12293)
!12297 = !DILocation(line: 0, scope: !11781, inlinedAt: !12298)
!12298 = distinct !DILocation(line: 268, column: 3, scope: !11785, inlinedAt: !12293)
!12299 = !DILocation(line: 234, column: 2, scope: !11781, inlinedAt: !12298)
!12300 = !DILocation(line: 674, column: 3, scope: !12294)
!12301 = !DILocation(line: 675, column: 3, scope: !12289)
!12302 = !DILocation(line: 676, column: 26, scope: !12289)
!12303 = !DILocation(line: 676, column: 23, scope: !12289)
!12304 = !DILocation(line: 676, column: 3, scope: !12289)
!12305 = !DILocation(line: 0, scope: !11631, inlinedAt: !12306)
!12306 = distinct !DILocation(line: 671, column: 2, scope: !12290)
!12307 = !DILocation(line: 0, scope: !11639, inlinedAt: !12308)
!12308 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12306)
!12309 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12308)
!12310 = !DILocation(line: 679, column: 16, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12273, file: !2128, line: 679, column: 6)
!12312 = !DILocation(line: 679, column: 13, scope: !12311)
!12313 = !DILocation(line: 679, column: 6, scope: !12273)
!12314 = !DILocation(line: 680, column: 3, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12311, file: !2128, line: 679, column: 26)
!12316 = !DILocation(line: 681, column: 2, scope: !12315)
!12317 = !DILocation(line: 684, column: 1, scope: !12273)
!12318 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11270, file: !11270, line: 52, type: !11580, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12319)
!12319 = !{!12320}
!12320 = !DILocalVariable(name: "thread", arg: 1, scope: !12318, file: !11270, line: 52, type: !2023)
!12321 = !DILocation(line: 0, scope: !12318)
!12322 = !DILocation(line: 54, column: 39, scope: !12318)
!12323 = !DILocation(line: 54, column: 9, scope: !12318)
!12324 = !DILocation(line: 54, column: 2, scope: !12318)
!12325 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10876, file: !10876, line: 141, type: !11562, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12326)
!12326 = !{!12327}
!12327 = !DILocalVariable(name: "thread", arg: 1, scope: !12325, file: !10876, line: 141, type: !2023)
!12328 = !DILocation(line: 0, scope: !12325)
!12329 = !DILocation(line: 143, column: 15, scope: !12325)
!12330 = !DILocation(line: 143, column: 28, scope: !12325)
!12331 = !DILocation(line: 146, column: 1, scope: !12325)
!12332 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10876, file: !10876, line: 73, type: !2843, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!12333 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12334)
!12334 = distinct !DILocation(line: 75, column: 30, scope: !12332)
!12335 = !DILocation(line: 0, scope: !11613, inlinedAt: !12334)
!12336 = !DILocation(line: 75, column: 9, scope: !12332)
!12337 = !DILocation(line: 76, column: 1, scope: !12332)
!12338 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2128, file: !2128, line: 977, type: !5048, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12339)
!12339 = !{!12340}
!12340 = !DILocalVariable(name: "key", arg: 1, scope: !12338, file: !2128, line: 977, type: !121)
!12341 = !DILocation(line: 0, scope: !12338)
!12342 = !DILocation(line: 979, column: 6, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12338, file: !2128, line: 979, column: 6)
!12344 = !DILocation(line: 979, column: 6, scope: !12338)
!12345 = !DILocation(line: 980, column: 3, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12343, file: !2128, line: 979, column: 20)
!12347 = !DILocation(line: 981, column: 2, scope: !12346)
!12348 = !DILocation(line: 0, scope: !11639, inlinedAt: !12349)
!12349 = distinct !DILocation(line: 982, column: 3, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12343, file: !2128, line: 981, column: 9)
!12351 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12349)
!12352 = !DILocation(line: 985, column: 1, scope: !12338)
!12353 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2128, file: !2128, line: 695, type: !11562, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12354)
!12354 = !{!12355, !12356}
!12355 = !DILocalVariable(name: "thread", arg: 1, scope: !12353, file: !2128, line: 695, type: !2023)
!12356 = !DILocalVariable(name: "key", scope: !12353, file: !2128, line: 699, type: !11596)
!12357 = !DILocation(line: 0, scope: !12353)
!12358 = !DILocation(line: 0, scope: !11604, inlinedAt: !12359)
!12359 = distinct !DILocation(line: 699, column: 25, scope: !12353)
!12360 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12361)
!12361 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12359)
!12362 = !DILocation(line: 0, scope: !11613, inlinedAt: !12361)
!12363 = !DILocation(line: 702, column: 7, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12353, file: !2128, line: 702, column: 6)
!12365 = !DILocation(line: 702, column: 6, scope: !12353)
!12366 = !DILocation(line: 0, scope: !11631, inlinedAt: !12367)
!12367 = distinct !DILocation(line: 703, column: 3, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12364, file: !2128, line: 702, column: 38)
!12369 = !DILocation(line: 0, scope: !11639, inlinedAt: !12370)
!12370 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12367)
!12371 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12370)
!12372 = !DILocation(line: 704, column: 3, scope: !12368)
!12373 = !DILocation(line: 707, column: 2, scope: !12353)
!12374 = !DILocation(line: 708, column: 2, scope: !12353)
!12375 = !DILocation(line: 710, column: 2, scope: !12353)
!12376 = !DILocation(line: 713, column: 1, scope: !12353)
!12377 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10876, file: !10876, line: 96, type: !11722, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12378)
!12378 = !{!12379}
!12379 = !DILocalVariable(name: "thread", arg: 1, scope: !12377, file: !10876, line: 96, type: !2023)
!12380 = !DILocation(line: 0, scope: !12377)
!12381 = !DILocation(line: 98, column: 23, scope: !12377)
!12382 = !DILocation(line: 98, column: 36, scope: !12377)
!12383 = !DILocation(line: 98, column: 57, scope: !12377)
!12384 = !DILocation(line: 98, column: 2, scope: !12377)
!12385 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10876, file: !10876, line: 148, type: !11562, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12386)
!12386 = !{!12387}
!12387 = !DILocalVariable(name: "thread", arg: 1, scope: !12385, file: !10876, line: 148, type: !2023)
!12388 = !DILocation(line: 0, scope: !12385)
!12389 = !DILocation(line: 150, column: 15, scope: !12385)
!12390 = !DILocation(line: 150, column: 28, scope: !12385)
!12391 = !DILocation(line: 153, column: 1, scope: !12385)
!12392 = distinct !DISubprogram(name: "z_pend_thread", scope: !2128, file: !2128, line: 770, type: !12393, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12399)
!12393 = !DISubroutineType(types: !12394)
!12394 = !{null, !2023, !2054, !12395}
!12395 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1382, line: 67, baseType: !12396)
!12396 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1382, line: 65, size: 64, elements: !12397)
!12397 = !{!12398}
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12396, file: !1382, line: 66, baseType: !1381, size: 64)
!12399 = !{!12400, !12401, !12402, !12403, !12405}
!12400 = !DILocalVariable(name: "thread", arg: 1, scope: !12392, file: !2128, line: 770, type: !2023)
!12401 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12392, file: !2128, line: 770, type: !2054)
!12402 = !DILocalVariable(name: "timeout", arg: 3, scope: !12392, file: !2128, line: 771, type: !12395)
!12403 = !DILocalVariable(name: "__i", scope: !12404, file: !2128, line: 774, type: !11596)
!12404 = distinct !DILexicalBlock(scope: !12392, file: !2128, line: 774, column: 2)
!12405 = !DILocalVariable(name: "__key", scope: !12404, file: !2128, line: 774, type: !11596)
!12406 = !DILocation(line: 0, scope: !12392)
!12407 = !DILocation(line: 0, scope: !12404)
!12408 = !DILocation(line: 0, scope: !11604, inlinedAt: !12409)
!12409 = distinct !DILocation(line: 774, column: 2, scope: !12404)
!12410 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12411)
!12411 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12409)
!12412 = !DILocation(line: 0, scope: !11613, inlinedAt: !12411)
!12413 = !DILocation(line: 775, column: 3, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !2128, line: 774, column: 26)
!12415 = distinct !DILexicalBlock(scope: !12404, file: !2128, line: 774, column: 2)
!12416 = !DILocation(line: 0, scope: !11631, inlinedAt: !12417)
!12417 = distinct !DILocation(line: 774, column: 2, scope: !12415)
!12418 = !DILocation(line: 0, scope: !11639, inlinedAt: !12419)
!12419 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12417)
!12420 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12419)
!12421 = !DILocation(line: 777, column: 1, scope: !12392)
!12422 = distinct !DISubprogram(name: "pend_locked", scope: !2128, file: !2128, line: 760, type: !12393, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12423)
!12423 = !{!12424, !12425, !12426}
!12424 = !DILocalVariable(name: "thread", arg: 1, scope: !12422, file: !2128, line: 760, type: !2023)
!12425 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12422, file: !2128, line: 760, type: !2054)
!12426 = !DILocalVariable(name: "timeout", arg: 3, scope: !12422, file: !2128, line: 761, type: !12395)
!12427 = !DILocation(line: 0, scope: !12422)
!12428 = !DILocation(line: 766, column: 2, scope: !12422)
!12429 = !DILocation(line: 767, column: 2, scope: !12422)
!12430 = !DILocation(line: 768, column: 1, scope: !12422)
!12431 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2128, file: !2128, line: 740, type: !12432, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12434)
!12432 = !DISubroutineType(types: !12433)
!12433 = !{null, !2023, !2054}
!12434 = !{!12435, !12436}
!12435 = !DILocalVariable(name: "thread", arg: 1, scope: !12431, file: !2128, line: 740, type: !2023)
!12436 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12431, file: !2128, line: 740, type: !2054)
!12437 = !DILocation(line: 0, scope: !12431)
!12438 = !DILocation(line: 742, column: 2, scope: !12431)
!12439 = !DILocation(line: 743, column: 2, scope: !12431)
!12440 = !DILocation(line: 747, column: 13, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12431, file: !2128, line: 747, column: 6)
!12442 = !DILocation(line: 747, column: 6, scope: !12431)
!12443 = !DILocation(line: 748, column: 16, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12441, file: !2128, line: 747, column: 22)
!12445 = !DILocation(line: 748, column: 26, scope: !12444)
!12446 = !DILocation(line: 749, column: 28, scope: !12444)
!12447 = !DILocation(line: 0, scope: !11804, inlinedAt: !12448)
!12448 = distinct !DILocation(line: 749, column: 3, scope: !12444)
!12449 = !DILocation(line: 188, column: 2, scope: !11814, inlinedAt: !12448)
!12450 = !DILocation(line: 188, column: 2, scope: !11816, inlinedAt: !12448)
!12451 = !DILocation(line: 0, scope: !11814, inlinedAt: !12448)
!12452 = !DILocation(line: 189, column: 7, scope: !11819, inlinedAt: !12448)
!12453 = !DILocation(line: 189, column: 35, scope: !11819, inlinedAt: !12448)
!12454 = !DILocation(line: 189, column: 7, scope: !11820, inlinedAt: !12448)
!12455 = !DILocation(line: 191, column: 21, scope: !11824, inlinedAt: !12448)
!12456 = !DILocation(line: 190, column: 4, scope: !11824, inlinedAt: !12448)
!12457 = !DILocation(line: 192, column: 4, scope: !11824, inlinedAt: !12448)
!12458 = distinct !{!12458, !12449, !12459}
!12459 = !DILocation(line: 194, column: 2, scope: !11814, inlinedAt: !12448)
!12460 = !DILocation(line: 196, column: 37, scope: !11804, inlinedAt: !12448)
!12461 = !DILocation(line: 196, column: 2, scope: !11804, inlinedAt: !12448)
!12462 = !DILocation(line: 197, column: 1, scope: !11804, inlinedAt: !12448)
!12463 = !DILocation(line: 751, column: 1, scope: !12431)
!12464 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2128, file: !2128, line: 753, type: !12465, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12467)
!12465 = !DISubroutineType(types: !12466)
!12466 = !{null, !2023, !12395}
!12467 = !{!12468, !12469}
!12468 = !DILocalVariable(name: "thread", arg: 1, scope: !12464, file: !2128, line: 753, type: !2023)
!12469 = !DILocalVariable(name: "timeout", arg: 2, scope: !12464, file: !2128, line: 753, type: !12395)
!12470 = !DILocation(line: 0, scope: !12464)
!12471 = !DILocation(line: 755, column: 7, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12464, file: !2128, line: 755, column: 6)
!12473 = !DILocation(line: 755, column: 6, scope: !12464)
!12474 = !DILocation(line: 756, column: 3, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12472, file: !2128, line: 755, column: 41)
!12476 = !DILocation(line: 757, column: 2, scope: !12475)
!12477 = !DILocation(line: 758, column: 1, scope: !12464)
!12478 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11270, file: !11270, line: 47, type: !12465, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12479)
!12479 = !{!12480, !12481}
!12480 = !DILocalVariable(name: "thread", arg: 1, scope: !12478, file: !11270, line: 47, type: !2023)
!12481 = !DILocalVariable(name: "ticks", arg: 2, scope: !12478, file: !11270, line: 47, type: !12395)
!12482 = !DILocation(line: 0, scope: !12478)
!12483 = !DILocation(line: 49, column: 30, scope: !12478)
!12484 = !DILocation(line: 49, column: 2, scope: !12478)
!12485 = !DILocation(line: 50, column: 1, scope: !12478)
!12486 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2128, file: !2128, line: 795, type: !2080, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12487)
!12487 = !{!12488, !12489, !12490, !12492, !12493}
!12488 = !DILocalVariable(name: "timeout", arg: 1, scope: !12486, file: !2128, line: 795, type: !2082)
!12489 = !DILocalVariable(name: "thread", scope: !12486, file: !2128, line: 797, type: !2023)
!12490 = !DILocalVariable(name: "__i", scope: !12491, file: !2128, line: 800, type: !11596)
!12491 = distinct !DILexicalBlock(scope: !12486, file: !2128, line: 800, column: 2)
!12492 = !DILocalVariable(name: "__key", scope: !12491, file: !2128, line: 800, type: !11596)
!12493 = !DILocalVariable(name: "killed", scope: !12494, file: !2128, line: 801, type: !157)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !2128, line: 800, column: 26)
!12495 = distinct !DILexicalBlock(scope: !12491, file: !2128, line: 800, column: 2)
!12496 = !DILocation(line: 0, scope: !12486)
!12497 = !DILocation(line: 797, column: 28, scope: !12486)
!12498 = !DILocation(line: 0, scope: !12491)
!12499 = !DILocation(line: 0, scope: !11604, inlinedAt: !12500)
!12500 = distinct !DILocation(line: 800, column: 2, scope: !12491)
!12501 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12502)
!12502 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12500)
!12503 = !DILocation(line: 0, scope: !11613, inlinedAt: !12502)
!12504 = !DILocation(line: 801, column: 27, scope: !12494)
!12505 = !DILocation(line: 801, column: 32, scope: !12494)
!12506 = !DILocation(line: 801, column: 61, scope: !12494)
!12507 = !DILocation(line: 0, scope: !12494)
!12508 = !DILocation(line: 804, column: 7, scope: !12494)
!12509 = !DILocation(line: 805, column: 21, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !2128, line: 805, column: 8)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !2128, line: 804, column: 16)
!12512 = distinct !DILexicalBlock(scope: !12494, file: !2128, line: 804, column: 7)
!12513 = !DILocation(line: 805, column: 31, scope: !12510)
!12514 = !DILocation(line: 805, column: 8, scope: !12511)
!12515 = !DILocation(line: 806, column: 5, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12510, file: !2128, line: 805, column: 40)
!12517 = !DILocation(line: 807, column: 4, scope: !12516)
!12518 = !DILocation(line: 808, column: 4, scope: !12511)
!12519 = !DILocation(line: 809, column: 4, scope: !12511)
!12520 = !DILocation(line: 810, column: 4, scope: !12511)
!12521 = !DILocation(line: 811, column: 3, scope: !12511)
!12522 = !DILocation(line: 0, scope: !11631, inlinedAt: !12523)
!12523 = distinct !DILocation(line: 800, column: 2, scope: !12495)
!12524 = !DILocation(line: 0, scope: !11639, inlinedAt: !12525)
!12525 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12523)
!12526 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12525)
!12527 = !DILocation(line: 813, column: 1, scope: !12486)
!12528 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2128, file: !2128, line: 779, type: !11562, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12529)
!12529 = !{!12530}
!12530 = !DILocalVariable(name: "thread", arg: 1, scope: !12528, file: !2128, line: 779, type: !2023)
!12531 = !DILocation(line: 0, scope: !12528)
!12532 = !DILocation(line: 781, column: 2, scope: !12528)
!12533 = !DILocation(line: 782, column: 2, scope: !12528)
!12534 = !DILocation(line: 783, column: 15, scope: !12528)
!12535 = !DILocation(line: 783, column: 25, scope: !12528)
!12536 = !DILocation(line: 784, column: 1, scope: !12528)
!12537 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10876, file: !10876, line: 165, type: !11562, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12538)
!12538 = !{!12539}
!12539 = !DILocalVariable(name: "thread", arg: 1, scope: !12537, file: !10876, line: 165, type: !2023)
!12540 = !DILocation(line: 0, scope: !12537)
!12541 = !DILocation(line: 167, column: 15, scope: !12537)
!12542 = !DILocation(line: 167, column: 28, scope: !12537)
!12543 = !DILocation(line: 168, column: 1, scope: !12537)
!12544 = distinct !DISubprogram(name: "unready_thread", scope: !2128, file: !2128, line: 731, type: !11562, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12545)
!12545 = !{!12546}
!12546 = !DILocalVariable(name: "thread", arg: 1, scope: !12544, file: !2128, line: 731, type: !2023)
!12547 = !DILocation(line: 0, scope: !12544)
!12548 = !DILocation(line: 733, column: 6, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12544, file: !2128, line: 733, column: 6)
!12550 = !DILocation(line: 733, column: 6, scope: !12544)
!12551 = !DILocation(line: 0, scope: !11773, inlinedAt: !12552)
!12552 = distinct !DILocation(line: 734, column: 3, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12549, file: !2128, line: 733, column: 34)
!12554 = !DILocation(line: 266, column: 15, scope: !11773, inlinedAt: !12552)
!12555 = !DILocation(line: 266, column: 28, scope: !11773, inlinedAt: !12552)
!12556 = !DILocation(line: 0, scope: !11781, inlinedAt: !12557)
!12557 = distinct !DILocation(line: 268, column: 3, scope: !11785, inlinedAt: !12552)
!12558 = !DILocation(line: 234, column: 2, scope: !11781, inlinedAt: !12557)
!12559 = !DILocation(line: 735, column: 2, scope: !12553)
!12560 = !DILocation(line: 736, column: 25, scope: !12544)
!12561 = !DILocation(line: 736, column: 22, scope: !12544)
!12562 = !DILocation(line: 736, column: 2, scope: !12544)
!12563 = !DILocation(line: 737, column: 1, scope: !12544)
!12564 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10876, file: !10876, line: 160, type: !11562, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12565)
!12565 = !{!12566}
!12566 = !DILocalVariable(name: "thread", arg: 1, scope: !12564, file: !10876, line: 160, type: !2023)
!12567 = !DILocation(line: 0, scope: !12564)
!12568 = !DILocation(line: 162, column: 15, scope: !12564)
!12569 = !DILocation(line: 162, column: 28, scope: !12564)
!12570 = !DILocation(line: 163, column: 1, scope: !12564)
!12571 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2128, file: !2128, line: 786, type: !11562, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12572)
!12572 = !{!12573, !12574, !12576}
!12573 = !DILocalVariable(name: "thread", arg: 1, scope: !12571, file: !2128, line: 786, type: !2023)
!12574 = !DILocalVariable(name: "__i", scope: !12575, file: !2128, line: 788, type: !11596)
!12575 = distinct !DILexicalBlock(scope: !12571, file: !2128, line: 788, column: 2)
!12576 = !DILocalVariable(name: "__key", scope: !12575, file: !2128, line: 788, type: !11596)
!12577 = !DILocation(line: 0, scope: !12571)
!12578 = !DILocation(line: 0, scope: !12575)
!12579 = !DILocation(line: 0, scope: !11604, inlinedAt: !12580)
!12580 = distinct !DILocation(line: 788, column: 2, scope: !12575)
!12581 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12582)
!12582 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12580)
!12583 = !DILocation(line: 0, scope: !11613, inlinedAt: !12582)
!12584 = !DILocation(line: 789, column: 3, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12586, file: !2128, line: 788, column: 26)
!12586 = distinct !DILexicalBlock(scope: !12575, file: !2128, line: 788, column: 2)
!12587 = !DILocation(line: 0, scope: !11631, inlinedAt: !12588)
!12588 = distinct !DILocation(line: 788, column: 2, scope: !12586)
!12589 = !DILocation(line: 0, scope: !11639, inlinedAt: !12590)
!12590 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12588)
!12591 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12590)
!12592 = !DILocation(line: 791, column: 1, scope: !12571)
!12593 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2128, file: !2128, line: 816, type: !12594, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12596)
!12594 = !DISubroutineType(types: !12595)
!12595 = !{!103, !121, !2054, !12395}
!12596 = !{!12597, !12598, !12599, !12600, !12601, !12603}
!12597 = !DILocalVariable(name: "key", arg: 1, scope: !12593, file: !2128, line: 816, type: !121)
!12598 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12593, file: !2128, line: 816, type: !2054)
!12599 = !DILocalVariable(name: "timeout", arg: 3, scope: !12593, file: !2128, line: 816, type: !12395)
!12600 = !DILocalVariable(name: "ret", scope: !12593, file: !2128, line: 828, type: !103)
!12601 = !DILocalVariable(name: "__i", scope: !12602, file: !2128, line: 829, type: !11596)
!12602 = distinct !DILexicalBlock(scope: !12593, file: !2128, line: 829, column: 2)
!12603 = !DILocalVariable(name: "__key", scope: !12602, file: !2128, line: 829, type: !11596)
!12604 = !DILocation(line: 0, scope: !12593)
!12605 = !DILocation(line: 823, column: 14, scope: !12593)
!12606 = !DILocation(line: 823, column: 2, scope: !12593)
!12607 = !DILocation(line: 826, column: 20, scope: !12593)
!12608 = !DILocation(line: 826, column: 18, scope: !12593)
!12609 = !DILocation(line: 828, column: 12, scope: !12593)
!12610 = !DILocation(line: 0, scope: !12602)
!12611 = !DILocation(line: 0, scope: !11604, inlinedAt: !12612)
!12612 = distinct !DILocation(line: 829, column: 2, scope: !12602)
!12613 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12614)
!12614 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12612)
!12615 = !DILocation(line: 0, scope: !11613, inlinedAt: !12614)
!12616 = !DILocation(line: 830, column: 7, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12618, file: !2128, line: 830, column: 7)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !2128, line: 829, column: 26)
!12619 = distinct !DILexicalBlock(scope: !12602, file: !2128, line: 829, column: 2)
!12620 = !DILocation(line: 830, column: 26, scope: !12617)
!12621 = !DILocation(line: 830, column: 23, scope: !12617)
!12622 = !DILocation(line: 830, column: 7, scope: !12618)
!12623 = !DILocation(line: 831, column: 20, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12617, file: !2128, line: 830, column: 36)
!12625 = !DILocation(line: 832, column: 3, scope: !12624)
!12626 = !DILocation(line: 0, scope: !11631, inlinedAt: !12627)
!12627 = distinct !DILocation(line: 829, column: 2, scope: !12619)
!12628 = !DILocation(line: 0, scope: !11639, inlinedAt: !12629)
!12629 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12627)
!12630 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12629)
!12631 = !DILocation(line: 834, column: 2, scope: !12593)
!12632 = distinct !DISubprogram(name: "z_pend_curr", scope: !2128, file: !2128, line: 840, type: !12633, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12635)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{!103, !11607, !11596, !2054, !12395}
!12635 = !{!12636, !12637, !12638, !12639}
!12636 = !DILocalVariable(name: "lock", arg: 1, scope: !12632, file: !2128, line: 840, type: !11607)
!12637 = !DILocalVariable(name: "key", arg: 2, scope: !12632, file: !2128, line: 840, type: !11596)
!12638 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12632, file: !2128, line: 841, type: !2054)
!12639 = !DILocalVariable(name: "timeout", arg: 4, scope: !12632, file: !2128, line: 841, type: !12395)
!12640 = !DILocation(line: 0, scope: !12632)
!12641 = !DILocation(line: 844, column: 20, scope: !12632)
!12642 = !DILocation(line: 844, column: 18, scope: !12632)
!12643 = !DILocation(line: 0, scope: !11604, inlinedAt: !12644)
!12644 = distinct !DILocation(line: 856, column: 9, scope: !12632)
!12645 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12646)
!12646 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12644)
!12647 = !DILocation(line: 0, scope: !11613, inlinedAt: !12646)
!12648 = !DILocation(line: 857, column: 14, scope: !12632)
!12649 = !DILocation(line: 857, column: 2, scope: !12632)
!12650 = !DILocation(line: 0, scope: !12215, inlinedAt: !12651)
!12651 = distinct !DILocation(line: 859, column: 9, scope: !12632)
!12652 = !DILocation(line: 196, column: 9, scope: !12215, inlinedAt: !12651)
!12653 = !DILocation(line: 859, column: 2, scope: !12632)
!12654 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2128, file: !2128, line: 862, type: !12655, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12657)
!12655 = !DISubroutineType(types: !12656)
!12656 = !{!2023, !2054}
!12657 = !{!12658, !12659, !12660, !12662}
!12658 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12654, file: !2128, line: 862, type: !2054)
!12659 = !DILocalVariable(name: "thread", scope: !12654, file: !2128, line: 864, type: !2023)
!12660 = !DILocalVariable(name: "__i", scope: !12661, file: !2128, line: 866, type: !11596)
!12661 = distinct !DILexicalBlock(scope: !12654, file: !2128, line: 866, column: 2)
!12662 = !DILocalVariable(name: "__key", scope: !12661, file: !2128, line: 866, type: !11596)
!12663 = !DILocation(line: 0, scope: !12654)
!12664 = !DILocation(line: 0, scope: !12661)
!12665 = !DILocation(line: 0, scope: !11604, inlinedAt: !12666)
!12666 = distinct !DILocation(line: 866, column: 2, scope: !12661)
!12667 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12668)
!12668 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12666)
!12669 = !DILocation(line: 0, scope: !11613, inlinedAt: !12668)
!12670 = !DILocation(line: 867, column: 12, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12672, file: !2128, line: 866, column: 26)
!12672 = distinct !DILexicalBlock(scope: !12661, file: !2128, line: 866, column: 2)
!12673 = !DILocation(line: 869, column: 14, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12671, file: !2128, line: 869, column: 7)
!12675 = !DILocation(line: 869, column: 7, scope: !12671)
!12676 = !DILocation(line: 870, column: 4, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12674, file: !2128, line: 869, column: 23)
!12678 = !DILocation(line: 871, column: 3, scope: !12677)
!12679 = !DILocation(line: 0, scope: !11631, inlinedAt: !12680)
!12680 = distinct !DILocation(line: 866, column: 2, scope: !12672)
!12681 = !DILocation(line: 0, scope: !11639, inlinedAt: !12682)
!12682 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12680)
!12683 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12682)
!12684 = !DILocation(line: 874, column: 2, scope: !12654)
!12685 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2128, file: !2128, line: 877, type: !12655, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12686)
!12686 = !{!12687, !12688, !12689, !12691}
!12687 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12685, file: !2128, line: 877, type: !2054)
!12688 = !DILocalVariable(name: "thread", scope: !12685, file: !2128, line: 879, type: !2023)
!12689 = !DILocalVariable(name: "__i", scope: !12690, file: !2128, line: 881, type: !11596)
!12690 = distinct !DILexicalBlock(scope: !12685, file: !2128, line: 881, column: 2)
!12691 = !DILocalVariable(name: "__key", scope: !12690, file: !2128, line: 881, type: !11596)
!12692 = !DILocation(line: 0, scope: !12685)
!12693 = !DILocation(line: 0, scope: !12690)
!12694 = !DILocation(line: 0, scope: !11604, inlinedAt: !12695)
!12695 = distinct !DILocation(line: 881, column: 2, scope: !12690)
!12696 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12697)
!12697 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12695)
!12698 = !DILocation(line: 0, scope: !11613, inlinedAt: !12697)
!12699 = !DILocation(line: 882, column: 12, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !2128, line: 881, column: 26)
!12701 = distinct !DILexicalBlock(scope: !12690, file: !2128, line: 881, column: 2)
!12702 = !DILocation(line: 884, column: 14, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12700, file: !2128, line: 884, column: 7)
!12704 = !DILocation(line: 884, column: 7, scope: !12700)
!12705 = !DILocation(line: 885, column: 4, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12703, file: !2128, line: 884, column: 23)
!12707 = !DILocation(line: 886, column: 10, scope: !12706)
!12708 = !DILocation(line: 887, column: 3, scope: !12706)
!12709 = !DILocation(line: 0, scope: !11631, inlinedAt: !12710)
!12710 = distinct !DILocation(line: 881, column: 2, scope: !12701)
!12711 = !DILocation(line: 0, scope: !11639, inlinedAt: !12712)
!12712 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12710)
!12713 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12712)
!12714 = !DILocation(line: 890, column: 2, scope: !12685)
!12715 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2128, file: !2128, line: 893, type: !11562, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12716)
!12716 = !{!12717}
!12717 = !DILocalVariable(name: "thread", arg: 1, scope: !12715, file: !2128, line: 893, type: !2023)
!12718 = !DILocation(line: 0, scope: !12715)
!12719 = !DILocation(line: 0, scope: !12571, inlinedAt: !12720)
!12720 = distinct !DILocation(line: 895, column: 2, scope: !12715)
!12721 = !DILocation(line: 0, scope: !12575, inlinedAt: !12720)
!12722 = !DILocation(line: 0, scope: !11604, inlinedAt: !12723)
!12723 = distinct !DILocation(line: 788, column: 2, scope: !12575, inlinedAt: !12720)
!12724 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12725)
!12725 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12723)
!12726 = !DILocation(line: 0, scope: !11613, inlinedAt: !12725)
!12727 = !DILocation(line: 789, column: 3, scope: !12585, inlinedAt: !12720)
!12728 = !DILocation(line: 0, scope: !11631, inlinedAt: !12729)
!12729 = distinct !DILocation(line: 788, column: 2, scope: !12586, inlinedAt: !12720)
!12730 = !DILocation(line: 0, scope: !11639, inlinedAt: !12731)
!12731 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12729)
!12732 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12731)
!12733 = !DILocation(line: 896, column: 8, scope: !12715)
!12734 = !DILocation(line: 897, column: 1, scope: !12715)
!12735 = distinct !DISubprogram(name: "z_set_prio", scope: !2128, file: !2128, line: 902, type: !11924, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12736)
!12736 = !{!12737, !12738, !12739, !12740, !12742}
!12737 = !DILocalVariable(name: "thread", arg: 1, scope: !12735, file: !2128, line: 902, type: !2023)
!12738 = !DILocalVariable(name: "prio", arg: 2, scope: !12735, file: !2128, line: 902, type: !103)
!12739 = !DILocalVariable(name: "need_sched", scope: !12735, file: !2128, line: 904, type: !157)
!12740 = !DILocalVariable(name: "__i", scope: !12741, file: !2128, line: 906, type: !11596)
!12741 = distinct !DILexicalBlock(scope: !12735, file: !2128, line: 906, column: 2)
!12742 = !DILocalVariable(name: "__key", scope: !12741, file: !2128, line: 906, type: !11596)
!12743 = !DILocation(line: 0, scope: !12735)
!12744 = !DILocation(line: 0, scope: !12741)
!12745 = !DILocation(line: 0, scope: !11604, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 906, column: 2, scope: !12741)
!12747 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12748)
!12748 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12746)
!12749 = !DILocation(line: 0, scope: !11613, inlinedAt: !12748)
!12750 = !DILocation(line: 907, column: 16, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12752, file: !2128, line: 906, column: 26)
!12752 = distinct !DILexicalBlock(scope: !12741, file: !2128, line: 906, column: 2)
!12753 = !DILocation(line: 909, column: 7, scope: !12751)
!12754 = !DILocation(line: 0, scope: !11773, inlinedAt: !12755)
!12755 = distinct !DILocation(line: 912, column: 5, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12757, file: !2128, line: 911, column: 63)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !2128, line: 911, column: 8)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !2128, line: 909, column: 19)
!12759 = distinct !DILexicalBlock(scope: !12751, file: !2128, line: 909, column: 7)
!12760 = !DILocation(line: 266, column: 28, scope: !11773, inlinedAt: !12755)
!12761 = !DILocation(line: 0, scope: !11781, inlinedAt: !12762)
!12762 = distinct !DILocation(line: 268, column: 3, scope: !11785, inlinedAt: !12755)
!12763 = !DILocation(line: 234, column: 2, scope: !11781, inlinedAt: !12762)
!12764 = !DILocation(line: 913, column: 23, scope: !12756)
!12765 = !DILocation(line: 0, scope: !11790, inlinedAt: !12766)
!12766 = distinct !DILocation(line: 914, column: 5, scope: !12756)
!12767 = !DILocation(line: 252, column: 28, scope: !11790, inlinedAt: !12766)
!12768 = !DILocation(line: 0, scope: !11797, inlinedAt: !12769)
!12769 = distinct !DILocation(line: 254, column: 3, scope: !11801, inlinedAt: !12766)
!12770 = !DILocation(line: 0, scope: !11804, inlinedAt: !12771)
!12771 = distinct !DILocation(line: 229, column: 2, scope: !11797, inlinedAt: !12769)
!12772 = !DILocation(line: 188, column: 2, scope: !11814, inlinedAt: !12771)
!12773 = !DILocation(line: 188, column: 2, scope: !11816, inlinedAt: !12771)
!12774 = !DILocation(line: 0, scope: !11814, inlinedAt: !12771)
!12775 = !DILocation(line: 189, column: 7, scope: !11819, inlinedAt: !12771)
!12776 = !DILocation(line: 189, column: 35, scope: !11819, inlinedAt: !12771)
!12777 = !DILocation(line: 189, column: 7, scope: !11820, inlinedAt: !12771)
!12778 = !DILocation(line: 190, column: 4, scope: !11824, inlinedAt: !12771)
!12779 = !DILocation(line: 192, column: 4, scope: !11824, inlinedAt: !12771)
!12780 = distinct !{!12780, !12772, !12781}
!12781 = !DILocation(line: 194, column: 2, scope: !11814, inlinedAt: !12771)
!12782 = !DILocation(line: 196, column: 2, scope: !11804, inlinedAt: !12771)
!12783 = !DILocation(line: 197, column: 1, scope: !11804, inlinedAt: !12771)
!12784 = !DILocation(line: 918, column: 4, scope: !12758)
!12785 = !DILocation(line: 919, column: 3, scope: !12758)
!12786 = !DILocation(line: 920, column: 22, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12759, file: !2128, line: 919, column: 10)
!12788 = !DILocation(line: 0, scope: !11631, inlinedAt: !12789)
!12789 = distinct !DILocation(line: 906, column: 2, scope: !12752)
!12790 = !DILocation(line: 0, scope: !11639, inlinedAt: !12791)
!12791 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12789)
!12792 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12791)
!12793 = !DILocation(line: 926, column: 2, scope: !12735)
!12794 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2128, file: !2128, line: 929, type: !12795, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12797)
!12795 = !DISubroutineType(types: !12796)
!12796 = !{null, !2023, !103}
!12797 = !{!12798, !12799, !12800}
!12798 = !DILocalVariable(name: "thread", arg: 1, scope: !12794, file: !2128, line: 929, type: !2023)
!12799 = !DILocalVariable(name: "prio", arg: 2, scope: !12794, file: !2128, line: 929, type: !103)
!12800 = !DILocalVariable(name: "need_sched", scope: !12794, file: !2128, line: 931, type: !157)
!12801 = !DILocation(line: 0, scope: !12794)
!12802 = !DILocation(line: 931, column: 20, scope: !12794)
!12803 = !DILocation(line: 935, column: 17, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12794, file: !2128, line: 935, column: 6)
!12805 = !DILocation(line: 935, column: 20, scope: !12804)
!12806 = !DILocation(line: 935, column: 35, scope: !12804)
!12807 = !DILocation(line: 935, column: 48, scope: !12804)
!12808 = !DILocation(line: 935, column: 6, scope: !12794)
!12809 = !DILocation(line: 936, column: 3, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12804, file: !2128, line: 935, column: 55)
!12811 = !DILocation(line: 937, column: 2, scope: !12810)
!12812 = !DILocation(line: 938, column: 1, scope: !12794)
!12813 = distinct !DISubprogram(name: "k_sched_lock", scope: !2128, file: !2128, line: 987, type: !2843, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12814)
!12814 = !{!12815, !12817}
!12815 = !DILocalVariable(name: "__i", scope: !12816, file: !2128, line: 989, type: !11596)
!12816 = distinct !DILexicalBlock(scope: !12813, file: !2128, line: 989, column: 2)
!12817 = !DILocalVariable(name: "__key", scope: !12816, file: !2128, line: 989, type: !11596)
!12818 = !DILocation(line: 0, scope: !12816)
!12819 = !DILocation(line: 0, scope: !11604, inlinedAt: !12820)
!12820 = distinct !DILocation(line: 989, column: 2, scope: !12816)
!12821 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12822)
!12822 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12820)
!12823 = !DILocation(line: 0, scope: !11613, inlinedAt: !12822)
!12824 = !DILocation(line: 992, column: 3, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12826, file: !2128, line: 989, column: 26)
!12826 = distinct !DILexicalBlock(scope: !12816, file: !2128, line: 989, column: 2)
!12827 = !DILocation(line: 0, scope: !11631, inlinedAt: !12828)
!12828 = distinct !DILocation(line: 989, column: 2, scope: !12826)
!12829 = !DILocation(line: 0, scope: !11639, inlinedAt: !12830)
!12830 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12828)
!12831 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12830)
!12832 = !DILocation(line: 994, column: 1, scope: !12813)
!12833 = distinct !DISubprogram(name: "z_sched_lock", scope: !10876, file: !10876, line: 251, type: !2843, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!12834 = !DILocation(line: 256, column: 4, scope: !12833)
!12835 = !DILocation(line: 256, column: 19, scope: !12833)
!12836 = !DILocation(line: 256, column: 2, scope: !12833)
!12837 = !DILocation(line: 258, column: 2, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12833, file: !10876, line: 258, column: 2)
!12839 = !{i64 2154865946}
!12840 = !DILocation(line: 259, column: 1, scope: !12833)
!12841 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2128, file: !2128, line: 996, type: !2843, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12842)
!12842 = !{!12843, !12845}
!12843 = !DILocalVariable(name: "__i", scope: !12844, file: !2128, line: 998, type: !11596)
!12844 = distinct !DILexicalBlock(scope: !12841, file: !2128, line: 998, column: 2)
!12845 = !DILocalVariable(name: "__key", scope: !12844, file: !2128, line: 998, type: !11596)
!12846 = !DILocation(line: 0, scope: !12844)
!12847 = !DILocation(line: 0, scope: !11604, inlinedAt: !12848)
!12848 = distinct !DILocation(line: 998, column: 2, scope: !12844)
!12849 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !12850)
!12850 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !12848)
!12851 = !DILocation(line: 0, scope: !11613, inlinedAt: !12850)
!12852 = !DILocation(line: 1002, column: 5, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !2128, line: 998, column: 26)
!12854 = distinct !DILexicalBlock(scope: !12844, file: !2128, line: 998, column: 2)
!12855 = !DILocation(line: 1002, column: 20, scope: !12853)
!12856 = !DILocation(line: 1002, column: 3, scope: !12853)
!12857 = !DILocation(line: 1003, column: 3, scope: !12853)
!12858 = !DILocation(line: 0, scope: !11631, inlinedAt: !12859)
!12859 = distinct !DILocation(line: 998, column: 2, scope: !12854)
!12860 = !DILocation(line: 0, scope: !11639, inlinedAt: !12861)
!12861 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !12859)
!12862 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !12861)
!12863 = !DILocation(line: 1011, column: 2, scope: !12841)
!12864 = !DILocation(line: 1012, column: 1, scope: !12841)
!12865 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2128, file: !2128, line: 1014, type: !11912, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!12866 = !DILocation(line: 1028, column: 25, scope: !12865)
!12867 = !DILocation(line: 1028, column: 2, scope: !12865)
!12868 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2128, file: !2128, line: 1155, type: !12869, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12871)
!12869 = !DISubroutineType(types: !12870)
!12870 = !{!157, !2052, !2052}
!12871 = !{!12872, !12873, !12874, !12875, !12876}
!12872 = !DILocalVariable(name: "a", arg: 1, scope: !12868, file: !2128, line: 1155, type: !2052)
!12873 = !DILocalVariable(name: "b", arg: 2, scope: !12868, file: !2128, line: 1155, type: !2052)
!12874 = !DILocalVariable(name: "thread_a", scope: !12868, file: !2128, line: 1157, type: !2023)
!12875 = !DILocalVariable(name: "thread_b", scope: !12868, file: !2128, line: 1157, type: !2023)
!12876 = !DILocalVariable(name: "cmp", scope: !12868, file: !2128, line: 1158, type: !586)
!12877 = !DILocation(line: 0, scope: !12868)
!12878 = !DILocation(line: 1160, column: 13, scope: !12868)
!12879 = !DILocation(line: 1161, column: 13, scope: !12868)
!12880 = !DILocation(line: 1163, column: 8, scope: !12868)
!12881 = !DILocation(line: 1165, column: 10, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12868, file: !2128, line: 1165, column: 6)
!12883 = !DILocation(line: 1165, column: 6, scope: !12868)
!12884 = !DILocation(line: 1167, column: 17, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12882, file: !2128, line: 1167, column: 13)
!12886 = !DILocation(line: 1167, column: 13, scope: !12882)
!12887 = !DILocation(line: 1170, column: 25, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12885, file: !2128, line: 1169, column: 9)
!12889 = !DILocation(line: 1170, column: 52, scope: !12888)
!12890 = !DILocation(line: 1170, column: 35, scope: !12888)
!12891 = !DILocation(line: 1170, column: 3, scope: !12888)
!12892 = !DILocation(line: 0, scope: !12882)
!12893 = !DILocation(line: 1173, column: 1, scope: !12868)
!12894 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2128, file: !2128, line: 1175, type: !12895, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12910)
!12895 = !DISubroutineType(types: !12896)
!12896 = !{null, !12897, !2023}
!12897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12898, size: 32)
!12898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !12899, line: 37, size: 128, elements: !12900)
!12899 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12900 = !{!12901, !12909}
!12901 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !12898, file: !12899, line: 38, baseType: !12902, size: 96)
!12902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !12903)
!12903 = !{!12904, !12905, !12908}
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12902, file: !237, line: 84, baseType: !2052, size: 32)
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !12902, file: !237, line: 85, baseType: !12906, size: 32, offset: 32)
!12906 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !12907)
!12907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12869, size: 32)
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !12902, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !12898, file: !12899, line: 39, baseType: !103, size: 32, offset: 96)
!12910 = !{!12911, !12912, !12913, !12914, !12923}
!12911 = !DILocalVariable(name: "pq", arg: 1, scope: !12894, file: !2128, line: 1175, type: !12897)
!12912 = !DILocalVariable(name: "thread", arg: 2, scope: !12894, file: !2128, line: 1175, type: !2023)
!12913 = !DILocalVariable(name: "t", scope: !12894, file: !2128, line: 1177, type: !2023)
!12914 = !DILocalVariable(name: "__f", scope: !12915, file: !2128, line: 1190, type: !12918)
!12915 = distinct !DILexicalBlock(scope: !12916, file: !2128, line: 1190, column: 3)
!12916 = distinct !DILexicalBlock(scope: !12917, file: !2128, line: 1189, column: 27)
!12917 = distinct !DILexicalBlock(scope: !12894, file: !2128, line: 1189, column: 6)
!12918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !12919)
!12919 = !{!12920, !12921, !12922}
!12920 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !12918, file: !237, line: 156, baseType: !2123, size: 32)
!12921 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !12918, file: !237, line: 157, baseType: !1675, size: 32, offset: 32)
!12922 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12918, file: !237, line: 158, baseType: !586, size: 32, offset: 64)
!12923 = !DILocalVariable(name: "n", scope: !12924, file: !2128, line: 1190, type: !2052)
!12924 = distinct !DILexicalBlock(scope: !12925, file: !2128, line: 1190, column: 3)
!12925 = distinct !DILexicalBlock(scope: !12915, file: !2128, line: 1190, column: 3)
!12926 = !DILocation(line: 0, scope: !12894)
!12927 = !DILocation(line: 1181, column: 31, scope: !12894)
!12928 = !DILocation(line: 1181, column: 45, scope: !12894)
!12929 = !DILocation(line: 1181, column: 15, scope: !12894)
!12930 = !DILocation(line: 1181, column: 25, scope: !12894)
!12931 = !DILocation(line: 1189, column: 11, scope: !12917)
!12932 = !DILocation(line: 1189, column: 7, scope: !12917)
!12933 = !DILocation(line: 1189, column: 6, scope: !12894)
!12934 = !DILocation(line: 1190, column: 3, scope: !12915)
!12935 = !DILocation(line: 1190, column: 3, scope: !12924)
!12936 = !DILocation(line: 0, scope: !12924)
!12937 = !DILocation(line: 1190, column: 3, scope: !12925)
!12938 = !DILocation(line: 1193, column: 2, scope: !12916)
!12939 = !DILocation(line: 1191, column: 42, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12925, file: !2128, line: 1190, column: 54)
!12941 = !DILocation(line: 1191, column: 12, scope: !12940)
!12942 = !DILocation(line: 1191, column: 22, scope: !12940)
!12943 = distinct !{!12943, !12934, !12944}
!12944 = !DILocation(line: 1192, column: 3, scope: !12915)
!12945 = !DILocation(line: 1195, column: 17, scope: !12894)
!12946 = !DILocation(line: 1195, column: 37, scope: !12894)
!12947 = !DILocation(line: 1195, column: 2, scope: !12894)
!12948 = !DILocation(line: 1196, column: 1, scope: !12894)
!12949 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !12950, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!2052, !12952, !12953}
!12952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12902, size: 32)
!12953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12918, size: 32)
!12954 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !12955, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12955 = !DISubroutineType(types: !12956)
!12956 = !{null, !12952, !2052}
!12957 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2128, file: !2128, line: 1198, type: !12895, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12958)
!12958 = !{!12959, !12960}
!12959 = !DILocalVariable(name: "pq", arg: 1, scope: !12957, file: !2128, line: 1198, type: !12897)
!12960 = !DILocalVariable(name: "thread", arg: 2, scope: !12957, file: !2128, line: 1198, type: !2023)
!12961 = !DILocation(line: 0, scope: !12957)
!12962 = !DILocation(line: 1202, column: 17, scope: !12957)
!12963 = !DILocation(line: 1202, column: 37, scope: !12957)
!12964 = !DILocation(line: 1202, column: 2, scope: !12957)
!12965 = !DILocation(line: 1204, column: 16, scope: !12966)
!12966 = distinct !DILexicalBlock(scope: !12957, file: !2128, line: 1204, column: 6)
!12967 = !DILocation(line: 1204, column: 7, scope: !12966)
!12968 = !DILocation(line: 1204, column: 6, scope: !12957)
!12969 = !DILocation(line: 1205, column: 7, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12966, file: !2128, line: 1204, column: 22)
!12971 = !DILocation(line: 1205, column: 22, scope: !12970)
!12972 = !DILocation(line: 1206, column: 2, scope: !12970)
!12973 = !DILocation(line: 1207, column: 1, scope: !12957)
!12974 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !12955, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12975 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2128, file: !2128, line: 1209, type: !12976, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12978)
!12976 = !DISubroutineType(types: !12977)
!12977 = !{!2023, !12897}
!12978 = !{!12979, !12980, !12981}
!12979 = !DILocalVariable(name: "pq", arg: 1, scope: !12975, file: !2128, line: 1209, type: !12897)
!12980 = !DILocalVariable(name: "thread", scope: !12975, file: !2128, line: 1211, type: !2023)
!12981 = !DILocalVariable(name: "n", scope: !12975, file: !2128, line: 1212, type: !2052)
!12982 = !DILocation(line: 0, scope: !12975)
!12983 = !DILocation(line: 1212, column: 37, scope: !12975)
!12984 = !DILocation(line: 1212, column: 21, scope: !12975)
!12985 = !DILocation(line: 1217, column: 2, scope: !12975)
!12986 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !12987, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !12989)
!12987 = !DISubroutineType(types: !12988)
!12988 = !{!2052, !12952}
!12989 = !{!12990}
!12990 = !DILocalVariable(name: "tree", arg: 1, scope: !12986, file: !237, line: 115, type: !12952)
!12991 = !DILocation(line: 0, scope: !12986)
!12992 = !DILocation(line: 117, column: 9, scope: !12986)
!12993 = !DILocation(line: 117, column: 2, scope: !12986)
!12994 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !12995, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12995 = !DISubroutineType(types: !12996)
!12996 = !{!2052, !12952, !154}
!12997 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2128, file: !2128, line: 1246, type: !12998, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13008)
!12998 = !DISubroutineType(types: !12999)
!12999 = !{!2023, !13000}
!13000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13001, size: 32)
!13001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !12899, line: 53, size: 2080, elements: !13002)
!13002 = !{!13003, !13007}
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13001, file: !12899, line: 54, baseType: !13004, size: 2048)
!13004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 2048, elements: !13005)
!13005 = !{!13006}
!13006 = !DISubrange(count: 32)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13001, file: !12899, line: 55, baseType: !32, size: 32, offset: 2048)
!13008 = !{!13009, !13010, !13011, !13012}
!13009 = !DILocalVariable(name: "pq", arg: 1, scope: !12997, file: !2128, line: 1246, type: !13000)
!13010 = !DILocalVariable(name: "thread", scope: !12997, file: !2128, line: 1252, type: !2023)
!13011 = !DILocalVariable(name: "l", scope: !12997, file: !2128, line: 1253, type: !11807)
!13012 = !DILocalVariable(name: "n", scope: !12997, file: !2128, line: 1254, type: !2124)
!13013 = !DILocation(line: 0, scope: !12997)
!13014 = !DILocation(line: 1248, column: 11, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12997, file: !2128, line: 1248, column: 6)
!13016 = !DILocation(line: 1248, column: 7, scope: !13015)
!13017 = !DILocation(line: 1248, column: 6, scope: !12997)
!13018 = !DILocation(line: 1253, column: 31, scope: !12997)
!13019 = !DILocation(line: 1253, column: 20, scope: !12997)
!13020 = !DILocation(line: 1254, column: 19, scope: !12997)
!13021 = !DILocation(line: 1260, column: 1, scope: !12997)
!13022 = distinct !DISubprogram(name: "z_unpend_all", scope: !2128, file: !2128, line: 1262, type: !13023, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13025)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{!103, !2054}
!13025 = !{!13026, !13027, !13028}
!13026 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13022, file: !2128, line: 1262, type: !2054)
!13027 = !DILocalVariable(name: "need_sched", scope: !13022, file: !2128, line: 1264, type: !103)
!13028 = !DILocalVariable(name: "thread", scope: !13022, file: !2128, line: 1265, type: !2023)
!13029 = !DILocation(line: 0, scope: !13022)
!13030 = !DILocation(line: 1267, column: 19, scope: !13022)
!13031 = !DILocation(line: 1267, column: 41, scope: !13022)
!13032 = !DILocation(line: 1267, column: 2, scope: !13022)
!13033 = !DILocation(line: 1268, column: 3, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13022, file: !2128, line: 1267, column: 50)
!13035 = !DILocation(line: 1269, column: 3, scope: !13034)
!13036 = distinct !{!13036, !13032, !13037}
!13037 = !DILocation(line: 1271, column: 2, scope: !13022)
!13038 = !DILocation(line: 1273, column: 2, scope: !13022)
!13039 = distinct !DISubprogram(name: "z_waitq_head", scope: !11202, file: !11202, line: 52, type: !12655, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13040)
!13040 = !{!13041}
!13041 = !DILocalVariable(name: "w", arg: 1, scope: !13039, file: !11202, line: 52, type: !2054)
!13042 = !DILocation(line: 0, scope: !13039)
!13043 = !DILocation(line: 54, column: 52, scope: !13039)
!13044 = !DILocation(line: 54, column: 28, scope: !13039)
!13045 = !DILocation(line: 54, column: 9, scope: !13039)
!13046 = !DILocation(line: 54, column: 2, scope: !13039)
!13047 = distinct !DISubprogram(name: "init_ready_q", scope: !2128, file: !2128, line: 1276, type: !13048, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13055)
!13048 = !DISubroutineType(types: !13049)
!13049 = !{null, !13050}
!13050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13051, size: 32)
!13051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !13052)
!13052 = !{!13053, !13054}
!13053 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13051, file: !247, line: 86, baseType: !2023, size: 32)
!13054 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13051, file: !247, line: 90, baseType: !2059, size: 64, offset: 32)
!13055 = !{!13056}
!13056 = !DILocalVariable(name: "rq", arg: 1, scope: !13047, file: !2128, line: 1276, type: !13050)
!13057 = !DILocation(line: 0, scope: !13047)
!13058 = !DILocation(line: 1289, column: 22, scope: !13047)
!13059 = !DILocation(line: 1289, column: 2, scope: !13047)
!13060 = !DILocation(line: 1291, column: 1, scope: !13047)
!13061 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !13062, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13064)
!13062 = !DISubroutineType(types: !13063)
!13063 = !{null, !11807}
!13064 = !{!13065}
!13065 = !DILocalVariable(name: "list", arg: 1, scope: !13061, file: !221, line: 197, type: !11807)
!13066 = !DILocation(line: 0, scope: !13061)
!13067 = !DILocation(line: 199, column: 8, scope: !13061)
!13068 = !DILocation(line: 199, column: 13, scope: !13061)
!13069 = !DILocation(line: 200, column: 8, scope: !13061)
!13070 = !DILocation(line: 200, column: 13, scope: !13061)
!13071 = !DILocation(line: 201, column: 1, scope: !13061)
!13072 = distinct !DISubprogram(name: "z_sched_init", scope: !2128, file: !2128, line: 1293, type: !2843, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!13073 = !DILocation(line: 1302, column: 2, scope: !13072)
!13074 = !DILocation(line: 1306, column: 2, scope: !13072)
!13075 = !DILocation(line: 1309, column: 1, scope: !13072)
!13076 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2128, file: !2128, line: 1311, type: !13077, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13080)
!13077 = !DISubroutineType(types: !13078)
!13078 = !{!103, !13079}
!13079 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2023)
!13080 = !{!13081}
!13081 = !DILocalVariable(name: "thread", arg: 1, scope: !13076, file: !2128, line: 1311, type: !13079)
!13082 = !DILocation(line: 0, scope: !13076)
!13083 = !DILocation(line: 1313, column: 22, scope: !13076)
!13084 = !DILocation(line: 1313, column: 9, scope: !13076)
!13085 = !DILocation(line: 1313, column: 2, scope: !13076)
!13086 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2128, file: !2128, line: 1325, type: !13087, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13089)
!13087 = !DISubroutineType(types: !13088)
!13088 = !{null, !13079, !103}
!13089 = !{!13090, !13091, !13092}
!13090 = !DILocalVariable(name: "thread", arg: 1, scope: !13086, file: !2128, line: 1325, type: !13079)
!13091 = !DILocalVariable(name: "prio", arg: 2, scope: !13086, file: !2128, line: 1325, type: !103)
!13092 = !DILocalVariable(name: "th", scope: !13086, file: !2128, line: 1334, type: !2023)
!13093 = !DILocation(line: 0, scope: !13086)
!13094 = !DILocation(line: 1336, column: 2, scope: !13086)
!13095 = !DILocation(line: 1337, column: 1, scope: !13086)
!13096 = distinct !DISubprogram(name: "k_can_yield", scope: !2128, file: !2128, line: 1384, type: !5752, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!13097 = !DILocation(line: 1386, column: 11, scope: !13096)
!13098 = !DILocation(line: 1386, column: 29, scope: !13096)
!13099 = !DILocation(line: 1386, column: 32, scope: !13096)
!13100 = !DILocation(line: 1386, column: 46, scope: !13096)
!13101 = !DILocation(line: 1387, column: 28, scope: !13096)
!13102 = !DILocation(line: 1387, column: 4, scope: !13096)
!13103 = !DILocation(line: 1386, column: 2, scope: !13096)
!13104 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !5752, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!13105 = !DILocation(line: 993, column: 10, scope: !13104)
!13106 = !DILocation(line: 993, column: 2, scope: !13104)
!13107 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2128, file: !2128, line: 1390, type: !2843, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13108)
!13108 = !{!13109}
!13109 = !DILocalVariable(name: "key", scope: !13107, file: !2128, line: 1396, type: !11596)
!13110 = !DILocation(line: 0, scope: !11604, inlinedAt: !13111)
!13111 = distinct !DILocation(line: 1396, column: 25, scope: !13107)
!13112 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !13113)
!13113 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !13111)
!13114 = !DILocation(line: 0, scope: !11613, inlinedAt: !13113)
!13115 = !DILocation(line: 0, scope: !13107)
!13116 = !DILocation(line: 1400, column: 18, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !2128, line: 1399, column: 36)
!13118 = distinct !DILexicalBlock(scope: !13107, file: !2128, line: 1398, column: 6)
!13119 = !DILocation(line: 0, scope: !11773, inlinedAt: !13120)
!13120 = distinct !DILocation(line: 1400, column: 3, scope: !13117)
!13121 = !DILocation(line: 266, column: 15, scope: !11773, inlinedAt: !13120)
!13122 = !DILocation(line: 266, column: 28, scope: !11773, inlinedAt: !13120)
!13123 = !DILocation(line: 0, scope: !11781, inlinedAt: !13124)
!13124 = distinct !DILocation(line: 268, column: 3, scope: !11785, inlinedAt: !13120)
!13125 = !DILocation(line: 234, column: 2, scope: !11781, inlinedAt: !13124)
!13126 = !DILocation(line: 1402, column: 15, scope: !13107)
!13127 = !DILocation(line: 0, scope: !11790, inlinedAt: !13128)
!13128 = distinct !DILocation(line: 1402, column: 2, scope: !13107)
!13129 = !DILocation(line: 252, column: 15, scope: !11790, inlinedAt: !13128)
!13130 = !DILocation(line: 252, column: 28, scope: !11790, inlinedAt: !13128)
!13131 = !DILocation(line: 0, scope: !11797, inlinedAt: !13132)
!13132 = distinct !DILocation(line: 254, column: 3, scope: !11801, inlinedAt: !13128)
!13133 = !DILocation(line: 0, scope: !11804, inlinedAt: !13134)
!13134 = distinct !DILocation(line: 229, column: 2, scope: !11797, inlinedAt: !13132)
!13135 = !DILocation(line: 188, column: 2, scope: !11814, inlinedAt: !13134)
!13136 = !DILocation(line: 188, column: 2, scope: !11816, inlinedAt: !13134)
!13137 = !DILocation(line: 0, scope: !11814, inlinedAt: !13134)
!13138 = !DILocation(line: 189, column: 7, scope: !11819, inlinedAt: !13134)
!13139 = !DILocation(line: 189, column: 35, scope: !11819, inlinedAt: !13134)
!13140 = !DILocation(line: 189, column: 7, scope: !11820, inlinedAt: !13134)
!13141 = !DILocation(line: 191, column: 21, scope: !11824, inlinedAt: !13134)
!13142 = !DILocation(line: 190, column: 4, scope: !11824, inlinedAt: !13134)
!13143 = !DILocation(line: 192, column: 4, scope: !11824, inlinedAt: !13134)
!13144 = distinct !{!13144, !13135, !13145}
!13145 = !DILocation(line: 194, column: 2, scope: !11814, inlinedAt: !13134)
!13146 = !DILocation(line: 196, column: 37, scope: !11804, inlinedAt: !13134)
!13147 = !DILocation(line: 196, column: 2, scope: !11804, inlinedAt: !13134)
!13148 = !DILocation(line: 197, column: 1, scope: !11804, inlinedAt: !13134)
!13149 = !DILocation(line: 1403, column: 2, scope: !13107)
!13150 = !DILocation(line: 0, scope: !12215, inlinedAt: !13151)
!13151 = distinct !DILocation(line: 1404, column: 2, scope: !13107)
!13152 = !DILocation(line: 196, column: 9, scope: !12215, inlinedAt: !13151)
!13153 = !DILocation(line: 1405, column: 1, scope: !13107)
!13154 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2128, file: !2128, line: 1459, type: !13155, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13157)
!13155 = !DISubroutineType(types: !13156)
!13156 = !{!586, !12395}
!13157 = !{!13158, !13159, !13160}
!13158 = !DILocalVariable(name: "timeout", arg: 1, scope: !13154, file: !2128, line: 1459, type: !12395)
!13159 = !DILocalVariable(name: "ticks", scope: !13154, file: !2128, line: 1461, type: !1381)
!13160 = !DILocalVariable(name: "ret", scope: !13154, file: !2128, line: 1480, type: !586)
!13161 = !DILocation(line: 0, scope: !13154)
!13162 = !DILocation(line: 1468, column: 6, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13154, file: !2128, line: 1468, column: 6)
!13164 = !DILocation(line: 1468, column: 6, scope: !13154)
!13165 = !DILocation(line: 1469, column: 20, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13163, file: !2128, line: 1468, column: 40)
!13167 = !DILocation(line: 1469, column: 3, scope: !13166)
!13168 = !DILocation(line: 1473, column: 3, scope: !13166)
!13169 = !DILocation(line: 1478, column: 10, scope: !13154)
!13170 = !DILocation(line: 1480, column: 16, scope: !13154)
!13171 = !DILocation(line: 1485, column: 1, scope: !13154)
!13172 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3013, file: !3013, line: 310, type: !13173, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13175)
!13173 = !DISubroutineType(types: !13174)
!13174 = !{null, !13079}
!13175 = !{!13176}
!13176 = !DILocalVariable(name: "thread", arg: 1, scope: !13172, file: !3013, line: 310, type: !13079)
!13177 = !DILocation(line: 0, scope: !13172)
!13178 = !DILocation(line: 319, column: 2, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13172, file: !3013, line: 319, column: 2)
!13180 = !{i64 2154784335}
!13181 = !DILocation(line: 320, column: 2, scope: !13172)
!13182 = !DILocation(line: 321, column: 1, scope: !13172)
!13183 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2128, file: !2128, line: 1415, type: !13184, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13186)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{!586, !1381}
!13186 = !{!13187, !13188, !13189, !13190}
!13187 = !DILocalVariable(name: "ticks", arg: 1, scope: !13183, file: !2128, line: 1415, type: !1381)
!13188 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13183, file: !2128, line: 1418, type: !121)
!13189 = !DILocalVariable(name: "timeout", scope: !13183, file: !2128, line: 1430, type: !12395)
!13190 = !DILocalVariable(name: "key", scope: !13183, file: !2128, line: 1437, type: !11596)
!13191 = !DILocation(line: 0, scope: !13183)
!13192 = !DILocation(line: 1425, column: 12, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13183, file: !2128, line: 1425, column: 6)
!13194 = !DILocation(line: 1425, column: 6, scope: !13183)
!13195 = !DILocation(line: 1426, column: 3, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13193, file: !2128, line: 1425, column: 18)
!13197 = !DILocation(line: 1427, column: 3, scope: !13196)
!13198 = !DILocation(line: 1431, column: 24, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13183, file: !2128, line: 1431, column: 6)
!13200 = !DILocation(line: 1431, column: 6, scope: !13183)
!13201 = !DILocation(line: 1432, column: 35, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13199, file: !2128, line: 1431, column: 30)
!13203 = !DILocation(line: 1432, column: 27, scope: !13202)
!13204 = !DILocation(line: 1433, column: 2, scope: !13202)
!13205 = !DILocation(line: 1434, column: 27, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13199, file: !2128, line: 1433, column: 9)
!13207 = !DILocation(line: 0, scope: !13199)
!13208 = !DILocation(line: 0, scope: !11604, inlinedAt: !13209)
!13209 = distinct !DILocation(line: 1437, column: 25, scope: !13183)
!13210 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !13211)
!13211 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !13209)
!13212 = !DILocation(line: 0, scope: !11613, inlinedAt: !13211)
!13213 = !DILocation(line: 1440, column: 20, scope: !13183)
!13214 = !DILocation(line: 1440, column: 18, scope: !13183)
!13215 = !DILocation(line: 1442, column: 2, scope: !13183)
!13216 = !DILocation(line: 1443, column: 23, scope: !13183)
!13217 = !DILocation(line: 1443, column: 2, scope: !13183)
!13218 = !DILocation(line: 1444, column: 29, scope: !13183)
!13219 = !DILocation(line: 1444, column: 2, scope: !13183)
!13220 = !DILocation(line: 0, scope: !12215, inlinedAt: !13221)
!13221 = distinct !DILocation(line: 1446, column: 8, scope: !13183)
!13222 = !DILocation(line: 196, column: 9, scope: !12215, inlinedAt: !13221)
!13223 = !DILocation(line: 1450, column: 10, scope: !13183)
!13224 = !DILocation(line: 1450, column: 45, scope: !13183)
!13225 = !DILocation(line: 1450, column: 43, scope: !13183)
!13226 = !DILocation(line: 1451, column: 6, scope: !13183)
!13227 = !DILocation(line: 1457, column: 1, scope: !13183)
!13228 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11437, file: !11437, line: 1103, type: !11438, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13229)
!13229 = !{!13230}
!13230 = !DILocalVariable(name: "t", arg: 1, scope: !13228, file: !11437, line: 1103, type: !1293)
!13231 = !DILocation(line: 0, scope: !13228)
!13232 = !DILocation(line: 0, scope: !11651, inlinedAt: !13233)
!13233 = distinct !DILocation(line: 1106, column: 9, scope: !13228)
!13234 = !DILocation(line: 139, column: 13, scope: !13235, inlinedAt: !13233)
!13235 = distinct !DILexicalBlock(scope: !13236, file: !11437, line: 138, column: 10)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !11437, line: 136, column: 7)
!13237 = distinct !DILexicalBlock(scope: !11672, file: !11437, line: 134, column: 17)
!13238 = !DILocation(line: 1106, column: 2, scope: !13228)
!13239 = distinct !DISubprogram(name: "k_yield", scope: !3013, file: !3013, line: 140, type: !2843, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!13240 = !DILocation(line: 148, column: 2, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13239, file: !3013, line: 148, column: 2)
!13242 = !{i64 2154783655}
!13243 = !DILocation(line: 149, column: 2, scope: !13239)
!13244 = !DILocation(line: 150, column: 1, scope: !13239)
!13245 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2128, file: !2128, line: 1495, type: !13246, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!586, !103}
!13248 = !{!13249, !13250}
!13249 = !DILocalVariable(name: "us", arg: 1, scope: !13245, file: !2128, line: 1495, type: !103)
!13250 = !DILocalVariable(name: "ticks", scope: !13245, file: !2128, line: 1497, type: !586)
!13251 = !DILocation(line: 0, scope: !13245)
!13252 = !DILocation(line: 1501, column: 31, scope: !13245)
!13253 = !DILocation(line: 1501, column: 10, scope: !13245)
!13254 = !DILocation(line: 1502, column: 23, scope: !13245)
!13255 = !DILocation(line: 1502, column: 10, scope: !13245)
!13256 = !DILocation(line: 1506, column: 31, scope: !13245)
!13257 = !DILocation(line: 1506, column: 9, scope: !13245)
!13258 = !DILocation(line: 1506, column: 2, scope: !13245)
!13259 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11437, file: !11437, line: 571, type: !11438, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13260)
!13260 = !{!13261}
!13261 = !DILocalVariable(name: "t", arg: 1, scope: !13259, file: !11437, line: 571, type: !1293)
!13262 = !DILocation(line: 0, scope: !13259)
!13263 = !DILocation(line: 0, scope: !11651, inlinedAt: !13264)
!13264 = distinct !DILocation(line: 574, column: 9, scope: !13259)
!13265 = !DILocation(line: 135, column: 5, scope: !13237, inlinedAt: !13264)
!13266 = !DILocation(line: 139, column: 13, scope: !13235, inlinedAt: !13264)
!13267 = !DILocation(line: 574, column: 2, scope: !13259)
!13268 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11437, file: !11437, line: 1187, type: !11438, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13269)
!13269 = !{!13270}
!13270 = !DILocalVariable(name: "t", arg: 1, scope: !13268, file: !11437, line: 1187, type: !1293)
!13271 = !DILocation(line: 0, scope: !13268)
!13272 = !DILocation(line: 0, scope: !11651, inlinedAt: !13273)
!13273 = distinct !DILocation(line: 1190, column: 9, scope: !13268)
!13274 = !DILocation(line: 145, column: 13, scope: !13275, inlinedAt: !13273)
!13275 = distinct !DILexicalBlock(scope: !11669, file: !11437, line: 144, column: 10)
!13276 = !DILocation(line: 1190, column: 2, scope: !13268)
!13277 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2128, file: !2128, line: 1517, type: !13173, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13278)
!13278 = !{!13279}
!13279 = !DILocalVariable(name: "thread", arg: 1, scope: !13277, file: !2128, line: 1517, type: !13079)
!13280 = !DILocation(line: 0, scope: !13277)
!13281 = !DILocation(line: 1521, column: 6, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13277, file: !2128, line: 1521, column: 6)
!13283 = !DILocation(line: 1521, column: 6, scope: !13277)
!13284 = !DILocation(line: 1525, column: 6, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13277, file: !2128, line: 1525, column: 6)
!13286 = !DILocation(line: 1525, column: 37, scope: !13285)
!13287 = !DILocation(line: 1525, column: 6, scope: !13277)
!13288 = !DILocation(line: 1527, column: 20, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13290, file: !2128, line: 1527, column: 7)
!13290 = distinct !DILexicalBlock(scope: !13285, file: !2128, line: 1525, column: 42)
!13291 = !DILocation(line: 1527, column: 33, scope: !13289)
!13292 = !DILocation(line: 1527, column: 7, scope: !13290)
!13293 = !DILocation(line: 1532, column: 2, scope: !13277)
!13294 = !DILocation(line: 1533, column: 2, scope: !13277)
!13295 = !DILocation(line: 1031, column: 3, scope: !12248, inlinedAt: !13296)
!13296 = distinct !DILocation(line: 48, column: 10, scope: !12252, inlinedAt: !13297)
!13297 = distinct !DILocation(line: 1537, column: 7, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13277, file: !2128, line: 1537, column: 6)
!13299 = !DILocation(line: 0, scope: !12248, inlinedAt: !13296)
!13300 = !DILocation(line: 48, column: 9, scope: !12252, inlinedAt: !13297)
!13301 = !DILocation(line: 1537, column: 6, scope: !13277)
!13302 = !DILocation(line: 1538, column: 3, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13298, file: !2128, line: 1537, column: 25)
!13304 = !DILocation(line: 1539, column: 2, scope: !13303)
!13305 = !DILocation(line: 1540, column: 1, scope: !13277)
!13306 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10876, file: !10876, line: 101, type: !11722, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13307)
!13307 = !{!13308}
!13308 = !DILocalVariable(name: "thread", arg: 1, scope: !13306, file: !10876, line: 101, type: !2023)
!13309 = !DILocation(line: 0, scope: !13306)
!13310 = !DILocation(line: 103, column: 23, scope: !13306)
!13311 = !DILocation(line: 103, column: 36, scope: !13306)
!13312 = !DILocation(line: 103, column: 55, scope: !13306)
!13313 = !DILocation(line: 103, column: 2, scope: !13306)
!13314 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2128, file: !2128, line: 1567, type: !13315, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!13079}
!13317 = !{!13318}
!13318 = !DILocalVariable(name: "ret", scope: !13314, file: !2128, line: 1577, type: !13079)
!13319 = !DILocation(line: 1577, column: 30, scope: !13314)
!13320 = !DILocation(line: 0, scope: !13314)
!13321 = !DILocation(line: 1582, column: 2, scope: !13314)
!13322 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2128, file: !2128, line: 1593, type: !6027, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !322)
!13323 = !DILocation(line: 1031, column: 3, scope: !12248, inlinedAt: !13324)
!13324 = distinct !DILocation(line: 48, column: 10, scope: !12252, inlinedAt: !13325)
!13325 = distinct !DILocation(line: 1595, column: 10, scope: !13322)
!13326 = !DILocation(line: 0, scope: !12248, inlinedAt: !13324)
!13327 = !DILocation(line: 48, column: 9, scope: !12252, inlinedAt: !13325)
!13328 = !DILocation(line: 1595, column: 27, scope: !13322)
!13329 = !DILocation(line: 1595, column: 41, scope: !13322)
!13330 = !DILocation(line: 1595, column: 30, scope: !13322)
!13331 = !DILocation(line: 1595, column: 2, scope: !13322)
!13332 = distinct !DISubprogram(name: "z_thread_abort", scope: !2128, file: !2128, line: 1725, type: !11562, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13333)
!13333 = !{!13334, !13335}
!13334 = !DILocalVariable(name: "thread", arg: 1, scope: !13332, file: !2128, line: 1725, type: !2023)
!13335 = !DILocalVariable(name: "key", scope: !13332, file: !2128, line: 1727, type: !11596)
!13336 = !DILocation(line: 0, scope: !13332)
!13337 = !DILocation(line: 0, scope: !11604, inlinedAt: !13338)
!13338 = distinct !DILocation(line: 1727, column: 25, scope: !13332)
!13339 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !13340)
!13340 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !13338)
!13341 = !DILocation(line: 0, scope: !11613, inlinedAt: !13340)
!13342 = !DILocation(line: 1729, column: 20, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13332, file: !2128, line: 1729, column: 6)
!13344 = !DILocation(line: 1729, column: 33, scope: !13343)
!13345 = !DILocation(line: 1729, column: 48, scope: !13343)
!13346 = !DILocation(line: 1729, column: 6, scope: !13332)
!13347 = !DILocation(line: 0, scope: !11631, inlinedAt: !13348)
!13348 = distinct !DILocation(line: 1730, column: 3, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13343, file: !2128, line: 1729, column: 54)
!13350 = !DILocation(line: 0, scope: !11639, inlinedAt: !13351)
!13351 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !13348)
!13352 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !13351)
!13353 = !DILocation(line: 1732, column: 3, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13349, file: !2128, line: 1732, column: 3)
!13355 = !{i64 2155521065, i64 2155521081, i64 2155521107, i64 2155521135, i64 2155521155}
!13356 = !DILocation(line: 1733, column: 3, scope: !13349)
!13357 = !DILocation(line: 1736, column: 20, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13332, file: !2128, line: 1736, column: 6)
!13359 = !DILocation(line: 1736, column: 33, scope: !13358)
!13360 = !DILocation(line: 1736, column: 49, scope: !13358)
!13361 = !DILocation(line: 1736, column: 6, scope: !13332)
!13362 = !DILocation(line: 0, scope: !11631, inlinedAt: !13363)
!13363 = distinct !DILocation(line: 1737, column: 3, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13358, file: !2128, line: 1736, column: 56)
!13365 = !DILocation(line: 0, scope: !11639, inlinedAt: !13366)
!13366 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !13363)
!13367 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !13366)
!13368 = !DILocation(line: 1738, column: 3, scope: !13364)
!13369 = !DILocation(line: 1775, column: 2, scope: !13332)
!13370 = !DILocation(line: 1776, column: 16, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13332, file: !2128, line: 1776, column: 6)
!13372 = !DILocation(line: 1776, column: 13, scope: !13371)
!13373 = !DILocation(line: 1776, column: 25, scope: !13371)
!13374 = !DILocation(line: 1031, column: 3, scope: !12248, inlinedAt: !13375)
!13375 = distinct !DILocation(line: 48, column: 10, scope: !12252, inlinedAt: !13376)
!13376 = distinct !DILocation(line: 1776, column: 29, scope: !13371)
!13377 = !DILocation(line: 0, scope: !12248, inlinedAt: !13375)
!13378 = !DILocation(line: 48, column: 9, scope: !12252, inlinedAt: !13376)
!13379 = !DILocation(line: 1776, column: 6, scope: !13332)
!13380 = !DILocation(line: 0, scope: !12215, inlinedAt: !13381)
!13381 = distinct !DILocation(line: 1777, column: 3, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13371, file: !2128, line: 1776, column: 47)
!13383 = !DILocation(line: 196, column: 9, scope: !12215, inlinedAt: !13381)
!13384 = !DILocation(line: 1779, column: 2, scope: !13382)
!13385 = !DILocation(line: 0, scope: !11631, inlinedAt: !13386)
!13386 = distinct !DILocation(line: 1780, column: 2, scope: !13332)
!13387 = !DILocation(line: 0, scope: !11639, inlinedAt: !13388)
!13388 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !13386)
!13389 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !13388)
!13390 = !DILocation(line: 1781, column: 1, scope: !13332)
!13391 = distinct !DISubprogram(name: "end_thread", scope: !2128, file: !2128, line: 1690, type: !11562, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13392)
!13392 = !{!13393}
!13393 = !DILocalVariable(name: "thread", arg: 1, scope: !13391, file: !2128, line: 1690, type: !2023)
!13394 = !DILocation(line: 0, scope: !13391)
!13395 = !DILocation(line: 1695, column: 20, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13391, file: !2128, line: 1695, column: 6)
!13397 = !DILocation(line: 1695, column: 33, scope: !13396)
!13398 = !DILocation(line: 1695, column: 49, scope: !13396)
!13399 = !DILocation(line: 1695, column: 6, scope: !13391)
!13400 = !DILocation(line: 1697, column: 29, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13396, file: !2128, line: 1695, column: 56)
!13402 = !DILocation(line: 1698, column: 7, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13401, file: !2128, line: 1698, column: 7)
!13404 = !DILocation(line: 1698, column: 7, scope: !13401)
!13405 = !DILocation(line: 0, scope: !11773, inlinedAt: !13406)
!13406 = distinct !DILocation(line: 1699, column: 4, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13403, file: !2128, line: 1698, column: 35)
!13408 = !DILocation(line: 266, column: 28, scope: !11773, inlinedAt: !13406)
!13409 = !DILocation(line: 0, scope: !11781, inlinedAt: !13410)
!13410 = distinct !DILocation(line: 268, column: 3, scope: !11785, inlinedAt: !13406)
!13411 = !DILocation(line: 234, column: 2, scope: !11781, inlinedAt: !13410)
!13412 = !DILocation(line: 1700, column: 3, scope: !13407)
!13413 = !DILocation(line: 1701, column: 20, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13401, file: !2128, line: 1701, column: 7)
!13415 = !DILocation(line: 1701, column: 30, scope: !13414)
!13416 = !DILocation(line: 1701, column: 7, scope: !13401)
!13417 = !DILocation(line: 1702, column: 4, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13414, file: !2128, line: 1701, column: 39)
!13419 = !DILocation(line: 1703, column: 3, scope: !13418)
!13420 = !DILocation(line: 1704, column: 9, scope: !13401)
!13421 = !DILocation(line: 1705, column: 23, scope: !13401)
!13422 = !DILocation(line: 1705, column: 3, scope: !13401)
!13423 = !DILocation(line: 1706, column: 3, scope: !13401)
!13424 = !DILocation(line: 1722, column: 2, scope: !13401)
!13425 = !DILocation(line: 1723, column: 1, scope: !13391)
!13426 = distinct !DISubprogram(name: "unpend_all", scope: !2128, file: !2128, line: 1674, type: !13427, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13429)
!13427 = !DISubroutineType(types: !13428)
!13428 = !{null, !2054}
!13429 = !{!13430, !13431}
!13430 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13426, file: !2128, line: 1674, type: !2054)
!13431 = !DILocalVariable(name: "thread", scope: !13426, file: !2128, line: 1676, type: !2023)
!13432 = !DILocation(line: 0, scope: !13426)
!13433 = !DILocation(line: 1678, column: 19, scope: !13426)
!13434 = !DILocation(line: 1678, column: 41, scope: !13426)
!13435 = !DILocation(line: 1678, column: 2, scope: !13426)
!13436 = !DILocation(line: 1679, column: 3, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13426, file: !2128, line: 1678, column: 50)
!13438 = !DILocation(line: 1680, column: 9, scope: !13437)
!13439 = !DILocalVariable(name: "thread", arg: 1, scope: !13440, file: !10896, line: 65, type: !2023)
!13440 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10896, file: !10896, line: 65, type: !13441, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13443)
!13441 = !DISubroutineType(types: !13442)
!13442 = !{null, !2023, !32}
!13443 = !{!13439, !13444}
!13444 = !DILocalVariable(name: "value", arg: 2, scope: !13440, file: !10896, line: 65, type: !32)
!13445 = !DILocation(line: 0, scope: !13440, inlinedAt: !13446)
!13446 = distinct !DILocation(line: 1681, column: 3, scope: !13437)
!13447 = !DILocation(line: 67, column: 15, scope: !13440, inlinedAt: !13446)
!13448 = !DILocation(line: 67, column: 33, scope: !13440, inlinedAt: !13446)
!13449 = !DILocation(line: 1682, column: 3, scope: !13437)
!13450 = distinct !{!13450, !13435, !13451}
!13451 = !DILocation(line: 1683, column: 2, scope: !13426)
!13452 = !DILocation(line: 1684, column: 1, scope: !13426)
!13453 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2128, file: !2128, line: 1794, type: !13454, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13456)
!13454 = !DISubroutineType(types: !13455)
!13455 = !{!103, !2023, !12395}
!13456 = !{!13457, !13458, !13459, !13460}
!13457 = !DILocalVariable(name: "thread", arg: 1, scope: !13453, file: !2128, line: 1794, type: !2023)
!13458 = !DILocalVariable(name: "timeout", arg: 2, scope: !13453, file: !2128, line: 1794, type: !12395)
!13459 = !DILocalVariable(name: "key", scope: !13453, file: !2128, line: 1796, type: !11596)
!13460 = !DILocalVariable(name: "ret", scope: !13453, file: !2128, line: 1797, type: !103)
!13461 = !DILocation(line: 0, scope: !13453)
!13462 = !DILocation(line: 0, scope: !11604, inlinedAt: !13463)
!13463 = distinct !DILocation(line: 1796, column: 25, scope: !13453)
!13464 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !13465)
!13465 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !13463)
!13466 = !DILocation(line: 0, scope: !11613, inlinedAt: !13465)
!13467 = !DILocation(line: 1801, column: 20, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13453, file: !2128, line: 1801, column: 6)
!13469 = !DILocation(line: 1801, column: 33, scope: !13468)
!13470 = !DILocation(line: 1801, column: 49, scope: !13468)
!13471 = !DILocation(line: 1801, column: 6, scope: !13453)
!13472 = !DILocation(line: 1803, column: 13, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13468, file: !2128, line: 1803, column: 13)
!13474 = !DILocation(line: 1803, column: 13, scope: !13468)
!13475 = !DILocation(line: 1805, column: 24, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13473, file: !2128, line: 1805, column: 13)
!13477 = !DILocation(line: 1805, column: 21, scope: !13476)
!13478 = !DILocation(line: 1805, column: 34, scope: !13476)
!13479 = !DILocation(line: 1806, column: 20, scope: !13476)
!13480 = !DILocation(line: 1806, column: 44, scope: !13476)
!13481 = !DILocation(line: 1806, column: 30, scope: !13476)
!13482 = !DILocation(line: 1805, column: 13, scope: !13473)
!13483 = !DILocation(line: 1810, column: 42, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13476, file: !2128, line: 1808, column: 9)
!13485 = !DILocation(line: 1810, column: 3, scope: !13484)
!13486 = !DILocation(line: 1811, column: 22, scope: !13484)
!13487 = !DILocation(line: 1811, column: 3, scope: !13484)
!13488 = !DILocation(line: 0, scope: !12215, inlinedAt: !13489)
!13489 = distinct !DILocation(line: 1814, column: 9, scope: !13484)
!13490 = !DILocation(line: 196, column: 9, scope: !12215, inlinedAt: !13489)
!13491 = !DILocation(line: 1817, column: 3, scope: !13484)
!13492 = !DILocation(line: 0, scope: !13468)
!13493 = !DILocation(line: 0, scope: !11631, inlinedAt: !13494)
!13494 = distinct !DILocation(line: 1822, column: 2, scope: !13453)
!13495 = !DILocation(line: 0, scope: !11639, inlinedAt: !13496)
!13496 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !13494)
!13497 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !13496)
!13498 = !DILocation(line: 1823, column: 2, scope: !13453)
!13499 = !DILocation(line: 1824, column: 1, scope: !13453)
!13500 = distinct !DISubprogram(name: "z_sched_wake", scope: !2128, file: !2128, line: 1882, type: !13501, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13503)
!13501 = !DISubroutineType(types: !13502)
!13502 = !{!157, !2054, !103, !102}
!13503 = !{!13504, !13505, !13506, !13507, !13508, !13509, !13511}
!13504 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13500, file: !2128, line: 1882, type: !2054)
!13505 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13500, file: !2128, line: 1882, type: !103)
!13506 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13500, file: !2128, line: 1882, type: !102)
!13507 = !DILocalVariable(name: "thread", scope: !13500, file: !2128, line: 1884, type: !2023)
!13508 = !DILocalVariable(name: "ret", scope: !13500, file: !2128, line: 1885, type: !157)
!13509 = !DILocalVariable(name: "__i", scope: !13510, file: !2128, line: 1887, type: !11596)
!13510 = distinct !DILexicalBlock(scope: !13500, file: !2128, line: 1887, column: 2)
!13511 = !DILocalVariable(name: "__key", scope: !13510, file: !2128, line: 1887, type: !11596)
!13512 = !DILocation(line: 0, scope: !13500)
!13513 = !DILocation(line: 0, scope: !13510)
!13514 = !DILocation(line: 0, scope: !11604, inlinedAt: !13515)
!13515 = distinct !DILocation(line: 1887, column: 2, scope: !13510)
!13516 = !DILocation(line: 55, column: 2, scope: !11613, inlinedAt: !13517)
!13517 = distinct !DILocation(line: 145, column: 10, scope: !11604, inlinedAt: !13515)
!13518 = !DILocation(line: 0, scope: !11613, inlinedAt: !13517)
!13519 = !DILocation(line: 1888, column: 12, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13521, file: !2128, line: 1887, column: 26)
!13521 = distinct !DILexicalBlock(scope: !13510, file: !2128, line: 1887, column: 2)
!13522 = !DILocation(line: 1890, column: 14, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13520, file: !2128, line: 1890, column: 7)
!13524 = !DILocation(line: 1890, column: 7, scope: !13520)
!13525 = !DILocalVariable(name: "thread", arg: 1, scope: !13526, file: !13527, line: 134, type: !2023)
!13526 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13527, file: !13527, line: 134, type: !13528, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13530)
!13527 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13528 = !DISubroutineType(types: !13529)
!13529 = !{null, !2023, !32, !102}
!13530 = !{!13525, !13531, !13532}
!13531 = !DILocalVariable(name: "value", arg: 2, scope: !13526, file: !13527, line: 135, type: !32)
!13532 = !DILocalVariable(name: "data", arg: 3, scope: !13526, file: !13527, line: 136, type: !102)
!13533 = !DILocation(line: 0, scope: !13526, inlinedAt: !13534)
!13534 = distinct !DILocation(line: 1891, column: 4, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13523, file: !2128, line: 1890, column: 23)
!13536 = !DILocation(line: 0, scope: !13440, inlinedAt: !13537)
!13537 = distinct !DILocation(line: 138, column: 2, scope: !13526, inlinedAt: !13534)
!13538 = !DILocation(line: 67, column: 15, scope: !13440, inlinedAt: !13537)
!13539 = !DILocation(line: 67, column: 33, scope: !13440, inlinedAt: !13537)
!13540 = !DILocation(line: 139, column: 15, scope: !13526, inlinedAt: !13534)
!13541 = !DILocation(line: 139, column: 25, scope: !13526, inlinedAt: !13534)
!13542 = !DILocation(line: 1894, column: 4, scope: !13535)
!13543 = !DILocation(line: 1895, column: 10, scope: !13535)
!13544 = !DILocation(line: 1896, column: 4, scope: !13535)
!13545 = !DILocation(line: 1898, column: 3, scope: !13535)
!13546 = !DILocation(line: 0, scope: !11631, inlinedAt: !13547)
!13547 = distinct !DILocation(line: 1887, column: 2, scope: !13521)
!13548 = !DILocation(line: 0, scope: !11639, inlinedAt: !13549)
!13549 = distinct !DILocation(line: 215, column: 2, scope: !11631, inlinedAt: !13547)
!13550 = !DILocation(line: 95, column: 2, scope: !11639, inlinedAt: !13549)
!13551 = !DILocation(line: 1901, column: 2, scope: !13500)
!13552 = distinct !DISubprogram(name: "z_sched_wait", scope: !2128, file: !2128, line: 1904, type: !13553, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !13556)
!13553 = !DISubroutineType(types: !13554)
!13554 = !{!103, !11607, !11596, !2054, !12395, !13555}
!13555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!13556 = !{!13557, !13558, !13559, !13560, !13561, !13562}
!13557 = !DILocalVariable(name: "lock", arg: 1, scope: !13552, file: !2128, line: 1904, type: !11607)
!13558 = !DILocalVariable(name: "key", arg: 2, scope: !13552, file: !2128, line: 1904, type: !11596)
!13559 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13552, file: !2128, line: 1905, type: !2054)
!13560 = !DILocalVariable(name: "timeout", arg: 4, scope: !13552, file: !2128, line: 1905, type: !12395)
!13561 = !DILocalVariable(name: "data", arg: 5, scope: !13552, file: !2128, line: 1905, type: !13555)
!13562 = !DILocalVariable(name: "ret", scope: !13552, file: !2128, line: 1907, type: !103)
!13563 = !DILocation(line: 0, scope: !13552)
!13564 = !DILocation(line: 1907, column: 12, scope: !13552)
!13565 = !DILocation(line: 1909, column: 11, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13552, file: !2128, line: 1909, column: 6)
!13567 = !DILocation(line: 1909, column: 6, scope: !13552)
!13568 = !DILocation(line: 1910, column: 11, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13566, file: !2128, line: 1909, column: 20)
!13570 = !DILocation(line: 1910, column: 26, scope: !13569)
!13571 = !DILocation(line: 1910, column: 9, scope: !13569)
!13572 = !DILocation(line: 1911, column: 2, scope: !13569)
!13573 = !DILocation(line: 1912, column: 2, scope: !13552)
!13574 = distinct !DISubprogram(name: "z_data_copy", scope: !13575, file: !13575, line: 22, type: !2843, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !322)
!13575 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13576 = !DILocation(line: 24, column: 2, scope: !13574)
!13577 = !DILocation(line: 27, column: 2, scope: !13574)
!13578 = !DILocation(line: 71, column: 1, scope: !13574)
!13579 = distinct !DISubprogram(name: "z_add_timeout", scope: !2165, file: !2165, line: 88, type: !13580, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13586)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{null, !2138, !2157, !13582}
!13582 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1382, line: 67, baseType: !13583)
!13583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1382, line: 65, size: 64, elements: !13584)
!13584 = !{!13585}
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13583, file: !1382, line: 66, baseType: !1381, size: 64)
!13586 = !{!13587, !13588, !13589, !13590, !13596, !13597, !13600, !13603}
!13587 = !DILocalVariable(name: "to", arg: 1, scope: !13579, file: !2165, line: 88, type: !2138)
!13588 = !DILocalVariable(name: "fn", arg: 2, scope: !13579, file: !2165, line: 88, type: !2157)
!13589 = !DILocalVariable(name: "timeout", arg: 3, scope: !13579, file: !2165, line: 89, type: !13582)
!13590 = !DILocalVariable(name: "__i", scope: !13591, file: !2165, line: 102, type: !13592)
!13591 = distinct !DILexicalBlock(scope: !13579, file: !2165, line: 102, column: 2)
!13592 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !13593)
!13593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !13594)
!13594 = !{!13595}
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13593, file: !321, line: 33, baseType: !103, size: 32)
!13596 = !DILocalVariable(name: "__key", scope: !13591, file: !2165, line: 102, type: !13592)
!13597 = !DILocalVariable(name: "t", scope: !13598, file: !2165, line: 103, type: !2138)
!13598 = distinct !DILexicalBlock(scope: !13599, file: !2165, line: 102, column: 24)
!13599 = distinct !DILexicalBlock(scope: !13591, file: !2165, line: 102, column: 2)
!13600 = !DILocalVariable(name: "ticks", scope: !13601, file: !2165, line: 107, type: !1381)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !2165, line: 106, column: 39)
!13602 = distinct !DILexicalBlock(scope: !13598, file: !2165, line: 105, column: 7)
!13603 = !DILocalVariable(name: "next_time", scope: !13604, file: !2165, line: 137, type: !586)
!13604 = distinct !DILexicalBlock(scope: !13605, file: !2165, line: 127, column: 22)
!13605 = distinct !DILexicalBlock(scope: !13598, file: !2165, line: 127, column: 7)
!13606 = !DILocation(line: 0, scope: !13579)
!13607 = !DILocation(line: 91, column: 6, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13579, file: !2165, line: 91, column: 6)
!13609 = !DILocation(line: 91, column: 6, scope: !13579)
!13610 = !DILocation(line: 100, column: 6, scope: !13579)
!13611 = !DILocation(line: 100, column: 9, scope: !13579)
!13612 = !DILocation(line: 0, scope: !13591)
!13613 = !DILocalVariable(name: "l", arg: 1, scope: !13614, file: !321, line: 136, type: !13617)
!13614 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !13615, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13618)
!13615 = !DISubroutineType(types: !13616)
!13616 = !{!13592, !13617}
!13617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!13618 = !{!13613, !13619}
!13619 = !DILocalVariable(name: "k", scope: !13614, file: !321, line: 139, type: !13592)
!13620 = !DILocation(line: 0, scope: !13614, inlinedAt: !13621)
!13621 = distinct !DILocation(line: 102, column: 2, scope: !13591)
!13622 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !13627)
!13623 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4783, file: !4783, line: 42, type: !4784, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13624)
!13624 = !{!13625, !13626}
!13625 = !DILocalVariable(name: "key", scope: !13623, file: !4783, line: 44, type: !32)
!13626 = !DILocalVariable(name: "tmp", scope: !13623, file: !4783, line: 53, type: !32)
!13627 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !13621)
!13628 = !{i64 2244622}
!13629 = !DILocation(line: 0, scope: !13623, inlinedAt: !13627)
!13630 = !DILocation(line: 106, column: 33, scope: !13602)
!13631 = !DILocation(line: 105, column: 7, scope: !13598)
!13632 = !DILocation(line: 107, column: 50, scope: !13601)
!13633 = !DILocation(line: 107, column: 48, scope: !13601)
!13634 = !DILocation(line: 0, scope: !13601)
!13635 = !DILocation(line: 109, column: 17, scope: !13601)
!13636 = !DILocation(line: 110, column: 3, scope: !13601)
!13637 = !DILocation(line: 111, column: 31, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13602, file: !2165, line: 110, column: 10)
!13639 = !DILocation(line: 111, column: 37, scope: !13638)
!13640 = !DILocation(line: 111, column: 35, scope: !13638)
!13641 = !DILocation(line: 0, scope: !13602)
!13642 = !DILocation(line: 109, column: 8, scope: !13601)
!13643 = !DILocation(line: 109, column: 15, scope: !13601)
!13644 = !DILocation(line: 114, column: 12, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13598, file: !2165, line: 114, column: 3)
!13646 = !DILocation(line: 0, scope: !13598)
!13647 = !DILocation(line: 114, column: 3, scope: !13645)
!13648 = !DILocation(line: 115, column: 24, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13650, file: !2165, line: 115, column: 8)
!13650 = distinct !DILexicalBlock(scope: !13651, file: !2165, line: 114, column: 45)
!13651 = distinct !DILexicalBlock(scope: !13645, file: !2165, line: 114, column: 3)
!13652 = !DILocation(line: 115, column: 11, scope: !13649)
!13653 = !DILocation(line: 115, column: 18, scope: !13649)
!13654 = !DILocation(line: 115, column: 8, scope: !13650)
!13655 = !DILocation(line: 116, column: 15, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13649, file: !2165, line: 115, column: 32)
!13657 = !DILocation(line: 117, column: 26, scope: !13656)
!13658 = !DILocation(line: 117, column: 37, scope: !13656)
!13659 = !DILocation(line: 117, column: 5, scope: !13656)
!13660 = !DILocation(line: 123, column: 7, scope: !13598)
!13661 = !DILocation(line: 120, column: 15, scope: !13650)
!13662 = !DILocation(line: 114, column: 36, scope: !13651)
!13663 = distinct !{!13663, !13647, !13664}
!13664 = !DILocation(line: 121, column: 3, scope: !13645)
!13665 = !DILocation(line: 124, column: 41, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !2165, line: 123, column: 18)
!13667 = distinct !DILexicalBlock(scope: !13598, file: !2165, line: 123, column: 7)
!13668 = !DILocation(line: 124, column: 4, scope: !13666)
!13669 = !DILocation(line: 125, column: 3, scope: !13666)
!13670 = !DILocation(line: 127, column: 13, scope: !13605)
!13671 = !DILocation(line: 127, column: 10, scope: !13605)
!13672 = !DILocation(line: 127, column: 7, scope: !13598)
!13673 = !DILocation(line: 137, column: 24, scope: !13604)
!13674 = !DILocation(line: 0, scope: !13604)
!13675 = !DILocation(line: 139, column: 18, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13604, file: !2165, line: 139, column: 8)
!13677 = !DILocation(line: 139, column: 23, scope: !13676)
!13678 = !DILocation(line: 141, column: 5, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13676, file: !2165, line: 140, column: 48)
!13680 = !DILocation(line: 142, column: 4, scope: !13679)
!13681 = !DILocalVariable(name: "key", arg: 2, scope: !13682, file: !321, line: 190, type: !13592)
!13682 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !13683, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13685)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{null, !13617, !13592}
!13685 = !{!13686, !13681}
!13686 = !DILocalVariable(name: "l", arg: 1, scope: !13682, file: !321, line: 189, type: !13617)
!13687 = !DILocation(line: 0, scope: !13682, inlinedAt: !13688)
!13688 = distinct !DILocation(line: 102, column: 2, scope: !13599)
!13689 = !DILocalVariable(name: "key", arg: 1, scope: !13690, file: !4783, line: 84, type: !32)
!13690 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4783, file: !4783, line: 84, type: !4794, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13691)
!13691 = !{!13689}
!13692 = !DILocation(line: 0, scope: !13690, inlinedAt: !13693)
!13693 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !13688)
!13694 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !13693)
!13695 = !{i64 2245439}
!13696 = !DILocation(line: 148, column: 1, scope: !13579)
!13697 = distinct !DISubprogram(name: "elapsed", scope: !2165, file: !2165, line: 62, type: !13698, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !322)
!13698 = !DISubroutineType(types: !13699)
!13699 = !{!586}
!13700 = !DILocation(line: 64, column: 9, scope: !13697)
!13701 = !DILocation(line: 64, column: 28, scope: !13697)
!13702 = !DILocation(line: 64, column: 35, scope: !13697)
!13703 = !DILocation(line: 64, column: 2, scope: !13697)
!13704 = distinct !DISubprogram(name: "first", scope: !2165, file: !2165, line: 39, type: !13705, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13707)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{!2138}
!13707 = !{!13708}
!13708 = !DILocalVariable(name: "t", scope: !13704, file: !2165, line: 41, type: !13709)
!13709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!13710 = !DILocation(line: 41, column: 19, scope: !13704)
!13711 = !DILocation(line: 0, scope: !13704)
!13712 = !DILocation(line: 43, column: 9, scope: !13704)
!13713 = !DILocation(line: 43, column: 2, scope: !13704)
!13714 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !13715, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13717)
!13715 = !DISubroutineType(types: !13716)
!13716 = !{null, !13709, !13709}
!13717 = !{!13718, !13719, !13720}
!13718 = !DILocalVariable(name: "successor", arg: 1, scope: !13714, file: !221, line: 443, type: !13709)
!13719 = !DILocalVariable(name: "node", arg: 2, scope: !13714, file: !221, line: 443, type: !13709)
!13720 = !DILocalVariable(name: "prev", scope: !13714, file: !221, line: 445, type: !13721)
!13721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13709)
!13722 = !DILocation(line: 0, scope: !13714)
!13723 = !DILocation(line: 445, column: 39, scope: !13714)
!13724 = !DILocation(line: 447, column: 8, scope: !13714)
!13725 = !DILocation(line: 447, column: 13, scope: !13714)
!13726 = !DILocation(line: 448, column: 8, scope: !13714)
!13727 = !DILocation(line: 448, column: 13, scope: !13714)
!13728 = !DILocation(line: 449, column: 8, scope: !13714)
!13729 = !DILocation(line: 449, column: 13, scope: !13714)
!13730 = !DILocation(line: 450, column: 18, scope: !13714)
!13731 = !DILocation(line: 451, column: 1, scope: !13714)
!13732 = distinct !DISubprogram(name: "next", scope: !2165, file: !2165, line: 46, type: !13733, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13735)
!13733 = !DISubroutineType(types: !13734)
!13734 = !{!2138, !2138}
!13735 = !{!13736, !13737}
!13736 = !DILocalVariable(name: "t", arg: 1, scope: !13732, file: !2165, line: 46, type: !2138)
!13737 = !DILocalVariable(name: "n", scope: !13732, file: !2165, line: 48, type: !13709)
!13738 = !DILocation(line: 0, scope: !13732)
!13739 = !DILocation(line: 48, column: 58, scope: !13732)
!13740 = !DILocation(line: 48, column: 19, scope: !13732)
!13741 = !DILocation(line: 50, column: 9, scope: !13732)
!13742 = !DILocation(line: 50, column: 2, scope: !13732)
!13743 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !13744, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13747)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{null, !13746, !13709}
!13746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!13747 = !{!13748, !13749, !13750}
!13748 = !DILocalVariable(name: "list", arg: 1, scope: !13743, file: !221, line: 404, type: !13746)
!13749 = !DILocalVariable(name: "node", arg: 2, scope: !13743, file: !221, line: 404, type: !13709)
!13750 = !DILocalVariable(name: "tail", scope: !13743, file: !221, line: 406, type: !13721)
!13751 = !DILocation(line: 0, scope: !13743)
!13752 = !DILocation(line: 406, column: 34, scope: !13743)
!13753 = !DILocation(line: 408, column: 8, scope: !13743)
!13754 = !DILocation(line: 408, column: 13, scope: !13743)
!13755 = !DILocation(line: 409, column: 8, scope: !13743)
!13756 = !DILocation(line: 409, column: 13, scope: !13743)
!13757 = !DILocation(line: 411, column: 8, scope: !13743)
!13758 = !DILocation(line: 411, column: 13, scope: !13743)
!13759 = !DILocation(line: 412, column: 13, scope: !13743)
!13760 = !DILocation(line: 413, column: 1, scope: !13743)
!13761 = distinct !DISubprogram(name: "next_timeout", scope: !2165, file: !2165, line: 67, type: !13698, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13762)
!13762 = !{!13763, !13764, !13765}
!13763 = !DILocalVariable(name: "to", scope: !13761, file: !2165, line: 69, type: !2138)
!13764 = !DILocalVariable(name: "ticks_elapsed", scope: !13761, file: !2165, line: 70, type: !586)
!13765 = !DILocalVariable(name: "ret", scope: !13761, file: !2165, line: 71, type: !586)
!13766 = !DILocation(line: 69, column: 24, scope: !13761)
!13767 = !DILocation(line: 0, scope: !13761)
!13768 = !DILocation(line: 70, column: 26, scope: !13761)
!13769 = !DILocation(line: 73, column: 10, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13761, file: !2165, line: 73, column: 6)
!13771 = !DILocation(line: 73, column: 19, scope: !13770)
!13772 = !DILocation(line: 74, column: 21, scope: !13770)
!13773 = !DILocation(line: 74, column: 30, scope: !13770)
!13774 = !DILocation(line: 74, column: 28, scope: !13770)
!13775 = !DILocation(line: 74, column: 45, scope: !13770)
!13776 = !DILocation(line: 73, column: 6, scope: !13761)
!13777 = !DILocation(line: 77, column: 9, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13770, file: !2165, line: 76, column: 9)
!13779 = !DILocation(line: 0, scope: !13770)
!13780 = !DILocation(line: 81, column: 20, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13761, file: !2165, line: 81, column: 6)
!13782 = !DILocation(line: 81, column: 6, scope: !13781)
!13783 = !DILocation(line: 81, column: 32, scope: !13781)
!13784 = !DILocation(line: 85, column: 2, scope: !13761)
!13785 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !13786, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13788)
!13786 = !DISubroutineType(types: !13787)
!13787 = !{!13709, !13746, !13709}
!13788 = !{!13789, !13790}
!13789 = !DILocalVariable(name: "list", arg: 1, scope: !13785, file: !221, line: 341, type: !13746)
!13790 = !DILocalVariable(name: "node", arg: 2, scope: !13785, file: !221, line: 342, type: !13709)
!13791 = !DILocation(line: 0, scope: !13785)
!13792 = !DILocation(line: 344, column: 15, scope: !13785)
!13793 = !DILocation(line: 344, column: 9, scope: !13785)
!13794 = !DILocation(line: 344, column: 26, scope: !13785)
!13795 = !DILocation(line: 344, column: 2, scope: !13785)
!13796 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !13786, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13797)
!13797 = !{!13798, !13799}
!13798 = !DILocalVariable(name: "list", arg: 1, scope: !13796, file: !221, line: 325, type: !13746)
!13799 = !DILocalVariable(name: "node", arg: 2, scope: !13796, file: !221, line: 326, type: !13709)
!13800 = !DILocation(line: 0, scope: !13796)
!13801 = !DILocation(line: 328, column: 24, scope: !13796)
!13802 = !DILocation(line: 328, column: 15, scope: !13796)
!13803 = !DILocation(line: 328, column: 9, scope: !13796)
!13804 = !DILocation(line: 328, column: 45, scope: !13796)
!13805 = !DILocation(line: 328, column: 2, scope: !13796)
!13806 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !13807, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13809)
!13807 = !DISubroutineType(types: !13808)
!13808 = !{!13709, !13746}
!13809 = !{!13810}
!13810 = !DILocalVariable(name: "list", arg: 1, scope: !13806, file: !221, line: 294, type: !13746)
!13811 = !DILocation(line: 0, scope: !13806)
!13812 = !DILocation(line: 296, column: 9, scope: !13806)
!13813 = !DILocation(line: 296, column: 2, scope: !13806)
!13814 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !13815, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13817)
!13815 = !DISubroutineType(types: !13816)
!13816 = !{!157, !13746}
!13817 = !{!13818}
!13818 = !DILocalVariable(name: "list", arg: 1, scope: !13814, file: !221, line: 266, type: !13746)
!13819 = !DILocation(line: 0, scope: !13814)
!13820 = !DILocation(line: 268, column: 15, scope: !13814)
!13821 = !DILocation(line: 268, column: 20, scope: !13814)
!13822 = !DILocation(line: 268, column: 2, scope: !13814)
!13823 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2165, file: !2165, line: 150, type: !13824, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13826)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!103, !2138}
!13826 = !{!13827, !13828, !13829, !13831}
!13827 = !DILocalVariable(name: "to", arg: 1, scope: !13823, file: !2165, line: 150, type: !2138)
!13828 = !DILocalVariable(name: "ret", scope: !13823, file: !2165, line: 152, type: !103)
!13829 = !DILocalVariable(name: "__i", scope: !13830, file: !2165, line: 154, type: !13592)
!13830 = distinct !DILexicalBlock(scope: !13823, file: !2165, line: 154, column: 2)
!13831 = !DILocalVariable(name: "__key", scope: !13830, file: !2165, line: 154, type: !13592)
!13832 = !DILocation(line: 0, scope: !13823)
!13833 = !DILocation(line: 0, scope: !13830)
!13834 = !DILocation(line: 0, scope: !13614, inlinedAt: !13835)
!13835 = distinct !DILocation(line: 154, column: 2, scope: !13830)
!13836 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !13837)
!13837 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !13835)
!13838 = !DILocation(line: 0, scope: !13623, inlinedAt: !13837)
!13839 = !DILocation(line: 155, column: 7, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !2165, line: 155, column: 7)
!13841 = distinct !DILexicalBlock(scope: !13842, file: !2165, line: 154, column: 24)
!13842 = distinct !DILexicalBlock(scope: !13830, file: !2165, line: 154, column: 2)
!13843 = !DILocation(line: 155, column: 7, scope: !13841)
!13844 = !DILocation(line: 156, column: 4, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13840, file: !2165, line: 155, column: 39)
!13846 = !DILocation(line: 158, column: 3, scope: !13845)
!13847 = !DILocation(line: 0, scope: !13682, inlinedAt: !13848)
!13848 = distinct !DILocation(line: 154, column: 2, scope: !13842)
!13849 = !DILocation(line: 0, scope: !13690, inlinedAt: !13850)
!13850 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !13848)
!13851 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !13850)
!13852 = !DILocation(line: 161, column: 2, scope: !13823)
!13853 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !13854, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13858)
!13854 = !DISubroutineType(types: !13855)
!13855 = !{!157, !13856}
!13856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13857, size: 32)
!13857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2142)
!13858 = !{!13859}
!13859 = !DILocalVariable(name: "node", arg: 1, scope: !13853, file: !221, line: 225, type: !13856)
!13860 = !DILocation(line: 0, scope: !13853)
!13861 = !DILocation(line: 227, column: 15, scope: !13853)
!13862 = !DILocation(line: 227, column: 20, scope: !13853)
!13863 = !DILocation(line: 227, column: 2, scope: !13853)
!13864 = distinct !DISubprogram(name: "remove_timeout", scope: !2165, file: !2165, line: 53, type: !2159, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13865)
!13865 = !{!13866}
!13866 = !DILocalVariable(name: "t", arg: 1, scope: !13864, file: !2165, line: 53, type: !2138)
!13867 = !DILocation(line: 0, scope: !13864)
!13868 = !DILocation(line: 55, column: 6, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13864, file: !2165, line: 55, column: 6)
!13870 = !DILocation(line: 55, column: 14, scope: !13869)
!13871 = !DILocation(line: 55, column: 6, scope: !13864)
!13872 = !DILocation(line: 56, column: 25, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13869, file: !2165, line: 55, column: 23)
!13874 = !DILocation(line: 56, column: 12, scope: !13873)
!13875 = !DILocation(line: 56, column: 19, scope: !13873)
!13876 = !DILocation(line: 57, column: 2, scope: !13873)
!13877 = !DILocation(line: 59, column: 23, scope: !13864)
!13878 = !DILocation(line: 59, column: 2, scope: !13864)
!13879 = !DILocation(line: 60, column: 1, scope: !13864)
!13880 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !13881, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13883)
!13881 = !DISubroutineType(types: !13882)
!13882 = !{null, !13709}
!13883 = !{!13884, !13885, !13886}
!13884 = !DILocalVariable(name: "node", arg: 1, scope: !13880, file: !221, line: 496, type: !13709)
!13885 = !DILocalVariable(name: "prev", scope: !13880, file: !221, line: 498, type: !13721)
!13886 = !DILocalVariable(name: "next", scope: !13880, file: !221, line: 499, type: !13721)
!13887 = !DILocation(line: 0, scope: !13880)
!13888 = !DILocation(line: 498, column: 34, scope: !13880)
!13889 = !DILocation(line: 499, column: 34, scope: !13880)
!13890 = !DILocation(line: 501, column: 8, scope: !13880)
!13891 = !DILocation(line: 501, column: 13, scope: !13880)
!13892 = !DILocation(line: 502, column: 8, scope: !13880)
!13893 = !DILocation(line: 502, column: 13, scope: !13880)
!13894 = !DILocation(line: 503, column: 2, scope: !13880)
!13895 = !DILocation(line: 504, column: 1, scope: !13880)
!13896 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !13881, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13897)
!13897 = !{!13898}
!13898 = !DILocalVariable(name: "node", arg: 1, scope: !13896, file: !221, line: 211, type: !13709)
!13899 = !DILocation(line: 0, scope: !13896)
!13900 = !DILocation(line: 213, column: 8, scope: !13896)
!13901 = !DILocation(line: 213, column: 13, scope: !13896)
!13902 = !DILocation(line: 214, column: 8, scope: !13896)
!13903 = !DILocation(line: 214, column: 13, scope: !13896)
!13904 = !DILocation(line: 215, column: 1, scope: !13896)
!13905 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2165, file: !2165, line: 183, type: !13906, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13910)
!13906 = !DISubroutineType(types: !13907)
!13907 = !{!1381, !13908}
!13908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13909, size: 32)
!13909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2139)
!13910 = !{!13911, !13912, !13913, !13915}
!13911 = !DILocalVariable(name: "timeout", arg: 1, scope: !13905, file: !2165, line: 183, type: !13908)
!13912 = !DILocalVariable(name: "ticks", scope: !13905, file: !2165, line: 185, type: !1381)
!13913 = !DILocalVariable(name: "__i", scope: !13914, file: !2165, line: 187, type: !13592)
!13914 = distinct !DILexicalBlock(scope: !13905, file: !2165, line: 187, column: 2)
!13915 = !DILocalVariable(name: "__key", scope: !13914, file: !2165, line: 187, type: !13592)
!13916 = !DILocation(line: 0, scope: !13905)
!13917 = !DILocation(line: 0, scope: !13914)
!13918 = !DILocation(line: 0, scope: !13614, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 187, column: 2, scope: !13914)
!13920 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !13921)
!13921 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !13919)
!13922 = !DILocation(line: 0, scope: !13623, inlinedAt: !13921)
!13923 = !DILocation(line: 188, column: 11, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13925, file: !2165, line: 187, column: 24)
!13925 = distinct !DILexicalBlock(scope: !13914, file: !2165, line: 187, column: 2)
!13926 = !DILocation(line: 0, scope: !13682, inlinedAt: !13927)
!13927 = distinct !DILocation(line: 187, column: 2, scope: !13925)
!13928 = !DILocation(line: 0, scope: !13690, inlinedAt: !13929)
!13929 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !13927)
!13930 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !13929)
!13931 = !DILocation(line: 191, column: 2, scope: !13905)
!13932 = distinct !DISubprogram(name: "timeout_rem", scope: !2165, file: !2165, line: 165, type: !13906, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13933)
!13933 = !{!13934, !13935, !13936}
!13934 = !DILocalVariable(name: "timeout", arg: 1, scope: !13932, file: !2165, line: 165, type: !13908)
!13935 = !DILocalVariable(name: "ticks", scope: !13932, file: !2165, line: 167, type: !1381)
!13936 = !DILocalVariable(name: "t", scope: !13937, file: !2165, line: 173, type: !2138)
!13937 = distinct !DILexicalBlock(scope: !13932, file: !2165, line: 173, column: 2)
!13938 = !DILocation(line: 0, scope: !13932)
!13939 = !DILocation(line: 169, column: 6, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13932, file: !2165, line: 169, column: 6)
!13941 = !DILocation(line: 169, column: 6, scope: !13932)
!13942 = !DILocation(line: 173, column: 28, scope: !13937)
!13943 = !DILocation(line: 0, scope: !13937)
!13944 = !DILocation(line: 173, column: 39, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13937, file: !2165, line: 173, column: 2)
!13946 = !DILocation(line: 173, column: 2, scope: !13937)
!13947 = !DILocation(line: 174, column: 15, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13945, file: !2165, line: 173, column: 61)
!13949 = !DILocation(line: 174, column: 9, scope: !13948)
!13950 = !DILocation(line: 175, column: 15, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13948, file: !2165, line: 175, column: 7)
!13952 = !DILocation(line: 175, column: 7, scope: !13948)
!13953 = !DILocation(line: 173, column: 52, scope: !13945)
!13954 = distinct !{!13954, !13946, !13955}
!13955 = !DILocation(line: 178, column: 2, scope: !13937)
!13956 = !DILocation(line: 180, column: 17, scope: !13932)
!13957 = !DILocation(line: 180, column: 15, scope: !13932)
!13958 = !DILocation(line: 180, column: 2, scope: !13932)
!13959 = !DILocation(line: 181, column: 1, scope: !13932)
!13960 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11270, file: !11270, line: 35, type: !13961, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13963)
!13961 = !DISubroutineType(types: !13962)
!13962 = !{!157, !13908}
!13963 = !{!13964}
!13964 = !DILocalVariable(name: "to", arg: 1, scope: !13960, file: !11270, line: 35, type: !13908)
!13965 = !DILocation(line: 0, scope: !13960)
!13966 = !DILocation(line: 37, column: 35, scope: !13960)
!13967 = !DILocation(line: 37, column: 10, scope: !13960)
!13968 = !DILocation(line: 37, column: 9, scope: !13960)
!13969 = !DILocation(line: 37, column: 2, scope: !13960)
!13970 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2165, file: !2165, line: 194, type: !13906, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13971)
!13971 = !{!13972, !13973, !13974, !13976}
!13972 = !DILocalVariable(name: "timeout", arg: 1, scope: !13970, file: !2165, line: 194, type: !13908)
!13973 = !DILocalVariable(name: "ticks", scope: !13970, file: !2165, line: 196, type: !1381)
!13974 = !DILocalVariable(name: "__i", scope: !13975, file: !2165, line: 198, type: !13592)
!13975 = distinct !DILexicalBlock(scope: !13970, file: !2165, line: 198, column: 2)
!13976 = !DILocalVariable(name: "__key", scope: !13975, file: !2165, line: 198, type: !13592)
!13977 = !DILocation(line: 0, scope: !13970)
!13978 = !DILocation(line: 0, scope: !13975)
!13979 = !DILocation(line: 0, scope: !13614, inlinedAt: !13980)
!13980 = distinct !DILocation(line: 198, column: 2, scope: !13975)
!13981 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !13982)
!13982 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !13980)
!13983 = !DILocation(line: 0, scope: !13623, inlinedAt: !13982)
!13984 = !DILocation(line: 199, column: 11, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !2165, line: 198, column: 24)
!13986 = distinct !DILexicalBlock(scope: !13975, file: !2165, line: 198, column: 2)
!13987 = !DILocation(line: 199, column: 23, scope: !13985)
!13988 = !DILocation(line: 0, scope: !13682, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 198, column: 2, scope: !13986)
!13990 = !DILocation(line: 0, scope: !13690, inlinedAt: !13991)
!13991 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !13989)
!13992 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !13991)
!13993 = !DILocation(line: 199, column: 21, scope: !13985)
!13994 = !DILocation(line: 202, column: 2, scope: !13970)
!13995 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2165, file: !2165, line: 205, type: !13698, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !13996)
!13996 = !{!13997, !13998, !14000}
!13997 = !DILocalVariable(name: "ret", scope: !13995, file: !2165, line: 207, type: !586)
!13998 = !DILocalVariable(name: "__i", scope: !13999, file: !2165, line: 209, type: !13592)
!13999 = distinct !DILexicalBlock(scope: !13995, file: !2165, line: 209, column: 2)
!14000 = !DILocalVariable(name: "__key", scope: !13999, file: !2165, line: 209, type: !13592)
!14001 = !DILocation(line: 0, scope: !13995)
!14002 = !DILocation(line: 0, scope: !13999)
!14003 = !DILocation(line: 0, scope: !13614, inlinedAt: !14004)
!14004 = distinct !DILocation(line: 209, column: 2, scope: !13999)
!14005 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !14006)
!14006 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !14004)
!14007 = !DILocation(line: 0, scope: !13623, inlinedAt: !14006)
!14008 = !DILocation(line: 210, column: 9, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !2165, line: 209, column: 24)
!14010 = distinct !DILexicalBlock(scope: !13999, file: !2165, line: 209, column: 2)
!14011 = !DILocation(line: 0, scope: !13682, inlinedAt: !14012)
!14012 = distinct !DILocation(line: 209, column: 2, scope: !14010)
!14013 = !DILocation(line: 0, scope: !13690, inlinedAt: !14014)
!14014 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !14012)
!14015 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !14014)
!14016 = !DILocation(line: 212, column: 2, scope: !13995)
!14017 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2165, file: !2165, line: 215, type: !8908, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !14018)
!14018 = !{!14019, !14020, !14021, !14023, !14024, !14027, !14028}
!14019 = !DILocalVariable(name: "ticks", arg: 1, scope: !14017, file: !2165, line: 215, type: !586)
!14020 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14017, file: !2165, line: 215, type: !157)
!14021 = !DILocalVariable(name: "__i", scope: !14022, file: !2165, line: 217, type: !13592)
!14022 = distinct !DILexicalBlock(scope: !14017, file: !2165, line: 217, column: 2)
!14023 = !DILocalVariable(name: "__key", scope: !14022, file: !2165, line: 217, type: !13592)
!14024 = !DILocalVariable(name: "next_to", scope: !14025, file: !2165, line: 218, type: !103)
!14025 = distinct !DILexicalBlock(scope: !14026, file: !2165, line: 217, column: 24)
!14026 = distinct !DILexicalBlock(scope: !14022, file: !2165, line: 217, column: 2)
!14027 = !DILocalVariable(name: "sooner", scope: !14025, file: !2165, line: 219, type: !157)
!14028 = !DILocalVariable(name: "imminent", scope: !14025, file: !2165, line: 221, type: !157)
!14029 = !DILocation(line: 0, scope: !14017)
!14030 = !DILocation(line: 0, scope: !14022)
!14031 = !DILocation(line: 0, scope: !13614, inlinedAt: !14032)
!14032 = distinct !DILocation(line: 217, column: 2, scope: !14022)
!14033 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !14034)
!14034 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !14032)
!14035 = !DILocation(line: 0, scope: !13623, inlinedAt: !14034)
!14036 = !DILocation(line: 218, column: 17, scope: !14025)
!14037 = !DILocation(line: 0, scope: !14025)
!14038 = !DILocation(line: 221, column: 27, scope: !14025)
!14039 = !DILocation(line: 233, column: 17, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14025, file: !2165, line: 233, column: 7)
!14041 = !DILocation(line: 234, column: 26, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14040, file: !2165, line: 233, column: 56)
!14043 = !DILocation(line: 234, column: 4, scope: !14042)
!14044 = !DILocation(line: 235, column: 3, scope: !14042)
!14045 = !DILocation(line: 0, scope: !13682, inlinedAt: !14046)
!14046 = distinct !DILocation(line: 217, column: 2, scope: !14026)
!14047 = !DILocation(line: 0, scope: !13690, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !14046)
!14049 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !14048)
!14050 = !DILocation(line: 237, column: 1, scope: !14017)
!14051 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2165, file: !2165, line: 239, type: !14052, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !14054)
!14052 = !DISubroutineType(types: !14053)
!14053 = !{null, !586}
!14054 = !{!14055, !14056, !14057, !14059}
!14055 = !DILocalVariable(name: "ticks", arg: 1, scope: !14051, file: !2165, line: 239, type: !586)
!14056 = !DILocalVariable(name: "key", scope: !14051, file: !2165, line: 245, type: !13592)
!14057 = !DILocalVariable(name: "t", scope: !14058, file: !2165, line: 262, type: !2138)
!14058 = distinct !DILexicalBlock(scope: !14051, file: !2165, line: 261, column: 67)
!14059 = !DILocalVariable(name: "dt", scope: !14058, file: !2165, line: 263, type: !103)
!14060 = !DILocation(line: 0, scope: !14051)
!14061 = !DILocation(line: 242, column: 2, scope: !14051)
!14062 = !DILocation(line: 0, scope: !13614, inlinedAt: !14063)
!14063 = distinct !DILocation(line: 245, column: 25, scope: !14051)
!14064 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !14065)
!14065 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !14063)
!14066 = !DILocation(line: 0, scope: !13623, inlinedAt: !14065)
!14067 = !DILocation(line: 261, column: 9, scope: !14051)
!14068 = !DILocation(line: 261, column: 17, scope: !14051)
!14069 = !DILocation(line: 261, column: 25, scope: !14051)
!14070 = !DILocation(line: 261, column: 37, scope: !14051)
!14071 = !DILocation(line: 261, column: 47, scope: !14051)
!14072 = !DILocation(line: 261, column: 44, scope: !14051)
!14073 = !DILocation(line: 261, column: 2, scope: !14051)
!14074 = !DILocation(line: 0, scope: !14058)
!14075 = !DILocation(line: 263, column: 12, scope: !14058)
!14076 = !DILocation(line: 265, column: 16, scope: !14058)
!14077 = !DILocation(line: 265, column: 13, scope: !14058)
!14078 = !DILocation(line: 266, column: 13, scope: !14058)
!14079 = !DILocation(line: 267, column: 3, scope: !14058)
!14080 = !DILocation(line: 0, scope: !13682, inlinedAt: !14081)
!14081 = distinct !DILocation(line: 269, column: 3, scope: !14058)
!14082 = !DILocation(line: 0, scope: !13690, inlinedAt: !14083)
!14083 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !14081)
!14084 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !14083)
!14085 = !DILocation(line: 270, column: 6, scope: !14058)
!14086 = !DILocation(line: 270, column: 3, scope: !14058)
!14087 = !DILocation(line: 0, scope: !13614, inlinedAt: !14088)
!14088 = distinct !DILocation(line: 271, column: 9, scope: !14058)
!14089 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !14088)
!14091 = !DILocation(line: 0, scope: !13623, inlinedAt: !14090)
!14092 = !DILocation(line: 272, column: 22, scope: !14058)
!14093 = distinct !{!14093, !14073, !14094}
!14094 = !DILocation(line: 273, column: 2, scope: !14051)
!14095 = !DILocation(line: 276, column: 19, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !2165, line: 275, column: 23)
!14097 = distinct !DILexicalBlock(scope: !14051, file: !2165, line: 275, column: 6)
!14098 = !DILocation(line: 277, column: 2, scope: !14096)
!14099 = !DILocation(line: 279, column: 15, scope: !14051)
!14100 = !DILocation(line: 279, column: 12, scope: !14051)
!14101 = !DILocation(line: 280, column: 21, scope: !14051)
!14102 = !DILocation(line: 282, column: 24, scope: !14051)
!14103 = !DILocation(line: 282, column: 2, scope: !14051)
!14104 = !DILocation(line: 0, scope: !13682, inlinedAt: !14105)
!14105 = distinct !DILocation(line: 284, column: 2, scope: !14051)
!14106 = !DILocation(line: 0, scope: !13690, inlinedAt: !14107)
!14107 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !14105)
!14108 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !14107)
!14109 = !DILocation(line: 285, column: 1, scope: !14051)
!14110 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2165, file: !2165, line: 287, type: !14111, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !14113)
!14111 = !DISubroutineType(types: !14112)
!14112 = !{!280}
!14113 = !{!14114, !14115, !14117}
!14114 = !DILocalVariable(name: "t", scope: !14110, file: !2165, line: 289, type: !1293)
!14115 = !DILocalVariable(name: "__i", scope: !14116, file: !2165, line: 291, type: !13592)
!14116 = distinct !DILexicalBlock(scope: !14110, file: !2165, line: 291, column: 2)
!14117 = !DILocalVariable(name: "__key", scope: !14116, file: !2165, line: 291, type: !13592)
!14118 = !DILocation(line: 0, scope: !14110)
!14119 = !DILocation(line: 0, scope: !14116)
!14120 = !DILocation(line: 0, scope: !13614, inlinedAt: !14121)
!14121 = distinct !DILocation(line: 291, column: 2, scope: !14116)
!14122 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !14123)
!14123 = distinct !DILocation(line: 145, column: 10, scope: !13614, inlinedAt: !14121)
!14124 = !DILocation(line: 0, scope: !13623, inlinedAt: !14123)
!14125 = !DILocation(line: 292, column: 7, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14127, file: !2165, line: 291, column: 24)
!14127 = distinct !DILexicalBlock(scope: !14116, file: !2165, line: 291, column: 2)
!14128 = !DILocation(line: 292, column: 19, scope: !14126)
!14129 = !DILocation(line: 0, scope: !13682, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 291, column: 2, scope: !14127)
!14131 = !DILocation(line: 0, scope: !13690, inlinedAt: !14132)
!14132 = distinct !DILocation(line: 215, column: 2, scope: !13682, inlinedAt: !14130)
!14133 = !DILocation(line: 95, column: 2, scope: !13690, inlinedAt: !14132)
!14134 = !DILocation(line: 292, column: 17, scope: !14126)
!14135 = !DILocation(line: 294, column: 2, scope: !14110)
!14136 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2165, file: !2165, line: 297, type: !5038, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !322)
!14137 = !DILocation(line: 300, column: 19, scope: !14136)
!14138 = !DILocation(line: 300, column: 9, scope: !14136)
!14139 = !DILocation(line: 300, column: 2, scope: !14136)
!14140 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2165, file: !2165, line: 306, type: !14111, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !322)
!14141 = !DILocation(line: 308, column: 9, scope: !14140)
!14142 = !DILocation(line: 308, column: 2, scope: !14140)
!14143 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2165, file: !2165, line: 319, type: !5048, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !14144)
!14144 = !{!14145, !14146, !14147, !14148}
!14145 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14143, file: !2165, line: 319, type: !121)
!14146 = !DILocalVariable(name: "start_cycles", scope: !14143, file: !2165, line: 328, type: !121)
!14147 = !DILocalVariable(name: "cycles_to_wait", scope: !14143, file: !2165, line: 331, type: !121)
!14148 = !DILocalVariable(name: "current_cycles", scope: !14149, file: !2165, line: 338, type: !121)
!14149 = distinct !DILexicalBlock(scope: !14150, file: !2165, line: 337, column: 11)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !2165, line: 337, column: 2)
!14151 = distinct !DILexicalBlock(scope: !14143, file: !2165, line: 337, column: 2)
!14152 = !DILocation(line: 0, scope: !14143)
!14153 = !DILocation(line: 322, column: 19, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14143, file: !2165, line: 322, column: 6)
!14155 = !DILocation(line: 322, column: 6, scope: !14143)
!14156 = !DILocation(line: 328, column: 26, scope: !14143)
!14157 = !DILocation(line: 333, column: 43, scope: !14143)
!14158 = !DILocation(line: 337, column: 2, scope: !14143)
!14159 = !DILocation(line: 338, column: 29, scope: !14149)
!14160 = !DILocation(line: 0, scope: !14149)
!14161 = !DILocation(line: 341, column: 23, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14149, file: !2165, line: 341, column: 7)
!14163 = !DILocation(line: 341, column: 39, scope: !14162)
!14164 = !DILocation(line: 349, column: 1, scope: !14143)
!14165 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !5038, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !322)
!14166 = !DILocation(line: 1677, column: 9, scope: !14165)
!14167 = !DILocation(line: 1677, column: 2, scope: !14165)
!14168 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14169, file: !14169, line: 24, type: !5038, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !322)
!14169 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14170 = !DILocation(line: 26, column: 9, scope: !14168)
!14171 = !DILocation(line: 26, column: 2, scope: !14168)
!14172 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2165, file: !2165, line: 364, type: !14173, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2135, retainedNodes: !14175)
!14173 = !DISubroutineType(types: !14174)
!14174 = !{!1293, !13582}
!14175 = !{!14176, !14177}
!14176 = !DILocalVariable(name: "timeout", arg: 1, scope: !14172, file: !2165, line: 364, type: !13582)
!14177 = !DILocalVariable(name: "dt", scope: !14172, file: !2165, line: 366, type: !1381)
!14178 = !DILocation(line: 0, scope: !14172)
!14179 = !DILocation(line: 368, column: 6, scope: !14172)
!14180 = !DILocation(line: 371, column: 10, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14182, file: !2165, line: 370, column: 47)
!14182 = distinct !DILexicalBlock(scope: !14183, file: !2165, line: 370, column: 13)
!14183 = distinct !DILexicalBlock(scope: !14172, file: !2165, line: 368, column: 6)
!14184 = !DILocation(line: 371, column: 3, scope: !14181)
!14185 = !DILocation(line: 376, column: 58, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14187, file: !2165, line: 376, column: 7)
!14187 = distinct !DILexicalBlock(scope: !14182, file: !2165, line: 372, column: 9)
!14188 = !DILocation(line: 376, column: 7, scope: !14187)
!14189 = !DILocation(line: 376, column: 43, scope: !14186)
!14190 = !DILocation(line: 377, column: 4, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14186, file: !2165, line: 376, column: 64)
!14192 = !DILocation(line: 379, column: 10, scope: !14187)
!14193 = !DILocation(line: 379, column: 33, scope: !14187)
!14194 = !DILocation(line: 379, column: 31, scope: !14187)
!14195 = !DILocation(line: 379, column: 3, scope: !14187)
!14196 = !DILocation(line: 0, scope: !14183)
!14197 = !DILocation(line: 381, column: 1, scope: !14172)
!14198 = distinct !DISubprogram(name: "boot_banner", scope: !14199, file: !14199, line: 26, type: !2843, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2829, retainedNodes: !322)
!14199 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14200 = !DILocation(line: 34, column: 2, scope: !14198)
!14201 = !DILocation(line: 36, column: 1, scope: !14198)
