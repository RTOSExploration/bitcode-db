; ModuleID = 'build/96b_argonkey/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230849 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230829 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230819 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230919 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230909 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230899 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230889 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230879 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230869 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134234108 to i8*), void (i8*)* inttoptr (i32 134232249 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230859 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134233892 to i8*), void (i8*)* inttoptr (i32 134230839 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [41 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !195
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !292
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !339
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !360
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !365
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !371
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !508
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !544
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.34, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !554
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !559
@.str.33 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.34 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !579
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !772
@.str.35 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !733
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !716
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !689
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !705
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !735
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !749
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !751
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !753
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !757
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !759
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !761
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !763
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !765
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !767
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.37 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !804
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !899
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !888
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !940
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1041
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1081
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1034
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1089
@esc_state = internal global i32 0, align 4, !dbg !1108
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1116
@end = internal unnamed_addr global i8 0, align 1, !dbg !1118
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1112
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1114
@.str.52 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.51 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.49 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.53 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1120
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1401
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1371
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1357
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1299
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !795
@.str.1.54 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1403
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1375
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1373
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1313
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !793
@.str.2.55 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1416
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1379
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1377
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1322
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !791
@.str.3.56 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1418
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1383
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1381
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1331
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !789
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1420
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1387
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1385
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1337
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !787
@.str.5.57 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1422
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1391
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1389
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1343
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !785
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1424
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1395
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1393
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1349
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !783
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1426
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1399
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1397
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1355
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !799
@.str.63 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1428
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1664
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1614
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1666
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1605
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1607
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1616
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1624
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1647
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1650
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*) }, section ".intList", align 4, !dbg !1653
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !872
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1692
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1799
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1801
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1797
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1768
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1803
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1297
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.54, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1311
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.55, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1320
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.56, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1329
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1335
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.57, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1341
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1347
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1353
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1893
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1934
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1937
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1943
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1949
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2158
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2167
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2174
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2179
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.113 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.117, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.118, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.120, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.114, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.121, i32 0, i32 0)], align 4, !dbg !2205
@.str.115 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.116 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.117 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.118 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.119 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.120 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.114 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.121 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2317
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2330
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2438
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2441
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2443
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2172
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2169
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2445
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2481
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2479
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2036
@.str.192 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2484
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3172 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3204, !srcloc !3205
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3206, !srcloc !3207
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3210, !srcloc !3211
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3212, !srcloc !3213
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3230, !srcloc !3233
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3236, !srcloc !3237
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3238, !srcloc !3239
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3240, !srcloc !3241
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3242, !srcloc !3243
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3244, !srcloc !3245
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3246, !srcloc !3247
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3248, !srcloc !3249
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3250, !srcloc !3251
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3252, !srcloc !3253
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3254, !srcloc !3255
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3256, !srcloc !3257
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3258, !srcloc !3259
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3260, !srcloc !3261
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3262, !srcloc !3263
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3264, !srcloc !3265
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3266, !srcloc !3267
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3280, !srcloc !3281
  ret void, !dbg !3282
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3285 {
  tail call void @console_getline_init() #26, !dbg !3290
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !3291
  br label %1, !dbg !3292

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #26, !dbg !3293
  call void @llvm.dbg.value(metadata i8* %2, metadata !3288, metadata !DIExpression()), !dbg !3294
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #26, !dbg !3295
  %3 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !3296
  %4 = add i32 %3, -1, !dbg !3297
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !3298
  %6 = load i8, i8* %5, align 1, !dbg !3298
  %7 = zext i8 %6 to i32, !dbg !3298
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #26, !dbg !3299
  br label %1, !dbg !3292, !llvm.loop !3300
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3304, metadata !DIExpression()), !dbg !3305
  ret i32 0, !dbg !3306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3307 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3311, metadata !DIExpression()), !dbg !3312
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3313
  ret void, !dbg !3314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3315 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3318
  ret i8* %1, !dbg !3319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3320 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3332, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.value(metadata i8* %0, metadata !3331, metadata !DIExpression()), !dbg !3341
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !3342
  ret void, !dbg !3344
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3349, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.value(metadata i8* %1, metadata !3350, metadata !DIExpression()), !dbg !3351
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3352
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3352
  ret i32 %4, !dbg !3353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3354 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3366, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3363, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %1, metadata !3364, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %2, metadata !3365, metadata !DIExpression()), !dbg !3367
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3368
  ret void, !dbg !3369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3374, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i32 %1, metadata !3375, metadata !DIExpression()), !dbg !3377
  call void @llvm.dbg.value(metadata i32 0, metadata !3376, metadata !DIExpression()), !dbg !3377
  %3 = icmp eq i32 %1, 0, !dbg !3378
  br i1 %3, label %13, label %4, !dbg !3381

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3376, metadata !DIExpression()), !dbg !3377
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3382
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3384
  %8 = load i8, i8* %7, align 1, !dbg !3384
  %9 = zext i8 %8 to i32, !dbg !3384
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3382
  %11 = add nuw i32 %5, 1, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %11, metadata !3376, metadata !DIExpression()), !dbg !3377
  %12 = icmp eq i32 %11, %1, !dbg !3378
  br i1 %12, label %13, label %4, !dbg !3381, !llvm.loop !3386

13:                                               ; preds = %4, %2
  ret void, !dbg !3388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3389 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3393, metadata !DIExpression()), !dbg !3395
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3396
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3394, metadata !DIExpression()), !dbg !3397
  call void @llvm.va_start(i8* nonnull %3), !dbg !3398
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3399
  %5 = load i32, i32* %4, align 4, !dbg !3399
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3399
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !3399
  call void @llvm.va_end(i8* nonnull %3), !dbg !3400
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3401
  ret void, !dbg !3401
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3402 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3406, metadata !DIExpression()), !dbg !3411
  call void @llvm.dbg.value(metadata i32 %1, metadata !3407, metadata !DIExpression()), !dbg !3411
  call void @llvm.dbg.value(metadata i8* %2, metadata !3408, metadata !DIExpression()), !dbg !3411
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3412
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3412
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3409, metadata !DIExpression()), !dbg !3413
  call void @llvm.va_start(i8* nonnull %5), !dbg !3414
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3415
  %7 = load i32, i32* %6, align 4, !dbg !3415
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3415
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !3415
  call void @llvm.dbg.value(metadata i32 %9, metadata !3410, metadata !DIExpression()), !dbg !3411
  call void @llvm.va_end(i8* nonnull %5), !dbg !3416
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3417
  ret i32 %9, !dbg !3418
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3419 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i8* %0, metadata !3423, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i32 %1, metadata !3424, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.value(metadata i8* %2, metadata !3425, metadata !DIExpression()), !dbg !3433
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3434
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3434
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3427, metadata !DIExpression()), !dbg !3435
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3436
  store i8* %0, i8** %7, align 4, !dbg !3436
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3436
  store i32 %1, i32* %8, align 4, !dbg !3436
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3436
  store i32 0, i32* %9, align 4, !dbg !3436
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !3437
  %10 = load i32, i32* %9, align 4, !dbg !3438
  %11 = load i32, i32* %8, align 4, !dbg !3440
  %12 = icmp slt i32 %10, %11, !dbg !3441
  br i1 %12, label %13, label %15, !dbg !3442

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3443
  store i8 0, i8* %14, align 1, !dbg !3445
  br label %15, !dbg !3446

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3447
  ret i32 %10, !dbg !3448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3454, metadata !DIExpression()), !dbg !3456
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3455, metadata !DIExpression()), !dbg !3456
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3457
  %4 = load i8*, i8** %3, align 4, !dbg !3457
  %5 = icmp eq i8* %4, null, !dbg !3459
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3460
  br i1 %5, label %12, label %8, !dbg !3461

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3462
  %10 = load i32, i32* %9, align 4, !dbg !3462
  %11 = icmp slt i32 %7, %10, !dbg !3463
  br i1 %11, label %15, label %12, !dbg !3464

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3465
  %14 = add nsw i32 %7, 1, !dbg !3467
  store i32 %14, i32* %13, align 4, !dbg !3467
  br label %25, !dbg !3468

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3469
  %17 = icmp eq i32 %7, %16, !dbg !3471
  br i1 %17, label %18, label %21, !dbg !3472

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3473
  store i32 %19, i32* %6, align 4, !dbg !3473
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3475
  store i8 0, i8* %20, align 1, !dbg !3476
  br label %25, !dbg !3477

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3478
  %23 = add nsw i32 %7, 1, !dbg !3480
  store i32 %23, i32* %6, align 4, !dbg !3480
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3481
  store i8 %22, i8* %24, align 1, !dbg !3482
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3483
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3484 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3494, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i8* %1, metadata !3495, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i8* %2, metadata !3496, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i8* %3, metadata !3497, metadata !DIExpression()), !dbg !3498
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !3499
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3500
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !3501
  unreachable, !dbg !3502
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3503 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3607
  ret %struct.k_thread* %1, !dbg !3608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3609 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3614, metadata !DIExpression()), !dbg !3615
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3616, !srcloc !3618
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !3619
  ret void, !dbg !3620
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3621 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3622, !srcloc !3624
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3625
  ret %struct.k_thread* %1, !dbg !3626
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3627 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3638, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %1, metadata !3639, metadata !DIExpression()), !dbg !3642
  %3 = icmp eq i8* %1, null, !dbg !3643
  br i1 %3, label %8, label %4, !dbg !3645

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3646
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3646
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3640, metadata !DIExpression()), !dbg !3642
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !3647, !range !3648
  call void @llvm.dbg.value(metadata i32 %7, metadata !3641, metadata !DIExpression()), !dbg !3642
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !3649
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !3650
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3652 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3656, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %1, metadata !3657, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i8* %1, metadata !3658, metadata !DIExpression()), !dbg !3660
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3661
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3659, metadata !DIExpression()), !dbg !3660
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3662
  %5 = ptrtoint i8* %4 to i32, !dbg !3663
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3663
  %7 = sub i32 %5, %6, !dbg !3663
  %8 = lshr i32 %7, 3, !dbg !3664
  ret i32 %8, !dbg !3665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3666 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3670, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i32 %1, metadata !3671, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata i1 %2, metadata !3672, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3675
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3676
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3673, metadata !DIExpression()), !dbg !3675
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3674, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3675
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3677
  %6 = bitcast i8* %5 to i16*, !dbg !3677
  %7 = load i16, i16* %6, align 2, !dbg !3677
  %8 = and i16 %7, -2, !dbg !3681
  %9 = zext i1 %2 to i16, !dbg !3681
  %10 = or i16 %8, %9, !dbg !3681
  store i16 %10, i16* %6, align 2, !dbg !3677
  ret void, !dbg !3682
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3683 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3687, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata i32 %1, metadata !3688, metadata !DIExpression()), !dbg !3689
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3690
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3692
  br i1 %4, label %7, label %5, !dbg !3693

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3694
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3696
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3697
  br label %7, !dbg !3698

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3699, !range !3701
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3702
  br i1 %9, label %13, label %10, !dbg !3703

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !3704
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3706, !range !3701
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !3707
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3708
  call void @llvm.dbg.value(metadata i32 %12, metadata !3688, metadata !DIExpression()), !dbg !3689
  br label %13, !dbg !3709

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3688, metadata !DIExpression()), !dbg !3689
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !3710
  ret void, !dbg !3711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3712 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3716, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.value(metadata i32 %1, metadata !3717, metadata !DIExpression()), !dbg !3718
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3719
  %4 = add i32 %3, %1, !dbg !3720
  ret i32 %4, !dbg !3721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3722 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3726, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i32 %1, metadata !3727, metadata !DIExpression()), !dbg !3728
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3729
  %4 = and i32 %3, 1, !dbg !3730
  %5 = icmp ne i32 %4, 0, !dbg !3729
  ret i1 %5, !dbg !3731
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3732 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3734, metadata !DIExpression()), !dbg !3739
  call void @llvm.dbg.value(metadata i32 %1, metadata !3735, metadata !DIExpression()), !dbg !3739
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3740, !range !3741
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3742
  call void @llvm.dbg.value(metadata i32 %4, metadata !3736, metadata !DIExpression()), !dbg !3743
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3744
  ret void, !dbg !3745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3746 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3750, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 %1, metadata !3751, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 %2, metadata !3752, metadata !DIExpression()), !dbg !3755
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3756
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3757
  %6 = add i32 %5, %4, !dbg !3758
  call void @llvm.dbg.value(metadata i32 %6, metadata !3753, metadata !DIExpression()), !dbg !3755
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !3759
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !3760
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !3761
  ret void, !dbg !3762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3763 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3765, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.value(metadata i32 %1, metadata !3766, metadata !DIExpression()), !dbg !3767
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !3768
  %4 = sub i32 %1, %3, !dbg !3769
  ret i32 %4, !dbg !3770
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3771 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3773, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i32 %1, metadata !3774, metadata !DIExpression()), !dbg !3778
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3779, !range !3741
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !3780
  call void @llvm.dbg.value(metadata i32 %4, metadata !3775, metadata !DIExpression()), !dbg !3781
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !3782
  ret void, !dbg !3783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3784 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3788, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1, metadata !3789, metadata !DIExpression()), !dbg !3790
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !3791
  %4 = lshr i32 %3, 1, !dbg !3792
  ret i32 %4, !dbg !3793
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3794 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3798, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.value(metadata i32 %1, metadata !3799, metadata !DIExpression()), !dbg !3801
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !3802
  %4 = add i32 %1, 1, !dbg !3803
  %5 = sub i32 %4, %3, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %5, metadata !3800, metadata !DIExpression()), !dbg !3801
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3805, !range !3806
  %7 = sub nsw i32 31, %6, !dbg !3807
  ret i32 %7, !dbg !3808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3809 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3813, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %1, metadata !3814, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %2, metadata !3815, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3816, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3822
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3823
  %5 = load i32, i32* %4, align 4, !dbg !3823
  %6 = icmp eq i32 %5, 0, !dbg !3824
  br i1 %6, label %7, label %12, !dbg !3825

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3826
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3828
  %10 = load i32, i32* %9, align 4, !dbg !3829
  %11 = or i32 %10, %8, !dbg !3829
  store i32 %11, i32* %9, align 4, !dbg !3829
  store i32 %1, i32* %4, align 4, !dbg !3830
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3831
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !3832
  br label %14, !dbg !3833

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3818, metadata !DIExpression()), !dbg !3834
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !3835, !range !3836
  call void @llvm.dbg.value(metadata i32 %13, metadata !3821, metadata !DIExpression()), !dbg !3834
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !3837
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !3838
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !3839
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !3840
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3842 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3844, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i32 %1, metadata !3845, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i32 %2, metadata !3846, metadata !DIExpression()), !dbg !3847
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !3848
  ret void, !dbg !3849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3850 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3852, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 %1, metadata !3853, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.value(metadata i32 %2, metadata !3854, metadata !DIExpression()), !dbg !3855
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !3856
  ret void, !dbg !3857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3858 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3860, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i32 %1, metadata !3861, metadata !DIExpression()), !dbg !3862
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !3863
  ret i32 %3, !dbg !3864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3865 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3869, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %1, metadata !3870, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata i32 %2, metadata !3871, metadata !DIExpression()), !dbg !3874
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3875
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3872, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3873, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3874
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3873, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3874
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3876
  call void @llvm.dbg.value(metadata i8* %5, metadata !3873, metadata !DIExpression()), !dbg !3874
  %6 = bitcast i8* %5 to i16*, !dbg !3877
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3880
  %8 = load i16, i16* %7, align 2, !dbg !3880
  %9 = zext i16 %8 to i32, !dbg !3880
  ret i32 %9, !dbg !3881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3882 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3886, metadata !DIExpression()), !dbg !3887
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3888
  ret %struct.chunk_unit_t* %2, !dbg !3889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3894, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.value(metadata i32 %1, metadata !3895, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.value(metadata i32 %2, metadata !3896, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.value(metadata i32 %3, metadata !3897, metadata !DIExpression()), !dbg !3900
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !3901
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3898, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3899, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3900
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3902
  call void @llvm.dbg.value(metadata i8* %6, metadata !3899, metadata !DIExpression()), !dbg !3900
  %7 = trunc i32 %3 to i16, !dbg !3903
  %8 = bitcast i8* %6 to i16*, !dbg !3906
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3907
  store i16 %7, i16* %9, align 2, !dbg !3908
  ret void, !dbg !3909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3910 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3914, metadata !DIExpression()), !dbg !3915
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !3916
  ret i32 %2, !dbg !3917
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3918 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3922, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.value(metadata i32 %1, metadata !3923, metadata !DIExpression()), !dbg !3924
  %3 = add i32 %1, 4, !dbg !3925
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !3926
  ret i32 %4, !dbg !3927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3932, metadata !DIExpression()), !dbg !3933
  %2 = add i32 %0, 7, !dbg !3934
  %3 = lshr i32 %2, 3, !dbg !3935
  ret i32 %3, !dbg !3936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3937 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3941, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i32 %1, metadata !3942, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i32 %2, metadata !3943, metadata !DIExpression()), !dbg !3944
  %4 = shl i32 %2, 1, !dbg !3945
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !3946
  ret void, !dbg !3947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3948 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3950, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.value(metadata i32 %1, metadata !3951, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.value(metadata i32 %2, metadata !3952, metadata !DIExpression()), !dbg !3953
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !3954
  ret void, !dbg !3955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3956 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3958, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %1, metadata !3959, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %2, metadata !3960, metadata !DIExpression()), !dbg !3966
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !3967
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3961, metadata !DIExpression()), !dbg !3966
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3968
  %6 = icmp eq i32 %5, %1, !dbg !3969
  br i1 %6, label %7, label %14, !dbg !3970

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3971
  %9 = xor i32 %8, -1, !dbg !3973
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3974
  %11 = load i32, i32* %10, align 4, !dbg !3975
  %12 = and i32 %11, %9, !dbg !3975
  store i32 %12, i32* %10, align 4, !dbg !3975
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3976
  store i32 0, i32* %13, align 4, !dbg !3977
  br label %17, !dbg !3978

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !3979
  call void @llvm.dbg.value(metadata i32 %15, metadata !3962, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %5, metadata !3965, metadata !DIExpression()), !dbg !3980
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3981
  store i32 %5, i32* %16, align 4, !dbg !3982
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !3983
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !3984
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !3985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3986 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3988, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32 %1, metadata !3989, metadata !DIExpression()), !dbg !3990
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !3991
  ret i32 %3, !dbg !3992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3993 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3997, metadata !DIExpression()), !dbg !4004
  call void @llvm.dbg.value(metadata i8* %1, metadata !3998, metadata !DIExpression()), !dbg !4004
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4005
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4005
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3999, metadata !DIExpression()), !dbg !4004
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !4006
  call void @llvm.dbg.value(metadata i32 %5, metadata !4000, metadata !DIExpression()), !dbg !4004
  %6 = ptrtoint i8* %1 to i32, !dbg !4007
  call void @llvm.dbg.value(metadata i32 %6, metadata !4001, metadata !DIExpression()), !dbg !4004
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !4008
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4008
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %9, metadata !4002, metadata !DIExpression()), !dbg !4004
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !4010
  %11 = shl i32 %10, 3, !dbg !4011
  call void @llvm.dbg.value(metadata i32 %11, metadata !4003, metadata !DIExpression()), !dbg !4004
  %12 = sub i32 %9, %6, !dbg !4012
  %13 = add i32 %12, %11, !dbg !4013
  ret i32 %13, !dbg !4014
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4015 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4019, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32 %1, metadata !4020, metadata !DIExpression()), !dbg !4025
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4026
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4026
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4021, metadata !DIExpression()), !dbg !4025
  %5 = icmp eq i32 %1, 0, !dbg !4027
  br i1 %5, label %19, label %6, !dbg !4029

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4030
  br i1 %7, label %19, label %8, !dbg !4031

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !4032, !range !3648
  call void @llvm.dbg.value(metadata i32 %9, metadata !4023, metadata !DIExpression()), !dbg !4025
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %10, metadata !4024, metadata !DIExpression()), !dbg !4025
  %11 = icmp eq i32 %10, 0, !dbg !4034
  br i1 %11, label %19, label %12, !dbg !4036

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4037
  %14 = icmp ugt i32 %13, %9, !dbg !4039
  br i1 %14, label %15, label %17, !dbg !4040

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4041
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !4043
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !4044
  br label %17, !dbg !4045

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !4046
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !4047
  call void @llvm.dbg.value(metadata i8* %18, metadata !4022, metadata !DIExpression()), !dbg !4025
  br label %19, !dbg !4048

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4025
  ret i8* %20, !dbg !4049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4050 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4054, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.value(metadata i32 %1, metadata !4055, metadata !DIExpression()), !dbg !4056
  %3 = lshr i32 %1, 3, !dbg !4057
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4058
  %5 = load i32, i32* %4, align 4, !dbg !4058
  %6 = icmp uge i32 %3, %5, !dbg !4059
  ret i1 %6, !dbg !4060
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4061 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4065, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i32 %1, metadata !4066, metadata !DIExpression()), !dbg !4080
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %3, metadata !4067, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4068, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4080
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4082
  %5 = load i32, i32* %4, align 4, !dbg !4082
  %6 = icmp eq i32 %5, 0, !dbg !4083
  br i1 %6, label %19, label %7, !dbg !4084

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4085
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4086
  call void @llvm.dbg.value(metadata i32 %9, metadata !4072, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 %8, metadata !4073, metadata !DIExpression()), !dbg !4087
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4088
  %11 = icmp ult i32 %10, %1, !dbg !4090
  br i1 %11, label %13, label %12, !dbg !4091

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !4092
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !4094
  store i32 %14, i32* %4, align 4, !dbg !4095
  %15 = add nsw i32 %9, -1, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %15, metadata !4072, metadata !DIExpression()), !dbg !4086
  %16 = icmp eq i32 %15, 0, !dbg !4096
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4097
  br i1 %18, label %19, label %7, !dbg !4097, !llvm.loop !4098

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4101
  %21 = load i32, i32* %20, align 4, !dbg !4101
  %22 = add nsw i32 %3, 1, !dbg !4102
  %23 = shl nsw i32 -1, %22, !dbg !4102
  %24 = and i32 %21, %23, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %24, metadata !4075, metadata !DIExpression()), !dbg !4080
  %25 = icmp eq i32 %24, 0, !dbg !4104
  br i1 %25, label %30, label %26, !dbg !4105

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4106, !range !3806
  call void @llvm.dbg.value(metadata i32 %27, metadata !4076, metadata !DIExpression()), !dbg !4107
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4108
  %29 = load i32, i32* %28, align 4, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %29, metadata !4079, metadata !DIExpression()), !dbg !4107
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !4109
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4080
  ret i32 %31, !dbg !4110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4111 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4113, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata i32 %1, metadata !4114, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata i32 %2, metadata !4115, metadata !DIExpression()), !dbg !4119
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %4, metadata !4116, metadata !DIExpression()), !dbg !4119
  %5 = sub i32 %2, %1, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %5, metadata !4117, metadata !DIExpression()), !dbg !4119
  %6 = sub i32 %4, %5, !dbg !4122
  call void @llvm.dbg.value(metadata i32 %6, metadata !4118, metadata !DIExpression()), !dbg !4119
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !4123
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !4124
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !4125
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !4126
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !4127
  ret void, !dbg !4128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4129 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4133, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i32 %1, metadata !4134, metadata !DIExpression()), !dbg !4137
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !4138
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4135, metadata !DIExpression()), !dbg !4137
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %4, metadata !4136, metadata !DIExpression()), !dbg !4137
  ret i8* %4, !dbg !4140
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4141 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4145, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.value(metadata i32 %1, metadata !4146, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.value(metadata i32 %2, metadata !4147, metadata !DIExpression()), !dbg !4157
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4158
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4158
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4148, metadata !DIExpression()), !dbg !4157
  %6 = sub i32 0, %1, !dbg !4159
  %7 = and i32 %6, %1, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %7, metadata !4150, metadata !DIExpression()), !dbg !4157
  %8 = icmp eq i32 %7, %1, !dbg !4161
  br i1 %8, label %13, label %9, !dbg !4163

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %10, metadata !4146, metadata !DIExpression()), !dbg !4157
  %11 = icmp ult i32 %7, 4, !dbg !4166
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4166
  br label %17, !dbg !4166

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4167
  br i1 %14, label %15, label %17, !dbg !4170

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !4171
  br label %57, !dbg !4173

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4157
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4174
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4146, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.value(metadata i32 %19, metadata !4149, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.value(metadata i32 %18, metadata !4150, metadata !DIExpression()), !dbg !4157
  %21 = icmp eq i32 %2, 0, !dbg !4175
  br i1 %21, label %57, label %22, !dbg !4177

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !4178
  br i1 %23, label %57, label %24, !dbg !4179

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4180
  %26 = add i32 %25, %20, !dbg !4181
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #27, !dbg !4182, !range !3648
  call void @llvm.dbg.value(metadata i32 %27, metadata !4151, metadata !DIExpression()), !dbg !4157
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #27, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %28, metadata !4152, metadata !DIExpression()), !dbg !4157
  %29 = icmp eq i32 %28, 0, !dbg !4184
  br i1 %29, label %57, label %30, !dbg !4186

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4187
  call void @llvm.dbg.value(metadata i8* %31, metadata !4153, metadata !DIExpression()), !dbg !4157
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4188
  %33 = ptrtoint i8* %32 to i32, !dbg !4188
  %34 = add i32 %20, -1, !dbg !4188
  %35 = add i32 %34, %33, !dbg !4188
  %36 = sub i32 0, %20, !dbg !4188
  %37 = and i32 %35, %36, !dbg !4188
  %38 = inttoptr i32 %37 to i8*, !dbg !4189
  %39 = sub i32 0, %18, !dbg !4190
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4190
  call void @llvm.dbg.value(metadata i8* %40, metadata !4153, metadata !DIExpression()), !dbg !4157
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4191
  %42 = ptrtoint i8* %41 to i32, !dbg !4191
  %43 = add i32 %42, 7, !dbg !4191
  %44 = and i32 %43, -8, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %44, metadata !4154, metadata !DIExpression()), !dbg !4157
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #27, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %45, metadata !4155, metadata !DIExpression()), !dbg !4157
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !4193
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4194
  %48 = sub i32 %44, %47, !dbg !4194
  %49 = ashr exact i32 %48, 3, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %49, metadata !4156, metadata !DIExpression()), !dbg !4157
  %50 = icmp ugt i32 %45, %28, !dbg !4195
  br i1 %50, label %51, label %52, !dbg !4197

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #27, !dbg !4198
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #27, !dbg !4200
  br label %52, !dbg !4201

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #27, !dbg !4202
  %54 = icmp ugt i32 %53, %49, !dbg !4204
  br i1 %54, label %55, label %56, !dbg !4205

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #27, !dbg !4206
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !4208
  br label %56, !dbg !4209

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #27, !dbg !4210
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4157
  ret i8* %58, !dbg !4211
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4212 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4216, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i8* %1, metadata !4217, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i32 %2, metadata !4218, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i32 %3, metadata !4219, metadata !DIExpression()), !dbg !4235
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4236
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4236
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4220, metadata !DIExpression()), !dbg !4235
  %7 = icmp eq i8* %1, null, !dbg !4237
  br i1 %7, label %8, label %10, !dbg !4239

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4240
  br label %59, !dbg !4242

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4243
  br i1 %11, label %12, label %13, !dbg !4245

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4246
  br label %59, !dbg !4248

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !4249
  br i1 %14, label %59, label %15, !dbg !4251

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !4252, !range !3648
  call void @llvm.dbg.value(metadata i32 %16, metadata !4221, metadata !DIExpression()), !dbg !4235
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4253
  call void @llvm.dbg.value(metadata i32 %17, metadata !4222, metadata !DIExpression()), !dbg !4235
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4254
  %19 = ptrtoint i8* %1 to i32, !dbg !4255
  %20 = ptrtoint i8* %18 to i32, !dbg !4255
  %21 = sub i32 %19, %20, !dbg !4255
  call void @llvm.dbg.value(metadata i32 %21, metadata !4223, metadata !DIExpression()), !dbg !4235
  %22 = add i32 %21, %3, !dbg !4256
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %23, metadata !4224, metadata !DIExpression()), !dbg !4235
  %24 = icmp eq i32 %2, 0, !dbg !4258
  br i1 %24, label %29, label %25, !dbg !4259

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4260
  %27 = and i32 %26, %19, !dbg !4261
  %28 = icmp eq i32 %27, 0, !dbg !4261
  br i1 %28, label %29, label %49, !dbg !4262

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4263
  %31 = icmp eq i32 %23, %30, !dbg !4264
  br i1 %31, label %59, label %32, !dbg !4265

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4266
  br i1 %33, label %34, label %36, !dbg !4267

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4268
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #27, !dbg !4270
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4271
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #27, !dbg !4272
  br label %59, !dbg !4273

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4274
  br i1 %37, label %49, label %38, !dbg !4275

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4276
  %40 = add i32 %39, %30, !dbg !4277
  %41 = icmp ult i32 %40, %23, !dbg !4278
  br i1 %41, label %49, label %42, !dbg !4279

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %43, metadata !4225, metadata !DIExpression()), !dbg !4281
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4282
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #27, !dbg !4283
  %45 = icmp ult i32 %43, %44, !dbg !4285
  br i1 %45, label %46, label %48, !dbg !4286

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4287
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #27, !dbg !4289
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #27, !dbg !4290
  br label %48, !dbg !4291

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #27, !dbg !4292
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #27, !dbg !4293
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !4294
  call void @llvm.dbg.value(metadata i8* %50, metadata !4231, metadata !DIExpression()), !dbg !4235
  %51 = icmp eq i8* %50, null, !dbg !4295
  br i1 %51, label %59, label %52, !dbg !4296

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #27, !dbg !4297, !range !3741
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #27, !dbg !4298
  %55 = sub i32 %54, %21, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %55, metadata !4232, metadata !DIExpression()), !dbg !4300
  %56 = icmp ult i32 %55, %3, !dbg !4301
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4301
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #26, !dbg !4302
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !4303
  br label %59, !dbg !4304

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4235
  ret i8* %60, !dbg !4305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4306 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4310, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i32 %1, metadata !4311, metadata !DIExpression()), !dbg !4312
  %3 = shl i32 %1, 3, !dbg !4313
  %4 = add i32 %3, -4, !dbg !4314
  ret i32 %4, !dbg !4315
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4316 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4320, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %1, metadata !4321, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i32 %2, metadata !4322, metadata !DIExpression()), !dbg !4331
  %4 = add i32 %2, -4, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %4, metadata !4322, metadata !DIExpression()), !dbg !4331
  %5 = ptrtoint i8* %1 to i32, !dbg !4333
  %6 = add i32 %5, 7, !dbg !4333
  %7 = and i32 %6, -8, !dbg !4333
  call void @llvm.dbg.value(metadata i32 %7, metadata !4323, metadata !DIExpression()), !dbg !4331
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4334
  %9 = ptrtoint i8* %8 to i32, !dbg !4334
  %10 = and i32 %9, -8, !dbg !4334
  call void @llvm.dbg.value(metadata i32 %10, metadata !4324, metadata !DIExpression()), !dbg !4331
  %11 = sub i32 %10, %7, !dbg !4335
  %12 = lshr exact i32 %11, 3, !dbg !4336
  call void @llvm.dbg.value(metadata i32 %12, metadata !4325, metadata !DIExpression()), !dbg !4331
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4337
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4326, metadata !DIExpression()), !dbg !4331
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4338
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4339
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4340
  store i32 %12, i32* %15, align 8, !dbg !4341
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4342
  store i32 0, i32* %16, align 4, !dbg !4343
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #27, !dbg !4344
  call void @llvm.dbg.value(metadata i32 %17, metadata !4327, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4331
  %18 = shl i32 %17, 2, !dbg !4345
  %19 = add i32 %18, 20, !dbg !4346
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #27, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %20, metadata !4328, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i32 0, metadata !4329, metadata !DIExpression()), !dbg !4348
  %21 = icmp slt i32 %17, 0, !dbg !4349
  br i1 %21, label %22, label %24, !dbg !4351

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #27, !dbg !4352
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #27, !dbg !4353
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !4354
  %23 = sub i32 %12, %20, !dbg !4355
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #27, !dbg !4356
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #27, !dbg !4357
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #27, !dbg !4358
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #27, !dbg !4359
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #27, !dbg !4360
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #27, !dbg !4361
  ret void, !dbg !4362

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4329, metadata !DIExpression()), !dbg !4348
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4363
  store i32 0, i32* %26, align 4, !dbg !4365
  %27 = add nuw i32 %25, 1, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %27, metadata !4329, metadata !DIExpression()), !dbg !4348
  %28 = icmp eq i32 %25, %17, !dbg !4349
  br i1 %28, label %22, label %24, !dbg !4351, !llvm.loop !4367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4369 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4382, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4379, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8* %1, metadata !4380, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8* %2, metadata !4381, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %4, metadata !4383, metadata !DIExpression()), !dbg !4510
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4511
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4511
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4384, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i32 0, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i1 undef, metadata !4390, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4510
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4513

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4513

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4514
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4382, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8* %30, metadata !4381, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %29, metadata !4388, metadata !DIExpression()), !dbg !4510
  %31 = load i8, i8* %30, align 1, !dbg !4515
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4513

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4515
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4516
  call void @llvm.dbg.value(metadata i8* %34, metadata !4381, metadata !DIExpression()), !dbg !4510
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4516
  call void @llvm.dbg.value(metadata i32 %35, metadata !4392, metadata !DIExpression()), !dbg !4517
  %36 = icmp slt i32 %35, 0, !dbg !4518
  %37 = add i32 %29, 1, !dbg !4516
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %36, label %365, label %28, !llvm.loop !4520

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4522
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4397, metadata !DIExpression()), !dbg !4523
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4523
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4442, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4445, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8* %30, metadata !4448, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i32 -1, metadata !4449, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i32 -1, metadata !4450, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8* null, metadata !4451, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8* %14, metadata !4452, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8 0, metadata !4453, metadata !DIExpression()), !dbg !4524
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !4525
  call void @llvm.dbg.value(metadata i8* %39, metadata !4381, metadata !DIExpression()), !dbg !4510
  %40 = load i24, i24* %15, align 8, !dbg !4526
  %41 = and i24 %40, 256, !dbg !4526
  %42 = icmp eq i24 %41, 0, !dbg !4526
  br i1 %42, label %51, label %43, !dbg !4528

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4529
  call void @llvm.dbg.value(metadata i8* %44, metadata !4382, metadata !DIExpression()), !dbg !4510
  %45 = bitcast i8* %27 to i32*, !dbg !4529
  %46 = load i32, i32* %45, align 4, !dbg !4529
  call void @llvm.dbg.value(metadata i32 %46, metadata !4449, metadata !DIExpression()), !dbg !4524
  %47 = icmp slt i32 %46, 0, !dbg !4531
  br i1 %47, label %48, label %56, !dbg !4533

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4534
  store i24 %49, i24* %15, align 8, !dbg !4534
  %50 = sub nsw i32 0, %46, !dbg !4536
  call void @llvm.dbg.value(metadata i32 %50, metadata !4449, metadata !DIExpression()), !dbg !4524
  br label %56, !dbg !4537

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4538
  %53 = icmp eq i24 %52, 0, !dbg !4538
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4540
  br label %56, !dbg !4540

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4541
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4524
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4382, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %58, metadata !4449, metadata !DIExpression()), !dbg !4524
  %60 = and i24 %57, 1024, !dbg !4541
  %61 = icmp eq i24 %60, 0, !dbg !4541
  br i1 %61, label %69, label %62, !dbg !4542

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4543
  call void @llvm.dbg.value(metadata i8* %63, metadata !4382, metadata !DIExpression()), !dbg !4510
  %64 = bitcast i8* %59 to i32*, !dbg !4543
  %65 = load i32, i32* %64, align 4, !dbg !4543
  call void @llvm.dbg.value(metadata i32 %65, metadata !4454, metadata !DIExpression()), !dbg !4544
  %66 = icmp slt i32 %65, 0, !dbg !4545
  br i1 %66, label %67, label %74, !dbg !4547

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4548
  store i24 %68, i24* %15, align 8, !dbg !4548
  br label %74, !dbg !4550

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4551
  %71 = icmp eq i24 %70, 0, !dbg !4551
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4553
  br label %74, !dbg !4553

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4554
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4524
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4524
  call void @llvm.dbg.value(metadata i8* %77, metadata !4382, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %76, metadata !4450, metadata !DIExpression()), !dbg !4524
  store i32 0, i32* %16, align 4, !dbg !4555
  store i32 0, i32* %17, align 8, !dbg !4556
  %78 = lshr i24 %75, 16, !dbg !4554
  call void @llvm.dbg.value(metadata i24 %78, metadata !4457, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4524
  %79 = lshr i24 %75, 11, !dbg !4557
  %80 = and i24 %79, 15, !dbg !4557
  %81 = zext i24 %80 to i32, !dbg !4557
  call void @llvm.dbg.value(metadata i32 %81, metadata !4458, metadata !DIExpression()), !dbg !4524
  %82 = trunc i24 %78 to i3, !dbg !4558
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4558

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4559

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4562
  call void @llvm.dbg.value(metadata i8* %85, metadata !4382, metadata !DIExpression()), !dbg !4510
  %86 = bitcast i8* %77 to i32*, !dbg !4562
  %87 = load i32, i32* %86, align 4, !dbg !4562
  %88 = sext i32 %87 to i64, !dbg !4562
  store i64 %88, i64* %20, align 8, !dbg !4564
  br label %115, !dbg !4565

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4566
  call void @llvm.dbg.value(metadata i8* %90, metadata !4382, metadata !DIExpression()), !dbg !4510
  %91 = bitcast i8* %77 to i32*, !dbg !4566
  %92 = load i32, i32* %91, align 4, !dbg !4566
  %93 = sext i32 %92 to i64, !dbg !4566
  store i64 %93, i64* %20, align 8, !dbg !4569
  br label %115, !dbg !4570

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4571
  %96 = add i32 %95, 7, !dbg !4571
  %97 = and i32 %96, -8, !dbg !4571
  %98 = inttoptr i32 %97 to i8*, !dbg !4571
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4571
  call void @llvm.dbg.value(metadata i8* %99, metadata !4382, metadata !DIExpression()), !dbg !4510
  %100 = inttoptr i32 %97 to i64*, !dbg !4571
  %101 = load i64, i64* %100, align 8, !dbg !4571
  store i64 %101, i64* %20, align 8, !dbg !4572
  br label %115, !dbg !4573

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4574
  %104 = add i32 %103, 7, !dbg !4574
  %105 = and i32 %104, -8, !dbg !4574
  %106 = inttoptr i32 %105 to i8*, !dbg !4574
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4574
  call void @llvm.dbg.value(metadata i8* %107, metadata !4382, metadata !DIExpression()), !dbg !4510
  %108 = inttoptr i32 %105 to i64*, !dbg !4574
  %109 = load i64, i64* %108, align 8, !dbg !4574
  store i64 %109, i64* %20, align 8, !dbg !4575
  br label %115, !dbg !4576

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4577
  call void @llvm.dbg.value(metadata i8* %111, metadata !4382, metadata !DIExpression()), !dbg !4510
  %112 = bitcast i8* %77 to i32*, !dbg !4577
  %113 = load i32, i32* %112, align 4, !dbg !4577
  %114 = sext i32 %113 to i64, !dbg !4578
  store i64 %114, i64* %20, align 8, !dbg !4579
  br label %115, !dbg !4580

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4581
  call void @llvm.dbg.value(metadata i8* %117, metadata !4382, metadata !DIExpression()), !dbg !4510
  %118 = trunc i24 %79 to i4, !dbg !4582
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4582

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4583
  %121 = ashr exact i64 %120, 56, !dbg !4583
  store i64 %121, i64* %20, align 8, !dbg !4586
  br label %177, !dbg !4587

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4588
  %124 = ashr exact i64 %123, 48, !dbg !4588
  store i64 %124, i64* %20, align 8, !dbg !4591
  br label %177, !dbg !4592

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4593

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4596
  call void @llvm.dbg.value(metadata i8* %127, metadata !4382, metadata !DIExpression()), !dbg !4510
  %128 = bitcast i8* %77 to i32*, !dbg !4596
  %129 = load i32, i32* %128, align 4, !dbg !4596
  %130 = zext i32 %129 to i64, !dbg !4596
  store i64 %130, i64* %20, align 8, !dbg !4598
  br label %157, !dbg !4599

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4600
  call void @llvm.dbg.value(metadata i8* %132, metadata !4382, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8* %132, metadata !4382, metadata !DIExpression()), !dbg !4510
  %133 = bitcast i8* %77 to i32*, !dbg !4600
  %134 = load i32, i32* %133, align 4, !dbg !4600
  %135 = zext i32 %134 to i64, !dbg !4600
  store i64 %135, i64* %20, align 8, !dbg !4600
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4602
  %138 = add i32 %137, 7, !dbg !4602
  %139 = and i32 %138, -8, !dbg !4602
  %140 = inttoptr i32 %139 to i8*, !dbg !4602
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %141, metadata !4382, metadata !DIExpression()), !dbg !4510
  %142 = inttoptr i32 %139 to i64*, !dbg !4602
  %143 = load i64, i64* %142, align 8, !dbg !4602
  store i64 %143, i64* %20, align 8, !dbg !4603
  br label %157, !dbg !4604

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4605
  %146 = add i32 %145, 7, !dbg !4605
  %147 = and i32 %146, -8, !dbg !4605
  %148 = inttoptr i32 %147 to i8*, !dbg !4605
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4605
  call void @llvm.dbg.value(metadata i8* %149, metadata !4382, metadata !DIExpression()), !dbg !4510
  %150 = inttoptr i32 %147 to i64*, !dbg !4605
  %151 = load i64, i64* %150, align 8, !dbg !4605
  store i64 %151, i64* %20, align 8, !dbg !4606
  br label %157, !dbg !4607

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4608
  call void @llvm.dbg.value(metadata i8* %153, metadata !4382, metadata !DIExpression()), !dbg !4510
  %154 = bitcast i8* %77 to i32*, !dbg !4608
  %155 = load i32, i32* %154, align 4, !dbg !4608
  %156 = zext i32 %155 to i64, !dbg !4609
  store i64 %156, i64* %20, align 8, !dbg !4610
  br label %157, !dbg !4611

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4612
  call void @llvm.dbg.value(metadata i8* %159, metadata !4382, metadata !DIExpression()), !dbg !4510
  %160 = trunc i24 %79 to i4, !dbg !4613
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4613

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4614
  store i64 %162, i64* %20, align 8, !dbg !4617
  br label %177, !dbg !4618

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4619
  store i64 %164, i64* %20, align 8, !dbg !4622
  br label %177, !dbg !4623

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4624
  %167 = add i32 %166, 7, !dbg !4624
  %168 = and i32 %167, -8, !dbg !4624
  %169 = inttoptr i32 %168 to i8*, !dbg !4624
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4624
  call void @llvm.dbg.value(metadata i8* %170, metadata !4382, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8* %170, metadata !4382, metadata !DIExpression()), !dbg !4510
  %171 = inttoptr i32 %168 to double*, !dbg !4624
  %172 = load double, double* %171, align 8, !dbg !4624
  store double %172, double* %19, align 8, !dbg !4624
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %174, metadata !4382, metadata !DIExpression()), !dbg !4510
  %175 = bitcast i8* %77 to i8**, !dbg !4628
  %176 = load i8*, i8** %175, align 4, !dbg !4628
  store i8* %176, i8** %18, align 8, !dbg !4631
  br label %177, !dbg !4632

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4524
  call void @llvm.dbg.value(metadata i8* %178, metadata !4382, metadata !DIExpression()), !dbg !4510
  %179 = and i24 %75, 3, !dbg !4633
  %180 = icmp eq i24 %179, 0, !dbg !4633
  br i1 %180, label %185, label %181, !dbg !4633

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %182, metadata !4459, metadata !DIExpression()), !dbg !4635
  %183 = icmp slt i32 %182, 0, !dbg !4636
  %184 = add i32 %182, %29, !dbg !4634
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4638
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4639

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %188, metadata !4463, metadata !DIExpression()), !dbg !4641
  %189 = icmp slt i32 %188, 0, !dbg !4642
  %190 = add i32 %29, 1, !dbg !4640
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %192, metadata !4451, metadata !DIExpression()), !dbg !4524
  %193 = icmp sgt i32 %76, -1, !dbg !4645
  br i1 %193, label %194, label %196, !dbg !4647

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4648
  call void @llvm.dbg.value(metadata i32 %195, metadata !4466, metadata !DIExpression()), !dbg !4650
  br label %241, !dbg !4651

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4652
  call void @llvm.dbg.value(metadata i32 %197, metadata !4466, metadata !DIExpression()), !dbg !4650
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4451, metadata !DIExpression()), !dbg !4524
  %199 = load i64, i64* %20, align 8, !dbg !4654
  %200 = trunc i64 %199 to i8, !dbg !4655
  store i8 %200, i8* %10, align 1, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %23, metadata !4452, metadata !DIExpression()), !dbg !4524
  br label %245, !dbg !4657

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4658
  %203 = icmp eq i24 %202, 0, !dbg !4658
  %204 = trunc i24 %75 to i8, !dbg !4660
  %205 = shl i8 %204, 1, !dbg !4660
  %206 = and i8 %205, 32, !dbg !4660
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4660
  call void @llvm.dbg.value(metadata i8 %207, metadata !4453, metadata !DIExpression()), !dbg !4524
  %208 = load i64, i64* %20, align 8, !dbg !4661
  call void @llvm.dbg.value(metadata i64 %208, metadata !4389, metadata !DIExpression()), !dbg !4510
  %209 = icmp slt i64 %208, 0, !dbg !4662
  br i1 %209, label %210, label %212, !dbg !4664

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4453, metadata !DIExpression()), !dbg !4524
  %211 = sub nsw i64 0, %208, !dbg !4665
  store i64 %211, i64* %20, align 8, !dbg !4667
  br label %212, !dbg !4668

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4524
  call void @llvm.dbg.value(metadata i8 %213, metadata !4453, metadata !DIExpression()), !dbg !4524
  %214 = load i64, i64* %20, align 8, !dbg !4669
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4670
  call void @llvm.dbg.value(metadata i8* %215, metadata !4451, metadata !DIExpression()), !dbg !4524
  br label %216, !dbg !4671

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4672
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4673
  call void @llvm.dbg.value(metadata i8* %218, metadata !4451, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8 %217, metadata !4453, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.label(metadata !4509), !dbg !4674
  %219 = icmp sgt i32 %76, -1, !dbg !4675
  br i1 %219, label %222, label %220, !dbg !4676

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4677
  br label %245, !dbg !4676

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4679
  %224 = sub i32 %22, %223, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %224, metadata !4468, metadata !DIExpression()), !dbg !4680
  %225 = load i24, i24* %15, align 8, !dbg !4681
  %226 = and i24 %225, -65, !dbg !4681
  store i24 %226, i24* %15, align 8, !dbg !4681
  %227 = icmp ugt i32 %76, %224, !dbg !4682
  br i1 %227, label %228, label %245, !dbg !4684

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4685
  store i32 %229, i32* %16, align 4, !dbg !4687
  br label %245, !dbg !4688

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4689
  %232 = icmp eq i8* %231, null, !dbg !4691
  br i1 %232, label %245, label %233, !dbg !4692

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4693
  %235 = zext i32 %234 to i64, !dbg !4693
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !4695
  call void @llvm.dbg.value(metadata i8* %236, metadata !4451, metadata !DIExpression()), !dbg !4524
  %237 = load i24, i24* %15, align 8, !dbg !4696
  %238 = or i24 %237, 1048576, !dbg !4696
  store i24 %238, i24* %15, align 8, !dbg !4696
  store i8 120, i8* %21, align 1, !dbg !4697
  br label %216, !dbg !4698

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4699
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !4702
  br label %363, !dbg !4703

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4704
  call void @llvm.dbg.value(metadata i32 %242, metadata !4466, metadata !DIExpression()), !dbg !4650
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4705
  call void @llvm.dbg.value(metadata i32 -1, metadata !4450, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i32 %29, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8* %192, metadata !4451, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8* %243, metadata !4452, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8 0, metadata !4453, metadata !DIExpression()), !dbg !4524
  %244 = icmp eq i8* %192, null, !dbg !4706
  br i1 %244, label %363, label %245, !dbg !4708, !llvm.loop !4520

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4677
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4524
  call void @llvm.dbg.value(metadata i32 0, metadata !4472, metadata !DIExpression()), !dbg !4524
  %250 = zext i8 %249 to i32, !dbg !4709
  %251 = icmp eq i8 %249, 0, !dbg !4711
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  call void @llvm.dbg.value(metadata i32 undef, metadata !4471, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  call void @llvm.dbg.value(metadata i32 undef, metadata !4471, metadata !DIExpression()), !dbg !4524
  %252 = icmp sgt i32 %58, 0, !dbg !4712
  br i1 %252, label %253, label %302, !dbg !4713

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4677
  %255 = icmp eq i24 %254, 0, !dbg !4677
  %256 = ptrtoint i8* %248 to i32, !dbg !4714
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  %257 = ptrtoint i8* %247 to i32, !dbg !4714
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  %258 = xor i1 %251, true, !dbg !4715
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  %259 = sext i1 %258 to i32, !dbg !4715
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  %260 = lshr i24 %246, 19, !dbg !4716
  %261 = and i24 %260, 1, !dbg !4716
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4716
  %263 = zext i24 %262 to i32, !dbg !4716
  %264 = add i32 %257, %259, !dbg !4716
  %265 = add i32 %256, %263, !dbg !4716
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  %266 = and i24 %246, 4194304, !dbg !4717
  %267 = icmp eq i24 %266, 0, !dbg !4717
  %268 = load i32, i32* %16, align 4, !dbg !4719
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4471, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4524
  call void @llvm.dbg.value(metadata i32 undef, metadata !4471, metadata !DIExpression()), !dbg !4524
  %269 = load i32, i32* %17, align 8, !dbg !4720
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4720
  call void @llvm.dbg.value(metadata i32 undef, metadata !4471, metadata !DIExpression()), !dbg !4524
  %271 = add i32 %264, %58, !dbg !4720
  %272 = add i32 %265, %268, !dbg !4720
  %273 = add i32 %272, %270, !dbg !4721
  %274 = sub i32 %271, %273, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %274, metadata !4449, metadata !DIExpression()), !dbg !4524
  %275 = and i24 %246, 4, !dbg !4722
  %276 = icmp eq i24 %275, 0, !dbg !4722
  br i1 %276, label %277, label %302, !dbg !4723

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4473, metadata !DIExpression()), !dbg !4724
  %278 = and i24 %246, 64, !dbg !4725
  %279 = icmp eq i24 %278, 0, !dbg !4725
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4726
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4726
  %282 = select i1 %279, i32 32, i32 48, !dbg !4726
  br i1 %280, label %287, label %283, !dbg !4726

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %284, metadata !4478, metadata !DIExpression()), !dbg !4728
  %285 = icmp slt i32 %284, 0, !dbg !4729
  %286 = add i32 %29, 1, !dbg !4727
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4524
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %290, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i8 undef, metadata !4473, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata i8 %288, metadata !4453, metadata !DIExpression()), !dbg !4524
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4731
  %292 = add i32 %291, -1, !dbg !4731
  br label %293, !dbg !4731

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4732
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %295, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %294, metadata !4449, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i32 %294, metadata !4449, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4524
  %296 = icmp sgt i32 %294, 0, !dbg !4733
  br i1 %296, label %297, label %302, !dbg !4731

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %298, metadata !4449, metadata !DIExpression()), !dbg !4524
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %299, metadata !4484, metadata !DIExpression()), !dbg !4736
  %300 = icmp slt i32 %299, 0, !dbg !4737
  %301 = add i32 %295, 1, !dbg !4735
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %300, label %361, label %293, !llvm.loop !4739

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4524
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4524
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %305, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %304, metadata !4449, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.value(metadata i8 %303, metadata !4453, metadata !DIExpression()), !dbg !4524
  %306 = icmp eq i8 %303, 0, !dbg !4741
  br i1 %306, label %312, label %307, !dbg !4742

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4743
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !4744
  call void @llvm.dbg.value(metadata i32 %309, metadata !4487, metadata !DIExpression()), !dbg !4745
  %310 = icmp slt i32 %309, 0, !dbg !4746
  %311 = add i32 %305, 1, !dbg !4744
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %313, metadata !4388, metadata !DIExpression()), !dbg !4510
  %314 = lshr i24 %246, 20, !dbg !4748
  %315 = lshr i24 %246, 19, !dbg !4749
  %316 = or i24 %314, %315, !dbg !4750
  %317 = and i24 %316, 1, !dbg !4750
  %318 = icmp eq i24 %317, 0, !dbg !4750
  br i1 %318, label %323, label %319, !dbg !4751

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4752
  call void @llvm.dbg.value(metadata i32 %320, metadata !4491, metadata !DIExpression()), !dbg !4753
  %321 = icmp slt i32 %320, 0, !dbg !4754
  %322 = add i32 %313, 1, !dbg !4752
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %324, metadata !4388, metadata !DIExpression()), !dbg !4510
  %325 = and i24 %246, 1048576, !dbg !4756
  %326 = icmp eq i24 %325, 0, !dbg !4756
  br i1 %326, label %333, label %327, !dbg !4757

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4758
  %329 = zext i8 %328 to i32, !dbg !4758
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %330, metadata !4497, metadata !DIExpression()), !dbg !4759
  %331 = icmp slt i32 %330, 0, !dbg !4760
  %332 = add i32 %324, 1, !dbg !4758
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %334, metadata !4388, metadata !DIExpression()), !dbg !4510
  %335 = load i32, i32* %16, align 4, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %335, metadata !4472, metadata !DIExpression()), !dbg !4524
  br label %336, !dbg !4763

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4764
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %338, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %337, metadata !4472, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4524
  %339 = icmp sgt i32 %337, 0, !dbg !4765
  br i1 %339, label %340, label %345, !dbg !4763

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %341, metadata !4472, metadata !DIExpression()), !dbg !4524
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %342, metadata !4501, metadata !DIExpression()), !dbg !4768
  %343 = icmp slt i32 %342, 0, !dbg !4769
  %344 = add i32 %338, 1, !dbg !4767
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %343, label %361, label %336, !llvm.loop !4771

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %346, metadata !4504, metadata !DIExpression()), !dbg !4774
  %347 = icmp slt i32 %346, 0, !dbg !4775
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %349, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %304, metadata !4449, metadata !DIExpression()), !dbg !4524
  %350 = icmp sgt i32 %304, 0, !dbg !4777
  br i1 %350, label %351, label %363, !dbg !4778

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4778
  %353 = add i32 %352, %338, !dbg !4778
  br label %354, !dbg !4778

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %355, metadata !4449, metadata !DIExpression()), !dbg !4524
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !4779
  call void @llvm.dbg.value(metadata i32 %356, metadata !4506, metadata !DIExpression()), !dbg !4780
  %357 = icmp slt i32 %356, 0, !dbg !4781
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4783
  call void @llvm.dbg.value(metadata i32 undef, metadata !4388, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4510
  call void @llvm.dbg.value(metadata i32 %359, metadata !4449, metadata !DIExpression()), !dbg !4524
  %360 = icmp sgt i32 %355, 1, !dbg !4777
  br i1 %360, label %354, label %363, !dbg !4778, !llvm.loop !4784

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4521
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4514
  call void @llvm.dbg.value(metadata i32 %364, metadata !4388, metadata !DIExpression()), !dbg !4510
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4521
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4510
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4786
  ret i32 %366, !dbg !4786
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4787 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4791, metadata !DIExpression()), !dbg !4793
  call void @llvm.dbg.value(metadata i8* %1, metadata !4792, metadata !DIExpression()), !dbg !4793
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4794
  store i24 0, i24* %3, align 4, !dbg !4794
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4794
  store i8 0, i8* %4, align 1, !dbg !4794
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4794
  store i32 0, i32* %5, align 4, !dbg !4794
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4794
  store i32 0, i32* %6, align 4, !dbg !4794
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %7, metadata !4792, metadata !DIExpression()), !dbg !4793
  %8 = load i8, i8* %7, align 1, !dbg !4796
  %9 = icmp eq i8 %8, 37, !dbg !4798
  br i1 %9, label %10, label %12, !dbg !4799

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %11, metadata !4792, metadata !DIExpression()), !dbg !4793
  store i8 37, i8* %4, align 1, !dbg !4802
  br label %18, !dbg !4803

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %13, metadata !4792, metadata !DIExpression()), !dbg !4793
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !4805
  call void @llvm.dbg.value(metadata i8* %14, metadata !4792, metadata !DIExpression()), !dbg !4793
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %15, metadata !4792, metadata !DIExpression()), !dbg !4793
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !4807
  call void @llvm.dbg.value(metadata i8* %16, metadata !4792, metadata !DIExpression()), !dbg !4793
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !4808
  call void @llvm.dbg.value(metadata i8* %17, metadata !4792, metadata !DIExpression()), !dbg !4793
  br label %18, !dbg !4809

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4793
  ret i8* %19, !dbg !4810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4811 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4815, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %1, metadata !4816, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %2, metadata !4817, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %3, metadata !4818, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i32 0, metadata !4819, metadata !DIExpression()), !dbg !4822
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4823

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4824
  call void @llvm.dbg.value(metadata i32 %9, metadata !4819, metadata !DIExpression()), !dbg !4822
  call void @llvm.dbg.value(metadata i8* %8, metadata !4817, metadata !DIExpression()), !dbg !4822
  %10 = icmp ult i8* %8, %3, !dbg !4825
  br i1 %10, label %11, label %13, !dbg !4826

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4827
  br label %17, !dbg !4826

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4828

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4829
  %16 = icmp eq i8 %15, 0, !dbg !4828
  br i1 %16, label %24, label %17, !dbg !4823

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4827
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4830
  call void @llvm.dbg.value(metadata i8* %19, metadata !4817, metadata !DIExpression()), !dbg !4822
  %20 = zext i8 %18 to i32, !dbg !4831
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %21, metadata !4820, metadata !DIExpression()), !dbg !4833
  %22 = icmp slt i32 %21, 0, !dbg !4834
  %23 = add i32 %9, 1, !dbg !4836
  call void @llvm.dbg.value(metadata i32 undef, metadata !4819, metadata !DIExpression()), !dbg !4822
  br i1 %22, label %24, label %7, !llvm.loop !4837

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4822
  ret i32 %25, !dbg !4839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4840 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4844, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4845, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %2, metadata !4846, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %3, metadata !4847, metadata !DIExpression()), !dbg !4854
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4855
  %6 = load i8, i8* %5, align 1, !dbg !4855
  %7 = zext i8 %6 to i32, !dbg !4856
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !4857
  %9 = icmp eq i32 %8, 0, !dbg !4857
  call void @llvm.dbg.value(metadata i1 %9, metadata !4848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4854
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %10, metadata !4849, metadata !DIExpression()), !dbg !4854
  %11 = ptrtoint i8* %3 to i32, !dbg !4859
  %12 = ptrtoint i8* %2 to i32, !dbg !4859
  %13 = sub i32 %11, %12, !dbg !4859
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %14, metadata !4851, metadata !DIExpression()), !dbg !4854
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4861

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4854
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4844, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %18, metadata !4851, metadata !DIExpression()), !dbg !4854
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4862
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %25, metadata !4852, metadata !DIExpression()), !dbg !4864
  %26 = icmp ult i32 %25, 10, !dbg !4865
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4866
  %28 = add i32 %27, %25, !dbg !4864
  %29 = trunc i32 %28 to i8, !dbg !4866
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %30, metadata !4851, metadata !DIExpression()), !dbg !4854
  store i8 %29, i8* %30, align 1, !dbg !4868
  call void @llvm.dbg.value(metadata i64 %22, metadata !4844, metadata !DIExpression()), !dbg !4854
  %31 = icmp uge i64 %19, %15, !dbg !4869
  %32 = icmp ugt i8* %30, %2, !dbg !4870
  %33 = and i1 %31, %32, !dbg !4870
  br i1 %33, label %17, label %34, !dbg !4871, !llvm.loop !4872

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4874
  %36 = load i24, i24* %35, align 4, !dbg !4874
  %37 = and i24 %36, 32, !dbg !4874
  %38 = icmp eq i24 %37, 0, !dbg !4874
  br i1 %38, label %44, label %39, !dbg !4876

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4877

40:                                               ; preds = %39
  br label %41, !dbg !4879

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4883
  store i24 %43, i24* %35, align 4, !dbg !4883
  br label %44, !dbg !4884

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4884
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4885 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4891, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i8* %1, metadata !4892, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i32 %2, metadata !4893, metadata !DIExpression()), !dbg !4894
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4895
  %5 = load i24, i24* %4, align 4, !dbg !4895
  %6 = lshr i24 %5, 11, !dbg !4895
  %7 = and i24 %6, 15, !dbg !4895
  %8 = zext i24 %7 to i32, !dbg !4895
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4896

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4897
  store i32 %2, i32* %10, align 4, !dbg !4899
  br label %28, !dbg !4900

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4901
  store i8 %12, i8* %1, align 1, !dbg !4902
  br label %28, !dbg !4903

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4904
  %15 = bitcast i8* %1 to i16*, !dbg !4905
  store i16 %14, i16* %15, align 2, !dbg !4906
  br label %28, !dbg !4907

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4908
  store i32 %2, i32* %17, align 4, !dbg !4909
  br label %28, !dbg !4910

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4911
  %20 = bitcast i8* %1 to i64*, !dbg !4912
  store i64 %19, i64* %20, align 8, !dbg !4913
  br label %28, !dbg !4914

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4915
  %23 = bitcast i8* %1 to i64*, !dbg !4916
  store i64 %22, i64* %23, align 8, !dbg !4917
  br label %28, !dbg !4918

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4919
  store i32 %2, i32* %25, align 4, !dbg !4920
  br label %28, !dbg !4921

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4922
  store i32 %2, i32* %27, align 4, !dbg !4923
  br label %28, !dbg !4924

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4925
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4929, metadata !DIExpression()), !dbg !4930
  %2 = add i32 %0, -65, !dbg !4931
  %3 = icmp ult i32 %2, 26, !dbg !4932
  %4 = zext i1 %3 to i32, !dbg !4932
  ret i32 %4, !dbg !4933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4934 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4938, metadata !DIExpression()), !dbg !4939
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4940

2:                                                ; preds = %1
  br label %4, !dbg !4941

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4943

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4944
  ret i32 %5, !dbg !4945
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4946 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4948, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata i8* %1, metadata !4949, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata i8 1, metadata !4950, metadata !DIExpression()), !dbg !4951
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4952

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4950, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata i8* %5, metadata !4949, metadata !DIExpression()), !dbg !4951
  %6 = load i8, i8* %5, align 1, !dbg !4953
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4955

7:                                                ; preds = %4
  br label %11, !dbg !4956

8:                                                ; preds = %4
  br label %11, !dbg !4958

9:                                                ; preds = %4
  br label %11, !dbg !4959

10:                                               ; preds = %4
  br label %11, !dbg !4960

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4961
  %14 = or i24 %13, %12, !dbg !4961
  store i24 %14, i24* %3, align 4, !dbg !4961
  call void @llvm.dbg.value(metadata i8 poison, metadata !4950, metadata !DIExpression()), !dbg !4951
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4949, metadata !DIExpression()), !dbg !4951
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4950, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.value(metadata i8* %15, metadata !4949, metadata !DIExpression()), !dbg !4951
  %17 = load i24, i24* %3, align 4, !dbg !4962
  %18 = and i24 %17, 68, !dbg !4964
  %19 = icmp eq i24 %18, 68, !dbg !4964
  br i1 %19, label %20, label %22, !dbg !4964

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4965
  store i24 %21, i24* %3, align 4, !dbg !4965
  br label %22, !dbg !4967

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4969 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4971, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.value(metadata i8* %1, metadata !4972, metadata !DIExpression()), !dbg !4975
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4976
  %5 = load i24, i24* %4, align 4, !dbg !4977
  %6 = or i24 %5, 128, !dbg !4977
  store i24 %6, i24* %4, align 4, !dbg !4977
  call void @llvm.dbg.value(metadata i8* %1, metadata !4972, metadata !DIExpression()), !dbg !4975
  %7 = load i8, i8* %1, align 1, !dbg !4978
  %8 = icmp eq i8 %7, 42, !dbg !4980
  br i1 %8, label %9, label %12, !dbg !4981

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4982
  store i24 %10, i24* %4, align 4, !dbg !4982
  call void @llvm.dbg.value(metadata i8* %1, metadata !4972, metadata !DIExpression()), !dbg !4975
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4984
  call void @llvm.dbg.value(metadata i8* %11, metadata !4972, metadata !DIExpression()), !dbg !4975
  store i8* %11, i8** %3, align 4, !dbg !4984
  br label %29, !dbg !4985

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4973, metadata !DIExpression()), !dbg !4975
  call void @llvm.dbg.value(metadata i8** %3, metadata !4972, metadata !DIExpression(DW_OP_deref)), !dbg !4975
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %13, metadata !4974, metadata !DIExpression()), !dbg !4975
  %14 = load i8*, i8** %3, align 4, !dbg !4987
  call void @llvm.dbg.value(metadata i8* %14, metadata !4972, metadata !DIExpression()), !dbg !4975
  %15 = icmp eq i8* %14, %1, !dbg !4989
  br i1 %15, label %29, label %16, !dbg !4990

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4991
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4993
  store i32 %13, i32* %18, align 4, !dbg !4994
  %19 = lshr i32 %13, 31, !dbg !4995
  %20 = lshr i24 %17, 1, !dbg !4996
  %21 = and i24 %20, 1, !dbg !4996
  %22 = zext i24 %21 to i32, !dbg !4996
  %23 = or i32 %19, %22, !dbg !4996
  %24 = trunc i32 %23 to i24, !dbg !4996
  %25 = shl nuw nsw i24 %24, 1, !dbg !4996
  %26 = and i24 %17, -131, !dbg !4996
  %27 = or i24 %26, 128, !dbg !4996
  %28 = or i24 %25, %27, !dbg !4996
  store i24 %28, i24* %4, align 4, !dbg !4996
  br label %29, !dbg !4997

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4975
  ret i8* %30, !dbg !4998
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4999 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5001, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %1, metadata !5002, metadata !DIExpression()), !dbg !5004
  %4 = load i8, i8* %1, align 1, !dbg !5005
  %5 = icmp eq i8 %4, 46, !dbg !5006
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5007
  %7 = load i24, i24* %6, align 4, !dbg !5008
  %8 = select i1 %5, i24 512, i24 0, !dbg !5008
  %9 = and i24 %7, -513, !dbg !5008
  %10 = or i24 %9, %8, !dbg !5008
  store i24 %10, i24* %6, align 4, !dbg !5008
  br i1 %5, label %11, label %32, !dbg !5009

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5002, metadata !DIExpression()), !dbg !5004
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5010
  call void @llvm.dbg.value(metadata i8* %12, metadata !5002, metadata !DIExpression()), !dbg !5004
  store i8* %12, i8** %3, align 4, !dbg !5010
  %13 = load i8, i8* %12, align 1, !dbg !5011
  %14 = icmp eq i8 %13, 42, !dbg !5013
  br i1 %14, label %15, label %18, !dbg !5014

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5015
  store i24 %16, i24* %6, align 4, !dbg !5015
  call void @llvm.dbg.value(metadata i8* %12, metadata !5002, metadata !DIExpression()), !dbg !5004
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %17, metadata !5002, metadata !DIExpression()), !dbg !5004
  store i8* %17, i8** %3, align 4, !dbg !5017
  br label %32, !dbg !5018

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5002, metadata !DIExpression(DW_OP_deref)), !dbg !5004
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %19, metadata !5003, metadata !DIExpression()), !dbg !5004
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5020
  store i32 %19, i32* %20, align 4, !dbg !5021
  %21 = lshr i32 %19, 31, !dbg !5022
  %22 = load i24, i24* %6, align 4, !dbg !5023
  %23 = lshr i24 %22, 1, !dbg !5023
  %24 = and i24 %23, 1, !dbg !5023
  %25 = zext i24 %24 to i32, !dbg !5023
  %26 = or i32 %21, %25, !dbg !5023
  %27 = trunc i32 %26 to i24, !dbg !5023
  %28 = shl nuw nsw i24 %27, 1, !dbg !5023
  %29 = and i24 %22, -3, !dbg !5023
  %30 = or i24 %28, %29, !dbg !5023
  store i24 %30, i24* %6, align 4, !dbg !5023
  %31 = load i8*, i8** %3, align 4, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %31, metadata !5002, metadata !DIExpression()), !dbg !5004
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5004
  ret i8* %33, !dbg !5025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5026 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.value(metadata i8* %1, metadata !5029, metadata !DIExpression()), !dbg !5030
  %3 = load i8, i8* %1, align 1, !dbg !5031
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5032

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %5, metadata !5029, metadata !DIExpression()), !dbg !5030
  %6 = load i8, i8* %5, align 1, !dbg !5036
  %7 = icmp eq i8 %6, 104, !dbg !5037
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5038
  %9 = load i24, i24* %8, align 4, !dbg !5038
  %10 = and i24 %9, -30721, !dbg !5038
  br i1 %7, label %11, label %14, !dbg !5039

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5040
  store i24 %12, i24* %8, align 4, !dbg !5040
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5042
  call void @llvm.dbg.value(metadata i8* %13, metadata !5029, metadata !DIExpression()), !dbg !5030
  br label %56, !dbg !5043

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5044
  store i24 %15, i24* %8, align 4, !dbg !5044
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %17, metadata !5029, metadata !DIExpression()), !dbg !5030
  %18 = load i8, i8* %17, align 1, !dbg !5048
  %19 = icmp eq i8 %18, 108, !dbg !5049
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5050
  %21 = load i24, i24* %20, align 4, !dbg !5050
  %22 = and i24 %21, -30721, !dbg !5050
  br i1 %19, label %23, label %26, !dbg !5051

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5052
  store i24 %24, i24* %20, align 4, !dbg !5052
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %25, metadata !5029, metadata !DIExpression()), !dbg !5030
  br label %56, !dbg !5055

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5056
  store i24 %27, i24* %20, align 4, !dbg !5056
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5058
  %30 = load i24, i24* %29, align 4, !dbg !5059
  %31 = and i24 %30, -30721, !dbg !5059
  %32 = or i24 %31, 10240, !dbg !5059
  store i24 %32, i24* %29, align 4, !dbg !5059
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5060
  call void @llvm.dbg.value(metadata i8* %33, metadata !5029, metadata !DIExpression()), !dbg !5030
  br label %56, !dbg !5061

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5062
  %36 = load i24, i24* %35, align 4, !dbg !5063
  %37 = and i24 %36, -30721, !dbg !5063
  %38 = or i24 %37, 12288, !dbg !5063
  store i24 %38, i24* %35, align 4, !dbg !5063
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5064
  call void @llvm.dbg.value(metadata i8* %39, metadata !5029, metadata !DIExpression()), !dbg !5030
  br label %56, !dbg !5065

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5066
  %42 = load i24, i24* %41, align 4, !dbg !5067
  %43 = and i24 %42, -30721, !dbg !5067
  %44 = or i24 %43, 14336, !dbg !5067
  store i24 %44, i24* %41, align 4, !dbg !5067
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5068
  call void @llvm.dbg.value(metadata i8* %45, metadata !5029, metadata !DIExpression()), !dbg !5030
  br label %56, !dbg !5069

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5070
  %48 = load i24, i24* %47, align 4, !dbg !5071
  %49 = and i24 %48, -30723, !dbg !5071
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5072
  call void @llvm.dbg.value(metadata i8* %50, metadata !5029, metadata !DIExpression()), !dbg !5030
  %51 = or i24 %49, 16386, !dbg !5073
  store i24 %51, i24* %47, align 4, !dbg !5073
  br label %56, !dbg !5074

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5075
  %54 = load i24, i24* %53, align 4, !dbg !5076
  %55 = and i24 %54, -30721, !dbg !5076
  store i24 %55, i24* %53, align 4, !dbg !5076
  br label %56, !dbg !5077

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5029, metadata !DIExpression()), !dbg !5030
  ret i8* %57, !dbg !5078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5079 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5081, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %1, metadata !5082, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8 0, metadata !5083, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8* %1, metadata !5082, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5086
  %3 = load i8, i8* %1, align 1, !dbg !5087
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5088
  store i8 %3, i8* %4, align 1, !dbg !5089
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5090

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5091

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5092
  %9 = load i24, i24* %8, align 4, !dbg !5092
  %10 = and i24 %9, -458753, !dbg !5092
  %11 = or i24 %10, %7, !dbg !5092
  call void @llvm.dbg.label(metadata !5084), !dbg !5093
  %12 = and i24 %9, 30720, !dbg !5094
  %13 = icmp eq i24 %12, 16384, !dbg !5094
  %14 = zext i1 %13 to i24, !dbg !5096
  %15 = or i24 %11, %14, !dbg !5096
  %16 = icmp eq i8 %3, 99, !dbg !5097
  br i1 %16, label %17, label %43, !dbg !5099

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5100
  %19 = icmp ne i24 %18, 0, !dbg !5100
  call void @llvm.dbg.value(metadata i1 %19, metadata !5083, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5086
  br label %43, !dbg !5102

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5103
  %22 = load i24, i24* %21, align 4, !dbg !5104
  %23 = and i24 %22, -458753, !dbg !5104
  %24 = or i24 %23, 262144, !dbg !5104
  call void @llvm.dbg.value(metadata i8 1, metadata !5083, metadata !DIExpression()), !dbg !5086
  br label %43, !dbg !5105

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5108
  %27 = load i24, i24* %26, align 4, !dbg !5109
  %28 = and i24 %27, -458753, !dbg !5109
  %29 = or i24 %28, 196608, !dbg !5109
  %30 = and i24 %27, 30720, !dbg !5110
  %31 = icmp eq i24 %30, 16384, !dbg !5110
  br label %43, !dbg !5112

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5113
  %34 = load i24, i24* %33, align 4, !dbg !5114
  %35 = and i24 %34, -458753, !dbg !5114
  %36 = or i24 %35, 196608, !dbg !5114
  %37 = and i24 %34, 30720, !dbg !5115
  %38 = icmp ne i24 %37, 0, !dbg !5115
  br label %43, !dbg !5117

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5118
  %41 = load i24, i24* %40, align 4, !dbg !5119
  %42 = or i24 %41, 1, !dbg !5119
  br label %43, !dbg !5120

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5121
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5122
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5123
  call void @llvm.dbg.value(metadata i8* %48, metadata !5082, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.value(metadata i8 poison, metadata !5083, metadata !DIExpression()), !dbg !5086
  %49 = lshr i24 %44, 1, !dbg !5121
  %50 = and i24 %49, 1, !dbg !5121
  %51 = zext i24 %50 to i32, !dbg !5121
  %52 = or i32 %51, %47, !dbg !5121
  %53 = trunc i32 %52 to i24, !dbg !5121
  %54 = shl nuw nsw i24 %53, 1, !dbg !5121
  %55 = and i24 %44, -3, !dbg !5121
  %56 = or i24 %54, %55, !dbg !5121
  store i24 %56, i24* %46, align 4, !dbg !5121
  ret i8* %48, !dbg !5124
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5125 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5130, metadata !DIExpression()), !dbg !5133
  %2 = load i8*, i8** %0, align 4, !dbg !5134
  call void @llvm.dbg.value(metadata i8* %2, metadata !5131, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.value(metadata i32 0, metadata !5132, metadata !DIExpression()), !dbg !5133
  %3 = load i8, i8* %2, align 1, !dbg !5135
  %4 = zext i8 %3 to i32, !dbg !5136
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !5137
  %6 = icmp eq i32 %5, 0, !dbg !5138
  br i1 %6, label %19, label %7, !dbg !5138

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5132, metadata !DIExpression()), !dbg !5133
  call void @llvm.dbg.value(metadata i8* %10, metadata !5131, metadata !DIExpression()), !dbg !5133
  %11 = mul i32 %9, 10, !dbg !5139
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5141
  call void @llvm.dbg.value(metadata i8* %12, metadata !5131, metadata !DIExpression()), !dbg !5133
  %13 = add i32 %11, -48, !dbg !5142
  %14 = add i32 %13, %8, !dbg !5143
  call void @llvm.dbg.value(metadata i32 %14, metadata !5132, metadata !DIExpression()), !dbg !5133
  %15 = load i8, i8* %12, align 1, !dbg !5135
  %16 = zext i8 %15 to i32, !dbg !5136
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !5137
  %18 = icmp eq i32 %17, 0, !dbg !5138
  br i1 %18, label %19, label %7, !dbg !5138, !llvm.loop !5144

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5133
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5133
  store i8* %20, i8** %0, align 4, !dbg !5146
  ret i32 %21, !dbg !5147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5150, metadata !DIExpression()), !dbg !5151
  %2 = add i32 %0, -48, !dbg !5152
  %3 = icmp ult i32 %2, 10, !dbg !5153
  %4 = zext i1 %3 to i32, !dbg !5153
  ret i32 %4, !dbg !5154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5155 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5157, !srcloc !5158
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5159, !srcloc !5160
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5161, !srcloc !5162
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5163, !srcloc !5164
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5165, !srcloc !5166
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5167, !srcloc !5168
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5169, !srcloc !5170
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5171, !srcloc !5172
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5173, !srcloc !5174
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5175, !srcloc !5176
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5177, !srcloc !5178
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5179, !srcloc !5180
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5181, !srcloc !5182
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5183, !srcloc !5184
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5185, !srcloc !5186
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5187, !srcloc !5188
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5189, !srcloc !5190
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5191, !srcloc !5192
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5193, !srcloc !5194
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5195, !srcloc !5196
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5197, !srcloc !5198
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5199, !srcloc !5200
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5201, !srcloc !5202
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5203, !srcloc !5204
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5205, !srcloc !5206
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5207, !srcloc !5208
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5209, !srcloc !5210
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5211, !srcloc !5212
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5213, !srcloc !5214
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5215, !srcloc !5216
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5217, !srcloc !5218
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #25, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #25, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #25, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #25, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #25, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #25, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5727, !srcloc !5728
  ret void, !dbg !5729
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5730 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5732, metadata !DIExpression()), !dbg !5734
  tail call fastcc void @LL_FLASH_EnableInstCache() #27, !dbg !5735
  tail call fastcc void @LL_FLASH_EnableDataCache() #27, !dbg !5736
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5737, !srcloc !5746
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5737
  call void @llvm.dbg.value(metadata i32 %3, metadata !5743, metadata !DIExpression()) #25, !dbg !5747
  call void @llvm.dbg.value(metadata i32 undef, metadata !5744, metadata !DIExpression()) #25, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %3, metadata !5733, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata i32 %3, metadata !5748, metadata !DIExpression()) #25, !dbg !5753
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5755, !srcloc !5756
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5757
  ret i32 0, !dbg !5758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5759 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5761
  %2 = or i32 %1, 512, !dbg !5761
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5761
  ret void, !dbg !5762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5763 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5764
  %2 = or i32 %1, 1024, !dbg !5764
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5764
  ret void, !dbg !5765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5768, metadata !DIExpression()), !dbg !5769
  ret i32 0, !dbg !5770
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !341 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5771
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5773
  br i1 %2, label %5, label %3, !dbg !5774

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5775
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #26, !dbg !5775
  br label %5, !dbg !5778

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #27, !dbg !5779
  call void @llvm.dbg.value(metadata i8* %6, metadata !346, metadata !DIExpression()), !dbg !5780
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5781
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5782
  ret i8* %7, !dbg !5783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5784 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5794, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5793, metadata !DIExpression()), !dbg !5795
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5796, !srcloc !5798
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #26, !dbg !5799
  ret i8* %1, !dbg !5800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5801 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5804
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #26, !dbg !5805
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5804
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression()), !dbg !5804
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #26, !dbg !5805
  call void @llvm.dbg.value(metadata i32 0, metadata !5803, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5804
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #26, !dbg !5810
  ret void, !dbg !5811
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5861, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5862, metadata !DIExpression()), !dbg !5863
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !5864
  ret void, !dbg !5865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5866 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5883, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5884, metadata !DIExpression()), !dbg !5886
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5887
  %4 = load i32, i32* %3, align 4, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %4, metadata !5885, metadata !DIExpression()), !dbg !5886
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !5888
  ret void, !dbg !5889
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5890 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5894, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8* %0, metadata !5895, metadata !DIExpression()), !dbg !5897
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5898
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !5898
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5896, metadata !DIExpression()), !dbg !5899
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5899
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5900
  %5 = bitcast i8* %4 to i32*, !dbg !5900
  %6 = load i32, i32* %5, align 4, !dbg !5900
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5901
  store i32 %6, i32* %7, align 4, !dbg !5902
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !5903
  unreachable, !dbg !5904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5908, metadata !DIExpression()), !dbg !5909
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !5910
  ret void, !dbg !5911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5916, metadata !DIExpression()), !dbg !5917
  %2 = icmp sgt i32 %0, -1, !dbg !5918
  br i1 %2, label %3, label %8, !dbg !5920

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5921, !srcloc !5923
  %4 = and i32 %0, 31, !dbg !5924
  %5 = shl nuw i32 1, %4, !dbg !5925
  %6 = lshr i32 %0, 5, !dbg !5926
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5927
  store volatile i32 %5, i32* %7, align 4, !dbg !5928
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5929, !srcloc !5930
  br label %8, !dbg !5931

8:                                                ; preds = %3, %1
  ret void, !dbg !5932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5935, metadata !DIExpression()), !dbg !5936
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !5937
  ret void, !dbg !5938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5941, metadata !DIExpression()), !dbg !5942
  %2 = icmp sgt i32 %0, -1, !dbg !5943
  br i1 %2, label %3, label %8, !dbg !5945

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5946
  %5 = shl nuw i32 1, %4, !dbg !5948
  %6 = lshr i32 %0, 5, !dbg !5949
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5950
  store volatile i32 %5, i32* %7, align 4, !dbg !5951
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !5952, !srcloc !5956
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !5957, !srcloc !5960
  br label %8, !dbg !5961

8:                                                ; preds = %3, %1
  ret void, !dbg !5962
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5967, metadata !DIExpression()), !dbg !5968
  %2 = lshr i32 %0, 5, !dbg !5969
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5970
  %4 = load volatile i32, i32* %3, align 4, !dbg !5970
  %5 = and i32 %0, 31, !dbg !5971
  %6 = shl nuw i32 1, %5, !dbg !5971
  %7 = and i32 %4, %6, !dbg !5972
  ret i32 %7, !dbg !5973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !5974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5978, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %1, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 %2, metadata !5980, metadata !DIExpression()), !dbg !5981
  %4 = add i32 %1, 1, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %4, metadata !5979, metadata !DIExpression()), !dbg !5981
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !5985
  ret void, !dbg !5986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5991, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata i32 %1, metadata !5992, metadata !DIExpression()), !dbg !5993
  %3 = trunc i32 %1 to i8, !dbg !5994
  %4 = shl i8 %3, 4, !dbg !5994
  %5 = and i32 %0, 15, !dbg !5996
  %6 = add nsw i32 %5, -4, !dbg !5996
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5996
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5996
  %9 = icmp slt i32 %0, 0, !dbg !5996
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5996
  store volatile i8 %4, i8* %10, align 1, !dbg !5994
  ret void, !dbg !5997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5998 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6000, metadata !DIExpression()), !dbg !6001
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6002
  ret void, !dbg !6003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6004 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6006
  tail call void @z_arm_int_exit() #26, !dbg !6007
  ret void, !dbg !6008
}

; Function Attrs: optsize
declare !dbg !6009 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6010 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6012 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !6014
  tail call fastcc void @z_arm_floating_point_init() #27, !dbg !6015
  tail call void @z_bss_zero() #26, !dbg !6016
  tail call void @z_data_copy() #26, !dbg !6017
  tail call void @z_arm_interrupt_init() #26, !dbg !6018
  tail call void @z_cstart() #29, !dbg !6019
  unreachable, !dbg !6019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6020 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6021
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6022, !srcloc !6025
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6026, !srcloc !6029
  ret void, !dbg !6030
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6031 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6032
  %2 = and i32 %1, -15728641, !dbg !6032
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6032
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6033, !srcloc !6040
  call void @llvm.dbg.value(metadata i32 %3, metadata !6038, metadata !DIExpression()) #25, !dbg !6041
  %4 = and i32 %3, -5, !dbg !6042
  call void @llvm.dbg.value(metadata i32 %4, metadata !6043, metadata !DIExpression()) #25, !dbg !6048
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6050, !srcloc !6051
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6052, !srcloc !6029
  ret void, !dbg !6054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6058, metadata !DIExpression()), !dbg !6059
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6060
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6061
  store i32 %0, i32* %3, align 4, !dbg !6062
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6063
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6064
  store i32 %4, i32* %5, align 4, !dbg !6065
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6066
  %7 = or i32 %6, 268435456, !dbg !6066
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6066
  call void @llvm.dbg.value(metadata i32 0, metadata !6067, metadata !DIExpression()) #25, !dbg !6070
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6072, !srcloc !6073
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6074
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6075
  %10 = load i32, i32* %9, align 4, !dbg !6075
  ret i32 %10, !dbg !6076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6077 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6187, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6188, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8* %2, metadata !6189, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6190, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8* %4, metadata !6191, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8* %5, metadata !6192, metadata !DIExpression()), !dbg !6195
  call void @llvm.dbg.value(metadata i8* %6, metadata !6193, metadata !DIExpression()), !dbg !6195
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6196
  call void @llvm.dbg.value(metadata i8* %8, metadata !6194, metadata !DIExpression()), !dbg !6195
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6197
  %10 = bitcast i8* %9 to i32*, !dbg !6197
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6198
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6199
  %12 = bitcast i8* %8 to i32*, !dbg !6200
  store i32 %11, i32* %12, align 4, !dbg !6201
  %13 = ptrtoint i8* %4 to i32, !dbg !6202
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6203
  %15 = bitcast i8* %14 to i32*, !dbg !6203
  store i32 %13, i32* %15, align 4, !dbg !6204
  %16 = ptrtoint i8* %5 to i32, !dbg !6205
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6206
  %18 = bitcast i8* %17 to i32*, !dbg !6206
  store i32 %16, i32* %18, align 4, !dbg !6207
  %19 = ptrtoint i8* %6 to i32, !dbg !6208
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6209
  %21 = bitcast i8* %20 to i32*, !dbg !6209
  store i32 %19, i32* %21, align 4, !dbg !6210
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6211
  %23 = bitcast i8* %22 to i32*, !dbg !6211
  store i32 16777216, i32* %23, align 4, !dbg !6212
  %24 = ptrtoint i8* %8 to i32, !dbg !6213
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6214
  store i32 %24, i32* %25, align 8, !dbg !6215
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6216
  store i32 0, i32* %26, align 4, !dbg !6217
  ret void, !dbg !6218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6224, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.value(metadata i32 %1, metadata !6225, metadata !DIExpression()), !dbg !6230
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6231
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6226, metadata !DIExpression()), !dbg !6230
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6232
  br i1 %4, label %19, label %5, !dbg !6234

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6229, metadata !DIExpression()), !dbg !6230
  %6 = icmp eq i32 %0, -22, !dbg !6235
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6235
  %8 = load i32, i32* %7, align 4, !dbg !6235
  br i1 %6, label %16, label %9, !dbg !6237

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6235
  %11 = icmp ule i32 %10, %0, !dbg !6235
  %12 = icmp ugt i32 %8, %0, !dbg !6235
  %13 = and i1 %12, %11, !dbg !6235
  %14 = icmp ugt i32 %8, %1, !dbg !6235
  %15 = and i1 %14, %13, !dbg !6235
  br i1 %15, label %18, label %19, !dbg !6235

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6235
  br i1 %17, label %18, label %19, !dbg !6237

18:                                               ; preds = %9, %16
  br label %19, !dbg !6238

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6230
  ret i32 %20, !dbg !6240
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6245, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata i8* %1, metadata !6246, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6247, metadata !DIExpression()), !dbg !6248
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6249
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6250
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6251, !srcloc !6252
  unreachable, !dbg !6253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6254 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6272, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i32 %1, metadata !6273, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i32 %2, metadata !6274, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6275, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i32 0, metadata !6276, metadata !DIExpression()), !dbg !6282
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6283
  %9 = and i32 %8, 511, !dbg !6284
  call void @llvm.dbg.value(metadata i32 %9, metadata !6277, metadata !DIExpression()), !dbg !6282
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6285
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6285
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6286
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6286
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6281, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 0, metadata !6288, metadata !DIExpression()) #25, !dbg !6291
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6293, !srcloc !6294
  call void @llvm.dbg.value(metadata i8* %6, metadata !6279, metadata !DIExpression(DW_OP_deref)), !dbg !6282
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !6295
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6280, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i8* %5, metadata !6278, metadata !DIExpression(DW_OP_deref)), !dbg !6282
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #27, !dbg !6296
  call void @llvm.dbg.value(metadata i32 %12, metadata !6276, metadata !DIExpression()), !dbg !6282
  %13 = load i8, i8* %5, align 1, !dbg !6297, !range !6299
  call void @llvm.dbg.value(metadata i8 %13, metadata !6278, metadata !DIExpression()), !dbg !6282
  %14 = icmp eq i8 %13, 0, !dbg !6297
  br i1 %14, label %15, label %32, !dbg !6300

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6301
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #26, !dbg !6302
  %18 = load i8, i8* %6, align 1, !dbg !6303, !range !6299
  call void @llvm.dbg.value(metadata i8 %18, metadata !6279, metadata !DIExpression()), !dbg !6282
  %19 = icmp eq i8 %18, 0, !dbg !6303
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6305
  %21 = load i32, i32* %20, align 4, !dbg !6305
  br i1 %19, label %27, label %22, !dbg !6306

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6307
  %24 = icmp eq i32 %23, 0, !dbg !6310
  br i1 %24, label %25, label %31, !dbg !6311

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6312
  br label %29, !dbg !6314

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6315
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6305
  br label %31, !dbg !6317

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #26, !dbg !6317
  br label %32, !dbg !6318

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6318
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6318
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6318
  ret void, !dbg !6318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6324, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %1, metadata !6325, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %2, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %3, metadata !6327, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8 0, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6329, metadata !DIExpression()), !dbg !6330
  store i8 0, i8* %3, align 1, !dbg !6331
  %5 = icmp ult i32 %2, -16777216, !dbg !6332
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6334
  br i1 %8, label %16, label %9, !dbg !6334

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6335
  %11 = icmp eq i32 %10, 0, !dbg !6335
  br i1 %11, label %12, label %13, !dbg !6337

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6329, metadata !DIExpression()), !dbg !6330
  store i8 1, i8* %3, align 1, !dbg !6340
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6330
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6329, metadata !DIExpression()), !dbg !6330
  br label %16, !dbg !6343

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6330
  ret %struct.__esf* %17, !dbg !6344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6345 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6349, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i32 %1, metadata !6350, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i8* %2, metadata !6351, metadata !DIExpression()), !dbg !6353
  call void @llvm.dbg.value(metadata i32 0, metadata !6352, metadata !DIExpression()), !dbg !6353
  store i8 0, i8* %2, align 1, !dbg !6354
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6355

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !6356
  call void @llvm.dbg.value(metadata i32 %5, metadata !6352, metadata !DIExpression()), !dbg !6353
  br label %11, !dbg !6358

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6359
  call void @llvm.dbg.value(metadata i32 %7, metadata !6352, metadata !DIExpression()), !dbg !6353
  br label %11, !dbg !6360

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !6361
  call void @llvm.dbg.value(metadata i32 0, metadata !6352, metadata !DIExpression()), !dbg !6353
  br label %11, !dbg !6362

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !6363
  call void @llvm.dbg.value(metadata i32 0, metadata !6352, metadata !DIExpression()), !dbg !6353
  br label %11, !dbg !6364

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !6365
  br label %11, !dbg !6366

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6368 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6372, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i8* %1, metadata !6373, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i32 0, metadata !6374, metadata !DIExpression()), !dbg !6375
  store i8 0, i8* %1, align 1, !dbg !6376
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6377
  %4 = and i32 %3, 2, !dbg !6379
  %5 = icmp eq i32 %4, 0, !dbg !6380
  br i1 %5, label %6, label %33, !dbg !6381

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6382
  %8 = icmp sgt i32 %7, -1, !dbg !6384
  br i1 %8, label %9, label %33, !dbg !6385

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6386
  %11 = and i32 %10, 1073741824, !dbg !6388
  %12 = icmp eq i32 %11, 0, !dbg !6389
  br i1 %12, label %33, label %13, !dbg !6390

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !6391
  br i1 %14, label %15, label %18, !dbg !6394

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6395
  %17 = load i32, i32* %16, align 4, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %17, metadata !6374, metadata !DIExpression()), !dbg !6375
  br label %33, !dbg !6397

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6398
  %20 = and i32 %19, 255, !dbg !6400
  %21 = icmp eq i32 %20, 0, !dbg !6401
  br i1 %21, label %24, label %22, !dbg !6402

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6403
  call void @llvm.dbg.value(metadata i32 %23, metadata !6374, metadata !DIExpression()), !dbg !6375
  br label %33, !dbg !6405

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6406
  %26 = and i32 %25, 65280, !dbg !6408
  %27 = icmp eq i32 %26, 0, !dbg !6409
  br i1 %27, label %29, label %28, !dbg !6410

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !6411
  call void @llvm.dbg.value(metadata i32 0, metadata !6374, metadata !DIExpression()), !dbg !6375
  br label %33, !dbg !6413

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6414
  %31 = icmp ult i32 %30, 65536, !dbg !6416
  br i1 %31, label %33, label %32, !dbg !6417

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #27, !dbg !6418
  call void @llvm.dbg.value(metadata i32 0, metadata !6374, metadata !DIExpression()), !dbg !6375
  br label %33, !dbg !6420

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6375
  call void @llvm.dbg.value(metadata i32 %34, metadata !6374, metadata !DIExpression()), !dbg !6375
  ret i32 %34, !dbg !6421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6422 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6424, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 %1, metadata !6425, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i8* %2, metadata !6426, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 0, metadata !6427, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 -22, metadata !6428, metadata !DIExpression()), !dbg !6437
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6438
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6440
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6442
  %7 = and i32 %6, 2, !dbg !6443
  %8 = icmp eq i32 %7, 0, !dbg !6444
  br i1 %8, label %19, label %9, !dbg !6445

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6446
  call void @llvm.dbg.value(metadata i32 %10, metadata !6429, metadata !DIExpression()), !dbg !6447
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6448
  %12 = and i32 %11, 128, !dbg !6450
  %13 = icmp eq i32 %12, 0, !dbg !6451
  br i1 %13, label %19, label %14, !dbg !6452

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6428, metadata !DIExpression()), !dbg !6437
  %15 = icmp eq i32 %1, 0, !dbg !6453
  br i1 %15, label %19, label %16, !dbg !6456

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6457
  %18 = and i32 %17, -129, !dbg !6457
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6457
  br label %19, !dbg !6459

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6437
  call void @llvm.dbg.value(metadata i32 %20, metadata !6428, metadata !DIExpression()), !dbg !6437
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6460
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6462
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6464
  %24 = and i32 %23, 16, !dbg !6465
  %25 = icmp eq i32 %24, 0, !dbg !6465
  br i1 %25, label %26, label %30, !dbg !6466

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6467
  %28 = and i32 %27, 2, !dbg !6468
  %29 = icmp eq i32 %28, 0, !dbg !6468
  br i1 %29, label %39, label %30, !dbg !6469

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6470
  %32 = and i32 %31, 2048, !dbg !6471
  %33 = icmp eq i32 %32, 0, !dbg !6471
  br i1 %33, label %39, label %34, !dbg !6472

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6473
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6474
  call void @llvm.dbg.value(metadata i32 %36, metadata !6432, metadata !DIExpression()), !dbg !6475
  %37 = icmp eq i32 %36, 0, !dbg !6476
  br i1 %37, label %39, label %38, !dbg !6478

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6479, metadata !DIExpression()) #25, !dbg !6482
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6485, !srcloc !6486
  call void @llvm.dbg.value(metadata i32 2, metadata !6427, metadata !DIExpression()), !dbg !6437
  br label %39, !dbg !6487

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6437
  call void @llvm.dbg.value(metadata i32 %40, metadata !6427, metadata !DIExpression()), !dbg !6437
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6488
  %42 = and i32 %41, 32, !dbg !6490
  %43 = icmp eq i32 %42, 0, !dbg !6491
  br i1 %43, label %47, label %44, !dbg !6492

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6493
  %46 = and i32 %45, -8193, !dbg !6493
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6493
  br label %47, !dbg !6495

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6496
  %49 = or i32 %48, 255, !dbg !6496
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6496
  store i8 0, i8* %2, align 1, !dbg !6497
  ret i32 %40, !dbg !6498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6499 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6503, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 %0, metadata !6504, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i8* %1, metadata !6505, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.value(metadata i32 0, metadata !6506, metadata !DIExpression()), !dbg !6510
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6511
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6513
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6515
  %6 = and i32 %5, 512, !dbg !6516
  %7 = icmp eq i32 %6, 0, !dbg !6516
  br i1 %7, label %18, label %8, !dbg !6517

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6518
  call void @llvm.dbg.value(metadata i32 %9, metadata !6507, metadata !DIExpression()), !dbg !6519
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6520
  %11 = and i32 %10, 32768, !dbg !6522
  %12 = icmp ne i32 %11, 0, !dbg !6523
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6524
  br i1 %14, label %15, label %18, !dbg !6524

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6525
  %17 = and i32 %16, -32769, !dbg !6525
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6525
  br label %18, !dbg !6529

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6530
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6532
  %21 = and i32 %20, 256, !dbg !6534
  %22 = icmp eq i32 %21, 0, !dbg !6535
  br i1 %22, label %23, label %25, !dbg !6536

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6537
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  %27 = or i32 %26, 65280, !dbg !6539
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6539
  store i8 0, i8* %1, align 1, !dbg !6540
  ret void, !dbg !6541
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6542 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6548, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.value(metadata i32 0, metadata !6549, metadata !DIExpression()), !dbg !6550
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6551
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6553
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6555
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6557
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6559
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6561
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6563
  %8 = or i32 %7, -65536, !dbg !6563
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6563
  ret void, !dbg !6564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6565 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6569, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %0, metadata !6570, metadata !DIExpression()), !dbg !6571
  store i8 0, i8* %0, align 1, !dbg !6572
  ret void, !dbg !6573
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6574 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6578, metadata !DIExpression()), !dbg !6581
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6582
  %3 = load i32, i32* %2, align 4, !dbg !6582
  %4 = inttoptr i32 %3 to i16*, !dbg !6583
  call void @llvm.dbg.value(metadata i16* %4, metadata !6579, metadata !DIExpression()), !dbg !6581
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6584
  %6 = or i32 %5, 256, !dbg !6584
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6584
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6585, !srcloc !6588
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6589, !srcloc !6592
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6593
  %8 = load i16, i16* %7, align 2, !dbg !6594
  call void @llvm.dbg.value(metadata i16 %8, metadata !6580, metadata !DIExpression()), !dbg !6581
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6595
  %10 = and i32 %9, -257, !dbg !6595
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6595
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6596, !srcloc !6588
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6598, !srcloc !6592
  %11 = icmp eq i16 %8, -8446, !dbg !6600
  ret i1 %11, !dbg !6602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6603 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6604
  %2 = or i32 %1, 16, !dbg !6604
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6604
  ret void, !dbg !6605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6609, metadata !DIExpression()), !dbg !6610
  br label %1, !dbg !6611

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6609, metadata !DIExpression()), !dbg !6610
  tail call fastcc void @__NVIC_SetPriority.16(i32 noundef %2) #27, !dbg !6613
  %3 = add nuw nsw i32 %2, 1, !dbg !6616
  call void @llvm.dbg.value(metadata i32 %3, metadata !6609, metadata !DIExpression()), !dbg !6610
  %4 = icmp eq i32 %3, 97, !dbg !6617
  br i1 %4, label %5, label %1, !dbg !6611, !llvm.loop !6618

5:                                                ; preds = %1
  ret void, !dbg !6620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.16(i32 noundef %0) unnamed_addr #15 !dbg !6621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6623, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32 1, metadata !6624, metadata !DIExpression()), !dbg !6625
  %2 = and i32 %0, 15, !dbg !6626
  %3 = add nsw i32 %2, -4, !dbg !6626
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6626
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6626
  %6 = icmp slt i32 %0, 0, !dbg !6626
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6626
  store volatile i8 16, i8* %7, align 1, !dbg !6627
  ret void, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6736, metadata !DIExpression()), !dbg !6737
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6738
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6740
  br i1 %3, label %4, label %12, !dbg !6741

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6742, !srcloc !6754
  call void @llvm.dbg.value(metadata i32 %5, metadata !6745, metadata !DIExpression()) #25, !dbg !6755
  %6 = icmp eq i32 %5, 0, !dbg !6756
  br i1 %6, label %12, label %7, !dbg !6757

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6758
  %9 = or i32 %8, 268435456, !dbg !6758
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6758
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6760
  %11 = and i32 %10, -32769, !dbg !6760
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6760
  br label %12, !dbg !6761

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !6762
  ret void, !dbg !6763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6764 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !6765
  ret void, !dbg !6766
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !373 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !488, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i8 0, metadata !489, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i32 64, metadata !491, metadata !DIExpression()), !dbg !6767
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6768
  %3 = load i32, i32* %2, align 4, !dbg !6768
  %4 = add i32 %3, -64, !dbg !6770
  call void @llvm.dbg.value(metadata i32 %4, metadata !490, metadata !DIExpression()), !dbg !6767
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6771
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6772
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6773
  call void @llvm.dbg.value(metadata i8 1, metadata !489, metadata !DIExpression()), !dbg !6767
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !6774
  ret void, !dbg !6775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6776 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6777
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6778, !srcloc !6781
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6782, !srcloc !6785
  ret void, !dbg !6786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6787 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6788, !srcloc !6791
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6792
  ret void, !dbg !6793
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6794 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6809, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i8 %1, metadata !6810, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %2, metadata !6811, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %3, metadata !6812, metadata !DIExpression()), !dbg !6813
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6814
  ret void, !dbg !6816
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6817 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6822, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i8 %1, metadata !6823, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 undef, metadata !6824, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 undef, metadata !6825, metadata !DIExpression()), !dbg !6827
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6828
  call void @llvm.dbg.value(metadata i8 %3, metadata !6826, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6827
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !6829
  call void @llvm.dbg.value(metadata i32 %4, metadata !6826, metadata !DIExpression()), !dbg !6827
  %5 = trunc i32 %4 to i8, !dbg !6830
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6831
  ret void, !dbg !6832
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6833 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6837, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8 %1, metadata !6838, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i8 %2, metadata !6839, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i1 %3, metadata !6840, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6843
  %5 = zext i8 %2 to i32, !dbg !6844
  call void @llvm.dbg.value(metadata i32 %5, metadata !6842, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 0, metadata !6841, metadata !DIExpression()), !dbg !6843
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6842, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 0, metadata !6841, metadata !DIExpression()), !dbg !6843
  %7 = icmp eq i8 %1, 0, !dbg !6845
  br i1 %7, label %29, label %8, !dbg !6848

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6842, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.value(metadata i32 %10, metadata !6841, metadata !DIExpression()), !dbg !6843
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6849
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6852
  %13 = load i32, i32* %12, align 4, !dbg !6852
  %14 = icmp eq i32 %13, 0, !dbg !6853
  br i1 %14, label %25, label %15, !dbg !6854

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6855

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6857
  %18 = icmp eq i32 %17, 0, !dbg !6857
  br i1 %18, label %29, label %19, !dbg !6858

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6859
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %21, metadata !6842, metadata !DIExpression()), !dbg !6843
  %22 = icmp eq i32 %21, -22, !dbg !6861
  br i1 %22, label %29, label %23, !dbg !6863

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6864
  call void @llvm.dbg.value(metadata i32 %24, metadata !6842, metadata !DIExpression()), !dbg !6843
  br label %25, !dbg !6865

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6843
  call void @llvm.dbg.value(metadata i32 %26, metadata !6842, metadata !DIExpression()), !dbg !6843
  %27 = add nuw nsw i32 %10, 1, !dbg !6866
  call void @llvm.dbg.value(metadata i32 %27, metadata !6841, metadata !DIExpression()), !dbg !6843
  %28 = icmp eq i32 %27, %6, !dbg !6845
  br i1 %28, label %29, label %8, !dbg !6848, !llvm.loop !6867

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6843
  ret i32 %30, !dbg !6869
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6870 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6874, metadata !DIExpression()), !dbg !6876
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6877
  %3 = load i32, i32* %2, align 4, !dbg !6877
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6878, !range !3806
  %5 = icmp ult i32 %4, 2, !dbg !6878
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6879
  br i1 %7, label %8, label %15, !dbg !6879

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6880
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6881
  %11 = load i32, i32* %10, align 4, !dbg !6881
  %12 = and i32 %11, %9, !dbg !6882
  %13 = icmp eq i32 %12, 0, !dbg !6883
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6875, metadata !DIExpression()), !dbg !6876
  ret i32 %16, !dbg !6884
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6885 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6889, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6890, metadata !DIExpression()), !dbg !6892
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6893
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6893
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6891, metadata !DIExpression()), !dbg !6894
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6895
  %6 = load i32, i32* %5, align 4, !dbg !6895
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6896
  store i32 %6, i32* %7, align 4, !dbg !6897
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6898
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6899
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6900
  %11 = load i32, i32* %10, align 4, !dbg !6900
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #27, !dbg !6901
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !6902
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !6903
  ret i32 %12, !dbg !6904
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6905 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6912, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6913, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 undef, metadata !6914, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 %2, metadata !6915, metadata !DIExpression()), !dbg !6916
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6917
  %5 = load i32, i32* %4, align 4, !dbg !6917
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !6918
  %7 = or i32 %6, %5, !dbg !6919
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6920
  store i32 %7, i32* %8, align 4, !dbg !6921
  ret void, !dbg !6922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6923 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6927, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6928, metadata !DIExpression()), !dbg !6929
  %3 = zext i8 %0 to i32, !dbg !6930
  %4 = icmp ugt i8 %0, 7, !dbg !6932
  br i1 %4, label %6, label %5, !dbg !6933

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !6934
  br label %6, !dbg !6935

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6929
  ret i32 %7, !dbg !6936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6941, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6942, metadata !DIExpression()), !dbg !6943
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !6944
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6945
  %4 = load i32, i32* %3, align 4, !dbg !6945
  %5 = and i32 %4, -32, !dbg !6946
  %6 = or i32 %5, %0, !dbg !6947
  %7 = or i32 %6, 16, !dbg !6947
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6948
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6949
  %9 = load i32, i32* %8, align 4, !dbg !6949
  %10 = or i32 %9, 1, !dbg !6950
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6951
  ret void, !dbg !6952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !6953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6956, metadata !DIExpression()), !dbg !6957
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6958
  ret void, !dbg !6959
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6964, metadata !DIExpression()), !dbg !6965
  %2 = icmp ult i32 %0, 33, !dbg !6966
  br i1 %2, label %11, label %3, !dbg !6968

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6969
  br i1 %4, label %11, label %5, !dbg !6971

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6972
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6973, !range !3806
  %8 = mul nsw i32 %7, -2, !dbg !6974
  %9 = add nsw i32 %8, 62, !dbg !6974
  %10 = and i32 %9, 62, !dbg !6975
  br label %11, !dbg !6976

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6965
  ret i32 %12, !dbg !6977
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !6978 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6982, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i8 %1, metadata !6983, metadata !DIExpression()), !dbg !6984
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !6985
  ret void, !dbg !6987
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6988 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6992, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.value(metadata i8 %1, metadata !6993, metadata !DIExpression()), !dbg !6999
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7000
  call void @llvm.dbg.value(metadata i8 %3, metadata !6994, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6999
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !7001
  call void @llvm.dbg.value(metadata i32 %4, metadata !6994, metadata !DIExpression()), !dbg !6999
  %5 = icmp ne i32 %4, -22, !dbg !7002
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7003
  call void @llvm.dbg.value(metadata i32 %4, metadata !6995, metadata !DIExpression()), !dbg !7004
  br i1 %7, label %8, label %12, !dbg !7003

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6995, metadata !DIExpression()), !dbg !7004
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !7005
  %10 = add i32 %9, 1, !dbg !7008
  call void @llvm.dbg.value(metadata i32 %10, metadata !6995, metadata !DIExpression()), !dbg !7004
  %11 = icmp eq i32 %10, 8, !dbg !7009
  br i1 %11, label %12, label %8, !dbg !7010, !llvm.loop !7011

12:                                               ; preds = %8, %2
  ret void, !dbg !7013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7017, metadata !DIExpression()), !dbg !7018
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7019
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7020
  ret void, !dbg !7021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7022 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7027
  %2 = icmp ugt i32 %1, 8, !dbg !7029
  br i1 %2, label %14, label %3, !dbg !7030

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !7031
  call void @llvm.dbg.value(metadata i32 0, metadata !7026, metadata !DIExpression()), !dbg !7032
  %4 = icmp eq i32 %1, 0, !dbg !7033
  br i1 %4, label %12, label %5, !dbg !7036

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7036

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7026, metadata !DIExpression()), !dbg !7032
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7037
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #27, !dbg !7039
  %10 = add nuw i32 %8, 1, !dbg !7040
  call void @llvm.dbg.value(metadata i32 %10, metadata !7026, metadata !DIExpression()), !dbg !7032
  %11 = icmp eq i32 %10, %1, !dbg !7033
  br i1 %11, label %12, label %7, !dbg !7036, !llvm.loop !7041

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7043
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7044
  tail call void @arm_core_mpu_enable() #27, !dbg !7045
  br label %14, !dbg !7046

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7032
  ret i32 %15, !dbg !7047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7055, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i8* %1, metadata !7056, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i8* %0, metadata !7057, metadata !DIExpression()), !dbg !7058
  %3 = load i8, i8* %1, align 1, !dbg !7059
  %4 = icmp eq i8 %3, 0, !dbg !7060
  br i1 %4, label %13, label %5, !dbg !7061

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7055, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i8* %8, metadata !7056, metadata !DIExpression()), !dbg !7058
  store i8 %6, i8* %7, align 1, !dbg !7062
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7064
  call void @llvm.dbg.value(metadata i8* %9, metadata !7055, metadata !DIExpression()), !dbg !7058
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7065
  call void @llvm.dbg.value(metadata i8* %10, metadata !7056, metadata !DIExpression()), !dbg !7058
  %11 = load i8, i8* %10, align 1, !dbg !7059
  %12 = icmp eq i8 %11, 0, !dbg !7060
  br i1 %12, label %13, label %5, !dbg !7061, !llvm.loop !7066

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7068
  ret i8* %0, !dbg !7069
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7074, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i8* %1, metadata !7075, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %2, metadata !7076, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i8* %0, metadata !7077, metadata !DIExpression()), !dbg !7078
  %4 = icmp eq i32 %2, 0, !dbg !7079
  br i1 %4, label %22, label %5, !dbg !7080

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7074, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %7, metadata !7076, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i8* %8, metadata !7075, metadata !DIExpression()), !dbg !7078
  %9 = load i8, i8* %8, align 1, !dbg !7081
  %10 = icmp eq i8 %9, 0, !dbg !7082
  br i1 %10, label %16, label %11, !dbg !7083

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7084
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7086
  call void @llvm.dbg.value(metadata i8* %12, metadata !7075, metadata !DIExpression()), !dbg !7078
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7087
  call void @llvm.dbg.value(metadata i8* %13, metadata !7074, metadata !DIExpression()), !dbg !7078
  %14 = add i32 %7, -1, !dbg !7088
  call void @llvm.dbg.value(metadata i32 %14, metadata !7076, metadata !DIExpression()), !dbg !7078
  %15 = icmp eq i32 %14, 0, !dbg !7079
  br i1 %15, label %22, label %5, !dbg !7080, !llvm.loop !7089

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7074, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.value(metadata i32 %18, metadata !7076, metadata !DIExpression()), !dbg !7078
  store i8 0, i8* %17, align 1, !dbg !7091
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7093
  call void @llvm.dbg.value(metadata i8* %19, metadata !7074, metadata !DIExpression()), !dbg !7078
  %20 = add i32 %18, -1, !dbg !7094
  call void @llvm.dbg.value(metadata i32 %20, metadata !7076, metadata !DIExpression()), !dbg !7078
  %21 = icmp eq i32 %20, 0, !dbg !7095
  br i1 %21, label %22, label %16, !dbg !7096, !llvm.loop !7097

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7099
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7104, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i32 %1, metadata !7105, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.value(metadata i32 %1, metadata !7106, metadata !DIExpression()), !dbg !7107
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7108

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7104, metadata !DIExpression()), !dbg !7107
  %6 = load i8, i8* %5, align 1, !dbg !7109
  %7 = icmp eq i8 %6, %3, !dbg !7110
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7111
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7112
  call void @llvm.dbg.value(metadata i8* %10, metadata !7104, metadata !DIExpression()), !dbg !7107
  br i1 %9, label %11, label %4, !dbg !7111, !llvm.loop !7114

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7116
  ret i8* %12, !dbg !7117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7120, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i32 %1, metadata !7121, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i8* null, metadata !7122, metadata !DIExpression()), !dbg !7123
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7124

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7123
  call void @llvm.dbg.value(metadata i8* %6, metadata !7122, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i8* %5, metadata !7120, metadata !DIExpression()), !dbg !7123
  %7 = load i8, i8* %5, align 1, !dbg !7125
  %8 = icmp eq i8 %7, %3, !dbg !7128
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7129
  call void @llvm.dbg.value(metadata i8* %9, metadata !7122, metadata !DIExpression()), !dbg !7123
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7130
  call void @llvm.dbg.value(metadata i8* %10, metadata !7120, metadata !DIExpression()), !dbg !7123
  %11 = icmp eq i8 %7, 0, !dbg !7131
  br i1 %11, label %12, label %4, !dbg !7131, !llvm.loop !7132

12:                                               ; preds = %4
  ret i8* %9, !dbg !7134
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7135 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7139, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i32 0, metadata !7140, metadata !DIExpression()), !dbg !7141
  %2 = load i8, i8* %0, align 1, !dbg !7142
  %3 = icmp eq i8 %2, 0, !dbg !7143
  br i1 %3, label %11, label %4, !dbg !7144

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7140, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.value(metadata i8* %6, metadata !7139, metadata !DIExpression()), !dbg !7141
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7145
  call void @llvm.dbg.value(metadata i8* %7, metadata !7139, metadata !DIExpression()), !dbg !7141
  %8 = add i32 %5, 1, !dbg !7147
  call void @llvm.dbg.value(metadata i32 %8, metadata !7140, metadata !DIExpression()), !dbg !7141
  %9 = load i8, i8* %7, align 1, !dbg !7142
  %10 = icmp eq i8 %9, 0, !dbg !7143
  br i1 %10, label %11, label %4, !dbg !7144, !llvm.loop !7148

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7141
  ret i32 %12, !dbg !7150
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7151 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7155, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.value(metadata i32 %1, metadata !7156, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.value(metadata i32 0, metadata !7157, metadata !DIExpression()), !dbg !7158
  %3 = load i8, i8* %0, align 1, !dbg !7159
  %4 = icmp ne i8 %3, 0, !dbg !7160
  %5 = icmp ne i32 %1, 0, !dbg !7161
  %6 = and i1 %4, %5, !dbg !7161
  br i1 %6, label %7, label %16, !dbg !7162

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7157, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.value(metadata i8* %9, metadata !7155, metadata !DIExpression()), !dbg !7158
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7163
  call void @llvm.dbg.value(metadata i8* %10, metadata !7155, metadata !DIExpression()), !dbg !7158
  %11 = add nuw i32 %8, 1, !dbg !7165
  call void @llvm.dbg.value(metadata i32 %11, metadata !7157, metadata !DIExpression()), !dbg !7158
  %12 = load i8, i8* %10, align 1, !dbg !7159
  %13 = icmp ne i8 %12, 0, !dbg !7160
  %14 = icmp ult i32 %11, %1, !dbg !7161
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7161
  br i1 %15, label %7, label %16, !dbg !7162, !llvm.loop !7166

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7158
  ret i32 %17, !dbg !7168
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7169 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7173, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %1, metadata !7174, metadata !DIExpression()), !dbg !7175
  %3 = load i8, i8* %0, align 1, !dbg !7176
  %4 = load i8, i8* %1, align 1, !dbg !7177
  %5 = icmp ne i8 %3, %4, !dbg !7178
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7179
  br i1 %7, label %18, label %8, !dbg !7179

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7174, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.value(metadata i8* %10, metadata !7173, metadata !DIExpression()), !dbg !7175
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7180
  call void @llvm.dbg.value(metadata i8* %11, metadata !7173, metadata !DIExpression()), !dbg !7175
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7182
  call void @llvm.dbg.value(metadata i8* %12, metadata !7174, metadata !DIExpression()), !dbg !7175
  %13 = load i8, i8* %11, align 1, !dbg !7176
  %14 = load i8, i8* %12, align 1, !dbg !7177
  %15 = icmp ne i8 %13, %14, !dbg !7178
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7179
  br i1 %17, label %18, label %8, !dbg !7179, !llvm.loop !7183

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7176
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7177
  %21 = zext i8 %19 to i32, !dbg !7186
  %22 = zext i8 %20 to i32, !dbg !7187
  %23 = sub nsw i32 %21, %22, !dbg !7188
  ret i32 %23, !dbg !7189
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7190 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7194, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i8* %1, metadata !7195, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i32 %2, metadata !7196, metadata !DIExpression()), !dbg !7197
  %4 = icmp eq i32 %2, 0, !dbg !7198
  br i1 %4, label %23, label %5, !dbg !7198

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7196, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i8* %7, metadata !7195, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i8* %8, metadata !7194, metadata !DIExpression()), !dbg !7197
  %9 = load i8, i8* %8, align 1, !dbg !7199
  %10 = load i8, i8* %7, align 1, !dbg !7200
  %11 = icmp ne i8 %9, %10, !dbg !7201
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7202
  br i1 %13, label %19, label %14, !dbg !7202

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7203
  call void @llvm.dbg.value(metadata i8* %15, metadata !7194, metadata !DIExpression()), !dbg !7197
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7205
  call void @llvm.dbg.value(metadata i8* %16, metadata !7195, metadata !DIExpression()), !dbg !7197
  %17 = add i32 %6, -1, !dbg !7206
  call void @llvm.dbg.value(metadata i32 %17, metadata !7196, metadata !DIExpression()), !dbg !7197
  %18 = icmp eq i32 %17, 0, !dbg !7198
  br i1 %18, label %23, label %5, !dbg !7198, !llvm.loop !7207

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7210
  %21 = zext i8 %10 to i32, !dbg !7211
  %22 = sub nsw i32 %20, %21, !dbg !7212
  br label %23, !dbg !7213

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7213
  ret i32 %24, !dbg !7214
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7215 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7220, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata i8* %1, metadata !7221, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.value(metadata i8** %2, metadata !7222, metadata !DIExpression()), !dbg !7225
  %4 = icmp eq i8* %0, null, !dbg !7226
  br i1 %4, label %5, label %7, !dbg !7226

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7227
  br label %7, !dbg !7226

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7226
  call void @llvm.dbg.value(metadata i8* %8, metadata !7223, metadata !DIExpression()), !dbg !7225
  %9 = load i8, i8* %8, align 1, !dbg !7228
  %10 = icmp eq i8 %9, 0, !dbg !7228
  br i1 %10, label %33, label %11, !dbg !7229

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7223, metadata !DIExpression()), !dbg !7225
  %14 = zext i8 %12 to i32, !dbg !7228
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !7230
  %16 = icmp eq i8* %15, null, !dbg !7229
  br i1 %16, label %21, label %17, !dbg !7231

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7232
  call void @llvm.dbg.value(metadata i8* %18, metadata !7223, metadata !DIExpression()), !dbg !7225
  %19 = load i8, i8* %18, align 1, !dbg !7228
  %20 = icmp eq i8 %19, 0, !dbg !7228
  br i1 %20, label %33, label %11, !dbg !7229, !llvm.loop !7234

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7224, metadata !DIExpression()), !dbg !7225
  %24 = zext i8 %22 to i32, !dbg !7236
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !7237
  %26 = icmp eq i8* %25, null, !dbg !7238
  br i1 %26, label %27, label %31, !dbg !7239

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7240
  call void @llvm.dbg.value(metadata i8* %28, metadata !7224, metadata !DIExpression()), !dbg !7225
  %29 = load i8, i8* %28, align 1, !dbg !7236
  %30 = icmp eq i8 %29, 0, !dbg !7236
  br i1 %30, label %33, label %21, !dbg !7242, !llvm.loop !7243

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7245
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7248
  br label %33, !dbg !7249

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7225
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7225
  store i8* %34, i8** %2, align 4, !dbg !7225
  ret i8* %35, !dbg !7250
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7251 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7253, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.value(metadata i8* %1, metadata !7254, metadata !DIExpression()), !dbg !7255
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7256
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7257
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !7258
  ret i8* %0, !dbg !7259
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7262, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i8* %1, metadata !7263, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i32 %2, metadata !7264, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i8* %0, metadata !7265, metadata !DIExpression()), !dbg !7267
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7268
  call void @llvm.dbg.value(metadata i32 %4, metadata !7266, metadata !DIExpression()), !dbg !7267
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7269
  call void @llvm.dbg.value(metadata i8* %5, metadata !7262, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i8* %1, metadata !7263, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i32 %2, metadata !7264, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i32 %2, metadata !7264, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7267
  %6 = icmp eq i32 %2, 0, !dbg !7270
  br i1 %6, label %18, label %7, !dbg !7271

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7272
  call void @llvm.dbg.value(metadata i8* %9, metadata !7262, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i8* %10, metadata !7263, metadata !DIExpression()), !dbg !7267
  %12 = load i8, i8* %10, align 1, !dbg !7273
  %13 = icmp eq i8 %12, 0, !dbg !7274
  br i1 %13, label %18, label %14, !dbg !7275

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7276
  call void @llvm.dbg.value(metadata i8* %15, metadata !7263, metadata !DIExpression()), !dbg !7267
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7278
  call void @llvm.dbg.value(metadata i8* %16, metadata !7262, metadata !DIExpression()), !dbg !7267
  store i8 %12, i8* %9, align 1, !dbg !7279
  call void @llvm.dbg.value(metadata i32 %11, metadata !7264, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i32 %11, metadata !7264, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7267
  %17 = icmp eq i32 %11, 0, !dbg !7270
  br i1 %17, label %18, label %7, !dbg !7271, !llvm.loop !7280

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7267
  store i8 0, i8* %19, align 1, !dbg !7282
  ret i8* %0, !dbg !7283
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7284 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7288, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8* %1, metadata !7289, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 %2, metadata !7290, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8* %0, metadata !7291, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8* %1, metadata !7292, metadata !DIExpression()), !dbg !7293
  %4 = icmp eq i32 %2, 0, !dbg !7294
  br i1 %4, label %31, label %5, !dbg !7296

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8* %0, metadata !7291, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 %2, metadata !7290, metadata !DIExpression()), !dbg !7293
  %6 = add i32 %2, -1, !dbg !7297
  call void @llvm.dbg.value(metadata i32 %6, metadata !7290, metadata !DIExpression()), !dbg !7293
  %7 = icmp eq i32 %6, 0, !dbg !7298
  br i1 %7, label %23, label %8, !dbg !7299

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7300
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7300
  br label %11, !dbg !7300

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i8* %14, metadata !7291, metadata !DIExpression()), !dbg !7293
  %15 = load i8, i8* %14, align 1, !dbg !7301
  %16 = load i8, i8* %13, align 1, !dbg !7302
  %17 = icmp eq i8 %15, %16, !dbg !7303
  br i1 %17, label %18, label %23, !dbg !7300

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7304
  call void @llvm.dbg.value(metadata i8* %19, metadata !7291, metadata !DIExpression()), !dbg !7293
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7306
  call void @llvm.dbg.value(metadata i8* %20, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.value(metadata i32 %12, metadata !7290, metadata !DIExpression()), !dbg !7293
  %21 = add i32 %12, -1, !dbg !7297
  call void @llvm.dbg.value(metadata i32 %21, metadata !7290, metadata !DIExpression()), !dbg !7293
  %22 = icmp eq i32 %21, 0, !dbg !7298
  br i1 %22, label %23, label %11, !dbg !7299, !llvm.loop !7307

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7293
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7293
  %26 = load i8, i8* %24, align 1, !dbg !7309
  %27 = zext i8 %26 to i32, !dbg !7309
  %28 = load i8, i8* %25, align 1, !dbg !7310
  %29 = zext i8 %28 to i32, !dbg !7310
  %30 = sub nsw i32 %27, %29, !dbg !7311
  br label %31, !dbg !7312

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7293
  ret i32 %32, !dbg !7313
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7318, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i8* %1, metadata !7319, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i32 %2, metadata !7320, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i8* %0, metadata !7321, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i8* %1, metadata !7322, metadata !DIExpression()), !dbg !7323
  %4 = ptrtoint i8* %0 to i32, !dbg !7324
  %5 = ptrtoint i8* %1 to i32, !dbg !7324
  %6 = sub i32 %4, %5, !dbg !7324
  %7 = icmp ult i32 %6, %2, !dbg !7326
  br i1 %7, label %10, label %8, !dbg !7327

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i8* %0, metadata !7321, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i32 %2, metadata !7320, metadata !DIExpression()), !dbg !7323
  %9 = icmp eq i32 %2, 0, !dbg !7328
  br i1 %9, label %26, label %17, !dbg !7330

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7320, metadata !DIExpression()), !dbg !7323
  %12 = add i32 %11, -1, !dbg !7331
  call void @llvm.dbg.value(metadata i32 %12, metadata !7320, metadata !DIExpression()), !dbg !7323
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7334
  %14 = load i8, i8* %13, align 1, !dbg !7334
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7335
  store i8 %14, i8* %15, align 1, !dbg !7336
  %16 = icmp eq i32 %12, 0, !dbg !7337
  br i1 %16, label %26, label %10, !dbg !7338, !llvm.loop !7339

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i8* %19, metadata !7321, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.value(metadata i32 %20, metadata !7320, metadata !DIExpression()), !dbg !7323
  %21 = load i8, i8* %18, align 1, !dbg !7341
  store i8 %21, i8* %19, align 1, !dbg !7343
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7344
  call void @llvm.dbg.value(metadata i8* %22, metadata !7321, metadata !DIExpression()), !dbg !7323
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7345
  call void @llvm.dbg.value(metadata i8* %23, metadata !7322, metadata !DIExpression()), !dbg !7323
  %24 = add i32 %20, -1, !dbg !7346
  call void @llvm.dbg.value(metadata i32 %24, metadata !7320, metadata !DIExpression()), !dbg !7323
  %25 = icmp eq i32 %24, 0, !dbg !7328
  br i1 %25, label %26, label %17, !dbg !7330, !llvm.loop !7347

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7349
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7350 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7356, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i8* %1, metadata !7357, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i32 %2, metadata !7358, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i8* %0, metadata !7359, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i8* %1, metadata !7360, metadata !DIExpression()), !dbg !7361
  %4 = icmp eq i32 %2, 0, !dbg !7362
  br i1 %4, label %14, label %5, !dbg !7363

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7360, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i8* %7, metadata !7359, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.value(metadata i32 %8, metadata !7358, metadata !DIExpression()), !dbg !7361
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7364
  call void @llvm.dbg.value(metadata i8* %9, metadata !7360, metadata !DIExpression()), !dbg !7361
  %10 = load i8, i8* %6, align 1, !dbg !7366
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7367
  call void @llvm.dbg.value(metadata i8* %11, metadata !7359, metadata !DIExpression()), !dbg !7361
  store i8 %10, i8* %7, align 1, !dbg !7368
  %12 = add i32 %8, -1, !dbg !7369
  call void @llvm.dbg.value(metadata i32 %12, metadata !7358, metadata !DIExpression()), !dbg !7361
  %13 = icmp eq i32 %12, 0, !dbg !7362
  br i1 %13, label %14, label %5, !dbg !7363, !llvm.loop !7370

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7372
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7377, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i32 %1, metadata !7378, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i32 %2, metadata !7379, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i8* %0, metadata !7380, metadata !DIExpression()), !dbg !7382
  %4 = trunc i32 %1 to i8, !dbg !7383
  call void @llvm.dbg.value(metadata i8 %4, metadata !7381, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i32 %2, metadata !7379, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i8* %0, metadata !7380, metadata !DIExpression()), !dbg !7382
  %5 = icmp eq i32 %2, 0, !dbg !7384
  br i1 %5, label %12, label %6, !dbg !7385

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7379, metadata !DIExpression()), !dbg !7382
  call void @llvm.dbg.value(metadata i8* %8, metadata !7380, metadata !DIExpression()), !dbg !7382
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7386
  call void @llvm.dbg.value(metadata i8* %9, metadata !7380, metadata !DIExpression()), !dbg !7382
  store i8 %4, i8* %8, align 1, !dbg !7388
  %10 = add i32 %7, -1, !dbg !7389
  call void @llvm.dbg.value(metadata i32 %10, metadata !7379, metadata !DIExpression()), !dbg !7382
  %11 = icmp eq i32 %10, 0, !dbg !7384
  br i1 %11, label %12, label %6, !dbg !7385, !llvm.loop !7390

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7393 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7397, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i32 %1, metadata !7398, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i32 %2, metadata !7399, metadata !DIExpression()), !dbg !7403
  %4 = icmp eq i32 %2, 0, !dbg !7404
  br i1 %4, label %17, label %5, !dbg !7405

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7406

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7407
  call void @llvm.dbg.value(metadata i8* %9, metadata !7400, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i32 %8, metadata !7399, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.value(metadata i8* %9, metadata !7400, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7407
  %10 = load i8, i8* %9, align 1, !dbg !7408
  %11 = icmp eq i8 %10, %6, !dbg !7411
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7412
  call void @llvm.dbg.value(metadata i8* %12, metadata !7400, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.value(metadata i32 %13, metadata !7399, metadata !DIExpression()), !dbg !7403
  br i1 %15, label %16, label %7, !dbg !7412, !llvm.loop !7413

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7415

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7403
  ret i8* %19, !dbg !7416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7417 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7419, metadata !DIExpression()), !dbg !7420
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7421
  ret void, !dbg !7422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7425, metadata !DIExpression()), !dbg !7426
  ret i32 -1, !dbg !7427
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7432, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.value(metadata i32* %1, metadata !7433, metadata !DIExpression()), !dbg !7434
  %3 = ptrtoint i32* %1 to i32, !dbg !7435
  %4 = and i32 %3, -2, !dbg !7435
  %5 = icmp eq i32 %4, 2, !dbg !7435
  br i1 %5, label %6, label %9, !dbg !7435

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7436
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !7436
  br label %9, !dbg !7437

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7437
  ret i32 %10, !dbg !7438
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7441, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i32* %1, metadata !7442, metadata !DIExpression()), !dbg !7443
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7444
  ret i32 %3, !dbg !7445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7449, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata i32* %1, metadata !7450, metadata !DIExpression()), !dbg !7451
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7452, !srcloc !7454
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !7455
  ret i32 %3, !dbg !7456
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7457 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7462, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i32* %1, metadata !7463, metadata !DIExpression()), !dbg !7466
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7467
  call void @llvm.dbg.value(metadata i32 %3, metadata !7464, metadata !DIExpression()), !dbg !7466
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %4, metadata !7465, metadata !DIExpression()), !dbg !7466
  %5 = icmp ne i32 %3, %4, !dbg !7469
  %6 = sext i1 %5 to i32, !dbg !7470
  ret i32 %6, !dbg !7471
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7472 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7476, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %1, metadata !7477, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %2, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32* %3, metadata !7479, metadata !DIExpression()), !dbg !7480
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7481
  ret i32 %5, !dbg !7482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7485, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %1, metadata !7486, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 %2, metadata !7487, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32* %3, metadata !7488, metadata !DIExpression()), !dbg !7489
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7490, !srcloc !7492
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !7493
  ret i32 %5, !dbg !7494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7495 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7497, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %1, metadata !7498, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %2, metadata !7499, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32* %3, metadata !7500, metadata !DIExpression()), !dbg !7505
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7506
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7508
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7508
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7508
  br i1 %11, label %33, label %12, !dbg !7508

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7505
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7505
  call void @llvm.dbg.value(metadata i8* %14, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %13, metadata !7501, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %1, metadata !7502, metadata !DIExpression()), !dbg !7505
  br label %15, !dbg !7509

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7511
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7505
  call void @llvm.dbg.value(metadata i8* %17, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %16, metadata !7502, metadata !DIExpression()), !dbg !7505
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7512
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7515
  call void @llvm.dbg.value(metadata i8* %19, metadata !7503, metadata !DIExpression()), !dbg !7505
  %20 = load i8, i8* %17, align 1, !dbg !7516
  %21 = zext i8 %20 to i32, !dbg !7517
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !7512
  %23 = icmp eq i32 %22, -1, !dbg !7518
  br i1 %23, label %30, label %24, !dbg !7519

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7520
  call void @llvm.dbg.value(metadata i32 %25, metadata !7502, metadata !DIExpression()), !dbg !7505
  %26 = icmp eq i32 %25, 0, !dbg !7521
  br i1 %26, label %27, label %15, !dbg !7522, !llvm.loop !7523

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7525
  call void @llvm.dbg.value(metadata i32 %28, metadata !7501, metadata !DIExpression()), !dbg !7505
  %29 = icmp eq i32 %28, 0, !dbg !7526
  br i1 %29, label %30, label %12, !dbg !7527, !llvm.loop !7528

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7505
  call void @llvm.dbg.value(metadata i32 %31, metadata !7501, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.label(metadata !7504), !dbg !7531
  %32 = sub i32 %2, %31, !dbg !7532
  br label %33, !dbg !7533

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7505
  ret i32 %34, !dbg !7534
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7539, metadata !DIExpression()), !dbg !7540
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7541
  %3 = icmp eq i32 %2, -1, !dbg !7543
  br i1 %3, label %8, label %4, !dbg !7544

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !7545
  %6 = icmp eq i32 %5, -1, !dbg !7546
  %7 = sext i1 %6 to i32, !dbg !7545
  br label %8, !dbg !7547

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7540
  ret i32 %9, !dbg !7548
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7549 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7551, metadata !DIExpression()), !dbg !7552
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !7553
  ret void, !dbg !7554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7559, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %1, metadata !7560, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7561, metadata !DIExpression()), !dbg !7565
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7566
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7566
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7566
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7562, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.value(metadata i32 %0, metadata !7564, metadata !DIExpression()), !dbg !7565
  %7 = icmp slt i32 %0, %1, !dbg !7567
  br i1 %7, label %8, label %22, !dbg !7570

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7564, metadata !DIExpression()), !dbg !7565
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !7571
  %11 = icmp eq i32 %10, 0, !dbg !7571
  br i1 %11, label %19, label %12, !dbg !7574

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !7575
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7577
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7577
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7579
  br i1 %15, label %19, label %16, !dbg !7580

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7581
  %18 = load i8*, i8** %17, align 4, !dbg !7581
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7582
  br label %19, !dbg !7583

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7584
  call void @llvm.dbg.value(metadata i32 %20, metadata !7564, metadata !DIExpression()), !dbg !7565
  %21 = icmp eq i32 %20, %1, !dbg !7567
  br i1 %21, label %22, label %8, !dbg !7570, !llvm.loop !7585

22:                                               ; preds = %19, %3
  ret void, !dbg !7587
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7590, metadata !DIExpression()), !dbg !7591
  %2 = shl nuw i32 1, %0, !dbg !7592
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !7595
  ret i32 %3, !dbg !7596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7601, metadata !DIExpression()), !dbg !7602
  %2 = shl nuw i32 1, %0, !dbg !7603
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !7606
  ret void, !dbg !7607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7611, metadata !DIExpression()), !dbg !7612
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7613
  ret void, !dbg !7614
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7617, metadata !DIExpression()), !dbg !7618
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7619
  %3 = and i32 %2, %0, !dbg !7619
  %4 = icmp eq i32 %3, %0, !dbg !7620
  %5 = zext i1 %4 to i32, !dbg !7620
  ret i32 %5, !dbg !7621
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7622 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7624, metadata !DIExpression()), !dbg !7625
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !7626
  ret void, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7630, metadata !DIExpression()), !dbg !7631
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !7632
  ret void, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7636, metadata !DIExpression()), !dbg !7637
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !7638
  ret void, !dbg !7639
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7642, metadata !DIExpression()), !dbg !7643
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #27, !dbg !7644
  ret void, !dbg !7645
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7646 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7648, metadata !DIExpression()), !dbg !7649
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #27, !dbg !7650
  ret void, !dbg !7651
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7652 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7654, metadata !DIExpression()), !dbg !7655
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !7656
  ret void, !dbg !7657
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7660, metadata !DIExpression()), !dbg !7661
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #27, !dbg !7662
  ret void, !dbg !7663
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7666, metadata !DIExpression()), !dbg !7667
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #27, !dbg !7668
  ret void, !dbg !7669
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7672, metadata !DIExpression()), !dbg !7673
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !7674
  ret void, !dbg !7675
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7678, metadata !DIExpression()), !dbg !7679
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !7680
  ret void, !dbg !7681
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7684, metadata !DIExpression()), !dbg !7685
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !7686
  ret i32 0, !dbg !7687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !737 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !741, metadata !DIExpression()), !dbg !7688
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7689
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7691
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7693
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7695
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7697
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7699
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7701
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7703
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7705
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7707
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7709
  ret void, !dbg !7711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7714, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata i32 0, metadata !7715, metadata !DIExpression()), !dbg !7716
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7717
  %3 = load i32, i32* %2, align 4, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %3, metadata !7715, metadata !DIExpression()), !dbg !7716
  %4 = shl nuw i32 1, %0, !dbg !7718
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !7719
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !7720
  ret void, !dbg !7721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7724, metadata !DIExpression()), !dbg !7725
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7726
  %3 = or i32 %2, %0, !dbg !7726
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7726
  ret void, !dbg !7727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7730, metadata !DIExpression()), !dbg !7731
  %2 = icmp slt i32 %0, 32, !dbg !7732
  br i1 %2, label %3, label %5, !dbg !7734

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7735
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !7737
  br label %5, !dbg !7738

5:                                                ; preds = %1, %3
  ret void, !dbg !7739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7742, metadata !DIExpression()), !dbg !7743
  %2 = xor i32 %0, -1, !dbg !7744
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7744
  %4 = and i32 %3, %2, !dbg !7744
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7744
  ret void, !dbg !7745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7750, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 %1, metadata !7751, metadata !DIExpression()), !dbg !7752
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7753

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7754
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !7756
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !7757
  br label %11, !dbg !7758

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7759
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !7760
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !7761
  br label %11, !dbg !7762

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7763
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !7764
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !7765
  br label %11, !dbg !7766

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7767
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !7768
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !7769
  br label %11, !dbg !7770

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7774, metadata !DIExpression()), !dbg !7775
  %2 = xor i32 %0, -1, !dbg !7776
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7776
  %4 = and i32 %3, %2, !dbg !7776
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7776
  ret void, !dbg !7777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7780, metadata !DIExpression()), !dbg !7781
  %2 = xor i32 %0, -1, !dbg !7782
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7782
  %4 = and i32 %3, %2, !dbg !7782
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7782
  ret void, !dbg !7783
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7786, metadata !DIExpression()), !dbg !7787
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7788
  %3 = or i32 %2, %0, !dbg !7788
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7788
  ret void, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7792, metadata !DIExpression()), !dbg !7793
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7794
  %3 = or i32 %2, %0, !dbg !7794
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7794
  ret void, !dbg !7795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !7796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7800, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7801, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata i8* %2, metadata !7802, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !7803, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7805, metadata !DIExpression()), !dbg !7806
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7807
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7807
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7809
  br i1 %6, label %7, label %9, !dbg !7810

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7811
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7812
  store i8* %2, i8** %8, align 4, !dbg !7813
  br label %9, !dbg !7814

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7806
  ret i32 %10, !dbg !7815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7818, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !7819, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7820, metadata !DIExpression()), !dbg !7821
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7822
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7823
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7824
  store i8* null, i8** %3, align 4, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7827 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7829, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i8* %1, metadata !7830, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i8* %1, metadata !7831, metadata !DIExpression()), !dbg !7834
  %3 = bitcast i8* %1 to i32*, !dbg !7835
  %4 = load i32, i32* %3, align 4, !dbg !7835
  %5 = add i32 %4, -169, !dbg !7835
  %6 = icmp ult i32 %5, -121, !dbg !7835
  br i1 %6, label %15, label %7, !dbg !7837

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7838
  %9 = inttoptr i32 %8 to i32*, !dbg !7839
  call void @llvm.dbg.value(metadata i32* %9, metadata !7832, metadata !DIExpression()), !dbg !7834
  %10 = load volatile i32, i32* %9, align 4, !dbg !7840
  call void @llvm.dbg.value(metadata i32 %10, metadata !7833, metadata !DIExpression()), !dbg !7834
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7841
  %12 = bitcast i8* %11 to i32*, !dbg !7841
  %13 = load i32, i32* %12, align 4, !dbg !7841
  %14 = or i32 %13, %10, !dbg !7842
  call void @llvm.dbg.value(metadata i32 %14, metadata !7833, metadata !DIExpression()), !dbg !7834
  store volatile i32 %14, i32* %9, align 4, !dbg !7843
  br label %15, !dbg !7844

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7834
  ret i32 %16, !dbg !7845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7848, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %1, metadata !7849, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i8* %1, metadata !7850, metadata !DIExpression()), !dbg !7853
  %3 = bitcast i8* %1 to i32*, !dbg !7854
  %4 = load i32, i32* %3, align 4, !dbg !7854
  %5 = add i32 %4, -169, !dbg !7854
  %6 = icmp ult i32 %5, -121, !dbg !7854
  br i1 %6, label %16, label %7, !dbg !7856

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7857
  %9 = inttoptr i32 %8 to i32*, !dbg !7858
  call void @llvm.dbg.value(metadata i32* %9, metadata !7851, metadata !DIExpression()), !dbg !7853
  %10 = load volatile i32, i32* %9, align 4, !dbg !7859
  call void @llvm.dbg.value(metadata i32 %10, metadata !7852, metadata !DIExpression()), !dbg !7853
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7860
  %12 = bitcast i8* %11 to i32*, !dbg !7860
  %13 = load i32, i32* %12, align 4, !dbg !7860
  %14 = xor i32 %13, -1, !dbg !7861
  %15 = and i32 %10, %14, !dbg !7862
  call void @llvm.dbg.value(metadata i32 %15, metadata !7852, metadata !DIExpression()), !dbg !7853
  store volatile i32 %15, i32* %9, align 4, !dbg !7863
  br label %16, !dbg !7864

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7853
  ret i32 %17, !dbg !7865
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !7866 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7868, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i8* %1, metadata !7869, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i32* %2, metadata !7870, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i8* %1, metadata !7871, metadata !DIExpression()), !dbg !7876
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %4, metadata !7872, metadata !DIExpression()), !dbg !7876
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #27, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %5, metadata !7873, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i32 %5, metadata !7874, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i32 %4, metadata !7875, metadata !DIExpression()), !dbg !7876
  %6 = bitcast i8* %1 to i32*, !dbg !7879
  %7 = load i32, i32* %6, align 4, !dbg !7879
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !7880

8:                                                ; preds = %3
  br label %18, !dbg !7881

9:                                                ; preds = %3
  br label %18, !dbg !7883

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7884
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #27, !dbg !7885
  br label %18, !dbg !7886

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #26, !dbg !7887
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #27, !dbg !7888
  br label %18, !dbg !7889

16:                                               ; preds = %3
  br label %18, !dbg !7890

17:                                               ; preds = %3
  br label %18, !dbg !7891

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !7892
  br label %20, !dbg !7893

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !7876
  ret i32 %21, !dbg !7893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !7894 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7896, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i8* %1, metadata !7897, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i8* %2, metadata !7898, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i8* %1, metadata !7899, metadata !DIExpression()), !dbg !7904
  %4 = bitcast i8* %1 to i32*, !dbg !7905
  %5 = load i32, i32* %4, align 4, !dbg !7905
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !7906
  call void @llvm.dbg.value(metadata i32 %6, metadata !7903, metadata !DIExpression()), !dbg !7904
  %7 = icmp slt i32 %6, 0, !dbg !7907
  br i1 %7, label %22, label %8, !dbg !7909

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7899, metadata !DIExpression()), !dbg !7904
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7910
  %10 = bitcast i8* %9 to i32*, !dbg !7910
  %11 = load i32, i32* %10, align 4, !dbg !7910
  %12 = lshr i32 %11, 16, !dbg !7910
  %13 = and i32 %12, 7, !dbg !7910
  %14 = lshr i32 %11, 8, !dbg !7911
  %15 = and i32 %14, 31, !dbg !7911
  %16 = shl i32 %13, %15, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %16, metadata !7902, metadata !DIExpression()), !dbg !7904
  %17 = and i32 %11, 255, !dbg !7913
  %18 = or i32 %17, 1073887232, !dbg !7914
  %19 = inttoptr i32 %18 to i32*, !dbg !7915
  call void @llvm.dbg.value(metadata i32* %19, metadata !7900, metadata !DIExpression()), !dbg !7904
  %20 = load volatile i32, i32* %19, align 4, !dbg !7916
  call void @llvm.dbg.value(metadata i32 %20, metadata !7901, metadata !DIExpression()), !dbg !7904
  %21 = or i32 %16, %20, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %21, metadata !7901, metadata !DIExpression()), !dbg !7904
  store volatile i32 %21, i32* %19, align 4, !dbg !7918
  br label %22, !dbg !7919

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !7904
  ret i32 %23, !dbg !7920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !7921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 0, metadata !7926, metadata !DIExpression()), !dbg !7927
  %2 = add i32 %0, -1, !dbg !7928
  %3 = icmp ult i32 %2, 6, !dbg !7928
  br i1 %3, label %4, label %7, !dbg !7928

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !7928
  %6 = load i32, i32* %5, align 4, !dbg !7928
  call void @llvm.dbg.value(metadata i32 %6, metadata !7926, metadata !DIExpression()), !dbg !7927
  br label %7, !dbg !7929

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !7927
  ret i32 %8, !dbg !7930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #11 !dbg !7931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7935, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i32 2, metadata !7936, metadata !DIExpression()), !dbg !7937
  %2 = lshr i32 %0, 1, !dbg !7938
  ret i32 %2, !dbg !7939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !7940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7944, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 8, metadata !7945, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 84, metadata !7946, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 %1, metadata !7947, metadata !DIExpression()), !dbg !7948
  %3 = mul i32 %0, 84, !dbg !7949
  %4 = shl nsw i32 %1, 3, !dbg !7950
  %5 = udiv i32 %3, %4, !dbg !7951
  ret i32 %5, !dbg !7952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7953 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7955, metadata !DIExpression()), !dbg !7958
  tail call void @config_enable_default_clocks() #26, !dbg !7959
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !7960
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !7960
  %4 = lshr i32 %3, 4, !dbg !7960
  %5 = and i32 %4, 15, !dbg !7960
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7960
  %7 = load i8, i8* %6, align 1, !dbg !7960
  %8 = zext i8 %7 to i32, !dbg !7960
  %9 = lshr i32 %2, %8, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %9, metadata !7956, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !7957, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7958
  %10 = icmp ult i32 %9, 84000000, !dbg !7961
  br i1 %10, label %11, label %13, !dbg !7963

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !7964
  br label %13, !dbg !7966

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !7967
  tail call fastcc void @set_up_plls() #27, !dbg !7968
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !7969
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #27, !dbg !7972
  br label %14, !dbg !7973

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !7974
  %16 = icmp eq i32 %15, 8, !dbg !7975
  br i1 %16, label %17, label %14, !dbg !7973, !llvm.loop !7976

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !7978
  br i1 %18, label %19, label %21, !dbg !7980

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !7981
  br label %21, !dbg !7983

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !7984
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !7985
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !7986
  ret i32 0, !dbg !7987
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !7988 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7990
  %2 = and i32 %1, 240, !dbg !7990
  ret i32 %2, !dbg !7991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !7992 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !7993
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !7998
  br label %1, !dbg !7999

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !8000
  %3 = icmp eq i32 %2, 1, !dbg !8001
  br i1 %3, label %4, label %1, !dbg !7999, !llvm.loop !8002

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !8004
  br label %5, !dbg !8007

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !8008
  %7 = icmp eq i32 %6, 1, !dbg !8009
  br i1 %7, label %8, label %5, !dbg !8007, !llvm.loop !8010

8:                                                ; preds = %5
  ret void, !dbg !8012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8013 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8014
  %2 = icmp eq i32 %1, 8, !dbg !8016
  br i1 %2, label %3, label %4, !dbg !8017

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !8018
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !8020
  br label %4, !dbg !8021

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !8022
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8023
  %6 = and i32 %5, -196609, !dbg !8023
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8023
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8024
  %8 = and i32 %7, -251658241, !dbg !8024
  %9 = or i32 %8, 134217728, !dbg !8024
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8024
  tail call void @config_pll_sysclock() #26, !dbg !8025
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !8026
  br label %10, !dbg !8027

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !8028
  %12 = icmp eq i32 %11, 1, !dbg !8029
  br i1 %12, label %13, label %10, !dbg !8027, !llvm.loop !8030

13:                                               ; preds = %10
  ret void, !dbg !8032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8033 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8035, metadata !DIExpression()), !dbg !8036
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8037
  %2 = and i32 %1, -241, !dbg !8037
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8037
  ret void, !dbg !8038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8041, metadata !DIExpression()), !dbg !8042
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8043
  %3 = and i32 %2, -4, !dbg !8043
  %4 = or i32 %3, %0, !dbg !8043
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8043
  ret void, !dbg !8044
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8045 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8046
  %2 = and i32 %1, 12, !dbg !8046
  ret i32 %2, !dbg !8047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8048 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8050, metadata !DIExpression()), !dbg !8051
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8052
  %2 = and i32 %1, -7169, !dbg !8052
  %3 = or i32 %2, 4096, !dbg !8052
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8052
  ret void, !dbg !8053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8054 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8056, metadata !DIExpression()), !dbg !8057
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8058
  %2 = and i32 %1, -57345, !dbg !8058
  %3 = or i32 %2, 32768, !dbg !8058
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8058
  ret void, !dbg !8059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8060 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8061
  %2 = icmp eq i32 %1, 1, !dbg !8063
  br i1 %2, label %7, label %3, !dbg !8064

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !8065
  br label %4, !dbg !8067

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !8068
  %6 = icmp eq i32 %5, 1, !dbg !8069
  br i1 %6, label %7, label %4, !dbg !8067, !llvm.loop !8070

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #27, !dbg !8072
  br label %8, !dbg !8073

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !8074
  %10 = icmp eq i32 %9, 0, !dbg !8075
  br i1 %10, label %11, label %8, !dbg !8073, !llvm.loop !8076

11:                                               ; preds = %8
  ret void, !dbg !8078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8079 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8080
  %2 = and i32 %1, -16777217, !dbg !8080
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8083
  %2 = or i32 %1, 16777216, !dbg !8083
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8083
  ret void, !dbg !8084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8085 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8086
  %2 = lshr i32 %1, 25, !dbg !8087
  %3 = and i32 %2, 1, !dbg !8087
  ret i32 %3, !dbg !8088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8090
  %2 = lshr i32 %1, 1, !dbg !8091
  %3 = and i32 %2, 1, !dbg !8091
  ret i32 %3, !dbg !8092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8093 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8094
  %2 = or i32 %1, 1, !dbg !8094
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8094
  ret void, !dbg !8095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8096 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8097
  %2 = and i32 %1, -262145, !dbg !8097
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8097
  ret void, !dbg !8098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8100
  %2 = or i32 %1, 65536, !dbg !8100
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8100
  ret void, !dbg !8101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8102 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8103
  %2 = lshr i32 %1, 17, !dbg !8104
  %3 = and i32 %2, 1, !dbg !8104
  ret i32 %3, !dbg !8105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8106 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8107
  %2 = or i32 %1, 1, !dbg !8107
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8107
  ret void, !dbg !8108
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8109 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8110
  %2 = lshr i32 %1, 1, !dbg !8111
  %3 = and i32 %2, 1, !dbg !8111
  ret i32 %3, !dbg !8112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8113 {
  ret i32 16000000, !dbg !8115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8119 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !8120
  ret void, !dbg !8121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8122 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8126, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i32 8, metadata !8127, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i32 84, metadata !8128, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata i32 0, metadata !8129, metadata !DIExpression()), !dbg !8130
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8131
  %2 = and i32 %1, -4227072, !dbg !8131
  %3 = or i32 %2, 4199688, !dbg !8131
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8131
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8132
  %5 = and i32 %4, -196609, !dbg !8132
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8132
  ret void, !dbg !8133
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8134 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !8135
  ret void, !dbg !8136
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8137 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8140, metadata !DIExpression()), !dbg !8142
  %2 = bitcast i32* %1 to i8*, !dbg !8143
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8141, metadata !DIExpression()), !dbg !8144
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8145
  %4 = or i32 %3, 268435456, !dbg !8145
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8145
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8146
  %6 = and i32 %5, 268435456, !dbg !8146
  store volatile i32 %6, i32* %1, align 4, !dbg !8147
  %7 = load volatile i32, i32* %1, align 4, !dbg !8148
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8149
  ret void, !dbg !8149
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8152, metadata !DIExpression()), !dbg !8153
  %2 = tail call fastcc zeroext i1 @device_is_ready() #27, !dbg !8154
  br i1 %2, label %3, label %4, !dbg !8156

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !8157
  br label %4, !dbg !8158

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8153
  ret i32 %5, !dbg !8159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8160 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8165, metadata !DIExpression()), !dbg !8166
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8167, !srcloc !8169
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #27, !dbg !8170
  ret i1 %1, !dbg !8171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8172 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8173
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8174
  ret void, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8178, metadata !DIExpression()), !dbg !8179
  %2 = icmp eq i32 %0, 10, !dbg !8180
  br i1 %2, label %3, label %4, !dbg !8182

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8183
  br label %4, !dbg !8185

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8186
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !8187
  ret i32 %0, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8189 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i8 %0, metadata !8193, metadata !DIExpression()), !dbg !8194
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8195, !srcloc !8197
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !8198
  ret void, !dbg !8199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8200 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8202, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.value(metadata i8 %0, metadata !8203, metadata !DIExpression()), !dbg !8205
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8206
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8204, metadata !DIExpression()), !dbg !8205
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8207
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8207
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #26, !dbg !8208
  ret void, !dbg !8209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8210 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8212, metadata !DIExpression()), !dbg !8213
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8214
  ret i1 %1, !dbg !8215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !8216 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8220, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8221, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8222, metadata !DIExpression()), !dbg !8223
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !8224
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !8225
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8226
  tail call fastcc void @console_input_init() #27, !dbg !8227
  ret void, !dbg !8228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !8229 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8232
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8233
  tail call fastcc void @uart_irq_tx_disable() #27, !dbg !8234
  tail call fastcc void @uart_irq_callback_set() #27, !dbg !8235
  %2 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8236
  %3 = icmp eq i32 %2, 0, !dbg !8237
  br i1 %3, label %8, label %4, !dbg !8237

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !8231, metadata !DIExpression(DW_OP_deref)), !dbg !8238
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #27, !dbg !8239
  %6 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8236
  %7 = icmp eq i32 %6, 0, !dbg !8237
  br i1 %7, label %8, label %4, !dbg !8237, !llvm.loop !8241

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #27, !dbg !8243
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #25, !dbg !8244
  ret void, !dbg !8244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !8245 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8247, metadata !DIExpression()), !dbg !8248
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8249, !srcloc !8251
  tail call fastcc void @z_impl_uart_irq_rx_disable() #27, !dbg !8252
  ret void, !dbg !8253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !8254 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8256, metadata !DIExpression()), !dbg !8257
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8258, !srcloc !8260
  tail call fastcc void @z_impl_uart_irq_tx_disable() #27, !dbg !8261
  ret void, !dbg !8262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !8263 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8268, metadata !DIExpression()), !dbg !8269
  tail call fastcc void @uart_irq_callback_user_data_set() #27, !dbg !8270
  ret void, !dbg !8271
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !8272 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8274, metadata !DIExpression()), !dbg !8276
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8277
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !8278
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8278
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8280
  br i1 %4, label %7, label %5, !dbg !8281

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8282
  br label %7, !dbg !8283

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8276
  ret i32 %8, !dbg !8284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !8285 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8287, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata i8* %0, metadata !8288, metadata !DIExpression()), !dbg !8291
  call void @llvm.dbg.value(metadata i32 1, metadata !8289, metadata !DIExpression()), !dbg !8291
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8292
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8290, metadata !DIExpression()), !dbg !8291
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !8293
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !8293
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !8295
  br i1 %5, label %8, label %6, !dbg !8296

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8* noundef %0, i32 noundef 1) #26, !dbg !8297
  br label %8, !dbg !8298

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !8291
  ret i32 %9, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !8300 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8302, metadata !DIExpression()), !dbg !8303
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8304, !srcloc !8306
  tail call fastcc void @z_impl_uart_irq_rx_enable() #27, !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !8309 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8311, metadata !DIExpression()), !dbg !8313
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8314
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8312, metadata !DIExpression()), !dbg !8313
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !8315
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8315
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8317
  br i1 %4, label %6, label %5, !dbg !8318

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8319
  br label %6, !dbg !8321

6:                                                ; preds = %5, %0
  ret void, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1091 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1093, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i8* %1, metadata !1094, metadata !DIExpression()), !dbg !8323
  %4 = call fastcc i32 @uart_irq_update() #27, !dbg !8324
  %5 = icmp eq i32 %4, 0, !dbg !8324
  br i1 %5, label %89, label %6, !dbg !8325

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #27, !dbg !8326
  %8 = icmp eq i32 %7, 0, !dbg !8325
  br i1 %8, label %89, label %9, !dbg !8327

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8328
  %10 = call fastcc i32 @uart_irq_rx_ready() #27, !dbg !8329
  %11 = icmp eq i32 %10, 0, !dbg !8329
  br i1 %11, label %86, label %12, !dbg !8331, !llvm.loop !8332

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1095, metadata !DIExpression(DW_OP_deref)), !dbg !8334
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #27, !dbg !8335
  call void @llvm.dbg.value(metadata i32 %13, metadata !1097, metadata !DIExpression()), !dbg !8334
  %14 = icmp slt i32 %13, 0, !dbg !8336
  br i1 %14, label %85, label %15, !dbg !8338

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8339
  %17 = icmp eq %struct.console_input* %16, null, !dbg !8339
  br i1 %17, label %18, label %23, !dbg !8340

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !8341
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !8341
  %21 = call fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %20) #27, !dbg !8341
  call void @llvm.dbg.value(metadata i8* %21, metadata !1098, metadata !DIExpression()), !dbg !8342
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8343
  %22 = icmp eq i8* %21, null, !dbg !8344
  br i1 %22, label %85, label %23, !dbg !8346

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #27, !dbg !8347
  br i1 %24, label %25, label %29, !dbg !8349

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !8350
  call void @llvm.dbg.value(metadata i8 %26, metadata !1095, metadata !DIExpression()), !dbg !8334
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8352
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !8352
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #27, !dbg !8353
  br label %86, !dbg !8354, !llvm.loop !8332

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #27, !dbg !8355
  %31 = load i8, i8* %3, align 1, !dbg !8334
  call void @llvm.dbg.value(metadata i8 %31, metadata !1095, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8 %31, metadata !1095, metadata !DIExpression()), !dbg !8334
  br i1 %30, label %32, label %35, !dbg !8357

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !8358
  br i1 %33, label %34, label %86, !dbg !8361, !llvm.loop !8332

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #27, !dbg !8362
  call fastcc void @atomic_set_bit(i32 noundef 2) #27, !dbg !8364
  br label %86, !dbg !8365, !llvm.loop !8332

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !8366
  %37 = call fastcc i32 @isprint(i32 noundef %36) #27, !dbg !8368
  %38 = icmp eq i32 %37, 0, !dbg !8368
  br i1 %38, label %39, label %74, !dbg !8369

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !1095, metadata !DIExpression()), !dbg !8334
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !8370, !llvm.loop !8332

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !8372
  %42 = icmp eq i8 %41, 0, !dbg !8375
  br i1 %42, label %86, label %43, !dbg !8376, !llvm.loop !8332

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8377
  %45 = add i8 %41, -1, !dbg !8379
  store i8 %45, i8* @cur, align 1, !dbg !8379
  %46 = zext i8 %45 to i32, !dbg !8377
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !8377
  %48 = load i8, i8* @end, align 1, !dbg !8380
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #27, !dbg !8381
  br label %86, !dbg !8382, !llvm.loop !8332

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #27, !dbg !8383
  br label %86, !dbg !8384, !llvm.loop !8332

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8385
  %52 = load i8, i8* @cur, align 1, !dbg !8386
  %53 = zext i8 %52 to i32, !dbg !8386
  %54 = load i8, i8* @end, align 1, !dbg !8387
  %55 = zext i8 %54 to i32, !dbg !8387
  %56 = add nuw nsw i32 %55, %53, !dbg !8388
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !8385
  store i8 0, i8* %57, align 1, !dbg !8389
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !8390
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #27, !dbg !8391
  store i8 0, i8* @cur, align 1, !dbg !8392
  store i8 0, i8* @end, align 1, !dbg !8393
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !8394
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !8394
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !8394
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #26, !dbg !8394
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8396
  br label %86, !dbg !8397, !llvm.loop !8332

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !8398
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !8398
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !8400
  br i1 %66, label %86, label %67, !dbg !8400, !llvm.loop !8332

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8401
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !8401
  %70 = load i8, i8* @cur, align 1, !dbg !8403
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #26, !dbg !8404
  %72 = load i8, i8* @cur, align 1, !dbg !8405
  %73 = add i8 %72, %71, !dbg !8405
  store i8 %73, i8* @cur, align 1, !dbg !8405
  br label %86, !dbg !8406, !llvm.loop !8332

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !8407
  %76 = zext i8 %75 to i32, !dbg !8407
  %77 = load i8, i8* @end, align 1, !dbg !8409
  %78 = zext i8 %77 to i32, !dbg !8409
  %79 = add nuw nsw i32 %78, %76, !dbg !8410
  %80 = icmp ult i32 %79, 127, !dbg !8411
  br i1 %80, label %81, label %86, !dbg !8412

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !8413
  %83 = add i8 %75, 1, !dbg !8415
  store i8 %83, i8* @cur, align 1, !dbg !8415
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !8413
  call void @llvm.dbg.value(metadata i8 %31, metadata !1095, metadata !DIExpression()), !dbg !8334
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #27, !dbg !8416
  br label %86, !dbg !8417

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8333
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !8333
  %87 = call fastcc i32 @uart_irq_update() #27, !dbg !8324
  %88 = icmp eq i32 %87, 0, !dbg !8324
  br i1 %88, label %89, label %6, !dbg !8325

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !8418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !8419 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8421, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !8422, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.value(metadata i8* null, metadata !8423, metadata !DIExpression()), !dbg !8425
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8426
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8424, metadata !DIExpression()), !dbg !8425
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !8427
  br i1 %2, label %8, label %3, !dbg !8429

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !8430
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !8430
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !8431
  br i1 %6, label %8, label %7, !dbg !8432

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_44, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #26, !dbg !8433
  br label %8, !dbg !8435

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !8436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !8437 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8439, metadata !DIExpression()), !dbg !8440
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8441, !srcloc !8443
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #27, !dbg !8444
  ret i32 %1, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8448, metadata !DIExpression()), !dbg !8449
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8450, !srcloc !8452
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #27, !dbg !8453
  ret i32 %1, !dbg !8454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !8455 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8459, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i8* %0, metadata !8460, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 1, metadata !8461, metadata !DIExpression()), !dbg !8463
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #27, !dbg !8464
  call void @llvm.dbg.value(metadata i32 %2, metadata !8462, metadata !DIExpression()), !dbg !8463
  %3 = icmp slt i32 %2, 0, !dbg !8465
  br i1 %3, label %4, label %5, !dbg !8467

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #27, !dbg !8468
  br label %5, !dbg !8470

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !8463
  ret i32 %6, !dbg !8471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.48(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !8472 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8482, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !8481, metadata !DIExpression()), !dbg !8483
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8484, !srcloc !8486
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #26, !dbg !8487
  ret i8* %2, !dbg !8488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !8489 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8495, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i32 %0, metadata !8496, metadata !DIExpression()), !dbg !8499
  %2 = tail call fastcc i32 @atomic_get() #27, !dbg !8500
  call void @llvm.dbg.value(metadata i32 %2, metadata !8497, metadata !DIExpression()), !dbg !8499
  %3 = and i32 %0, 31, !dbg !8501
  %4 = shl nuw i32 1, %3, !dbg !8502
  %5 = and i32 %2, %4, !dbg !8502
  %6 = icmp ne i32 %5, 0, !dbg !8502
  ret i1 %6, !dbg !8503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !8504 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8508, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.value(metadata i8* %1, metadata !8509, metadata !DIExpression()), !dbg !8511
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #27, !dbg !8512
  br i1 %3, label %4, label %11, !dbg !8514

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !8515
  %6 = tail call fastcc i32 @isdigit.50(i32 noundef %5) #27, !dbg !8518
  %7 = icmp eq i32 %6, 0, !dbg !8518
  br i1 %7, label %8, label %9, !dbg !8519

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !8520
  br label %34, !dbg !8522

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #27, !dbg !8523
  %10 = add nsw i32 %5, -48, !dbg !8524
  store i32 %10, i32* @ansi_val, align 4, !dbg !8525
  store i32 0, i32* @ansi_val_2, align 4, !dbg !8526
  br label %81, !dbg !8527

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #27, !dbg !8528
  br i1 %12, label %13, label %34, !dbg !8530

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !8531
  %15 = tail call fastcc i32 @isdigit.50(i32 noundef %14) #27, !dbg !8534
  %16 = icmp eq i32 %15, 0, !dbg !8534
  br i1 %16, label %29, label %17, !dbg !8535

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #27, !dbg !8536
  br i1 %18, label %19, label %24, !dbg !8539

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !8540
  %21 = mul i32 %20, 10, !dbg !8540
  %22 = add nsw i32 %14, -48, !dbg !8542
  %23 = add i32 %22, %21, !dbg !8543
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !8543
  br label %81, !dbg !8544

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !8545
  %26 = mul i32 %25, 10, !dbg !8545
  %27 = add nsw i32 %14, -48, !dbg !8547
  %28 = add i32 %27, %26, !dbg !8548
  store i32 %28, i32* @ansi_val, align 4, !dbg !8548
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !8549
  br i1 %30, label %31, label %33, !dbg !8551

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #27, !dbg !8552
  br i1 %32, label %33, label %81, !dbg !8553

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #27, !dbg !8554
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #27, !dbg !8555
  br label %34, !dbg !8556

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !8510), !dbg !8557
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !8558

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !8559
  %37 = load i8, i8* @cur, align 1, !dbg !8562
  %38 = zext i8 %37 to i32, !dbg !8562
  %39 = icmp ugt i32 %36, %38, !dbg !8563
  br i1 %39, label %80, label %40, !dbg !8564

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !8565
  %42 = trunc i32 %36 to i8, !dbg !8565
  %43 = add i8 %41, %42, !dbg !8565
  store i8 %43, i8* @end, align 1, !dbg !8565
  %44 = sub i8 %37, %42, !dbg !8566
  store i8 %44, i8* @cur, align 1, !dbg !8566
  tail call fastcc void @cursor_backward(i32 noundef %36) #27, !dbg !8567
  br label %80, !dbg !8568

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !8569
  %47 = load i8, i8* @end, align 1, !dbg !8571
  %48 = zext i8 %47 to i32, !dbg !8571
  %49 = icmp ugt i32 %46, %48, !dbg !8572
  br i1 %49, label %80, label %50, !dbg !8573

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !8574
  %52 = sub i8 %47, %51, !dbg !8574
  store i8 %52, i8* @end, align 1, !dbg !8574
  %53 = load i8, i8* @cur, align 1, !dbg !8575
  %54 = add i8 %53, %51, !dbg !8575
  store i8 %54, i8* @cur, align 1, !dbg !8575
  tail call fastcc void @cursor_forward(i32 noundef %46) #27, !dbg !8576
  br label %80, !dbg !8577

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !8578
  %57 = icmp eq i8 %56, 0, !dbg !8578
  br i1 %57, label %80, label %58, !dbg !8580

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !8581
  tail call fastcc void @cursor_backward(i32 noundef %59) #27, !dbg !8582
  %60 = load i8, i8* @cur, align 1, !dbg !8583
  %61 = load i8, i8* @end, align 1, !dbg !8584
  %62 = add i8 %61, %60, !dbg !8584
  store i8 %62, i8* @end, align 1, !dbg !8584
  store i8 0, i8* @cur, align 1, !dbg !8585
  br label %80, !dbg !8586

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !8587
  %65 = icmp eq i8 %64, 0, !dbg !8587
  br i1 %65, label %80, label %66, !dbg !8589

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !8590
  tail call fastcc void @cursor_forward(i32 noundef %67) #27, !dbg !8591
  %68 = load i8, i8* @end, align 1, !dbg !8592
  %69 = load i8, i8* @cur, align 1, !dbg !8593
  %70 = add i8 %69, %68, !dbg !8593
  store i8 %70, i8* @cur, align 1, !dbg !8593
  store i8 0, i8* @end, align 1, !dbg !8594
  br label %80, !dbg !8595

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !8596
  %73 = icmp eq i8 %72, 0, !dbg !8596
  br i1 %73, label %80, label %74, !dbg !8598

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #27, !dbg !8599
  %75 = load i8, i8* @cur, align 1, !dbg !8600
  %76 = zext i8 %75 to i32, !dbg !8601
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !8601
  %78 = load i8, i8* @end, align 1, !dbg !8602
  %79 = add i8 %78, -1, !dbg !8602
  store i8 %79, i8* @end, align 1, !dbg !8602
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #27, !dbg !8603
  br label %80, !dbg !8604

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #27, !dbg !8605
  br label %81, !dbg !8606

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !8606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8607 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8612, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.value(metadata i32 %0, metadata !8613, metadata !DIExpression()), !dbg !8616
  %2 = and i32 %0, 31, !dbg !8617
  %3 = shl nuw i32 1, %2, !dbg !8617
  call void @llvm.dbg.value(metadata i32 %3, metadata !8614, metadata !DIExpression()), !dbg !8616
  %4 = xor i32 %3, -1, !dbg !8618
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8619
  call void @llvm.dbg.value(metadata i32 %5, metadata !8615, metadata !DIExpression()), !dbg !8616
  %6 = and i32 %5, %3, !dbg !8620
  %7 = icmp ne i32 %6, 0, !dbg !8621
  ret i1 %7, !dbg !8622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !8623 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8627, metadata !DIExpression()), !dbg !8630
  call void @llvm.dbg.value(metadata i32 %0, metadata !8628, metadata !DIExpression()), !dbg !8630
  %2 = and i32 %0, 31, !dbg !8631
  %3 = shl nuw i32 1, %2, !dbg !8631
  call void @llvm.dbg.value(metadata i32 %3, metadata !8629, metadata !DIExpression()), !dbg !8630
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #27, !dbg !8632
  ret void, !dbg !8633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !8634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8636, metadata !DIExpression()), !dbg !8637
  %2 = add i32 %0, -32, !dbg !8638
  %3 = icmp ult i32 %2, 95, !dbg !8638
  %4 = zext i1 %3 to i32, !dbg !8638
  ret i32 %4, !dbg !8639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8644, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %1, metadata !8645, metadata !DIExpression()), !dbg !8646
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8647
  %3 = icmp eq i8 %1, 0, !dbg !8648
  br i1 %3, label %4, label %5, !dbg !8650

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8651
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #27, !dbg !8653
  br label %14, !dbg !8654

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #27, !dbg !8655
  call void @llvm.dbg.value(metadata i8 %1, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %0, metadata !8644, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8 %1, metadata !8645, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8646
  br label %6, !dbg !8656

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %8, metadata !8644, metadata !DIExpression()), !dbg !8646
  %9 = add i8 %7, -1, !dbg !8657
  call void @llvm.dbg.value(metadata i8 %9, metadata !8645, metadata !DIExpression()), !dbg !8646
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8658
  %11 = load i8, i8* %10, align 1, !dbg !8660
  store i8 %11, i8* %8, align 1, !dbg !8661
  call void @llvm.dbg.value(metadata i8* %10, metadata !8644, metadata !DIExpression()), !dbg !8646
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #27, !dbg !8662
  call void @llvm.dbg.value(metadata i8 %9, metadata !8645, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8646
  %12 = icmp eq i8 %9, 0, !dbg !8663
  br i1 %12, label %13, label %6, !dbg !8656, !llvm.loop !8664

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #27, !dbg !8666
  tail call fastcc void @cursor_restore() #27, !dbg !8667
  br label %14, !dbg !8668

14:                                               ; preds = %13, %4
  ret void, !dbg !8668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !8669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %1, metadata !8674, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %2, metadata !8675, metadata !DIExpression()), !dbg !8677
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #27, !dbg !8678
  %4 = icmp eq i8 %2, 0, !dbg !8679
  br i1 %4, label %5, label %6, !dbg !8681

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !8682
  br label %17, !dbg !8684

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !8685
  call void @llvm.dbg.value(metadata i8 %7, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  store i8 %1, i8* %0, align 1, !dbg !8686
  tail call fastcc void @cursor_save() #27, !dbg !8687
  call void @llvm.dbg.value(metadata i8 %7, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %2, metadata !8675, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %0, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %2, metadata !8675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8677
  br label %8, !dbg !8688

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8677
  call void @llvm.dbg.value(metadata i8 %10, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %11, metadata !8675, metadata !DIExpression()), !dbg !8677
  %13 = add i8 %11, -1, !dbg !8689
  call void @llvm.dbg.value(metadata i8 %13, metadata !8675, metadata !DIExpression()), !dbg !8677
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #27, !dbg !8690
  %14 = load i8, i8* %12, align 1, !dbg !8692
  call void @llvm.dbg.value(metadata i8 %14, metadata !8674, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %12, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  store i8 %10, i8* %12, align 1, !dbg !8693
  call void @llvm.dbg.value(metadata i8 %14, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i8* %12, metadata !8673, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8677
  call void @llvm.dbg.value(metadata i8 %13, metadata !8675, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8677
  %15 = icmp eq i8 %13, 0, !dbg !8694
  br i1 %15, label %16, label %8, !dbg !8688, !llvm.loop !8695

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #27, !dbg !8697
  br label %17, !dbg !8698

17:                                               ; preds = %16, %5
  ret void, !dbg !8698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !8699 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.49, i32 0, i32 0)) #26, !dbg !8700
  ret void, !dbg !8701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !8702 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !8703
  ret void, !dbg !8704
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !8705 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8710, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 %0, metadata !8711, metadata !DIExpression()), !dbg !8712
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8713
  ret i32 %2, !dbg !8714
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !8715 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8717, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 %0, metadata !8718, metadata !DIExpression()), !dbg !8719
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !8720
  ret i32 %2, !dbg !8721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.50(i32 noundef %0) unnamed_addr #11 !dbg !8722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8724, metadata !DIExpression()), !dbg !8725
  %2 = add i32 %0, -48, !dbg !8726
  %3 = icmp ult i32 %2, 10, !dbg !8727
  %4 = zext i1 %3 to i32, !dbg !8727
  ret i32 %4, !dbg !8728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !8729 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8731, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 4, metadata !8732, metadata !DIExpression()), !dbg !8735
  call void @llvm.dbg.value(metadata i32 16, metadata !8733, metadata !DIExpression()), !dbg !8735
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #27, !dbg !8736
  call void @llvm.dbg.value(metadata i32 %1, metadata !8734, metadata !DIExpression()), !dbg !8735
  %2 = and i32 %1, 16, !dbg !8737
  %3 = icmp ne i32 %2, 0, !dbg !8738
  ret i1 %3, !dbg !8739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !8740 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8742, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i32 %0, metadata !8743, metadata !DIExpression()), !dbg !8745
  %2 = and i32 %0, 31, !dbg !8746
  %3 = shl nuw i32 1, %2, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %3, metadata !8744, metadata !DIExpression()), !dbg !8745
  %4 = xor i32 %3, -1, !dbg !8747
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #27, !dbg !8748
  ret void, !dbg !8749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !8750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8752, metadata !DIExpression()), !dbg !8753
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 noundef %0) #26, !dbg !8754
  ret void, !dbg !8755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !8756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8758, metadata !DIExpression()), !dbg !8759
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.51, i32 0, i32 0), i32 noundef %0) #26, !dbg !8760
  ret void, !dbg !8761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !8762 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !8766, metadata !DIExpression()), !dbg !8767
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !8768
  ret i32 %1, !dbg !8769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !8770 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8772, metadata !DIExpression()), !dbg !8774
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8775
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8773, metadata !DIExpression()), !dbg !8774
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !8776
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8776
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8778
  br i1 %4, label %7, label %5, !dbg !8779

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8780
  br label %7, !dbg !8781

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8774
  ret i32 %8, !dbg !8782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !8783 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8785, metadata !DIExpression()), !dbg !8787
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8788
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8786, metadata !DIExpression()), !dbg !8787
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !8789
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !8789
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !8791
  br i1 %4, label %7, label %5, !dbg !8792

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8793
  br label %7, !dbg !8794

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !8787
  ret i32 %8, !dbg !8795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !8796 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8798, metadata !DIExpression()), !dbg !8800
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8801
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8799, metadata !DIExpression()), !dbg !8800
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !8802
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8802
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8804
  br i1 %4, label %6, label %5, !dbg !8805

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8806
  br label %6, !dbg !8808

6:                                                ; preds = %5, %0
  ret void, !dbg !8809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !8810 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8812, metadata !DIExpression()), !dbg !8814
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8815
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !8813, metadata !DIExpression()), !dbg !8814
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !8816
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !8816
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !8818
  br i1 %4, label %6, label %5, !dbg !8819

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #26, !dbg !8820
  br label %6, !dbg !8822

6:                                                ; preds = %5, %0
  ret void, !dbg !8823
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8824 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8826, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i8 %1, metadata !8827, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i32 %2, metadata !8828, metadata !DIExpression()), !dbg !8831
  %5 = bitcast i32* %4 to i8*, !dbg !8832
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8832
  call void @llvm.dbg.value(metadata i32* %4, metadata !8830, metadata !DIExpression(DW_OP_deref)), !dbg !8831
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %6, metadata !8829, metadata !DIExpression()), !dbg !8831
  %7 = icmp eq i32 %6, 0, !dbg !8834
  br i1 %7, label %8, label %31, !dbg !8836

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8831
  %9 = and i32 %2, 131072, !dbg !8837
  %10 = icmp eq i32 %9, 0, !dbg !8839
  br i1 %10, label %28, label %11, !dbg !8840

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8841
  %13 = icmp eq i32 %12, 0, !dbg !8844
  br i1 %13, label %18, label %14, !dbg !8845

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8846
  %16 = shl nuw i32 1, %15, !dbg !8846
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !8848
  br label %25, !dbg !8849

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8850
  %20 = icmp eq i32 %19, 0, !dbg !8852
  %21 = zext i8 %1 to i32, !dbg !8831
  br i1 %20, label %25, label %22, !dbg !8853

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8854
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !8856
  br label %25, !dbg !8857

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8858
  %27 = load i32, i32* %4, align 4, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %30, metadata !8830, metadata !DIExpression()), !dbg !8831
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !8860
  br label %31, !dbg !8861

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8858
  %30 = load i32, i32* %4, align 4, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %30, metadata !8830, metadata !DIExpression()), !dbg !8831
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !8860
  call void @llvm.dbg.value(metadata i32 0, metadata !8829, metadata !DIExpression()), !dbg !8831
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8862
  ret i32 %6, !dbg !8862
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8863 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8867, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i32* %1, metadata !8868, metadata !DIExpression()), !dbg !8872
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8873
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8873
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8873
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8869, metadata !DIExpression()), !dbg !8872
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8874
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8874
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8874
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8871, metadata !DIExpression()), !dbg !8872
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !8875
  store i32 %9, i32* %1, align 4, !dbg !8876
  ret i32 0, !dbg !8877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8878 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8880, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %1, metadata !8881, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %2, metadata !8882, metadata !DIExpression()), !dbg !8886
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8887
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8887
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8887
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8883, metadata !DIExpression()), !dbg !8886
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8888
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8888
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8888
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8884, metadata !DIExpression()), !dbg !8886
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !8889
  call void @llvm.dbg.value(metadata i32 %10, metadata !8885, metadata !DIExpression()), !dbg !8886
  %11 = xor i32 %1, -1, !dbg !8890
  %12 = and i32 %10, %11, !dbg !8891
  %13 = and i32 %2, %1, !dbg !8892
  %14 = or i32 %12, %13, !dbg !8893
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !8894
  ret i32 0, !dbg !8895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8898, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 %1, metadata !8899, metadata !DIExpression()), !dbg !8902
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8903
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8903
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8903
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8900, metadata !DIExpression()), !dbg !8902
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8904
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8904
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8904
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8901, metadata !DIExpression()), !dbg !8902
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8905
  store volatile i32 %1, i32* %9, align 4, !dbg !8905
  ret i32 0, !dbg !8906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8909, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 %1, metadata !8910, metadata !DIExpression()), !dbg !8913
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8914
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8914
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8914
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8911, metadata !DIExpression()), !dbg !8913
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8915
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8915
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8915
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8912, metadata !DIExpression()), !dbg !8913
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !8916
  ret i32 0, !dbg !8917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8920, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %1, metadata !8921, metadata !DIExpression()), !dbg !8924
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8925
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8925
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8925
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8922, metadata !DIExpression()), !dbg !8924
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8926
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8926
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8926
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8923, metadata !DIExpression()), !dbg !8924
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8927
  %10 = load volatile i32, i32* %9, align 4, !dbg !8927
  %11 = xor i32 %10, %1, !dbg !8927
  store volatile i32 %11, i32* %9, align 4, !dbg !8927
  ret i32 0, !dbg !8928
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8931, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i8 %1, metadata !8932, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 %2, metadata !8933, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 %3, metadata !8934, metadata !DIExpression()), !dbg !8941
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8942
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8942
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8942
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8935, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i8* undef, metadata !8936, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 0, metadata !8938, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.value(metadata i32 0, metadata !8939, metadata !DIExpression()), !dbg !8941
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8943

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8944
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !8948
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8949
  %12 = load i32, i32* %11, align 4, !dbg !8949
  %13 = icmp eq i32 %10, %12, !dbg !8950
  br i1 %13, label %14, label %29, !dbg !8951

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8952
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8954
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8955
  br label %29, !dbg !8956

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8957
  %17 = load i8*, i8** %16, align 4, !dbg !8957
  call void @llvm.dbg.value(metadata i8* %17, metadata !8936, metadata !DIExpression()), !dbg !8941
  %18 = zext i8 %1 to i32, !dbg !8958
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8960
  %20 = icmp eq i32 %19, 0, !dbg !8961
  br i1 %20, label %21, label %29, !dbg !8962

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8963
  %23 = load i32, i32* %22, align 4, !dbg !8963
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !8964
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8965

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8938, metadata !DIExpression()), !dbg !8941
  br label %27, !dbg !8966

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8938, metadata !DIExpression()), !dbg !8941
  br label %27, !dbg !8968

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8938, metadata !DIExpression()), !dbg !8941
  br label %27, !dbg !8969

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8941
  call void @llvm.dbg.value(metadata i32 %28, metadata !8938, metadata !DIExpression()), !dbg !8941
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8970
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8971
  br label %29, !dbg !8971

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8941
  call void @llvm.dbg.value(metadata i32 %30, metadata !8939, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.label(metadata !8940), !dbg !8972
  ret i32 %30, !dbg !8973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8974 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8976, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8977, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i1 %2, metadata !8978, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8980
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8981
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8981
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8981
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8979, metadata !DIExpression()), !dbg !8980
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8982
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !8983
  ret i32 %8, !dbg !8984
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8985 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8991, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8992, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.value(metadata i1 %2, metadata !8993, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8994
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !8995
  br i1 %4, label %10, label %5, !dbg !8997

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8998
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #27, !dbg !9001
  %8 = or i1 %7, %2, !dbg !9002
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9002
  br i1 %2, label %11, label %13, !dbg !9002

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9003

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9004
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #27, !dbg !9007
  br label %13, !dbg !9008

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8994
  ret i32 %14, !dbg !9009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9010 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9014, metadata !DIExpression()), !dbg !9015
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9016
  %3 = icmp eq %struct._snode* %2, null, !dbg !9016
  ret i1 %3, !dbg !9016
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9017 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9021, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9022, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9023, metadata !DIExpression()), !dbg !9025
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9026
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9023, metadata !DIExpression()), !dbg !9025
  %4 = icmp eq %struct._snode* %3, null, !dbg !9028
  br i1 %4, label %15, label %5, !dbg !9026

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9023, metadata !DIExpression()), !dbg !9025
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9030
  br i1 %6, label %9, label %11, !dbg !9033

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9023, metadata !DIExpression()), !dbg !9025
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9030
  br i1 %8, label %9, label %11, !dbg !9033, !llvm.loop !9034

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !9035
  br label %15, !dbg !9035

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9024, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9023, metadata !DIExpression()), !dbg !9025
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !9028
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9024, metadata !DIExpression()), !dbg !9025
  %14 = icmp eq %struct._snode* %13, null, !dbg !9028
  br i1 %14, label %15, label %7, !dbg !9026, !llvm.loop !9034

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9042, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9043, metadata !DIExpression()), !dbg !9044
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9045
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !9045
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !9045
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9046
  %5 = icmp eq %struct._snode* %4, null, !dbg !9046
  br i1 %5, label %6, label %8, !dbg !9045

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9048
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !9048
  br label %8, !dbg !9048

8:                                                ; preds = %6, %2
  ret void, !dbg !9045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9050 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9054, metadata !DIExpression()), !dbg !9055
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9056
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9056
  ret %struct._snode* %3, !dbg !9057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9058 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9062, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9063, metadata !DIExpression()), !dbg !9064
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9065
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9070, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9071, metadata !DIExpression()), !dbg !9072
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9073
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9076 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9078, metadata !DIExpression()), !dbg !9079
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9080
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9080
  ret %struct._snode* %3, !dbg !9081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9082 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9084, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9085, metadata !DIExpression()), !dbg !9086
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9087
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9088
  ret void, !dbg !9089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9090 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9094, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9095, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9096, metadata !DIExpression()), !dbg !9097
  %4 = icmp eq %struct._snode* %1, null, !dbg !9098
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !9100
  br i1 %4, label %6, label %11, !dbg !9101

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !9102
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9104
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9104
  br i1 %8, label %9, label %15, !dbg !9102

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9106
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !9106
  br label %15, !dbg !9106

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !9108
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !9110
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9110
  br i1 %13, label %14, label %15, !dbg !9108

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !9112
  br label %15, !dbg !9112

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !9101
  ret void, !dbg !9101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9118, metadata !DIExpression()), !dbg !9119
  %2 = icmp eq %struct._snode* %0, null, !dbg !9120
  br i1 %2, label %5, label %3, !dbg !9120

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !9120
  br label %5, !dbg !9120

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9120
  ret %struct._snode* %6, !dbg !9120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9123, metadata !DIExpression()), !dbg !9124
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !9125
  ret %struct._snode* %2, !dbg !9125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9126 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9128, metadata !DIExpression()), !dbg !9129
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9130
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9130
  ret %struct._snode* %3, !dbg !9131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9134, metadata !DIExpression()), !dbg !9137
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !9138, !range !9139
  call void @llvm.dbg.value(metadata i32 %2, metadata !9135, metadata !DIExpression()), !dbg !9137
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !9140
  call void @llvm.dbg.value(metadata i32 %3, metadata !9136, metadata !DIExpression()), !dbg !9137
  ret i32 %3, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9144, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i8* %1, metadata !9145, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i8* %1, metadata !9146, metadata !DIExpression()), !dbg !9147
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9148
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9148
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9149
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9149
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9149
  %8 = shl nuw i32 1, %0, !dbg !9150
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !9151
  ret void, !dbg !9152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9153 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9157, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i32 %1, metadata !9158, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9159, metadata !DIExpression()), !dbg !9163
  %4 = bitcast i64* %3 to i8*, !dbg !9164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9164
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9161, metadata !DIExpression()), !dbg !9163
  store i64 70368744177732, i64* %3, align 8, !dbg !9165
  call void @llvm.dbg.value(metadata i64* %3, metadata !9161, metadata !DIExpression(DW_OP_deref)), !dbg !9163
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !9166
  call void @llvm.dbg.value(metadata i32 %5, metadata !9162, metadata !DIExpression()), !dbg !9163
  %6 = icmp eq i32 %5, 0, !dbg !9167
  br i1 %6, label %7, label %8, !dbg !9169

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !9170
  br label %8, !dbg !9171

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9172
  ret void, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9173 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9175, metadata !DIExpression()), !dbg !9178
  call void @llvm.dbg.value(metadata i8* %0, metadata !9176, metadata !DIExpression()), !dbg !9178
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9179
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9177, metadata !DIExpression()), !dbg !9178
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9180
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9180
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !9181
  ret i32 %5, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9185, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata i32 %1, metadata !9186, metadata !DIExpression()), !dbg !9188
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %3, metadata !9187, metadata !DIExpression()), !dbg !9188
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !9190
  ret void, !dbg !9191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !9192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9196, metadata !DIExpression()), !dbg !9197
  %2 = sdiv i32 %0, 4, !dbg !9198
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9199
  %6 = add nsw i32 %5, 16, !dbg !9200
  %7 = shl i32 15, %6, !dbg !9201
  %8 = or i32 %7, %2, !dbg !9202
  ret i32 %8, !dbg !9203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9208, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.value(metadata i32 %1, metadata !9209, metadata !DIExpression()), !dbg !9210
  %3 = and i32 %1, 255, !dbg !9211
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9211
  %5 = load volatile i32, i32* %4, align 4, !dbg !9211
  %6 = lshr i32 %1, 16, !dbg !9211
  %7 = xor i32 %6, -1, !dbg !9211
  %8 = and i32 %5, %7, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %6, metadata !9212, metadata !DIExpression()) #25, !dbg !9216
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9218, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %9, metadata !9215, metadata !DIExpression()) #25, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %9, metadata !9220, metadata !DIExpression()) #25, !dbg !9225
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9227, !range !3806
  %11 = shl i32 %0, %10, !dbg !9211
  %12 = or i32 %11, %8, !dbg !9211
  store volatile i32 %12, i32* %4, align 4, !dbg !9211
  ret void, !dbg !9228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9233, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9234, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata i32 %2, metadata !9235, metadata !DIExpression()), !dbg !9238
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !9239
  %5 = icmp eq %struct._snode* %4, null, !dbg !9239
  br i1 %5, label %21, label %6, !dbg !9239

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9236, metadata !DIExpression()), !dbg !9238
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9242
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9242
  %11 = load i32, i32* %10, align 4, !dbg !9242
  %12 = and i32 %11, %2, !dbg !9246
  %13 = icmp eq i32 %12, 0, !dbg !9246
  br i1 %13, label %19, label %14, !dbg !9247

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9236, metadata !DIExpression()), !dbg !9238
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9248
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9248
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9248
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #26, !dbg !9250
  br label %19, !dbg !9251

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9236, metadata !DIExpression()), !dbg !9238
  %20 = icmp eq %struct._snode* %8, null, !dbg !9252
  br i1 %20, label %21, label %6, !dbg !9252

21:                                               ; preds = %19, %3
  ret void, !dbg !9253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9256, metadata !DIExpression()), !dbg !9257
  %2 = and i32 %0, 255, !dbg !9258
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9258
  %4 = load volatile i32, i32* %3, align 4, !dbg !9258
  %5 = lshr i32 %0, 16, !dbg !9258
  %6 = and i32 %4, %5, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %5, metadata !9212, metadata !DIExpression()) #25, !dbg !9259
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9261, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %7, metadata !9215, metadata !DIExpression()) #25, !dbg !9259
  call void @llvm.dbg.value(metadata i32 %7, metadata !9220, metadata !DIExpression()) #25, !dbg !9262
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9264, !range !3806
  %9 = lshr i32 %6, %8, !dbg !9265
  ret i32 %9, !dbg !9266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9267 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 %1, metadata !9273, metadata !DIExpression()), !dbg !9274
  %3 = shl i32 %1, 16, !dbg !9275
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9275
  store volatile i32 %3, i32* %4, align 4, !dbg !9275
  ret void, !dbg !9276
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9277 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9281, metadata !DIExpression()), !dbg !9282
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9283
  %3 = load volatile i32, i32* %2, align 4, !dbg !9283
  ret i32 %3, !dbg !9284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9285 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9287, metadata !DIExpression()), !dbg !9289
  call void @llvm.dbg.value(metadata i32 %1, metadata !9288, metadata !DIExpression()), !dbg !9289
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9290
  store volatile i32 %1, i32* %3, align 4, !dbg !9290
  ret void, !dbg !9291
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9294, metadata !DIExpression()), !dbg !9295
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9296
  %3 = load volatile i32, i32* %2, align 4, !dbg !9296
  ret i32 %3, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !9298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32* %1, metadata !9303, metadata !DIExpression()), !dbg !9304
  %3 = and i32 %0, 131072, !dbg !9305
  %4 = icmp eq i32 %3, 0, !dbg !9307
  br i1 %4, label %22, label %5, !dbg !9308

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9309
  %6 = and i32 %0, 2, !dbg !9311
  %7 = icmp eq i32 %6, 0, !dbg !9313
  br i1 %7, label %11, label %8, !dbg !9314

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9315
  %10 = icmp eq i32 %9, 0, !dbg !9315
  br i1 %10, label %33, label %11, !dbg !9318

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9319
  store i32 %12, i32* %1, align 4, !dbg !9319
  %13 = and i32 %0, 16, !dbg !9320
  %14 = icmp eq i32 %13, 0, !dbg !9322
  br i1 %14, label %17, label %15, !dbg !9323

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9324
  br label %31, !dbg !9326

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9327
  %19 = icmp eq i32 %18, 0, !dbg !9329
  br i1 %19, label %33, label %20, !dbg !9330

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9331
  br label %31, !dbg !9333

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9334
  %24 = icmp eq i32 %23, 0, !dbg !9336
  br i1 %24, label %31, label %25, !dbg !9337

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9338
  %27 = icmp eq i32 %26, 0, !dbg !9341
  br i1 %27, label %28, label %31, !dbg !9342

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9343
  br label %33, !dbg !9344

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9304
  ret i32 %34, !dbg !9344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9345 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9349, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %1, metadata !9350, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9351, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %3, metadata !9352, metadata !DIExpression()), !dbg !9360
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9361
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9361
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9361
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9353, metadata !DIExpression()), !dbg !9360
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9362
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9362
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9362
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9354, metadata !DIExpression()), !dbg !9360
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %11, metadata !9355, metadata !DIExpression()), !dbg !9360
  %12 = and i32 %2, 48, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %12, metadata !9356, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9357, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9358, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9360
  call void @llvm.dbg.value(metadata i32 %2, metadata !9359, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9360
  %13 = lshr i32 %2, 6, !dbg !9365
  %14 = and i32 %13, 1, !dbg !9365
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !9366
  %15 = lshr i32 %2, 7, !dbg !9367
  %16 = and i32 %15, 3, !dbg !9367
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !9368
  %17 = lshr i32 %2, 9, !dbg !9369
  %18 = and i32 %17, 3, !dbg !9369
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !9370
  %19 = icmp eq i32 %12, 32, !dbg !9371
  br i1 %19, label %20, label %24, !dbg !9373

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9374
  br i1 %21, label %22, label %23, !dbg !9377

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9378
  br label %24, !dbg !9380

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !9381
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9383
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !9384
  ret void, !dbg !9385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9388, metadata !DIExpression()), !dbg !9390
  %2 = shl nuw i32 1, %0, !dbg !9391
  call void @llvm.dbg.value(metadata i32 %2, metadata !9389, metadata !DIExpression()), !dbg !9390
  ret i32 %2, !dbg !9392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9393 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9397, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.value(metadata i32 %1, metadata !9398, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.value(metadata i32 %2, metadata !9399, metadata !DIExpression()), !dbg !9400
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9401
  %5 = load volatile i32, i32* %4, align 4, !dbg !9401
  %6 = xor i32 %1, -1, !dbg !9401
  %7 = and i32 %5, %6, !dbg !9401
  %8 = mul i32 %2, %1, !dbg !9401
  %9 = or i32 %7, %8, !dbg !9401
  store volatile i32 %9, i32* %4, align 4, !dbg !9401
  ret void, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %1, metadata !9406, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9408
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9409
  %5 = load volatile i32, i32* %4, align 4, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9410
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9412, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9410
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9413
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9415, !range !3806
  %8 = shl nuw nsw i32 %7, 1, !dbg !9409
  %9 = shl i32 3, %8, !dbg !9409
  %10 = xor i32 %9, -1, !dbg !9409
  %11 = and i32 %5, %10, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9418
  %12 = shl i32 %2, %8, !dbg !9409
  %13 = or i32 %11, %12, !dbg !9409
  store volatile i32 %13, i32* %4, align 4, !dbg !9409
  ret void, !dbg !9420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9421 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9423, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 %1, metadata !9424, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 %2, metadata !9425, metadata !DIExpression()), !dbg !9426
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9427
  %5 = load volatile i32, i32* %4, align 4, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9428
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9430, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9431
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9433, !range !3806
  %8 = shl nuw nsw i32 %7, 1, !dbg !9427
  %9 = shl i32 3, %8, !dbg !9427
  %10 = xor i32 %9, -1, !dbg !9427
  %11 = and i32 %5, %10, !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9434
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9436
  %12 = shl i32 %2, %8, !dbg !9427
  %13 = or i32 %11, %12, !dbg !9427
  store volatile i32 %13, i32* %4, align 4, !dbg !9427
  ret void, !dbg !9438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9439 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9441, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %2, metadata !9443, metadata !DIExpression()), !dbg !9444
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9445
  %5 = load volatile i32, i32* %4, align 4, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9446
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9448, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9449
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9451, !range !3806
  %8 = shl nuw nsw i32 %7, 2, !dbg !9445
  %9 = shl i32 15, %8, !dbg !9445
  %10 = xor i32 %9, -1, !dbg !9445
  %11 = and i32 %5, %10, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9454
  %12 = shl i32 %2, %8, !dbg !9445
  %13 = or i32 %11, %12, !dbg !9445
  store volatile i32 %13, i32* %4, align 4, !dbg !9445
  ret void, !dbg !9456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9457 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9459, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %1, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()), !dbg !9462
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9463
  %5 = load volatile i32, i32* %4, align 4, !dbg !9463
  %6 = lshr i32 %1, 8, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %6, metadata !9212, metadata !DIExpression()) #25, !dbg !9464
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9466, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %7, metadata !9215, metadata !DIExpression()) #25, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %7, metadata !9220, metadata !DIExpression()) #25, !dbg !9467
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9469, !range !3806
  %9 = shl nuw nsw i32 %8, 2, !dbg !9463
  %10 = shl i32 15, %9, !dbg !9463
  %11 = xor i32 %10, -1, !dbg !9463
  %12 = and i32 %5, %11, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %6, metadata !9212, metadata !DIExpression()) #25, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %7, metadata !9215, metadata !DIExpression()) #25, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %7, metadata !9220, metadata !DIExpression()) #25, !dbg !9472
  %13 = shl i32 %2, %9, !dbg !9463
  %14 = or i32 %12, %13, !dbg !9463
  store volatile i32 %14, i32* %4, align 4, !dbg !9463
  ret void, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9477, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i32 %1, metadata !9478, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i32 %2, metadata !9479, metadata !DIExpression()), !dbg !9480
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9481
  %5 = load volatile i32, i32* %4, align 4, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9482
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9484, !srcloc !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9482
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9485
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9487, !range !3806
  %8 = shl nuw nsw i32 %7, 1, !dbg !9481
  %9 = shl i32 3, %8, !dbg !9481
  %10 = xor i32 %9, -1, !dbg !9481
  %11 = and i32 %5, %10, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %1, metadata !9212, metadata !DIExpression()) #25, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()) #25, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %6, metadata !9220, metadata !DIExpression()) #25, !dbg !9490
  %12 = shl i32 %2, %8, !dbg !9481
  %13 = or i32 %11, %12, !dbg !9481
  store volatile i32 %13, i32* %4, align 4, !dbg !9481
  ret void, !dbg !9492
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9495, metadata !DIExpression()), !dbg !9498
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9499
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9499
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9499
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9496, metadata !DIExpression()), !dbg !9498
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9500
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9501
  %6 = tail call fastcc zeroext i1 @device_is_ready.59() #27, !dbg !9502
  br i1 %6, label %7, label %11, !dbg !9504

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %8, metadata !9497, metadata !DIExpression()), !dbg !9498
  %9 = icmp slt i32 %8, 0, !dbg !9506
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9508
  br label %11, !dbg !9508

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9498
  ret i32 %12, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59() unnamed_addr #1 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9514, metadata !DIExpression()), !dbg !9515
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9516, !srcloc !9518
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.60() #27, !dbg !9519
  ret i1 %1, !dbg !9520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9521 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9525, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i8 1, metadata !9526, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9527, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 0, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9529, metadata !DIExpression()), !dbg !9530
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9531
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9531
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9531
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9527, metadata !DIExpression()), !dbg !9530
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9532
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9535
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !9536
  call void @llvm.dbg.value(metadata i32 %7, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 %7, metadata !9528, metadata !DIExpression()), !dbg !9530
  ret i32 %7, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.60() unnamed_addr #1 !dbg !9538 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9540, metadata !DIExpression()), !dbg !9541
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !9542
  ret i1 %1, !dbg !9543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9548, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 %1, metadata !9549, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 %2, metadata !9550, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 %3, metadata !9551, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32 0, metadata !9552, metadata !DIExpression()), !dbg !9556
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !9557
  %5 = icmp eq i32 %3, 17, !dbg !9558
  br i1 %5, label %6, label %14, !dbg !9559

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %7, metadata !9553, metadata !DIExpression()), !dbg !9561
  %8 = icmp eq i32 %7, 0, !dbg !9562
  %9 = shl nuw i32 1, %1, !dbg !9564
  br i1 %8, label %12, label %10, !dbg !9565

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9566
  br label %14, !dbg !9568

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !9569
  br label %14, !dbg !9572

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9573
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9574 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9576, metadata !DIExpression()), !dbg !9580
  call void @llvm.dbg.value(metadata i8* %1, metadata !9577, metadata !DIExpression()), !dbg !9580
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9581
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9581
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9581
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9578, metadata !DIExpression()), !dbg !9580
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9582
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9582
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !9584
  %9 = icmp eq i32 %8, 0, !dbg !9584
  br i1 %9, label %12, label %10, !dbg !9585

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9586
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !9588
  br label %12, !dbg !9589

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9590
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9592
  %15 = icmp eq i32 %14, 0, !dbg !9592
  br i1 %15, label %19, label %16, !dbg !9593

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9594
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !9595
  store i8 %18, i8* %1, align 1, !dbg !9596
  br label %19, !dbg !9597

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9580
  ret i32 %20, !dbg !9598
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9601, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i8 %1, metadata !9602, metadata !DIExpression()), !dbg !9605
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9606
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9606
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9606
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9603, metadata !DIExpression()), !dbg !9605
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9607

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9608
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9611
  %10 = icmp eq i32 %9, 0, !dbg !9611
  br i1 %10, label %18, label %11, !dbg !9612

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9613, !srcloc !9620
  call void @llvm.dbg.value(metadata i32 undef, metadata !9616, metadata !DIExpression()) #25, !dbg !9621
  call void @llvm.dbg.value(metadata i32 undef, metadata !9617, metadata !DIExpression()) #25, !dbg !9621
  call void @llvm.dbg.value(metadata i32 undef, metadata !9604, metadata !DIExpression()), !dbg !9605
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9622
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !9624
  %15 = icmp eq i32 %14, 0, !dbg !9624
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9613
  br i1 %15, label %17, label %19, !dbg !9625

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9616, metadata !DIExpression()) #25, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %16, metadata !9604, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32 undef, metadata !9626, metadata !DIExpression()) #25, !dbg !9629
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9631, !srcloc !9632
  br label %18, !dbg !9633

18:                                               ; preds = %17, %7
  br label %7, !dbg !9608, !llvm.loop !9634

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9613
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9636
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !9637
  call void @llvm.dbg.value(metadata i32 %20, metadata !9626, metadata !DIExpression()) #25, !dbg !9638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9640, !srcloc !9632
  ret void, !dbg !9641
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9642 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9644, metadata !DIExpression()), !dbg !9647
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9648
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9648
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9648
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9645, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 0, metadata !9646, metadata !DIExpression()), !dbg !9647
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9649
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9649
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9651
  %8 = icmp ne i32 %7, 0, !dbg !9651
  %9 = zext i1 %8 to i32, !dbg !9652
  call void @llvm.dbg.value(metadata i32 %9, metadata !9646, metadata !DIExpression()), !dbg !9647
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9653
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9655
  %12 = icmp eq i32 %11, 0, !dbg !9655
  %13 = or i32 %9, 2, !dbg !9656
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %14, metadata !9646, metadata !DIExpression()), !dbg !9647
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9657
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !9659
  %17 = icmp eq i32 %16, 0, !dbg !9659
  %18 = or i32 %14, 4, !dbg !9660
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9660
  call void @llvm.dbg.value(metadata i32 %19, metadata !9646, metadata !DIExpression()), !dbg !9647
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9661
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !9663
  %22 = icmp eq i32 %21, 0, !dbg !9663
  %23 = or i32 %19, 8, !dbg !9664
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %24, metadata !9646, metadata !DIExpression()), !dbg !9647
  %25 = and i32 %24, 8, !dbg !9665
  %26 = icmp eq i32 %25, 0, !dbg !9665
  br i1 %26, label %29, label %27, !dbg !9667

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9668
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !9670
  br label %29, !dbg !9671

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9672
  %31 = icmp eq i32 %30, 0, !dbg !9672
  br i1 %31, label %34, label %32, !dbg !9674

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9675
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !9677
  br label %34, !dbg !9678

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9679
  %36 = icmp eq i32 %35, 0, !dbg !9679
  br i1 %36, label %39, label %37, !dbg !9681

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9682
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !9684
  br label %39, !dbg !9685

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9686
  %41 = icmp eq i32 %40, 0, !dbg !9686
  br i1 %41, label %44, label %42, !dbg !9688

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9689
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !9691
  br label %44, !dbg !9692

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9693
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !9694
  ret i32 %24, !dbg !9695
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9698, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9699, metadata !DIExpression()), !dbg !9707
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9708
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9708
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9708
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9700, metadata !DIExpression()), !dbg !9707
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9709
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9709
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9709
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9701, metadata !DIExpression()), !dbg !9707
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9710
  %10 = load i8, i8* %9, align 4, !dbg !9710
  %11 = zext i8 %10 to i32, !dbg !9711
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %12, metadata !9703, metadata !DIExpression()), !dbg !9707
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9713
  %14 = load i8, i8* %13, align 1, !dbg !9713
  %15 = zext i8 %14 to i32, !dbg !9714
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %16, metadata !9704, metadata !DIExpression()), !dbg !9707
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9716
  %18 = load i8, i8* %17, align 2, !dbg !9716
  %19 = zext i8 %18 to i32, !dbg !9717
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !9718
  call void @llvm.dbg.value(metadata i32 %20, metadata !9705, metadata !DIExpression()), !dbg !9707
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9719
  %22 = load i8, i8* %21, align 1, !dbg !9719
  %23 = zext i8 %22 to i32, !dbg !9720
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %24, metadata !9706, metadata !DIExpression()), !dbg !9707
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9722

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9724
  br i1 %26, label %69, label %27, !dbg !9726

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9727

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9728
  br i1 %29, label %65, label %30, !dbg !9728

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9730
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9707
  br i1 %31, label %38, label %34, !dbg !9732

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9733
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9733

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9736
  br i1 %37, label %38, label %69, !dbg !9737

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9738
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !9739
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !9740
  %41 = icmp eq i32 %12, %40, !dbg !9742
  br i1 %41, label %43, label %42, !dbg !9743

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !9744
  br label %43, !dbg !9746

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !9747
  %45 = icmp eq i32 %16, %44, !dbg !9749
  br i1 %45, label %47, label %46, !dbg !9750

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !9751
  br label %47, !dbg !9753

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !9754
  %49 = icmp eq i32 %20, %48, !dbg !9756
  br i1 %49, label %51, label %50, !dbg !9757

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !9758
  br label %51, !dbg !9760

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !9761
  %53 = icmp eq i32 %24, %52, !dbg !9763
  br i1 %53, label %55, label %54, !dbg !9764

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !9765
  br label %55, !dbg !9767

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9768
  %57 = load i32, i32* %56, align 4, !dbg !9768
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9770
  %59 = load i32, i32* %58, align 4, !dbg !9770
  %60 = icmp eq i32 %57, %59, !dbg !9771
  br i1 %60, label %63, label %61, !dbg !9772

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !9773
  %62 = load i32, i32* %56, align 4, !dbg !9775
  store i32 %62, i32* %58, align 4, !dbg !9776
  br label %63, !dbg !9777

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9778
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !9779
  br label %69, !dbg !9780

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9728
  %67 = and i8 %66, 1, !dbg !9728
  %68 = icmp eq i8 %67, 0, !dbg !9728
  br i1 %68, label %30, label %69, !dbg !9728

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9707
  ret i32 %70, !dbg !9781
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9784, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9785, metadata !DIExpression()), !dbg !9787
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9788
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9788
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9788
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9786, metadata !DIExpression()), !dbg !9787
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9789
  %7 = load i32, i32* %6, align 4, !dbg !9789
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9790
  store i32 %7, i32* %8, align 4, !dbg !9791
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9792, !range !9793
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !9794
  %11 = trunc i32 %10 to i8, !dbg !9794
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9795
  store i8 %11, i8* %12, align 4, !dbg !9796
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !9797, !range !9798
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !9799
  %15 = trunc i32 %14 to i8, !dbg !9799
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9800
  store i8 %15, i8* %16, align 1, !dbg !9801
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !9802
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !9803, !range !9793
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !9804
  %20 = trunc i32 %19 to i8, !dbg !9804
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9805
  store i8 %20, i8* %21, align 2, !dbg !9806
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !9807, !range !9808
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !9809
  %24 = trunc i32 %23 to i8, !dbg !9809
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9810
  store i8 %24, i8* %25, align 1, !dbg !9811
  ret i32 0, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9815, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8* %1, metadata !9816, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i32 %2, metadata !9817, metadata !DIExpression()), !dbg !9821
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9822
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9822
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9822
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9818, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8 0, metadata !9819, metadata !DIExpression()), !dbg !9821
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9823
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9823
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !9825
  %10 = icmp eq i32 %9, 0, !dbg !9825
  br i1 %10, label %30, label %11, !dbg !9826

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9827, !srcloc !9620
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9827
  call void @llvm.dbg.value(metadata i32 %13, metadata !9616, metadata !DIExpression()) #25, !dbg !9829
  call void @llvm.dbg.value(metadata i32 undef, metadata !9617, metadata !DIExpression()) #25, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %13, metadata !9820, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i8 0, metadata !9819, metadata !DIExpression()), !dbg !9821
  %14 = icmp sgt i32 %2, 0, !dbg !9830
  br i1 %14, label %15, label %28, !dbg !9831

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9819, metadata !DIExpression()), !dbg !9821
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9832
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #27, !dbg !9833
  %20 = icmp eq i32 %19, 0, !dbg !9831
  br i1 %20, label %28, label %21, !dbg !9834

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9835
  %23 = add i8 %17, 1, !dbg !9837
  call void @llvm.dbg.value(metadata i8 %23, metadata !9819, metadata !DIExpression()), !dbg !9821
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9838
  %25 = load i8, i8* %24, align 1, !dbg !9838
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #27, !dbg !9839
  %26 = zext i8 %23 to i32, !dbg !9840
  %27 = icmp slt i32 %26, %2, !dbg !9830
  br i1 %27, label %15, label %28, !dbg !9831, !llvm.loop !9841

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9840
  call void @llvm.dbg.value(metadata i32 %13, metadata !9626, metadata !DIExpression()) #25, !dbg !9843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9845, !srcloc !9632
  br label %30, !dbg !9846

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9821
  ret i32 %31, !dbg !9847
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9850, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i8* %1, metadata !9851, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i32 %2, metadata !9852, metadata !DIExpression()), !dbg !9855
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9856
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9856
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9856
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9853, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata i8 0, metadata !9854, metadata !DIExpression()), !dbg !9855
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9857
  call void @llvm.dbg.value(metadata i8 0, metadata !9854, metadata !DIExpression()), !dbg !9855
  %8 = icmp sgt i32 %2, 0, !dbg !9858
  br i1 %8, label %9, label %28, !dbg !9859

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9854, metadata !DIExpression()), !dbg !9855
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9857
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9860
  %14 = icmp eq i32 %13, 0, !dbg !9859
  br i1 %14, label %28, label %15, !dbg !9861

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9862
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #27, !dbg !9864
  %18 = add i8 %11, 1, !dbg !9865
  call void @llvm.dbg.value(metadata i8 %18, metadata !9854, metadata !DIExpression()), !dbg !9855
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9866
  store i8 %17, i8* %19, align 1, !dbg !9867
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9868
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #27, !dbg !9870
  %22 = icmp eq i32 %21, 0, !dbg !9870
  br i1 %22, label %25, label %23, !dbg !9871

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9872
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #27, !dbg !9874
  br label %25, !dbg !9875

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9854, metadata !DIExpression()), !dbg !9855
  %26 = zext i8 %18 to i32, !dbg !9876
  %27 = icmp slt i32 %26, %2, !dbg !9858
  br i1 %27, label %9, label %28, !dbg !9859, !llvm.loop !9877

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9876
  ret i32 %29, !dbg !9879
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9884
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9885
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9885
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9883, metadata !DIExpression()), !dbg !9884
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9886
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9886
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9887
  ret void, !dbg !9888
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9891, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9894
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9894
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9894
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9892, metadata !DIExpression()), !dbg !9893
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9895
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9895
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9896
  ret void, !dbg !9897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9903
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9901, metadata !DIExpression()), !dbg !9902
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9904
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9905
  %8 = icmp eq i32 %7, 0, !dbg !9905
  br i1 %8, label %14, label %9, !dbg !9906

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9907
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #27, !dbg !9908
  %12 = icmp ne i32 %11, 0, !dbg !9906
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9909
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9912, metadata !DIExpression()), !dbg !9914
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9915
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9915
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9915
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9913, metadata !DIExpression()), !dbg !9914
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9916
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9916
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9917
  ret void, !dbg !9918
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9919 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9921, metadata !DIExpression()), !dbg !9923
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9924
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9924
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9924
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9922, metadata !DIExpression()), !dbg !9923
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9925
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9925
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9926
  ret void, !dbg !9927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9930, metadata !DIExpression()), !dbg !9932
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9933
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9933
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9933
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9931, metadata !DIExpression()), !dbg !9932
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9934
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9934
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #27, !dbg !9935
  ret i32 %7, !dbg !9936
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9939, metadata !DIExpression()), !dbg !9941
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9942
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9942
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9940, metadata !DIExpression()), !dbg !9941
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9943
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9943
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9944
  ret i32 %7, !dbg !9945
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9948, metadata !DIExpression()), !dbg !9950
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9951
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9951
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9951
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9949, metadata !DIExpression()), !dbg !9950
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9952
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9952
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9953
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9954
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9954
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !9954

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9956
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9958
  br label %11, !dbg !9959

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9958
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9960
  ret void, !dbg !9961
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9967
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9967
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9967
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9965, metadata !DIExpression()), !dbg !9966
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9968
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9968
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #27, !dbg !9969
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9970
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9970
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !9970

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #27, !dbg !9972
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9974
  br label %11, !dbg !9975

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9974
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #27, !dbg !9976
  ret void, !dbg !9977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9978 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9980, metadata !DIExpression()), !dbg !9982
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9983
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9983
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9983
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9981, metadata !DIExpression()), !dbg !9982
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9984
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9984
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #27, !dbg !9985
  %8 = icmp eq i32 %7, 0, !dbg !9985
  br i1 %8, label %13, label %9, !dbg !9986

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9987
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #27, !dbg !9988
  %12 = icmp eq i32 %11, 0, !dbg !9988
  br i1 %12, label %13, label %22, !dbg !9989

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9990
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #27, !dbg !9991
  %16 = icmp eq i32 %15, 0, !dbg !9991
  br i1 %16, label %22, label %17, !dbg !9992

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9993
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #27, !dbg !9994
  %20 = icmp ne i32 %19, 0, !dbg !9992
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9998, metadata !DIExpression()), !dbg !9999
  ret i32 1, !dbg !10000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10001 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10003, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10004, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.value(metadata i8* %2, metadata !10005, metadata !DIExpression()), !dbg !10007
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10008
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10008
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10008
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10006, metadata !DIExpression()), !dbg !10007
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10009
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10010
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10011
  store i8* %2, i8** %8, align 4, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10014 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10019, metadata !DIExpression()), !dbg !10020
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10021
  %3 = load volatile i32, i32* %2, align 4, !dbg !10021
  %4 = lshr i32 %3, 5, !dbg !10022
  %5 = and i32 %4, 1, !dbg !10022
  ret i32 %5, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10026, metadata !DIExpression()), !dbg !10027
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10028
  %3 = load volatile i32, i32* %2, align 4, !dbg !10028
  %4 = lshr i32 %3, 5, !dbg !10029
  %5 = and i32 %4, 1, !dbg !10029
  ret i32 %5, !dbg !10030
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10031 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10033, metadata !DIExpression()), !dbg !10034
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10035
  %3 = load volatile i32, i32* %2, align 4, !dbg !10035
  %4 = lshr i32 %3, 6, !dbg !10036
  %5 = and i32 %4, 1, !dbg !10036
  ret i32 %5, !dbg !10037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10038 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10040, metadata !DIExpression()), !dbg !10041
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10042
  %3 = load volatile i32, i32* %2, align 4, !dbg !10042
  %4 = lshr i32 %3, 6, !dbg !10043
  %5 = and i32 %4, 1, !dbg !10043
  ret i32 %5, !dbg !10044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10045 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10049, metadata !DIExpression()), !dbg !10052
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10053

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10060
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10063, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10060
  %5 = and i32 %4, -2, !dbg !10065
  call void @llvm.dbg.value(metadata i32 %5, metadata !10050, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10074
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10074
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10076, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10074
  %7 = icmp eq i32 %6, 0, !dbg !10053
  br i1 %7, label %8, label %3, !dbg !10065, !llvm.loop !10078

8:                                                ; preds = %3
  ret void, !dbg !10079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10080 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10082, metadata !DIExpression()), !dbg !10083
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10084
  %3 = load volatile i32, i32* %2, align 4, !dbg !10084
  %4 = and i32 %3, -65, !dbg !10084
  store volatile i32 %4, i32* %2, align 4, !dbg !10084
  ret void, !dbg !10085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10086 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10088, metadata !DIExpression()), !dbg !10091
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10092

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10093
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10096, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10093
  %5 = and i32 %4, -257, !dbg !10097
  call void @llvm.dbg.value(metadata i32 %5, metadata !10089, metadata !DIExpression()), !dbg !10098
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10099
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10099
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10101, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10099
  %7 = icmp eq i32 %6, 0, !dbg !10092
  br i1 %7, label %8, label %3, !dbg !10097, !llvm.loop !10102

8:                                                ; preds = %3
  ret void, !dbg !10103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10106, metadata !DIExpression()), !dbg !10109
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !10110

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10111
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10114, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10111
  %5 = or i32 %4, 1, !dbg !10115
  call void @llvm.dbg.value(metadata i32 %5, metadata !10107, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10117
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10117
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10119, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10117
  %7 = icmp eq i32 %6, 0, !dbg !10110
  br i1 %7, label %8, label %3, !dbg !10115, !llvm.loop !10120

8:                                                ; preds = %3
  ret void, !dbg !10121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10124, metadata !DIExpression()), !dbg !10125
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10126
  %3 = load volatile i32, i32* %2, align 4, !dbg !10126
  %4 = or i32 %3, 64, !dbg !10126
  store volatile i32 %4, i32* %2, align 4, !dbg !10126
  ret void, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10130, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10134

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10135
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10138, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10135
  %5 = or i32 %4, 256, !dbg !10139
  call void @llvm.dbg.value(metadata i32 %5, metadata !10131, metadata !DIExpression()), !dbg !10140
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10141
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10141
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10143, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10141
  %7 = icmp eq i32 %6, 0, !dbg !10134
  br i1 %7, label %8, label %3, !dbg !10139, !llvm.loop !10144

8:                                                ; preds = %3
  ret void, !dbg !10145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10146 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10148, metadata !DIExpression()), !dbg !10151
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10152

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10153
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10156, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10153
  %5 = and i32 %4, -33, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %5, metadata !10149, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10159
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10159
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10161, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10159
  %7 = icmp eq i32 %6, 0, !dbg !10152
  br i1 %7, label %8, label %3, !dbg !10157, !llvm.loop !10162

8:                                                ; preds = %3
  ret void, !dbg !10163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10164 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10166, metadata !DIExpression()), !dbg !10169
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10170

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10171
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10174, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10171
  %5 = or i32 %4, 32, !dbg !10175
  call void @llvm.dbg.value(metadata i32 %5, metadata !10167, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10177
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10177
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10179, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10177
  %7 = icmp eq i32 %6, 0, !dbg !10170
  br i1 %7, label %8, label %3, !dbg !10175, !llvm.loop !10180

8:                                                ; preds = %3
  ret void, !dbg !10181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10182 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10186
  %3 = load volatile i32, i32* %2, align 4, !dbg !10186
  %4 = lshr i32 %3, 7, !dbg !10187
  %5 = and i32 %4, 1, !dbg !10187
  ret i32 %5, !dbg !10188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10189 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10191, metadata !DIExpression()), !dbg !10194
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10195

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10196
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10199, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10196
  %5 = and i32 %4, -65, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %5, metadata !10192, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10202
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10202
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10204, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10202
  %7 = icmp eq i32 %6, 0, !dbg !10195
  br i1 %7, label %8, label %3, !dbg !10200, !llvm.loop !10205

8:                                                ; preds = %3
  ret void, !dbg !10206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10209, metadata !DIExpression()), !dbg !10212
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10213

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10214
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10217, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10214
  %5 = or i32 %4, 64, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %5, metadata !10210, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10220
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10220
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10222, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10220
  %7 = icmp eq i32 %6, 0, !dbg !10213
  br i1 %7, label %8, label %3, !dbg !10218, !llvm.loop !10223

8:                                                ; preds = %3
  ret void, !dbg !10224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10225 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10229, metadata !DIExpression()), !dbg !10230
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10231
  %3 = load volatile i32, i32* %2, align 4, !dbg !10231
  %4 = trunc i32 %3 to i8, !dbg !10232
  ret i8 %4, !dbg !10233
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10234 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10236, metadata !DIExpression()), !dbg !10237
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10238
  %3 = load volatile i32, i32* %2, align 4, !dbg !10238
  %4 = lshr i32 %3, 3, !dbg !10239
  %5 = and i32 %4, 1, !dbg !10239
  ret i32 %5, !dbg !10240
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10241 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10243, metadata !DIExpression()), !dbg !10245
  %3 = bitcast i32* %2 to i8*, !dbg !10246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10246
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10244, metadata !DIExpression()), !dbg !10247
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10248
  %5 = load volatile i32, i32* %4, align 4, !dbg !10248
  store volatile i32 %5, i32* %2, align 4, !dbg !10249
  %6 = load volatile i32, i32* %2, align 4, !dbg !10250
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10251
  %8 = load volatile i32, i32* %7, align 4, !dbg !10251
  store volatile i32 %8, i32* %2, align 4, !dbg !10252
  %9 = load volatile i32, i32* %2, align 4, !dbg !10253
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10254
  ret void, !dbg !10254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10255 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10259, metadata !DIExpression()), !dbg !10261
  call void @llvm.dbg.value(metadata i8 %1, metadata !10260, metadata !DIExpression()), !dbg !10261
  %3 = zext i8 %1 to i32, !dbg !10262
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10263
  store volatile i32 %3, i32* %4, align 4, !dbg !10264
  ret void, !dbg !10265
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10266 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10270, metadata !DIExpression()), !dbg !10272
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10273
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10273
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10273
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10271, metadata !DIExpression()), !dbg !10272
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10274
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10274
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !10275
  ret i32 %7, !dbg !10276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !10277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10281, metadata !DIExpression()), !dbg !10282
  %2 = icmp eq i32 %0, 1024, !dbg !10283
  %3 = select i1 %2, i32 2, i32 0, !dbg !10283
  %4 = icmp eq i32 %0, 1536, !dbg !10283
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10283
  ret i32 %5, !dbg !10284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10285 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10287, metadata !DIExpression()), !dbg !10289
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10290
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10290
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10290
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10288, metadata !DIExpression()), !dbg !10289
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10291
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10291
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !10292
  ret i32 %7, !dbg !10293
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !10294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10298, metadata !DIExpression()), !dbg !10299
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10300
  %3 = icmp ult i32 %2, 4, !dbg !10300
  br i1 %3, label %4, label %7, !dbg !10300

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10300
  %6 = load i32, i32* %5, align 4, !dbg !10300
  br label %7, !dbg !10300

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10301
  ret i32 %8, !dbg !10303
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10306, metadata !DIExpression()), !dbg !10308
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10309
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10309
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10309
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10307, metadata !DIExpression()), !dbg !10308
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10310
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10310
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !10311
  ret i32 %7, !dbg !10312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10317, metadata !DIExpression()), !dbg !10319
  call void @llvm.dbg.value(metadata i32 %1, metadata !10318, metadata !DIExpression()), !dbg !10319
  %3 = icmp eq i32 %0, 4096, !dbg !10320
  %4 = icmp eq i32 %1, 0, !dbg !10320
  %5 = select i1 %4, i32 4, i32 3, !dbg !10320
  %6 = select i1 %4, i32 3, i32 2, !dbg !10320
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10320
  ret i32 %7, !dbg !10321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10322 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10324, metadata !DIExpression()), !dbg !10326
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10327
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10327
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10327
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10325, metadata !DIExpression()), !dbg !10326
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10328
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10328
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !10329
  ret i32 %7, !dbg !10330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10335, metadata !DIExpression()), !dbg !10336
  %2 = icmp eq i32 %0, 768, !dbg !10337
  %3 = zext i1 %2 to i32, !dbg !10336
  ret i32 %3, !dbg !10339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10340 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10342, metadata !DIExpression()), !dbg !10343
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10344
  %3 = load volatile i32, i32* %2, align 4, !dbg !10344
  %4 = and i32 %3, 768, !dbg !10344
  ret i32 %4, !dbg !10345
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10348, metadata !DIExpression()), !dbg !10349
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10350
  %3 = load volatile i32, i32* %2, align 4, !dbg !10350
  %4 = and i32 %3, 4096, !dbg !10350
  ret i32 %4, !dbg !10351
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10352 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10354, metadata !DIExpression()), !dbg !10355
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10356
  %3 = load volatile i32, i32* %2, align 4, !dbg !10356
  %4 = and i32 %3, 12288, !dbg !10356
  ret i32 %4, !dbg !10357
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10358 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10360, metadata !DIExpression()), !dbg !10361
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10362
  %3 = load volatile i32, i32* %2, align 4, !dbg !10362
  %4 = and i32 %3, 1536, !dbg !10362
  ret i32 %4, !dbg !10363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10368, metadata !DIExpression()), !dbg !10369
  %2 = icmp eq i32 %0, 2, !dbg !10370
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10370
  %4 = icmp eq i32 %0, 1, !dbg !10370
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10370
  ret i32 %5, !dbg !10371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10376, metadata !DIExpression()), !dbg !10377
  %2 = icmp ult i32 %0, 3, !dbg !10378
  br i1 %2, label %3, label %6, !dbg !10378

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10378
  %5 = load i32, i32* %4, align 4, !dbg !10378
  br label %6, !dbg !10378

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10379
  ret i32 %7, !dbg !10381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10386, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.value(metadata i32 %1, metadata !10387, metadata !DIExpression()), !dbg !10388
  %3 = icmp eq i32 %0, 4, !dbg !10389
  %4 = icmp eq i32 %1, 0, !dbg !10389
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10389
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10389
  ret i32 %6, !dbg !10390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10395, metadata !DIExpression()), !dbg !10396
  %2 = icmp eq i32 %0, 1, !dbg !10397
  %3 = select i1 %2, i32 768, i32 0, !dbg !10396
  ret i32 %3, !dbg !10399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10400 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10402, metadata !DIExpression()), !dbg !10403
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10404
  %3 = load volatile i32, i32* %2, align 4, !dbg !10404
  %4 = and i32 %3, -8193, !dbg !10404
  store volatile i32 %4, i32* %2, align 4, !dbg !10404
  ret void, !dbg !10405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10410, metadata !DIExpression()), !dbg !10413
  call void @llvm.dbg.value(metadata i32 %1, metadata !10411, metadata !DIExpression()), !dbg !10413
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10414
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10414
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10414
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10412, metadata !DIExpression()), !dbg !10413
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10415
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10415
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10416
  ret void, !dbg !10417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10420, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i32 %1, metadata !10421, metadata !DIExpression()), !dbg !10423
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10424
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10424
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10424
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10422, metadata !DIExpression()), !dbg !10423
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10425
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10425
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10426
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10430, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 %1, metadata !10431, metadata !DIExpression()), !dbg !10433
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10434
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10434
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10432, metadata !DIExpression()), !dbg !10433
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10435
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10435
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10436
  ret void, !dbg !10437
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10438 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10440, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 %1, metadata !10441, metadata !DIExpression()), !dbg !10443
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10444
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10444
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10444
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10442, metadata !DIExpression()), !dbg !10443
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10445
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10445
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !10446
  ret void, !dbg !10447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10448 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10450, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i32 %1, metadata !10451, metadata !DIExpression()), !dbg !10455
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10456
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10456
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10456
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10452, metadata !DIExpression()), !dbg !10455
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10457
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10457
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10457
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10453, metadata !DIExpression()), !dbg !10455
  %10 = bitcast i32* %3 to i8*, !dbg !10458
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10458
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10459
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10459
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10463
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10463
  %15 = load i8*, i8** %14, align 4, !dbg !10463
  call void @llvm.dbg.value(metadata i32* %3, metadata !10454, metadata !DIExpression(DW_OP_deref)), !dbg !10455
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !10464
  %17 = icmp slt i32 %16, 0, !dbg !10465
  br i1 %17, label %23, label %18, !dbg !10466

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10467
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10467
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #27, !dbg !10468
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10469
  %22 = load i32, i32* %3, align 4, !dbg !10470
  call void @llvm.dbg.value(metadata i32 %22, metadata !10454, metadata !DIExpression()), !dbg !10455
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #27, !dbg !10471
  br label %23, !dbg !10472

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10472
  ret void, !dbg !10472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10473 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10475, metadata !DIExpression()), !dbg !10476
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10477
  %3 = load volatile i32, i32* %2, align 4, !dbg !10477
  %4 = or i32 %3, 8192, !dbg !10477
  store volatile i32 %4, i32* %2, align 4, !dbg !10477
  ret void, !dbg !10478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10481, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i8* %1, metadata !10482, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.value(metadata i32* %2, metadata !10483, metadata !DIExpression()), !dbg !10485
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10486
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10486
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10484, metadata !DIExpression()), !dbg !10485
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10487
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10487
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10489
  br i1 %9, label %12, label %10, !dbg !10490

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !10491
  br label %12, !dbg !10492

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10485
  ret i32 %13, !dbg !10493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10494 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10498, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 0, metadata !10499, metadata !DIExpression()), !dbg !10500
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10501
  %3 = load volatile i32, i32* %2, align 4, !dbg !10501
  %4 = and i32 %3, -32769, !dbg !10501
  store volatile i32 %4, i32* %2, align 4, !dbg !10501
  ret void, !dbg !10502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10503 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10507, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32 %1, metadata !10508, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32 0, metadata !10509, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32 %2, metadata !10510, metadata !DIExpression()), !dbg !10511
  %4 = zext i32 %1 to i64, !dbg !10512
  %5 = mul nuw nsw i64 %4, 25, !dbg !10512
  %6 = zext i32 %2 to i64, !dbg !10512
  %7 = shl nuw nsw i64 %6, 2, !dbg !10512
  %8 = udiv i64 %5, %7, !dbg !10512
  %9 = trunc i64 %8 to i32, !dbg !10512
  %10 = udiv i32 %9, 100, !dbg !10512
  %11 = shl nuw nsw i32 %10, 4, !dbg !10512
  %12 = mul i32 %10, -100, !dbg !10512
  %13 = add i32 %12, %9, !dbg !10512
  %14 = shl i32 %13, 4, !dbg !10512
  %15 = add i32 %14, 50, !dbg !10512
  %16 = udiv i32 %15, 100, !dbg !10512
  %17 = and i32 %16, 240, !dbg !10512
  %18 = add nuw nsw i32 %17, %11, !dbg !10512
  %19 = and i32 %16, 15, !dbg !10512
  %20 = and i32 %18, 65520, !dbg !10515
  %21 = or i32 %20, %19, !dbg !10515
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10516
  store volatile i32 %21, i32* %22, align 4, !dbg !10517
  ret void, !dbg !10518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10521, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata i32 %1, metadata !10522, metadata !DIExpression()), !dbg !10523
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10524
  %4 = load volatile i32, i32* %3, align 4, !dbg !10524
  %5 = and i32 %4, -769, !dbg !10524
  %6 = or i32 %5, %1, !dbg !10524
  store volatile i32 %6, i32* %3, align 4, !dbg !10524
  ret void, !dbg !10525
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10528, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.value(metadata i32 %1, metadata !10529, metadata !DIExpression()), !dbg !10530
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10531
  %4 = load volatile i32, i32* %3, align 4, !dbg !10531
  %5 = and i32 %4, -4097, !dbg !10531
  %6 = or i32 %5, %1, !dbg !10531
  store volatile i32 %6, i32* %3, align 4, !dbg !10531
  ret void, !dbg !10532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10535, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata i32 %1, metadata !10536, metadata !DIExpression()), !dbg !10537
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10538
  %4 = load volatile i32, i32* %3, align 4, !dbg !10538
  %5 = and i32 %4, -12289, !dbg !10538
  %6 = or i32 %5, %1, !dbg !10538
  store volatile i32 %6, i32* %3, align 4, !dbg !10538
  ret void, !dbg !10539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10540 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10542, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 %1, metadata !10543, metadata !DIExpression()), !dbg !10544
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10545
  %4 = load volatile i32, i32* %3, align 4, !dbg !10545
  %5 = and i32 %4, -1537, !dbg !10545
  %6 = or i32 %5, %1, !dbg !10545
  store volatile i32 %6, i32* %3, align 4, !dbg !10545
  ret void, !dbg !10546
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10547 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10549, metadata !DIExpression()), !dbg !10550
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10551
  %3 = load volatile i32, i32* %2, align 4, !dbg !10551
  %4 = and i32 %3, 1, !dbg !10551
  ret i32 %4, !dbg !10552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10553 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10555, metadata !DIExpression()), !dbg !10556
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10557
  %3 = load volatile i32, i32* %2, align 4, !dbg !10557
  %4 = lshr i32 %3, 1, !dbg !10558
  %5 = and i32 %4, 1, !dbg !10558
  ret i32 %5, !dbg !10559
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10562, metadata !DIExpression()), !dbg !10563
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10564
  %3 = load volatile i32, i32* %2, align 4, !dbg !10564
  %4 = lshr i32 %3, 8, !dbg !10565
  %5 = and i32 %4, 1, !dbg !10565
  ret i32 %5, !dbg !10566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10567 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10569, metadata !DIExpression()), !dbg !10570
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10571
  store volatile i32 -257, i32* %2, align 4, !dbg !10571
  ret void, !dbg !10572
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10573 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10575, metadata !DIExpression()), !dbg !10577
  %3 = bitcast i32* %2 to i8*, !dbg !10578
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10576, metadata !DIExpression()), !dbg !10579
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10580
  %5 = load volatile i32, i32* %4, align 4, !dbg !10580
  store volatile i32 %5, i32* %2, align 4, !dbg !10581
  %6 = load volatile i32, i32* %2, align 4, !dbg !10582
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10583
  %8 = load volatile i32, i32* %7, align 4, !dbg !10583
  store volatile i32 %8, i32* %2, align 4, !dbg !10584
  %9 = load volatile i32, i32* %2, align 4, !dbg !10585
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10586
  ret void, !dbg !10586
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10587 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10589, metadata !DIExpression()), !dbg !10591
  %3 = bitcast i32* %2 to i8*, !dbg !10592
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10592
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10590, metadata !DIExpression()), !dbg !10593
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10594
  %5 = load volatile i32, i32* %4, align 4, !dbg !10594
  store volatile i32 %5, i32* %2, align 4, !dbg !10595
  %6 = load volatile i32, i32* %2, align 4, !dbg !10596
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10597
  %8 = load volatile i32, i32* %7, align 4, !dbg !10597
  store volatile i32 %8, i32* %2, align 4, !dbg !10598
  %9 = load volatile i32, i32* %2, align 4, !dbg !10599
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10600
  ret void, !dbg !10600
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10601 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10603, metadata !DIExpression()), !dbg !10605
  %3 = bitcast i32* %2 to i8*, !dbg !10606
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10606
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10604, metadata !DIExpression()), !dbg !10607
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10608
  %5 = load volatile i32, i32* %4, align 4, !dbg !10608
  store volatile i32 %5, i32* %2, align 4, !dbg !10609
  %6 = load volatile i32, i32* %2, align 4, !dbg !10610
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10611
  %8 = load volatile i32, i32* %7, align 4, !dbg !10611
  store volatile i32 %8, i32* %2, align 4, !dbg !10612
  %9 = load volatile i32, i32* %2, align 4, !dbg !10613
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10614
  ret void, !dbg !10614
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1657, metadata !DIExpression()), !dbg !10615
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #26, !dbg !10616
  tail call void @arch_irq_enable(i32 noundef 37) #26, !dbg !10618
  ret void, !dbg !10618
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10619 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10621, metadata !DIExpression()), !dbg !10623
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10624
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10624
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10624
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10622, metadata !DIExpression()), !dbg !10623
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10625
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10625
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10627
  br i1 %7, label %11, label %8, !dbg !10628

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10629
  %10 = load i8*, i8** %9, align 4, !dbg !10629
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #26, !dbg !10631
  br label %11, !dbg !10632

11:                                               ; preds = %8, %1
  ret void, !dbg !10633
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10636, metadata !DIExpression()), !dbg !10642
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10643
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10643
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10643
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10637, metadata !DIExpression()), !dbg !10642
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10644
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10644
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10644
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10638, metadata !DIExpression()), !dbg !10642
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !10645
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10646
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10646
  %10 = tail call fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %9) #27, !dbg !10648
  br i1 %10, label %11, label %51, !dbg !10649

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10650
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10651
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10651
  %15 = load i8*, i8** %14, align 4, !dbg !10651
  %16 = tail call fastcc i32 @clock_control_on.66(%struct.device* noundef %12, i8* noundef %15) #27, !dbg !10652
  call void @llvm.dbg.value(metadata i32 %16, metadata !10641, metadata !DIExpression()), !dbg !10642
  %17 = icmp eq i32 %16, 0, !dbg !10653
  br i1 %17, label %18, label %51, !dbg !10655

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10656
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10656
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #27, !dbg !10657
  call void @llvm.dbg.value(metadata i32 %21, metadata !10641, metadata !DIExpression()), !dbg !10642
  %22 = icmp slt i32 %21, 0, !dbg !10658
  br i1 %22, label %51, label %23, !dbg !10660

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10661
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10661
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #27, !dbg !10662
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10663
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #27, !dbg !10664
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10665
  %28 = load i32, i32* %27, align 4, !dbg !10665
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10667

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10639, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 4096, metadata !10640, metadata !DIExpression()), !dbg !10642
  br label %31, !dbg !10668

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10639, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 0, metadata !10640, metadata !DIExpression()), !dbg !10642
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10671
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10671
  call void @llvm.dbg.value(metadata i32 %33, metadata !10640, metadata !DIExpression()), !dbg !10642
  call void @llvm.dbg.value(metadata i32 %32, metadata !10639, metadata !DIExpression()), !dbg !10642
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10672
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #27, !dbg !10673
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10674
  %36 = load i8, i8* %35, align 4, !dbg !10674, !range !6299
  %37 = icmp eq i8 %36, 0, !dbg !10674
  br i1 %37, label %39, label %38, !dbg !10676

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !10677
  br label %39, !dbg !10679

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10680
  %41 = load i32, i32* %40, align 4, !dbg !10680
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #27, !dbg !10681
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10682
  %43 = load i8, i8* %42, align 4, !dbg !10682, !range !6299
  %44 = icmp eq i8 %43, 0, !dbg !10682
  br i1 %44, label %47, label %45, !dbg !10684

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10685
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #27, !dbg !10687
  br label %47, !dbg !10688

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10689
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #27, !dbg !10690
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10691
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10691
  tail call void %50(%struct.device* noundef nonnull %0) #26, !dbg !10692
  br label %51, !dbg !10693

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10642
  ret i32 %52, !dbg !10694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10695 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10697, metadata !DIExpression()), !dbg !10701
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10702
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10702
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10702
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10698, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10699, metadata !DIExpression()), !dbg !10701
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10703
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10704
  ret void, !dbg !10705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.65(%struct.device* noundef %0) unnamed_addr #1 !dbg !10706 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10710, metadata !DIExpression()), !dbg !10711
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10712, !srcloc !10714
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) #27, !dbg !10715
  ret i1 %2, !dbg !10716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.66(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10719, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.value(metadata i8* %1, metadata !10720, metadata !DIExpression()), !dbg !10722
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10723
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10723
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10723
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10721, metadata !DIExpression()), !dbg !10722
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10724
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10724
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10725
  ret i32 %8, !dbg !10726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10727 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10731, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i8 0, metadata !10732, metadata !DIExpression()), !dbg !10735
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10736
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10736
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10734, metadata !DIExpression(DW_OP_deref)), !dbg !10735
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %4, metadata !10733, metadata !DIExpression()), !dbg !10735
  %5 = icmp slt i32 %4, 0, !dbg !10738
  br i1 %5, label %9, label %6, !dbg !10740

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10741
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10734, metadata !DIExpression()), !dbg !10735
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !10742
  br label %9, !dbg !10743

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10735
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10744
  ret i32 %10, !dbg !10744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10745 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10747, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i32 12, metadata !10748, metadata !DIExpression()), !dbg !10751
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10752

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10054, metadata !DIExpression()) #25, !dbg !10753
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10756, !srcloc !10064
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()) #25, !dbg !10753
  %5 = or i32 %4, 12, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %5, metadata !10749, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.value(metadata i32 %5, metadata !10067, metadata !DIExpression()) #25, !dbg !10759
  call void @llvm.dbg.value(metadata i32* %2, metadata !10072, metadata !DIExpression()) #25, !dbg !10759
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10761, !srcloc !10077
  call void @llvm.dbg.value(metadata i32 %6, metadata !10073, metadata !DIExpression()) #25, !dbg !10759
  %7 = icmp eq i32 %6, 0, !dbg !10752
  br i1 %7, label %8, label %3, !dbg !10757, !llvm.loop !10762

8:                                                ; preds = %3
  ret void, !dbg !10763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10764 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10766, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata i32 %1, metadata !10767, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata i32 %2, metadata !10768, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata i32 0, metadata !10769, metadata !DIExpression()), !dbg !10770
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10771
  %5 = load volatile i32, i32* %4, align 4, !dbg !10771
  %6 = and i32 %5, -5633, !dbg !10771
  %7 = or i32 %2, %1, !dbg !10771
  %8 = or i32 %7, %6, !dbg !10771
  store volatile i32 %8, i32* %4, align 4, !dbg !10771
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10772
  %10 = load volatile i32, i32* %9, align 4, !dbg !10772
  %11 = and i32 %10, -12289, !dbg !10772
  store volatile i32 %11, i32* %9, align 4, !dbg !10772
  ret void, !dbg !10773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10774 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10776, metadata !DIExpression()), !dbg !10777
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10778
  %3 = load volatile i32, i32* %2, align 4, !dbg !10778
  %4 = or i32 %3, 8, !dbg !10778
  store volatile i32 %4, i32* %2, align 4, !dbg !10778
  ret void, !dbg !10779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10780 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10784, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10785, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 0, metadata !10786, metadata !DIExpression()), !dbg !10787
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10788
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10788
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10789
  %5 = load i8, i8* %4, align 4, !dbg !10789
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10790
  ret i32 %6, !dbg !10791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) unnamed_addr #1 !dbg !10792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10794, metadata !DIExpression()), !dbg !10795
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10796
  ret i1 %2, !dbg !10797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10800, metadata !DIExpression()), !dbg !10801
  tail call fastcc void @__NVIC_SetPriority.69() #27, !dbg !10802
  store i32 8399, i32* @last_load, align 4, !dbg !10803
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10804
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10805
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10806
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10807
  %3 = or i32 %2, 7, !dbg !10807
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10807
  ret i32 0, !dbg !10808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69() unnamed_addr #15 !dbg !10809 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10811, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata i32 1, metadata !10812, metadata !DIExpression()), !dbg !10813
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10814
  ret void, !dbg !10817
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10818 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10820, metadata !DIExpression()), !dbg !10822
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !10823
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10824
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10825
  %5 = add i32 %4, %3, !dbg !10825
  store i32 %5, i32* @cycle_count, align 4, !dbg !10825
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10826
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10827
  %7 = sub i32 %5, %6, !dbg !10830
  %8 = udiv i32 %7, 8400, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %8, metadata !10821, metadata !DIExpression()), !dbg !10822
  %9 = mul nuw i32 %8, 8400, !dbg !10832
  %10 = add i32 %9, %6, !dbg !10833
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10833
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10834
  tail call void @z_arm_int_exit() #26, !dbg !10835
  ret void, !dbg !10836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10837 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10842
  call void @llvm.dbg.value(metadata i32 %1, metadata !10839, metadata !DIExpression()), !dbg !10843
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10844
  call void @llvm.dbg.value(metadata i32 %2, metadata !10840, metadata !DIExpression()), !dbg !10843
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %3, metadata !10841, metadata !DIExpression()), !dbg !10843
  %4 = and i32 %2, 65536, !dbg !10846
  %5 = icmp ne i32 %4, 0, !dbg !10846
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10848
  %8 = load i32, i32* @last_load, align 4, !dbg !10843
  br i1 %7, label %9, label %13, !dbg !10848

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10849
  %11 = add i32 %10, %8, !dbg !10849
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10849
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10851
  br label %13, !dbg !10852

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10853
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10854
  %16 = add i32 %14, %15, !dbg !10855
  ret i32 %16, !dbg !10856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10861, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata i1 %1, metadata !10862, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10874
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10875
  br i1 %4, label %5, label %8, !dbg !10875

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10877
  %7 = and i32 %6, -2, !dbg !10877
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10877
  store i32 -16777216, i32* @last_load, align 4, !dbg !10879
  br label %54, !dbg !10880

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %9, metadata !10866, metadata !DIExpression()), !dbg !10874
  br i1 %3, label %18, label %10, !dbg !10882

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10861, metadata !DIExpression()), !dbg !10874
  %12 = icmp slt i32 %11, 1, !dbg !10883
  br i1 %12, label %18, label %13, !dbg !10883

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10883
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10883
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10883
  %17 = add nuw nsw i32 %16, 8399, !dbg !10883
  br label %18, !dbg !10883

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10861, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10884, metadata !DIExpression()) #25, !dbg !10891
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10893, !srcloc !10899
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %21, metadata !10896, metadata !DIExpression()) #25, !dbg !10900
  call void @llvm.dbg.value(metadata i32 undef, metadata !10897, metadata !DIExpression()) #25, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %21, metadata !10890, metadata !DIExpression()) #25, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %21, metadata !10867, metadata !DIExpression()), !dbg !10874
  %22 = tail call fastcc i32 @elapsed() #27, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %22, metadata !10872, metadata !DIExpression()), !dbg !10874
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %23, metadata !10864, metadata !DIExpression()), !dbg !10874
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10903
  %25 = add i32 %24, %22, !dbg !10903
  store i32 %25, i32* @cycle_count, align 4, !dbg !10903
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10904
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10905
  %27 = sub i32 %25, %26, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %27, metadata !10873, metadata !DIExpression()), !dbg !10874
  %28 = icmp slt i32 %27, 0, !dbg !10907
  br i1 %28, label %38, label %29, !dbg !10909

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10863, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10863, metadata !DIExpression()), !dbg !10874
  %30 = add nuw i32 %19, %27, !dbg !10910
  %31 = urem i32 %30, 8400, !dbg !10912
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10863, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10874
  %32 = sub nuw nsw i32 %19, %31, !dbg !10913
  call void @llvm.dbg.value(metadata i32 %32, metadata !10863, metadata !DIExpression()), !dbg !10874
  %33 = icmp ugt i32 %32, 1024, !dbg !10914
  br i1 %33, label %34, label %36, !dbg !10914

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10863, metadata !DIExpression()), !dbg !10874
  %35 = icmp ugt i32 %32, 16766400, !dbg !10915
  br i1 %35, label %38, label %36, !dbg !10917

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10918
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %40, metadata !10865, metadata !DIExpression()), !dbg !10874
  %41 = add nsw i32 %39, -1, !dbg !10920
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10921
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10922
  %42 = icmp ult i32 %23, %40, !dbg !10923
  br i1 %42, label %43, label %48, !dbg !10925

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10926
  %45 = add i32 %23, %9, !dbg !10928
  %46 = sub i32 %45, %40, !dbg !10929
  %47 = add i32 %46, %44, !dbg !10926
  br label %52, !dbg !10930

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10931
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10933
  %51 = add i32 %49, %50, !dbg !10933
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10934
  store i32 %53, i32* @cycle_count, align 4, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %21, metadata !10935, metadata !DIExpression()) #25, !dbg !10941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10940, metadata !DIExpression()) #25, !dbg !10941
  call void @llvm.dbg.value(metadata i32 %21, metadata !10943, metadata !DIExpression()) #25, !dbg !10946
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10948, !srcloc !10949
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10950
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10951 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10884, metadata !DIExpression()) #25, !dbg !10955
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10957, !srcloc !10899
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %2, metadata !10896, metadata !DIExpression()) #25, !dbg !10959
  call void @llvm.dbg.value(metadata i32 undef, metadata !10897, metadata !DIExpression()) #25, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %2, metadata !10890, metadata !DIExpression()) #25, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %2, metadata !10953, metadata !DIExpression()), !dbg !10960
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10961
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10962
  %5 = add i32 %4, %3, !dbg !10963
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10964
  %7 = sub i32 %5, %6, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %7, metadata !10954, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.value(metadata i32 %2, metadata !10935, metadata !DIExpression()) #25, !dbg !10966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10940, metadata !DIExpression()) #25, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %2, metadata !10943, metadata !DIExpression()) #25, !dbg !10968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10970, !srcloc !10949
  %8 = udiv i32 %7, 8400, !dbg !10971
  ret i32 %8, !dbg !10972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10884, metadata !DIExpression()) #25, !dbg !10977
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10979, !srcloc !10899
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %2, metadata !10896, metadata !DIExpression()) #25, !dbg !10981
  call void @llvm.dbg.value(metadata i32 undef, metadata !10897, metadata !DIExpression()) #25, !dbg !10981
  call void @llvm.dbg.value(metadata i32 %2, metadata !10890, metadata !DIExpression()) #25, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %2, metadata !10975, metadata !DIExpression()), !dbg !10982
  %3 = tail call fastcc i32 @elapsed() #27, !dbg !10983
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10984
  %5 = add i32 %4, %3, !dbg !10985
  call void @llvm.dbg.value(metadata i32 %5, metadata !10976, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32 %2, metadata !10935, metadata !DIExpression()) #25, !dbg !10986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10940, metadata !DIExpression()) #25, !dbg !10986
  call void @llvm.dbg.value(metadata i32 %2, metadata !10943, metadata !DIExpression()) #25, !dbg !10988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10990, !srcloc !10949
  ret i32 %5, !dbg !10991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10992 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10993
  %2 = icmp eq i32 %1, -16777216, !dbg !10995
  br i1 %2, label %3, label %6, !dbg !10996

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10997
  %5 = or i32 %4, 1, !dbg !10997
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10997
  br label %6, !dbg !10999

6:                                                ; preds = %3, %0
  ret void, !dbg !11000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11001 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11002
  %2 = and i32 %1, -2, !dbg !11002
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11002
  ret void, !dbg !11003
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11004 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11030, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata i8 %1, metadata !11031, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11032, metadata !DIExpression()), !dbg !11033
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11034
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11034
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11033
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11035
  %8 = load i8, i8* %6, align 4, !dbg !11036
  %9 = zext i8 %8 to i32, !dbg !11037
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11037
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11038
  br i1 %11, label %18, label %24, !dbg !11039

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11033
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11035
  %14 = load i8, i8* %6, align 4, !dbg !11036
  %15 = zext i8 %14 to i32, !dbg !11037
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11037
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11038
  br i1 %17, label %18, label %24, !dbg !11039, !llvm.loop !11040

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11042
  %21 = load i8, i8* %20, align 1, !dbg !11042
  %22 = icmp eq i8 %21, %1, !dbg !11045
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11046
  br i1 %22, label %24, label %12, !dbg !11047

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11033
  ret i32 %25, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11060, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i8 %1, metadata !11061, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 %2, metadata !11062, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 0, metadata !11065, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata i8 0, metadata !11067, metadata !DIExpression()), !dbg !11077
  %4 = icmp eq i8 %1, 0, !dbg !11078
  br i1 %4, label %35, label %5, !dbg !11079

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11078
  br label %9, !dbg !11079

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11067, metadata !DIExpression()), !dbg !11077
  call void @llvm.dbg.value(metadata i32 %29, metadata !11065, metadata !DIExpression()), !dbg !11076
  %8 = icmp eq i32 %34, %6, !dbg !11078
  br i1 %8, label %35, label %9, !dbg !11079, !llvm.loop !11080

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11067, metadata !DIExpression()), !dbg !11077
  call void @llvm.dbg.value(metadata i32 %11, metadata !11065, metadata !DIExpression()), !dbg !11076
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11082
  %13 = load i32, i32* %12, align 4, !dbg !11082
  call void @llvm.dbg.value(metadata i32 %13, metadata !11064, metadata !DIExpression()), !dbg !11076
  %14 = and i32 %13, 31, !dbg !11083
  %15 = icmp ult i32 %14, 16, !dbg !11084
  br i1 %15, label %16, label %20, !dbg !11085

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11086
  %18 = load i32, i32* %17, align 4, !dbg !11086
  %19 = or i32 %18, 32, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %19, metadata !11065, metadata !DIExpression()), !dbg !11076
  br label %28, !dbg !11089

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11090

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11091
  %23 = load i32, i32* %22, align 4, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %23, metadata !11069, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11092
  %24 = lshr i32 %23, 7, !dbg !11093
  %25 = and i32 %24, 16, !dbg !11093
  %26 = or i32 %25, %23, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %26, metadata !11065, metadata !DIExpression()), !dbg !11076
  br label %28, !dbg !11094

27:                                               ; preds = %20
  br label %28, !dbg !11095

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11076
  call void @llvm.dbg.value(metadata i32 %29, metadata !11065, metadata !DIExpression()), !dbg !11076
  %30 = lshr i32 %13, 5, !dbg !11095
  %31 = and i32 %30, 255, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %31, metadata !11063, metadata !DIExpression()), !dbg !11076
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !11096
  call void @llvm.dbg.value(metadata i32 %32, metadata !11066, metadata !DIExpression()), !dbg !11076
  %33 = icmp slt i32 %32, 0, !dbg !11097
  %34 = add nuw nsw i32 %10, 1, !dbg !11099
  call void @llvm.dbg.value(metadata i32 %34, metadata !11067, metadata !DIExpression()), !dbg !11077
  br i1 %33, label %35, label %7, !dbg !11100

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11106, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i32 %1, metadata !11107, metadata !DIExpression()), !dbg !11110
  call void @llvm.dbg.value(metadata i32 %2, metadata !11108, metadata !DIExpression()), !dbg !11110
  %4 = icmp ugt i32 %0, 175, !dbg !11111
  br i1 %4, label %16, label %5, !dbg !11113

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11114
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11115
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11115
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11109, metadata !DIExpression()), !dbg !11110
  %9 = add nsw i32 %6, -8, !dbg !11116
  %10 = icmp ult i32 %9, 3, !dbg !11116
  br i1 %10, label %16, label %11, !dbg !11118

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %8) #27, !dbg !11119
  br i1 %12, label %13, label %16, !dbg !11120

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11121
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !11122
  br label %16, !dbg !11123

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11110
  ret i32 %17, !dbg !11124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.74(%struct.device* noundef %0) unnamed_addr #1 !dbg !11125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11129, metadata !DIExpression()), !dbg !11130
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11131, !srcloc !11133
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) #27, !dbg !11134
  ret i1 %2, !dbg !11135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.75(%struct.device* noundef %0) unnamed_addr #1 !dbg !11136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11138, metadata !DIExpression()), !dbg !11139
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !11140
  ret i1 %2, !dbg !11141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11142 {
  ret void, !dbg !11143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11144 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11146, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 0, metadata !11147, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 2, metadata !11148, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 0, metadata !11149, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 2, metadata !11150, metadata !DIExpression()), !dbg !11151
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11152
  %2 = and i32 %1, 12, !dbg !11153
  call void @llvm.dbg.value(metadata i32 %2, metadata !11146, metadata !DIExpression()), !dbg !11151
  %3 = icmp eq i32 %2, 8, !dbg !11154
  br i1 %3, label %4, label %18, !dbg !11154

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11155
  call void @llvm.dbg.value(metadata i32 %5, metadata !11149, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11151
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11157
  %7 = and i32 %6, 63, !dbg !11158
  call void @llvm.dbg.value(metadata i32 %7, metadata !11150, metadata !DIExpression()), !dbg !11151
  %8 = udiv i32 16000000, %7, !dbg !11159
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11159
  %10 = lshr i32 %9, 6, !dbg !11159
  %11 = and i32 %10, 511, !dbg !11159
  %12 = mul i32 %11, %8, !dbg !11159
  call void @llvm.dbg.value(metadata i32 %12, metadata !11147, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 %12, metadata !11147, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.value(metadata i32 %12, metadata !11147, metadata !DIExpression()), !dbg !11151
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11161
  %14 = lshr i32 %13, 15, !dbg !11162
  %15 = and i32 %14, 6, !dbg !11162
  %16 = add nuw nsw i32 %15, 2, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %16, metadata !11148, metadata !DIExpression()), !dbg !11151
  %17 = udiv i32 %12, %16, !dbg !11163
  br label %18, !dbg !11164

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11165
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11166
  %21 = lshr i32 %20, 4, !dbg !11167
  %22 = and i32 %21, 15, !dbg !11167
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11168
  %24 = load i8, i8* %23, align 1, !dbg !11168
  %25 = zext i8 %24 to i32, !dbg !11168
  call void @llvm.dbg.value(metadata i32 %25, metadata !11146, metadata !DIExpression()), !dbg !11151
  %26 = lshr i32 %19, %25, !dbg !11169
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11169
  ret void, !dbg !11170
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11171 {
  ret i32 0, !dbg !11176
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11177 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11204, metadata !DIExpression()), !dbg !11215
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11216
  br i1 %3, label %317, label %4, !dbg !11218

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11219
  %6 = load i32, i32* %5, align 4, !dbg !11219
  %7 = and i32 %6, 1, !dbg !11221
  %8 = icmp eq i32 %7, 0, !dbg !11222
  br i1 %8, label %66, label %9, !dbg !11223

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11224
  %11 = and i32 %10, 12, !dbg !11224
  %12 = icmp eq i32 %11, 4, !dbg !11227
  br i1 %12, label %21, label %13, !dbg !11228

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11229
  %15 = and i32 %14, 12, !dbg !11229
  %16 = icmp eq i32 %15, 8, !dbg !11230
  br i1 %16, label %17, label %29, !dbg !11231

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11232
  %19 = and i32 %18, 4194304, !dbg !11233
  %20 = icmp eq i32 %19, 0, !dbg !11234
  br i1 %20, label %29, label %21, !dbg !11235

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11236
  %23 = and i32 %22, 131072, !dbg !11236
  %24 = icmp eq i32 %23, 0, !dbg !11236
  br i1 %24, label %66, label %25, !dbg !11239

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11240
  %27 = load i32, i32* %26, align 4, !dbg !11240
  %28 = icmp eq i32 %27, 0, !dbg !11241
  br i1 %28, label %317, label %66, !dbg !11242

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11243
  %31 = load i32, i32* %30, align 4, !dbg !11243
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11247

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11248
  %34 = or i32 %33, 65536, !dbg !11248
  br label %45, !dbg !11248

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11250
  %37 = or i32 %36, 262144, !dbg !11250
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11250
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11250
  %39 = or i32 %38, 65536, !dbg !11250
  br label %45, !dbg !11250

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11253
  %42 = and i32 %41, -65537, !dbg !11253
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11253
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11253
  %44 = and i32 %43, -262145, !dbg !11253
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11255
  %47 = load i32, i32* %30, align 4, !dbg !11256
  %48 = icmp eq i32 %47, 0, !dbg !11258
  %49 = tail call i32 @HAL_GetTick() #26, !dbg !11259
  call void @llvm.dbg.value(metadata i32 %49, metadata !11205, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %49, metadata !11205, metadata !DIExpression()), !dbg !11215
  br i1 %48, label %58, label %50, !dbg !11260

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11261
  %52 = and i32 %51, 131072, !dbg !11263
  %53 = icmp eq i32 %52, 0, !dbg !11263
  br i1 %53, label %54, label %66, !dbg !11264

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #26, !dbg !11265
  %56 = sub i32 %55, %49, !dbg !11268
  %57 = icmp ugt i32 %56, 100, !dbg !11269
  br i1 %57, label %317, label %50, !dbg !11270, !llvm.loop !11271

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11273
  %60 = and i32 %59, 131072, !dbg !11273
  %61 = icmp eq i32 %60, 0, !dbg !11273
  br i1 %61, label %66, label %62, !dbg !11275

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !11276
  %64 = sub i32 %63, %49, !dbg !11279
  %65 = icmp ugt i32 %64, 100, !dbg !11280
  br i1 %65, label %317, label %58, !dbg !11281, !llvm.loop !11282

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11284
  %68 = and i32 %67, 2, !dbg !11286
  %69 = icmp eq i32 %68, 0, !dbg !11287
  br i1 %69, label %121, label %70, !dbg !11288

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11289
  %72 = and i32 %71, 12, !dbg !11289
  %73 = icmp eq i32 %72, 0, !dbg !11292
  br i1 %73, label %82, label %74, !dbg !11293

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11294
  %76 = and i32 %75, 12, !dbg !11294
  %77 = icmp eq i32 %76, 8, !dbg !11295
  br i1 %77, label %78, label %90, !dbg !11296

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11297
  %80 = and i32 %79, 4194304, !dbg !11298
  %81 = icmp eq i32 %80, 0, !dbg !11299
  br i1 %81, label %82, label %90, !dbg !11300

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11301
  %84 = and i32 %83, 2, !dbg !11301
  %85 = icmp eq i32 %84, 0, !dbg !11301
  br i1 %85, label %114, label %86, !dbg !11304

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11305
  %88 = load i32, i32* %87, align 4, !dbg !11305
  %89 = icmp eq i32 %88, 1, !dbg !11306
  br i1 %89, label %114, label %317, !dbg !11307

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11308
  %92 = load i32, i32* %91, align 4, !dbg !11308
  %93 = icmp eq i32 %92, 0, !dbg !11311
  br i1 %93, label %104, label %94, !dbg !11312

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11313
  %95 = tail call i32 @HAL_GetTick() #26, !dbg !11315
  call void @llvm.dbg.value(metadata i32 %95, metadata !11205, metadata !DIExpression()), !dbg !11215
  br label %96, !dbg !11316

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11317
  %98 = and i32 %97, 2, !dbg !11318
  %99 = icmp eq i32 %98, 0, !dbg !11318
  br i1 %99, label %100, label %114, !dbg !11316

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #26, !dbg !11319
  %102 = sub i32 %101, %95, !dbg !11322
  %103 = icmp ugt i32 %102, 2, !dbg !11323
  br i1 %103, label %317, label %96, !dbg !11324, !llvm.loop !11325

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11327
  %105 = tail call i32 @HAL_GetTick() #26, !dbg !11329
  call void @llvm.dbg.value(metadata i32 %105, metadata !11205, metadata !DIExpression()), !dbg !11215
  br label %106, !dbg !11330

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11331
  %108 = and i32 %107, 2, !dbg !11331
  %109 = icmp eq i32 %108, 0, !dbg !11331
  br i1 %109, label %121, label %110, !dbg !11330

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !11332
  %112 = sub i32 %111, %105, !dbg !11335
  %113 = icmp ugt i32 %112, 2, !dbg !11336
  br i1 %113, label %317, label %106, !dbg !11337, !llvm.loop !11338

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11340
  %116 = and i32 %115, -249, !dbg !11340
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11340
  %118 = load i32, i32* %117, align 4, !dbg !11340
  %119 = shl i32 %118, 3, !dbg !11340
  %120 = or i32 %119, %116, !dbg !11340
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11340
  br label %121, !dbg !11341

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11341
  %123 = and i32 %122, 8, !dbg !11343
  %124 = icmp eq i32 %123, 0, !dbg !11344
  br i1 %124, label %149, label %125, !dbg !11345

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11346
  %127 = load i32, i32* %126, align 4, !dbg !11346
  %128 = icmp eq i32 %127, 0, !dbg !11349
  br i1 %128, label %139, label %129, !dbg !11350

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11351
  %130 = tail call i32 @HAL_GetTick() #26, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %130, metadata !11205, metadata !DIExpression()), !dbg !11215
  br label %131, !dbg !11354

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11355
  %133 = and i32 %132, 2, !dbg !11356
  %134 = icmp eq i32 %133, 0, !dbg !11356
  br i1 %134, label %135, label %149, !dbg !11354

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #26, !dbg !11357
  %137 = sub i32 %136, %130, !dbg !11360
  %138 = icmp ugt i32 %137, 2, !dbg !11361
  br i1 %138, label %317, label %131, !dbg !11362, !llvm.loop !11363

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11365
  %140 = tail call i32 @HAL_GetTick() #26, !dbg !11367
  call void @llvm.dbg.value(metadata i32 %140, metadata !11205, metadata !DIExpression()), !dbg !11215
  br label %141, !dbg !11368

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11369
  %143 = and i32 %142, 2, !dbg !11369
  %144 = icmp eq i32 %143, 0, !dbg !11369
  br i1 %144, label %149, label %145, !dbg !11368

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !11370
  %147 = sub i32 %146, %140, !dbg !11373
  %148 = icmp ugt i32 %147, 2, !dbg !11374
  br i1 %148, label %317, label %141, !dbg !11375, !llvm.loop !11376

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11378
  %151 = and i32 %150, 4, !dbg !11379
  %152 = icmp eq i32 %151, 0, !dbg !11380
  br i1 %152, label %221, label %153, !dbg !11381

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11207, metadata !DIExpression()), !dbg !11382
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11383
  %155 = and i32 %154, 268435456, !dbg !11383
  %156 = icmp eq i32 %155, 0, !dbg !11383
  br i1 %156, label %157, label %164, !dbg !11384

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11385
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11385
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11211, metadata !DIExpression()), !dbg !11385
  store volatile i32 0, i32* %2, align 4, !dbg !11385
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11385
  %160 = or i32 %159, 268435456, !dbg !11385
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11385
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11385
  %162 = and i32 %161, 268435456, !dbg !11385
  store volatile i32 %162, i32* %2, align 4, !dbg !11385
  %163 = load volatile i32, i32* %2, align 4, !dbg !11385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11386
  call void @llvm.dbg.value(metadata i32 1, metadata !11207, metadata !DIExpression()), !dbg !11382
  br label %164, !dbg !11387

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11207, metadata !DIExpression()), !dbg !11382
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11388
  %166 = and i32 %165, 256, !dbg !11388
  %167 = icmp eq i32 %166, 0, !dbg !11388
  br i1 %167, label %168, label %180, !dbg !11390

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11391
  %170 = or i32 %169, 256, !dbg !11391
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11391
  %171 = tail call i32 @HAL_GetTick() #26, !dbg !11393
  call void @llvm.dbg.value(metadata i32 %171, metadata !11205, metadata !DIExpression()), !dbg !11215
  br label %172, !dbg !11394

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11395
  %174 = and i32 %173, 256, !dbg !11395
  %175 = icmp eq i32 %174, 0, !dbg !11395
  br i1 %175, label %176, label %180, !dbg !11394

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #26, !dbg !11396
  %178 = sub i32 %177, %171, !dbg !11399
  %179 = icmp ugt i32 %178, 2, !dbg !11400
  br i1 %179, label %317, label %172, !dbg !11401, !llvm.loop !11402

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11404
  %182 = load i32, i32* %181, align 4, !dbg !11404
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11407

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11408
  %185 = or i32 %184, 1, !dbg !11408
  br label %196, !dbg !11408

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11410
  %188 = or i32 %187, 4, !dbg !11410
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11410
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11410
  %190 = or i32 %189, 1, !dbg !11410
  br label %196, !dbg !11410

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11413
  %193 = and i32 %192, -2, !dbg !11413
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11413
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11413
  %195 = and i32 %194, -5, !dbg !11413
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11415
  %198 = load i32, i32* %181, align 4, !dbg !11416
  %199 = icmp eq i32 %198, 0, !dbg !11418
  %200 = tail call i32 @HAL_GetTick() #26, !dbg !11419
  call void @llvm.dbg.value(metadata i32 %200, metadata !11205, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %200, metadata !11205, metadata !DIExpression()), !dbg !11215
  br i1 %199, label %209, label %201, !dbg !11420

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11421
  %203 = and i32 %202, 2, !dbg !11423
  %204 = icmp eq i32 %203, 0, !dbg !11423
  br i1 %204, label %205, label %217, !dbg !11424

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !11425
  %207 = sub i32 %206, %200, !dbg !11428
  %208 = icmp ugt i32 %207, 5000, !dbg !11429
  br i1 %208, label %317, label %201, !dbg !11430, !llvm.loop !11431

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11433
  %211 = and i32 %210, 2, !dbg !11433
  %212 = icmp eq i32 %211, 0, !dbg !11433
  br i1 %212, label %217, label %213, !dbg !11435

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #26, !dbg !11436
  %215 = sub i32 %214, %200, !dbg !11439
  %216 = icmp ugt i32 %215, 5000, !dbg !11440
  br i1 %216, label %317, label %209, !dbg !11441, !llvm.loop !11442

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11444

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11445
  %220 = and i32 %219, -268435457, !dbg !11445
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11445
  br label %221, !dbg !11448

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11449
  %223 = load i32, i32* %222, align 4, !dbg !11449
  %224 = icmp eq i32 %223, 0, !dbg !11451
  br i1 %224, label %316, label %225, !dbg !11452

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11453
  %227 = and i32 %226, 12, !dbg !11453
  %228 = icmp eq i32 %227, 8, !dbg !11456
  br i1 %228, label %277, label %229, !dbg !11457

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11458
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11461
  %231 = tail call i32 @HAL_GetTick() #26, !dbg !11461
  call void @llvm.dbg.value(metadata i32 %231, metadata !11205, metadata !DIExpression()), !dbg !11215
  call void @llvm.dbg.value(metadata i32 %231, metadata !11205, metadata !DIExpression()), !dbg !11215
  br i1 %230, label %232, label %269, !dbg !11462

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11463
  %234 = and i32 %233, 33554432, !dbg !11463
  %235 = icmp eq i32 %234, 0, !dbg !11463
  br i1 %235, label %240, label %236, !dbg !11465

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #26, !dbg !11466
  %238 = sub i32 %237, %231, !dbg !11469
  %239 = icmp ugt i32 %238, 2, !dbg !11470
  br i1 %239, label %317, label %232, !dbg !11471, !llvm.loop !11472

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11474
  %242 = load i32, i32* %241, align 4, !dbg !11474
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11474
  %244 = load i32, i32* %243, align 4, !dbg !11474
  %245 = or i32 %244, %242, !dbg !11474
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11474
  %247 = load i32, i32* %246, align 4, !dbg !11474
  %248 = shl i32 %247, 6, !dbg !11474
  %249 = or i32 %245, %248, !dbg !11474
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11474
  %251 = load i32, i32* %250, align 4, !dbg !11474
  %252 = shl i32 %251, 15, !dbg !11474
  %253 = add i32 %252, -65536, !dbg !11474
  %254 = and i32 %253, -65536, !dbg !11474
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11474
  %256 = load i32, i32* %255, align 4, !dbg !11474
  %257 = shl i32 %256, 24, !dbg !11474
  %258 = or i32 %249, %257, !dbg !11474
  %259 = or i32 %258, %254, !dbg !11474
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11474
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11475
  %260 = tail call i32 @HAL_GetTick() #26, !dbg !11476
  call void @llvm.dbg.value(metadata i32 %260, metadata !11205, metadata !DIExpression()), !dbg !11215
  br label %261, !dbg !11477

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11478
  %263 = and i32 %262, 33554432, !dbg !11479
  %264 = icmp eq i32 %263, 0, !dbg !11479
  br i1 %264, label %265, label %316, !dbg !11477

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #26, !dbg !11480
  %267 = sub i32 %266, %260, !dbg !11483
  %268 = icmp ugt i32 %267, 2, !dbg !11484
  br i1 %268, label %317, label %261, !dbg !11485, !llvm.loop !11486

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11488
  %271 = and i32 %270, 33554432, !dbg !11488
  %272 = icmp eq i32 %271, 0, !dbg !11488
  br i1 %272, label %316, label %273, !dbg !11490

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #26, !dbg !11491
  %275 = sub i32 %274, %231, !dbg !11494
  %276 = icmp ugt i32 %275, 2, !dbg !11495
  br i1 %276, label %317, label %269, !dbg !11496, !llvm.loop !11497

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11499
  br i1 %278, label %317, label %279, !dbg !11502

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11503
  call void @llvm.dbg.value(metadata i32 %280, metadata !11206, metadata !DIExpression()), !dbg !11215
  %281 = and i32 %280, 4194304, !dbg !11505
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11507
  %283 = load i32, i32* %282, align 4, !dbg !11507
  %284 = icmp eq i32 %281, %283, !dbg !11508
  br i1 %284, label %285, label %317, !dbg !11509

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11510
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11511
  %288 = load i32, i32* %287, align 4, !dbg !11511
  %289 = icmp eq i32 %286, %288, !dbg !11512
  br i1 %289, label %290, label %317, !dbg !11513

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11514
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11515
  %293 = load i32, i32* %292, align 4, !dbg !11515
  %294 = shl i32 %293, 6, !dbg !11516
  %295 = icmp eq i32 %291, %294, !dbg !11517
  br i1 %295, label %296, label %317, !dbg !11518

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11519
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11520
  %299 = load i32, i32* %298, align 4, !dbg !11520
  %300 = shl i32 %299, 15, !dbg !11521
  %301 = add i32 %300, -65536, !dbg !11521
  %302 = and i32 %301, -65536, !dbg !11521
  %303 = icmp eq i32 %297, %302, !dbg !11522
  br i1 %303, label %304, label %317, !dbg !11523

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11524
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11525
  %307 = load i32, i32* %306, align 4, !dbg !11525
  %308 = shl i32 %307, 24, !dbg !11526
  %309 = icmp eq i32 %305, %308, !dbg !11527
  br i1 %309, label %310, label %317, !dbg !11528

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !11529
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11530
  %313 = load i32, i32* %312, align 4, !dbg !11530
  %314 = shl i32 %313, 28, !dbg !11531
  %315 = icmp eq i32 %311, %314, !dbg !11532
  br i1 %315, label %316, label %317, !dbg !11533

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !11534

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11215
  ret i32 %318, !dbg !11535
}

; Function Attrs: optsize
declare !dbg !11536 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11538 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11551, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.value(metadata i32 %1, metadata !11552, metadata !DIExpression()), !dbg !11554
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11555
  br i1 %3, label %115, label %4, !dbg !11557

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11558
  %6 = and i32 %5, 7, !dbg !11558
  %7 = icmp ult i32 %6, %1, !dbg !11560
  br i1 %7, label %8, label %13, !dbg !11561

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11562
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11562
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11564
  %11 = and i32 %10, 7, !dbg !11564
  %12 = icmp eq i32 %11, %1, !dbg !11566
  br i1 %12, label %13, label %115, !dbg !11567

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11568
  %15 = load i32, i32* %14, align 4, !dbg !11568
  %16 = and i32 %15, 2, !dbg !11570
  %17 = icmp eq i32 %16, 0, !dbg !11571
  br i1 %17, label %39, label %18, !dbg !11572

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11573
  %20 = icmp eq i32 %19, 0, !dbg !11576
  br i1 %20, label %25, label %21, !dbg !11577

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11578
  %23 = or i32 %22, 7168, !dbg !11578
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11578
  %24 = load i32, i32* %14, align 4, !dbg !11580
  br label %25, !dbg !11582

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11580
  %27 = and i32 %26, 8, !dbg !11583
  %28 = icmp eq i32 %27, 0, !dbg !11584
  br i1 %28, label %32, label %29, !dbg !11585

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11586
  %31 = or i32 %30, 57344, !dbg !11586
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11586
  br label %32, !dbg !11588

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11589
  %34 = and i32 %33, -241, !dbg !11589
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11589
  %36 = load i32, i32* %35, align 4, !dbg !11589
  %37 = or i32 %34, %36, !dbg !11589
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11589
  %38 = load i32, i32* %14, align 4, !dbg !11590
  br label %39, !dbg !11592

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11590
  %41 = and i32 %40, 1, !dbg !11593
  %42 = icmp eq i32 %41, 0, !dbg !11594
  br i1 %42, label %73, label %43, !dbg !11595

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11596
  %45 = load i32, i32* %44, align 4, !dbg !11596
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11599

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11600
  %48 = and i32 %47, 131072, !dbg !11603
  %49 = icmp eq i32 %48, 0, !dbg !11603
  br i1 %49, label %115, label %58, !dbg !11604

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11605
  %52 = and i32 %51, 33554432, !dbg !11609
  %53 = icmp eq i32 %52, 0, !dbg !11609
  br i1 %53, label %115, label %58, !dbg !11610

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11611
  %56 = and i32 %55, 2, !dbg !11614
  %57 = icmp eq i32 %56, 0, !dbg !11614
  br i1 %57, label %115, label %58, !dbg !11615

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11616
  %60 = and i32 %59, -4, !dbg !11616
  %61 = or i32 %60, %45, !dbg !11616
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11616
  %62 = tail call i32 @HAL_GetTick() #26, !dbg !11617
  call void @llvm.dbg.value(metadata i32 %62, metadata !11553, metadata !DIExpression()), !dbg !11554
  br label %63, !dbg !11618

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11619
  %65 = and i32 %64, 12, !dbg !11619
  %66 = load i32, i32* %44, align 4, !dbg !11620
  %67 = shl i32 %66, 2, !dbg !11621
  %68 = icmp eq i32 %65, %67, !dbg !11622
  br i1 %68, label %73, label %69, !dbg !11618

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #26, !dbg !11623
  %71 = sub i32 %70, %62, !dbg !11626
  %72 = icmp ugt i32 %71, 5000, !dbg !11627
  br i1 %72, label %115, label %63, !dbg !11628, !llvm.loop !11629

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11631
  %75 = and i32 %74, 7, !dbg !11631
  %76 = icmp ugt i32 %75, %1, !dbg !11633
  br i1 %76, label %77, label %82, !dbg !11634

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11635
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11635
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11637
  %80 = and i32 %79, 7, !dbg !11637
  %81 = icmp eq i32 %80, %1, !dbg !11639
  br i1 %81, label %82, label %115, !dbg !11640

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11641
  %84 = and i32 %83, 4, !dbg !11643
  %85 = icmp eq i32 %84, 0, !dbg !11644
  br i1 %85, label %93, label %86, !dbg !11645

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11646
  %88 = and i32 %87, -7169, !dbg !11646
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11646
  %90 = load i32, i32* %89, align 4, !dbg !11646
  %91 = or i32 %88, %90, !dbg !11646
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11646
  %92 = load i32, i32* %14, align 4, !dbg !11648
  br label %93, !dbg !11650

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11648
  %95 = and i32 %94, 8, !dbg !11651
  %96 = icmp eq i32 %95, 0, !dbg !11652
  br i1 %96, label %104, label %97, !dbg !11653

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11654
  %99 = and i32 %98, -57345, !dbg !11654
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11654
  %101 = load i32, i32* %100, align 4, !dbg !11654
  %102 = shl i32 %101, 3, !dbg !11654
  %103 = or i32 %102, %99, !dbg !11654
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11654
  br label %104, !dbg !11656

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !11657
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11658
  %107 = lshr i32 %106, 4, !dbg !11659
  %108 = and i32 %107, 15, !dbg !11659
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11660
  %110 = load i8, i8* %109, align 1, !dbg !11660
  %111 = zext i8 %110 to i32, !dbg !11660
  %112 = lshr i32 %105, %111, !dbg !11661
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11662
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11663
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #26, !dbg !11664
  br label %115, !dbg !11665

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11554
  ret i32 %116, !dbg !11666
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11667 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11669, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 0, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 0, metadata !11671, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 0, metadata !11672, metadata !DIExpression()), !dbg !11673
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11674
  %2 = and i32 %1, 12, !dbg !11675
  %3 = icmp eq i32 %2, 8, !dbg !11676
  br i1 %3, label %4, label %21, !dbg !11676

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11677
  %6 = and i32 %5, 63, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %6, metadata !11669, metadata !DIExpression()), !dbg !11673
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11681
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11683
  %9 = lshr i32 %8, 6, !dbg !11683
  %10 = and i32 %9, 511, !dbg !11683
  %11 = zext i32 %10 to i64, !dbg !11683
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11683
  %13 = zext i32 %6 to i64, !dbg !11683
  %14 = udiv i64 %12, %13, !dbg !11683
  %15 = trunc i64 %14 to i32, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %15, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %15, metadata !11670, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 %15, metadata !11670, metadata !DIExpression()), !dbg !11673
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11684
  %17 = lshr i32 %16, 15, !dbg !11685
  %18 = and i32 %17, 6, !dbg !11685
  %19 = add nuw nsw i32 %18, 2, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %19, metadata !11671, metadata !DIExpression()), !dbg !11673
  %20 = udiv i32 %15, %19, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %20, metadata !11672, metadata !DIExpression()), !dbg !11673
  br label %21, !dbg !11687

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11688
  call void @llvm.dbg.value(metadata i32 %22, metadata !11672, metadata !DIExpression()), !dbg !11673
  ret i32 %22, !dbg !11689
}

; Function Attrs: optsize
declare !dbg !11690 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11693 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11697, metadata !DIExpression()), !dbg !11714
  call void @llvm.dbg.value(metadata i32 %1, metadata !11698, metadata !DIExpression()), !dbg !11714
  call void @llvm.dbg.value(metadata i32 %2, metadata !11699, metadata !DIExpression()), !dbg !11714
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11715
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11715
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11700, metadata !DIExpression()), !dbg !11716
  %7 = icmp eq i32 %0, 0, !dbg !11717
  br i1 %7, label %8, label %24, !dbg !11718

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !11719
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !11719
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11710, metadata !DIExpression()), !dbg !11719
  store volatile i32 0, i32* %5, align 4, !dbg !11719
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11719
  %11 = or i32 %10, 1, !dbg !11719
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11719
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11719
  %13 = and i32 %12, 1, !dbg !11719
  store volatile i32 %13, i32* %5, align 4, !dbg !11719
  %14 = load volatile i32, i32* %5, align 4, !dbg !11719
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !11720
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11721
  store i32 256, i32* %15, align 4, !dbg !11722
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11723
  store i32 2, i32* %16, align 4, !dbg !11724
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11725
  store i32 3, i32* %17, align 4, !dbg !11726
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11727
  store i32 0, i32* %18, align 4, !dbg !11728
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11729
  store i32 0, i32* %19, align 4, !dbg !11730
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !11731
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11732
  %21 = and i32 %20, -123731969, !dbg !11732
  %22 = or i32 %2, %1, !dbg !11732
  %23 = or i32 %22, %21, !dbg !11732
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11732
  br label %24, !dbg !11733

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11734
  ret void, !dbg !11734
}

; Function Attrs: optsize
declare !dbg !11735 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11739 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11740
  ret void, !dbg !11741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11742 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11743
  ret void, !dbg !11744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11745 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11746
  ret i32 %1, !dbg !11747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11748 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11749
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11750
  %3 = lshr i32 %2, 10, !dbg !11751
  %4 = and i32 %3, 7, !dbg !11751
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11752
  %6 = load i8, i8* %5, align 1, !dbg !11752
  %7 = zext i8 %6 to i32, !dbg !11752
  %8 = lshr i32 %1, %7, !dbg !11753
  ret i32 %8, !dbg !11754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11755 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !11756
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11757
  %3 = lshr i32 %2, 13, !dbg !11758
  %4 = and i32 %3, 7, !dbg !11758
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11759
  %6 = load i8, i8* %5, align 1, !dbg !11759
  %7 = zext i8 %6 to i32, !dbg !11759
  %8 = lshr i32 %1, %7, !dbg !11760
  ret i32 %8, !dbg !11761
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11762 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11766, metadata !DIExpression()), !dbg !11767
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11768
  store i32 15, i32* %2, align 4, !dbg !11769
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11770
  %4 = and i32 %3, 262144, !dbg !11772
  %5 = icmp eq i32 %4, 0, !dbg !11773
  br i1 %5, label %8, label %6, !dbg !11774

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11775
  store i32 327680, i32* %7, align 4, !dbg !11777
  br label %15, !dbg !11778

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11779
  %10 = and i32 %9, 65536, !dbg !11781
  %11 = icmp eq i32 %10, 0, !dbg !11782
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11783
  br i1 %11, label %14, label %13, !dbg !11784

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11785
  br label %15, !dbg !11787

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11788
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11790
  %17 = and i32 %16, 1, !dbg !11792
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11793
  store i32 %17, i32* %18, align 4, !dbg !11795
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11796
  %20 = lshr i32 %19, 3, !dbg !11797
  %21 = and i32 %20, 31, !dbg !11797
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11798
  store i32 %21, i32* %22, align 4, !dbg !11799
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11800
  %24 = and i32 %23, 4, !dbg !11802
  %25 = icmp eq i32 %24, 0, !dbg !11803
  br i1 %25, label %28, label %26, !dbg !11804

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11805
  store i32 5, i32* %27, align 4, !dbg !11807
  br label %35, !dbg !11808

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11809
  %30 = and i32 %29, 1, !dbg !11811
  %31 = icmp eq i32 %30, 0, !dbg !11812
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11813
  br i1 %31, label %34, label %33, !dbg !11814

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11815
  br label %35, !dbg !11817

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11818
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11820
  %37 = and i32 %36, 1, !dbg !11822
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11823
  store i32 %37, i32* %38, align 4, !dbg !11825
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11826
  %40 = and i32 %39, 16777216, !dbg !11828
  %41 = icmp eq i32 %40, 0, !dbg !11829
  %42 = select i1 %41, i32 1, i32 2, !dbg !11830
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11831
  store i32 %42, i32* %43, align 4, !dbg !11833
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11834
  %45 = and i32 %44, 4194304, !dbg !11835
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11836
  store i32 %45, i32* %46, align 4, !dbg !11837
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11838
  %48 = and i32 %47, 63, !dbg !11839
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11840
  store i32 %48, i32* %49, align 4, !dbg !11841
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11842
  %51 = lshr i32 %50, 6, !dbg !11843
  %52 = and i32 %51, 511, !dbg !11843
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11844
  store i32 %52, i32* %53, align 4, !dbg !11845
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11846
  %55 = shl i32 %54, 1, !dbg !11847
  %56 = and i32 %55, 393216, !dbg !11847
  %57 = add nuw nsw i32 %56, 131072, !dbg !11847
  %58 = lshr exact i32 %57, 16, !dbg !11848
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11849
  store i32 %58, i32* %59, align 4, !dbg !11850
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11851
  %61 = lshr i32 %60, 24, !dbg !11852
  %62 = and i32 %61, 15, !dbg !11852
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11853
  store i32 %62, i32* %63, align 4, !dbg !11854
  ret void, !dbg !11855
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11856 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11860, metadata !DIExpression()), !dbg !11862
  call void @llvm.dbg.value(metadata i32* %1, metadata !11861, metadata !DIExpression()), !dbg !11862
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11863
  store i32 15, i32* %3, align 4, !dbg !11864
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11865
  %5 = and i32 %4, 3, !dbg !11866
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11867
  store i32 %5, i32* %6, align 4, !dbg !11868
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11869
  %8 = and i32 %7, 240, !dbg !11870
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11871
  store i32 %8, i32* %9, align 4, !dbg !11872
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11873
  %11 = and i32 %10, 7168, !dbg !11874
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11875
  store i32 %11, i32* %12, align 4, !dbg !11876
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11877
  %14 = lshr i32 %13, 3, !dbg !11878
  %15 = and i32 %14, 7168, !dbg !11878
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11879
  store i32 %15, i32* %16, align 4, !dbg !11880
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11881
  %18 = and i32 %17, 7, !dbg !11882
  store i32 %18, i32* %1, align 4, !dbg !11883
  ret void, !dbg !11884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11885 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11886
  %2 = and i32 %1, 128, !dbg !11886
  %3 = icmp eq i32 %2, 0, !dbg !11886
  br i1 %3, label %5, label %4, !dbg !11888

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !11889
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11891
  br label %5, !dbg !11892

5:                                                ; preds = %4, %0
  ret void, !dbg !11893
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11894 {
  ret void, !dbg !11895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11899, metadata !DIExpression()), !dbg !11900
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !11901
  ret void, !dbg !11902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11906, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata i32 1000, metadata !11907, metadata !DIExpression()), !dbg !11908
  %2 = udiv i32 %0, 1000, !dbg !11909
  %3 = add nsw i32 %2, -1, !dbg !11910
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11911
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11912
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11913
  ret void, !dbg !11914
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11915 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11917, metadata !DIExpression()), !dbg !11919
  %3 = bitcast i32* %2 to i8*, !dbg !11920
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11920
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11918, metadata !DIExpression()), !dbg !11921
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11922
  store volatile i32 %4, i32* %2, align 4, !dbg !11921
  %5 = load volatile i32, i32* %2, align 4, !dbg !11923
  %6 = icmp eq i32 %0, -1, !dbg !11924
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !11919
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %8, metadata !11917, metadata !DIExpression()), !dbg !11919
  br label %9, !dbg !11926

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11917, metadata !DIExpression()), !dbg !11919
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11927
  call void @llvm.dbg.value(metadata i32 undef, metadata !11917, metadata !DIExpression()), !dbg !11919
  %12 = shl i32 %11, 15, !dbg !11919
  %13 = ashr i32 %12, 31, !dbg !11919
  %14 = add i32 %13, %10, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %14, metadata !11917, metadata !DIExpression()), !dbg !11919
  %15 = icmp eq i32 %14, 0, !dbg !11926
  br i1 %15, label %16, label %9, !dbg !11926

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11930
  ret void, !dbg !11930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11933, metadata !DIExpression()), !dbg !11934
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11935
  ret void, !dbg !11936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11942, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 0, metadata !11945, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 0, metadata !11946, metadata !DIExpression()), !dbg !11947
  %2 = icmp eq i32 %0, 0, !dbg !11948
  br i1 %2, label %50, label %3, !dbg !11950

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11951
  %5 = icmp eq i32 %4, 49152, !dbg !11954
  br i1 %5, label %6, label %15, !dbg !11955

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11945, metadata !DIExpression()), !dbg !11947
  %7 = add i32 %0, -64000001, !dbg !11956
  %8 = icmp ult i32 %7, 26000000, !dbg !11956
  br i1 %8, label %15, label %9, !dbg !11956

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11959
  %11 = select i1 %10, i32 0, i32 3, !dbg !11961
  call void @llvm.dbg.value(metadata i32 %11, metadata !11945, metadata !DIExpression()), !dbg !11947
  %12 = add i32 %0, -30000001, !dbg !11962
  %13 = icmp ult i32 %12, 60000000, !dbg !11962
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %14, metadata !11945, metadata !DIExpression()), !dbg !11947
  br label %15, !dbg !11962

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11947
  call void @llvm.dbg.value(metadata i32 %16, metadata !11945, metadata !DIExpression()), !dbg !11947
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11965
  %18 = icmp eq i32 %17, 32768, !dbg !11967
  br i1 %18, label %19, label %27, !dbg !11968

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11969
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11972
  br i1 %22, label %27, label %23, !dbg !11972

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11973
  %25 = and i1 %24, %21, !dbg !11976
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %26, metadata !11945, metadata !DIExpression()), !dbg !11947
  br label %27, !dbg !11976

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11977
  call void @llvm.dbg.value(metadata i32 %28, metadata !11945, metadata !DIExpression()), !dbg !11947
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !11978
  %30 = icmp eq i32 %29, 16384, !dbg !11980
  br i1 %30, label %31, label %39, !dbg !11981

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11982
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11985
  br i1 %34, label %39, label %35, !dbg !11985

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11986
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11989
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11989
  call void @llvm.dbg.value(metadata i32 %38, metadata !11945, metadata !DIExpression()), !dbg !11947
  br label %39, !dbg !11989

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11977
  call void @llvm.dbg.value(metadata i32 %40, metadata !11945, metadata !DIExpression()), !dbg !11947
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #27, !dbg !11990
  call void @llvm.dbg.value(metadata i32 2, metadata !11943, metadata !DIExpression()), !dbg !11947
  br label %41, !dbg !11991

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11977
  call void @llvm.dbg.value(metadata i32 %42, metadata !11943, metadata !DIExpression()), !dbg !11947
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %43, metadata !11944, metadata !DIExpression()), !dbg !11947
  %44 = add nsw i32 %42, -1, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %44, metadata !11943, metadata !DIExpression()), !dbg !11947
  %45 = icmp ne i32 %43, %40, !dbg !11995
  %46 = icmp ne i32 %44, 0, !dbg !11996
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11996
  br i1 %47, label %41, label %48, !dbg !11997, !llvm.loop !11998

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !12000
  call void @llvm.dbg.value(metadata i32 %51, metadata !11946, metadata !DIExpression()), !dbg !11947
  ret i32 %51, !dbg !12001
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12002 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12004
  %2 = and i32 %1, 49152, !dbg !12004
  ret i32 %2, !dbg !12005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12008, metadata !DIExpression()), !dbg !12009
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12010
  %3 = and i32 %2, -8, !dbg !12010
  %4 = or i32 %3, %0, !dbg !12010
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12010
  ret void, !dbg !12011
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12012 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12013
  %2 = and i32 %1, 7, !dbg !12013
  ret i32 %2, !dbg !12014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12015 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12033, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12034, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i32 0, metadata !12035, metadata !DIExpression()), !dbg !12037
  call void @llvm.dbg.value(metadata i32 0, metadata !12036, metadata !DIExpression()), !dbg !12037
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12038
  %4 = icmp eq i32 %3, 0, !dbg !12040
  br i1 %4, label %5, label %21, !dbg !12041

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #27, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %6, metadata !12036, metadata !DIExpression()), !dbg !12037
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.84() #27, !dbg !12044
  %8 = icmp eq i32 %7, 1, !dbg !12046
  br i1 %8, label %13, label %9, !dbg !12047

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.85() #27, !dbg !12048
  br label %10, !dbg !12050

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.84() #27, !dbg !12051
  %12 = icmp eq i32 %11, 1, !dbg !12052
  br i1 %12, label %13, label %10, !dbg !12050, !llvm.loop !12053

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12055
  %15 = load i32, i32* %14, align 4, !dbg !12055
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12056
  %17 = load i32, i32* %16, align 4, !dbg !12056
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12057
  %19 = load i32, i32* %18, align 4, !dbg !12057
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #27, !dbg !12058
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %20, metadata !12035, metadata !DIExpression()), !dbg !12037
  br label %21, !dbg !12060

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12061
  call void @llvm.dbg.value(metadata i32 %22, metadata !12035, metadata !DIExpression()), !dbg !12037
  ret i32 %22, !dbg !12062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12063 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12067, metadata !DIExpression()), !dbg !12068
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.88() #27, !dbg !12069
  %2 = icmp ne i32 %1, 0, !dbg !12071
  call void @llvm.dbg.value(metadata i1 %2, metadata !12067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12068
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #27, !dbg !12072
  %4 = icmp ne i32 %3, 0, !dbg !12074
  %5 = select i1 %4, i1 true, i1 %2, !dbg !12075
  %6 = zext i1 %5 to i32, !dbg !12075
  call void @llvm.dbg.value(metadata i32 %6, metadata !12067, metadata !DIExpression()), !dbg !12068
  ret i32 %6, !dbg !12076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12081, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12082, metadata !DIExpression()), !dbg !12084
  call void @llvm.dbg.value(metadata i32 0, metadata !12083, metadata !DIExpression()), !dbg !12084
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12085
  %4 = load i32, i32* %3, align 4, !dbg !12085
  %5 = and i32 %4, 63, !dbg !12086
  %6 = udiv i32 %0, %5, !dbg !12087
  call void @llvm.dbg.value(metadata i32 %6, metadata !12083, metadata !DIExpression()), !dbg !12084
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12088
  %8 = load i32, i32* %7, align 4, !dbg !12088
  %9 = and i32 %8, 511, !dbg !12089
  %10 = mul i32 %9, %6, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %10, metadata !12083, metadata !DIExpression()), !dbg !12084
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12091
  %12 = load i32, i32* %11, align 4, !dbg !12091
  %13 = lshr i32 %12, 15, !dbg !12092
  %14 = and i32 %13, 131070, !dbg !12092
  %15 = add nuw nsw i32 %14, 2, !dbg !12092
  %16 = udiv i32 %10, %15, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %16, metadata !12083, metadata !DIExpression()), !dbg !12084
  ret i32 %16, !dbg !12094
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.84() unnamed_addr #16 !dbg !12095 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12096
  %2 = lshr i32 %1, 1, !dbg !12097
  %3 = and i32 %2, 1, !dbg !12097
  ret i32 %3, !dbg !12098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.85() unnamed_addr #15 !dbg !12099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12100
  %2 = or i32 %1, 1, !dbg !12100
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12100
  ret void, !dbg !12101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12104, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %1, metadata !12105, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %2, metadata !12106, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %3, metadata !12107, metadata !DIExpression()), !dbg !12108
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12109
  %6 = and i32 %5, -4227072, !dbg !12109
  %7 = or i32 %1, %0, !dbg !12109
  %8 = shl i32 %2, 6, !dbg !12109
  %9 = or i32 %7, %8, !dbg !12109
  %10 = or i32 %9, %6, !dbg !12109
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12109
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12110
  %12 = and i32 %11, -196609, !dbg !12110
  %13 = or i32 %12, %3, !dbg !12110
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12110
  ret void, !dbg !12111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12116, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12117, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i32 0, metadata !12118, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.value(metadata i32 0, metadata !12119, metadata !DIExpression()), !dbg !12120
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12121
  %4 = load i32, i32* %3, align 4, !dbg !12121
  %5 = lshr i32 %4, 4, !dbg !12121
  %6 = and i32 %5, 15, !dbg !12121
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12121
  %8 = load i8, i8* %7, align 1, !dbg !12121
  %9 = zext i8 %8 to i32, !dbg !12121
  %10 = lshr i32 %0, %9, !dbg !12121
  call void @llvm.dbg.value(metadata i32 %10, metadata !12119, metadata !DIExpression()), !dbg !12120
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12122
  %12 = icmp ult i32 %11, %10, !dbg !12124
  br i1 %12, label %13, label %16, !dbg !12125

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %14, metadata !12118, metadata !DIExpression()), !dbg !12120
  %15 = icmp eq i32 %14, 0, !dbg !12128
  br i1 %15, label %16, label %30, !dbg !12130

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.87() #27, !dbg !12131
  br label %17, !dbg !12133

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.88() #27, !dbg !12134
  %19 = icmp eq i32 %18, 1, !dbg !12135
  br i1 %19, label %20, label %17, !dbg !12133, !llvm.loop !12136

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12138
  tail call fastcc void @LL_RCC_SetAHBPrescaler.89(i32 noundef %21) #27, !dbg !12139
  tail call fastcc void @LL_RCC_SetSysClkSource.90() #27, !dbg !12140
  br label %22, !dbg !12141

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.91() #27, !dbg !12142
  %24 = icmp eq i32 %23, 8, !dbg !12143
  br i1 %24, label %25, label %22, !dbg !12141, !llvm.loop !12144

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12146
  %27 = load i32, i32* %26, align 4, !dbg !12146
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.92(i32 noundef %27) #27, !dbg !12147
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12148
  %29 = load i32, i32* %28, align 4, !dbg !12148
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.93(i32 noundef %29) #27, !dbg !12149
  br label %30, !dbg !12150

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12151
  %33 = icmp ugt i32 %32, %10, !dbg !12153
  br i1 %33, label %34, label %36, !dbg !12154

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %35, metadata !12118, metadata !DIExpression()), !dbg !12120
  br label %36, !dbg !12157

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12120
  call void @llvm.dbg.value(metadata i32 %37, metadata !12118, metadata !DIExpression()), !dbg !12120
  %38 = icmp eq i32 %37, 0, !dbg !12158
  br i1 %38, label %39, label %40, !dbg !12160

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !12161
  br label %40, !dbg !12163

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.87() unnamed_addr #15 !dbg !12165 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12166
  %2 = or i32 %1, 16777216, !dbg !12166
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12166
  ret void, !dbg !12167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.88() unnamed_addr #16 !dbg !12168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12169
  %2 = lshr i32 %1, 25, !dbg !12170
  %3 = and i32 %2, 1, !dbg !12170
  ret i32 %3, !dbg !12171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.89(i32 noundef %0) unnamed_addr #15 !dbg !12172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12174, metadata !DIExpression()), !dbg !12175
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12176
  %3 = and i32 %2, -241, !dbg !12176
  %4 = or i32 %3, %0, !dbg !12176
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12176
  ret void, !dbg !12177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.90() unnamed_addr #15 !dbg !12178 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12180, metadata !DIExpression()), !dbg !12181
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12182
  %2 = and i32 %1, -4, !dbg !12182
  %3 = or i32 %2, 2, !dbg !12182
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12182
  ret void, !dbg !12183
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.91() unnamed_addr #16 !dbg !12184 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12185
  %2 = and i32 %1, 12, !dbg !12185
  ret i32 %2, !dbg !12186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.92(i32 noundef %0) unnamed_addr #15 !dbg !12187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12189, metadata !DIExpression()), !dbg !12190
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12191
  %3 = and i32 %2, -7169, !dbg !12191
  %4 = or i32 %3, %0, !dbg !12191
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12191
  ret void, !dbg !12192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.93(i32 noundef %0) unnamed_addr #15 !dbg !12193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12195, metadata !DIExpression()), !dbg !12196
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12197
  %3 = and i32 %2, -57345, !dbg !12197
  %4 = or i32 %3, %0, !dbg !12197
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12197
  ret void, !dbg !12198
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12199 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12200
  %2 = lshr i32 %1, 27, !dbg !12201
  %3 = and i32 %2, 1, !dbg !12201
  ret i32 %3, !dbg !12202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12207, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata i32 %1, metadata !12208, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12209, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12210, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata i32 0, metadata !12211, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.value(metadata i32 0, metadata !12212, metadata !DIExpression()), !dbg !12213
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !12214
  %6 = icmp eq i32 %5, 0, !dbg !12216
  br i1 %6, label %7, label %27, !dbg !12217

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #27, !dbg !12218
  call void @llvm.dbg.value(metadata i32 %8, metadata !12212, metadata !DIExpression()), !dbg !12213
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.94() #27, !dbg !12220
  %10 = icmp eq i32 %9, 1, !dbg !12222
  br i1 %10, label %19, label %11, !dbg !12223

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12224
  br i1 %12, label %13, label %14, !dbg !12227

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !12228
  br label %15, !dbg !12230

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.95() #27, !dbg !12231
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.96() #27, !dbg !12233
  br label %16, !dbg !12234

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.94() #27, !dbg !12235
  %18 = icmp eq i32 %17, 1, !dbg !12236
  br i1 %18, label %19, label %16, !dbg !12234, !llvm.loop !12237

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12239
  %21 = load i32, i32* %20, align 4, !dbg !12239
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12240
  %23 = load i32, i32* %22, align 4, !dbg !12240
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12241
  %25 = load i32, i32* %24, align 4, !dbg !12241
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.86(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #27, !dbg !12242
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !12243
  call void @llvm.dbg.value(metadata i32 %26, metadata !12211, metadata !DIExpression()), !dbg !12213
  br label %27, !dbg !12244

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12245
  call void @llvm.dbg.value(metadata i32 %28, metadata !12211, metadata !DIExpression()), !dbg !12213
  ret i32 %28, !dbg !12246
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.94() unnamed_addr #16 !dbg !12247 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12248
  %2 = lshr i32 %1, 17, !dbg !12249
  %3 = and i32 %2, 1, !dbg !12249
  ret i32 %3, !dbg !12250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12251 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12252
  %2 = or i32 %1, 262144, !dbg !12252
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12252
  ret void, !dbg !12253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.95() unnamed_addr #15 !dbg !12254 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12255
  %2 = and i32 %1, -262145, !dbg !12255
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12255
  ret void, !dbg !12256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.96() unnamed_addr #15 !dbg !12257 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12258
  %2 = or i32 %1, 65536, !dbg !12258
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12258
  ret void, !dbg !12259
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12260 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12263, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i32 undef, metadata !12263, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12279
  ret void, !dbg !12280
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12281 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12285, metadata !DIExpression()), !dbg !12287
  %2 = icmp eq i8* %0, null, !dbg !12288
  br i1 %2, label %29, label %3, !dbg !12290

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12291
  %5 = icmp eq i8 %4, 0, !dbg !12292
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12293
  br i1 %6, label %29, label %8, !dbg !12293

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12286, metadata !DIExpression()), !dbg !12287
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12294

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12286, metadata !DIExpression()), !dbg !12287
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !12296
  br i1 %10, label %11, label %15, !dbg !12301

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12302
  %13 = load i8*, i8** %12, align 4, !dbg !12302
  %14 = icmp eq i8* %13, %0, !dbg !12303
  br i1 %14, label %29, label %15, !dbg !12304

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12305
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12286, metadata !DIExpression()), !dbg !12287
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12306
  br i1 %17, label %7, label %8, !dbg !12307, !llvm.loop !12308

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12286, metadata !DIExpression()), !dbg !12287
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !12310
  br i1 %20, label %21, label %26, !dbg !12314

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12315
  %23 = load i8*, i8** %22, align 4, !dbg !12315
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12316
  %25 = icmp eq i32 %24, 0, !dbg !12317
  br i1 %25, label %29, label %26, !dbg !12318

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12319
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12286, metadata !DIExpression()), !dbg !12287
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12320
  br i1 %28, label %29, label %18, !dbg !12294, !llvm.loop !12321

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12287
  ret %struct.device* %30, !dbg !12323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12324 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12328, metadata !DIExpression()), !dbg !12329
  %2 = icmp eq %struct.device* %0, null, !dbg !12330
  br i1 %2, label %14, label %3, !dbg !12332

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12333
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12333
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12334
  %7 = load i8, i8* %6, align 1, !dbg !12334
  %8 = and i8 %7, 1, !dbg !12334
  %9 = icmp eq i8 %8, 0, !dbg !12334
  br i1 %9, label %14, label %10, !dbg !12335

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12336
  %12 = load i8, i8* %11, align 1, !dbg !12336
  %13 = icmp eq i8 %12, 0, !dbg !12337
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12329
  ret i1 %15, !dbg !12338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12339 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12344, metadata !DIExpression()), !dbg !12345
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12346
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12348 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12356, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12357, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata i8* %2, metadata !12358, metadata !DIExpression()), !dbg !12361
  %5 = bitcast i32* %4 to i8*, !dbg !12362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12362
  call void @llvm.dbg.value(metadata i32 0, metadata !12359, metadata !DIExpression()), !dbg !12361
  store i32 0, i32* %4, align 4, !dbg !12363
  call void @llvm.dbg.value(metadata i32* %4, metadata !12359, metadata !DIExpression(DW_OP_deref)), !dbg !12361
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12364
  call void @llvm.dbg.value(metadata i16* %6, metadata !12360, metadata !DIExpression()), !dbg !12361
  %7 = load i32, i32* %4, align 4, !dbg !12365
  call void @llvm.dbg.value(metadata i32 %7, metadata !12359, metadata !DIExpression()), !dbg !12361
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12367
  ret i32 %8, !dbg !12368
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12369 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12373, metadata !DIExpression()), !dbg !12379
  call void @llvm.dbg.value(metadata i32* %1, metadata !12374, metadata !DIExpression()), !dbg !12379
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12380
  %4 = load i16*, i16** %3, align 4, !dbg !12380
  call void @llvm.dbg.value(metadata i16* %4, metadata !12375, metadata !DIExpression()), !dbg !12379
  %5 = icmp eq i16* %4, null, !dbg !12381
  br i1 %5, label %14, label %6, !dbg !12382

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12383
  call void @llvm.dbg.value(metadata i32 %7, metadata !12376, metadata !DIExpression()), !dbg !12383
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12384
  %9 = load i16, i16* %8, align 2, !dbg !12384
  %10 = add i16 %9, -32767, !dbg !12385
  %11 = icmp ult i16 %10, 2, !dbg !12385
  %12 = add i32 %7, 1, !dbg !12386
  call void @llvm.dbg.value(metadata i32 %12, metadata !12376, metadata !DIExpression()), !dbg !12383
  br i1 %11, label %13, label %6, !dbg !12385, !llvm.loop !12388

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12391
  br label %14, !dbg !12392

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12394 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12398, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata i32 %1, metadata !12399, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12400, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata i8* %3, metadata !12401, metadata !DIExpression()), !dbg !12409
  call void @llvm.dbg.value(metadata i32 0, metadata !12402, metadata !DIExpression()), !dbg !12410
  %5 = icmp eq i32 %1, 0, !dbg !12411
  br i1 %5, label %16, label %8, !dbg !12412

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12402, metadata !DIExpression()), !dbg !12410
  %7 = icmp eq i32 %15, %1, !dbg !12411
  br i1 %7, label %16, label %8, !dbg !12412, !llvm.loop !12413

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12402, metadata !DIExpression()), !dbg !12410
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12415
  %11 = load i16, i16* %10, align 2, !dbg !12415
  call void @llvm.dbg.value(metadata i16 %11, metadata !12404, metadata !DIExpression()), !dbg !12416
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !12417
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12407, metadata !DIExpression()), !dbg !12416
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !12418
  call void @llvm.dbg.value(metadata i32 %13, metadata !12408, metadata !DIExpression()), !dbg !12416
  %14 = icmp slt i32 %13, 0, !dbg !12419
  %15 = add nuw i32 %9, 1, !dbg !12421
  call void @llvm.dbg.value(metadata i32 %15, metadata !12402, metadata !DIExpression()), !dbg !12410
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12423 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12427, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12428, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12429, metadata !DIExpression()), !dbg !12430
  %2 = sext i16 %0 to i32, !dbg !12431
  %3 = icmp slt i16 %0, 1, !dbg !12433
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12434
  %6 = add nsw i32 %2, -1, !dbg !12434
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12434
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12434
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12428, metadata !DIExpression()), !dbg !12430
  ret %struct.device* %8, !dbg !12435
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12436 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12438, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12439, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.value(metadata i8* %2, metadata !12440, metadata !DIExpression()), !dbg !12443
  %5 = bitcast i32* %4 to i8*, !dbg !12444
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12444
  call void @llvm.dbg.value(metadata i32 0, metadata !12441, metadata !DIExpression()), !dbg !12443
  store i32 0, i32* %4, align 4, !dbg !12445
  call void @llvm.dbg.value(metadata i32* %4, metadata !12441, metadata !DIExpression(DW_OP_deref)), !dbg !12443
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !12446
  call void @llvm.dbg.value(metadata i16* %6, metadata !12442, metadata !DIExpression()), !dbg !12443
  %7 = load i32, i32* %4, align 4, !dbg !12447
  call void @llvm.dbg.value(metadata i32 %7, metadata !12441, metadata !DIExpression()), !dbg !12443
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !12448
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12449
  ret i32 %8, !dbg !12450
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12451 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12453, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32* %1, metadata !12454, metadata !DIExpression()), !dbg !12458
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12459
  %4 = load i16*, i16** %3, align 4, !dbg !12459
  call void @llvm.dbg.value(metadata i16* %4, metadata !12455, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 0, metadata !12456, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i32 0, metadata !12457, metadata !DIExpression()), !dbg !12458
  %5 = icmp eq i16* %4, null, !dbg !12460
  br i1 %5, label %22, label %6, !dbg !12462

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12456, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.value(metadata i16* %8, metadata !12455, metadata !DIExpression()), !dbg !12458
  %9 = load i16, i16* %8, align 2, !dbg !12463
  %10 = icmp eq i16 %9, -32768, !dbg !12467
  call void @llvm.dbg.value(metadata i32 undef, metadata !12456, metadata !DIExpression()), !dbg !12458
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12468
  call void @llvm.dbg.value(metadata i16* %11, metadata !12455, metadata !DIExpression()), !dbg !12458
  %12 = zext i1 %10 to i32, !dbg !12469
  %13 = add i32 %7, %12, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %13, metadata !12456, metadata !DIExpression()), !dbg !12458
  %14 = icmp eq i32 %13, 2, !dbg !12470
  br i1 %14, label %15, label %6, !dbg !12471

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12458
  call void @llvm.dbg.value(metadata i32 %16, metadata !12457, metadata !DIExpression()), !dbg !12458
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12472
  %18 = load i16, i16* %17, align 2, !dbg !12472
  %19 = icmp eq i16 %18, 32767, !dbg !12473
  %20 = add i32 %16, 1, !dbg !12474
  call void @llvm.dbg.value(metadata i32 %20, metadata !12457, metadata !DIExpression()), !dbg !12458
  br i1 %19, label %21, label %15, !dbg !12476, !llvm.loop !12477

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12479
  br label %22, !dbg !12480

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12481
  call void @llvm.dbg.value(metadata i16* %23, metadata !12455, metadata !DIExpression()), !dbg !12458
  ret i16* %23, !dbg !12482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12483 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12486
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12487
  ret i32* %2, !dbg !12488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12489 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12637, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12638, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12639, metadata !DIExpression()), !dbg !12640
  ret void, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12642 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12646, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i32 %1, metadata !12647, metadata !DIExpression()), !dbg !12648
  ret void, !dbg !12649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12650 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12654, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata i32 %1, metadata !12655, metadata !DIExpression()), !dbg !12656
  ret void, !dbg !12657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12662, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.value(metadata i8* %1, metadata !12663, metadata !DIExpression()), !dbg !12664
  ret i32 -134, !dbg !12665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12670, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.value(metadata i8* %1, metadata !12671, metadata !DIExpression()), !dbg !12672
  ret i32 -134, !dbg !12673
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12677, metadata !DIExpression()), !dbg !12678
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12679, !srcloc !12685
  call void @llvm.dbg.value(metadata i32 undef, metadata !12682, metadata !DIExpression()) #25, !dbg !12686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #25, !dbg !12686
  br label %3, !dbg !12687

3:                                                ; preds = %3, %1
  br label %3, !dbg !12688, !llvm.loop !12691
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12698, metadata !DIExpression()), !dbg !12700
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12699, metadata !DIExpression()), !dbg !12700
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12701
  unreachable, !dbg !12701
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12704, metadata !DIExpression()), !dbg !12705
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12706
  unreachable, !dbg !12706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12709, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12710, metadata !DIExpression()), !dbg !12713
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12714, !srcloc !12685
  call void @llvm.dbg.value(metadata i32 undef, metadata !12682, metadata !DIExpression()) #25, !dbg !12716
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #25, !dbg !12716
  call void @llvm.dbg.value(metadata i32 undef, metadata !12711, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12712, metadata !DIExpression()), !dbg !12713
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12717
  br i1 %4, label %6, label %5, !dbg !12719

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #27, !dbg !12720
  br label %7, !dbg !12721

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #27, !dbg !12720
  br label %7, !dbg !12724

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12714
  call void @llvm.dbg.value(metadata i32 %8, metadata !12682, metadata !DIExpression()) #25, !dbg !12716
  call void @llvm.dbg.value(metadata i32 %8, metadata !12711, metadata !DIExpression()), !dbg !12713
  %9 = tail call fastcc %struct.k_thread* @k_current_get.103() #28, !dbg !12726
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12712, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata i32 undef, metadata !12727, metadata !DIExpression()) #25, !dbg !12730
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12732, !srcloc !12733
  tail call fastcc void @k_thread_abort.104(%struct.k_thread* noundef %9) #27, !dbg !12734
  ret void, !dbg !12737
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.103() unnamed_addr #9 !dbg !12738 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.105() #28, !dbg !12742
  ret %struct.k_thread* %1, !dbg !12743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.104(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12744 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12748, metadata !DIExpression()), !dbg !12749
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12750, !srcloc !12752
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12753
  ret void, !dbg !12754
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.105() unnamed_addr #9 !dbg !12755 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12756, !srcloc !12758
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12759
  ret %struct.k_thread* %1, !dbg !12760
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12761 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12765, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.value(metadata i32 %1, metadata !12766, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.value(metadata i32 %2, metadata !12767, metadata !DIExpression()), !dbg !12768
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12769
  ret void, !dbg !12770
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12771 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12775, metadata !DIExpression()), !dbg !12778
  call void @llvm.dbg.value(metadata i8* %1, metadata !12776, metadata !DIExpression()), !dbg !12778
  call void @llvm.dbg.value(metadata i32 %2, metadata !12777, metadata !DIExpression()), !dbg !12778
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12779
  ret void, !dbg !12780
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12781 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !12782
  ret void, !dbg !12783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12786, metadata !DIExpression()), !dbg !12787
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !12788
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12789
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12790
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12791
  %4 = trunc i32 %0 to i8, !dbg !12792
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12793
  store i8 %4, i8* %5, align 4, !dbg !12794
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12795
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !12796
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12797
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12798
  store i8* %8, i8** %9, align 4, !dbg !12799
  ret void, !dbg !12800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12803, metadata !DIExpression()), !dbg !12809
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12810
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12804, metadata !DIExpression()), !dbg !12809
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12811
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12805, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i8* null, metadata !12808, metadata !DIExpression()), !dbg !12809
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12812
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12813
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !12814
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12817 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12821, metadata !DIExpression()), !dbg !12822
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12823
  ret i8* %2, !dbg !12824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12830, metadata !DIExpression()), !dbg !12831
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12832
  %3 = load i8, i8* %2, align 1, !dbg !12833
  %4 = and i8 %3, -5, !dbg !12833
  store i8 %4, i8* %2, align 1, !dbg !12833
  ret void, !dbg !12834
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12835 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !12838
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12839
  %3 = ptrtoint i8* %2 to i32, !dbg !12848
  %4 = add i32 %3, 2048, !dbg !12849
  call void @llvm.dbg.value(metadata i32 %4, metadata !12843, metadata !DIExpression()) #25, !dbg !12850
  call void @llvm.dbg.value(metadata i32 %4, metadata !12851, metadata !DIExpression()) #25, !dbg !12854
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12856, !srcloc !12857
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12858
  %6 = or i32 %5, 512, !dbg !12858
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12858
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -2, i32 noundef 255) #26, !dbg !12859
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -5, i32 noundef 0) #26, !dbg !12862
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -12, i32 noundef 0) #26, !dbg !12863
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -11, i32 noundef 0) #26, !dbg !12864
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -10, i32 noundef 0) #26, !dbg !12865
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef -4, i32 noundef 0) #26, !dbg !12866
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12867
  %8 = or i32 %7, 458752, !dbg !12867
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12867
  tail call void @z_arm_fault_init() #26, !dbg !12868
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12869
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12870
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12873
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12874
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12875
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12876
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12876
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12837, metadata !DIExpression()), !dbg !12877
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !12878
  call void @z_device_state_init() #26, !dbg !12879
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !12880
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !12881
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !12882
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12883
  unreachable, !dbg !12883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2185, metadata !DIExpression()), !dbg !12884
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12885
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12885
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2186, metadata !DIExpression()), !dbg !12884
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2186, metadata !DIExpression()), !dbg !12884
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12886
  br i1 %7, label %8, label %35, !dbg !12887

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2186, metadata !DIExpression()), !dbg !12884
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12888
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12888
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2196, metadata !DIExpression()), !dbg !12889
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12890
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12890
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12891
  call void @llvm.dbg.value(metadata i32 %14, metadata !2200, metadata !DIExpression()), !dbg !12889
  %15 = icmp eq %struct.device* %11, null, !dbg !12892
  br i1 %15, label %32, label %16, !dbg !12894

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12895
  br i1 %17, label %26, label %18, !dbg !12898

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12899
  call void @llvm.dbg.value(metadata i32 %19, metadata !2200, metadata !DIExpression()), !dbg !12889
  %20 = icmp ult i32 %19, 255, !dbg !12901
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12901
  call void @llvm.dbg.value(metadata i32 %21, metadata !2200, metadata !DIExpression()), !dbg !12889
  %22 = trunc i32 %21 to i8, !dbg !12902
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12903
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12903
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12904
  store i8 %22, i8* %25, align 1, !dbg !12905
  br label %26, !dbg !12906

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12907
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12907
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12908
  %30 = load i8, i8* %29, align 1, !dbg !12909
  %31 = or i8 %30, 1, !dbg !12909
  store i8 %31, i8* %29, align 1, !dbg !12909
  br label %32, !dbg !12910

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12911
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2186, metadata !DIExpression()), !dbg !12884
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12886
  br i1 %34, label %8, label %35, !dbg !12887, !llvm.loop !12912

35:                                               ; preds = %32, %1
  ret void, !dbg !12914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12917, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata i32 %1, metadata !12918, metadata !DIExpression()), !dbg !12919
  %3 = trunc i32 %1 to i8, !dbg !12920
  %4 = shl i8 %3, 4, !dbg !12920
  %5 = and i32 %0, 15, !dbg !12923
  %6 = add nsw i32 %5, -4, !dbg !12924
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12925
  store volatile i8 %4, i8* %7, align 1, !dbg !12926
  ret void, !dbg !12927
}

; Function Attrs: optsize
declare !dbg !12928 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12932, metadata !DIExpression()), !dbg !12933
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12934
  store i8 1, i8* %2, align 1, !dbg !12935
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12936
  store i8 1, i8* %3, align 4, !dbg !12937
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12938
  store i32 0, i32* %4, align 4, !dbg !12939
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12940
  store i32 0, i32* %5, align 4, !dbg !12941
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12942
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12943
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12944
  ret void, !dbg !12945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12946 {
  tail call void @z_sched_init() #26, !dbg !12949
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12950
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0)) #26, !dbg !12951
  call void @llvm.dbg.value(metadata i8* %1, metadata !12948, metadata !DIExpression()), !dbg !12952
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12953
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12954
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !12955
  ret i8* %1, !dbg !12956
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12957 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12961, metadata !DIExpression()), !dbg !12962
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !12963
  unreachable, !dbg !12964
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12967, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata i8* %1, metadata !12968, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.value(metadata i8* %2, metadata !12969, metadata !DIExpression()), !dbg !12970
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12971
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !12972
  tail call void @boot_banner() #26, !dbg !12973
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !12974
  tail call void @z_init_static_threads() #26, !dbg !12975
  tail call void @main() #26, !dbg !12976
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12977
  %5 = and i8 %4, -2, !dbg !12977
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12977
  ret void, !dbg !12978
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12979 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12989, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.value(metadata i8* %1, metadata !12990, metadata !DIExpression()), !dbg !12991
  ret void, !dbg !12992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12993 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12995, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata i8* %1, metadata !12996, metadata !DIExpression()), !dbg !12997
  ret void, !dbg !12998
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12999 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13000, !srcloc !13007
  call void @llvm.dbg.value(metadata i32 %1, metadata !13003, metadata !DIExpression()) #25, !dbg !13008
  %2 = icmp ne i32 %1, 0, !dbg !13009
  ret i1 %2, !dbg !13010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13011 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13012
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13013
  %3 = load i8, i8* %2, align 4, !dbg !13014
  %4 = or i8 %3, 1, !dbg !13014
  store i8 %4, i8* %2, align 4, !dbg !13014
  ret void, !dbg !13015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13016 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13017
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13018
  %3 = load i8, i8* %2, align 4, !dbg !13019
  %4 = and i8 %3, -2, !dbg !13019
  store i8 %4, i8* %2, align 4, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13021 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13022
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13023
  %3 = load i8, i8* %2, align 4, !dbg !13023
  %4 = and i8 %3, 1, !dbg !13024
  %5 = icmp ne i8 %4, 0, !dbg !13025
  ret i1 %5, !dbg !13026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13027 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13031, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.value(metadata i8* %1, metadata !13032, metadata !DIExpression()), !dbg !13033
  ret i32 -88, !dbg !13034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13035 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13039, metadata !DIExpression()), !dbg !13040
  ret i8* null, !dbg !13041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13046, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.value(metadata i8* %1, metadata !13047, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.value(metadata i32 %2, metadata !13048, metadata !DIExpression()), !dbg !13049
  ret i32 -88, !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2321, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i8* %1, metadata !2322, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 %2, metadata !2323, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 0, metadata !2324, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i8 undef, metadata !2326, metadata !DIExpression()), !dbg !13051
  %4 = icmp eq i8* %1, null, !dbg !13052
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13054
  br i1 %6, label %46, label %7, !dbg !13054

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13055
  %9 = load i8, i8* %8, align 1, !dbg !13055
  call void @llvm.dbg.value(metadata i8 %9, metadata !2326, metadata !DIExpression()), !dbg !13051
  %10 = add i32 %2, -1, !dbg !13056
  call void @llvm.dbg.value(metadata i32 %10, metadata !2323, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i8 0, metadata !2327, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i8 %9, metadata !2326, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 0, metadata !2324, metadata !DIExpression()), !dbg !13051
  %11 = icmp eq i8 %9, 0, !dbg !13058
  br i1 %11, label %12, label %15, !dbg !13060

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13061
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13062
  store i8 0, i8* %14, align 1, !dbg !13063
  br label %46, !dbg !13064

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2327, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i8 %17, metadata !2326, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 %18, metadata !2324, metadata !DIExpression()), !dbg !13051
  %19 = zext i8 %17 to i32, !dbg !13065
  %20 = zext i8 %16 to i32, !dbg !13066
  %21 = shl nuw i32 1, %20, !dbg !13066
  call void @llvm.dbg.value(metadata i32 %21, metadata !2325, metadata !DIExpression()), !dbg !13051
  %22 = and i32 %21, %19, !dbg !13068
  %23 = icmp eq i32 %22, 0, !dbg !13070
  br i1 %23, label %42, label %24, !dbg !13071

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13072
  %26 = sub i32 %10, %18, !dbg !13073
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13074
  %28 = load i8*, i8** %27, align 4, !dbg !13074
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13075
  %30 = load i32, i32* %29, align 4, !dbg !13075
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !13076
  %32 = add i32 %31, %18, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %32, metadata !2324, metadata !DIExpression()), !dbg !13051
  %33 = trunc i32 %21 to i8, !dbg !13078
  %34 = xor i8 %33, -1, !dbg !13078
  %35 = and i8 %17, %34, !dbg !13078
  call void @llvm.dbg.value(metadata i8 %35, metadata !2326, metadata !DIExpression()), !dbg !13051
  %36 = icmp eq i8 %35, 0, !dbg !13079
  br i1 %36, label %12, label %37, !dbg !13081

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13082
  %39 = sub i32 %10, %32, !dbg !13084
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #27, !dbg !13085
  %41 = add i32 %40, %32, !dbg !13086
  call void @llvm.dbg.value(metadata i32 %41, metadata !2324, metadata !DIExpression()), !dbg !13051
  br label %42, !dbg !13087

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13051
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13051
  call void @llvm.dbg.value(metadata i8 %44, metadata !2326, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 %43, metadata !2324, metadata !DIExpression()), !dbg !13051
  %45 = add i8 %16, 1, !dbg !13088
  call void @llvm.dbg.value(metadata i8 %45, metadata !2327, metadata !DIExpression()), !dbg !13057
  br label %15, !dbg !13060

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.114, i32 0, i32 0), %3 ], !dbg !13051
  ret i8* %47, !dbg !13089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13094, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 %1, metadata !13095, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i8* %2, metadata !13096, metadata !DIExpression()), !dbg !13099
  call void @llvm.dbg.value(metadata i32 %3, metadata !13097, metadata !DIExpression()), !dbg !13099
  %5 = icmp ult i32 %1, %3, !dbg !13100
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13100
  call void @llvm.dbg.value(metadata i32 %6, metadata !13098, metadata !DIExpression()), !dbg !13099
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13101
  ret i32 %6, !dbg !13102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13107, metadata !DIExpression()), !dbg !13108
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13109
  ret void, !dbg !13110
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13120, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13121, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i32 %2, metadata !13122, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13123, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i8* %4, metadata !13124, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i8* %5, metadata !13125, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i8* %6, metadata !13126, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i32 %7, metadata !13127, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i32 %8, metadata !13128, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.value(metadata i8* undef, metadata !13129, metadata !DIExpression()), !dbg !13131
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13132
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #27, !dbg !13133
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13134
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !13135
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !13136
  call void @llvm.dbg.value(metadata i8* %13, metadata !13130, metadata !DIExpression()), !dbg !13131
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13137
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13138
  store i8* null, i8** %14, align 4, !dbg !13139
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13140
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13140
  br i1 %16, label %20, label %17, !dbg !13142

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13143
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13143
  br label %20, !dbg !13144

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13131
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13145
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13147
  ret i8* %13, !dbg !13148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !13149 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13154, metadata !DIExpression()), !dbg !13155
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13156
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !13157
  ret void, !dbg !13158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13159 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13164, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32 %1, metadata !13165, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32 %2, metadata !13166, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.value(metadata i32 %3, metadata !13167, metadata !DIExpression()), !dbg !13168
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13169
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13170
  %6 = trunc i32 %3 to i8, !dbg !13171
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13172
  store i8 %6, i8* %7, align 4, !dbg !13173
  %8 = trunc i32 %2 to i8, !dbg !13174
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13175
  store i8 %8, i8* %9, align 1, !dbg !13176
  %10 = trunc i32 %1 to i8, !dbg !13177
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13178
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13178
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13178
  store i8 %10, i8* %13, align 2, !dbg !13179
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13180
  store i8 0, i8* %14, align 1, !dbg !13181
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !13182
  ret void, !dbg !13183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13188, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13189, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 %2, metadata !13190, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 0, metadata !13195, metadata !DIExpression()), !dbg !13196
  %4 = add i32 %2, 7, !dbg !13197
  %5 = and i32 %4, -8, !dbg !13197
  %6 = add i32 %5, 64, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %6, metadata !13191, metadata !DIExpression()), !dbg !13196
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.124(%struct.z_thread_stack_element* noundef %1) #27, !dbg !13199
  call void @llvm.dbg.value(metadata i8* %7, metadata !13194, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 %5, metadata !13192, metadata !DIExpression()), !dbg !13196
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13200
  call void @llvm.dbg.value(metadata i8* %8, metadata !13193, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.value(metadata i32 0, metadata !13195, metadata !DIExpression()), !dbg !13196
  %9 = ptrtoint i8* %7 to i32, !dbg !13201
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13202
  store i32 %9, i32* %10, align 4, !dbg !13203
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13204
  store i32 %5, i32* %11, align 4, !dbg !13205
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13206
  store i32 0, i32* %12, align 4, !dbg !13207
  call void @llvm.dbg.value(metadata i8* %8, metadata !13193, metadata !DIExpression()), !dbg !13196
  ret i8* %8, !dbg !13208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.124(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13209 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13213, metadata !DIExpression()), !dbg !13214
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13215
  ret i8* %2, !dbg !13216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13217 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13222, metadata !DIExpression()), !dbg !13223
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13224
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !13225
  ret void, !dbg !13226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13227 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13229, metadata !DIExpression()), !dbg !13230
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13231
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !13232
  ret void, !dbg !13233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13234 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13238, metadata !DIExpression()), !dbg !13239
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13240
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13241
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13242
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13250, metadata !DIExpression()), !dbg !13251
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13252
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13253
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13254
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13255
  ret void, !dbg !13256
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13257 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13274, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13265, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13266, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i32 %2, metadata !13267, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13268, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i8* %4, metadata !13269, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i8* %5, metadata !13270, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i8* %6, metadata !13271, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i32 %7, metadata !13272, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i32 %8, metadata !13273, metadata !DIExpression()), !dbg !13275
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !13276
  %13 = icmp eq i64 %11, -1, !dbg !13277
  br i1 %13, label %15, label %14, !dbg !13279

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !13280
  br label %15, !dbg !13282

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13284 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13289, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()), !dbg !13290
  %4 = icmp eq i64 %3, 0, !dbg !13291
  br i1 %4, label %5, label %6, !dbg !13293

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13294
  br label %7, !dbg !13296

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !13297
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13299
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13304, metadata !DIExpression()), !dbg !13305
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13306, !srcloc !13308
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !13309
  ret void, !dbg !13310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13311 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13314, metadata !DIExpression()), !dbg !13315
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13313, metadata !DIExpression()), !dbg !13315
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13316
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13317
  ret void, !dbg !13318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13319 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13321, metadata !DIExpression()), !dbg !13341
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13342

1:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13343
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13339, metadata !DIExpression()), !dbg !13344
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13345

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13321, metadata !DIExpression()), !dbg !13341
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13346
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13346
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13349
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13349
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13350
  %9 = load i32, i32* %8, align 4, !dbg !13350
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13351
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13351
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13352
  %13 = load i8*, i8** %12, align 4, !dbg !13352
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13353
  %15 = load i8*, i8** %14, align 4, !dbg !13353
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13354
  %17 = load i8*, i8** %16, align 4, !dbg !13354
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13355
  %19 = load i32, i32* %18, align 4, !dbg !13355
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13356
  %21 = load i32, i32* %20, align 4, !dbg !13356
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #27, !dbg !13357
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13358
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13359
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13360
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13360
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13361
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13321, metadata !DIExpression()), !dbg !13341
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13362
  br i1 %27, label %2, label %1, !dbg !13342, !llvm.loop !13364

28:                                               ; preds = %0
  tail call void @k_sched_lock() #26, !dbg !13343
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13339, metadata !DIExpression()), !dbg !13344
  br label %29, !dbg !13345

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #26, !dbg !13366
  ret void, !dbg !13367

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13339, metadata !DIExpression()), !dbg !13344
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13368
  %33 = load i32, i32* %32, align 4, !dbg !13368
  %34 = icmp eq i32 %33, -1, !dbg !13372
  br i1 %34, label %43, label %35, !dbg !13373

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13374
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13374
  %38 = icmp sgt i32 %33, 0, !dbg !13376
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13376
  %40 = zext i32 %39 to i64, !dbg !13376
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #27, !dbg !13376
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13377
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #27, !dbg !13377
  br label %43, !dbg !13378

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13379
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13339, metadata !DIExpression()), !dbg !13344
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13380
  br i1 %45, label %30, label %29, !dbg !13345, !llvm.loop !13382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13384 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13389, metadata !DIExpression()), !dbg !13390
  call void @llvm.dbg.value(metadata i64 %0, metadata !13391, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i32 1000, metadata !13396, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i32 10000, metadata !13397, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i8 1, metadata !13398, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i8 0, metadata !13399, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i8 1, metadata !13400, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i8 0, metadata !13401, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i8 1, metadata !13402, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i8 0, metadata !13403, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i64 0, metadata !13404, metadata !DIExpression()), !dbg !13408
  call void @llvm.dbg.value(metadata i64 0, metadata !13404, metadata !DIExpression()), !dbg !13408
  %2 = mul i64 %0, 10, !dbg !13410
  ret i64 %2, !dbg !13416
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13417 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13419, metadata !DIExpression()), !dbg !13423
  call void @llvm.dbg.value(metadata i8* %1, metadata !13420, metadata !DIExpression()), !dbg !13423
  call void @llvm.dbg.value(metadata i8* %2, metadata !13421, metadata !DIExpression()), !dbg !13423
  call void @llvm.dbg.value(metadata i8* %3, metadata !13422, metadata !DIExpression()), !dbg !13423
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13424
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13425
  %7 = load i8, i8* %6, align 4, !dbg !13426
  %8 = or i8 %7, 4, !dbg !13426
  store i8 %8, i8* %6, align 4, !dbg !13426
  tail call void @z_thread_essential_clear() #27, !dbg !13427
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13428
  unreachable, !dbg !13428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13429 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13433, metadata !DIExpression()), !dbg !13434
  ret i32 -134, !dbg !13435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13440, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i32 %1, metadata !13441, metadata !DIExpression()), !dbg !13442
  ret i32 -134, !dbg !13443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13451, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13452, metadata !DIExpression()), !dbg !13453
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13454
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13456
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13453
  ret i32 %6, !dbg !13457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13458 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13462, metadata !DIExpression()), !dbg !13463
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13464
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13463
  ret i32 %3, !dbg !13466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13467 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13469
  ret void, !dbg !13470
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13473, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.value(metadata i8* %1, metadata !13474, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.value(metadata i8* %2, metadata !13475, metadata !DIExpression()), !dbg !13476
  br label %4, !dbg !13477

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13478, !srcloc !13485
  call void @llvm.dbg.value(metadata i32 undef, metadata !13481, metadata !DIExpression()) #25, !dbg !13486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13482, metadata !DIExpression()) #25, !dbg !13486
  tail call fastcc void @k_cpu_idle() #27, !dbg !13487
  br label %4, !dbg !13477, !llvm.loop !13488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13490 {
  tail call void @arch_cpu_idle() #26, !dbg !13491
  ret void, !dbg !13492
}

; Function Attrs: optsize
declare !dbg !13493 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13494 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13498, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.value(metadata i1 %1, metadata !13499, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13504
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !13505
  br i1 %3, label %13, label %4, !dbg !13506

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !13507
  %6 = icmp eq i8 %5, 0, !dbg !13508
  br i1 %6, label %13, label %7, !dbg !13509

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13501, metadata !DIExpression()), !dbg !13510
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !13511
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !13511
  %10 = load i8*, i8** %9, align 4, !dbg !13511
  call void @llvm.dbg.value(metadata i8* %10, metadata !13500, metadata !DIExpression()), !dbg !13504
  br i1 %1, label %11, label %15, !dbg !13512

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13513
  tail call void @k_free(i8* noundef nonnull %12) #26, !dbg !13514
  br label %15, !dbg !13517

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !13518
  call void @llvm.dbg.value(metadata i8* %14, metadata !13500, metadata !DIExpression()), !dbg !13504
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13520
  call void @llvm.dbg.value(metadata i8* %16, metadata !13500, metadata !DIExpression()), !dbg !13504
  ret i8* %16, !dbg !13521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13522 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13526, metadata !DIExpression()), !dbg !13527
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13528
  %3 = load i32, i32* %2, align 4, !dbg !13528
  %4 = trunc i32 %3 to i8, !dbg !13529
  %5 = and i8 %4, 3, !dbg !13529
  ret i8 %5, !dbg !13530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !13531 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13552, metadata !DIExpression()), !dbg !13553
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13554
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #27, !dbg !13555
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13556
  tail call fastcc void @z_waitq_init.129(%union.anon* noundef nonnull %3) #27, !dbg !13557
  ret void, !dbg !13558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13559 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13564, metadata !DIExpression()), !dbg !13565
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13566
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !13567
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13568
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !13569
  ret void, !dbg !13570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.129(%union.anon* noundef %0) unnamed_addr #4 !dbg !13571 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13576, metadata !DIExpression()), !dbg !13577
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13578
  tail call fastcc void @sys_dlist_init.130(%struct._dnode* noundef %2) #27, !dbg !13579
  ret void, !dbg !13580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.130(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13581 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13586, metadata !DIExpression()), !dbg !13587
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13588
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13589
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13590
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13591
  ret void, !dbg !13592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13593 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13595, metadata !DIExpression()), !dbg !13681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13682, metadata !DIExpression()) #25, !dbg !13689
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13691, !srcloc !13697
  call void @llvm.dbg.value(metadata i32 undef, metadata !13694, metadata !DIExpression()) #25, !dbg !13698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13695, metadata !DIExpression()) #25, !dbg !13698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13688, metadata !DIExpression()) #25, !dbg !13689
  call void @llvm.dbg.value(metadata i32 undef, metadata !13596, metadata !DIExpression()), !dbg !13681
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13699
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #26, !dbg !13700
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13601, metadata !DIExpression()), !dbg !13681
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13701
  br i1 %5, label %7, label %6, !dbg !13703

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #27, !dbg !13704
  br label %7, !dbg !13706

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13691
  call void @llvm.dbg.value(metadata i32 %8, metadata !13694, metadata !DIExpression()) #25, !dbg !13698
  call void @llvm.dbg.value(metadata i32 %8, metadata !13688, metadata !DIExpression()) #25, !dbg !13689
  call void @llvm.dbg.value(metadata i32 %8, metadata !13596, metadata !DIExpression()), !dbg !13681
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13707
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13708
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #26, !dbg !13708
  ret void, !dbg !13709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13710 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata i8* %1, metadata !13715, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 0, metadata !13723, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i8* %1, metadata !13724, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13727, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.value(metadata i32 0, metadata !13732, metadata !DIExpression()), !dbg !13733
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13735
  store i32 0, i32* %3, align 4, !dbg !13736
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13737
  store i8* %1, i8** %4, align 4, !dbg !13738
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13739
  ret void, !dbg !13740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13741 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13745, metadata !DIExpression()), !dbg !13748
  call void @llvm.dbg.value(metadata i8* %1, metadata !13746, metadata !DIExpression()), !dbg !13748
  call void @llvm.dbg.value(metadata i8* %2, metadata !13747, metadata !DIExpression()), !dbg !13748
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13749
  ret void, !dbg !13750
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13751 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13755, metadata !DIExpression()), !dbg !13765
  call void @llvm.dbg.value(metadata i8* %1, metadata !13756, metadata !DIExpression()), !dbg !13765
  call void @llvm.dbg.value(metadata i8* %2, metadata !13757, metadata !DIExpression()), !dbg !13765
  call void @llvm.dbg.value(metadata i1 %3, metadata !13758, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13765
  call void @llvm.dbg.value(metadata i1 %4, metadata !13759, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13765
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13682, metadata !DIExpression()) #25, !dbg !13767
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13769, !srcloc !13697
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %8, metadata !13694, metadata !DIExpression()) #25, !dbg !13771
  call void @llvm.dbg.value(metadata i32 undef, metadata !13695, metadata !DIExpression()) #25, !dbg !13771
  call void @llvm.dbg.value(metadata i32 %8, metadata !13688, metadata !DIExpression()) #25, !dbg !13767
  call void @llvm.dbg.value(metadata i32 %8, metadata !13761, metadata !DIExpression()), !dbg !13765
  br i1 %4, label %9, label %13, !dbg !13772

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13773
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #27, !dbg !13776
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !13776
  call void @llvm.dbg.value(metadata i8* %12, metadata !13756, metadata !DIExpression()), !dbg !13765
  br label %13, !dbg !13777

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !13756, metadata !DIExpression()), !dbg !13765
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13778
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #26, !dbg !13779
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !13760, metadata !DIExpression()), !dbg !13765
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !13780
  br i1 %17, label %20, label %18, !dbg !13782

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #27, !dbg !13783
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13785
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #26, !dbg !13785
  br label %36, !dbg !13786

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !13787

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #27, !dbg !13788
  call void @llvm.dbg.value(metadata i8* %22, metadata !13762, metadata !DIExpression()), !dbg !13789
  %23 = icmp eq i8* %22, null, !dbg !13790
  br i1 %23, label %24, label %25, !dbg !13792

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !13793, metadata !DIExpression()) #25, !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13798, metadata !DIExpression()) #25, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %8, metadata !13802, metadata !DIExpression()) #25, !dbg !13805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13807, !srcloc !13808
  call void @llvm.dbg.value(metadata i8* %22, metadata !13757, metadata !DIExpression()), !dbg !13765
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !13762, metadata !DIExpression()), !dbg !13789
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !13809
  %27 = bitcast i8* %26 to i8**, !dbg !13809
  store i8* %2, i8** %27, align 4, !dbg !13810
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !13811
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #27, !dbg !13812
  call void @llvm.dbg.value(metadata i8* %22, metadata !13757, metadata !DIExpression()), !dbg !13765
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !13813
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #27, !dbg !13815
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !13816
  call void @llvm.dbg.value(metadata i8* undef, metadata !13757, metadata !DIExpression()), !dbg !13765
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13817
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !13818
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #27, !dbg !13819
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13820
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #26, !dbg !13820
  br label %36, !dbg !13821

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !13765
  ret i32 %37, !dbg !13822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13823 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13827, metadata !DIExpression()), !dbg !13828
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13829
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13829
  ret %struct.z_heap_bucket* %3, !dbg !13830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13831 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13834, metadata !DIExpression()), !dbg !13835
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #26, !dbg !13836
  ret i8* %1, !dbg !13837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !13838 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13842, metadata !DIExpression()), !dbg !13844
  call void @llvm.dbg.value(metadata i8 %1, metadata !13843, metadata !DIExpression()), !dbg !13844
  %3 = zext i8 %1 to i32, !dbg !13845
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13846
  store i32 %3, i32* %4, align 4, !dbg !13847
  ret void, !dbg !13848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !13849 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13853, metadata !DIExpression()), !dbg !13856
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13854, metadata !DIExpression()), !dbg !13856
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !13855, metadata !DIExpression()), !dbg !13856
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !13857
  br i1 %4, label %5, label %6, !dbg !13859

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13860
  br label %11, !dbg !13860

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !13862
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !13862
  br i1 %8, label %9, label %10, !dbg !13857

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #27, !dbg !13864
  br label %11, !dbg !13864

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #27, !dbg !13866
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #27, !dbg !13866
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13868 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13872, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13873, metadata !DIExpression()), !dbg !13874
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13875
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #27, !dbg !13875
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13875
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13876
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !13876
  br i1 %5, label %6, label %8, !dbg !13875

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !13878
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !13878
  br label %8, !dbg !13878

8:                                                ; preds = %6, %2
  ret void, !dbg !13875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13880 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13884, metadata !DIExpression()), !dbg !13885
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13886
  %3 = load i32, i32* %2, align 4, !dbg !13886
  %4 = and i32 %3, -4, !dbg !13887
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !13888
  ret %struct.z_heap_bucket* %5, !dbg !13889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13890 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13892, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13893, metadata !DIExpression()), !dbg !13894
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #27, !dbg !13895
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !13896
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !13896
  br i1 %4, label %5, label %6, !dbg !13895

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13898
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13898
  br label %7, !dbg !13898

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #27, !dbg !13900
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #27, !dbg !13900
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !13902 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !13906, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13907, metadata !DIExpression()), !dbg !13909
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #27, !dbg !13910
  call void @llvm.dbg.value(metadata i8 %3, metadata !13908, metadata !DIExpression()), !dbg !13909
  %4 = zext i8 %3 to i32, !dbg !13911
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !13912
  %6 = or i32 %4, %5, !dbg !13913
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !13914
  store i32 %6, i32* %7, align 4, !dbg !13915
  ret void, !dbg !13916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13917 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13919, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13920, metadata !DIExpression()), !dbg !13921
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13922
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13923
  ret void, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !13925 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13927, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !13928, metadata !DIExpression()), !dbg !13929
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13930
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !13931
  ret void, !dbg !13932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13933 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13935, metadata !DIExpression()), !dbg !13936
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13937
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !13937
  ret %struct.z_heap_bucket* %3, !dbg !13938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13939 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13943, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.value(metadata i8* %1, metadata !13944, metadata !DIExpression()), !dbg !13945
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #27, !dbg !13946
  ret void, !dbg !13947
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13948 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13950, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.value(metadata i8* %1, metadata !13951, metadata !DIExpression()), !dbg !13952
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #27, !dbg !13953
  ret void, !dbg !13954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13955 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13959, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i8* %1, metadata !13960, metadata !DIExpression()), !dbg !13962
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #27, !dbg !13963
  call void @llvm.dbg.value(metadata i32 %3, metadata !13961, metadata !DIExpression()), !dbg !13962
  ret i32 %3, !dbg !13964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13965 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13967, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i8* %1, metadata !13968, metadata !DIExpression()), !dbg !13970
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #27, !dbg !13971
  call void @llvm.dbg.value(metadata i32 %3, metadata !13969, metadata !DIExpression()), !dbg !13970
  ret i32 %3, !dbg !13972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13973 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13977, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i8* %1, metadata !13978, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i8* %2, metadata !13979, metadata !DIExpression()), !dbg !13982
  %4 = icmp eq i8* %1, null, !dbg !13983
  %5 = icmp eq i8* %2, null, !dbg !13983
  %6 = or i1 %4, %5, !dbg !13983
  br i1 %6, label %29, label %7, !dbg !13983

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13985
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13682, metadata !DIExpression()) #25, !dbg !13986
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13988, !srcloc !13697
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %10, metadata !13694, metadata !DIExpression()) #25, !dbg !13990
  call void @llvm.dbg.value(metadata i32 undef, metadata !13695, metadata !DIExpression()) #25, !dbg !13990
  call void @llvm.dbg.value(metadata i32 %10, metadata !13688, metadata !DIExpression()) #25, !dbg !13986
  call void @llvm.dbg.value(metadata i32 %10, metadata !13980, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13981, metadata !DIExpression()), !dbg !13982
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13991
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !13994
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13981, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13981, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i8* %1, metadata !13978, metadata !DIExpression()), !dbg !13982
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !13995
  br i1 %13, label %24, label %14, !dbg !13996

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13981, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i8* %16, metadata !13978, metadata !DIExpression()), !dbg !13982
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #27, !dbg !13997
  %17 = bitcast i8* %16 to i8**, !dbg !13999
  %18 = load i8*, i8** %17, align 4, !dbg !14000
  call void @llvm.dbg.value(metadata i8* %18, metadata !13978, metadata !DIExpression()), !dbg !13982
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #26, !dbg !14001
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13981, metadata !DIExpression()), !dbg !13982
  %20 = icmp ne i8* %18, null, !dbg !14002
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !13995
  %22 = select i1 %20, i1 %21, i1 false, !dbg !13995
  br i1 %22, label %14, label %23, !dbg !13996, !llvm.loop !14003

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !14005

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14006
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #27, !dbg !14009
  br label %27, !dbg !14010

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14011
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #26, !dbg !14011
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !13982
  ret i32 %30, !dbg !14012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !14013 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14017, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i8* %1, metadata !14018, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.value(metadata i8* %2, metadata !14019, metadata !DIExpression()), !dbg !14020
  %4 = icmp ne i8* %1, null, !dbg !14021
  %5 = icmp ne i8* %2, null, !dbg !14021
  %6 = and i1 %4, %5, !dbg !14021
  br i1 %6, label %7, label %15, !dbg !14021

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14023
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !14023
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14026
  br i1 %9, label %11, label %12, !dbg !14027

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14028
  br label %13, !dbg !14028

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #27, !dbg !14030
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !14027
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #27, !dbg !14027
  br label %15, !dbg !14027

15:                                               ; preds = %13, %3
  ret void, !dbg !14032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !14033 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14049, metadata !DIExpression()), !dbg !14052
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !14050, metadata !DIExpression()), !dbg !14052
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.133(%struct._slist* noundef %1) #27, !dbg !14053
  br i1 %3, label %13, label %4, !dbg !14055

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !14056
  %6 = load i8*, i8** %5, align 4, !dbg !14056
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !14057
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !14057
  %9 = load i8*, i8** %8, align 4, !dbg !14057
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #27, !dbg !14058
  call void @llvm.dbg.value(metadata i32 %10, metadata !14051, metadata !DIExpression()), !dbg !14052
  %11 = icmp eq i32 %10, 0, !dbg !14059
  br i1 %11, label %12, label %13, !dbg !14061

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #27, !dbg !14062
  br label %13, !dbg !14063

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !14052
  ret i32 %14, !dbg !14064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.133(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14065 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.134(%struct._slist* noundef %0) #27, !dbg !14071
  %3 = icmp eq %struct._snode* %2, null, !dbg !14071
  ret i1 %3, !dbg !14071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14072 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14076, metadata !DIExpression()), !dbg !14077
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14078
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !14079
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !14080
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !14081
  ret void, !dbg !14082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.134(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14083 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !14087, metadata !DIExpression()), !dbg !14088
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !14089
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !14089
  ret %struct._snode* %3, !dbg !14090
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14091 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14100, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14099, metadata !DIExpression()), !dbg !14107
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !14108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13682, metadata !DIExpression()) #25, !dbg !14109
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14111, !srcloc !13697
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14111
  call void @llvm.dbg.value(metadata i32 %5, metadata !13694, metadata !DIExpression()) #25, !dbg !14113
  call void @llvm.dbg.value(metadata i32 undef, metadata !13695, metadata !DIExpression()) #25, !dbg !14113
  call void @llvm.dbg.value(metadata i32 %5, metadata !13688, metadata !DIExpression()) #25, !dbg !14109
  call void @llvm.dbg.value(metadata i32 %5, metadata !14101, metadata !DIExpression()), !dbg !14107
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14114
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #27, !dbg !14114
  br i1 %7, label %11, label %8, !dbg !14115, !prof !14116

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #27, !dbg !14117
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14103, metadata !DIExpression()), !dbg !14118
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #27, !dbg !14119
  call void @llvm.dbg.value(metadata i8* %10, metadata !14102, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i32 %5, metadata !13793, metadata !DIExpression()) #25, !dbg !14120
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13798, metadata !DIExpression()) #25, !dbg !14120
  call void @llvm.dbg.value(metadata i32 %5, metadata !13802, metadata !DIExpression()) #25, !dbg !14122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14124, !srcloc !13808
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !14100, metadata !DIExpression()), !dbg !14107
  %13 = icmp eq i64 %12, 0, !dbg !14125
  br i1 %13, label %14, label %15, !dbg !14127

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !13793, metadata !DIExpression()) #25, !dbg !14128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13798, metadata !DIExpression()) #25, !dbg !14128
  call void @llvm.dbg.value(metadata i32 %5, metadata !13802, metadata !DIExpression()) #25, !dbg !14131
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14133, !srcloc !13808
  br label %24, !dbg !14134

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !14135
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !14136
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #26, !dbg !14136
  call void @llvm.dbg.value(metadata i32 %18, metadata !14106, metadata !DIExpression()), !dbg !14107
  %19 = icmp eq i32 %18, 0, !dbg !14137
  br i1 %19, label %20, label %24, !dbg !14138

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14139
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !14140
  %23 = load i8*, i8** %22, align 4, !dbg !14140
  br label %24, !dbg !14138

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !14107
  ret i8* %25, !dbg !14141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14142 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14146, metadata !DIExpression()), !dbg !14147
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14148
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !14148
  ret i1 %3, !dbg !14148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !14149 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14151, metadata !DIExpression()), !dbg !14153
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14154
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14152, metadata !DIExpression()), !dbg !14153
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14154
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #27, !dbg !14154
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14155
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !14155
  br i1 %5, label %6, label %8, !dbg !14154

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14157
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #27, !dbg !14157
  br label %8, !dbg !14157

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !14154
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !14159 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14163, metadata !DIExpression()), !dbg !14166
  call void @llvm.dbg.value(metadata i8* %1, metadata !14164, metadata !DIExpression()), !dbg !14166
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14167
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !14168
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #27, !dbg !14169
  call void @llvm.dbg.value(metadata i1 %5, metadata !14165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14166
  ret i1 %5, !dbg !14170
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !14171 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14175, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14176, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14177, metadata !DIExpression()), !dbg !14179
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14180
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14178, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14177, metadata !DIExpression()), !dbg !14179
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !14182
  br i1 %4, label %15, label %5, !dbg !14180

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !14178, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !14177, metadata !DIExpression()), !dbg !14179
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !14184
  br i1 %6, label %9, label %11, !dbg !14187

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14178, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14177, metadata !DIExpression()), !dbg !14179
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !14184
  br i1 %8, label %9, label %11, !dbg !14187, !llvm.loop !14188

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #27, !dbg !14189
  br label %15, !dbg !14189

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14178, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14177, metadata !DIExpression()), !dbg !14179
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #27, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !14178, metadata !DIExpression()), !dbg !14179
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !14182
  br i1 %14, label %15, label %7, !dbg !14180, !llvm.loop !14188

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !14191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !14192 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !14194, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !14195, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !14196, metadata !DIExpression()), !dbg !14197
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !14198
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #27, !dbg !14200
  br i1 %4, label %6, label %11, !dbg !14201

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #27, !dbg !14202
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14204
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !14204
  br i1 %8, label %9, label %15, !dbg !14202

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #27, !dbg !14206
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #27, !dbg !14206
  br label %15, !dbg !14206

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #27, !dbg !14208
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #27, !dbg !14210
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !14210
  br i1 %13, label %14, label %15, !dbg !14208

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #27, !dbg !14212
  br label %15, !dbg !14212

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #27, !dbg !14201
  ret void, !dbg !14201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !14214 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14216, metadata !DIExpression()), !dbg !14217
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !14218
  br i1 %2, label %5, label %3, !dbg !14218

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #27, !dbg !14218
  br label %5, !dbg !14218

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !14218
  ret %struct.z_heap_bucket* %6, !dbg !14218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14219 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !14221, metadata !DIExpression()), !dbg !14222
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #27, !dbg !14223
  ret %struct.z_heap_bucket* %2, !dbg !14223
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14224 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14226, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.value(metadata i8* %1, metadata !14227, metadata !DIExpression()), !dbg !14229
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14230
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #27, !dbg !14230
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !14228, metadata !DIExpression()), !dbg !14229
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !14232
  br i1 %5, label %14, label %6, !dbg !14230

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !14230

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !14228, metadata !DIExpression()), !dbg !14229
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !14234
  br i1 %10, label %15, label %11, !dbg !14237

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #27, !dbg !14232
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !14228, metadata !DIExpression()), !dbg !14229
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !14232
  br i1 %13, label %14, label %8, !dbg !14230, !llvm.loop !14238

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #27, !dbg !14240
  br label %15, !dbg !14241

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !14242
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14243 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14247, metadata !DIExpression()), !dbg !14249
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14250
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #27, !dbg !14251
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14252
  call void @llvm.dbg.value(metadata i8* %4, metadata !14248, metadata !DIExpression()), !dbg !14249
  ret i8* %4, !dbg !14253
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !14254 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !14256, metadata !DIExpression()), !dbg !14258
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !14259
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #27, !dbg !14260
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #27, !dbg !14261
  call void @llvm.dbg.value(metadata i8* %4, metadata !14257, metadata !DIExpression()), !dbg !14258
  ret i8* %4, !dbg !14262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14267, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14268, metadata !DIExpression()), !dbg !14271
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14272
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14272
  %5 = load i8, i8* %4, align 2, !dbg !14272
  call void @llvm.dbg.value(metadata i8 %5, metadata !14269, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14271
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14273
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14273
  %8 = load i8, i8* %7, align 2, !dbg !14273
  call void @llvm.dbg.value(metadata i8 %8, metadata !14270, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14271
  %9 = icmp eq i8 %8, %5, !dbg !14274
  %10 = sext i8 %5 to i32, !dbg !14276
  %11 = sext i8 %8 to i32, !dbg !14276
  %12 = sub nsw i32 %11, %10, !dbg !14276
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14276
  ret i32 %13, !dbg !14277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14282, metadata !DIExpression()), !dbg !14283
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !14284
  %3 = icmp eq i32 %2, 0, !dbg !14286
  br i1 %3, label %8, label %4, !dbg !14287

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14288
  %6 = add i32 %5, %2, !dbg !14290
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14291
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !14292
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14293
  br label %8, !dbg !14294

8:                                                ; preds = %4, %1
  ret void, !dbg !14295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14300, metadata !DIExpression()), !dbg !14302
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14303
  call void @llvm.dbg.value(metadata i32 %1, metadata !14301, metadata !DIExpression()), !dbg !14302
  ret i32 %1, !dbg !14304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14309, metadata !DIExpression()), !dbg !14318
  call void @llvm.dbg.value(metadata i32 %1, metadata !14310, metadata !DIExpression()), !dbg !14318
  call void @llvm.dbg.value(metadata i32 0, metadata !14311, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !14327
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14329, !srcloc !14335
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14329
  call void @llvm.dbg.value(metadata i32 %4, metadata !14332, metadata !DIExpression()) #25, !dbg !14336
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !14336
  call void @llvm.dbg.value(metadata i32 %4, metadata !14326, metadata !DIExpression()) #25, !dbg !14327
  call void @llvm.dbg.value(metadata i32 %4, metadata !14317, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()), !dbg !14319
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14337
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !14340
  %6 = icmp sgt i32 %0, 0, !dbg !14341
  %7 = icmp sgt i32 %5, 2, !dbg !14343
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14343
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14343
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14344
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14345
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14346
  call void @llvm.dbg.value(metadata i32 %4, metadata !14347, metadata !DIExpression()) #25, !dbg !14353
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !14353
  call void @llvm.dbg.value(metadata i32 %4, metadata !14355, metadata !DIExpression()) #25, !dbg !14358
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14360, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !14311, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14311, metadata !DIExpression()), !dbg !14319
  ret void, !dbg !14362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14365, metadata !DIExpression()), !dbg !14366
  call void @llvm.dbg.value(metadata i32 %0, metadata !14367, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14382
  call void @llvm.dbg.value(metadata i32 1000, metadata !14370, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i32 10000, metadata !14371, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i8 1, metadata !14372, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i1 true, metadata !14373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14382
  call void @llvm.dbg.value(metadata i1 true, metadata !14374, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14382
  call void @llvm.dbg.value(metadata i8 0, metadata !14375, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i1 true, metadata !14376, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14382
  call void @llvm.dbg.value(metadata i1 false, metadata !14377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14382
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !14382
  %2 = mul i32 %0, 10, !dbg !14384
  ret i32 %2, !dbg !14390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14393, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !14396
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14398, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14398
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !14400
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !14400
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !14396
  call void @llvm.dbg.value(metadata i32 %3, metadata !14394, metadata !DIExpression()), !dbg !14395
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14401
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14403
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14404
  br i1 %6, label %7, label %8, !dbg !14405

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14406
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !14408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !14408
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !14410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14412, !srcloc !14361
  br label %24, !dbg !14413

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14414
  %9 = tail call fastcc i32 @slice_time() #27, !dbg !14415
  %10 = icmp eq i32 %9, 0, !dbg !14415
  br i1 %10, label %21, label %11, !dbg !14417

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #27, !dbg !14418
  br i1 %12, label %13, label %21, !dbg !14419

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14420
  %15 = icmp sgt i32 %14, %0, !dbg !14423
  br i1 %15, label %19, label %16, !dbg !14424

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14425
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #27, !dbg !14425
  call void @llvm.dbg.value(metadata i32 %18, metadata !14394, metadata !DIExpression()), !dbg !14395
  br label %22, !dbg !14427

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14428
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14428
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14430
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14395
  call void @llvm.dbg.value(metadata i32 %23, metadata !14394, metadata !DIExpression()), !dbg !14395
  call void @llvm.dbg.value(metadata i32 %23, metadata !14347, metadata !DIExpression()) #25, !dbg !14432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !14432
  call void @llvm.dbg.value(metadata i32 %23, metadata !14355, metadata !DIExpression()) #25, !dbg !14434
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !14436, !srcloc !14361
  br label %24, !dbg !14437

24:                                               ; preds = %22, %7
  ret void, !dbg !14437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14442, metadata !DIExpression()), !dbg !14444
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !14445
  %3 = icmp eq i32 %2, 0, !dbg !14445
  br i1 %3, label %16, label %4, !dbg !14446

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14447
  br i1 %5, label %16, label %6, !dbg !14448

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14449
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14449
  %9 = load i8, i8* %8, align 2, !dbg !14449
  %10 = sext i8 %9 to i32, !dbg !14450
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14451
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #27, !dbg !14452
  br i1 %12, label %16, label %13, !dbg !14453

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !14454
  %15 = xor i1 %14, true, !dbg !14455
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14444
  call void @llvm.dbg.value(metadata i1 %17, metadata !14443, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14444
  ret i1 %17, !dbg !14456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14457 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14461, metadata !DIExpression()), !dbg !14463
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14464
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14462, metadata !DIExpression()), !dbg !14463
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !14465
  br i1 %3, label %5, label %4, !dbg !14467

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !14468
  br label %5, !dbg !14470

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14461, metadata !DIExpression()), !dbg !14463
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14471
  ret i32 %6, !dbg !14472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14473 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14475, metadata !DIExpression()), !dbg !14477
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14478
  %3 = load i8, i8* %2, align 1, !dbg !14478
  call void @llvm.dbg.value(metadata i8 %3, metadata !14476, metadata !DIExpression()), !dbg !14477
  %4 = and i8 %3, 31, !dbg !14479
  %5 = icmp ne i8 %4, 0, !dbg !14480
  ret i1 %5, !dbg !14481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14484, metadata !DIExpression()), !dbg !14485
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14486
  br i1 %2, label %3, label %7, !dbg !14488

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14489, metadata !DIExpression()) #25, !dbg !14492
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14495
  %5 = load i8, i8* %4, align 1, !dbg !14496
  %6 = and i8 %5, 127, !dbg !14496
  store i8 %6, i8* %4, align 1, !dbg !14496
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14497, metadata !DIExpression()) #25, !dbg !14500
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14504
  br label %7, !dbg !14505

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()) #25, !dbg !14509
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14511
  %9 = load i8, i8* %8, align 1, !dbg !14512
  %10 = or i8 %9, -128, !dbg !14512
  store i8 %10, i8* %8, align 1, !dbg !14512
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14513, metadata !DIExpression()) #25, !dbg !14516
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14520, metadata !DIExpression()) #25, !dbg !14528
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14526, metadata !DIExpression()) #25, !dbg !14528
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14530
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14527, metadata !DIExpression()) #25, !dbg !14528
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14532
  br i1 %12, label %23, label %13, !dbg !14530

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14527, metadata !DIExpression()) #25, !dbg !14528
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14534
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14527, metadata !DIExpression()) #25, !dbg !14528
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #26, !dbg !14535
  %17 = icmp sgt i32 %16, 0, !dbg !14538
  br i1 %17, label %18, label %20, !dbg !14539

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14540
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #26, !dbg !14542
  br label %25, !dbg !14543

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #26, !dbg !14532
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14527, metadata !DIExpression()) #25, !dbg !14528
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14532
  br i1 %22, label %23, label %13, !dbg !14530, !llvm.loop !14544

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14546
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #26, !dbg !14547
  br label %25, !dbg !14548

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14549
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14550
  %28 = zext i1 %27 to i32, !dbg !14550
  tail call fastcc void @update_cache(i32 noundef %28) #27, !dbg !14551
  ret void, !dbg !14552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14555, metadata !DIExpression()), !dbg !14556
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #27, !dbg !14557
  ret i1 %2, !dbg !14558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14559 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14561, metadata !DIExpression()), !dbg !14563
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14562, metadata !DIExpression()), !dbg !14563
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14564
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #27, !dbg !14565
  ret void, !dbg !14566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14567 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14571, metadata !DIExpression()), !dbg !14572
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !14573
  br i1 %2, label %6, label %3, !dbg !14573

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14574
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14574
  br label %6, !dbg !14573

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14573
  ret %struct._dnode* %7, !dbg !14575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14576 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14580, metadata !DIExpression()), !dbg !14584
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14581, metadata !DIExpression()), !dbg !14584
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14585
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14585
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14582, metadata !DIExpression()), !dbg !14584
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14586
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14587
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14588
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14589
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14590
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14591
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14592
  ret void, !dbg !14593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14594 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14598, metadata !DIExpression()), !dbg !14600
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14599, metadata !DIExpression()), !dbg !14600
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14601
  br i1 %3, label %6, label %4, !dbg !14602

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !14603
  br label %6, !dbg !14602

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14602
  ret %struct._dnode* %7, !dbg !14604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !14605 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14609, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14610, metadata !DIExpression()), !dbg !14612
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14613
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14613
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14611, metadata !DIExpression()), !dbg !14612
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14614
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14615
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14616
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14617
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14618
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14619
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14620
  ret void, !dbg !14621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14624, metadata !DIExpression()), !dbg !14626
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14634, metadata !DIExpression()) #25, !dbg !14636
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14637
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14638
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14625, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14639, metadata !DIExpression()) #25, !dbg !14645
  call void @llvm.dbg.value(metadata i32 %0, metadata !14644, metadata !DIExpression()) #25, !dbg !14645
  %6 = icmp eq i32 %0, 0, !dbg !14648
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14650
  br i1 %6, label %8, label %15, !dbg !14651

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #26, !dbg !14652
  br i1 %9, label %15, label %10, !dbg !14654

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14655
  br i1 %11, label %15, label %12, !dbg !14657

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #26, !dbg !14658
  %14 = icmp eq i32 %13, 0, !dbg !14658
  br i1 %14, label %18, label %15, !dbg !14660

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14661
  br i1 %16, label %18, label %17, !dbg !14664

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !14665
  br label %18, !dbg !14667

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14650
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14650
  ret void, !dbg !14668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14669 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14673, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14674, metadata !DIExpression()), !dbg !14676
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #27, !dbg !14677
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14675, metadata !DIExpression()), !dbg !14676
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14674, metadata !DIExpression()), !dbg !14676
  ret %struct.k_thread* %3, !dbg !14678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14681, metadata !DIExpression()), !dbg !14682
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14683
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14684
  %4 = xor i1 %3, true, !dbg !14685
  ret i1 %4, !dbg !14686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()), !dbg !14690
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14691
  %3 = load i16, i16* %2, align 2, !dbg !14691
  %4 = icmp ult i16 %3, 128, !dbg !14692
  %5 = zext i1 %4 to i32, !dbg !14692
  ret i32 %5, !dbg !14693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14694 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14700, metadata !DIExpression()), !dbg !14701
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14702
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !14703
  %4 = xor i1 %3, true, !dbg !14704
  ret i1 %4, !dbg !14705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14706 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14712, metadata !DIExpression()), !dbg !14713
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14714
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14714
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14715
  ret i1 %4, !dbg !14716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14717 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14719, metadata !DIExpression()), !dbg !14721
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14720, metadata !DIExpression()), !dbg !14721
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14722
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14722
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14723
  br i1 %5, label %9, label %6, !dbg !14724

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14725
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14725
  br label %9, !dbg !14724

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14724
  ret %struct._dnode* %10, !dbg !14726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14727 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14731, metadata !DIExpression()), !dbg !14732
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14733
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14733
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14734
  ret i1 %4, !dbg !14735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !14736 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14740, metadata !DIExpression()), !dbg !14743
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14744
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14744
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14741, metadata !DIExpression()), !dbg !14743
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14745
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14745
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14742, metadata !DIExpression()), !dbg !14743
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14746
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14747
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14748
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14749
  tail call fastcc void @sys_dnode_init.137(%struct._dnode* noundef %0) #27, !dbg !14750
  ret void, !dbg !14751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.137(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14752 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14754, metadata !DIExpression()), !dbg !14755
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14756
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14757
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14758
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14759
  ret void, !dbg !14760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14765, metadata !DIExpression()), !dbg !14767
  call void @llvm.dbg.value(metadata i32 128, metadata !14766, metadata !DIExpression()), !dbg !14767
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14768
  %3 = load i8, i8* %2, align 1, !dbg !14768
  %4 = icmp slt i8 %3, 0, !dbg !14769
  ret i1 %4, !dbg !14770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14775, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata i32 %1, metadata !14776, metadata !DIExpression()), !dbg !14777
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !14778
  ret i1 %3, !dbg !14779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14780 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14782, metadata !DIExpression()), !dbg !14783
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14784
  ret i1 %2, !dbg !14785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14788, metadata !DIExpression()), !dbg !14790
  call void @llvm.dbg.value(metadata i32 %1, metadata !14789, metadata !DIExpression()), !dbg !14790
  %3 = icmp slt i32 %0, %1, !dbg !14791
  ret i1 %3, !dbg !14792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14795, metadata !DIExpression()), !dbg !14799
  call void @llvm.dbg.value(metadata i32 0, metadata !14796, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !14801
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14803, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !14805
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !14801
  call void @llvm.dbg.value(metadata i32 %3, metadata !14798, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()), !dbg !14800
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !14811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !14811
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !14813
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14815, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !14796, metadata !DIExpression()), !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()), !dbg !14800
  ret void, !dbg !14816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14817 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14819, metadata !DIExpression()), !dbg !14820
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !14821
  br i1 %2, label %24, label %3, !dbg !14823

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !14824
  br i1 %4, label %5, label %24, !dbg !14825

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()) #25, !dbg !14826
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14829
  %7 = load i8, i8* %6, align 1, !dbg !14830
  %8 = or i8 %7, -128, !dbg !14830
  store i8 %8, i8* %6, align 1, !dbg !14830
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14513, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14520, metadata !DIExpression()) #25, !dbg !14833
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14526, metadata !DIExpression()) #25, !dbg !14833
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14835
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14527, metadata !DIExpression()) #25, !dbg !14833
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14836
  br i1 %10, label %21, label %11, !dbg !14835

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14527, metadata !DIExpression()) #25, !dbg !14833
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14837
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14527, metadata !DIExpression()) #25, !dbg !14833
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #26, !dbg !14838
  %15 = icmp sgt i32 %14, 0, !dbg !14839
  br i1 %15, label %16, label %18, !dbg !14840

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14841
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #26, !dbg !14842
  br label %23, !dbg !14843

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #26, !dbg !14836
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14527, metadata !DIExpression()) #25, !dbg !14833
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14836
  br i1 %20, label %21, label %11, !dbg !14835, !llvm.loop !14844

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14846
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #26, !dbg !14847
  br label %23, !dbg !14848

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !14849
  br label %24, !dbg !14850

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14852 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14854, metadata !DIExpression()), !dbg !14855
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !14856
  br i1 %2, label %6, label %3, !dbg !14857

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !14858
  %5 = xor i1 %4, true, !dbg !14857
  br label %6, !dbg !14857

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14860 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14862, metadata !DIExpression()), !dbg !14866
  call void @llvm.dbg.value(metadata i32 0, metadata !14863, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !14868
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14870, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14870
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !14872
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !14872
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !14868
  call void @llvm.dbg.value(metadata i32 %3, metadata !14865, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.value(metadata i32 undef, metadata !14863, metadata !DIExpression()), !dbg !14867
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !14873
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !14876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !14876
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !14878
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14880, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !14863, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.value(metadata i32 undef, metadata !14863, metadata !DIExpression()), !dbg !14867
  ret void, !dbg !14881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14884, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !14887
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14889, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14889
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !14891
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !14887
  call void @llvm.dbg.value(metadata i32 %3, metadata !14885, metadata !DIExpression()), !dbg !14886
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !14892
  br i1 %4, label %5, label %6, !dbg !14894

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !14895
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !14895
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !14898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14900, !srcloc !14361
  br label %8, !dbg !14901

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.142(%struct.k_thread* noundef %0) #27, !dbg !14902
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !14903
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14904
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !14904
  br label %8, !dbg !14905

8:                                                ; preds = %6, %5
  ret void, !dbg !14905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14908, metadata !DIExpression()), !dbg !14909
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14910
  %3 = load i8, i8* %2, align 1, !dbg !14910
  %4 = and i8 %3, 4, !dbg !14911
  %5 = icmp eq i8 %4, 0, !dbg !14912
  ret i1 %5, !dbg !14913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.142(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !14914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14916, metadata !DIExpression()), !dbg !14917
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14918
  %3 = load i8, i8* %2, align 1, !dbg !14919
  %4 = and i8 %3, -5, !dbg !14919
  store i8 %4, i8* %2, align 1, !dbg !14919
  ret void, !dbg !14920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14921 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14924, metadata !DIExpression()), !dbg !14925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14923, metadata !DIExpression()), !dbg !14925
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !14926
  br i1 %4, label %5, label %9, !dbg !14928

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !14929
  br i1 %6, label %7, label %9, !dbg !14930

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14931, metadata !DIExpression()) #25, !dbg !14937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14936, metadata !DIExpression()) #25, !dbg !14937
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14940
  br label %10, !dbg !14941

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !14942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !14942
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !14945
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14947, !srcloc !14361
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14953, metadata !DIExpression()), !dbg !14954
  call void @llvm.dbg.value(metadata i32 %0, metadata !14955, metadata !DIExpression()), !dbg !14960
  %2 = icmp eq i32 %0, 0, !dbg !14962
  br i1 %2, label %3, label %6, !dbg !14963

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14964, !srcloc !14971
  call void @llvm.dbg.value(metadata i32 %4, metadata !14967, metadata !DIExpression()) #25, !dbg !14972
  %5 = icmp eq i32 %4, 0, !dbg !14973
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14954
  ret i1 %7, !dbg !14974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14975 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14978
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14977, metadata !DIExpression()), !dbg !14979
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14980
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14981
  ret i1 %3, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14985, metadata !DIExpression()), !dbg !14987
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !14988
  call void @llvm.dbg.value(metadata i32 %2, metadata !14986, metadata !DIExpression()), !dbg !14987
  ret i32 %2, !dbg !14989
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14992, metadata !DIExpression()), !dbg !14996
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !14997
  call void @llvm.dbg.value(metadata i32 0, metadata !14993, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !14999
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15001, !srcloc !14335
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %4, metadata !14332, metadata !DIExpression()) #25, !dbg !15003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15003
  call void @llvm.dbg.value(metadata i32 %4, metadata !14326, metadata !DIExpression()) #25, !dbg !14999
  call void @llvm.dbg.value(metadata i32 %4, metadata !14995, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata i32 undef, metadata !14993, metadata !DIExpression()), !dbg !14998
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15004
  br i1 %5, label %6, label %10, !dbg !15008

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14489, metadata !DIExpression()) #25, !dbg !15009
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15012
  %8 = load i8, i8* %7, align 1, !dbg !15013
  %9 = and i8 %8, 127, !dbg !15013
  store i8 %9, i8* %7, align 1, !dbg !15013
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14497, metadata !DIExpression()) #25, !dbg !15014
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15016
  br label %10, !dbg !15017

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !15018
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15019
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15020
  %13 = zext i1 %12 to i32, !dbg !15020
  tail call fastcc void @update_cache(i32 noundef %13) #27, !dbg !15021
  call void @llvm.dbg.value(metadata i32 %4, metadata !14347, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15022
  call void @llvm.dbg.value(metadata i32 %4, metadata !14355, metadata !DIExpression()) #25, !dbg !15024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15026, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !14993, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.value(metadata i32 undef, metadata !14993, metadata !DIExpression()), !dbg !14998
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15027
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15029
  br i1 %15, label %16, label %17, !dbg !15030

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15031
  br label %17, !dbg !15033

17:                                               ; preds = %16, %10
  ret void, !dbg !15034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15035 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15037, metadata !DIExpression()), !dbg !15038
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15039
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15040
  ret i32 %3, !dbg !15041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15044, metadata !DIExpression()), !dbg !15045
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15046
  %3 = load i8, i8* %2, align 1, !dbg !15047
  %4 = or i8 %3, 16, !dbg !15047
  store i8 %4, i8* %2, align 1, !dbg !15047
  ret void, !dbg !15048
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15049 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15050, !srcloc !14335
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15050
  call void @llvm.dbg.value(metadata i32 %2, metadata !14332, metadata !DIExpression()) #25, !dbg !15052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15052
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !15053
  ret void, !dbg !15054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15057, metadata !DIExpression()), !dbg !15058
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !15059
  br i1 %2, label %3, label %5, !dbg !15061

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15062
  br label %6, !dbg !15064

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14355, metadata !DIExpression()) #25, !dbg !15065
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15068, !srcloc !14361
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15072, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15075
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15077, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15077
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15079
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !15075
  call void @llvm.dbg.value(metadata i32 %3, metadata !15073, metadata !DIExpression()), !dbg !15074
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !15080
  br i1 %4, label %6, label %5, !dbg !15082

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !15083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15083
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !15086
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15088, !srcloc !14361
  br label %8, !dbg !15089

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !15090
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !15091
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15092
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #27, !dbg !15092
  br label %8, !dbg !15093

8:                                                ; preds = %6, %5
  ret void, !dbg !15093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15096, metadata !DIExpression()), !dbg !15097
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15098
  %3 = load i8, i8* %2, align 1, !dbg !15098
  %4 = and i8 %3, 16, !dbg !15099
  %5 = icmp ne i8 %4, 0, !dbg !15100
  ret i1 %5, !dbg !15101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15102 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15104, metadata !DIExpression()), !dbg !15105
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15106
  %3 = load i8, i8* %2, align 1, !dbg !15107
  %4 = and i8 %3, -17, !dbg !15107
  store i8 %4, i8* %2, align 1, !dbg !15107
  ret void, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15119, metadata !DIExpression()), !dbg !15123
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15117, metadata !DIExpression()), !dbg !15123
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15118, metadata !DIExpression()), !dbg !15123
  call void @llvm.dbg.value(metadata i32 0, metadata !15120, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15125
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15127, !srcloc !14335
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15127
  call void @llvm.dbg.value(metadata i32 %5, metadata !14332, metadata !DIExpression()) #25, !dbg !15129
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15129
  call void @llvm.dbg.value(metadata i32 %5, metadata !14326, metadata !DIExpression()) #25, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %5, metadata !15122, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !15120, metadata !DIExpression()), !dbg !15124
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15130
  call void @llvm.dbg.value(metadata i32 %5, metadata !14347, metadata !DIExpression()) #25, !dbg !15133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15133
  call void @llvm.dbg.value(metadata i32 %5, metadata !14355, metadata !DIExpression()) #25, !dbg !15135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15137, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !15120, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata i32 undef, metadata !15120, metadata !DIExpression()), !dbg !15124
  ret void, !dbg !15138
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15139 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15143, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15141, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15142, metadata !DIExpression()), !dbg !15144
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #27, !dbg !15145
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !15146
  ret void, !dbg !15147
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15152, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15153, metadata !DIExpression()), !dbg !15154
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !15155
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !15156
  %3 = icmp eq %union.anon* %1, null, !dbg !15157
  br i1 %3, label %21, label %4, !dbg !15159

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15160
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15162
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15163
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14520, metadata !DIExpression()) #25, !dbg !15164
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14526, metadata !DIExpression()) #25, !dbg !15164
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #26, !dbg !15166
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14527, metadata !DIExpression()) #25, !dbg !15164
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15167
  br i1 %8, label %19, label %9, !dbg !15166

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14527, metadata !DIExpression()) #25, !dbg !15164
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15168
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14527, metadata !DIExpression()) #25, !dbg !15164
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #26, !dbg !15169
  %13 = icmp sgt i32 %12, 0, !dbg !15170
  br i1 %13, label %14, label %16, !dbg !15171

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15172
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #26, !dbg !15173
  br label %21, !dbg !15174

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #26, !dbg !15167
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14527, metadata !DIExpression()) #25, !dbg !15164
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15167
  br i1 %18, label %19, label %9, !dbg !15166, !llvm.loop !15175

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15177
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #26, !dbg !15178
  br label %21, !dbg !15179

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15181 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15186, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15185, metadata !DIExpression()), !dbg !15187
  %4 = icmp eq i64 %3, -1, !dbg !15188
  br i1 %4, label %6, label %5, !dbg !15190

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.145(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15191
  br label %6, !dbg !15193

6:                                                ; preds = %5, %2
  ret void, !dbg !15194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.145(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15195 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15198, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15197, metadata !DIExpression()), !dbg !15199
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15200
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15201
  ret void, !dbg !15202
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15203 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15205, metadata !DIExpression()), !dbg !15213
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15214
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15206, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i32 0, metadata !15207, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15216
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15218, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !15209, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !15207, metadata !DIExpression()), !dbg !15215
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15221
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15222
  %7 = load i8, i8* %6, align 1, !dbg !15222
  %8 = and i8 %7, 40, !dbg !15223
  %9 = icmp eq i8 %8, 0, !dbg !15223
  call void @llvm.dbg.value(metadata i1 %9, metadata !15210, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15224
  br i1 %9, label %10, label %17, !dbg !15225

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15226
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15226
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15226
  %14 = icmp eq %union.anon* %13, null, !dbg !15230
  br i1 %14, label %16, label %15, !dbg !15231

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !15232
  br label %16, !dbg !15234

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.142(%struct.k_thread* noundef nonnull %3) #27, !dbg !15235
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !15236
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !15237
  br label %17, !dbg !15238

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15218
  call void @llvm.dbg.value(metadata i32 %18, metadata !14332, metadata !DIExpression()) #25, !dbg !15220
  call void @llvm.dbg.value(metadata i32 %18, metadata !14326, metadata !DIExpression()) #25, !dbg !15216
  call void @llvm.dbg.value(metadata i32 %18, metadata !15209, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14347, metadata !DIExpression()) #25, !dbg !15239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15239
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()) #25, !dbg !15241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15243, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !15207, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !15207, metadata !DIExpression()), !dbg !15215
  ret void, !dbg !15244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15247, metadata !DIExpression()), !dbg !15248
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15249
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !15250
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15251
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15252
  ret void, !dbg !15253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15254 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15256, metadata !DIExpression()), !dbg !15257
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15258
  %3 = load i8, i8* %2, align 1, !dbg !15259
  %4 = and i8 %3, -3, !dbg !15259
  store i8 %4, i8* %2, align 1, !dbg !15259
  ret void, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15261 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15263, metadata !DIExpression()), !dbg !15264
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !15265
  br i1 %2, label %3, label %7, !dbg !15267

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14489, metadata !DIExpression()) #25, !dbg !15268
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15271
  %5 = load i8, i8* %4, align 1, !dbg !15272
  %6 = and i8 %5, 127, !dbg !15272
  store i8 %6, i8* %4, align 1, !dbg !15272
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14497, metadata !DIExpression()) #25, !dbg !15273
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15275
  br label %7, !dbg !15276

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15277
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15278
  %10 = zext i1 %9 to i32, !dbg !15278
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !15279
  ret void, !dbg !15280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15281 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15283, metadata !DIExpression()), !dbg !15284
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15285
  %3 = load i8, i8* %2, align 1, !dbg !15286
  %4 = or i8 %3, 2, !dbg !15286
  store i8 %4, i8* %2, align 1, !dbg !15286
  ret void, !dbg !15287
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15288 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 0, metadata !15291, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15296
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15298, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15298
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %3, metadata !15293, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()), !dbg !15295
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15301
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !15304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15304
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !15306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15308, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !15291, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()), !dbg !15295
  ret void, !dbg !15309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15310 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15316, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 %0, metadata !15314, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15315, metadata !DIExpression()), !dbg !15321
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15322
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #27, !dbg !15323
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15324
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15325
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %6, metadata !15317, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 0, metadata !15318, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15328
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15330, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15332
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15332
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !15320, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !15318, metadata !DIExpression()), !dbg !15327
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15333
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15337
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15338
  br i1 %10, label %11, label %12, !dbg !15339

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15340
  br label %12, !dbg !15342

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %13, metadata !14332, metadata !DIExpression()) #25, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %13, metadata !14326, metadata !DIExpression()) #25, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %13, metadata !15320, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14347, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()) #25, !dbg !15345
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !15347, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !15318, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !15318, metadata !DIExpression()), !dbg !15327
  ret i32 %6, !dbg !15348
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15349 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15354, metadata !DIExpression()), !dbg !15357
  call void @llvm.dbg.value(metadata i64 undef, metadata !15356, metadata !DIExpression()), !dbg !15357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15353, metadata !DIExpression()), !dbg !15357
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15355, metadata !DIExpression()), !dbg !15357
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15358
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15360
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15362, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15364
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !15360
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15365
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !15366
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14931, metadata !DIExpression()) #25, !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14936, metadata !DIExpression()) #25, !dbg !15367
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #26, !dbg !15369
  ret i32 %9, !dbg !15370
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15371 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15375, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15376, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.value(metadata i32 0, metadata !15377, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15382
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15384, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !15379, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15376, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.value(metadata i32 undef, metadata !15377, metadata !DIExpression()), !dbg !15381
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15376, metadata !DIExpression()), !dbg !15380
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15390
  br i1 %5, label %7, label %6, !dbg !15392

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15393
  br label %7, !dbg !15395

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15384
  call void @llvm.dbg.value(metadata i32 %8, metadata !14332, metadata !DIExpression()) #25, !dbg !15386
  call void @llvm.dbg.value(metadata i32 %8, metadata !14326, metadata !DIExpression()) #25, !dbg !15382
  call void @llvm.dbg.value(metadata i32 %8, metadata !15379, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata i32 undef, metadata !14347, metadata !DIExpression()) #25, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()) #25, !dbg !15398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15400, !srcloc !14361
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15376, metadata !DIExpression()), !dbg !15380
  call void @llvm.dbg.value(metadata i32 undef, metadata !15377, metadata !DIExpression()), !dbg !15381
  ret %struct.k_thread* %4, !dbg !15401
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15402 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15404, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15405, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata i32 0, metadata !15406, metadata !DIExpression()), !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15411
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15413, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15415
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()), !dbg !15410
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15405, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()), !dbg !15410
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #27, !dbg !15416
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15405, metadata !DIExpression()), !dbg !15409
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15419
  br i1 %5, label %8, label %6, !dbg !15421

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15422
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #27, !dbg !15424
  br label %8, !dbg !15425

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15413
  call void @llvm.dbg.value(metadata i32 %9, metadata !14332, metadata !DIExpression()) #25, !dbg !15415
  call void @llvm.dbg.value(metadata i32 %9, metadata !14326, metadata !DIExpression()) #25, !dbg !15411
  call void @llvm.dbg.value(metadata i32 %9, metadata !15408, metadata !DIExpression()), !dbg !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14347, metadata !DIExpression()) #25, !dbg !15426
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15426
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()) #25, !dbg !15428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15430, !srcloc !14361
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15405, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !15406, metadata !DIExpression()), !dbg !15410
  ret %struct.k_thread* %4, !dbg !15431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15434, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15290, metadata !DIExpression()) #25, !dbg !15436
  call void @llvm.dbg.value(metadata i32 0, metadata !15291, metadata !DIExpression()) #25, !dbg !15438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15439
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15441, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15441
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %3, metadata !15293, metadata !DIExpression()) #25, !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()) #25, !dbg !15438
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !15447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15449, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !15291, metadata !DIExpression()) #25, !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()) #25, !dbg !15438
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !15450
  ret void, !dbg !15451
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15454, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 %1, metadata !15455, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i8 0, metadata !15456, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 0, metadata !15457, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15462
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15464, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15466
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15466
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !15462
  call void @llvm.dbg.value(metadata i32 undef, metadata !15459, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i8 poison, metadata !15456, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15457, metadata !DIExpression()), !dbg !15461
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !15467
  call void @llvm.dbg.value(metadata i1 %6, metadata !15456, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15460
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15470

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14489, metadata !DIExpression()) #25, !dbg !15471
  %11 = load i8, i8* %4, align 1, !dbg !15477
  %12 = and i8 %11, 127, !dbg !15477
  store i8 %12, i8* %4, align 1, !dbg !15477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14497, metadata !DIExpression()) #25, !dbg !15478
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15480
  store i8 %9, i8* %8, align 2, !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()) #25, !dbg !15482
  %13 = load i8, i8* %4, align 1, !dbg !15484
  %14 = or i8 %13, -128, !dbg !15484
  store i8 %14, i8* %4, align 1, !dbg !15484
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14513, metadata !DIExpression()) #25, !dbg !15485
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14520, metadata !DIExpression()) #25, !dbg !15487
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14526, metadata !DIExpression()) #25, !dbg !15487
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15489
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14527, metadata !DIExpression()) #25, !dbg !15487
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15490
  br i1 %16, label %26, label %17, !dbg !15489

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14527, metadata !DIExpression()) #25, !dbg !15487
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14527, metadata !DIExpression()) #25, !dbg !15487
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #26, !dbg !15492
  %21 = icmp sgt i32 %20, 0, !dbg !15493
  br i1 %21, label %22, label %23, !dbg !15494

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #26, !dbg !15495
  br label %27, !dbg !15496

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #26, !dbg !15490
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14527, metadata !DIExpression()) #25, !dbg !15487
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15490
  br i1 %25, label %26, label %17, !dbg !15489, !llvm.loop !15497

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #26, !dbg !15499
  br label %27, !dbg !15500

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15501
  br label %29, !dbg !15502

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15503
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15464
  call void @llvm.dbg.value(metadata i32 %30, metadata !14332, metadata !DIExpression()) #25, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %30, metadata !14326, metadata !DIExpression()) #25, !dbg !15462
  call void @llvm.dbg.value(metadata i32 %30, metadata !15459, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !14347, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15505
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()) #25, !dbg !15507
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !15509, !srcloc !14361
  call void @llvm.dbg.value(metadata i8 poison, metadata !15456, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata i32 undef, metadata !15457, metadata !DIExpression()), !dbg !15461
  ret i1 %6, !dbg !15510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15515, metadata !DIExpression()), !dbg !15518
  call void @llvm.dbg.value(metadata i32 %1, metadata !15516, metadata !DIExpression()), !dbg !15518
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15519
  call void @llvm.dbg.value(metadata i1 %3, metadata !15517, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15518
  br i1 %3, label %4, label %12, !dbg !15520

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15522
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15523
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15523
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15523
  %9 = load i8, i8* %8, align 1, !dbg !15523
  %10 = icmp eq i8 %9, 0, !dbg !15524
  br i1 %10, label %11, label %12, !dbg !15525

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15526
  br label %12, !dbg !15528

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15530 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15532, metadata !DIExpression()), !dbg !15535
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15536
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15538, !srcloc !14335
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15538
  call void @llvm.dbg.value(metadata i32 %2, metadata !14332, metadata !DIExpression()) #25, !dbg !15540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15540
  call void @llvm.dbg.value(metadata i32 %2, metadata !14326, metadata !DIExpression()) #25, !dbg !15536
  call void @llvm.dbg.value(metadata i32 %2, metadata !15534, metadata !DIExpression()), !dbg !15535
  call void @llvm.dbg.value(metadata i32 undef, metadata !15532, metadata !DIExpression()), !dbg !15535
  tail call fastcc void @z_sched_lock() #27, !dbg !15541
  call void @llvm.dbg.value(metadata i32 %2, metadata !14347, metadata !DIExpression()) #25, !dbg !15544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15544
  call void @llvm.dbg.value(metadata i32 %2, metadata !14355, metadata !DIExpression()) #25, !dbg !15546
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15548, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !15532, metadata !DIExpression()), !dbg !15535
  call void @llvm.dbg.value(metadata i32 undef, metadata !15532, metadata !DIExpression()), !dbg !15535
  ret void, !dbg !15549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15550 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15551
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15552
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15552
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15552
  %5 = load i8, i8* %4, align 1, !dbg !15553
  %6 = add i8 %5, -1, !dbg !15553
  store i8 %6, i8* %4, align 1, !dbg !15553
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15554, !srcloc !15556
  ret void, !dbg !15557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15558 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15560, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15564
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15566, !srcloc !14335
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15566
  call void @llvm.dbg.value(metadata i32 %2, metadata !14332, metadata !DIExpression()) #25, !dbg !15568
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15568
  call void @llvm.dbg.value(metadata i32 %2, metadata !14326, metadata !DIExpression()) #25, !dbg !15564
  call void @llvm.dbg.value(metadata i32 %2, metadata !15562, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 undef, metadata !15560, metadata !DIExpression()), !dbg !15563
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15569
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15572
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15572
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15572
  %7 = load i8, i8* %6, align 1, !dbg !15573
  %8 = add i8 %7, 1, !dbg !15573
  store i8 %8, i8* %6, align 1, !dbg !15573
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !15574
  call void @llvm.dbg.value(metadata i32 %2, metadata !14347, metadata !DIExpression()) #25, !dbg !15575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !15575
  call void @llvm.dbg.value(metadata i32 %2, metadata !14355, metadata !DIExpression()) #25, !dbg !15577
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15579, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 1, metadata !15560, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 undef, metadata !15560, metadata !DIExpression()), !dbg !15563
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !15580
  ret void, !dbg !15581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15582 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15583
  ret %struct.k_thread* %1, !dbg !15584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15585 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15589, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15590, metadata !DIExpression()), !dbg !15594
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15595
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15591, metadata !DIExpression()), !dbg !15594
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15596
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15592, metadata !DIExpression()), !dbg !15594
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !15597
  call void @llvm.dbg.value(metadata i32 %5, metadata !15593, metadata !DIExpression()), !dbg !15594
  %6 = icmp sgt i32 %5, 0, !dbg !15598
  br i1 %6, label %17, label %7, !dbg !15600

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15601
  br i1 %8, label %17, label %9, !dbg !15603

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15604
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15604
  %12 = load i32, i32* %11, align 8, !dbg !15604
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15606
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15606
  %15 = load i32, i32* %14, align 8, !dbg !15606
  %16 = icmp ult i32 %12, %15, !dbg !15607
  br label %17, !dbg !15608

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15609
  ret i1 %18, !dbg !15610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15611 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15628, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15629, metadata !DIExpression()), !dbg !15643
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15644
  %5 = load i32, i32* %4, align 4, !dbg !15645
  %6 = add nsw i32 %5, 1, !dbg !15645
  store i32 %6, i32* %4, align 4, !dbg !15645
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15646
  store i32 %5, i32* %7, align 8, !dbg !15647
  %8 = load i32, i32* %4, align 4, !dbg !15648
  %9 = icmp eq i32 %8, 0, !dbg !15649
  br i1 %9, label %10, label %32, !dbg !15650

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15651
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15651
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15631, metadata !DIExpression()), !dbg !15651
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15651
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15651
  %14 = load i32, i32* %13, align 4, !dbg !15651
  %15 = shl i32 %14, 2, !dbg !15651
  %16 = alloca i8, i32 %15, align 8, !dbg !15651
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15651
  store i8* %16, i8** %17, align 4, !dbg !15651
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15651
  %19 = alloca i8, i32 %14, align 8, !dbg !15651
  store i8* %19, i8** %18, align 4, !dbg !15651
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15651
  store i32 -1, i32* %20, align 4, !dbg !15651
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15652
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15640, metadata !DIExpression()), !dbg !15653
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15630, metadata !DIExpression()), !dbg !15643
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15654
  br i1 %22, label %23, label %24, !dbg !15651

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15654
  br label %32, !dbg !15655

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15630, metadata !DIExpression()), !dbg !15643
  %26 = load i32, i32* %4, align 4, !dbg !15656
  %27 = add nsw i32 %26, 1, !dbg !15656
  store i32 %27, i32* %4, align 4, !dbg !15656
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15658
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15658
  store i32 %26, i32* %29, align 8, !dbg !15659
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !15652
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15640, metadata !DIExpression()), !dbg !15653
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15630, metadata !DIExpression()), !dbg !15643
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15654
  br i1 %31, label %23, label %24, !dbg !15651, !llvm.loop !15660

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15662
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15663
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #26, !dbg !15664
  ret void, !dbg !15665
}

; Function Attrs: optsize
declare !dbg !15666 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15671 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15674 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15676, metadata !DIExpression()), !dbg !15678
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15677, metadata !DIExpression()), !dbg !15678
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15679
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15680
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #26, !dbg !15681
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15682
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15682
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15684
  br i1 %7, label %8, label %10, !dbg !15685

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15686
  store i32 0, i32* %9, align 4, !dbg !15688
  br label %10, !dbg !15689

10:                                               ; preds = %8, %2
  ret void, !dbg !15690
}

; Function Attrs: optsize
declare !dbg !15691 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15692 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15696, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15697, metadata !DIExpression()), !dbg !15699
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15700
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !15701
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15698, metadata !DIExpression()), !dbg !15699
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15697, metadata !DIExpression()), !dbg !15699
  ret %struct.k_thread* %4, !dbg !15702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15703 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15707, metadata !DIExpression()), !dbg !15708
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !15709
  ret %struct.rbnode* %2, !dbg !15710
}

; Function Attrs: optsize
declare !dbg !15711 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15714 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15726, metadata !DIExpression()), !dbg !15730
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15731
  %3 = load i32, i32* %2, align 4, !dbg !15731
  %4 = icmp eq i32 %3, 0, !dbg !15733
  br i1 %4, label %10, label %5, !dbg !15734

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15727, metadata !DIExpression()), !dbg !15730
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15735, !range !3806
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15736
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15728, metadata !DIExpression()), !dbg !15730
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #27, !dbg !15737
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15729, metadata !DIExpression()), !dbg !15730
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15727, metadata !DIExpression()), !dbg !15730
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15730
  ret %struct.k_thread* %11, !dbg !15738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15739 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15743, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 0, metadata !15744, metadata !DIExpression()), !dbg !15746
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15745, metadata !DIExpression()), !dbg !15746
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15748
  br i1 %3, label %8, label %4, !dbg !15749

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15750
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !15752
  call void @llvm.dbg.value(metadata i32 1, metadata !15744, metadata !DIExpression()), !dbg !15746
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !15747
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15745, metadata !DIExpression()), !dbg !15746
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15748
  br i1 %7, label %8, label %4, !dbg !15749, !llvm.loop !15753

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15746
  ret i32 %9, !dbg !15755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !15756 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15758, metadata !DIExpression()), !dbg !15759
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15760
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15761
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15762
  ret %struct.k_thread* %4, !dbg !15763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15764 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15773, metadata !DIExpression()), !dbg !15774
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15775
  tail call fastcc void @sys_dlist_init.156(%struct._dnode* noundef nonnull %2) #27, !dbg !15776
  ret void, !dbg !15777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.156(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15778 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15782, metadata !DIExpression()), !dbg !15783
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15784
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15785
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15786
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15787
  ret void, !dbg !15788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15789 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !15790
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !15791
  ret void, !dbg !15792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15798, metadata !DIExpression()), !dbg !15799
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15800
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15800
  %4 = load i8, i8* %3, align 2, !dbg !15800
  %5 = sext i8 %4 to i32, !dbg !15801
  ret i32 %5, !dbg !15802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15807, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata i32 %1, metadata !15808, metadata !DIExpression()), !dbg !15810
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15809, metadata !DIExpression()), !dbg !15810
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !15811
  ret void, !dbg !15812
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15813 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !15814
  br i1 %1, label %8, label %2, !dbg !15815

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15816
  br i1 %3, label %8, label %4, !dbg !15817

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15818
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !15819
  %7 = xor i1 %6, true, !dbg !15817
  br label %8, !dbg !15817

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15821 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15822, !range !6299
  %2 = icmp eq i8 %1, 0, !dbg !15822
  ret i1 %2, !dbg !15823
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15824 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15827
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15829, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !15827
  call void @llvm.dbg.value(metadata i32 undef, metadata !15826, metadata !DIExpression()), !dbg !15832
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15833
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14489, metadata !DIExpression()) #25, !dbg !15836
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15838
  %4 = load i8, i8* %3, align 1, !dbg !15839
  %5 = and i8 %4, 127, !dbg !15839
  store i8 %5, i8* %3, align 1, !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14497, metadata !DIExpression()) #25, !dbg !15840
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #26, !dbg !15842
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15843
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14506, metadata !DIExpression()) #25, !dbg !15844
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15846
  %8 = load i8, i8* %7, align 1, !dbg !15847
  %9 = or i8 %8, -128, !dbg !15847
  store i8 %9, i8* %7, align 1, !dbg !15847
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14513, metadata !DIExpression()) #25, !dbg !15848
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14520, metadata !DIExpression()) #25, !dbg !15850
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14526, metadata !DIExpression()) #25, !dbg !15850
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !15852
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14527, metadata !DIExpression()) #25, !dbg !15850
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15853
  br i1 %11, label %22, label %12, !dbg !15852

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14527, metadata !DIExpression()) #25, !dbg !15850
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15854
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14527, metadata !DIExpression()) #25, !dbg !15850
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #26, !dbg !15855
  %16 = icmp sgt i32 %15, 0, !dbg !15856
  br i1 %16, label %17, label %19, !dbg !15857

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15858
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !15859
  br label %24, !dbg !15860

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #26, !dbg !15853
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14527, metadata !DIExpression()) #25, !dbg !15850
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15853
  br i1 %21, label %22, label %12, !dbg !15852, !llvm.loop !15861

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15863
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #26, !dbg !15864
  br label %24, !dbg !15865

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15829
  call void @llvm.dbg.value(metadata i32 %25, metadata !14332, metadata !DIExpression()) #25, !dbg !15831
  call void @llvm.dbg.value(metadata i32 %25, metadata !14326, metadata !DIExpression()) #25, !dbg !15827
  call void @llvm.dbg.value(metadata i32 %25, metadata !15826, metadata !DIExpression()), !dbg !15832
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14931, metadata !DIExpression()) #25, !dbg !15867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14936, metadata !DIExpression()) #25, !dbg !15867
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #26, !dbg !15869
  ret void, !dbg !15870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15871 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15875, metadata !DIExpression()), !dbg !15878
  %3 = icmp eq i64 %2, -1, !dbg !15879
  br i1 %3, label %4, label %6, !dbg !15881

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15882
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #27, !dbg !15884
  br label %11, !dbg !15885

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15876, metadata !DIExpression()), !dbg !15878
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !15886
  %8 = sext i32 %7 to i64, !dbg !15886
  call void @llvm.dbg.value(metadata i64 %8, metadata !15876, metadata !DIExpression()), !dbg !15878
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #27, !dbg !15887
  %10 = trunc i64 %9 to i32, !dbg !15887
  call void @llvm.dbg.value(metadata i32 %10, metadata !15877, metadata !DIExpression()), !dbg !15878
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15878
  ret i32 %12, !dbg !15888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15893, metadata !DIExpression()), !dbg !15894
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15895, !srcloc !15897
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !15898
  ret void, !dbg !15899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15900 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15904, metadata !DIExpression()), !dbg !15908
  %2 = icmp eq i64 %0, 0, !dbg !15909
  br i1 %2, label %3, label %4, !dbg !15911

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #27, !dbg !15912
  br label %29, !dbg !15914

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15906, metadata !DIExpression()), !dbg !15908
  %5 = icmp sgt i64 %0, -3, !dbg !15915
  br i1 %5, label %6, label %10, !dbg !15917

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15918
  %8 = trunc i64 %0 to i32, !dbg !15920
  %9 = add i32 %7, %8, !dbg !15920
  call void @llvm.dbg.value(metadata i32 %9, metadata !15905, metadata !DIExpression()), !dbg !15908
  br label %13, !dbg !15921

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15922
  %12 = sub i32 -2, %11, !dbg !15922
  call void @llvm.dbg.value(metadata i32 %12, metadata !15905, metadata !DIExpression()), !dbg !15908
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15924
  call void @llvm.dbg.value(metadata i32 %14, metadata !15905, metadata !DIExpression()), !dbg !15908
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !15925
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15927, !srcloc !14335
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %16, metadata !14332, metadata !DIExpression()) #25, !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !15929
  call void @llvm.dbg.value(metadata i32 %16, metadata !14326, metadata !DIExpression()) #25, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %16, metadata !15907, metadata !DIExpression()), !dbg !15908
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15930
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15931
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #27, !dbg !15932
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15933
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15934
  tail call fastcc void @z_add_thread_timeout.145(%struct.k_thread* noundef %18, [1 x i64] %19) #27, !dbg !15934
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15935
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #27, !dbg !15936
  call void @llvm.dbg.value(metadata i32 %16, metadata !14931, metadata !DIExpression()) #25, !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14936, metadata !DIExpression()) #25, !dbg !15937
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #26, !dbg !15939
  %22 = zext i32 %14 to i64, !dbg !15940
  %23 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !15941
  %24 = zext i32 %23 to i64, !dbg !15941
  %25 = sub nsw i64 %22, %24, !dbg !15942
  call void @llvm.dbg.value(metadata i64 %25, metadata !15904, metadata !DIExpression()), !dbg !15908
  %26 = icmp sgt i64 %25, 0, !dbg !15943
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15943
  %28 = trunc i64 %27 to i32, !dbg !15943
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15908
  ret i32 %30, !dbg !15944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15945 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.value(metadata i64 %0, metadata !14367, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 10000, metadata !14370, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i32 1000, metadata !14371, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i8 1, metadata !14372, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i1 false, metadata !14373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15949
  call void @llvm.dbg.value(metadata i1 false, metadata !14374, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15949
  call void @llvm.dbg.value(metadata i8 0, metadata !14375, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i1 false, metadata !14376, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15949
  call void @llvm.dbg.value(metadata i1 true, metadata !14377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15949
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !15949
  call void @llvm.dbg.value(metadata i64 %0, metadata !14367, metadata !DIExpression()), !dbg !15949
  %2 = udiv i64 %0, 10, !dbg !15951
  ret i64 %2, !dbg !15955
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15956 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15957, !srcloc !15959
  tail call void @z_impl_k_yield() #27, !dbg !15960
  ret void, !dbg !15961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15966, metadata !DIExpression()), !dbg !15968
  %2 = sext i32 %0 to i64, !dbg !15969
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !15970
  call void @llvm.dbg.value(metadata i64 %3, metadata !15967, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15968
  %4 = shl i64 %3, 32, !dbg !15971
  %5 = ashr exact i64 %4, 32, !dbg !15971
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !15972
  call void @llvm.dbg.value(metadata i32 %6, metadata !15967, metadata !DIExpression()), !dbg !15968
  %7 = sext i32 %6 to i64, !dbg !15973
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !15974
  %9 = trunc i64 %8 to i32, !dbg !15974
  ret i32 %9, !dbg !15975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15976 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15978, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i64 %0, metadata !14367, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14370, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 10000, metadata !14371, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i8 1, metadata !14372, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i1 false, metadata !14373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i1 true, metadata !14374, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i8 0, metadata !14375, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i1 false, metadata !14376, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i1 true, metadata !14377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !15980
  %2 = add i64 %0, 99, !dbg !15982
  call void @llvm.dbg.value(metadata i64 %2, metadata !14367, metadata !DIExpression()), !dbg !15980
  %3 = udiv i64 %2, 100, !dbg !15983
  ret i64 %3, !dbg !15984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15985 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15987, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.value(metadata i64 %0, metadata !14367, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i32 10000, metadata !14370, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14371, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i8 1, metadata !14372, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i1 false, metadata !14373, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i1 false, metadata !14374, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i8 0, metadata !14375, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i1 true, metadata !14376, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i1 false, metadata !14377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15989
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !15989
  call void @llvm.dbg.value(metadata i64 0, metadata !14378, metadata !DIExpression()), !dbg !15989
  %2 = mul i64 %0, 100, !dbg !15991
  ret i64 %2, !dbg !15993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15996, metadata !DIExpression()), !dbg !15997
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !15998
  br i1 %2, label %14, label %3, !dbg !16000

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !16001
  %5 = icmp slt i32 %4, 0, !dbg !16003
  br i1 %5, label %6, label %10, !dbg !16004

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16005
  %8 = load i8, i8* %7, align 1, !dbg !16005
  %9 = icmp eq i8 %8, 16, !dbg !16008
  br i1 %9, label %10, label %14, !dbg !16009

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !16010
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !16011
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16012, !srcloc !14971
  call void @llvm.dbg.value(metadata i32 %11, metadata !14967, metadata !DIExpression()) #25, !dbg !16016
  %12 = icmp eq i32 %11, 0, !dbg !16017
  br i1 %12, label %13, label %14, !dbg !16018

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !16019
  br label %14, !dbg !16021

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16025, metadata !DIExpression()), !dbg !16026
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16027
  %3 = load i8, i8* %2, align 1, !dbg !16027
  %4 = and i8 %3, 2, !dbg !16028
  %5 = icmp ne i8 %4, 0, !dbg !16029
  ret i1 %5, !dbg !16030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16031 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16036
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16035, metadata !DIExpression()), !dbg !16037
  ret %struct.k_thread* %1, !dbg !16038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16039 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16040, !srcloc !14971
  call void @llvm.dbg.value(metadata i32 %1, metadata !14967, metadata !DIExpression()) #25, !dbg !16043
  %2 = icmp eq i32 %1, 0, !dbg !16044
  br i1 %2, label %3, label %8, !dbg !16045

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16046
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !16047
  %6 = icmp ne i32 %5, 0, !dbg !16045
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16051, metadata !DIExpression()), !dbg !16053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !16054
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16056, !srcloc !14335
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16056
  call void @llvm.dbg.value(metadata i32 %3, metadata !14332, metadata !DIExpression()) #25, !dbg !16058
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !16058
  call void @llvm.dbg.value(metadata i32 %3, metadata !14326, metadata !DIExpression()) #25, !dbg !16054
  call void @llvm.dbg.value(metadata i32 %3, metadata !16052, metadata !DIExpression()), !dbg !16053
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16059
  %5 = load i8, i8* %4, align 4, !dbg !16059
  %6 = and i8 %5, 1, !dbg !16061
  %7 = icmp eq i8 %6, 0, !dbg !16062
  br i1 %7, label %9, label %8, !dbg !16063

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !16064
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !16064
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !16067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16069, !srcloc !14361
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16070, !srcloc !16072
  br label %24, !dbg !16073

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16074
  %11 = load i8, i8* %10, align 1, !dbg !16074
  %12 = and i8 %11, 8, !dbg !16076
  %13 = icmp eq i8 %12, 0, !dbg !16077
  br i1 %13, label %15, label %14, !dbg !16078

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !16079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !16079
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !16082
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16084, !srcloc !14361
  br label %24, !dbg !16085

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !16086
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16087
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16089
  br i1 %17, label %18, label %23, !dbg !16090

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16091, !srcloc !14971
  call void @llvm.dbg.value(metadata i32 %19, metadata !14967, metadata !DIExpression()) #25, !dbg !16094
  %20 = icmp eq i32 %19, 0, !dbg !16095
  br i1 %20, label %21, label %23, !dbg !16096

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14931, metadata !DIExpression()) #25, !dbg !16097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14936, metadata !DIExpression()) #25, !dbg !16097
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !16100
  br label %23, !dbg !16101

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14347, metadata !DIExpression()) #25, !dbg !16102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !16102
  call void @llvm.dbg.value(metadata i32 %3, metadata !14355, metadata !DIExpression()) #25, !dbg !16104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16106, !srcloc !14361
  br label %24, !dbg !16107

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16110, metadata !DIExpression()), !dbg !16111
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16112
  %3 = load i8, i8* %2, align 1, !dbg !16112
  %4 = and i8 %3, 8, !dbg !16114
  %5 = icmp eq i8 %4, 0, !dbg !16115
  br i1 %5, label %6, label %20, !dbg !16116

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16117
  %8 = or i8 %7, 8, !dbg !16117
  store i8 %8, i8* %2, align 1, !dbg !16117
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !16119
  br i1 %9, label %10, label %12, !dbg !16121

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14489, metadata !DIExpression()) #25, !dbg !16122
  %11 = and i8 %8, 95, !dbg !16125
  store i8 %11, i8* %2, align 1, !dbg !16125
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14497, metadata !DIExpression()) #25, !dbg !16126
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !16128
  br label %12, !dbg !16129

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16130
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16130
  %15 = icmp eq %union.anon* %14, null, !dbg !16132
  br i1 %15, label %17, label %16, !dbg !16133

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16134
  br label %17, !dbg !16136

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !16137
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16138
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #27, !dbg !16139
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !16140
  br label %20, !dbg !16141

20:                                               ; preds = %17, %1
  ret void, !dbg !16142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16143 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16147, metadata !DIExpression()), !dbg !16149
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16150
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16148, metadata !DIExpression()), !dbg !16149
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16151
  br i1 %3, label %10, label %4, !dbg !16152

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16153
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !16155
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16156, metadata !DIExpression()), !dbg !16162
  call void @llvm.dbg.value(metadata i32 0, metadata !16161, metadata !DIExpression()), !dbg !16162
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16164
  store i32 0, i32* %7, align 4, !dbg !16165
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !16166
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #27, !dbg !16150
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16148, metadata !DIExpression()), !dbg !16149
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16151
  br i1 %9, label %10, label %4, !dbg !16152, !llvm.loop !16167

10:                                               ; preds = %4, %1
  ret void, !dbg !16169
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16170 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16175, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16174, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !16179
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16181, !srcloc !14335
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16181
  call void @llvm.dbg.value(metadata i32 %4, metadata !14332, metadata !DIExpression()) #25, !dbg !16183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !16183
  call void @llvm.dbg.value(metadata i32 %4, metadata !14326, metadata !DIExpression()) #25, !dbg !16179
  call void @llvm.dbg.value(metadata i32 %4, metadata !16176, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i32 0, metadata !16177, metadata !DIExpression()), !dbg !16178
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16184
  %6 = load i8, i8* %5, align 1, !dbg !16184
  %7 = and i8 %6, 8, !dbg !16186
  %8 = icmp eq i8 %7, 0, !dbg !16187
  br i1 %8, label %9, label %24, !dbg !16188

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16175, metadata !DIExpression()), !dbg !16178
  %11 = icmp eq i64 %10, 0, !dbg !16189
  br i1 %11, label %24, label %12, !dbg !16191

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16192
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16194
  br i1 %14, label %24, label %15, !dbg !16195

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16196
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16196
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16197
  %19 = icmp eq %union.anon* %17, %18, !dbg !16198
  br i1 %19, label %24, label %20, !dbg !16199

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16200
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #27, !dbg !16202
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16203
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #27, !dbg !16204
  call void @llvm.dbg.value(metadata i32 %4, metadata !14931, metadata !DIExpression()) #25, !dbg !16205
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14936, metadata !DIExpression()) #25, !dbg !16205
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #26, !dbg !16207
  call void @llvm.dbg.value(metadata i32 %23, metadata !16177, metadata !DIExpression()), !dbg !16178
  br label %26, !dbg !16208

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16209
  call void @llvm.dbg.value(metadata i32 %25, metadata !16177, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i32 %4, metadata !14347, metadata !DIExpression()) #25, !dbg !16210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !16210
  call void @llvm.dbg.value(metadata i32 %4, metadata !14355, metadata !DIExpression()) #25, !dbg !16212
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16214, !srcloc !14361
  br label %26, !dbg !16215

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16178
  ret i32 %27, !dbg !16216
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16217 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16221, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i32 %1, metadata !16222, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i8* %2, metadata !16223, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i8 0, metadata !16225, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i32 0, metadata !16226, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14320, metadata !DIExpression()) #25, !dbg !16231
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16233, !srcloc !14335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14332, metadata !DIExpression()) #25, !dbg !16235
  call void @llvm.dbg.value(metadata i32 undef, metadata !14333, metadata !DIExpression()) #25, !dbg !16235
  call void @llvm.dbg.value(metadata i32 undef, metadata !14326, metadata !DIExpression()) #25, !dbg !16231
  call void @llvm.dbg.value(metadata i32 undef, metadata !16228, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata i8 poison, metadata !16225, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !16226, metadata !DIExpression()), !dbg !16230
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #27, !dbg !16236
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16224, metadata !DIExpression()), !dbg !16229
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16239
  br i1 %7, label %12, label %8, !dbg !16241

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16242, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata i32 %1, metadata !16247, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata i8* %2, metadata !16248, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16156, metadata !DIExpression()), !dbg !16252
  call void @llvm.dbg.value(metadata i32 %1, metadata !16161, metadata !DIExpression()), !dbg !16252
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16254
  store i32 %1, i32* %9, align 4, !dbg !16255
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16256
  store i8* %2, i8** %10, align 4, !dbg !16257
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16258
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #27, !dbg !16259
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #27, !dbg !16260
  call void @llvm.dbg.value(metadata i8 1, metadata !16225, metadata !DIExpression()), !dbg !16229
  br label %12, !dbg !16261

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16233
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16233
  call void @llvm.dbg.value(metadata i32 %14, metadata !14332, metadata !DIExpression()) #25, !dbg !16235
  call void @llvm.dbg.value(metadata i32 %14, metadata !14326, metadata !DIExpression()) #25, !dbg !16231
  call void @llvm.dbg.value(metadata i32 %14, metadata !16228, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata i8 poison, metadata !16225, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14347, metadata !DIExpression()) #25, !dbg !16262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14352, metadata !DIExpression()) #25, !dbg !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !14355, metadata !DIExpression()) #25, !dbg !16264
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16266, !srcloc !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !16226, metadata !DIExpression()), !dbg !16230
  ret i1 %13, !dbg !16267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16268 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16273, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.value(metadata i64 undef, metadata !16275, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16272, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16274, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.value(metadata i8** %4, metadata !16276, metadata !DIExpression()), !dbg !16278
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #27, !dbg !16279
  call void @llvm.dbg.value(metadata i32 %6, metadata !16277, metadata !DIExpression()), !dbg !16278
  %7 = icmp eq i8** %4, null, !dbg !16280
  br i1 %7, label %12, label %8, !dbg !16282

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16283
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16285
  %11 = load i8*, i8** %10, align 4, !dbg !16285
  store i8* %11, i8** %4, align 4, !dbg !16286
  br label %12, !dbg !16287

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16289 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16291
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16292
  ret void, !dbg !16293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16294 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16304, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16302, metadata !DIExpression()), !dbg !16321
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16303, metadata !DIExpression()), !dbg !16321
  %5 = icmp eq i64 %4, -1, !dbg !16322
  br i1 %5, label %55, label %6, !dbg !16324

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16325
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16326
  call void @llvm.dbg.value(metadata i32 0, metadata !16305, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16335
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16337, !srcloc !16343
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16337
  call void @llvm.dbg.value(metadata i32 %9, metadata !16340, metadata !DIExpression()) #25, !dbg !16344
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16344
  call void @llvm.dbg.value(metadata i32 %9, metadata !16334, metadata !DIExpression()) #25, !dbg !16335
  call void @llvm.dbg.value(metadata i32 %9, metadata !16311, metadata !DIExpression()), !dbg !16327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()), !dbg !16327
  %10 = icmp slt i64 %4, -1, !dbg !16345
  br i1 %10, label %11, label %17, !dbg !16346

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16347
  %13 = add i64 %4, %12, !dbg !16348
  %14 = sub i64 -2, %13, !dbg !16348
  call void @llvm.dbg.value(metadata i64 %14, metadata !16315, metadata !DIExpression()), !dbg !16349
  %15 = icmp sgt i64 %14, 1, !dbg !16350
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16350
  br label %22, !dbg !16351

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16352
  %19 = tail call fastcc i32 @elapsed.167() #27, !dbg !16354
  %20 = sext i32 %19 to i64, !dbg !16354
  %21 = add nsw i64 %18, %20, !dbg !16355
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16356
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16357
  store i64 %23, i64* %24, align 8, !dbg !16358
  %25 = tail call fastcc %struct._timeout* @first() #27, !dbg !16359
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16312, metadata !DIExpression()), !dbg !16361
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16362
  br i1 %26, label %42, label %27, !dbg !16362

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16363
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16312, metadata !DIExpression()), !dbg !16361
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16367
  %31 = load i64, i64* %30, align 8, !dbg !16367
  %32 = icmp slt i64 %28, %31, !dbg !16368
  br i1 %32, label %33, label %38, !dbg !16369

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16367
  %35 = sub nsw i64 %31, %28, !dbg !16370
  store i64 %35, i64* %34, align 8, !dbg !16370
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16372
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16373
  tail call fastcc void @sys_dlist_insert.168(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #27, !dbg !16374
  br label %44, !dbg !16375

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16376
  store i64 %39, i64* %24, align 8, !dbg !16376
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #27, !dbg !16377
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16312, metadata !DIExpression()), !dbg !16361
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16362
  br i1 %41, label %42, label %27, !dbg !16362, !llvm.loop !16378

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16380
  tail call fastcc void @sys_dlist_append.169(%struct._dnode* noundef %43) #27, !dbg !16383
  br label %44, !dbg !16384

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #27, !dbg !16385
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16386
  br i1 %46, label %47, label %54, !dbg !16387

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #27, !dbg !16388
  call void @llvm.dbg.value(metadata i32 %48, metadata !16318, metadata !DIExpression()), !dbg !16389
  %49 = icmp ne i32 %48, 0, !dbg !16390
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16392
  br i1 %52, label %54, label %53, !dbg !16392

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #26, !dbg !16393
  br label %54, !dbg !16395

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16396, metadata !DIExpression()) #25, !dbg !16402
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16402
  call void @llvm.dbg.value(metadata i32 %9, metadata !16404, metadata !DIExpression()) #25, !dbg !16407
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16409, !srcloc !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16305, metadata !DIExpression()), !dbg !16327
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.167() unnamed_addr #1 !dbg !16412 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16415
  %2 = icmp eq i32 %1, 0, !dbg !16416
  br i1 %2, label %3, label %5, !dbg !16415

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16417
  br label %5, !dbg !16415

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16415
  ret i32 %6, !dbg !16418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16419 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.172() #27, !dbg !16425
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16423, metadata !DIExpression()), !dbg !16426
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16427
  ret %struct._timeout* %2, !dbg !16428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.168(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16429 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16433, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16434, metadata !DIExpression()), !dbg !16437
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16438
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16438
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16435, metadata !DIExpression()), !dbg !16437
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16439
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16440
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16441
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16442
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16443
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16444
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16445
  ret void, !dbg !16446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16447 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16451, metadata !DIExpression()), !dbg !16453
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16454
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.170(%struct._dnode* noundef %2) #27, !dbg !16455
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16452, metadata !DIExpression()), !dbg !16453
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16456
  ret %struct._timeout* %4, !dbg !16457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.169(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16458 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16463, metadata !DIExpression()), !dbg !16466
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16464, metadata !DIExpression()), !dbg !16466
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16467
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16465, metadata !DIExpression()), !dbg !16466
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16468
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16469
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16470
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16471
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16472
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16473
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16474
  ret void, !dbg !16475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16476 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !16481
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16478, metadata !DIExpression()), !dbg !16482
  %2 = tail call fastcc i32 @elapsed.167() #27, !dbg !16483
  call void @llvm.dbg.value(metadata i32 %2, metadata !16479, metadata !DIExpression()), !dbg !16482
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16484
  br i1 %3, label %14, label %4, !dbg !16486

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16487
  %6 = load i64, i64* %5, align 8, !dbg !16487
  %7 = sext i32 %2 to i64, !dbg !16488
  %8 = sub nsw i64 %6, %7, !dbg !16489
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16490
  br i1 %9, label %14, label %10, !dbg !16491

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16492
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16492
  %13 = trunc i64 %12 to i32, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %13, metadata !16480, metadata !DIExpression()), !dbg !16482
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16494
  call void @llvm.dbg.value(metadata i32 %15, metadata !16480, metadata !DIExpression()), !dbg !16482
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16495
  %17 = icmp ne i32 %16, 0, !dbg !16497
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16498
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %20, metadata !16480, metadata !DIExpression()), !dbg !16482
  ret i32 %20, !dbg !16499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.170(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16500 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16504, metadata !DIExpression()), !dbg !16506
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16505, metadata !DIExpression()), !dbg !16506
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16507
  br i1 %2, label %5, label %3, !dbg !16508

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.171(%struct._dnode* noundef nonnull %0) #27, !dbg !16509
  br label %5, !dbg !16508

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16508
  ret %struct._dnode* %6, !dbg !16510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.171(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16511 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16513, metadata !DIExpression()), !dbg !16515
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16514, metadata !DIExpression()), !dbg !16515
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16516
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16517
  br i1 %3, label %7, label %4, !dbg !16518

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16519
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16519
  br label %7, !dbg !16518

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16518
  ret %struct._dnode* %8, !dbg !16520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.172() unnamed_addr #5 !dbg !16521 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16525, metadata !DIExpression()), !dbg !16526
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.173() #27, !dbg !16527
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16527
  ret %struct._dnode* %3, !dbg !16528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.173() unnamed_addr #5 !dbg !16529 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16533, metadata !DIExpression()), !dbg !16534
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16535
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16536
  ret i1 %2, !dbg !16537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16538 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16542, metadata !DIExpression()), !dbg !16547
  call void @llvm.dbg.value(metadata i32 -22, metadata !16543, metadata !DIExpression()), !dbg !16547
  call void @llvm.dbg.value(metadata i32 0, metadata !16544, metadata !DIExpression()), !dbg !16548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16549
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16551, !srcloc !16343
  call void @llvm.dbg.value(metadata i32 undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16553
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16553
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()), !dbg !16548
  call void @llvm.dbg.value(metadata i32 -22, metadata !16543, metadata !DIExpression()), !dbg !16547
  call void @llvm.dbg.value(metadata i32 undef, metadata !16544, metadata !DIExpression()), !dbg !16548
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16543, metadata !DIExpression()), !dbg !16547
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.176(%struct._dnode* noundef %3) #27, !dbg !16554
  br i1 %4, label %5, label %6, !dbg !16558

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !16559
  call void @llvm.dbg.value(metadata i32 0, metadata !16543, metadata !DIExpression()), !dbg !16547
  br label %6, !dbg !16561

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16547
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16551
  call void @llvm.dbg.value(metadata i32 %8, metadata !16340, metadata !DIExpression()) #25, !dbg !16553
  call void @llvm.dbg.value(metadata i32 %8, metadata !16334, metadata !DIExpression()) #25, !dbg !16549
  call void @llvm.dbg.value(metadata i32 %8, metadata !16546, metadata !DIExpression()), !dbg !16548
  call void @llvm.dbg.value(metadata i32 %7, metadata !16543, metadata !DIExpression()), !dbg !16547
  call void @llvm.dbg.value(metadata i32 undef, metadata !16396, metadata !DIExpression()) #25, !dbg !16562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16562
  call void @llvm.dbg.value(metadata i32 undef, metadata !16404, metadata !DIExpression()) #25, !dbg !16564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16566, !srcloc !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16544, metadata !DIExpression()), !dbg !16548
  ret i32 %7, !dbg !16567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.176(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16568 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16574, metadata !DIExpression()), !dbg !16575
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16576
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16576
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16577
  ret i1 %4, !dbg !16578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !16579 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16581, metadata !DIExpression()), !dbg !16582
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !16583
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16585
  br i1 %3, label %10, label %4, !dbg !16586

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16587
  %6 = load i64, i64* %5, align 8, !dbg !16587
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16589
  %8 = load i64, i64* %7, align 8, !dbg !16590
  %9 = add nsw i64 %8, %6, !dbg !16590
  store i64 %9, i64* %7, align 8, !dbg !16590
  br label %10, !dbg !16591

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16592
  tail call fastcc void @sys_dlist_remove.177(%struct._dnode* noundef %11) #27, !dbg !16593
  ret void, !dbg !16594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.177(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !16595 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16599, metadata !DIExpression()), !dbg !16602
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16603
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16603
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16600, metadata !DIExpression()), !dbg !16602
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16604
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16604
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16601, metadata !DIExpression()), !dbg !16602
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16605
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16606
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16607
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16608
  tail call fastcc void @sys_dnode_init.178(%struct._dnode* noundef %0) #27, !dbg !16609
  ret void, !dbg !16610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.178(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16611 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16613, metadata !DIExpression()), !dbg !16614
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16615
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16616
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16617
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16618
  ret void, !dbg !16619
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16620 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16626, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i64 0, metadata !16627, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 0, metadata !16628, metadata !DIExpression()), !dbg !16632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16633
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16635, !srcloc !16343
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16635
  call void @llvm.dbg.value(metadata i32 %3, metadata !16340, metadata !DIExpression()) #25, !dbg !16637
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %3, metadata !16334, metadata !DIExpression()) #25, !dbg !16633
  call void @llvm.dbg.value(metadata i32 %3, metadata !16630, metadata !DIExpression()), !dbg !16632
  call void @llvm.dbg.value(metadata i64 0, metadata !16627, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 undef, metadata !16628, metadata !DIExpression()), !dbg !16632
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16638
  call void @llvm.dbg.value(metadata i64 %4, metadata !16627, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.value(metadata i32 %3, metadata !16396, metadata !DIExpression()) #25, !dbg !16641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16641
  call void @llvm.dbg.value(metadata i32 %3, metadata !16404, metadata !DIExpression()) #25, !dbg !16643
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16645, !srcloc !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16628, metadata !DIExpression()), !dbg !16632
  ret i64 %4, !dbg !16646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16647 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16649, metadata !DIExpression()), !dbg !16653
  call void @llvm.dbg.value(metadata i64 0, metadata !16650, metadata !DIExpression()), !dbg !16653
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.179(%struct._timeout* noundef %0) #27, !dbg !16654
  br i1 %2, label %21, label %3, !dbg !16656

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !16657
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16651, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata i64 0, metadata !16650, metadata !DIExpression()), !dbg !16653
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16659
  br i1 %5, label %16, label %6, !dbg !16661

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16651, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata i64 %8, metadata !16650, metadata !DIExpression()), !dbg !16653
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16662
  %10 = load i64, i64* %9, align 8, !dbg !16662
  %11 = add nsw i64 %10, %8, !dbg !16664
  call void @llvm.dbg.value(metadata i64 %11, metadata !16650, metadata !DIExpression()), !dbg !16653
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16665
  br i1 %12, label %16, label %13, !dbg !16667

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !16668
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16651, metadata !DIExpression()), !dbg !16658
  call void @llvm.dbg.value(metadata i64 %11, metadata !16650, metadata !DIExpression()), !dbg !16653
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16659
  br i1 %15, label %16, label %6, !dbg !16661, !llvm.loop !16669

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16653
  call void @llvm.dbg.value(metadata i64 %17, metadata !16650, metadata !DIExpression()), !dbg !16653
  %18 = tail call fastcc i32 @elapsed.167() #27, !dbg !16671
  %19 = sext i32 %18 to i64, !dbg !16671
  %20 = sub nsw i64 %17, %19, !dbg !16672
  br label %21, !dbg !16673

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16653
  ret i64 %22, !dbg !16674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.179(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16675 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16679, metadata !DIExpression()), !dbg !16680
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16681
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.176(%struct._dnode* noundef %2) #27, !dbg !16682
  %4 = xor i1 %3, true, !dbg !16683
  ret i1 %4, !dbg !16684
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16685 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16687, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i64 0, metadata !16688, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i32 0, metadata !16689, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16694
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16696, !srcloc !16343
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16696
  call void @llvm.dbg.value(metadata i32 %3, metadata !16340, metadata !DIExpression()) #25, !dbg !16698
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %3, metadata !16334, metadata !DIExpression()) #25, !dbg !16694
  call void @llvm.dbg.value(metadata i32 %3, metadata !16691, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata i64 0, metadata !16688, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.value(metadata i32 undef, metadata !16689, metadata !DIExpression()), !dbg !16693
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16699
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !16702
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16692
  call void @llvm.dbg.value(metadata i32 %3, metadata !16396, metadata !DIExpression()) #25, !dbg !16703
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16703
  call void @llvm.dbg.value(metadata i32 %3, metadata !16404, metadata !DIExpression()) #25, !dbg !16705
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16707, !srcloc !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16689, metadata !DIExpression()), !dbg !16693
  %6 = add i64 %5, %4, !dbg !16708
  ret i64 %6, !dbg !16709
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16710 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16712, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i32 0, metadata !16713, metadata !DIExpression()), !dbg !16717
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16718
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16720, !srcloc !16343
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16720
  call void @llvm.dbg.value(metadata i32 %2, metadata !16340, metadata !DIExpression()) #25, !dbg !16722
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16722
  call void @llvm.dbg.value(metadata i32 %2, metadata !16334, metadata !DIExpression()) #25, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %2, metadata !16715, metadata !DIExpression()), !dbg !16717
  call void @llvm.dbg.value(metadata i32 -1, metadata !16712, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()), !dbg !16717
  %3 = tail call fastcc i32 @next_timeout() #27, !dbg !16723
  call void @llvm.dbg.value(metadata i32 %3, metadata !16712, metadata !DIExpression()), !dbg !16716
  call void @llvm.dbg.value(metadata i32 %2, metadata !16396, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16726
  call void @llvm.dbg.value(metadata i32 %2, metadata !16404, metadata !DIExpression()) #25, !dbg !16728
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16730, !srcloc !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()), !dbg !16717
  ret i32 %3, !dbg !16731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16734, metadata !DIExpression()), !dbg !16744
  call void @llvm.dbg.value(metadata i1 %1, metadata !16735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16744
  call void @llvm.dbg.value(metadata i32 0, metadata !16736, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16746
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16748, !srcloc !16343
  call void @llvm.dbg.value(metadata i32 undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16738, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16745
  %4 = tail call fastcc i32 @next_timeout() #27, !dbg !16751
  call void @llvm.dbg.value(metadata i32 %4, metadata !16739, metadata !DIExpression()), !dbg !16752
  call void @llvm.dbg.value(metadata i1 undef, metadata !16742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16752
  %5 = icmp slt i32 %4, 2, !dbg !16753
  call void @llvm.dbg.value(metadata i1 %5, metadata !16743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16752
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16754
  call void @llvm.dbg.value(metadata i1 %6, metadata !16742, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16752
  br i1 %7, label %11, label %8, !dbg !16754

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16756
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16756
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #26, !dbg !16758
  br label %11, !dbg !16759

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16748
  call void @llvm.dbg.value(metadata i32 %12, metadata !16340, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 %12, metadata !16334, metadata !DIExpression()) #25, !dbg !16746
  call void @llvm.dbg.value(metadata i32 %12, metadata !16738, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16396, metadata !DIExpression()) #25, !dbg !16760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16760
  call void @llvm.dbg.value(metadata i32 undef, metadata !16404, metadata !DIExpression()) #25, !dbg !16762
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16764, !srcloc !16410
  call void @llvm.dbg.value(metadata i32 1, metadata !16736, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16745
  ret void, !dbg !16765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16770, metadata !DIExpression()), !dbg !16775
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16776
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16777
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16779, !srcloc !16343
  call void @llvm.dbg.value(metadata i32 undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()), !dbg !16775
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16775
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()), !dbg !16775
  %3 = tail call fastcc %struct._timeout* @first() #27, !dbg !16782
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16783
  br i1 %4, label %28, label %5, !dbg !16784

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16785
  %10 = load i64, i64* %9, align 8, !dbg !16785
  %11 = sext i32 %8 to i64, !dbg !16786
  %12 = icmp sgt i64 %10, %11, !dbg !16787
  br i1 %12, label %26, label %13, !dbg !16788

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16775
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16772, metadata !DIExpression()), !dbg !16789
  %15 = trunc i64 %10 to i32, !dbg !16790
  call void @llvm.dbg.value(metadata i32 %15, metadata !16774, metadata !DIExpression()), !dbg !16789
  %16 = sext i32 %15 to i64, !dbg !16791
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16792
  %18 = add i64 %17, %16, !dbg !16792
  store i64 %18, i64* @curr_tick, align 8, !dbg !16792
  store i64 0, i64* %9, align 8, !dbg !16793
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #27, !dbg !16794
  call void @llvm.dbg.value(metadata i32 %14, metadata !16396, metadata !DIExpression()) #25, !dbg !16795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16795
  call void @llvm.dbg.value(metadata i32 %14, metadata !16404, metadata !DIExpression()) #25, !dbg !16797
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16799, !srcloc !16410
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16800
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16800
  tail call void %20(%struct._timeout* noundef nonnull %6) #26, !dbg !16801
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16802
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16804, !srcloc !16343
  call void @llvm.dbg.value(metadata i32 undef, metadata !16340, metadata !DIExpression()) #25, !dbg !16806
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16806
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #25, !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()), !dbg !16775
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16807
  %23 = sub nsw i32 %22, %15, !dbg !16807
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16775
  call void @llvm.dbg.value(metadata i32 undef, metadata !16771, metadata !DIExpression()), !dbg !16775
  %24 = tail call fastcc %struct._timeout* @first() #27, !dbg !16782
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16783
  br i1 %25, label %28, label %5, !dbg !16784, !llvm.loop !16808

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16810
  store i64 %27, i64* %9, align 8, !dbg !16810
  br label %32, !dbg !16813

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16775
  %31 = sext i32 %30 to i64, !dbg !16814
  br label %32, !dbg !16814

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16814
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16775
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16815
  %37 = add i64 %36, %33, !dbg !16815
  store i64 %37, i64* @curr_tick, align 8, !dbg !16815
  store i32 0, i32* @announce_remaining, align 4, !dbg !16816
  %38 = tail call fastcc i32 @next_timeout() #27, !dbg !16817
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #26, !dbg !16818
  call void @llvm.dbg.value(metadata i32 %35, metadata !16396, metadata !DIExpression()) #25, !dbg !16819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16819
  call void @llvm.dbg.value(metadata i32 %35, metadata !16404, metadata !DIExpression()) #25, !dbg !16821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16823, !srcloc !16410
  ret void, !dbg !16824
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16825 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16829, metadata !DIExpression()), !dbg !16833
  call void @llvm.dbg.value(metadata i32 0, metadata !16830, metadata !DIExpression()), !dbg !16834
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16328, metadata !DIExpression()) #25, !dbg !16835
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16837, !srcloc !16343
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16837
  call void @llvm.dbg.value(metadata i32 %2, metadata !16340, metadata !DIExpression()) #25, !dbg !16839
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()) #25, !dbg !16839
  call void @llvm.dbg.value(metadata i32 %2, metadata !16334, metadata !DIExpression()) #25, !dbg !16835
  call void @llvm.dbg.value(metadata i32 %2, metadata !16832, metadata !DIExpression()), !dbg !16834
  call void @llvm.dbg.value(metadata i64 0, metadata !16829, metadata !DIExpression()), !dbg !16833
  call void @llvm.dbg.value(metadata i32 undef, metadata !16830, metadata !DIExpression()), !dbg !16834
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16840
  %4 = tail call fastcc i32 @elapsed.167() #27, !dbg !16843
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16829, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16833
  call void @llvm.dbg.value(metadata i32 %2, metadata !16396, metadata !DIExpression()) #25, !dbg !16844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16401, metadata !DIExpression()) #25, !dbg !16844
  call void @llvm.dbg.value(metadata i32 %2, metadata !16404, metadata !DIExpression()) #25, !dbg !16846
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16848, !srcloc !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !16830, metadata !DIExpression()), !dbg !16834
  %5 = sext i32 %4 to i64, !dbg !16843
  %6 = add i64 %3, %5, !dbg !16849
  ret i64 %6, !dbg !16850
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16851 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16852
  %2 = trunc i64 %1 to i32, !dbg !16853
  ret i32 %2, !dbg !16854
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16855 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !16856
  ret i64 %1, !dbg !16857
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16860, metadata !DIExpression()), !dbg !16867
  %2 = icmp eq i32 %0, 0, !dbg !16868
  br i1 %2, label %10, label %3, !dbg !16870

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16871
  call void @llvm.dbg.value(metadata i32 %4, metadata !16861, metadata !DIExpression()), !dbg !16867
  %5 = mul i32 %0, 84, !dbg !16872
  call void @llvm.dbg.value(metadata i32 %5, metadata !16862, metadata !DIExpression()), !dbg !16867
  br label %6, !dbg !16873

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !16874
  call void @llvm.dbg.value(metadata i32 %7, metadata !16863, metadata !DIExpression()), !dbg !16875
  %8 = sub i32 %7, %4, !dbg !16876
  %9 = icmp ult i32 %8, %5, !dbg !16878
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16880 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !16881
  ret i32 %1, !dbg !16882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16883 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !16885
  ret i32 %1, !dbg !16886
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16887 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16891, metadata !DIExpression()), !dbg !16893
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16894

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !16895
  br label %14, !dbg !16899

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16892, metadata !DIExpression()), !dbg !16893
  %6 = icmp slt i64 %2, -1, !dbg !16900
  br i1 %6, label %7, label %9, !dbg !16903

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16904
  br label %14, !dbg !16905

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !16907
  %11 = icmp ugt i64 %2, 1, !dbg !16908
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16908
  %13 = add nsw i64 %10, %12, !dbg !16909
  br label %14, !dbg !16910

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16911
  ret i64 %15, !dbg !16912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !16913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !16916, metadata !DIExpression()), !dbg !16949
  %2 = icmp eq i8* %0, null, !dbg !16950
  br i1 %2, label %7, label %3, !dbg !16952

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !16917, metadata !DIExpression()), !dbg !16949
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !16953
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !16953
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !16917, metadata !DIExpression()), !dbg !16949
  call void @llvm.dbg.value(metadata i8* %4, metadata !16916, metadata !DIExpression()), !dbg !16949
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !16955
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !16956
  br label %7, !dbg !16957

7:                                                ; preds = %3, %1
  ret void, !dbg !16958
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16963, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata i32 %1, metadata !16964, metadata !DIExpression()), !dbg !16967
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !16968
  br i1 %3, label %11, label %4, !dbg !16970

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16971
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !16973
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !16973
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !16966, metadata !DIExpression()), !dbg !16967
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !16974
  br i1 %8, label %11, label %9, !dbg !16976

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #27, !dbg !16977
  call void @llvm.dbg.value(metadata i8* %10, metadata !16965, metadata !DIExpression()), !dbg !16967
  br label %11, !dbg !16979

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !16980
  call void @llvm.dbg.value(metadata i8* %12, metadata !16965, metadata !DIExpression()), !dbg !16967
  ret i8* %12, !dbg !16981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !16982 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16986, metadata !DIExpression()), !dbg !16992
  call void @llvm.dbg.value(metadata i32 %1, metadata !16987, metadata !DIExpression()), !dbg !16992
  call void @llvm.dbg.value(metadata i32 %2, metadata !16988, metadata !DIExpression()), !dbg !16992
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !16988, metadata !DIExpression(DW_OP_deref)), !dbg !16992
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !16993
  br i1 %5, label %14, label %6, !dbg !16995

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !16996
  call void @llvm.dbg.value(metadata i32 %7, metadata !16991, metadata !DIExpression()), !dbg !16992
  %8 = load i32, i32* %4, align 4, !dbg !16997
  call void @llvm.dbg.value(metadata i32 %8, metadata !16988, metadata !DIExpression()), !dbg !16992
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !16998
  call void @llvm.dbg.value(metadata i8* %9, metadata !16989, metadata !DIExpression()), !dbg !16992
  %10 = icmp eq i8* %9, null, !dbg !16999
  br i1 %10, label %14, label %11, !dbg !17001

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17002
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !16990, metadata !DIExpression()), !dbg !16992
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17003
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17004
  call void @llvm.dbg.value(metadata i8* %13, metadata !16990, metadata !DIExpression()), !dbg !16992
  call void @llvm.dbg.value(metadata i8* %13, metadata !16989, metadata !DIExpression()), !dbg !16992
  br label %14, !dbg !17005

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !16992
  ret i8* %15, !dbg !17006
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17012, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata i32 4, metadata !17013, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata i32* %1, metadata !17014, metadata !DIExpression()), !dbg !17015
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17016
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17016
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17016
  store i32 %5, i32* %1, align 4, !dbg !17016
  ret i1 %4, !dbg !17017
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17018 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.192, i32 0, i32 0)) #26, !dbg !17020
  ret void, !dbg !17021
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17022 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17024, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17025, metadata !DIExpression()), !dbg !17045
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17046

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17047

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17025, metadata !DIExpression()), !dbg !17045
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17048
  %6 = load i8*, i8** %5, align 4, !dbg !17048
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17052
  %8 = load i32, i32* %7, align 4, !dbg !17052
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #27, !dbg !17053
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17054
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17025, metadata !DIExpression()), !dbg !17045
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17055
  br i1 %10, label %3, label %2, !dbg !17046, !llvm.loop !17057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17059 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17063, metadata !DIExpression()), !dbg !17066
  call void @llvm.dbg.value(metadata i8* %1, metadata !17064, metadata !DIExpression()), !dbg !17066
  call void @llvm.dbg.value(metadata i32 %2, metadata !17065, metadata !DIExpression()), !dbg !17066
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17067
  tail call fastcc void @z_waitq_init.194(%union.anon* noundef nonnull %4) #27, !dbg !17068
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17069
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !17070
  ret void, !dbg !17071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.194(%union.anon* noundef %0) unnamed_addr #4 !dbg !17072 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17077, metadata !DIExpression()), !dbg !17078
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17079
  tail call fastcc void @sys_dlist_init.195(%struct._dnode* noundef %2) #27, !dbg !17080
  ret void, !dbg !17081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.195(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17082 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17087, metadata !DIExpression()), !dbg !17088
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17089
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17090
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17091
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17092
  ret void, !dbg !17093
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17094 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17105, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17102, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 %1, metadata !17103, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 %2, metadata !17104, metadata !DIExpression()), !dbg !17115
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !17116
  call void @llvm.dbg.value(metadata i64 %6, metadata !17107, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i8* null, metadata !17108, metadata !DIExpression()), !dbg !17115
  %7 = icmp eq i64 %5, -1, !dbg !17117
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17117
  call void @llvm.dbg.value(metadata i64 %8, metadata !17107, metadata !DIExpression()), !dbg !17115
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17119, metadata !DIExpression()) #25, !dbg !17126
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17128, !srcloc !17134
  call void @llvm.dbg.value(metadata i32 undef, metadata !17131, metadata !DIExpression()) #25, !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()) #25, !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !17125, metadata !DIExpression()) #25, !dbg !17126
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i8 0, metadata !17114, metadata !DIExpression()), !dbg !17115
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17108, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i8 0, metadata !17114, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17115
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17136
  call void @llvm.dbg.value(metadata i8* %12, metadata !17108, metadata !DIExpression()), !dbg !17115
  %13 = tail call i64 @sys_clock_tick_get() #26, !dbg !17138
  call void @llvm.dbg.value(metadata i64 %13, metadata !17106, metadata !DIExpression()), !dbg !17115
  %14 = icmp eq i8* %12, null, !dbg !17139
  br i1 %14, label %15, label %31, !dbg !17141

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17115
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17141

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17114, metadata !DIExpression()), !dbg !17115
  %20 = sub nsw i64 %8, %18, !dbg !17142
  %21 = icmp slt i64 %20, 1, !dbg !17143
  br i1 %21, label %31, label %22, !dbg !17144

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17115
  call void @llvm.dbg.value(metadata i8 undef, metadata !17114, metadata !DIExpression()), !dbg !17115
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17145
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17145
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #26, !dbg !17145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17119, metadata !DIExpression()) #25, !dbg !17146
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17148, !srcloc !17134
  call void @llvm.dbg.value(metadata i32 undef, metadata !17131, metadata !DIExpression()) #25, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()) #25, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !17125, metadata !DIExpression()) #25, !dbg !17146
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i8* null, metadata !17108, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !17109, metadata !DIExpression()), !dbg !17115
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #26, !dbg !17136
  call void @llvm.dbg.value(metadata i8* %28, metadata !17108, metadata !DIExpression()), !dbg !17115
  %29 = tail call i64 @sys_clock_tick_get() #26, !dbg !17138
  call void @llvm.dbg.value(metadata i64 %29, metadata !17106, metadata !DIExpression()), !dbg !17115
  %30 = icmp eq i8* %28, null, !dbg !17139
  br i1 %30, label %17, label %31, !dbg !17141, !llvm.loop !17151

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17136
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17115
  call void @llvm.dbg.value(metadata i8* %33, metadata !17108, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 %34, metadata !17154, metadata !DIExpression()) #25, !dbg !17160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17159, metadata !DIExpression()) #25, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %34, metadata !17162, metadata !DIExpression()) #25, !dbg !17165
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17167, !srcloc !17168
  ret i8* %33, !dbg !17169
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17170 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17176, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 %1, metadata !17175, metadata !DIExpression()), !dbg !17178
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !17179
  call void @llvm.dbg.value(metadata i8* %4, metadata !17177, metadata !DIExpression()), !dbg !17178
  ret i8* %4, !dbg !17180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17181 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17185, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.value(metadata i8* %1, metadata !17186, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17119, metadata !DIExpression()) #25, !dbg !17189
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17191, !srcloc !17134
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17191
  call void @llvm.dbg.value(metadata i32 %4, metadata !17131, metadata !DIExpression()) #25, !dbg !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17132, metadata !DIExpression()) #25, !dbg !17193
  call void @llvm.dbg.value(metadata i32 %4, metadata !17125, metadata !DIExpression()) #25, !dbg !17189
  call void @llvm.dbg.value(metadata i32 %4, metadata !17187, metadata !DIExpression()), !dbg !17188
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17194
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #26, !dbg !17195
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17196
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #26, !dbg !17198
  %8 = icmp eq i32 %7, 0, !dbg !17199
  br i1 %8, label %12, label %9, !dbg !17200

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17201
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17202
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #26, !dbg !17202
  br label %13, !dbg !17204

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17154, metadata !DIExpression()) #25, !dbg !17205
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17159, metadata !DIExpression()) #25, !dbg !17205
  call void @llvm.dbg.value(metadata i32 %4, metadata !17162, metadata !DIExpression()) #25, !dbg !17208
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17210, !srcloc !17168
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17211
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!774, !2, !2517, !2519, !27, !2521, !2523, !2556, !2593, !111, !168, !197, !2595, !2606, !2652, !2654, !2682, !2710, !2753, !2824, !2869, !367, !510, !2897, !546, !556, !581, !806, !2902, !942, !1122, !1430, !1694, !2940, !1805, !1895, !2942, !3027, !3091, !1945, !3094, !1951, !2312, !3112, !3114, !2332, !3155, !2447, !3158, !3160, !2486}
!llvm.ident = !{!3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162, !3162}
!llvm.module.flags = !{!3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 372, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "free_queue", scope: !197, file: !294, line: 17, type: !295, isLocal: true, isDefinition: true, align: 32)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !291, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!199 = !{!102, !200, !204, !103, !206}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !201, line: 46, baseType: !202)
!201 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !203)
!203 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !205, line: 214, baseType: !32)
!205 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !231, !235, !239, !252, !257, !263, !269, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !208, file: !209, line: 365, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!213 = !DISubroutineType(types: !214)
!214 = !{!103, !215, !230}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !218)
!218 = !{!219, !220, !221, !222, !228, !229}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !217, file: !141, line: 380, baseType: !144, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !217, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !217, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !217, file: !141, line: 386, baseType: !223, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !225)
!225 = !{!226, !227}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !224, file: !141, line: 359, baseType: !154, size: 8)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !224, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !217, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !217, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !208, file: !209, line: 366, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 32)
!233 = !DISubroutineType(types: !234)
!234 = !{null, !215, !155}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !208, file: !209, line: 374, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = !DISubroutineType(types: !238)
!238 = !{!103, !215}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !208, file: !209, line: 377, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = !DISubroutineType(types: !242)
!242 = !{!103, !215, !243}
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !246)
!246 = !{!247, !248, !249, !250, !251}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !245, file: !209, line: 123, baseType: !121, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !245, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !245, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !245, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !245, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !208, file: !209, line: 379, baseType: !253, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = !DISubroutineType(types: !255)
!255 = !{!103, !215, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !208, file: !209, line: 384, baseType: !258, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DISubroutineType(types: !260)
!260 = !{!103, !215, !261, !103}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !208, file: !209, line: 393, baseType: !264, size: 32, offset: 192)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!103, !215, !267, !268}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !208, file: !209, line: 402, baseType: !270, size: 32, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !215}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !208, file: !209, line: 405, baseType: !270, size: 32, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !208, file: !209, line: 408, baseType: !236, size: 32, offset: 288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !208, file: !209, line: 411, baseType: !270, size: 32, offset: 320)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !208, file: !209, line: 414, baseType: !270, size: 32, offset: 352)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !208, file: !209, line: 417, baseType: !236, size: 32, offset: 384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !208, file: !209, line: 420, baseType: !236, size: 32, offset: 416)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !208, file: !209, line: 423, baseType: !270, size: 32, offset: 448)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !208, file: !209, line: 426, baseType: !270, size: 32, offset: 480)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !208, file: !209, line: 429, baseType: !236, size: 32, offset: 512)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !208, file: !209, line: 432, baseType: !236, size: 32, offset: 544)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !208, file: !209, line: 435, baseType: !284, size: 32, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !215, !287, !102}
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !215, !102}
!291 = !{!195, !292, !339, !360}
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "used_queue", scope: !197, file: !294, line: 18, type: !295, isLocal: true, isDefinition: true, align: 32)
!294 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !295, file: !296, line: 2209, baseType: !299, size: 128)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !300)
!300 = !{!301, !314, !318}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !299, file: !296, line: 1710, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !305)
!305 = !{!306, !313}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !304, file: !303, line: 42, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !309)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !310)
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !309, file: !303, line: 36, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !303, line: 32, baseType: !121)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !304, file: !303, line: 43, baseType: !307, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !299, file: !296, line: 1711, baseType: !315, offset: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!316 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !{}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !299, file: !296, line: 1712, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !322)
!322 = !{!323}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !321, file: !320, line: 232, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !327)
!327 = !{!328, !334}
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 38, baseType: !329, size: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 38, size: 32, elements: !330)
!330 = !{!331, !333}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !329, file: !325, line: 39, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !329, file: !325, line: 40, baseType: !332, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !325, line: 42, baseType: !335, size: 32, offset: 32)
!335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !325, line: 42, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !335, file: !325, line: 43, baseType: !332, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !335, file: !325, line: 44, baseType: !332, size: 32)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "cmd", scope: !341, file: !294, line: 22, type: !348, isLocal: true, isDefinition: true)
!341 = distinct !DISubprogram(name: "console_getline", scope: !294, file: !294, line: 20, type: !342, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !345)
!342 = !DISubroutineType(types: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!345 = !{!346}
!346 = !DILocalVariable(name: "ret", scope: !347, file: !294, line: 29, type: !102)
!347 = distinct !DILexicalBlock(scope: !341, file: !294, line: 29, column: 8)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !351)
!350 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !{!352, !355, !356}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !349, file: !350, line: 23, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !354)
!354 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !349, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !349, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 1024, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 128)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "line_bufs", scope: !197, file: !294, line: 15, type: !362, isLocal: true, isDefinition: true)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 2176, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 2)
!365 = !DIGlobalVariableExpression(var: !366, expr: !DIExpression())
!366 = distinct !DIGlobalVariable(name: "static_regions", scope: !367, file: !374, line: 62, type: !506, isLocal: true, isDefinition: true)
!367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !368, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !369, globals: !370, splitDebugInlining: false, nameTableKind: None)
!368 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!369 = !{!204, !103, !121, !102}
!370 = !{!371, !365}
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !373, file: !374, line: 198, type: !492, isLocal: true, isDefinition: true)
!373 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !374, file: !374, line: 175, type: !375, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !487)
!374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DISubroutineType(types: !376)
!376 = !{null, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !444, !457, !458, !459, !460, !466, !482}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !378, file: !379, line: 247, baseType: !382, size: 384)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !383)
!383 = !{!384, !409, !416, !417, !418, !431, !432, !433}
!384 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 60, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 60, size: 64, elements: !386)
!386 = !{!387, !402}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !385, file: !379, line: 61, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !390)
!390 = !{!391, !397}
!391 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 38, baseType: !392, size: 32)
!392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 38, size: 32, elements: !393)
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !392, file: !325, line: 39, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !325, line: 40, baseType: !395, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !325, line: 42, baseType: !398, size: 32, offset: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !325, line: 42, size: 32, elements: !399)
!399 = !{!400, !401}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !398, file: !325, line: 43, baseType: !395, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !398, file: !325, line: 44, baseType: !395, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !385, file: !379, line: 62, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !405)
!404 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !403, file: !404, line: 50, baseType: !407, size: 64)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !363)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !382, file: !379, line: 68, baseType: !410, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !412, file: !320, line: 232, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !389)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !382, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !382, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!418 = !DIDerivedType(tag: DW_TAG_member, scope: !382, file: !379, line: 90, baseType: !419, size: 16, offset: 112)
!419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !382, file: !379, line: 90, size: 16, elements: !420)
!420 = !{!421, !428}
!421 = !DIDerivedType(tag: DW_TAG_member, scope: !419, file: !379, line: 91, baseType: !422, size: 16)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !419, file: !379, line: 91, size: 16, elements: !423)
!423 = !{!424, !427}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !422, file: !379, line: 96, baseType: !425, size: 8)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !426)
!426 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !422, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !419, file: !379, line: 100, baseType: !429, size: 16)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !430)
!430 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !382, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !382, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !382, file: !379, line: 131, baseType: !434, size: 192, offset: 192)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !435)
!435 = !{!436, !437, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !434, file: !320, line: 245, baseType: !388, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !434, file: !320, line: 246, baseType: !438, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 32)
!440 = !DISubroutineType(types: !441)
!441 = !{null, !442}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !434, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !378, file: !379, line: 250, baseType: !445, size: 288, offset: 384)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !447)
!446 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !456}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !445, file: !446, line: 26, baseType: !121, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !445, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !445, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !445, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !445, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !445, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !445, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !445, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !445, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !378, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !378, file: !379, line: 256, baseType: !411, size: 64, offset: 704)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !378, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !378, file: !379, line: 300, baseType: !461, size: 96, offset: 800)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !462)
!462 = !{!463, !464, !465}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !461, file: !379, line: 153, baseType: !22, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !461, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !461, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !378, file: !379, line: 325, baseType: !467, size: 32, offset: 896)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !469)
!469 = !{!470, !479, !480}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !468, file: !296, line: 5074, baseType: !471, size: 96)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !477, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !471, file: !472, line: 57, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !472, line: 57, flags: DIFlagFwdDecl)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !471, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !471, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !468, file: !296, line: 5075, baseType: !411, size: 64, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !468, file: !296, line: 5076, baseType: !481, offset: 160)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !378, file: !379, line: 343, baseType: !483, size: 64, offset: 928)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !483, file: !446, line: 63, baseType: !121, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !483, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!487 = !{!488, !489, !490, !491}
!488 = !DILocalVariable(name: "thread", arg: 1, scope: !373, file: !374, line: 175, type: !377)
!489 = !DILocalVariable(name: "region_num", scope: !373, file: !374, line: 200, type: !154)
!490 = !DILocalVariable(name: "guard_start", scope: !373, file: !374, line: 265, type: !22)
!491 = !DILocalVariable(name: "guard_size", scope: !373, file: !374, line: 266, type: !204)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !504)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !493, file: !494, line: 53, baseType: !22, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !493, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 55, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !501)
!500 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !502)
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !501, file: !500, line: 150, baseType: !121, size: 32)
!504 = !{!505}
!505 = !DISubrange(count: 1)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, size: 96, elements: !504)
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !510, file: !543, line: 39, type: !154, isLocal: true, isDefinition: true)
!510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !512, globals: !542, splitDebugInlining: false, nameTableKind: None)
!511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!512 = !{!513, !102, !103, !530, !154}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !515, line: 1226, baseType: !516)
!515 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 1213, size: 352, elements: !517)
!517 = !{!518, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !516, file: !515, line: 1215, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !516, file: !515, line: 1216, baseType: !120, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !516, file: !515, line: 1217, baseType: !120, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !516, file: !515, line: 1218, baseType: !120, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !516, file: !515, line: 1219, baseType: !120, size: 32, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !516, file: !515, line: 1220, baseType: !120, size: 32, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !516, file: !515, line: 1221, baseType: !120, size: 32, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !516, file: !515, line: 1222, baseType: !120, size: 32, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !516, file: !515, line: 1223, baseType: !120, size: 32, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !516, file: !515, line: 1224, baseType: !120, size: 32, offset: 288)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !516, file: !515, line: 1225, baseType: !120, size: 32, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !534)
!533 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !532, file: !533, line: 29, baseType: !121, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !532, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !532, file: !533, line: 37, baseType: !538, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !540)
!540 = !{!541}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !539, file: !500, line: 143, baseType: !121, size: 32)
!542 = !{!508}
!543 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !546, file: !553, line: 21, type: !106, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !548, globals: !552, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!548 = !{!549, !103, !102}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !551, line: 22, baseType: !103)
!551 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!544}
!553 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !556, file: !561, line: 13, type: !578, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !558, splitDebugInlining: false, nameTableKind: None)
!557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!558 = !{!559, !554}
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "mpu_config", scope: !556, file: !561, line: 37, type: !562, isLocal: false, isDefinition: true)
!561 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !533, line: 41, size: 64, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !563, file: !533, line: 43, baseType: !121, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !563, file: !533, line: 45, baseType: !567, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !533, line: 27, size: 96, elements: !570)
!570 = !{!571, !572, !573}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !569, file: !533, line: 29, baseType: !121, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !569, file: !533, line: 31, baseType: !144, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !569, file: !533, line: 37, baseType: !574, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !500, line: 146, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !500, line: 141, size: 32, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !575, file: !500, line: 143, baseType: !121, size: 32)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 192, elements: !363)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !581, file: !685, line: 72, type: !769, isLocal: true, isDefinition: true)
!581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !583, retainedTypes: !671, globals: !682, splitDebugInlining: false, nameTableKind: None)
!582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!583 = !{!30, !584}
!584 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!586 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!587 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!588 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!589 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!590 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!591 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!592 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!593 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!594 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!595 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!596 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!597 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!598 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!599 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!600 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!601 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!602 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!603 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!604 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!605 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!606 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!607 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!608 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!609 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!610 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!611 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!612 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!613 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!614 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!615 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!616 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!617 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!618 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!619 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!620 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!621 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!622 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!623 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!624 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!625 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!626 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!627 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!628 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!629 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!630 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!631 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!632 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!633 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!634 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!635 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!636 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!637 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!638 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!639 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!640 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!641 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!642 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!643 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!644 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!645 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!646 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!647 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!648 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!649 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!650 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!651 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!652 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!653 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!654 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!655 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!656 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!657 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!658 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!659 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!660 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!661 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!662 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!663 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!664 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!665 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!666 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!667 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!668 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!669 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!670 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!671 = !{!204, !103, !102, !672}
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 364, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 356, size: 192, elements: !675)
!675 = !{!676, !677, !678, !679, !680, !681}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !674, file: !116, line: 358, baseType: !120, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !674, file: !116, line: 359, baseType: !120, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !674, file: !116, line: 360, baseType: !120, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !674, file: !116, line: 361, baseType: !120, size: 32, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !674, file: !116, line: 362, baseType: !120, size: 32, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !674, file: !116, line: 363, baseType: !120, size: 32, offset: 160)
!682 = !{!683, !689, !705, !716, !733, !579, !735, !749, !751, !753, !755, !757, !759, !761, !763, !765, !767}
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !581, file: !685, line: 424, type: !686, isLocal: false, isDefinition: true, align: 16)
!685 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !687)
!687 = !{!688}
!688 = !DISubrange(count: 4)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !581, file: !685, line: 424, type: !691, isLocal: false, isDefinition: true, align: 32)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !693)
!693 = !{!694, !695, !696, !697, !703, !704}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !692, file: !141, line: 380, baseType: !144, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !692, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !692, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !692, file: !141, line: 386, baseType: !698, size: 32, offset: 96)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !700)
!700 = !{!701, !702}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !699, file: !141, line: 359, baseType: !154, size: 8)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !699, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !692, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !692, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !581, file: !685, line: 424, type: !707, isLocal: true, isDefinition: true, align: 32)
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !709)
!709 = !{!710, !715}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !708, file: !132, line: 60, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 32)
!712 = !DISubroutineType(types: !713)
!713 = !{!103, !714}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !708, file: !132, line: 65, baseType: !714, size: 32, offset: 32)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "exti_data", scope: !581, file: !685, line: 423, type: !718, isLocal: true, isDefinition: true)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !685, line: 107, size: 1472, elements: !719)
!719 = !{!720}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !718, file: !685, line: 109, baseType: !721, size: 1472)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !722, size: 1472, elements: !731)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !685, line: 101, size: 64, elements: !723)
!723 = !{!724, !730}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !722, file: !685, line: 102, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !726, line: 63, baseType: !727)
!726 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = !DISubroutineType(types: !729)
!729 = !{null, !103, !102}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !722, file: !685, line: 103, baseType: !102, size: 32, offset: 32)
!731 = !{!732}
!732 = !DISubrange(count: 23)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !581, file: !685, line: 424, type: !699, isLocal: true, isDefinition: true, align: 8)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !737, file: !685, line: 493, type: !742, isLocal: true, isDefinition: true, align: 32)
!737 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !685, file: !685, line: 460, type: !738, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !740)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !714}
!740 = !{!741}
!741 = !DILocalVariable(name: "dev", arg: 1, scope: !737, file: !685, line: 460, type: !714)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !743)
!743 = !{!744, !746, !747, !748}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !742, file: !10, line: 55, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !742, file: !10, line: 57, baseType: !745, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !742, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !742, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !737, file: !685, line: 497, type: !742, isLocal: true, isDefinition: true, align: 32)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !737, file: !685, line: 507, type: !742, isLocal: true, isDefinition: true, align: 32)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !737, file: !685, line: 512, type: !742, isLocal: true, isDefinition: true, align: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !737, file: !685, line: 516, type: !742, isLocal: true, isDefinition: true, align: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !737, file: !685, line: 523, type: !742, isLocal: true, isDefinition: true, align: 32)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !737, file: !685, line: 527, type: !742, isLocal: true, isDefinition: true, align: 32)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !737, file: !685, line: 581, type: !742, isLocal: true, isDefinition: true, align: 32)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !737, file: !685, line: 586, type: !742, isLocal: true, isDefinition: true, align: 32)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !737, file: !685, line: 591, type: !742, isLocal: true, isDefinition: true, align: 32)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !737, file: !685, line: 595, type: !742, isLocal: true, isDefinition: true, align: 32)
!769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !770, size: 736, elements: !731)
!770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 154, baseType: !584)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !774, file: !779, line: 22, type: !801, isLocal: false, isDefinition: true, align: 16)
!774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !776, splitDebugInlining: false, nameTableKind: None)
!775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!776 = !{!777, !772, !783, !785, !787, !789, !791, !793, !795, !797, !799}
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !774, file: !779, line: 17, type: !780, isLocal: false, isDefinition: true, align: 16)
!779 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 192, elements: !781)
!781 = !{!782}
!782 = !DISubrange(count: 12)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !774, file: !779, line: 29, type: !686, isLocal: false, isDefinition: true, align: 16)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !774, file: !779, line: 36, type: !686, isLocal: false, isDefinition: true, align: 16)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !774, file: !779, line: 43, type: !686, isLocal: false, isDefinition: true, align: 16)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !774, file: !779, line: 50, type: !686, isLocal: false, isDefinition: true, align: 16)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !774, file: !779, line: 57, type: !686, isLocal: false, isDefinition: true, align: 16)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !774, file: !779, line: 64, type: !686, isLocal: false, isDefinition: true, align: 16)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !774, file: !779, line: 71, type: !686, isLocal: false, isDefinition: true, align: 16)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !774, file: !779, line: 78, type: !686, isLocal: false, isDefinition: true, align: 16)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !774, file: !779, line: 85, type: !686, isLocal: false, isDefinition: true, align: 16)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 3)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !806, file: !868, line: 398, type: !901, isLocal: true, isDefinition: true)
!806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !808, retainedTypes: !821, globals: !865, splitDebugInlining: false, nameTableKind: None)
!807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!808 = !{!809, !30, !814}
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !810, line: 197, baseType: !32, size: 32, elements: !811)
!810 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!811 = !{!812, !813}
!812 = !DIEnumerator(name: "SUCCESS", value: 0)
!813 = !DIEnumerator(name: "ERROR", value: 1)
!814 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !815, line: 44, baseType: !32, size: 32, elements: !816)
!815 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !{!817, !818, !819, !820}
!817 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!818 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!819 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!820 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!821 = !{!102, !103, !121, !822, !858, !864}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !825)
!825 = !{!826, !827, !828, !829, !830, !831, !832, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !824, file: !116, line: 479, baseType: !120, size: 32)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !824, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !824, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !824, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !824, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !824, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !824, file: !116, line: 485, baseType: !833, size: 64, offset: 192)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !363)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !824, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !824, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !824, file: !116, line: 488, baseType: !833, size: 64, offset: 320)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !824, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !824, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !824, file: !116, line: 491, baseType: !833, size: 64, offset: 448)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !824, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !824, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !824, file: !116, line: 494, baseType: !833, size: 64, offset: 576)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !824, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !824, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !824, file: !116, line: 497, baseType: !833, size: 64, offset: 704)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !824, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !824, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !824, file: !116, line: 500, baseType: !833, size: 64, offset: 832)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !824, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !824, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !824, file: !116, line: 503, baseType: !833, size: 64, offset: 960)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !824, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !824, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !824, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !824, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !824, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !824, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !861)
!860 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !859, file: !860, line: 344, baseType: !121, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !859, file: !860, line: 345, baseType: !121, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!865 = !{!866, !872, !888, !899, !804}
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !806, file: !868, line: 752, type: !869, isLocal: false, isDefinition: true, align: 16)
!868 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 848, elements: !870)
!870 = !{!871}
!871 = !DISubrange(count: 53)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !806, file: !868, line: 752, type: !874, isLocal: false, isDefinition: true, align: 32)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !876)
!876 = !{!877, !878, !879, !880, !886, !887}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !875, file: !141, line: 380, baseType: !144, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !875, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !875, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !875, file: !141, line: 386, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !882, file: !141, line: 359, baseType: !154, size: 8)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !882, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !875, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !875, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !806, file: !868, line: 752, type: !890, isLocal: true, isDefinition: true, align: 32)
!890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !892)
!892 = !{!893, !898}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !891, file: !132, line: 60, baseType: !894, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!103, !897}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !891, file: !132, line: 65, baseType: !897, size: 32, offset: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !806, file: !868, line: 752, type: !882, isLocal: true, isDefinition: true, align: 8)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !815, line: 100, size: 224, elements: !902)
!902 = !{!903, !909, !910, !919, !924, !929, !935}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !901, file: !815, line: 101, baseType: !904, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !815, line: 76, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!103, !897, !908}
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !815, line: 56, baseType: !102)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !901, file: !815, line: 102, baseType: !904, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !901, file: !815, line: 103, baseType: !911, size: 32, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !815, line: 83, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!103, !897, !908, !915, !102}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !815, line: 72, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !897, !908, !102}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !901, file: !815, line: 104, baseType: !920, size: 32, offset: 96)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !815, line: 79, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DISubroutineType(types: !923)
!923 = !{!103, !897, !908, !864}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !901, file: !815, line: 105, baseType: !925, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !815, line: 88, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!814, !897, !908}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !901, file: !815, line: 106, baseType: !930, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !815, line: 92, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!103, !897, !908, !934}
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !815, line: 64, baseType: !102)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !901, file: !815, line: 107, baseType: !936, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !815, line: 96, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!103, !897, !908, !102}
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "avail_queue", scope: !942, file: !946, line: 108, type: !1043, isLocal: true, isDefinition: true)
!942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !944, retainedTypes: !953, globals: !1033, splitDebugInlining: false, nameTableKind: None)
!943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!944 = !{!30, !945}
!945 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !946, line: 214, baseType: !32, size: 32, elements: !947)
!946 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!947 = !{!948, !949, !950, !951, !952}
!948 = !DIEnumerator(name: "ESC_ESC", value: 0)
!949 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!950 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!951 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!952 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!953 = !{!102, !103, !954, !32, !24}
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !957)
!957 = !{!958, !977, !981, !985, !998, !1003, !1007, !1011, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !956, file: !209, line: 365, baseType: !959, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!103, !962, !230}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !965)
!965 = !{!966, !967, !968, !969, !975, !976}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !964, file: !141, line: 380, baseType: !144, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !964, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !964, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !964, file: !141, line: 386, baseType: !970, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !972)
!972 = !{!973, !974}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !971, file: !141, line: 359, baseType: !154, size: 8)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !971, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !964, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !964, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !956, file: !209, line: 366, baseType: !978, size: 32, offset: 32)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !962, !155}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !956, file: !209, line: 374, baseType: !982, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!103, !962}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !956, file: !209, line: 377, baseType: !986, size: 32, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DISubroutineType(types: !988)
!988 = !{!103, !962, !989}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !992)
!992 = !{!993, !994, !995, !996, !997}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !991, file: !209, line: 123, baseType: !121, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !991, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !991, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !991, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !991, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !956, file: !209, line: 379, baseType: !999, size: 32, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!103, !962, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !956, file: !209, line: 384, baseType: !1004, size: 32, offset: 160)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!103, !962, !261, !103}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !956, file: !209, line: 393, baseType: !1008, size: 32, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!103, !962, !267, !268}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !956, file: !209, line: 402, baseType: !1012, size: 32, offset: 224)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{null, !962}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !956, file: !209, line: 405, baseType: !1012, size: 32, offset: 256)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !956, file: !209, line: 408, baseType: !982, size: 32, offset: 288)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !956, file: !209, line: 411, baseType: !1012, size: 32, offset: 320)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !956, file: !209, line: 414, baseType: !1012, size: 32, offset: 352)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !956, file: !209, line: 417, baseType: !982, size: 32, offset: 384)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !956, file: !209, line: 420, baseType: !982, size: 32, offset: 416)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !956, file: !209, line: 423, baseType: !1012, size: 32, offset: 448)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !956, file: !209, line: 426, baseType: !1012, size: 32, offset: 480)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !956, file: !209, line: 429, baseType: !982, size: 32, offset: 512)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !956, file: !209, line: 432, baseType: !982, size: 32, offset: 544)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !956, file: !209, line: 435, baseType: !1026, size: 32, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{null, !962, !1029, !102}
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{null, !962, !102}
!1033 = !{!1034, !940, !1041, !1081, !1086, !1089, !1108, !1112, !1114, !1116, !1118}
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !942, file: !946, line: 603, type: !1036, isLocal: true, isDefinition: true, align: 32)
!1036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1038)
!1038 = !{!1039, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1037, file: !132, line: 60, baseType: !982, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1037, file: !132, line: 65, baseType: !962, size: 32, offset: 32)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "lines_queue", scope: !942, file: !946, line: 109, type: !1043, isLocal: true, isDefinition: true)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !296, line: 2208, size: 128, elements: !1045)
!1045 = !{!1046}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1044, file: !296, line: 2209, baseType: !1047, size: 128)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !1048)
!1048 = !{!1049, !1060, !1062}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1047, file: !296, line: 1710, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !1052)
!1052 = !{!1053, !1059}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1051, file: !303, line: 42, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !1057)
!1057 = !{!1058}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1056, file: !303, line: 36, baseType: !312, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1051, file: !303, line: 43, baseType: !1054, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1047, file: !296, line: 1711, baseType: !1061, offset: 64)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1047, file: !296, line: 1712, baseType: !1063, size: 64, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !1065)
!1065 = !{!1066}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1064, file: !320, line: 232, baseType: !1067, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !1068)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !1069)
!1069 = !{!1070, !1076}
!1070 = !DIDerivedType(tag: DW_TAG_member, scope: !1068, file: !325, line: 38, baseType: !1071, size: 32)
!1071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1068, file: !325, line: 38, size: 32, elements: !1072)
!1072 = !{!1073, !1075}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1071, file: !325, line: 39, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1071, file: !325, line: 40, baseType: !1074, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, scope: !1068, file: !325, line: 42, baseType: !1077, size: 32, offset: 32)
!1077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1068, file: !325, line: 42, size: 32, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1077, file: !325, line: 43, baseType: !1074, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1077, file: !325, line: 44, baseType: !1074, size: 32)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "completion_cb", scope: !942, file: !946, line: 110, type: !1083, isLocal: true, isDefinition: true)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!154, !344, !154}
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !942, file: !946, line: 38, type: !1088, isLocal: true, isDefinition: true)
!1088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "cmd", scope: !1091, file: !946, line: 435, type: !1102, isLocal: true, isDefinition: true)
!1091 = distinct !DISubprogram(name: "uart_console_isr", scope: !946, file: !946, line: 428, type: !1031, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !1092)
!1092 = !{!1093, !1094, !1095, !1097, !1098}
!1093 = !DILocalVariable(name: "unused", arg: 1, scope: !1091, file: !946, line: 428, type: !962)
!1094 = !DILocalVariable(name: "user_data", arg: 2, scope: !1091, file: !946, line: 428, type: !102)
!1095 = !DILocalVariable(name: "byte", scope: !1096, file: !946, line: 436, type: !154)
!1096 = distinct !DILexicalBlock(scope: !1091, file: !946, line: 434, column: 48)
!1097 = !DILocalVariable(name: "rx", scope: !1096, file: !946, line: 437, type: !103)
!1098 = !DILocalVariable(name: "ret", scope: !1099, file: !946, line: 461, type: !102)
!1099 = distinct !DILexicalBlock(scope: !1100, file: !946, line: 461, column: 10)
!1100 = distinct !DILexicalBlock(scope: !1101, file: !946, line: 460, column: 13)
!1101 = distinct !DILexicalBlock(scope: !1096, file: !946, line: 460, column: 7)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !350, line: 21, size: 1088, elements: !1104)
!1104 = !{!1105, !1106, !1107}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1103, file: !350, line: 23, baseType: !353, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1103, file: !350, line: 25, baseType: !154, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1103, file: !350, line: 27, baseType: !357, size: 1024, offset: 40)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "esc_state", scope: !942, file: !946, line: 228, type: !1110, isLocal: true, isDefinition: true)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1111, line: 22, baseType: !354)
!1111 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "ansi_val", scope: !942, file: !946, line: 229, type: !32, isLocal: true, isDefinition: true)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !942, file: !946, line: 229, type: !32, isLocal: true, isDefinition: true)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "cur", scope: !942, file: !946, line: 230, type: !154, isLocal: true, isDefinition: true)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "end", scope: !942, file: !946, line: 230, type: !154, isLocal: true, isDefinition: true)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1122, file: !1293, line: 762, type: !1405, isLocal: true, isDefinition: true)
!1122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1124, retainedTypes: !1142, globals: !1290, splitDebugInlining: false, nameTableKind: None)
!1123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!1124 = !{!30, !1125, !1131, !1136, !814}
!1125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1126, line: 506, baseType: !32, size: 32, elements: !1127)
!1126 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1127 = !{!1128, !1129, !1130}
!1128 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1129 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1130 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1126, line: 512, baseType: !32, size: 32, elements: !1132)
!1132 = !{!1133, !1134, !1135}
!1133 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1134 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1135 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !726, line: 43, baseType: !32, size: 32, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141}
!1138 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1139 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1140 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1141 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1142 = !{!102, !103, !1143, !1213, !1218, !1178, !1131, !1125, !1223, !1224, !121, !1238, !1193, !344, !1250, !1251}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1126, line: 523, size: 288, elements: !1146)
!1146 = !{!1147, !1168, !1174, !1179, !1183, !1184, !1185, !1189, !1209}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1145, file: !1126, line: 524, baseType: !1148, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!103, !1151, !1166, !1167}
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1164, !1165}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1153, file: !141, line: 380, baseType: !144, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1153, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1153, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1153, file: !141, line: 386, baseType: !1159, size: 32, offset: 96)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1160, file: !141, line: 359, baseType: !154, size: 8)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1160, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1153, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1153, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1126, line: 237, baseType: !154)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1126, line: 257, baseType: !121)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1145, file: !1126, line: 530, baseType: !1169, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!103, !1151, !1172}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1126, line: 229, baseType: !121)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1145, file: !1126, line: 532, baseType: !1175, size: 32, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!103, !1151, !1178, !1173}
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1126, line: 216, baseType: !121)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1145, file: !1126, line: 535, baseType: !1180, size: 32, offset: 96)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!103, !1151, !1178}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1145, file: !1126, line: 537, baseType: !1180, size: 32, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1145, file: !1126, line: 539, baseType: !1180, size: 32, offset: 160)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1145, file: !1126, line: 541, baseType: !1186, size: 32, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!103, !1151, !1166, !1125, !1131}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1145, file: !1126, line: 544, baseType: !1190, size: 32, offset: 224)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!103, !1151, !1193, !157}
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1126, line: 478, size: 96, elements: !1195)
!1195 = !{!1196, !1203, !1208}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1194, file: !1126, line: 482, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1198, line: 33, baseType: !1199)
!1198 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1198, line: 29, size: 32, elements: !1200)
!1200 = !{!1201}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1199, file: !1198, line: 30, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1194, file: !1126, line: 485, baseType: !1204, size: 32, offset: 32)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1126, line: 464, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{null, !1151, !1193, !1178}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1194, file: !1126, line: 493, baseType: !1178, size: 32, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1145, file: !1126, line: 547, baseType: !1210, size: 32, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!121, !1151}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1126, line: 428, size: 32, elements: !1216)
!1216 = !{!1217}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1215, file: !1126, line: 434, baseType: !1178, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1126, line: 441, size: 32, elements: !1221)
!1221 = !{!1222}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1220, file: !1126, line: 447, baseType: !1178, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 396, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 385, size: 320, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1226, file: !116, line: 387, baseType: !120, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1226, file: !116, line: 388, baseType: !120, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1226, file: !116, line: 389, baseType: !120, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1226, file: !116, line: 390, baseType: !120, size: 32, offset: 96)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1226, file: !116, line: 391, baseType: !120, size: 32, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1226, file: !116, line: 392, baseType: !120, size: 32, offset: 160)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1226, file: !116, line: 393, baseType: !120, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1226, file: !116, line: 394, baseType: !120, size: 32, offset: 224)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1226, file: !116, line: 395, baseType: !1237, size: 64, offset: 256)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !363)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 411, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 402, size: 320, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1246, !1247, !1248, !1249}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1240, file: !116, line: 404, baseType: !120, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1240, file: !116, line: 405, baseType: !120, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1240, file: !116, line: 406, baseType: !1245, size: 128, offset: 64)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !687)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1240, file: !116, line: 407, baseType: !121, size: 32, offset: 192)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1240, file: !116, line: 408, baseType: !120, size: 32, offset: 224)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1240, file: !116, line: 409, baseType: !120, size: 32, offset: 256)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1240, file: !116, line: 410, baseType: !120, size: 32, offset: 288)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !815, line: 100, size: 224, elements: !1254)
!1254 = !{!1255, !1260, !1261, !1270, !1275, !1280, !1285}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1253, file: !815, line: 101, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !815, line: 76, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!103, !1151, !908}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1253, file: !815, line: 102, baseType: !1256, size: 32, offset: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1253, file: !815, line: 103, baseType: !1262, size: 32, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !815, line: 83, baseType: !1263)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!103, !1151, !908, !1266, !102}
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !815, line: 72, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !1151, !908, !102}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1253, file: !815, line: 104, baseType: !1271, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !815, line: 79, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!103, !1151, !908, !864}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1253, file: !815, line: 105, baseType: !1276, size: 32, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !815, line: 88, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!814, !1151, !908}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1253, file: !815, line: 106, baseType: !1281, size: 32, offset: 160)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !815, line: 92, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!103, !1151, !908, !934}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1253, file: !815, line: 107, baseType: !1286, size: 32, offset: 192)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !815, line: 96, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!103, !1151, !908, !102}
!1290 = !{!1291, !1297, !1299, !1309, !1311, !1313, !1315, !1320, !1322, !1324, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1120, !1401, !1403, !1416, !1418, !1420, !1422, !1424, !1426}
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1122, file: !1293, line: 762, type: !1294, isLocal: false, isDefinition: true, align: 16)
!1293 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 112, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 7)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1122, file: !1293, line: 762, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1122, file: !1293, line: 762, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1303)
!1303 = !{!1304, !1308}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1302, file: !132, line: 60, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!103, !1151}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1302, file: !132, line: 65, baseType: !1151, size: 32, offset: 32)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1122, file: !1293, line: 766, type: !1294, isLocal: false, isDefinition: true, align: 16)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1122, file: !1293, line: 766, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1122, file: !1293, line: 766, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1122, file: !1293, line: 770, type: !1317, isLocal: false, isDefinition: true, align: 16)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 96, elements: !1318)
!1318 = !{!1319}
!1319 = !DISubrange(count: 6)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1122, file: !1293, line: 770, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1122, file: !1293, line: 770, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1122, file: !1293, line: 774, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1327)
!1327 = !{!1328}
!1328 = !DISubrange(count: 5)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1122, file: !1293, line: 774, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1122, file: !1293, line: 774, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1122, file: !1293, line: 778, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1122, file: !1293, line: 778, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1122, file: !1293, line: 778, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1122, file: !1293, line: 782, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1122, file: !1293, line: 782, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1122, file: !1293, line: 782, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1122, file: !1293, line: 786, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1122, file: !1293, line: 786, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1122, file: !1293, line: 786, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1122, file: !1293, line: 790, type: !1326, isLocal: false, isDefinition: true, align: 16)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1122, file: !1293, line: 790, type: !1152, isLocal: false, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1122, file: !1293, line: 790, type: !1301, isLocal: true, isDefinition: true, align: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1122, file: !1293, line: 762, type: !1359, isLocal: true, isDefinition: true)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1360, line: 237, size: 128, elements: !1361)
!1360 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1361 = !{!1362, !1363, !1364}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1359, file: !1360, line: 239, baseType: !1220, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1359, file: !1360, line: 241, baseType: !1151, size: 32, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1359, file: !1360, line: 243, baseType: !1365, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1198, line: 40, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1198, line: 35, size: 64, elements: !1367)
!1367 = !{!1368, !1370}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1366, file: !1198, line: 36, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1366, file: !1198, line: 37, baseType: !1369, size: 32, offset: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1122, file: !1293, line: 762, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1122, file: !1293, line: 766, type: !1359, isLocal: true, isDefinition: true)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1122, file: !1293, line: 766, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1122, file: !1293, line: 770, type: !1359, isLocal: true, isDefinition: true)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1122, file: !1293, line: 770, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1122, file: !1293, line: 774, type: !1359, isLocal: true, isDefinition: true)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1122, file: !1293, line: 774, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1122, file: !1293, line: 778, type: !1359, isLocal: true, isDefinition: true)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1122, file: !1293, line: 778, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1122, file: !1293, line: 782, type: !1359, isLocal: true, isDefinition: true)
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1122, file: !1293, line: 782, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1122, file: !1293, line: 786, type: !1359, isLocal: true, isDefinition: true)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1122, file: !1293, line: 786, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1122, file: !1293, line: 790, type: !1359, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1122, file: !1293, line: 790, type: !1160, isLocal: true, isDefinition: true, align: 8)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1122, file: !1293, line: 656, type: !1144, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1122, file: !1293, line: 766, type: !1405, isLocal: true, isDefinition: true)
!1405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1406)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1360, line: 224, size: 160, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1406, file: !1360, line: 226, baseType: !1215, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1406, file: !1360, line: 228, baseType: !864, size: 32, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1406, file: !1360, line: 230, baseType: !103, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1406, file: !1360, line: 231, baseType: !1412, size: 64, offset: 96)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1413)
!1413 = !{!1414, !1415}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1412, file: !860, line: 344, baseType: !121, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1412, file: !860, line: 345, baseType: !121, size: 32, offset: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1122, file: !1293, line: 770, type: !1405, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1122, file: !1293, line: 774, type: !1405, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1122, file: !1293, line: 778, type: !1405, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1122, file: !1293, line: 782, type: !1405, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1122, file: !1293, line: 786, type: !1405, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1122, file: !1293, line: 790, type: !1405, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1430, file: !1601, line: 1914, type: !1675, isLocal: true, isDefinition: true)
!1430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1431, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1432, retainedTypes: !1465, globals: !1598, splitDebugInlining: false, nameTableKind: None)
!1431 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!1432 = !{!30, !1433, !1440, !1447, !1454, !1460, !814}
!1433 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !209, line: 47, baseType: !32, size: 32, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439}
!1435 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1436 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1437 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1438 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1439 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1440 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !209, line: 75, baseType: !32, size: 32, elements: !1441)
!1441 = !{!1442, !1443, !1444, !1445, !1446}
!1442 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1443 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1444 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1445 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1446 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1447 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !209, line: 92, baseType: !32, size: 32, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452, !1453}
!1449 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1450 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1451 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1452 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1453 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1454 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !209, line: 84, baseType: !32, size: 32, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459}
!1456 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1457 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1458 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1459 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1460 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !209, line: 107, baseType: !32, size: 32, elements: !1461)
!1461 = !{!1462, !1463, !1464}
!1462 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1463 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1464 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1465 = !{!102, !103, !1466, !155, !154, !1545, !121, !908, !1556, !429, !1595, !1597}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !209, line: 336, size: 608, elements: !1469)
!1469 = !{!1470, !1489, !1493, !1497, !1510, !1515, !1519, !1523, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1468, file: !209, line: 365, baseType: !1471, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!103, !1474, !230}
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1476)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481, !1487, !1488}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1476, file: !141, line: 380, baseType: !144, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1476, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1476, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1476, file: !141, line: 386, baseType: !1482, size: 32, offset: 96)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1483, file: !141, line: 359, baseType: !154, size: 8)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1483, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1476, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1476, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1468, file: !209, line: 366, baseType: !1490, size: 32, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{null, !1474, !155}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1468, file: !209, line: 374, baseType: !1494, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!103, !1474}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1468, file: !209, line: 377, baseType: !1498, size: 32, offset: 96)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!103, !1474, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !209, line: 122, size: 64, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1503, file: !209, line: 123, baseType: !121, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1503, file: !209, line: 124, baseType: !154, size: 8, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1503, file: !209, line: 125, baseType: !154, size: 8, offset: 40)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1503, file: !209, line: 126, baseType: !154, size: 8, offset: 48)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1503, file: !209, line: 127, baseType: !154, size: 8, offset: 56)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1468, file: !209, line: 379, baseType: !1511, size: 32, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!103, !1474, !1514}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1468, file: !209, line: 384, baseType: !1516, size: 32, offset: 160)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!103, !1474, !261, !103}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1468, file: !209, line: 393, baseType: !1520, size: 32, offset: 192)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!103, !1474, !267, !268}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1468, file: !209, line: 402, baseType: !1524, size: 32, offset: 224)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 32)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{null, !1474}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1468, file: !209, line: 405, baseType: !1524, size: 32, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1468, file: !209, line: 408, baseType: !1494, size: 32, offset: 288)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1468, file: !209, line: 411, baseType: !1524, size: 32, offset: 320)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1468, file: !209, line: 414, baseType: !1524, size: 32, offset: 352)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1468, file: !209, line: 417, baseType: !1494, size: 32, offset: 384)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1468, file: !209, line: 420, baseType: !1494, size: 32, offset: 416)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1468, file: !209, line: 423, baseType: !1524, size: 32, offset: 448)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1468, file: !209, line: 426, baseType: !1524, size: 32, offset: 480)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1468, file: !209, line: 429, baseType: !1494, size: 32, offset: 512)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1468, file: !209, line: 432, baseType: !1494, size: 32, offset: 544)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1468, file: !209, line: 435, baseType: !1538, size: 32, offset: 576)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{null, !1474, !1541, !102}
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !209, line: 142, baseType: !1542)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 32)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{null, !1474, !102}
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 648, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 639, size: 224, elements: !1548)
!1548 = !{!1549, !1550, !1551, !1552, !1553, !1554, !1555}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1547, file: !116, line: 641, baseType: !120, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1547, file: !116, line: 642, baseType: !120, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1547, file: !116, line: 643, baseType: !120, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1547, file: !116, line: 644, baseType: !120, size: 32, offset: 96)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1547, file: !116, line: 645, baseType: !120, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1547, file: !116, line: 646, baseType: !120, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1547, file: !116, line: 647, baseType: !120, size: 32, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1558)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !815, line: 100, size: 224, elements: !1559)
!1559 = !{!1560, !1565, !1566, !1575, !1580, !1585, !1590}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1558, file: !815, line: 101, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !815, line: 76, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!103, !1474, !908}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1558, file: !815, line: 102, baseType: !1561, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1558, file: !815, line: 103, baseType: !1567, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !815, line: 83, baseType: !1568)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!103, !1474, !908, !1571, !102}
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !815, line: 72, baseType: !1572)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{null, !1474, !908, !102}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1558, file: !815, line: 104, baseType: !1576, size: 32, offset: 96)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !815, line: 79, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!103, !1474, !908, !864}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1558, file: !815, line: 105, baseType: !1581, size: 32, offset: 128)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !815, line: 88, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!814, !1474, !908}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1558, file: !815, line: 106, baseType: !1586, size: 32, offset: 160)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !815, line: 92, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!103, !1474, !908, !934}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1558, file: !815, line: 107, baseType: !1591, size: 32, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !815, line: 96, baseType: !1592)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!103, !1474, !908, !102}
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1596)
!1596 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1598 = !{!1599, !1605, !1607, !1614, !1428, !1616, !1624, !1647, !1650, !1653, !1664, !1666}
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1430, file: !1601, line: 1914, type: !1602, isLocal: false, isDefinition: true, align: 16)
!1601 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1603)
!1603 = !{!1604}
!1604 = !DISubrange(count: 8)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1430, file: !1601, line: 1914, type: !1475, isLocal: false, isDefinition: true, align: 32)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1430, file: !1601, line: 1914, type: !1609, isLocal: true, isDefinition: true, align: 32)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1610, file: !132, line: 60, baseType: !1494, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1610, file: !132, line: 65, baseType: !1474, size: 32, offset: 32)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1430, file: !1601, line: 1914, type: !1483, isLocal: true, isDefinition: true, align: 8)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1430, file: !1601, line: 1914, type: !1618, isLocal: true, isDefinition: true)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1619, size: 64, elements: !504)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1621)
!1621 = !{!1622, !1623}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1620, file: !860, line: 344, baseType: !121, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1620, file: !860, line: 345, baseType: !121, size: 32, offset: 32)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1430, file: !1601, line: 1914, type: !1626, isLocal: true, isDefinition: true)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1628, line: 60, size: 64, elements: !1629)
!1628 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1629 = !{!1630, !1646}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1627, file: !1628, line: 69, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1628, line: 50, size: 64, elements: !1634)
!1634 = !{!1635, !1644, !1645}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1633, file: !1628, line: 52, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1638)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1639, line: 37, baseType: !1640)
!1639 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1639, line: 32, size: 64, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1640, file: !1639, line: 34, baseType: !121, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1640, file: !1639, line: 36, baseType: !121, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1633, file: !1628, line: 54, baseType: !154, size: 8, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1633, file: !1628, line: 56, baseType: !154, size: 8, offset: 40)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1627, file: !1628, line: 71, baseType: !154, size: 8, offset: 32)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1430, file: !1601, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1632, size: 64, elements: !504)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1430, file: !1601, line: 1914, type: !1652, isLocal: true, isDefinition: true)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 128, elements: !363)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1655, file: !1601, line: 1914, type: !1658, isLocal: true, isDefinition: true, align: 32)
!1655 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1601, file: !1601, line: 1914, type: !1525, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !1656)
!1656 = !{!1657}
!1657 = !DILocalVariable(name: "dev", arg: 1, scope: !1655, file: !1601, line: 1914, type: !1474)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1658, file: !10, line: 55, baseType: !745, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1658, file: !10, line: 57, baseType: !745, size: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1658, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1658, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1430, file: !1601, line: 1539, type: !1467, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1430, file: !1601, line: 1914, type: !1668, isLocal: true, isDefinition: true)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1669, line: 74, size: 128, elements: !1670)
!1669 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1670 = !{!1671, !1672, !1673, !1674}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1668, file: !1669, line: 76, baseType: !121, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1668, file: !1669, line: 78, baseType: !1474, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1668, file: !1669, line: 80, baseType: !1541, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1668, file: !1669, line: 81, baseType: !102, size: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1669, line: 22, size: 256, elements: !1677)
!1677 = !{!1678, !1679, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1690}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1676, file: !1669, line: 24, baseType: !1545, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1676, file: !1669, line: 26, baseType: !1680, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1676, file: !1669, line: 28, baseType: !204, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1676, file: !1669, line: 30, baseType: !157, size: 8, offset: 96)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1676, file: !1669, line: 32, baseType: !103, size: 32, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1676, file: !1669, line: 34, baseType: !157, size: 8, offset: 160)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1676, file: !1669, line: 36, baseType: !157, size: 8, offset: 168)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1676, file: !1669, line: 38, baseType: !157, size: 8, offset: 176)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1676, file: !1669, line: 40, baseType: !157, size: 8, offset: 184)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1676, file: !1669, line: 41, baseType: !1689, size: 32, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1676, file: !1669, line: 44, baseType: !1691, size: 32, offset: 224)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !209, line: 150, baseType: !1524)
!1692 = !DIGlobalVariableExpression(var: !1693, expr: !DIExpression())
!1693 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1694, file: !1770, line: 65, type: !120, isLocal: true, isDefinition: true)
!1694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1695, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1696, retainedTypes: !1697, globals: !1767, splitDebugInlining: false, nameTableKind: None)
!1695 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!1696 = !{!584}
!1697 = !{!200, !1698, !745, !154, !121, !1706, !1737}
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1700, file: !515, line: 766, baseType: !120, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1700, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1700, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1700, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !1709)
!1709 = !{!1710, !1712, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1727, !1732, !1736}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1708, file: !515, line: 413, baseType: !1711, size: 256)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1603)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1708, file: !515, line: 414, baseType: !1713, size: 768, offset: 256)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1714)
!1714 = !{!1715}
!1715 = !DISubrange(count: 24)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1708, file: !515, line: 415, baseType: !1711, size: 256, offset: 1024)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1708, file: !515, line: 416, baseType: !1713, size: 768, offset: 1280)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1708, file: !515, line: 417, baseType: !1711, size: 256, offset: 2048)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1708, file: !515, line: 418, baseType: !1713, size: 768, offset: 2304)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1708, file: !515, line: 419, baseType: !1711, size: 256, offset: 3072)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1708, file: !515, line: 420, baseType: !1713, size: 768, offset: 3328)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1708, file: !515, line: 421, baseType: !1711, size: 256, offset: 4096)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1708, file: !515, line: 422, baseType: !1724, size: 1792, offset: 4352)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1725)
!1725 = !{!1726}
!1726 = !DISubrange(count: 56)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1708, file: !515, line: 423, baseType: !1728, size: 1920, offset: 6144)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1729, size: 1920, elements: !1730)
!1729 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1730 = !{!1731}
!1731 = !DISubrange(count: 240)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1708, file: !515, line: 424, baseType: !1733, size: 20608, offset: 8064)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1734)
!1734 = !{!1735}
!1735 = !DISubrange(count: 644)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1708, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744, !1745, !1746, !1747, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1758, !1759, !1760, !1762, !1764, !1766}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1739, file: !515, line: 447, baseType: !519, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1739, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1739, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1739, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1739, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1739, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1739, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1729, size: 96, elements: !781)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1739, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1739, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1739, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1739, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1739, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1739, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1739, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1739, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 64, elements: !363)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1739, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1739, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1739, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 128, elements: !687)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1739, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 160, elements: !1327)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1739, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1327)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1739, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!1767 = !{!1768, !1794, !1797, !1799, !1801, !1692}
!1768 = !DIGlobalVariableExpression(var: !1769, expr: !DIExpression())
!1769 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1694, file: !1770, line: 285, type: !1771, isLocal: true, isDefinition: true, align: 32)
!1770 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1773)
!1773 = !{!1774, !1793}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1772, file: !132, line: 60, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!103, !1778}
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1791, !1792}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1780, file: !141, line: 380, baseType: !144, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1780, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1780, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1780, file: !141, line: 386, baseType: !1786, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1788)
!1788 = !{!1789, !1790}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1787, file: !141, line: 359, baseType: !154, size: 8)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1787, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1780, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1780, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1772, file: !132, line: 65, baseType: !1778, size: 32, offset: 32)
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression())
!1795 = distinct !DIGlobalVariable(name: "lock", scope: !1694, file: !1770, line: 34, type: !1796, isLocal: true, isDefinition: true)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "last_load", scope: !1694, file: !1770, line: 36, type: !121, isLocal: true, isDefinition: true)
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1694, file: !1770, line: 48, type: !121, isLocal: true, isDefinition: true)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1694, file: !1770, line: 54, type: !121, isLocal: true, isDefinition: true)
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1805, file: !1887, line: 22, type: !1889, isLocal: true, isDefinition: true)
!1805 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1806, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1807, retainedTypes: !1808, globals: !1884, splitDebugInlining: false, nameTableKind: None)
!1806 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!1807 = !{!1125, !1131}
!1808 = !{!1809, !1873, !1878, !1178, !1131, !1125, !1883, !102}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1811)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1126, line: 523, size: 288, elements: !1812)
!1812 = !{!1813, !1832, !1836, !1840, !1844, !1845, !1846, !1850, !1869}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1811, file: !1126, line: 524, baseType: !1814, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{!103, !1817, !1166, !1167}
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1830, !1831}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1819, file: !141, line: 380, baseType: !144, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1819, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1819, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1819, file: !141, line: 386, baseType: !1825, size: 32, offset: 96)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1826, file: !141, line: 359, baseType: !154, size: 8)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1826, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1819, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1819, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1811, file: !1126, line: 530, baseType: !1833, size: 32, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!103, !1817, !1172}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1811, file: !1126, line: 532, baseType: !1837, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!103, !1817, !1178, !1173}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1811, file: !1126, line: 535, baseType: !1841, size: 32, offset: 96)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{!103, !1817, !1178}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1811, file: !1126, line: 537, baseType: !1841, size: 32, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1811, file: !1126, line: 539, baseType: !1841, size: 32, offset: 160)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1811, file: !1126, line: 541, baseType: !1847, size: 32, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!103, !1817, !1166, !1125, !1131}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1811, file: !1126, line: 544, baseType: !1851, size: 32, offset: 224)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!103, !1817, !1854, !157}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 32)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1126, line: 478, size: 96, elements: !1856)
!1856 = !{!1857, !1863, !1868}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1855, file: !1126, line: 482, baseType: !1858, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1198, line: 33, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1198, line: 29, size: 32, elements: !1860)
!1860 = !{!1861}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1859, file: !1198, line: 30, baseType: !1862, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1855, file: !1126, line: 485, baseType: !1864, size: 32, offset: 32)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1126, line: 464, baseType: !1865)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{null, !1817, !1854, !1178}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1855, file: !1126, line: 493, baseType: !1178, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1811, file: !1126, line: 547, baseType: !1870, size: 32, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!121, !1817}
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1126, line: 428, size: 32, elements: !1876)
!1876 = !{!1877}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1875, file: !1126, line: 434, baseType: !1178, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1126, line: 441, size: 32, elements: !1881)
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1880, file: !1126, line: 447, baseType: !1178, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1884 = !{!1885, !1803}
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1886 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1805, file: !1887, line: 37, type: !1888, isLocal: true, isDefinition: true)
!1887 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 352, elements: !1891)
!1890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1891 = !{!1892}
!1892 = !DISubrange(count: 11)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1895, file: !1936, line: 139, type: !1942, isLocal: false, isDefinition: true)
!1895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1897, globals: !1933, splitDebugInlining: false, nameTableKind: None)
!1896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!1897 = !{!1898}
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1900, file: !116, line: 479, baseType: !120, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1900, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1900, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1900, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1900, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1900, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1900, file: !116, line: 485, baseType: !833, size: 64, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1900, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1900, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1900, file: !116, line: 488, baseType: !833, size: 64, offset: 320)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1900, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1900, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1900, file: !116, line: 491, baseType: !833, size: 64, offset: 448)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1900, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1900, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1900, file: !116, line: 494, baseType: !833, size: 64, offset: 576)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1900, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1900, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1900, file: !116, line: 497, baseType: !833, size: 64, offset: 704)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1900, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1900, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1900, file: !116, line: 500, baseType: !833, size: 64, offset: 832)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1900, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1900, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1900, file: !116, line: 503, baseType: !833, size: 64, offset: 960)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1900, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1900, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1900, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1900, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1900, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1900, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!1933 = !{!1934, !1937, !1893}
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1895, file: !1936, line: 137, type: !121, isLocal: false, isDefinition: true)
!1936 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1895, file: !1936, line: 138, type: !1939, isLocal: false, isDefinition: true)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !1940)
!1940 = !{!1941}
!1941 = !DISubrange(count: 16)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1603)
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1945, file: !1948, line: 23, type: !268, isLocal: false, isDefinition: true)
!1945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1947, splitDebugInlining: false, nameTableKind: None)
!1946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!1947 = !{!1943}
!1948 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1951, file: !1955, line: 86, type: !2202, isLocal: false, isDefinition: true, align: 512)
!1951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1953, retainedTypes: !1962, globals: !2035, splitDebugInlining: false, nameTableKind: None)
!1952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!1953 = !{!1954, !30, !584}
!1954 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1955, line: 63, baseType: !32, size: 32, elements: !1956)
!1955 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1956 = !{!1957, !1958, !1959, !1960, !1961}
!1957 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1958 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1959 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1960 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1961 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1962 = !{!204, !102, !103, !1963, !344, !121, !1993, !745, !154, !2018}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1966, line: 51, size: 64, elements: !1967)
!1966 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !{!1968, !1988}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1965, file: !1966, line: 52, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1966, line: 38, baseType: !1970)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!103, !1973, !267, !429}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980, !1986, !1987}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1975, file: !141, line: 380, baseType: !144, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1975, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1975, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1975, file: !141, line: 386, baseType: !1981, size: 32, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1982, file: !141, line: 359, baseType: !154, size: 8)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1982, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1975, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1975, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1965, file: !1966, line: 53, baseType: !1989, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1966, line: 47, baseType: !1990)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{!103, !1973, !267, !429, !121}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !1996)
!1996 = !{!1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1995, file: !515, line: 447, baseType: !519, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1995, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1995, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1995, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1995, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1995, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1995, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1995, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1995, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1995, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1995, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1995, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1995, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1995, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1995, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1995, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1995, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1995, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1995, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1995, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1995, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2020, file: !515, line: 413, baseType: !1711, size: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2020, file: !515, line: 414, baseType: !1713, size: 768, offset: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2020, file: !515, line: 415, baseType: !1711, size: 256, offset: 1024)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2020, file: !515, line: 416, baseType: !1713, size: 768, offset: 1280)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2020, file: !515, line: 417, baseType: !1711, size: 256, offset: 2048)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2020, file: !515, line: 418, baseType: !1713, size: 768, offset: 2304)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2020, file: !515, line: 419, baseType: !1711, size: 256, offset: 3072)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2020, file: !515, line: 420, baseType: !1713, size: 768, offset: 3328)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2020, file: !515, line: 421, baseType: !1711, size: 256, offset: 4096)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2020, file: !515, line: 422, baseType: !1724, size: 1792, offset: 4352)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2020, file: !515, line: 423, baseType: !1728, size: 1920, offset: 6144)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2020, file: !515, line: 424, baseType: !1733, size: 20608, offset: 8064)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2020, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2035 = !{!2036, !2158, !2167, !2169, !1949, !2172, !2174, !2179}
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "_kernel", scope: !1951, file: !1955, line: 40, type: !2038, isLocal: false, isDefinition: true)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !320, line: 158, size: 288, elements: !2039)
!2039 = !{!2040, !2153}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2038, file: !320, line: 159, baseType: !2041, size: 192)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 192, elements: !504)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !320, line: 100, size: 192, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2147, !2148, !2149, !2150}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2042, file: !320, line: 102, baseType: !121, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2042, file: !320, line: 105, baseType: !344, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2042, file: !320, line: 108, baseType: !2047, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2049)
!2049 = !{!2050, !2108, !2120, !2121, !2122, !2123, !2129, !2142}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2048, file: !379, line: 247, baseType: !2051, size: 384)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2052)
!2052 = !{!2053, !2077, !2084, !2085, !2086, !2095, !2096, !2097}
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !379, line: 60, baseType: !2054, size: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !379, line: 60, size: 64, elements: !2055)
!2055 = !{!2056, !2071}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2054, file: !379, line: 61, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2059)
!2059 = !{!2060, !2066}
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2058, file: !325, line: 38, baseType: !2061, size: 32)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2058, file: !325, line: 38, size: 32, elements: !2062)
!2062 = !{!2063, !2065}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2061, file: !325, line: 39, baseType: !2064, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2061, file: !325, line: 40, baseType: !2064, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, scope: !2058, file: !325, line: 42, baseType: !2067, size: 32, offset: 32)
!2067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2058, file: !325, line: 42, size: 32, elements: !2068)
!2068 = !{!2069, !2070}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2067, file: !325, line: 43, baseType: !2064, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2067, file: !325, line: 44, baseType: !2064, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2054, file: !379, line: 62, baseType: !2072, size: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2073)
!2073 = !{!2074}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2072, file: !404, line: 50, baseType: !2075, size: 64)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2076, size: 64, elements: !363)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2051, file: !379, line: 68, baseType: !2078, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2080, file: !320, line: 232, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2058)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2051, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2051, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2051, file: !379, line: 90, baseType: !2087, size: 16, offset: 112)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2051, file: !379, line: 90, size: 16, elements: !2088)
!2088 = !{!2089, !2094}
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !379, line: 91, baseType: !2090, size: 16)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2087, file: !379, line: 91, size: 16, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2090, file: !379, line: 96, baseType: !425, size: 8)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2090, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2087, file: !379, line: 100, baseType: !429, size: 16)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2051, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2051, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2051, file: !379, line: 131, baseType: !2098, size: 192, offset: 192)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2099)
!2099 = !{!2100, !2101, !2107}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2098, file: !320, line: 245, baseType: !2057, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2098, file: !320, line: 246, baseType: !2102, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2103)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !2106}
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2098, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2048, file: !379, line: 250, baseType: !2109, size: 288, offset: 384)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2109, file: !446, line: 26, baseType: !121, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2109, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2109, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2109, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2109, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2109, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2109, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2109, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2109, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2048, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2048, file: !379, line: 256, baseType: !2079, size: 64, offset: 704)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2048, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2048, file: !379, line: 300, baseType: !2124, size: 96, offset: 800)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2125)
!2125 = !{!2126, !2127, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2124, file: !379, line: 153, baseType: !22, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2124, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2124, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2048, file: !379, line: 325, baseType: !2130, size: 32, offset: 896)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2132)
!2132 = !{!2133, !2139, !2140}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2131, file: !296, line: 5074, baseType: !2134, size: 96)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2135)
!2135 = !{!2136, !2137, !2138}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2134, file: !472, line: 57, baseType: !475, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2134, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2134, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2131, file: !296, line: 5075, baseType: !2079, size: 64, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2131, file: !296, line: 5076, baseType: !2141, offset: 160)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2048, file: !379, line: 343, baseType: !2143, size: 64, offset: 928)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2144)
!2144 = !{!2145, !2146}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2143, file: !446, line: 63, baseType: !121, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2143, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2042, file: !320, line: 111, baseType: !2047, size: 32, offset: 96)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2042, file: !320, line: 124, baseType: !103, size: 32, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2042, file: !320, line: 127, baseType: !154, size: 8, offset: 160)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2042, file: !320, line: 153, baseType: !2151, offset: 168)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2152, line: 33, elements: !317)
!2152 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2038, file: !320, line: 170, baseType: !2154, size: 96, offset: 192)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2154, file: !320, line: 86, baseType: !2047, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2154, file: !320, line: 90, baseType: !2083, size: 64, offset: 32)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1951, file: !1955, line: 43, type: !2160, isLocal: false, isDefinition: true, align: 512)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2161, size: 8704, elements: !2165)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2162, line: 47, size: 8, elements: !2163)
!2162 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2163 = !{!2164}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2161, file: !2162, line: 48, baseType: !146, size: 8)
!2165 = !{!2166}
!2166 = !DISubrange(count: 1088)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1951, file: !1955, line: 44, type: !2048, isLocal: false, isDefinition: true)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1951, file: !1955, line: 48, type: !2171, isLocal: false, isDefinition: true)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2048, size: 1024, elements: !504)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1951, file: !1955, line: 217, type: !157, isLocal: false, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1951, file: !1955, line: 50, type: !2176, isLocal: true, isDefinition: true, align: 512)
!2176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2161, size: 3072, elements: !2177)
!2177 = !{!505, !2178}
!2178 = !DISubrange(count: 384)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "levels", scope: !2181, file: !1955, line: 232, type: !2201, isLocal: true, isDefinition: true)
!2181 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1955, file: !1955, line: 230, type: !2182, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !2184)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{null, !1954}
!2184 = !{!2185, !2186, !2196, !2200}
!2185 = !DILocalVariable(name: "level", arg: 1, scope: !2181, file: !1955, line: 230, type: !1954)
!2186 = !DILocalVariable(name: "entry", scope: !2181, file: !1955, line: 244, type: !2187)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2190)
!2190 = !{!2191, !2195}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2189, file: !132, line: 60, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!103, !1973}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2189, file: !132, line: 65, baseType: !1973, size: 32, offset: 32)
!2196 = !DILocalVariable(name: "dev", scope: !2197, file: !1955, line: 247, type: !1973)
!2197 = distinct !DILexicalBlock(scope: !2198, file: !1955, line: 246, column: 64)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !1955, line: 246, column: 2)
!2199 = distinct !DILexicalBlock(scope: !2181, file: !1955, line: 246, column: 2)
!2200 = !DILocalVariable(name: "rc", scope: !2197, file: !1955, line: 248, type: !103)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2187, size: 192, elements: !1318)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2161, size: 16896, elements: !2203)
!2203 = !{!505, !2204}
!2204 = !DISubrange(count: 2112)
!2205 = !DIGlobalVariableExpression(var: !2206, expr: !DIExpression())
!2206 = distinct !DIGlobalVariable(name: "states_str", scope: !2207, file: !2208, line: 276, type: !2329, isLocal: true, isDefinition: true)
!2207 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2208, file: !2208, line: 271, type: !2209, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !2320)
!2208 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!144, !2211, !344, !204}
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2214)
!2214 = !{!2215, !2273, !2285, !2286, !2287, !2288, !2294, !2307}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2213, file: !379, line: 247, baseType: !2216, size: 384)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2217)
!2217 = !{!2218, !2242, !2249, !2250, !2251, !2260, !2261, !2262}
!2218 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !379, line: 60, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !379, line: 60, size: 64, elements: !2220)
!2220 = !{!2221, !2236}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2219, file: !379, line: 61, baseType: !2222, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2223)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2224)
!2224 = !{!2225, !2231}
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2223, file: !325, line: 38, baseType: !2226, size: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2223, file: !325, line: 38, size: 32, elements: !2227)
!2227 = !{!2228, !2230}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2226, file: !325, line: 39, baseType: !2229, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2226, file: !325, line: 40, baseType: !2229, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, scope: !2223, file: !325, line: 42, baseType: !2232, size: 32, offset: 32)
!2232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2223, file: !325, line: 42, size: 32, elements: !2233)
!2233 = !{!2234, !2235}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2232, file: !325, line: 43, baseType: !2229, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2232, file: !325, line: 44, baseType: !2229, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2219, file: !379, line: 62, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2238)
!2238 = !{!2239}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2237, file: !404, line: 50, baseType: !2240, size: 64)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2241, size: 64, elements: !363)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2216, file: !379, line: 68, baseType: !2243, size: 32, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2245)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2246)
!2246 = !{!2247}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2245, file: !320, line: 232, baseType: !2248, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2223)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2216, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2216, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !379, line: 90, baseType: !2252, size: 16, offset: 112)
!2252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !379, line: 90, size: 16, elements: !2253)
!2253 = !{!2254, !2259}
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2252, file: !379, line: 91, baseType: !2255, size: 16)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2252, file: !379, line: 91, size: 16, elements: !2256)
!2256 = !{!2257, !2258}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2255, file: !379, line: 96, baseType: !425, size: 8)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2255, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2252, file: !379, line: 100, baseType: !429, size: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2216, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2216, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2216, file: !379, line: 131, baseType: !2263, size: 192, offset: 192)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2264)
!2264 = !{!2265, !2266, !2272}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2263, file: !320, line: 245, baseType: !2222, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2263, file: !320, line: 246, baseType: !2267, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2268)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{null, !2271}
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2263, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2213, file: !379, line: 250, baseType: !2274, size: 288, offset: 384)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2274, file: !446, line: 26, baseType: !121, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2274, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2274, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2274, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2274, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2274, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2274, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2274, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2274, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2213, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2213, file: !379, line: 256, baseType: !2244, size: 64, offset: 704)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2213, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2213, file: !379, line: 300, baseType: !2289, size: 96, offset: 800)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2290)
!2290 = !{!2291, !2292, !2293}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2289, file: !379, line: 153, baseType: !22, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2289, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2289, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2213, file: !379, line: 325, baseType: !2295, size: 32, offset: 896)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2297)
!2297 = !{!2298, !2304, !2305}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2296, file: !296, line: 5074, baseType: !2299, size: 96)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2300)
!2300 = !{!2301, !2302, !2303}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2299, file: !472, line: 57, baseType: !475, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2299, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2299, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2296, file: !296, line: 5075, baseType: !2244, size: 64, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2296, file: !296, line: 5076, baseType: !2306, offset: 160)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2213, file: !379, line: 343, baseType: !2308, size: 64, offset: 928)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2309)
!2309 = !{!2310, !2311}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2308, file: !446, line: 63, baseType: !121, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2308, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2314, globals: !2316, splitDebugInlining: false, nameTableKind: None)
!2313 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2314 = !{!102, !144, !200, !154, !103, !2315, !24, !204, !344, !22, !121, !1595}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2316 = !{!2205, !2317}
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "states_sz", scope: !2207, file: !2208, line: 279, type: !2319, isLocal: true, isDefinition: true)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1888, size: 256, elements: !1603)
!2320 = !{!2321, !2322, !2323, !2324, !2325, !2326, !2327}
!2321 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2207, file: !2208, line: 271, type: !2211)
!2322 = !DILocalVariable(name: "buf", arg: 2, scope: !2207, file: !2208, line: 271, type: !344)
!2323 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2207, file: !2208, line: 271, type: !204)
!2324 = !DILocalVariable(name: "off", scope: !2207, file: !2208, line: 273, type: !204)
!2325 = !DILocalVariable(name: "bit", scope: !2207, file: !2208, line: 274, type: !154)
!2326 = !DILocalVariable(name: "thread_state", scope: !2207, file: !2208, line: 275, type: !154)
!2327 = !DILocalVariable(name: "index", scope: !2328, file: !2208, line: 293, type: !154)
!2328 = distinct !DILexicalBlock(scope: !2207, file: !2208, line: 293, column: 2)
!2329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1603)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2332, file: !2440, line: 56, type: !2429, isLocal: false, isDefinition: true)
!2332 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2333, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2334, globals: !2437, splitDebugInlining: false, nameTableKind: None)
!2333 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2334 = !{!2335, !344, !102, !2435, !267, !200, !745, !103, !121, !1595, !2436}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !2337)
!2337 = !{!2338, !2396, !2408, !2409, !2410, !2411, !2417, !2430}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2336, file: !379, line: 247, baseType: !2339, size: 384)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !2340)
!2340 = !{!2341, !2365, !2372, !2373, !2374, !2383, !2384, !2385}
!2341 = !DIDerivedType(tag: DW_TAG_member, scope: !2339, file: !379, line: 60, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2339, file: !379, line: 60, size: 64, elements: !2343)
!2343 = !{!2344, !2359}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2342, file: !379, line: 61, baseType: !2345, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2346)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2347)
!2347 = !{!2348, !2354}
!2348 = !DIDerivedType(tag: DW_TAG_member, scope: !2346, file: !325, line: 38, baseType: !2349, size: 32)
!2349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2346, file: !325, line: 38, size: 32, elements: !2350)
!2350 = !{!2351, !2353}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2349, file: !325, line: 39, baseType: !2352, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2349, file: !325, line: 40, baseType: !2352, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !2346, file: !325, line: 42, baseType: !2355, size: 32, offset: 32)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2346, file: !325, line: 42, size: 32, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2355, file: !325, line: 43, baseType: !2352, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2355, file: !325, line: 44, baseType: !2352, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2342, file: !379, line: 62, baseType: !2360, size: 64)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !2361)
!2361 = !{!2362}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2360, file: !404, line: 50, baseType: !2363, size: 64)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2364, size: 64, elements: !363)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2339, file: !379, line: 68, baseType: !2366, size: 32, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !2368)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !2369)
!2369 = !{!2370}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2368, file: !320, line: 232, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2346)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2339, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2339, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!2374 = !DIDerivedType(tag: DW_TAG_member, scope: !2339, file: !379, line: 90, baseType: !2375, size: 16, offset: 112)
!2375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2339, file: !379, line: 90, size: 16, elements: !2376)
!2376 = !{!2377, !2382}
!2377 = !DIDerivedType(tag: DW_TAG_member, scope: !2375, file: !379, line: 91, baseType: !2378, size: 16)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2375, file: !379, line: 91, size: 16, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2378, file: !379, line: 96, baseType: !425, size: 8)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2378, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2375, file: !379, line: 100, baseType: !429, size: 16)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2339, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2339, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2339, file: !379, line: 131, baseType: !2386, size: 192, offset: 192)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2387)
!2387 = !{!2388, !2389, !2395}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2386, file: !320, line: 245, baseType: !2345, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2386, file: !320, line: 246, baseType: !2390, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2391)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !2394}
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2386, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2336, file: !379, line: 250, baseType: !2397, size: 288, offset: 384)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !2398)
!2398 = !{!2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2397, file: !446, line: 26, baseType: !121, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2397, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2397, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2397, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2397, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2397, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2397, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2397, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2397, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2336, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2336, file: !379, line: 256, baseType: !2367, size: 64, offset: 704)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2336, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2336, file: !379, line: 300, baseType: !2412, size: 96, offset: 800)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !2413)
!2413 = !{!2414, !2415, !2416}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2412, file: !379, line: 153, baseType: !22, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2412, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2412, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2336, file: !379, line: 325, baseType: !2418, size: 32, offset: 896)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !2420)
!2420 = !{!2421, !2427, !2428}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2419, file: !296, line: 5074, baseType: !2422, size: 96)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !2423)
!2423 = !{!2424, !2425, !2426}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2422, file: !472, line: 57, baseType: !475, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2422, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2422, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2419, file: !296, line: 5075, baseType: !2367, size: 64, offset: 96)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2419, file: !296, line: 5076, baseType: !2429, offset: 160)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2336, file: !379, line: 343, baseType: !2431, size: 64, offset: 928)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2431, file: !446, line: 63, baseType: !121, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2431, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 32)
!2437 = !{!2330, !2438, !2441, !2443}
!2438 = !DIGlobalVariableExpression(var: !2439, expr: !DIExpression())
!2439 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2332, file: !2440, line: 404, type: !103, isLocal: true, isDefinition: true)
!2440 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2332, file: !2440, line: 405, type: !103, isLocal: true, isDefinition: true)
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(name: "pending_current", scope: !2332, file: !2440, line: 425, type: !2335, isLocal: true, isDefinition: true)
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2447, file: !2477, line: 15, type: !1595, isLocal: true, isDefinition: true)
!2447 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2448, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2449, globals: !2474, splitDebugInlining: false, nameTableKind: None)
!2448 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2449 = !{!200, !102, !745, !121, !1595, !103, !2450, !344, !202}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !2452)
!2452 = !{!2453, !2468, !2473}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2451, file: !320, line: 245, baseType: !2454, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2455)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2456)
!2456 = !{!2457, !2463}
!2457 = !DIDerivedType(tag: DW_TAG_member, scope: !2455, file: !325, line: 38, baseType: !2458, size: 32)
!2458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2455, file: !325, line: 38, size: 32, elements: !2459)
!2459 = !{!2460, !2462}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2458, file: !325, line: 39, baseType: !2461, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2458, file: !325, line: 40, baseType: !2461, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !2455, file: !325, line: 42, baseType: !2464, size: 32, offset: 32)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2455, file: !325, line: 42, size: 32, elements: !2465)
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2464, file: !325, line: 43, baseType: !2461, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2464, file: !325, line: 44, baseType: !2461, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2451, file: !320, line: 246, baseType: !2469, size: 32, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !2470)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{null, !2450}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2451, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!2474 = !{!2445, !2475, !2479, !2481}
!2475 = !DIGlobalVariableExpression(var: !2476, expr: !DIExpression())
!2476 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2447, file: !2477, line: 19, type: !2478, isLocal: true, isDefinition: true)
!2477 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2447, file: !2477, line: 25, type: !103, isLocal: true, isDefinition: true)
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2447, file: !2477, line: 17, type: !2483, isLocal: true, isDefinition: true)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2455)
!2484 = !DIGlobalVariableExpression(var: !2485, expr: !DIExpression())
!2485 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2486, file: !2505, line: 55, type: !2506, isLocal: true, isDefinition: true, align: 32)
!2486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2488, globals: !2504, splitDebugInlining: false, nameTableKind: None)
!2487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2488 = !{!102, !200, !103, !2489}
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !2492)
!2492 = !{!2493, !2499}
!2493 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !325, line: 38, baseType: !2494, size: 32)
!2494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !325, line: 38, size: 32, elements: !2495)
!2495 = !{!2496, !2498}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2494, file: !325, line: 39, baseType: !2497, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2494, file: !325, line: 40, baseType: !2497, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2491, file: !325, line: 42, baseType: !2500, size: 32, offset: 32)
!2500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2491, file: !325, line: 42, size: 32, elements: !2501)
!2501 = !{!2502, !2503}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2500, file: !325, line: 43, baseType: !2497, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2500, file: !325, line: 44, baseType: !2497, size: 32)
!2504 = !{!2484}
!2505 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2507)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !2508)
!2508 = !{!2509, !2516}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2507, file: !132, line: 60, baseType: !2510, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!103, !2513}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2515)
!2515 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !132, line: 48, flags: DIFlagFwdDecl)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2507, file: !132, line: 65, baseType: !2513, size: 32, offset: 32)
!2517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2522, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2522 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2525, retainedTypes: !2533, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2525 = !{!30, !2526}
!2526 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2527, line: 54, baseType: !32, size: 32, elements: !2528)
!2527 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2528 = !{!2529, !2530, !2531, !2532}
!2529 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2530 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2531 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2532 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2533 = !{!102, !204, !267, !24, !2534, !22, !2540, !103, !864, !2555}
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2527, line: 58, baseType: !2536)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2527, line: 58, size: 64, elements: !2537)
!2537 = !{!2538}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2536, file: !2527, line: 58, baseType: !2539, size: 64)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1603)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2527, line: 68, size: 128, elements: !2542)
!2542 = !{!2543, !2546, !2547, !2548}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2541, file: !2527, line: 69, baseType: !2544, size: 64)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2545, size: 64, elements: !363)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2527, line: 61, baseType: !121)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2541, file: !2527, line: 70, baseType: !2545, size: 32, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2541, file: !2527, line: 71, baseType: !121, size: 32, offset: 96)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2541, file: !2527, line: 77, baseType: !2549, offset: 128)
!2549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2550, elements: !2553)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2527, line: 64, size: 32, elements: !2551)
!2551 = !{!2552}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2550, file: !2527, line: 65, baseType: !2545, size: 32)
!2553 = !{!2554}
!2554 = !DISubrange(count: 0)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!2556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2557, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2558, retainedTypes: !2578, splitDebugInlining: false, nameTableKind: None)
!2557 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2558 = !{!2559, !2567}
!2559 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2560, line: 69, baseType: !32, size: 32, elements: !2561)
!2560 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2561 = !{!2562, !2563, !2564, !2565, !2566}
!2562 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2563 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2564 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2565 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2566 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2560, line: 56, baseType: !32, size: 32, elements: !2568)
!2568 = !{!2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577}
!2569 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2570 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2571 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2572 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2573 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2574 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2575 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2576 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2577 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2578 = !{!103, !2559, !2567, !2579, !426, !164, !2581, !2582, !155, !430, !144, !204, !102, !22, !32, !2584, !2585, !2586, !354, !2587, !203, !2588, !2580, !2589, !2590, !2591, !2592}
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2560, line: 31, baseType: !2580)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !203)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !205, line: 329, baseType: !32)
!2582 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2560, line: 32, baseType: !2583)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1596)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !205, line: 145, baseType: !103)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2594, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2594 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2596, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2597, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2596 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2597 = !{!2598, !30}
!2598 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2599, line: 27, baseType: !32, size: 32, elements: !2600)
!2599 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2600 = !{!2601, !2602, !2603, !2604, !2605}
!2601 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2602 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2603 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2604 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2605 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2606 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2607, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2608, retainedTypes: !2609, splitDebugInlining: false, nameTableKind: None)
!2607 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2608 = !{!584, !2598, !30}
!2609 = !{!771, !2610, !102, !103, !745, !121, !154, !2627}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2613)
!2613 = !{!2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2612, file: !515, line: 413, baseType: !1711, size: 256)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2612, file: !515, line: 414, baseType: !1713, size: 768, offset: 256)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2612, file: !515, line: 415, baseType: !1711, size: 256, offset: 1024)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2612, file: !515, line: 416, baseType: !1713, size: 768, offset: 1280)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2612, file: !515, line: 417, baseType: !1711, size: 256, offset: 2048)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2612, file: !515, line: 418, baseType: !1713, size: 768, offset: 2304)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2612, file: !515, line: 419, baseType: !1711, size: 256, offset: 3072)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2612, file: !515, line: 420, baseType: !1713, size: 768, offset: 3328)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2612, file: !515, line: 421, baseType: !1711, size: 256, offset: 4096)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2612, file: !515, line: 422, baseType: !1724, size: 1792, offset: 4352)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2612, file: !515, line: 423, baseType: !1728, size: 1920, offset: 6144)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2612, file: !515, line: 424, baseType: !1733, size: 20608, offset: 8064)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2612, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2629, file: !515, line: 447, baseType: !519, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2629, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2629, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2629, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2629, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2629, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2629, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2629, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2629, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2629, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2629, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2629, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2629, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2629, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2629, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2629, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2629, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2629, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2629, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2629, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2629, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2656, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2656 = !{!102, !103, !22, !2657}
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2659)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2660)
!2660 = !{!2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2659, file: !515, line: 447, baseType: !519, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2659, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2659, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2659, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2659, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2659, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2659, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2659, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2659, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2659, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2659, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2659, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2659, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2659, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2659, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2659, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2659, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2659, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2659, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2659, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2659, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2684, splitDebugInlining: false, nameTableKind: None)
!2683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2684 = !{!2685, !102, !103}
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2687)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2687, file: !515, line: 447, baseType: !519, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2687, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2687, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2687, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2687, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2687, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2687, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2687, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2687, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2687, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2687, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2687, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2687, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2687, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2687, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2687, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2687, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2687, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2687, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2687, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2687, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2712, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2712 = !{!2713, !121, !102, !103}
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2715, line: 98, size: 256, elements: !2716)
!2715 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2716 = !{!2717, !2722, !2727, !2732, !2737, !2742, !2747, !2752}
!2717 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2715, line: 99, baseType: !2718, size: 32)
!2718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2715, line: 99, size: 32, elements: !2719)
!2719 = !{!2720, !2721}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2718, file: !2715, line: 99, baseType: !121, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2718, file: !2715, line: 99, baseType: !121, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2715, line: 100, baseType: !2723, size: 32, offset: 32)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2715, line: 100, size: 32, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2723, file: !2715, line: 100, baseType: !121, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2723, file: !2715, line: 100, baseType: !121, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2715, line: 101, baseType: !2728, size: 32, offset: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2715, line: 101, size: 32, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2728, file: !2715, line: 101, baseType: !121, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2728, file: !2715, line: 101, baseType: !121, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2715, line: 102, baseType: !2733, size: 32, offset: 96)
!2733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2715, line: 102, size: 32, elements: !2734)
!2734 = !{!2735, !2736}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2733, file: !2715, line: 102, baseType: !121, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2733, file: !2715, line: 102, baseType: !121, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2715, line: 103, baseType: !2738, size: 32, offset: 128)
!2738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2715, line: 103, size: 32, elements: !2739)
!2739 = !{!2740, !2741}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2738, file: !2715, line: 103, baseType: !121, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2738, file: !2715, line: 103, baseType: !121, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2715, line: 104, baseType: !2743, size: 32, offset: 160)
!2743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2715, line: 104, size: 32, elements: !2744)
!2744 = !{!2745, !2746}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2743, file: !2715, line: 104, baseType: !121, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2743, file: !2715, line: 104, baseType: !121, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, scope: !2714, file: !2715, line: 105, baseType: !2748, size: 32, offset: 192)
!2748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2714, file: !2715, line: 105, size: 32, elements: !2749)
!2749 = !{!2750, !2751}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2748, file: !2715, line: 105, baseType: !121, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2748, file: !2715, line: 105, baseType: !121, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2714, file: !2715, line: 106, baseType: !121, size: 32, offset: 224)
!2753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2754, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2597, retainedTypes: !2755, splitDebugInlining: false, nameTableKind: None)
!2754 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2755 = !{!2756, !102, !103, !2781, !2555, !121}
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2758)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2759)
!2759 = !{!2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2758, file: !515, line: 447, baseType: !519, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2758, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2758, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2758, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2758, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2758, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2758, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2758, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2758, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2758, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2758, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2758, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2758, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2758, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2758, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2758, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2758, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2758, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2758, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2758, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2758, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2715, line: 141, baseType: !2783)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2715, line: 97, size: 256, elements: !2784)
!2784 = !{!2785}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2783, file: !2715, line: 107, baseType: !2786, size: 256)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2715, line: 98, size: 256, elements: !2787)
!2787 = !{!2788, !2793, !2798, !2803, !2808, !2813, !2818, !2823}
!2788 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2715, line: 99, baseType: !2789, size: 32)
!2789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2715, line: 99, size: 32, elements: !2790)
!2790 = !{!2791, !2792}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2789, file: !2715, line: 99, baseType: !121, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2789, file: !2715, line: 99, baseType: !121, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2715, line: 100, baseType: !2794, size: 32, offset: 32)
!2794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2715, line: 100, size: 32, elements: !2795)
!2795 = !{!2796, !2797}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2794, file: !2715, line: 100, baseType: !121, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2794, file: !2715, line: 100, baseType: !121, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2715, line: 101, baseType: !2799, size: 32, offset: 64)
!2799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2715, line: 101, size: 32, elements: !2800)
!2800 = !{!2801, !2802}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2799, file: !2715, line: 101, baseType: !121, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2799, file: !2715, line: 101, baseType: !121, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2715, line: 102, baseType: !2804, size: 32, offset: 96)
!2804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2715, line: 102, size: 32, elements: !2805)
!2805 = !{!2806, !2807}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2804, file: !2715, line: 102, baseType: !121, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2804, file: !2715, line: 102, baseType: !121, size: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2715, line: 103, baseType: !2809, size: 32, offset: 128)
!2809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2715, line: 103, size: 32, elements: !2810)
!2810 = !{!2811, !2812}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2809, file: !2715, line: 103, baseType: !121, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2809, file: !2715, line: 103, baseType: !121, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2715, line: 104, baseType: !2814, size: 32, offset: 160)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2715, line: 104, size: 32, elements: !2815)
!2815 = !{!2816, !2817}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2814, file: !2715, line: 104, baseType: !121, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2814, file: !2715, line: 104, baseType: !121, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, scope: !2786, file: !2715, line: 105, baseType: !2819, size: 32, offset: 192)
!2819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2786, file: !2715, line: 105, size: 32, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2819, file: !2715, line: 105, baseType: !121, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2819, file: !2715, line: 105, baseType: !121, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2786, file: !2715, line: 106, baseType: !121, size: 32, offset: 224)
!2824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1696, retainedTypes: !2826, splitDebugInlining: false, nameTableKind: None)
!2825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2826 = !{!771, !745, !154, !121, !2827, !2844}
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !515, line: 426, baseType: !2829)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 411, size: 28704, elements: !2830)
!2830 = !{!2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2829, file: !515, line: 413, baseType: !1711, size: 256)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2829, file: !515, line: 414, baseType: !1713, size: 768, offset: 256)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2829, file: !515, line: 415, baseType: !1711, size: 256, offset: 1024)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2829, file: !515, line: 416, baseType: !1713, size: 768, offset: 1280)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2829, file: !515, line: 417, baseType: !1711, size: 256, offset: 2048)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2829, file: !515, line: 418, baseType: !1713, size: 768, offset: 2304)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2829, file: !515, line: 419, baseType: !1711, size: 256, offset: 3072)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2829, file: !515, line: 420, baseType: !1713, size: 768, offset: 3328)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2829, file: !515, line: 421, baseType: !1711, size: 256, offset: 4096)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2829, file: !515, line: 422, baseType: !1724, size: 1792, offset: 4352)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2829, file: !515, line: 423, baseType: !1728, size: 1920, offset: 6144)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2829, file: !515, line: 424, baseType: !1733, size: 20608, offset: 8064)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2829, file: !515, line: 425, baseType: !120, size: 32, offset: 28672)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2846)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2847)
!2847 = !{!2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2846, file: !515, line: 447, baseType: !519, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2846, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2846, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2846, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2846, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2846, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2846, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2846, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2846, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2846, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2846, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2846, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2846, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2846, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2846, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2846, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2846, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2846, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2846, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2846, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2846, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2871, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2871 = !{!2872, !102, !103}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !515, line: 468, baseType: !2874)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 445, size: 1120, elements: !2875)
!2875 = !{!2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2874, file: !515, line: 447, baseType: !519, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2874, file: !515, line: 448, baseType: !120, size: 32, offset: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2874, file: !515, line: 449, baseType: !120, size: 32, offset: 64)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2874, file: !515, line: 450, baseType: !120, size: 32, offset: 96)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2874, file: !515, line: 451, baseType: !120, size: 32, offset: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2874, file: !515, line: 452, baseType: !120, size: 32, offset: 160)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2874, file: !515, line: 453, baseType: !1748, size: 96, offset: 192)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2874, file: !515, line: 454, baseType: !120, size: 32, offset: 288)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2874, file: !515, line: 455, baseType: !120, size: 32, offset: 320)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2874, file: !515, line: 456, baseType: !120, size: 32, offset: 352)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2874, file: !515, line: 457, baseType: !120, size: 32, offset: 384)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2874, file: !515, line: 458, baseType: !120, size: 32, offset: 416)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2874, file: !515, line: 459, baseType: !120, size: 32, offset: 448)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2874, file: !515, line: 460, baseType: !120, size: 32, offset: 480)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2874, file: !515, line: 461, baseType: !1757, size: 64, offset: 512)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2874, file: !515, line: 462, baseType: !519, size: 32, offset: 576)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2874, file: !515, line: 463, baseType: !519, size: 32, offset: 608)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2874, file: !515, line: 464, baseType: !1761, size: 128, offset: 640)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2874, file: !515, line: 465, baseType: !1763, size: 160, offset: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2874, file: !515, line: 466, baseType: !1765, size: 160, offset: 928)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2874, file: !515, line: 467, baseType: !120, size: 32, offset: 1088)
!2897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2899, splitDebugInlining: false, nameTableKind: None)
!2898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2899 = !{!146, !344, !204, !230, !2900, !155, !102}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2904, splitDebugInlining: false, nameTableKind: None)
!2903 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2904 = !{!2905}
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !2907)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !2908)
!2908 = !{!2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2907, file: !116, line: 479, baseType: !120, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2907, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2907, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2907, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2907, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2907, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2907, file: !116, line: 485, baseType: !833, size: 64, offset: 192)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2907, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2907, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2907, file: !116, line: 488, baseType: !833, size: 64, offset: 320)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2907, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2907, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2907, file: !116, line: 491, baseType: !833, size: 64, offset: 448)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2907, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2907, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2907, file: !116, line: 494, baseType: !833, size: 64, offset: 576)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2907, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2907, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2907, file: !116, line: 497, baseType: !833, size: 64, offset: 704)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2907, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2907, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2907, file: !116, line: 500, baseType: !833, size: 64, offset: 832)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2907, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2907, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2907, file: !116, line: 503, baseType: !833, size: 64, offset: 960)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2907, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2907, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2907, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2907, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2907, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2907, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!2940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2941 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2944, retainedTypes: !2960, splitDebugInlining: false, nameTableKind: None)
!2943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!2944 = !{!2945, !2952, !2956}
!2945 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2946, line: 38, baseType: !32, size: 32, elements: !2947)
!2946 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2947 = !{!2948, !2949, !2950, !2951}
!2948 = !DIEnumerator(name: "HAL_OK", value: 0)
!2949 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2950 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2951 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2952 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !810, line: 184, baseType: !32, size: 32, elements: !2953)
!2953 = !{!2954, !2955}
!2954 = !DIEnumerator(name: "RESET", value: 0)
!2955 = !DIEnumerator(name: "SET", value: 1)
!2956 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !810, line: 190, baseType: !32, size: 32, elements: !2957)
!2957 = !{!2958, !2959}
!2958 = !DIEnumerator(name: "DISABLE", value: 0)
!2959 = !DIEnumerator(name: "ENABLE", value: 1)
!2960 = !{!102, !2961, !154, !121, !1597, !2996, !3002, !3013, !429, !3014, !1595}
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !2963)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2963, file: !116, line: 479, baseType: !120, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2963, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2963, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2963, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2963, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2963, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2963, file: !116, line: 485, baseType: !833, size: 64, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2963, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2963, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2963, file: !116, line: 488, baseType: !833, size: 64, offset: 320)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2963, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2963, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2963, file: !116, line: 491, baseType: !833, size: 64, offset: 448)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2963, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2963, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2963, file: !116, line: 494, baseType: !833, size: 64, offset: 576)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2963, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2963, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2963, file: !116, line: 497, baseType: !833, size: 64, offset: 704)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2963, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2963, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2963, file: !116, line: 500, baseType: !833, size: 64, offset: 832)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2963, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2963, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2963, file: !116, line: 503, baseType: !833, size: 64, offset: 960)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2963, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2963, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2963, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2963, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2963, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2963, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 471, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 467, size: 64, elements: !2999)
!2999 = !{!3000, !3001}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2998, file: !116, line: 469, baseType: !120, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2998, file: !116, line: 470, baseType: !120, size: 32, offset: 32)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !3004)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3009, !3010, !3011, !3012}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3004, file: !116, line: 372, baseType: !120, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3004, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3004, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3004, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3004, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3004, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3004, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 396, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 385, size: 320, elements: !3017)
!3017 = !{!3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3016, file: !116, line: 387, baseType: !120, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3016, file: !116, line: 388, baseType: !120, size: 32, offset: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3016, file: !116, line: 389, baseType: !120, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3016, file: !116, line: 390, baseType: !120, size: 32, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3016, file: !116, line: 391, baseType: !120, size: 32, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3016, file: !116, line: 392, baseType: !120, size: 32, offset: 160)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3016, file: !116, line: 393, baseType: !120, size: 32, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3016, file: !116, line: 394, baseType: !120, size: 32, offset: 224)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3016, file: !116, line: 395, baseType: !1237, size: 64, offset: 256)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3029, retainedTypes: !3030, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3029 = !{!809}
!3030 = !{!3031, !121, !3039, !3045, !3056}
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !515, line: 770, baseType: !3033)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 764, size: 128, elements: !3034)
!3034 = !{!3035, !3036, !3037, !3038}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3033, file: !515, line: 766, baseType: !120, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3033, file: !515, line: 767, baseType: !120, size: 32, offset: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3033, file: !515, line: 768, baseType: !120, size: 32, offset: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3033, file: !515, line: 769, baseType: !519, size: 32, offset: 96)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 471, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 467, size: 64, elements: !3042)
!3042 = !{!3043, !3044}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3041, file: !116, line: 469, baseType: !120, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3041, file: !116, line: 470, baseType: !120, size: 32, offset: 32)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 379, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 224, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052, !3053, !3054, !3055}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3047, file: !116, line: 372, baseType: !120, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3047, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3047, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3047, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3047, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3047, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3047, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 510, baseType: !3058)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 477, size: 1216, elements: !3059)
!3059 = !{!3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3058, file: !116, line: 479, baseType: !120, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3058, file: !116, line: 480, baseType: !120, size: 32, offset: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3058, file: !116, line: 481, baseType: !120, size: 32, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3058, file: !116, line: 482, baseType: !120, size: 32, offset: 96)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3058, file: !116, line: 483, baseType: !120, size: 32, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3058, file: !116, line: 484, baseType: !120, size: 32, offset: 160)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3058, file: !116, line: 485, baseType: !833, size: 64, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3058, file: !116, line: 486, baseType: !120, size: 32, offset: 256)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3058, file: !116, line: 487, baseType: !120, size: 32, offset: 288)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3058, file: !116, line: 488, baseType: !833, size: 64, offset: 320)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3058, file: !116, line: 489, baseType: !120, size: 32, offset: 384)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3058, file: !116, line: 490, baseType: !120, size: 32, offset: 416)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3058, file: !116, line: 491, baseType: !833, size: 64, offset: 448)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3058, file: !116, line: 492, baseType: !120, size: 32, offset: 512)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3058, file: !116, line: 493, baseType: !120, size: 32, offset: 544)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3058, file: !116, line: 494, baseType: !833, size: 64, offset: 576)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3058, file: !116, line: 495, baseType: !120, size: 32, offset: 640)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3058, file: !116, line: 496, baseType: !120, size: 32, offset: 672)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3058, file: !116, line: 497, baseType: !833, size: 64, offset: 704)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3058, file: !116, line: 498, baseType: !120, size: 32, offset: 768)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3058, file: !116, line: 499, baseType: !120, size: 32, offset: 800)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3058, file: !116, line: 500, baseType: !833, size: 64, offset: 832)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3058, file: !116, line: 501, baseType: !120, size: 32, offset: 896)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3058, file: !116, line: 502, baseType: !120, size: 32, offset: 928)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3058, file: !116, line: 503, baseType: !833, size: 64, offset: 960)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3058, file: !116, line: 504, baseType: !120, size: 32, offset: 1024)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3058, file: !116, line: 505, baseType: !120, size: 32, offset: 1056)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3058, file: !116, line: 506, baseType: !121, size: 32, offset: 1088)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3058, file: !116, line: 507, baseType: !120, size: 32, offset: 1120)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3058, file: !116, line: 508, baseType: !120, size: 32, offset: 1152)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3058, file: !116, line: 509, baseType: !120, size: 32, offset: 1184)
!3091 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3092, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3093, splitDebugInlining: false, nameTableKind: None)
!3092 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3093 = !{!102, !204}
!3094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3095, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3096, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3095 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3096 = !{!3097, !3104, !30}
!3097 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3098, line: 14, baseType: !32, size: 32, elements: !3099)
!3098 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3099 = !{!3100, !3101, !3102, !3103}
!3100 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3101 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3102 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3103 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3098, line: 42, baseType: !32, size: 32, elements: !3105)
!3105 = !{!3106, !3107, !3108, !3109, !3110, !3111}
!3106 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3107 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3108 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3109 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3110 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3111 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3112 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3113, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3113 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3114 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3115, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3116, retainedTypes: !3127, splitDebugInlining: false, nameTableKind: None)
!3115 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3116 = !{!3117, !30}
!3117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !296, line: 5323, baseType: !32, size: 32, elements: !3118)
!3118 = !{!3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3119 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3120 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3121 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3122 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3123 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3124 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3125 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3126 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3127 = !{!102, !154, !3128, !344, !3138, !157, !3139, !103, !3140, !312}
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 32)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3130, line: 25, size: 64, elements: !3131)
!3130 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3131 = !{!3132, !3137}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3129, file: !3130, line: 26, baseType: !3133, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !303, line: 39, baseType: !3134)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !303, line: 35, size: 32, elements: !3135)
!3135 = !{!3136}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3134, file: !303, line: 36, baseType: !312, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3129, file: !3130, line: 27, baseType: !102, size: 32, offset: 32)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3143)
!3143 = !{!3144, !3150}
!3144 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !325, line: 38, baseType: !3145, size: 32)
!3145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !325, line: 38, size: 32, elements: !3146)
!3146 = !{!3147, !3149}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3145, file: !325, line: 39, baseType: !3148, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3145, file: !325, line: 40, baseType: !3148, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !325, line: 42, baseType: !3151, size: 32, offset: 32)
!3151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !325, line: 42, size: 32, elements: !3152)
!3152 = !{!3153, !3154}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3151, file: !325, line: 43, baseType: !3148, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3151, file: !325, line: 44, baseType: !3148, size: 32)
!3155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3156, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3157, splitDebugInlining: false, nameTableKind: None)
!3156 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3157 = !{!22, !102, !103}
!3158 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3159, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3159 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3162 = !{!"Ubuntu clang version 14.0.6"}
!3163 = !{i32 7, !"Dwarf Version", i32 4}
!3164 = !{i32 2, !"Debug Info Version", i32 3}
!3165 = !{i32 1, !"wchar_size", i32 4}
!3166 = !{i32 1, !"min_enum_size", i32 4}
!3167 = !{i32 1, !"branch-target-enforcement", i32 0}
!3168 = !{i32 1, !"sign-return-address", i32 0}
!3169 = !{i32 1, !"sign-return-address-all", i32 0}
!3170 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3171 = !{i32 7, !"frame-pointer", i32 2}
!3172 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3173, file: !3173, line: 26, type: !3174, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2517, retainedNodes: !317)
!3173 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3174 = !DISubroutineType(types: !3175)
!3175 = !{null}
!3176 = !DILocation(line: 28, column: 1, scope: !3172)
!3177 = !{i64 2155025702, i64 2155025722, i64 2155025785}
!3178 = !DILocation(line: 29, column: 1, scope: !3172)
!3179 = !{i64 2155026117, i64 2155026137, i64 2155026200}
!3180 = !DILocation(line: 30, column: 1, scope: !3172)
!3181 = !{i64 2155026536, i64 2155026556, i64 2155026619}
!3182 = !DILocation(line: 31, column: 1, scope: !3172)
!3183 = !{i64 2155026955, i64 2155026975, i64 2155027038}
!3184 = !DILocation(line: 33, column: 1, scope: !3172)
!3185 = !{i64 2155027247, i64 2155027267, i64 2155027330}
!3186 = !DILocation(line: 35, column: 1, scope: !3172)
!3187 = !{i64 2155027572, i64 2155027592, i64 2155027655}
!3188 = !DILocation(line: 50, column: 1, scope: !3172)
!3189 = !{i64 2155027999, i64 2155028019, i64 2155028082}
!3190 = !DILocation(line: 54, column: 1, scope: !3172)
!3191 = !{i64 2155028438, i64 2155028458, i64 2155028521}
!3192 = !DILocation(line: 61, column: 1, scope: !3172)
!3193 = !{i64 2155028755, i64 2155028775, i64 2155028838}
!3194 = !DILocation(line: 63, column: 1, scope: !3172)
!3195 = !{i64 2155029135, i64 2155029155, i64 2155029218}
!3196 = !DILocation(line: 64, column: 1, scope: !3172)
!3197 = !{i64 2155029657, i64 2155029677, i64 2155029740}
!3198 = !DILocation(line: 65, column: 1, scope: !3172)
!3199 = !{i64 2155030155, i64 2155030175, i64 2155030238}
!3200 = !DILocation(line: 66, column: 1, scope: !3172)
!3201 = !{i64 2155030637, i64 2155030657, i64 2155030720}
!3202 = !DILocation(line: 67, column: 1, scope: !3172)
!3203 = !{i64 2155031144, i64 2155031164, i64 2155031227}
!3204 = !DILocation(line: 68, column: 1, scope: !3172)
!3205 = !{i64 2155031632, i64 2155031652, i64 2155031715}
!3206 = !DILocation(line: 70, column: 1, scope: !3172)
!3207 = !{i64 2155032100, i64 2155032120, i64 2155032183}
!3208 = !DILocation(line: 71, column: 1, scope: !3172)
!3209 = !{i64 2155036603, i64 2155036623, i64 2155036686}
!3210 = !DILocation(line: 72, column: 1, scope: !3172)
!3211 = !{i64 2155037061, i64 2155037081, i64 2155037144}
!3212 = !DILocation(line: 79, column: 1, scope: !3172)
!3213 = !{i64 2155037515, i64 2155037535, i64 2155037598}
!3214 = !DILocation(line: 80, column: 1, scope: !3172)
!3215 = !{i64 2155038026, i64 2155038046, i64 2155038109}
!3216 = !DILocation(line: 82, column: 1, scope: !3172)
!3217 = !{i64 2155038517, i64 2155038537, i64 2155038600}
!3218 = !DILocation(line: 97, column: 1, scope: !3172)
!3219 = !{i64 2155038854, i64 2155038874, i64 2155038937}
!3220 = !DILocation(line: 99, column: 1, scope: !3172)
!3221 = !{i64 2155039072, i64 2155039092, i64 2155039155}
!3222 = !DILocation(line: 102, column: 1, scope: !3172)
!3223 = !{i64 2155039329, i64 2155039349, i64 2155039412}
!3224 = !DILocation(line: 105, column: 1, scope: !3172)
!3225 = !{i64 2155039569, i64 2155039589, i64 2155039652}
!3226 = !DILocation(line: 115, column: 1, scope: !3172)
!3227 = !{i64 2155039908, i64 2155039928, i64 2155039991}
!3228 = !DILocation(line: 118, column: 1, scope: !3172)
!3229 = !{i64 2155040252, i64 2155040272, i64 2155040335}
!3230 = !DILocation(line: 32, column: 1, scope: !3231)
!3231 = !DILexicalBlockFile(scope: !3172, file: !3232, discriminator: 0)
!3232 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3233 = !{i64 2155040608, i64 2155040628, i64 2155040691}
!3234 = !DILocation(line: 33, column: 1, scope: !3231)
!3235 = !{i64 2155041120, i64 2155041140, i64 2155041203}
!3236 = !DILocation(line: 53, column: 1, scope: !3231)
!3237 = !{i64 2155041628, i64 2155041648, i64 2155041711}
!3238 = !DILocation(line: 54, column: 1, scope: !3231)
!3239 = !{i64 2155042046, i64 2155042066, i64 2155042129}
!3240 = !DILocation(line: 55, column: 1, scope: !3231)
!3241 = !{i64 2155042464, i64 2155042484, i64 2155042547}
!3242 = !DILocation(line: 56, column: 1, scope: !3231)
!3243 = !{i64 2155042882, i64 2155042902, i64 2155042965}
!3244 = !DILocation(line: 57, column: 1, scope: !3231)
!3245 = !{i64 2155043300, i64 2155043320, i64 2155043383}
!3246 = !DILocation(line: 58, column: 1, scope: !3231)
!3247 = !{i64 2155043718, i64 2155043738, i64 2155043801}
!3248 = !DILocation(line: 59, column: 1, scope: !3231)
!3249 = !{i64 2155044136, i64 2155044156, i64 2155044219}
!3250 = !DILocation(line: 60, column: 1, scope: !3231)
!3251 = !{i64 2155044560, i64 2155044580, i64 2155044643}
!3252 = !DILocation(line: 61, column: 1, scope: !3231)
!3253 = !{i64 2155044877, i64 2155044897, i64 2155044960}
!3254 = !DILocation(line: 70, column: 1, scope: !3231)
!3255 = !{i64 2155045106, i64 2155045126, i64 2155045189}
!3256 = !DILocation(line: 72, column: 1, scope: !3231)
!3257 = !{i64 2155045438, i64 2155045458, i64 2155045521}
!3258 = !DILocation(line: 73, column: 1, scope: !3231)
!3259 = !{i64 2155045888, i64 2155045908, i64 2155045971}
!3260 = !DILocation(line: 74, column: 1, scope: !3231)
!3261 = !{i64 2155050399, i64 2155050419, i64 2155050482}
!3262 = !DILocation(line: 75, column: 1, scope: !3231)
!3263 = !{i64 2155050849, i64 2155050869, i64 2155050932}
!3264 = !DILocation(line: 76, column: 1, scope: !3231)
!3265 = !{i64 2155051299, i64 2155051319, i64 2155051382}
!3266 = !DILocation(line: 77, column: 1, scope: !3231)
!3267 = !{i64 2155051749, i64 2155051769, i64 2155051832}
!3268 = !DILocation(line: 78, column: 1, scope: !3231)
!3269 = !{i64 2155052199, i64 2155052219, i64 2155052282}
!3270 = !DILocation(line: 79, column: 1, scope: !3231)
!3271 = !{i64 2155052649, i64 2155052669, i64 2155052732}
!3272 = !DILocation(line: 80, column: 1, scope: !3231)
!3273 = !{i64 2155053102, i64 2155053122, i64 2155053185}
!3274 = !DILocation(line: 84, column: 1, scope: !3231)
!3275 = !{i64 2155053434, i64 2155053454, i64 2155053517}
!3276 = !DILocation(line: 91, column: 1, scope: !3231)
!3277 = !{i64 2155053831, i64 2155053851, i64 2155053914}
!3278 = !DILocation(line: 93, column: 1, scope: !3231)
!3279 = !{i64 2155054198, i64 2155054218, i64 2155054281}
!3280 = !DILocation(line: 106, column: 1, scope: !3231)
!3281 = !{i64 2155054468, i64 2155054488, i64 2155054551}
!3282 = !DILocation(line: 11, column: 1, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3172, file: !3284, discriminator: 0)
!3284 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3285 = distinct !DISubprogram(name: "main", scope: !3286, file: !3286, line: 12, type: !3174, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !3287)
!3286 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3287 = !{!3288}
!3288 = !DILocalVariable(name: "s", scope: !3289, file: !3286, line: 19, type: !344)
!3289 = distinct !DILexicalBlock(scope: !3285, file: !3286, line: 18, column: 12)
!3290 = !DILocation(line: 14, column: 2, scope: !3285)
!3291 = !DILocation(line: 16, column: 2, scope: !3285)
!3292 = !DILocation(line: 18, column: 2, scope: !3285)
!3293 = !DILocation(line: 19, column: 13, scope: !3289)
!3294 = !DILocation(line: 0, scope: !3289)
!3295 = !DILocation(line: 21, column: 3, scope: !3289)
!3296 = !DILocation(line: 22, column: 37, scope: !3289)
!3297 = !DILocation(line: 22, column: 47, scope: !3289)
!3298 = !DILocation(line: 22, column: 35, scope: !3289)
!3299 = !DILocation(line: 22, column: 3, scope: !3289)
!3300 = distinct !{!3300, !3292, !3301}
!3301 = !DILocation(line: 23, column: 2, scope: !3285)
!3302 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3303)
!3303 = !{!3304}
!3304 = !DILocalVariable(name: "c", arg: 1, scope: !3302, file: !105, line: 45, type: !103)
!3305 = !DILocation(line: 0, scope: !3302)
!3306 = !DILocation(line: 50, column: 2, scope: !3302)
!3307 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3308, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3310)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{null, !106}
!3310 = !{!3311}
!3311 = !DILocalVariable(name: "fn", arg: 1, scope: !3307, file: !105, line: 63, type: !106)
!3312 = !DILocation(line: 0, scope: !3307)
!3313 = !DILocation(line: 65, column: 12, scope: !3307)
!3314 = !DILocation(line: 66, column: 1, scope: !3307)
!3315 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3316, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !317)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!102}
!3318 = !DILocation(line: 78, column: 9, scope: !3315)
!3319 = !DILocation(line: 78, column: 2, scope: !3315)
!3320 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3321, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3330)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{null, !144, !3323}
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3324, line: 99, baseType: !3325)
!3324 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3324, line: 40, baseType: !3326)
!3326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3327)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3328)
!3328 = !{!3329}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3327, file: !105, line: 79, baseType: !102, size: 32)
!3330 = !{!3331, !3332, !3333}
!3331 = !DILocalVariable(name: "fmt", arg: 1, scope: !3320, file: !105, line: 113, type: !144)
!3332 = !DILocalVariable(name: "ap", arg: 2, scope: !3320, file: !105, line: 113, type: !3323)
!3333 = !DILocalVariable(name: "ctx", scope: !3334, file: !105, line: 121, type: !3336)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !105, line: 120, column: 27)
!3335 = distinct !DILexicalBlock(scope: !3320, file: !105, line: 120, column: 6)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3337)
!3337 = !{!3338, !3339}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3336, file: !105, line: 85, baseType: !32, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3336, file: !105, line: 86, baseType: !3340, offset: 32)
!3340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2553)
!3341 = !DILocation(line: 0, scope: !3320)
!3342 = !DILocation(line: 148, column: 3, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3335, file: !105, line: 138, column: 9)
!3344 = !DILocation(line: 155, column: 1, scope: !3320)
!3345 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3346, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3348)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!103, !103, !102}
!3348 = !{!3349, !3350}
!3349 = !DILocalVariable(name: "c", arg: 1, scope: !3345, file: !105, line: 107, type: !103)
!3350 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3345, file: !105, line: 107, type: !102)
!3351 = !DILocation(line: 0, scope: !3345)
!3352 = !DILocation(line: 110, column: 9, scope: !3345)
!3353 = !DILocation(line: 110, column: 2, scope: !3345)
!3354 = distinct !DISubprogram(name: "cbvprintf", scope: !3355, file: !3355, line: 739, type: !3356, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3362)
!3355 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!103, !3358, !102, !144, !3323}
!3358 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3355, line: 297, baseType: !3359)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 32)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!103, null}
!3362 = !{!3363, !3364, !3365, !3366}
!3363 = !DILocalVariable(name: "out", arg: 1, scope: !3354, file: !3355, line: 739, type: !3358)
!3364 = !DILocalVariable(name: "ctx", arg: 2, scope: !3354, file: !3355, line: 739, type: !102)
!3365 = !DILocalVariable(name: "format", arg: 3, scope: !3354, file: !3355, line: 739, type: !144)
!3366 = !DILocalVariable(name: "ap", arg: 4, scope: !3354, file: !3355, line: 739, type: !3323)
!3367 = !DILocation(line: 0, scope: !3354)
!3368 = !DILocation(line: 741, column: 9, scope: !3354)
!3369 = !DILocation(line: 741, column: 2, scope: !3354)
!3370 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3371, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3373)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{null, !344, !204}
!3373 = !{!3374, !3375, !3376}
!3374 = !DILocalVariable(name: "c", arg: 1, scope: !3370, file: !105, line: 157, type: !344)
!3375 = !DILocalVariable(name: "n", arg: 2, scope: !3370, file: !105, line: 157, type: !204)
!3376 = !DILocalVariable(name: "i", scope: !3370, file: !105, line: 159, type: !204)
!3377 = !DILocation(line: 0, scope: !3370)
!3378 = !DILocation(line: 164, column: 16, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3380, file: !105, line: 164, column: 2)
!3380 = distinct !DILexicalBlock(scope: !3370, file: !105, line: 164, column: 2)
!3381 = !DILocation(line: 164, column: 2, scope: !3380)
!3382 = !DILocation(line: 165, column: 3, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3379, file: !105, line: 164, column: 26)
!3384 = !DILocation(line: 165, column: 13, scope: !3383)
!3385 = !DILocation(line: 164, column: 22, scope: !3379)
!3386 = distinct !{!3386, !3381, !3387}
!3387 = !DILocation(line: 166, column: 2, scope: !3380)
!3388 = !DILocation(line: 171, column: 1, scope: !3370)
!3389 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3390, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3392)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !144, null}
!3392 = !{!3393, !3394}
!3393 = !DILocalVariable(name: "fmt", arg: 1, scope: !3389, file: !105, line: 203, type: !144)
!3394 = !DILocalVariable(name: "ap", scope: !3389, file: !105, line: 205, type: !3323)
!3395 = !DILocation(line: 0, scope: !3389)
!3396 = !DILocation(line: 205, column: 2, scope: !3389)
!3397 = !DILocation(line: 205, column: 10, scope: !3389)
!3398 = !DILocation(line: 207, column: 2, scope: !3389)
!3399 = !DILocation(line: 209, column: 2, scope: !3389)
!3400 = !DILocation(line: 211, column: 2, scope: !3389)
!3401 = !DILocation(line: 212, column: 1, scope: !3389)
!3402 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3403, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3405)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!103, !344, !204, !144, null}
!3405 = !{!3406, !3407, !3408, !3409, !3410}
!3406 = !DILocalVariable(name: "str", arg: 1, scope: !3402, file: !105, line: 239, type: !344)
!3407 = !DILocalVariable(name: "size", arg: 2, scope: !3402, file: !105, line: 239, type: !204)
!3408 = !DILocalVariable(name: "fmt", arg: 3, scope: !3402, file: !105, line: 239, type: !144)
!3409 = !DILocalVariable(name: "ap", scope: !3402, file: !105, line: 241, type: !3323)
!3410 = !DILocalVariable(name: "ret", scope: !3402, file: !105, line: 242, type: !103)
!3411 = !DILocation(line: 0, scope: !3402)
!3412 = !DILocation(line: 241, column: 2, scope: !3402)
!3413 = !DILocation(line: 241, column: 10, scope: !3402)
!3414 = !DILocation(line: 244, column: 2, scope: !3402)
!3415 = !DILocation(line: 245, column: 8, scope: !3402)
!3416 = !DILocation(line: 246, column: 2, scope: !3402)
!3417 = !DILocation(line: 249, column: 1, scope: !3402)
!3418 = !DILocation(line: 248, column: 2, scope: !3402)
!3419 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3420, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3422)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!103, !344, !204, !144, !3323}
!3422 = !{!3423, !3424, !3425, !3426, !3427}
!3423 = !DILocalVariable(name: "str", arg: 1, scope: !3419, file: !105, line: 251, type: !344)
!3424 = !DILocalVariable(name: "size", arg: 2, scope: !3419, file: !105, line: 251, type: !204)
!3425 = !DILocalVariable(name: "fmt", arg: 3, scope: !3419, file: !105, line: 251, type: !144)
!3426 = !DILocalVariable(name: "ap", arg: 4, scope: !3419, file: !105, line: 251, type: !3323)
!3427 = !DILocalVariable(name: "ctx", scope: !3419, file: !105, line: 253, type: !3428)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3429)
!3429 = !{!3430, !3431, !3432}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3428, file: !105, line: 218, baseType: !344, size: 32)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3428, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3428, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3433 = !DILocation(line: 0, scope: !3419)
!3434 = !DILocation(line: 253, column: 2, scope: !3419)
!3435 = !DILocation(line: 253, column: 21, scope: !3419)
!3436 = !DILocation(line: 253, column: 27, scope: !3419)
!3437 = !DILocation(line: 255, column: 2, scope: !3419)
!3438 = !DILocation(line: 257, column: 10, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3419, file: !105, line: 257, column: 6)
!3440 = !DILocation(line: 257, column: 22, scope: !3439)
!3441 = !DILocation(line: 257, column: 16, scope: !3439)
!3442 = !DILocation(line: 257, column: 6, scope: !3419)
!3443 = !DILocation(line: 258, column: 3, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3439, file: !105, line: 257, column: 27)
!3445 = !DILocation(line: 258, column: 18, scope: !3444)
!3446 = !DILocation(line: 259, column: 2, scope: !3444)
!3447 = !DILocation(line: 262, column: 1, scope: !3419)
!3448 = !DILocation(line: 261, column: 2, scope: !3419)
!3449 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3450, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3453)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!103, !103, !3452}
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 32)
!3453 = !{!3454, !3455}
!3454 = !DILocalVariable(name: "c", arg: 1, scope: !3449, file: !105, line: 223, type: !103)
!3455 = !DILocalVariable(name: "ctx", arg: 2, scope: !3449, file: !105, line: 223, type: !3452)
!3456 = !DILocation(line: 0, scope: !3449)
!3457 = !DILocation(line: 225, column: 11, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3449, file: !105, line: 225, column: 6)
!3459 = !DILocation(line: 225, column: 15, scope: !3458)
!3460 = !DILocation(line: 0, scope: !3458)
!3461 = !DILocation(line: 225, column: 23, scope: !3458)
!3462 = !DILocation(line: 225, column: 45, scope: !3458)
!3463 = !DILocation(line: 225, column: 37, scope: !3458)
!3464 = !DILocation(line: 225, column: 6, scope: !3449)
!3465 = !DILocation(line: 226, column: 8, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3458, file: !105, line: 225, column: 50)
!3467 = !DILocation(line: 226, column: 13, scope: !3466)
!3468 = !DILocation(line: 227, column: 3, scope: !3466)
!3469 = !DILocation(line: 230, column: 29, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3449, file: !105, line: 230, column: 6)
!3471 = !DILocation(line: 230, column: 17, scope: !3470)
!3472 = !DILocation(line: 230, column: 6, scope: !3449)
!3473 = !DILocation(line: 231, column: 22, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3470, file: !105, line: 230, column: 34)
!3475 = !DILocation(line: 231, column: 3, scope: !3474)
!3476 = !DILocation(line: 231, column: 26, scope: !3474)
!3477 = !DILocation(line: 232, column: 2, scope: !3474)
!3478 = !DILocation(line: 233, column: 28, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3470, file: !105, line: 232, column: 9)
!3480 = !DILocation(line: 233, column: 22, scope: !3479)
!3481 = !DILocation(line: 233, column: 3, scope: !3479)
!3482 = !DILocation(line: 233, column: 26, scope: !3479)
!3483 = !DILocation(line: 237, column: 1, scope: !3449)
!3484 = distinct !DISubprogram(name: "z_thread_entry", scope: !3485, file: !3485, line: 30, type: !3486, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !3493)
!3485 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3486 = !DISubroutineType(types: !3487)
!3487 = !{null, !3488, !102, !102, !102}
!3488 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3489, line: 46, baseType: !3490)
!3489 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 32)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{null, !102, !102, !102}
!3493 = !{!3494, !3495, !3496, !3497}
!3494 = !DILocalVariable(name: "entry", arg: 1, scope: !3484, file: !3485, line: 30, type: !3488)
!3495 = !DILocalVariable(name: "p1", arg: 2, scope: !3484, file: !3485, line: 31, type: !102)
!3496 = !DILocalVariable(name: "p2", arg: 3, scope: !3484, file: !3485, line: 31, type: !102)
!3497 = !DILocalVariable(name: "p3", arg: 4, scope: !3484, file: !3485, line: 31, type: !102)
!3498 = !DILocation(line: 0, scope: !3484)
!3499 = !DILocation(line: 36, column: 2, scope: !3484)
!3500 = !DILocation(line: 38, column: 17, scope: !3484)
!3501 = !DILocation(line: 38, column: 2, scope: !3484)
!3502 = !DILocation(line: 45, column: 2, scope: !3484)
!3503 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !3504, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !317)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!3506}
!3506 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !3507)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 32)
!3508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !3509)
!3509 = !{!3510, !3568, !3580, !3581, !3582, !3583, !3589, !3602}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3508, file: !379, line: 247, baseType: !3511, size: 384)
!3511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !3512)
!3512 = !{!3513, !3537, !3544, !3545, !3546, !3555, !3556, !3557}
!3513 = !DIDerivedType(tag: DW_TAG_member, scope: !3511, file: !379, line: 60, baseType: !3514, size: 64)
!3514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3511, file: !379, line: 60, size: 64, elements: !3515)
!3515 = !{!3516, !3531}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3514, file: !379, line: 61, baseType: !3517, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !3518)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !3519)
!3519 = !{!3520, !3526}
!3520 = !DIDerivedType(tag: DW_TAG_member, scope: !3518, file: !325, line: 38, baseType: !3521, size: 32)
!3521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3518, file: !325, line: 38, size: 32, elements: !3522)
!3522 = !{!3523, !3525}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3521, file: !325, line: 39, baseType: !3524, size: 32)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3521, file: !325, line: 40, baseType: !3524, size: 32)
!3526 = !DIDerivedType(tag: DW_TAG_member, scope: !3518, file: !325, line: 42, baseType: !3527, size: 32, offset: 32)
!3527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3518, file: !325, line: 42, size: 32, elements: !3528)
!3528 = !{!3529, !3530}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3527, file: !325, line: 43, baseType: !3524, size: 32)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3527, file: !325, line: 44, baseType: !3524, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3514, file: !379, line: 62, baseType: !3532, size: 64)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !3533)
!3533 = !{!3534}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3532, file: !404, line: 50, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3536, size: 64, elements: !363)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3511, file: !379, line: 68, baseType: !3538, size: 32, offset: 64)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 32)
!3539 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !3540)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !3541)
!3541 = !{!3542}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3540, file: !320, line: 232, baseType: !3543, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3518)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3511, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3511, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!3546 = !DIDerivedType(tag: DW_TAG_member, scope: !3511, file: !379, line: 90, baseType: !3547, size: 16, offset: 112)
!3547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3511, file: !379, line: 90, size: 16, elements: !3548)
!3548 = !{!3549, !3554}
!3549 = !DIDerivedType(tag: DW_TAG_member, scope: !3547, file: !379, line: 91, baseType: !3550, size: 16)
!3550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3547, file: !379, line: 91, size: 16, elements: !3551)
!3551 = !{!3552, !3553}
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3550, file: !379, line: 96, baseType: !425, size: 8)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3550, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3547, file: !379, line: 100, baseType: !429, size: 16)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3511, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3511, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3511, file: !379, line: 131, baseType: !3558, size: 192, offset: 192)
!3558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !3559)
!3559 = !{!3560, !3561, !3567}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3558, file: !320, line: 245, baseType: !3517, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3558, file: !320, line: 246, baseType: !3562, size: 32, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !3563)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 32)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{null, !3566}
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 32)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3558, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3508, file: !379, line: 250, baseType: !3569, size: 288, offset: 384)
!3569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !3570)
!3570 = !{!3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3569, file: !446, line: 26, baseType: !121, size: 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3569, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3569, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3569, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3569, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3569, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3569, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3569, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3569, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3508, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3508, file: !379, line: 256, baseType: !3539, size: 64, offset: 704)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3508, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3508, file: !379, line: 300, baseType: !3584, size: 96, offset: 800)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !3585)
!3585 = !{!3586, !3587, !3588}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3584, file: !379, line: 153, baseType: !22, size: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3584, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3584, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3508, file: !379, line: 325, baseType: !3590, size: 32, offset: 896)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 32)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !3592)
!3592 = !{!3593, !3599, !3600}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3591, file: !296, line: 5074, baseType: !3594, size: 96)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3595)
!3595 = !{!3596, !3597, !3598}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3594, file: !472, line: 57, baseType: !475, size: 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3594, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3594, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3591, file: !296, line: 5075, baseType: !3539, size: 64, offset: 96)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3591, file: !296, line: 5076, baseType: !3601, offset: 160)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3508, file: !379, line: 343, baseType: !3603, size: 64, offset: 928)
!3603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !3604)
!3604 = !{!3605, !3606}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3603, file: !446, line: 63, baseType: !121, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3603, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!3607 = !DILocation(line: 535, column: 9, scope: !3503)
!3608 = !DILocation(line: 535, column: 2, scope: !3503)
!3609 = distinct !DISubprogram(name: "k_thread_abort", scope: !3610, file: !3610, line: 188, type: !3611, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !3613)
!3610 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !3506}
!3613 = !{!3614}
!3614 = !DILocalVariable(name: "thread", arg: 1, scope: !3609, file: !3610, line: 188, type: !3506)
!3615 = !DILocation(line: 0, scope: !3609)
!3616 = !DILocation(line: 197, column: 2, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3609, file: !3610, line: 197, column: 2)
!3618 = !{i64 2154737980}
!3619 = !DILocation(line: 198, column: 2, scope: !3609)
!3620 = !DILocation(line: 199, column: 1, scope: !3609)
!3621 = distinct !DISubprogram(name: "z_current_get", scope: !3610, file: !3610, line: 173, type: !3504, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !317)
!3622 = !DILocation(line: 180, column: 2, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3621, file: !3610, line: 180, column: 2)
!3624 = !{i64 2154737912}
!3625 = !DILocation(line: 181, column: 9, scope: !3621)
!3626 = !DILocation(line: 181, column: 2, scope: !3621)
!3627 = distinct !DISubprogram(name: "sys_heap_free", scope: !3628, file: !3628, line: 163, type: !3629, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3637)
!3628 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3629 = !DISubroutineType(types: !3630)
!3630 = !{null, !3631, !102}
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 32)
!3632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !3633)
!3633 = !{!3634, !3635, !3636}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3632, file: !472, line: 57, baseType: !2540, size: 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3632, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3632, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!3637 = !{!3638, !3639, !3640, !3641}
!3638 = !DILocalVariable(name: "heap", arg: 1, scope: !3627, file: !3628, line: 163, type: !3631)
!3639 = !DILocalVariable(name: "mem", arg: 2, scope: !3627, file: !3628, line: 163, type: !102)
!3640 = !DILocalVariable(name: "h", scope: !3627, file: !3628, line: 168, type: !2540)
!3641 = !DILocalVariable(name: "c", scope: !3627, file: !3628, line: 169, type: !2545)
!3642 = !DILocation(line: 0, scope: !3627)
!3643 = !DILocation(line: 165, column: 10, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3627, file: !3628, line: 165, column: 6)
!3645 = !DILocation(line: 165, column: 6, scope: !3627)
!3646 = !DILocation(line: 168, column: 27, scope: !3627)
!3647 = !DILocation(line: 169, column: 16, scope: !3627)
!3648 = !{i32 0, i32 536870912}
!3649 = !DILocation(line: 187, column: 2, scope: !3627)
!3650 = !DILocation(line: 197, column: 2, scope: !3627)
!3651 = !DILocation(line: 198, column: 1, scope: !3627)
!3652 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3628, file: !3628, line: 157, type: !3653, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!2545, !2540, !102}
!3655 = !{!3656, !3657, !3658, !3659}
!3656 = !DILocalVariable(name: "h", arg: 1, scope: !3652, file: !3628, line: 157, type: !2540)
!3657 = !DILocalVariable(name: "p", arg: 2, scope: !3652, file: !3628, line: 157, type: !102)
!3658 = !DILocalVariable(name: "mem", scope: !3652, file: !3628, line: 159, type: !267)
!3659 = !DILocalVariable(name: "base", scope: !3652, file: !3628, line: 159, type: !267)
!3660 = !DILocation(line: 0, scope: !3652)
!3661 = !DILocation(line: 159, column: 39, scope: !3652)
!3662 = !DILocation(line: 160, column: 14, scope: !3652)
!3663 = !DILocation(line: 160, column: 38, scope: !3652)
!3664 = !DILocation(line: 160, column: 46, scope: !3652)
!3665 = !DILocation(line: 160, column: 2, scope: !3652)
!3666 = distinct !DISubprogram(name: "set_chunk_used", scope: !2527, file: !2527, line: 147, type: !3667, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3669)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{null, !2540, !2545, !157}
!3669 = !{!3670, !3671, !3672, !3673, !3674}
!3670 = !DILocalVariable(name: "h", arg: 1, scope: !3666, file: !2527, line: 147, type: !2540)
!3671 = !DILocalVariable(name: "c", arg: 2, scope: !3666, file: !2527, line: 147, type: !2545)
!3672 = !DILocalVariable(name: "used", arg: 3, scope: !3666, file: !2527, line: 147, type: !157)
!3673 = !DILocalVariable(name: "buf", scope: !3666, file: !2527, line: 149, type: !2534)
!3674 = !DILocalVariable(name: "cmem", scope: !3666, file: !2527, line: 150, type: !102)
!3675 = !DILocation(line: 0, scope: !3666)
!3676 = !DILocation(line: 149, column: 22, scope: !3666)
!3677 = !DILocation(line: 0, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !2527, line: 159, column: 7)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !2527, line: 158, column: 9)
!3680 = distinct !DILexicalBlock(scope: !3666, file: !2527, line: 152, column: 6)
!3681 = !DILocation(line: 159, column: 7, scope: !3679)
!3682 = !DILocation(line: 165, column: 1, scope: !3666)
!3683 = distinct !DISubprogram(name: "free_chunk", scope: !3628, file: !3628, line: 133, type: !3684, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3686)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{null, !2540, !2545}
!3686 = !{!3687, !3688}
!3687 = !DILocalVariable(name: "h", arg: 1, scope: !3683, file: !3628, line: 133, type: !2540)
!3688 = !DILocalVariable(name: "c", arg: 2, scope: !3683, file: !3628, line: 133, type: !2545)
!3689 = !DILocation(line: 0, scope: !3683)
!3690 = !DILocation(line: 136, column: 21, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3683, file: !3628, line: 136, column: 6)
!3692 = !DILocation(line: 136, column: 7, scope: !3691)
!3693 = !DILocation(line: 136, column: 6, scope: !3683)
!3694 = !DILocation(line: 137, column: 3, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !3628, line: 136, column: 41)
!3696 = !DILocation(line: 138, column: 22, scope: !3695)
!3697 = !DILocation(line: 138, column: 3, scope: !3695)
!3698 = !DILocation(line: 139, column: 2, scope: !3695)
!3699 = !DILocation(line: 142, column: 21, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3683, file: !3628, line: 142, column: 6)
!3701 = !{i32 -65535, i32 536903678}
!3702 = !DILocation(line: 142, column: 7, scope: !3700)
!3703 = !DILocation(line: 142, column: 6, scope: !3683)
!3704 = !DILocation(line: 143, column: 3, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3700, file: !3628, line: 142, column: 40)
!3706 = !DILocation(line: 144, column: 19, scope: !3705)
!3707 = !DILocation(line: 144, column: 3, scope: !3705)
!3708 = !DILocation(line: 145, column: 7, scope: !3705)
!3709 = !DILocation(line: 146, column: 2, scope: !3705)
!3710 = !DILocation(line: 148, column: 2, scope: !3683)
!3711 = !DILocation(line: 149, column: 1, scope: !3683)
!3712 = distinct !DISubprogram(name: "right_chunk", scope: !2527, file: !2527, line: 204, type: !3713, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3715)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!2545, !2540, !2545}
!3715 = !{!3716, !3717}
!3716 = !DILocalVariable(name: "h", arg: 1, scope: !3712, file: !2527, line: 204, type: !2540)
!3717 = !DILocalVariable(name: "c", arg: 2, scope: !3712, file: !2527, line: 204, type: !2545)
!3718 = !DILocation(line: 0, scope: !3712)
!3719 = !DILocation(line: 206, column: 13, scope: !3712)
!3720 = !DILocation(line: 206, column: 11, scope: !3712)
!3721 = !DILocation(line: 206, column: 2, scope: !3712)
!3722 = distinct !DISubprogram(name: "chunk_used", scope: !2527, file: !2527, line: 137, type: !3723, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3725)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!157, !2540, !2545}
!3725 = !{!3726, !3727}
!3726 = !DILocalVariable(name: "h", arg: 1, scope: !3722, file: !2527, line: 137, type: !2540)
!3727 = !DILocalVariable(name: "c", arg: 2, scope: !3722, file: !2527, line: 137, type: !2545)
!3728 = !DILocation(line: 0, scope: !3722)
!3729 = !DILocation(line: 139, column: 9, scope: !3722)
!3730 = !DILocation(line: 139, column: 42, scope: !3722)
!3731 = !DILocation(line: 139, column: 2, scope: !3722)
!3732 = distinct !DISubprogram(name: "free_list_remove", scope: !3628, file: !3628, line: 60, type: !3684, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3733)
!3733 = !{!3734, !3735, !3736}
!3734 = !DILocalVariable(name: "h", arg: 1, scope: !3732, file: !3628, line: 60, type: !2540)
!3735 = !DILocalVariable(name: "c", arg: 2, scope: !3732, file: !3628, line: 60, type: !2545)
!3736 = !DILocalVariable(name: "bidx", scope: !3737, file: !3628, line: 63, type: !103)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !3628, line: 62, column: 31)
!3738 = distinct !DILexicalBlock(scope: !3732, file: !3628, line: 62, column: 6)
!3739 = !DILocation(line: 0, scope: !3732)
!3740 = !DILocation(line: 63, column: 28, scope: !3737)
!3741 = !{i32 0, i32 32768}
!3742 = !DILocation(line: 63, column: 14, scope: !3737)
!3743 = !DILocation(line: 0, scope: !3737)
!3744 = !DILocation(line: 64, column: 3, scope: !3737)
!3745 = !DILocation(line: 66, column: 1, scope: !3732)
!3746 = distinct !DISubprogram(name: "merge_chunks", scope: !3628, file: !3628, line: 125, type: !3747, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3749)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{null, !2540, !2545, !2545}
!3749 = !{!3750, !3751, !3752, !3753}
!3750 = !DILocalVariable(name: "h", arg: 1, scope: !3746, file: !3628, line: 125, type: !2540)
!3751 = !DILocalVariable(name: "lc", arg: 2, scope: !3746, file: !3628, line: 125, type: !2545)
!3752 = !DILocalVariable(name: "rc", arg: 3, scope: !3746, file: !3628, line: 125, type: !2545)
!3753 = !DILocalVariable(name: "newsz", scope: !3746, file: !3628, line: 127, type: !3754)
!3754 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2527, line: 62, baseType: !121)
!3755 = !DILocation(line: 0, scope: !3746)
!3756 = !DILocation(line: 127, column: 20, scope: !3746)
!3757 = !DILocation(line: 127, column: 40, scope: !3746)
!3758 = !DILocation(line: 127, column: 38, scope: !3746)
!3759 = !DILocation(line: 129, column: 2, scope: !3746)
!3760 = !DILocation(line: 130, column: 25, scope: !3746)
!3761 = !DILocation(line: 130, column: 2, scope: !3746)
!3762 = !DILocation(line: 131, column: 1, scope: !3746)
!3763 = distinct !DISubprogram(name: "left_chunk", scope: !2527, file: !2527, line: 199, type: !3713, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3764)
!3764 = !{!3765, !3766}
!3765 = !DILocalVariable(name: "h", arg: 1, scope: !3763, file: !2527, line: 199, type: !2540)
!3766 = !DILocalVariable(name: "c", arg: 2, scope: !3763, file: !2527, line: 199, type: !2545)
!3767 = !DILocation(line: 0, scope: !3763)
!3768 = !DILocation(line: 201, column: 13, scope: !3763)
!3769 = !DILocation(line: 201, column: 11, scope: !3763)
!3770 = !DILocation(line: 201, column: 2, scope: !3763)
!3771 = distinct !DISubprogram(name: "free_list_add", scope: !3628, file: !3628, line: 98, type: !3684, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3772)
!3772 = !{!3773, !3774, !3775}
!3773 = !DILocalVariable(name: "h", arg: 1, scope: !3771, file: !3628, line: 98, type: !2540)
!3774 = !DILocalVariable(name: "c", arg: 2, scope: !3771, file: !3628, line: 98, type: !2545)
!3775 = !DILocalVariable(name: "bidx", scope: !3776, file: !3628, line: 101, type: !103)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !3628, line: 100, column: 31)
!3777 = distinct !DILexicalBlock(scope: !3771, file: !3628, line: 100, column: 6)
!3778 = !DILocation(line: 0, scope: !3771)
!3779 = !DILocation(line: 101, column: 28, scope: !3776)
!3780 = !DILocation(line: 101, column: 14, scope: !3776)
!3781 = !DILocation(line: 0, scope: !3776)
!3782 = !DILocation(line: 102, column: 3, scope: !3776)
!3783 = !DILocation(line: 104, column: 1, scope: !3771)
!3784 = distinct !DISubprogram(name: "chunk_size", scope: !2527, file: !2527, line: 142, type: !3785, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3787)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!3754, !2540, !2545}
!3787 = !{!3788, !3789}
!3788 = !DILocalVariable(name: "h", arg: 1, scope: !3784, file: !2527, line: 142, type: !2540)
!3789 = !DILocalVariable(name: "c", arg: 2, scope: !3784, file: !2527, line: 142, type: !2545)
!3790 = !DILocation(line: 0, scope: !3784)
!3791 = !DILocation(line: 144, column: 9, scope: !3784)
!3792 = !DILocation(line: 144, column: 42, scope: !3784)
!3793 = !DILocation(line: 144, column: 2, scope: !3784)
!3794 = distinct !DISubprogram(name: "bucket_idx", scope: !2527, file: !2527, line: 250, type: !3795, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3797)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{!103, !2540, !3754}
!3797 = !{!3798, !3799, !3800}
!3798 = !DILocalVariable(name: "h", arg: 1, scope: !3794, file: !2527, line: 250, type: !2540)
!3799 = !DILocalVariable(name: "sz", arg: 2, scope: !3794, file: !2527, line: 250, type: !3754)
!3800 = !DILocalVariable(name: "usable_sz", scope: !3794, file: !2527, line: 252, type: !32)
!3801 = !DILocation(line: 0, scope: !3794)
!3802 = !DILocation(line: 252, column: 32, scope: !3794)
!3803 = !DILocation(line: 252, column: 30, scope: !3794)
!3804 = !DILocation(line: 252, column: 50, scope: !3794)
!3805 = !DILocation(line: 253, column: 14, scope: !3794)
!3806 = !{i32 0, i32 33}
!3807 = !DILocation(line: 253, column: 12, scope: !3794)
!3808 = !DILocation(line: 253, column: 2, scope: !3794)
!3809 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3628, file: !3628, line: 68, type: !3810, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3812)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{null, !2540, !2545, !103}
!3812 = !{!3813, !3814, !3815, !3816, !3818, !3821}
!3813 = !DILocalVariable(name: "h", arg: 1, scope: !3809, file: !3628, line: 68, type: !2540)
!3814 = !DILocalVariable(name: "c", arg: 2, scope: !3809, file: !3628, line: 68, type: !2545)
!3815 = !DILocalVariable(name: "bidx", arg: 3, scope: !3809, file: !3628, line: 68, type: !103)
!3816 = !DILocalVariable(name: "b", scope: !3809, file: !3628, line: 70, type: !3817)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!3818 = !DILocalVariable(name: "second", scope: !3819, file: !3628, line: 84, type: !2545)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3628, line: 80, column: 9)
!3820 = distinct !DILexicalBlock(scope: !3809, file: !3628, line: 72, column: 6)
!3821 = !DILocalVariable(name: "first", scope: !3819, file: !3628, line: 85, type: !2545)
!3822 = !DILocation(line: 0, scope: !3809)
!3823 = !DILocation(line: 72, column: 9, scope: !3820)
!3824 = !DILocation(line: 72, column: 14, scope: !3820)
!3825 = !DILocation(line: 72, column: 6, scope: !3809)
!3826 = !DILocation(line: 76, column: 23, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3820, file: !3628, line: 72, column: 21)
!3828 = !DILocation(line: 76, column: 6, scope: !3827)
!3829 = !DILocation(line: 76, column: 20, scope: !3827)
!3830 = !DILocation(line: 77, column: 11, scope: !3827)
!3831 = !DILocation(line: 78, column: 3, scope: !3827)
!3832 = !DILocation(line: 79, column: 3, scope: !3827)
!3833 = !DILocation(line: 80, column: 2, scope: !3827)
!3834 = !DILocation(line: 0, scope: !3819)
!3835 = !DILocation(line: 85, column: 21, scope: !3819)
!3836 = !{i32 0, i32 65536}
!3837 = !DILocation(line: 87, column: 3, scope: !3819)
!3838 = !DILocation(line: 88, column: 3, scope: !3819)
!3839 = !DILocation(line: 89, column: 3, scope: !3819)
!3840 = !DILocation(line: 90, column: 3, scope: !3819)
!3841 = !DILocation(line: 96, column: 1, scope: !3809)
!3842 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2527, file: !2527, line: 187, type: !3747, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3843)
!3843 = !{!3844, !3845, !3846}
!3844 = !DILocalVariable(name: "h", arg: 1, scope: !3842, file: !2527, line: 187, type: !2540)
!3845 = !DILocalVariable(name: "c", arg: 2, scope: !3842, file: !2527, line: 187, type: !2545)
!3846 = !DILocalVariable(name: "prev", arg: 3, scope: !3842, file: !2527, line: 188, type: !2545)
!3847 = !DILocation(line: 0, scope: !3842)
!3848 = !DILocation(line: 190, column: 2, scope: !3842)
!3849 = !DILocation(line: 191, column: 1, scope: !3842)
!3850 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2527, file: !2527, line: 193, type: !3747, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3851)
!3851 = !{!3852, !3853, !3854}
!3852 = !DILocalVariable(name: "h", arg: 1, scope: !3850, file: !2527, line: 193, type: !2540)
!3853 = !DILocalVariable(name: "c", arg: 2, scope: !3850, file: !2527, line: 193, type: !2545)
!3854 = !DILocalVariable(name: "next", arg: 3, scope: !3850, file: !2527, line: 194, type: !2545)
!3855 = !DILocation(line: 0, scope: !3850)
!3856 = !DILocation(line: 196, column: 2, scope: !3850)
!3857 = !DILocation(line: 197, column: 1, scope: !3850)
!3858 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2527, file: !2527, line: 177, type: !3713, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3859)
!3859 = !{!3860, !3861}
!3860 = !DILocalVariable(name: "h", arg: 1, scope: !3858, file: !2527, line: 177, type: !2540)
!3861 = !DILocalVariable(name: "c", arg: 2, scope: !3858, file: !2527, line: 177, type: !2545)
!3862 = !DILocation(line: 0, scope: !3858)
!3863 = !DILocation(line: 179, column: 9, scope: !3858)
!3864 = !DILocation(line: 179, column: 2, scope: !3858)
!3865 = distinct !DISubprogram(name: "chunk_field", scope: !2527, file: !2527, line: 107, type: !3866, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3868)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!2545, !2540, !2545, !2526}
!3868 = !{!3869, !3870, !3871, !3872, !3873}
!3869 = !DILocalVariable(name: "h", arg: 1, scope: !3865, file: !2527, line: 107, type: !2540)
!3870 = !DILocalVariable(name: "c", arg: 2, scope: !3865, file: !2527, line: 107, type: !2545)
!3871 = !DILocalVariable(name: "f", arg: 3, scope: !3865, file: !2527, line: 108, type: !2526)
!3872 = !DILocalVariable(name: "buf", scope: !3865, file: !2527, line: 110, type: !2534)
!3873 = !DILocalVariable(name: "cmem", scope: !3865, file: !2527, line: 111, type: !102)
!3874 = !DILocation(line: 0, scope: !3865)
!3875 = !DILocation(line: 110, column: 22, scope: !3865)
!3876 = !DILocation(line: 111, column: 15, scope: !3865)
!3877 = !DILocation(line: 116, column: 11, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !2527, line: 115, column: 9)
!3879 = distinct !DILexicalBlock(scope: !3865, file: !2527, line: 113, column: 6)
!3880 = !DILocation(line: 116, column: 10, scope: !3878)
!3881 = !DILocation(line: 118, column: 1, scope: !3865)
!3882 = distinct !DISubprogram(name: "chunk_buf", scope: !2527, file: !2527, line: 101, type: !3883, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3885)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!2534, !2540}
!3885 = !{!3886}
!3886 = !DILocalVariable(name: "h", arg: 1, scope: !3882, file: !2527, line: 101, type: !2540)
!3887 = !DILocation(line: 0, scope: !3882)
!3888 = !DILocation(line: 104, column: 9, scope: !3882)
!3889 = !DILocation(line: 104, column: 2, scope: !3882)
!3890 = distinct !DISubprogram(name: "chunk_set", scope: !2527, file: !2527, line: 120, type: !3891, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3893)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !2540, !2545, !2526, !2545}
!3893 = !{!3894, !3895, !3896, !3897, !3898, !3899}
!3894 = !DILocalVariable(name: "h", arg: 1, scope: !3890, file: !2527, line: 120, type: !2540)
!3895 = !DILocalVariable(name: "c", arg: 2, scope: !3890, file: !2527, line: 120, type: !2545)
!3896 = !DILocalVariable(name: "f", arg: 3, scope: !3890, file: !2527, line: 121, type: !2526)
!3897 = !DILocalVariable(name: "val", arg: 4, scope: !3890, file: !2527, line: 121, type: !2545)
!3898 = !DILocalVariable(name: "buf", scope: !3890, file: !2527, line: 125, type: !2534)
!3899 = !DILocalVariable(name: "cmem", scope: !3890, file: !2527, line: 126, type: !102)
!3900 = !DILocation(line: 0, scope: !3890)
!3901 = !DILocation(line: 125, column: 22, scope: !3890)
!3902 = !DILocation(line: 126, column: 15, scope: !3890)
!3903 = !DILocation(line: 133, column: 27, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !2527, line: 131, column: 9)
!3905 = distinct !DILexicalBlock(scope: !3890, file: !2527, line: 128, column: 6)
!3906 = !DILocation(line: 133, column: 4, scope: !3904)
!3907 = !DILocation(line: 133, column: 3, scope: !3904)
!3908 = !DILocation(line: 133, column: 25, scope: !3904)
!3909 = !DILocation(line: 135, column: 1, scope: !3890)
!3910 = distinct !DISubprogram(name: "min_chunk_size", scope: !2527, file: !2527, line: 240, type: !3911, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3913)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!3754, !2540}
!3913 = !{!3914}
!3914 = !DILocalVariable(name: "h", arg: 1, scope: !3910, file: !2527, line: 240, type: !2540)
!3915 = !DILocation(line: 0, scope: !3910)
!3916 = !DILocation(line: 242, column: 9, scope: !3910)
!3917 = !DILocation(line: 242, column: 2, scope: !3910)
!3918 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2527, file: !2527, line: 235, type: !3919, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3921)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{!3754, !2540, !204}
!3921 = !{!3922, !3923}
!3922 = !DILocalVariable(name: "h", arg: 1, scope: !3918, file: !2527, line: 235, type: !2540)
!3923 = !DILocalVariable(name: "bytes", arg: 2, scope: !3918, file: !2527, line: 235, type: !204)
!3924 = !DILocation(line: 0, scope: !3918)
!3925 = !DILocation(line: 237, column: 39, scope: !3918)
!3926 = !DILocation(line: 237, column: 9, scope: !3918)
!3927 = !DILocation(line: 237, column: 2, scope: !3918)
!3928 = distinct !DISubprogram(name: "chunksz", scope: !2527, file: !2527, line: 230, type: !3929, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3931)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!3754, !204}
!3931 = !{!3932}
!3932 = !DILocalVariable(name: "bytes", arg: 1, scope: !3928, file: !2527, line: 230, type: !204)
!3933 = !DILocation(line: 0, scope: !3928)
!3934 = !DILocation(line: 232, column: 29, scope: !3928)
!3935 = !DILocation(line: 232, column: 35, scope: !3928)
!3936 = !DILocation(line: 232, column: 2, scope: !3928)
!3937 = distinct !DISubprogram(name: "set_chunk_size", scope: !2527, file: !2527, line: 172, type: !3938, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3940)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{null, !2540, !2545, !3754}
!3940 = !{!3941, !3942, !3943}
!3941 = !DILocalVariable(name: "h", arg: 1, scope: !3937, file: !2527, line: 172, type: !2540)
!3942 = !DILocalVariable(name: "c", arg: 2, scope: !3937, file: !2527, line: 172, type: !2545)
!3943 = !DILocalVariable(name: "size", arg: 3, scope: !3937, file: !2527, line: 172, type: !3754)
!3944 = !DILocation(line: 0, scope: !3937)
!3945 = !DILocation(line: 174, column: 38, scope: !3937)
!3946 = !DILocation(line: 174, column: 2, scope: !3937)
!3947 = !DILocation(line: 175, column: 1, scope: !3937)
!3948 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2527, file: !2527, line: 209, type: !3938, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3949)
!3949 = !{!3950, !3951, !3952}
!3950 = !DILocalVariable(name: "h", arg: 1, scope: !3948, file: !2527, line: 209, type: !2540)
!3951 = !DILocalVariable(name: "c", arg: 2, scope: !3948, file: !2527, line: 209, type: !2545)
!3952 = !DILocalVariable(name: "size", arg: 3, scope: !3948, file: !2527, line: 210, type: !3754)
!3953 = !DILocation(line: 0, scope: !3948)
!3954 = !DILocation(line: 212, column: 2, scope: !3948)
!3955 = !DILocation(line: 213, column: 1, scope: !3948)
!3956 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3628, file: !3628, line: 34, type: !3810, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3957)
!3957 = !{!3958, !3959, !3960, !3961, !3962, !3965}
!3958 = !DILocalVariable(name: "h", arg: 1, scope: !3956, file: !3628, line: 34, type: !2540)
!3959 = !DILocalVariable(name: "c", arg: 2, scope: !3956, file: !3628, line: 34, type: !2545)
!3960 = !DILocalVariable(name: "bidx", arg: 3, scope: !3956, file: !3628, line: 34, type: !103)
!3961 = !DILocalVariable(name: "b", scope: !3956, file: !3628, line: 36, type: !3817)
!3962 = !DILocalVariable(name: "first", scope: !3963, file: !3628, line: 47, type: !2545)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !3628, line: 46, column: 9)
!3964 = distinct !DILexicalBlock(scope: !3956, file: !3628, line: 42, column: 6)
!3965 = !DILocalVariable(name: "second", scope: !3963, file: !3628, line: 48, type: !2545)
!3966 = !DILocation(line: 0, scope: !3956)
!3967 = !DILocation(line: 36, column: 29, scope: !3956)
!3968 = !DILocation(line: 42, column: 6, scope: !3964)
!3969 = !DILocation(line: 42, column: 28, scope: !3964)
!3970 = !DILocation(line: 42, column: 6, scope: !3956)
!3971 = !DILocation(line: 44, column: 24, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3964, file: !3628, line: 42, column: 34)
!3973 = !DILocation(line: 44, column: 23, scope: !3972)
!3974 = !DILocation(line: 44, column: 6, scope: !3972)
!3975 = !DILocation(line: 44, column: 20, scope: !3972)
!3976 = !DILocation(line: 45, column: 6, scope: !3972)
!3977 = !DILocation(line: 45, column: 11, scope: !3972)
!3978 = !DILocation(line: 46, column: 2, scope: !3972)
!3979 = !DILocation(line: 47, column: 21, scope: !3963)
!3980 = !DILocation(line: 0, scope: !3963)
!3981 = !DILocation(line: 50, column: 6, scope: !3963)
!3982 = !DILocation(line: 50, column: 11, scope: !3963)
!3983 = !DILocation(line: 51, column: 3, scope: !3963)
!3984 = !DILocation(line: 52, column: 3, scope: !3963)
!3985 = !DILocation(line: 58, column: 1, scope: !3956)
!3986 = distinct !DISubprogram(name: "next_free_chunk", scope: !2527, file: !2527, line: 182, type: !3713, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3987)
!3987 = !{!3988, !3989}
!3988 = !DILocalVariable(name: "h", arg: 1, scope: !3986, file: !2527, line: 182, type: !2540)
!3989 = !DILocalVariable(name: "c", arg: 2, scope: !3986, file: !2527, line: 182, type: !2545)
!3990 = !DILocation(line: 0, scope: !3986)
!3991 = !DILocation(line: 184, column: 9, scope: !3986)
!3992 = !DILocation(line: 184, column: 2, scope: !3986)
!3993 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3628, file: !3628, line: 200, type: !3994, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !3996)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!204, !3631, !102}
!3996 = !{!3997, !3998, !3999, !4000, !4001, !4002, !4003}
!3997 = !DILocalVariable(name: "heap", arg: 1, scope: !3993, file: !3628, line: 200, type: !3631)
!3998 = !DILocalVariable(name: "mem", arg: 2, scope: !3993, file: !3628, line: 200, type: !102)
!3999 = !DILocalVariable(name: "h", scope: !3993, file: !3628, line: 202, type: !2540)
!4000 = !DILocalVariable(name: "c", scope: !3993, file: !3628, line: 203, type: !2545)
!4001 = !DILocalVariable(name: "addr", scope: !3993, file: !3628, line: 204, type: !204)
!4002 = !DILocalVariable(name: "chunk_base", scope: !3993, file: !3628, line: 205, type: !204)
!4003 = !DILocalVariable(name: "chunk_sz", scope: !3993, file: !3628, line: 206, type: !204)
!4004 = !DILocation(line: 0, scope: !3993)
!4005 = !DILocation(line: 202, column: 27, scope: !3993)
!4006 = !DILocation(line: 203, column: 16, scope: !3993)
!4007 = !DILocation(line: 204, column: 16, scope: !3993)
!4008 = !DILocation(line: 205, column: 31, scope: !3993)
!4009 = !DILocation(line: 205, column: 22, scope: !3993)
!4010 = !DILocation(line: 206, column: 20, scope: !3993)
!4011 = !DILocation(line: 206, column: 37, scope: !3993)
!4012 = !DILocation(line: 208, column: 26, scope: !3993)
!4013 = !DILocation(line: 208, column: 18, scope: !3993)
!4014 = !DILocation(line: 208, column: 2, scope: !3993)
!4015 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3628, file: !3628, line: 263, type: !4016, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4018)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!102, !3631, !204}
!4018 = !{!4019, !4020, !4021, !4022, !4023, !4024}
!4019 = !DILocalVariable(name: "heap", arg: 1, scope: !4015, file: !3628, line: 263, type: !3631)
!4020 = !DILocalVariable(name: "bytes", arg: 2, scope: !4015, file: !3628, line: 263, type: !204)
!4021 = !DILocalVariable(name: "h", scope: !4015, file: !3628, line: 265, type: !2540)
!4022 = !DILocalVariable(name: "mem", scope: !4015, file: !3628, line: 266, type: !102)
!4023 = !DILocalVariable(name: "chunk_sz", scope: !4015, file: !3628, line: 272, type: !3754)
!4024 = !DILocalVariable(name: "c", scope: !4015, file: !3628, line: 273, type: !2545)
!4025 = !DILocation(line: 0, scope: !4015)
!4026 = !DILocation(line: 265, column: 27, scope: !4015)
!4027 = !DILocation(line: 268, column: 12, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4015, file: !3628, line: 268, column: 6)
!4029 = !DILocation(line: 268, column: 18, scope: !4028)
!4030 = !DILocation(line: 268, column: 21, scope: !4028)
!4031 = !DILocation(line: 268, column: 6, scope: !4015)
!4032 = !DILocation(line: 272, column: 23, scope: !4015)
!4033 = !DILocation(line: 273, column: 16, scope: !4015)
!4034 = !DILocation(line: 274, column: 8, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4015, file: !3628, line: 274, column: 6)
!4036 = !DILocation(line: 274, column: 6, scope: !4015)
!4037 = !DILocation(line: 279, column: 6, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4015, file: !3628, line: 279, column: 6)
!4039 = !DILocation(line: 279, column: 23, scope: !4038)
!4040 = !DILocation(line: 279, column: 6, scope: !4015)
!4041 = !DILocation(line: 280, column: 24, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4038, file: !3628, line: 279, column: 35)
!4043 = !DILocation(line: 280, column: 3, scope: !4042)
!4044 = !DILocation(line: 281, column: 3, scope: !4042)
!4045 = !DILocation(line: 282, column: 2, scope: !4042)
!4046 = !DILocation(line: 284, column: 2, scope: !4015)
!4047 = !DILocation(line: 286, column: 8, scope: !4015)
!4048 = !DILocation(line: 298, column: 2, scope: !4015)
!4049 = !DILocation(line: 299, column: 1, scope: !4015)
!4050 = distinct !DISubprogram(name: "size_too_big", scope: !2527, file: !2527, line: 256, type: !4051, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4053)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!157, !2540, !204}
!4053 = !{!4054, !4055}
!4054 = !DILocalVariable(name: "h", arg: 1, scope: !4050, file: !2527, line: 256, type: !2540)
!4055 = !DILocalVariable(name: "bytes", arg: 2, scope: !4050, file: !2527, line: 256, type: !204)
!4056 = !DILocation(line: 0, scope: !4050)
!4057 = !DILocation(line: 262, column: 16, scope: !4050)
!4058 = !DILocation(line: 262, column: 36, scope: !4050)
!4059 = !DILocation(line: 262, column: 30, scope: !4050)
!4060 = !DILocation(line: 262, column: 2, scope: !4050)
!4061 = distinct !DISubprogram(name: "alloc_chunk", scope: !3628, file: !3628, line: 211, type: !4062, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4064)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!2545, !2540, !3754}
!4064 = !{!4065, !4066, !4067, !4068, !4069, !4072, !4073, !4075, !4076, !4079}
!4065 = !DILocalVariable(name: "h", arg: 1, scope: !4061, file: !3628, line: 211, type: !2540)
!4066 = !DILocalVariable(name: "sz", arg: 2, scope: !4061, file: !3628, line: 211, type: !3754)
!4067 = !DILocalVariable(name: "bi", scope: !4061, file: !3628, line: 213, type: !103)
!4068 = !DILocalVariable(name: "b", scope: !4061, file: !3628, line: 214, type: !3817)
!4069 = !DILocalVariable(name: "first", scope: !4070, file: !3628, line: 233, type: !2545)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !3628, line: 232, column: 15)
!4071 = distinct !DILexicalBlock(scope: !4061, file: !3628, line: 232, column: 6)
!4072 = !DILocalVariable(name: "i", scope: !4070, file: !3628, line: 234, type: !103)
!4073 = !DILocalVariable(name: "c", scope: !4074, file: !3628, line: 236, type: !2545)
!4074 = distinct !DILexicalBlock(scope: !4070, file: !3628, line: 235, column: 6)
!4075 = !DILocalVariable(name: "bmask", scope: !4061, file: !3628, line: 249, type: !121)
!4076 = !DILocalVariable(name: "minbucket", scope: !4077, file: !3628, line: 252, type: !103)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !3628, line: 251, column: 19)
!4078 = distinct !DILexicalBlock(scope: !4061, file: !3628, line: 251, column: 6)
!4079 = !DILocalVariable(name: "c", scope: !4077, file: !3628, line: 253, type: !2545)
!4080 = !DILocation(line: 0, scope: !4061)
!4081 = !DILocation(line: 213, column: 11, scope: !4061)
!4082 = !DILocation(line: 232, column: 9, scope: !4071)
!4083 = !DILocation(line: 232, column: 6, scope: !4071)
!4084 = !DILocation(line: 232, column: 6, scope: !4061)
!4085 = !DILocation(line: 236, column: 21, scope: !4074)
!4086 = !DILocation(line: 0, scope: !4070)
!4087 = !DILocation(line: 0, scope: !4074)
!4088 = !DILocation(line: 237, column: 8, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4074, file: !3628, line: 237, column: 8)
!4090 = !DILocation(line: 237, column: 25, scope: !4089)
!4091 = !DILocation(line: 237, column: 8, scope: !4074)
!4092 = !DILocation(line: 238, column: 5, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4089, file: !3628, line: 237, column: 32)
!4094 = !DILocation(line: 241, column: 14, scope: !4074)
!4095 = !DILocation(line: 241, column: 12, scope: !4074)
!4096 = !DILocation(line: 243, column: 12, scope: !4070)
!4097 = !DILocation(line: 243, column: 16, scope: !4070)
!4098 = distinct !{!4098, !4099, !4100}
!4099 = !DILocation(line: 235, column: 3, scope: !4070)
!4100 = !DILocation(line: 243, column: 35, scope: !4070)
!4101 = !DILocation(line: 249, column: 22, scope: !4061)
!4102 = !DILocation(line: 249, column: 39, scope: !4061)
!4103 = !DILocation(line: 249, column: 36, scope: !4061)
!4104 = !DILocation(line: 251, column: 12, scope: !4078)
!4105 = !DILocation(line: 251, column: 6, scope: !4061)
!4106 = !DILocation(line: 252, column: 19, scope: !4077)
!4107 = !DILocation(line: 0, scope: !4077)
!4108 = !DILocation(line: 253, column: 39, scope: !4077)
!4109 = !DILocation(line: 255, column: 3, scope: !4077)
!4110 = !DILocation(line: 261, column: 1, scope: !4061)
!4111 = distinct !DISubprogram(name: "split_chunks", scope: !3628, file: !3628, line: 109, type: !3747, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4112)
!4112 = !{!4113, !4114, !4115, !4116, !4117, !4118}
!4113 = !DILocalVariable(name: "h", arg: 1, scope: !4111, file: !3628, line: 109, type: !2540)
!4114 = !DILocalVariable(name: "lc", arg: 2, scope: !4111, file: !3628, line: 109, type: !2545)
!4115 = !DILocalVariable(name: "rc", arg: 3, scope: !4111, file: !3628, line: 109, type: !2545)
!4116 = !DILocalVariable(name: "sz0", scope: !4111, file: !3628, line: 114, type: !3754)
!4117 = !DILocalVariable(name: "lsz", scope: !4111, file: !3628, line: 115, type: !3754)
!4118 = !DILocalVariable(name: "rsz", scope: !4111, file: !3628, line: 116, type: !3754)
!4119 = !DILocation(line: 0, scope: !4111)
!4120 = !DILocation(line: 114, column: 18, scope: !4111)
!4121 = !DILocation(line: 115, column: 21, scope: !4111)
!4122 = !DILocation(line: 116, column: 22, scope: !4111)
!4123 = !DILocation(line: 118, column: 2, scope: !4111)
!4124 = !DILocation(line: 119, column: 2, scope: !4111)
!4125 = !DILocation(line: 120, column: 2, scope: !4111)
!4126 = !DILocation(line: 121, column: 25, scope: !4111)
!4127 = !DILocation(line: 121, column: 2, scope: !4111)
!4128 = !DILocation(line: 122, column: 1, scope: !4111)
!4129 = distinct !DISubprogram(name: "chunk_mem", scope: !3628, file: !3628, line: 24, type: !4130, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4132)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!102, !2540, !2545}
!4132 = !{!4133, !4134, !4135, !4136}
!4133 = !DILocalVariable(name: "h", arg: 1, scope: !4129, file: !3628, line: 24, type: !2540)
!4134 = !DILocalVariable(name: "c", arg: 2, scope: !4129, file: !3628, line: 24, type: !2545)
!4135 = !DILocalVariable(name: "buf", scope: !4129, file: !3628, line: 26, type: !2534)
!4136 = !DILocalVariable(name: "ret", scope: !4129, file: !3628, line: 27, type: !267)
!4137 = !DILocation(line: 0, scope: !4129)
!4138 = !DILocation(line: 26, column: 22, scope: !4129)
!4139 = !DILocation(line: 27, column: 38, scope: !4129)
!4140 = !DILocation(line: 31, column: 2, scope: !4129)
!4141 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3628, file: !3628, line: 301, type: !4142, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4144)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!102, !3631, !204, !204}
!4144 = !{!4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156}
!4145 = !DILocalVariable(name: "heap", arg: 1, scope: !4141, file: !3628, line: 301, type: !3631)
!4146 = !DILocalVariable(name: "align", arg: 2, scope: !4141, file: !3628, line: 301, type: !204)
!4147 = !DILocalVariable(name: "bytes", arg: 3, scope: !4141, file: !3628, line: 301, type: !204)
!4148 = !DILocalVariable(name: "h", scope: !4141, file: !3628, line: 303, type: !2540)
!4149 = !DILocalVariable(name: "gap", scope: !4141, file: !3628, line: 304, type: !204)
!4150 = !DILocalVariable(name: "rew", scope: !4141, file: !3628, line: 304, type: !204)
!4151 = !DILocalVariable(name: "padded_sz", scope: !4141, file: !3628, line: 335, type: !3754)
!4152 = !DILocalVariable(name: "c0", scope: !4141, file: !3628, line: 336, type: !2545)
!4153 = !DILocalVariable(name: "mem", scope: !4141, file: !3628, line: 341, type: !267)
!4154 = !DILocalVariable(name: "end", scope: !4141, file: !3628, line: 345, type: !2534)
!4155 = !DILocalVariable(name: "c", scope: !4141, file: !3628, line: 348, type: !2545)
!4156 = !DILocalVariable(name: "c_end", scope: !4141, file: !3628, line: 349, type: !2545)
!4157 = !DILocation(line: 0, scope: !4141)
!4158 = !DILocation(line: 303, column: 27, scope: !4141)
!4159 = !DILocation(line: 313, column: 16, scope: !4141)
!4160 = !DILocation(line: 313, column: 14, scope: !4141)
!4161 = !DILocation(line: 314, column: 12, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4141, file: !3628, line: 314, column: 6)
!4163 = !DILocation(line: 314, column: 6, scope: !4141)
!4164 = !DILocation(line: 315, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4162, file: !3628, line: 314, column: 20)
!4166 = !DILocation(line: 316, column: 9, scope: !4165)
!4167 = !DILocation(line: 318, column: 13, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !3628, line: 318, column: 7)
!4169 = distinct !DILexicalBlock(scope: !4162, file: !3628, line: 317, column: 9)
!4170 = !DILocation(line: 318, column: 7, scope: !4169)
!4171 = !DILocation(line: 319, column: 11, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4168, file: !3628, line: 318, column: 39)
!4173 = !DILocation(line: 319, column: 4, scope: !4172)
!4174 = !DILocation(line: 0, scope: !4162)
!4175 = !DILocation(line: 326, column: 12, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4141, file: !3628, line: 326, column: 6)
!4177 = !DILocation(line: 326, column: 17, scope: !4176)
!4178 = !DILocation(line: 326, column: 20, scope: !4176)
!4179 = !DILocation(line: 326, column: 6, scope: !4141)
!4180 = !DILocation(line: 335, column: 50, scope: !4141)
!4181 = !DILocation(line: 335, column: 58, scope: !4141)
!4182 = !DILocation(line: 335, column: 24, scope: !4141)
!4183 = !DILocation(line: 336, column: 17, scope: !4141)
!4184 = !DILocation(line: 338, column: 9, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4141, file: !3628, line: 338, column: 6)
!4186 = !DILocation(line: 338, column: 6, scope: !4141)
!4187 = !DILocation(line: 341, column: 17, scope: !4141)
!4188 = !DILocation(line: 344, column: 20, scope: !4141)
!4189 = !DILocation(line: 344, column: 8, scope: !4141)
!4190 = !DILocation(line: 344, column: 47, scope: !4141)
!4191 = !DILocation(line: 345, column: 39, scope: !4141)
!4192 = !DILocation(line: 348, column: 16, scope: !4141)
!4193 = !DILocation(line: 349, column: 26, scope: !4141)
!4194 = !DILocation(line: 349, column: 24, scope: !4141)
!4195 = !DILocation(line: 353, column: 8, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4141, file: !3628, line: 353, column: 6)
!4197 = !DILocation(line: 353, column: 6, scope: !4141)
!4198 = !DILocation(line: 354, column: 3, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4196, file: !3628, line: 353, column: 14)
!4200 = !DILocation(line: 355, column: 3, scope: !4199)
!4201 = !DILocation(line: 356, column: 2, scope: !4199)
!4202 = !DILocation(line: 359, column: 6, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4141, file: !3628, line: 359, column: 6)
!4204 = !DILocation(line: 359, column: 24, scope: !4203)
!4205 = !DILocation(line: 359, column: 6, scope: !4141)
!4206 = !DILocation(line: 360, column: 3, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4203, file: !3628, line: 359, column: 33)
!4208 = !DILocation(line: 361, column: 3, scope: !4207)
!4209 = !DILocation(line: 362, column: 2, scope: !4207)
!4210 = !DILocation(line: 364, column: 2, scope: !4141)
!4211 = !DILocation(line: 377, column: 1, scope: !4141)
!4212 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3628, file: !3628, line: 379, type: !4213, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4215)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!102, !3631, !102, !204, !204}
!4215 = !{!4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4231, !4232}
!4216 = !DILocalVariable(name: "heap", arg: 1, scope: !4212, file: !3628, line: 379, type: !3631)
!4217 = !DILocalVariable(name: "ptr", arg: 2, scope: !4212, file: !3628, line: 379, type: !102)
!4218 = !DILocalVariable(name: "align", arg: 3, scope: !4212, file: !3628, line: 380, type: !204)
!4219 = !DILocalVariable(name: "bytes", arg: 4, scope: !4212, file: !3628, line: 380, type: !204)
!4220 = !DILocalVariable(name: "h", scope: !4212, file: !3628, line: 382, type: !2540)
!4221 = !DILocalVariable(name: "c", scope: !4212, file: !3628, line: 399, type: !2545)
!4222 = !DILocalVariable(name: "rc", scope: !4212, file: !3628, line: 400, type: !2545)
!4223 = !DILocalVariable(name: "align_gap", scope: !4212, file: !3628, line: 401, type: !204)
!4224 = !DILocalVariable(name: "chunks_need", scope: !4212, file: !3628, line: 402, type: !3754)
!4225 = !DILocalVariable(name: "split_size", scope: !4226, file: !3628, line: 435, type: !3754)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !3628, line: 433, column: 61)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !3628, line: 432, column: 13)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !3628, line: 409, column: 13)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !3628, line: 406, column: 13)
!4230 = distinct !DILexicalBlock(scope: !4212, file: !3628, line: 404, column: 6)
!4231 = !DILocalVariable(name: "ptr2", scope: !4212, file: !3628, line: 474, type: !102)
!4232 = !DILocalVariable(name: "prev_size", scope: !4233, file: !3628, line: 477, type: !204)
!4233 = distinct !DILexicalBlock(scope: !4234, file: !3628, line: 476, column: 20)
!4234 = distinct !DILexicalBlock(scope: !4212, file: !3628, line: 476, column: 6)
!4235 = !DILocation(line: 0, scope: !4212)
!4236 = !DILocation(line: 382, column: 27, scope: !4212)
!4237 = !DILocation(line: 385, column: 10, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4212, file: !3628, line: 385, column: 6)
!4239 = !DILocation(line: 385, column: 6, scope: !4212)
!4240 = !DILocation(line: 386, column: 10, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4238, file: !3628, line: 385, column: 19)
!4242 = !DILocation(line: 386, column: 3, scope: !4241)
!4243 = !DILocation(line: 388, column: 12, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4212, file: !3628, line: 388, column: 6)
!4245 = !DILocation(line: 388, column: 6, scope: !4212)
!4246 = !DILocation(line: 389, column: 3, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4244, file: !3628, line: 388, column: 18)
!4248 = !DILocation(line: 390, column: 3, scope: !4247)
!4249 = !DILocation(line: 395, column: 6, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4212, file: !3628, line: 395, column: 6)
!4251 = !DILocation(line: 395, column: 6, scope: !4212)
!4252 = !DILocation(line: 399, column: 16, scope: !4212)
!4253 = !DILocation(line: 400, column: 17, scope: !4212)
!4254 = !DILocation(line: 401, column: 49, scope: !4212)
!4255 = !DILocation(line: 401, column: 36, scope: !4212)
!4256 = !DILocation(line: 402, column: 52, scope: !4212)
!4257 = !DILocation(line: 402, column: 26, scope: !4212)
!4258 = !DILocation(line: 404, column: 6, scope: !4230)
!4259 = !DILocation(line: 404, column: 12, scope: !4230)
!4260 = !DILocation(line: 404, column: 40, scope: !4230)
!4261 = !DILocation(line: 404, column: 31, scope: !4230)
!4262 = !DILocation(line: 404, column: 6, scope: !4212)
!4263 = !DILocation(line: 406, column: 13, scope: !4229)
!4264 = !DILocation(line: 406, column: 30, scope: !4229)
!4265 = !DILocation(line: 406, column: 13, scope: !4230)
!4266 = !DILocation(line: 409, column: 30, scope: !4228)
!4267 = !DILocation(line: 409, column: 13, scope: !4229)
!4268 = !DILocation(line: 420, column: 24, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4228, file: !3628, line: 409, column: 45)
!4270 = !DILocation(line: 420, column: 3, scope: !4269)
!4271 = !DILocation(line: 421, column: 3, scope: !4269)
!4272 = !DILocation(line: 422, column: 3, scope: !4269)
!4273 = !DILocation(line: 431, column: 3, scope: !4269)
!4274 = !DILocation(line: 432, column: 14, scope: !4227)
!4275 = !DILocation(line: 432, column: 32, scope: !4227)
!4276 = !DILocation(line: 433, column: 26, scope: !4227)
!4277 = !DILocation(line: 433, column: 24, scope: !4227)
!4278 = !DILocation(line: 433, column: 44, scope: !4227)
!4279 = !DILocation(line: 432, column: 13, scope: !4228)
!4280 = !DILocation(line: 435, column: 38, scope: !4226)
!4281 = !DILocation(line: 0, scope: !4226)
!4282 = !DILocation(line: 445, column: 3, scope: !4226)
!4283 = !DILocation(line: 447, column: 20, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4226, file: !3628, line: 447, column: 7)
!4285 = !DILocation(line: 447, column: 18, scope: !4284)
!4286 = !DILocation(line: 447, column: 7, scope: !4226)
!4287 = !DILocation(line: 448, column: 27, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4284, file: !3628, line: 447, column: 39)
!4289 = !DILocation(line: 448, column: 4, scope: !4288)
!4290 = !DILocation(line: 449, column: 4, scope: !4288)
!4291 = !DILocation(line: 450, column: 3, scope: !4288)
!4292 = !DILocation(line: 452, column: 3, scope: !4226)
!4293 = !DILocation(line: 453, column: 3, scope: !4226)
!4294 = !DILocation(line: 474, column: 15, scope: !4212)
!4295 = !DILocation(line: 476, column: 11, scope: !4234)
!4296 = !DILocation(line: 476, column: 6, scope: !4212)
!4297 = !DILocation(line: 477, column: 42, scope: !4233)
!4298 = !DILocation(line: 477, column: 22, scope: !4233)
!4299 = !DILocation(line: 477, column: 60, scope: !4233)
!4300 = !DILocation(line: 0, scope: !4233)
!4301 = !DILocation(line: 479, column: 21, scope: !4233)
!4302 = !DILocation(line: 479, column: 3, scope: !4233)
!4303 = !DILocation(line: 480, column: 3, scope: !4233)
!4304 = !DILocation(line: 481, column: 2, scope: !4233)
!4305 = !DILocation(line: 483, column: 1, scope: !4212)
!4306 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2527, file: !2527, line: 245, type: !4307, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4309)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!204, !2540, !3754}
!4309 = !{!4310, !4311}
!4310 = !DILocalVariable(name: "h", arg: 1, scope: !4306, file: !2527, line: 245, type: !2540)
!4311 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4306, file: !2527, line: 245, type: !3754)
!4312 = !DILocation(line: 0, scope: !4306)
!4313 = !DILocation(line: 247, column: 20, scope: !4306)
!4314 = !DILocation(line: 247, column: 33, scope: !4306)
!4315 = !DILocation(line: 247, column: 2, scope: !4306)
!4316 = distinct !DISubprogram(name: "sys_heap_init", scope: !3628, file: !3628, line: 485, type: !4317, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4319)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{null, !3631, !102, !204}
!4319 = !{!4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329}
!4320 = !DILocalVariable(name: "heap", arg: 1, scope: !4316, file: !3628, line: 485, type: !3631)
!4321 = !DILocalVariable(name: "mem", arg: 2, scope: !4316, file: !3628, line: 485, type: !102)
!4322 = !DILocalVariable(name: "bytes", arg: 3, scope: !4316, file: !3628, line: 485, type: !204)
!4323 = !DILocalVariable(name: "addr", scope: !4316, file: !3628, line: 502, type: !22)
!4324 = !DILocalVariable(name: "end", scope: !4316, file: !3628, line: 503, type: !22)
!4325 = !DILocalVariable(name: "heap_sz", scope: !4316, file: !3628, line: 504, type: !3754)
!4326 = !DILocalVariable(name: "h", scope: !4316, file: !3628, line: 509, type: !2540)
!4327 = !DILocalVariable(name: "nb_buckets", scope: !4316, file: !3628, line: 520, type: !103)
!4328 = !DILocalVariable(name: "chunk0_size", scope: !4316, file: !3628, line: 521, type: !3754)
!4329 = !DILocalVariable(name: "i", scope: !4330, file: !3628, line: 526, type: !103)
!4330 = distinct !DILexicalBlock(scope: !4316, file: !3628, line: 526, column: 2)
!4331 = !DILocation(line: 0, scope: !4316)
!4332 = !DILocation(line: 499, column: 8, scope: !4316)
!4333 = !DILocation(line: 502, column: 19, scope: !4316)
!4334 = !DILocation(line: 503, column: 18, scope: !4316)
!4335 = !DILocation(line: 504, column: 27, scope: !4316)
!4336 = !DILocation(line: 504, column: 35, scope: !4316)
!4337 = !DILocation(line: 509, column: 21, scope: !4316)
!4338 = !DILocation(line: 510, column: 8, scope: !4316)
!4339 = !DILocation(line: 510, column: 13, scope: !4316)
!4340 = !DILocation(line: 511, column: 5, scope: !4316)
!4341 = !DILocation(line: 511, column: 15, scope: !4316)
!4342 = !DILocation(line: 512, column: 5, scope: !4316)
!4343 = !DILocation(line: 512, column: 19, scope: !4316)
!4344 = !DILocation(line: 520, column: 19, scope: !4316)
!4345 = !DILocation(line: 522, column: 21, scope: !4316)
!4346 = !DILocation(line: 521, column: 56, scope: !4316)
!4347 = !DILocation(line: 521, column: 26, scope: !4316)
!4348 = !DILocation(line: 0, scope: !4330)
!4349 = !DILocation(line: 526, column: 20, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4330, file: !3628, line: 526, column: 2)
!4351 = !DILocation(line: 526, column: 2, scope: !4330)
!4352 = !DILocation(line: 531, column: 2, scope: !4316)
!4353 = !DILocation(line: 532, column: 2, scope: !4316)
!4354 = !DILocation(line: 533, column: 2, scope: !4316)
!4355 = !DILocation(line: 536, column: 41, scope: !4316)
!4356 = !DILocation(line: 536, column: 2, scope: !4316)
!4357 = !DILocation(line: 537, column: 2, scope: !4316)
!4358 = !DILocation(line: 540, column: 2, scope: !4316)
!4359 = !DILocation(line: 541, column: 2, scope: !4316)
!4360 = !DILocation(line: 542, column: 2, scope: !4316)
!4361 = !DILocation(line: 544, column: 2, scope: !4316)
!4362 = !DILocation(line: 545, column: 1, scope: !4316)
!4363 = !DILocation(line: 527, column: 17, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4350, file: !3628, line: 526, column: 39)
!4365 = !DILocation(line: 527, column: 22, scope: !4364)
!4366 = !DILocation(line: 526, column: 35, scope: !4350)
!4367 = distinct !{!4367, !4351, !4368}
!4368 = !DILocation(line: 528, column: 2, scope: !4330)
!4369 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2560, file: !2560, line: 1338, type: !4370, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4378)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!103, !3358, !102, !144, !4372, !121}
!4372 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3324, line: 99, baseType: !4373)
!4373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3324, line: 40, baseType: !4374)
!4374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2560, baseType: !4375)
!4375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4376)
!4376 = !{!4377}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4375, file: !2560, baseType: !102, size: 32)
!4378 = !{!4379, !4380, !4381, !4382, !4383, !4384, !4388, !4389, !4390, !4392, !4397, !4442, !4445, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4457, !4458, !4459, !4463, !4466, !4468, !4471, !4472, !4473, !4478, !4484, !4487, !4491, !4497, !4501, !4504, !4506, !4509}
!4379 = !DILocalVariable(name: "out", arg: 1, scope: !4369, file: !2560, line: 1338, type: !3358)
!4380 = !DILocalVariable(name: "ctx", arg: 2, scope: !4369, file: !2560, line: 1338, type: !102)
!4381 = !DILocalVariable(name: "fp", arg: 3, scope: !4369, file: !2560, line: 1338, type: !144)
!4382 = !DILocalVariable(name: "ap", arg: 4, scope: !4369, file: !2560, line: 1339, type: !4372)
!4383 = !DILocalVariable(name: "flags", arg: 5, scope: !4369, file: !2560, line: 1339, type: !121)
!4384 = !DILocalVariable(name: "buf", scope: !4369, file: !2560, line: 1341, type: !4385)
!4385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !4386)
!4386 = !{!4387}
!4387 = !DISubrange(count: 22)
!4388 = !DILocalVariable(name: "count", scope: !4369, file: !2560, line: 1342, type: !204)
!4389 = !DILocalVariable(name: "sint", scope: !4369, file: !2560, line: 1343, type: !2579)
!4390 = !DILocalVariable(name: "tagged_ap", scope: !4369, file: !2560, line: 1345, type: !4391)
!4391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!4392 = !DILocalVariable(name: "rc", scope: !4393, file: !2560, line: 1377, type: !103)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !2560, line: 1377, column: 4)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !2560, line: 1376, column: 19)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1376, column: 7)
!4396 = distinct !DILexicalBlock(scope: !4369, file: !2560, line: 1375, column: 19)
!4397 = !DILocalVariable(name: "state", scope: !4396, file: !2560, line: 1395, type: !4398)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4369, file: !2560, line: 1392, size: 192, elements: !4399)
!4399 = !{!4400, !4410}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4398, file: !2560, line: 1393, baseType: !4401, size: 64)
!4401 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2560, line: 166, size: 64, elements: !4402)
!4402 = !{!4403, !4404, !4405, !4407, !4409}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4401, file: !2560, line: 168, baseType: !2579, size: 64)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4401, file: !2560, line: 171, baseType: !2582, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4401, file: !2560, line: 174, baseType: !4406, size: 64)
!4406 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4401, file: !2560, line: 177, baseType: !4408, size: 64)
!4408 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4401, file: !2560, line: 180, baseType: !102, size: 32)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4398, file: !2560, line: 1394, baseType: !4411, size: 96, offset: 64)
!4411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2560, line: 189, size: 96, elements: !4412)
!4412 = !{!4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4437}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4411, file: !2560, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4411, file: !2560, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4411, file: !2560, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4411, file: !2560, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4411, file: !2560, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4411, file: !2560, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4411, file: !2560, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4411, file: !2560, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4411, file: !2560, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4411, file: !2560, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4411, file: !2560, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4411, file: !2560, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4411, file: !2560, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4411, file: !2560, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4411, file: !2560, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4411, file: !2560, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4411, file: !2560, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4411, file: !2560, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4411, file: !2560, line: 260, baseType: !155, size: 8, offset: 24)
!4432 = !DIDerivedType(tag: DW_TAG_member, scope: !4411, file: !2560, line: 262, baseType: !4433, size: 32, offset: 32)
!4433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4411, file: !2560, line: 262, size: 32, elements: !4434)
!4434 = !{!4435, !4436}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4433, file: !2560, line: 267, baseType: !103, size: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4433, file: !2560, line: 289, baseType: !103, size: 32)
!4437 = !DIDerivedType(tag: DW_TAG_member, scope: !4411, file: !2560, line: 292, baseType: !4438, size: 32, offset: 64)
!4438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4411, file: !2560, line: 292, size: 32, elements: !4439)
!4439 = !{!4440, !4441}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4438, file: !2560, line: 297, baseType: !103, size: 32)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4438, file: !2560, line: 306, baseType: !103, size: 32)
!4442 = !DILocalVariable(name: "conv", scope: !4396, file: !2560, line: 1400, type: !4443)
!4443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4444)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 32)
!4445 = !DILocalVariable(name: "value", scope: !4396, file: !2560, line: 1401, type: !4446)
!4446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4447)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 32)
!4448 = !DILocalVariable(name: "sp", scope: !4396, file: !2560, line: 1402, type: !144)
!4449 = !DILocalVariable(name: "width", scope: !4396, file: !2560, line: 1403, type: !103)
!4450 = !DILocalVariable(name: "precision", scope: !4396, file: !2560, line: 1404, type: !103)
!4451 = !DILocalVariable(name: "bps", scope: !4396, file: !2560, line: 1405, type: !144)
!4452 = !DILocalVariable(name: "bpe", scope: !4396, file: !2560, line: 1406, type: !144)
!4453 = !DILocalVariable(name: "sign", scope: !4396, file: !2560, line: 1407, type: !146)
!4454 = !DILocalVariable(name: "arg", scope: !4455, file: !2560, line: 1432, type: !103)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !2560, line: 1431, column: 24)
!4456 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1431, column: 7)
!4457 = !DILocalVariable(name: "specifier_cat", scope: !4396, file: !2560, line: 1468, type: !2559)
!4458 = !DILocalVariable(name: "length_mod", scope: !4396, file: !2560, line: 1470, type: !2567)
!4459 = !DILocalVariable(name: "rc", scope: !4460, file: !2560, line: 1575, type: !103)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !2560, line: 1575, column: 4)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !2560, line: 1574, column: 43)
!4462 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1574, column: 7)
!4463 = !DILocalVariable(name: "rc", scope: !4464, file: !2560, line: 1584, type: !103)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !2560, line: 1584, column: 4)
!4465 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1582, column: 28)
!4466 = !DILocalVariable(name: "len", scope: !4467, file: !2560, line: 1589, type: !204)
!4467 = distinct !DILexicalBlock(scope: !4465, file: !2560, line: 1586, column: 13)
!4468 = !DILocalVariable(name: "len", scope: !4469, file: !2560, line: 1641, type: !204)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !2560, line: 1640, column: 24)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !2560, line: 1640, column: 8)
!4471 = !DILocalVariable(name: "nj_len", scope: !4396, file: !2560, line: 1722, type: !204)
!4472 = !DILocalVariable(name: "pad_len", scope: !4396, file: !2560, line: 1723, type: !103)
!4473 = !DILocalVariable(name: "pad", scope: !4474, file: !2560, line: 1751, type: !146)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !2560, line: 1750, column: 26)
!4475 = distinct !DILexicalBlock(scope: !4476, file: !2560, line: 1750, column: 8)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !2560, line: 1747, column: 18)
!4477 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1747, column: 7)
!4478 = !DILocalVariable(name: "rc", scope: !4479, file: !2560, line: 1758, type: !103)
!4479 = distinct !DILexicalBlock(scope: !4480, file: !2560, line: 1758, column: 7)
!4480 = distinct !DILexicalBlock(scope: !4481, file: !2560, line: 1757, column: 21)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !2560, line: 1757, column: 10)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !2560, line: 1756, column: 26)
!4483 = distinct !DILexicalBlock(scope: !4474, file: !2560, line: 1756, column: 9)
!4484 = !DILocalVariable(name: "rc", scope: !4485, file: !2560, line: 1765, type: !103)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !2560, line: 1765, column: 6)
!4486 = distinct !DILexicalBlock(scope: !4474, file: !2560, line: 1764, column: 25)
!4487 = !DILocalVariable(name: "rc", scope: !4488, file: !2560, line: 1774, type: !103)
!4488 = distinct !DILexicalBlock(scope: !4489, file: !2560, line: 1774, column: 4)
!4489 = distinct !DILexicalBlock(scope: !4490, file: !2560, line: 1773, column: 18)
!4490 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1773, column: 7)
!4491 = !DILocalVariable(name: "rc", scope: !4492, file: !2560, line: 1819, type: !103)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !2560, line: 1819, column: 5)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !2560, line: 1818, column: 44)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !2560, line: 1818, column: 8)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !2560, line: 1817, column: 10)
!4496 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1777, column: 7)
!4497 = !DILocalVariable(name: "rc", scope: !4498, file: !2560, line: 1823, type: !103)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !2560, line: 1823, column: 5)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !2560, line: 1822, column: 26)
!4500 = distinct !DILexicalBlock(scope: !4495, file: !2560, line: 1822, column: 8)
!4501 = !DILocalVariable(name: "rc", scope: !4502, file: !2560, line: 1828, type: !103)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !2560, line: 1828, column: 5)
!4503 = distinct !DILexicalBlock(scope: !4495, file: !2560, line: 1827, column: 26)
!4504 = !DILocalVariable(name: "rc", scope: !4505, file: !2560, line: 1831, type: !103)
!4505 = distinct !DILexicalBlock(scope: !4495, file: !2560, line: 1831, column: 4)
!4506 = !DILocalVariable(name: "rc", scope: !4507, file: !2560, line: 1836, type: !103)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !2560, line: 1836, column: 4)
!4508 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1835, column: 21)
!4509 = !DILabel(scope: !4465, name: "prec_int_pad0", file: !2560, line: 1634)
!4510 = !DILocation(line: 0, scope: !4369)
!4511 = !DILocation(line: 1341, column: 2, scope: !4369)
!4512 = !DILocation(line: 1341, column: 7, scope: !4369)
!4513 = !DILocation(line: 1375, column: 2, scope: !4369)
!4514 = !DILocation(line: 1342, column: 9, scope: !4369)
!4515 = !DILocation(line: 1375, column: 9, scope: !4369)
!4516 = !DILocation(line: 1377, column: 4, scope: !4393)
!4517 = !DILocation(line: 0, scope: !4393)
!4518 = !DILocation(line: 1377, column: 4, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4393, file: !2560, line: 1377, column: 4)
!4520 = distinct !{!4520, !4513, !4521}
!4521 = !DILocation(line: 1839, column: 2, scope: !4369)
!4522 = !DILocation(line: 1392, column: 3, scope: !4396)
!4523 = !DILocation(line: 1395, column: 5, scope: !4396)
!4524 = !DILocation(line: 0, scope: !4396)
!4525 = !DILocation(line: 1409, column: 8, scope: !4396)
!4526 = !DILocation(line: 1414, column: 13, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1414, column: 7)
!4528 = !DILocation(line: 1414, column: 7, scope: !4396)
!4529 = !DILocation(line: 1415, column: 12, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4527, file: !2560, line: 1414, column: 25)
!4531 = !DILocation(line: 1417, column: 14, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4530, file: !2560, line: 1417, column: 8)
!4533 = !DILocation(line: 1417, column: 8, scope: !4530)
!4534 = !DILocation(line: 1418, column: 21, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4532, file: !2560, line: 1417, column: 19)
!4536 = !DILocation(line: 1419, column: 13, scope: !4535)
!4537 = !DILocation(line: 1420, column: 4, scope: !4535)
!4538 = !DILocation(line: 1421, column: 20, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4527, file: !2560, line: 1421, column: 14)
!4540 = !DILocation(line: 1421, column: 14, scope: !4527)
!4541 = !DILocation(line: 1431, column: 13, scope: !4456)
!4542 = !DILocation(line: 1431, column: 7, scope: !4396)
!4543 = !DILocation(line: 1432, column: 14, scope: !4455)
!4544 = !DILocation(line: 0, scope: !4455)
!4545 = !DILocation(line: 1434, column: 12, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4455, file: !2560, line: 1434, column: 8)
!4547 = !DILocation(line: 1434, column: 8, scope: !4455)
!4548 = !DILocation(line: 1435, column: 24, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4546, file: !2560, line: 1434, column: 17)
!4550 = !DILocation(line: 1436, column: 4, scope: !4549)
!4551 = !DILocation(line: 1439, column: 20, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4456, file: !2560, line: 1439, column: 14)
!4553 = !DILocation(line: 1439, column: 14, scope: !4456)
!4554 = !DILocation(line: 1469, column: 37, scope: !4396)
!4555 = !DILocation(line: 1448, column: 20, scope: !4396)
!4556 = !DILocation(line: 1449, column: 22, scope: !4396)
!4557 = !DILocation(line: 1471, column: 34, scope: !4396)
!4558 = !DILocation(line: 1478, column: 7, scope: !4396)
!4559 = !DILocation(line: 1479, column: 4, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !2560, line: 1478, column: 40)
!4561 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1478, column: 7)
!4562 = !DILocation(line: 1484, column: 19, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4560, file: !2560, line: 1479, column: 24)
!4564 = !DILocation(line: 1484, column: 17, scope: !4563)
!4565 = !DILocation(line: 1485, column: 5, scope: !4563)
!4566 = !DILocation(line: 1492, column: 20, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2560, line: 1491, column: 12)
!4568 = distinct !DILexicalBlock(scope: !4563, file: !2560, line: 1487, column: 9)
!4569 = !DILocation(line: 1492, column: 18, scope: !4567)
!4570 = !DILocation(line: 1494, column: 5, scope: !4563)
!4571 = !DILocation(line: 1497, column: 23, scope: !4563)
!4572 = !DILocation(line: 1496, column: 17, scope: !4563)
!4573 = !DILocation(line: 1498, column: 5, scope: !4563)
!4574 = !DILocation(line: 1501, column: 23, scope: !4563)
!4575 = !DILocation(line: 1500, column: 17, scope: !4563)
!4576 = !DILocation(line: 1502, column: 5, scope: !4563)
!4577 = !DILocation(line: 1513, column: 23, scope: !4563)
!4578 = !DILocation(line: 1513, column: 6, scope: !4563)
!4579 = !DILocation(line: 1512, column: 17, scope: !4563)
!4580 = !DILocation(line: 1514, column: 5, scope: !4563)
!4581 = !DILocation(line: 0, scope: !4563)
!4582 = !DILocation(line: 1516, column: 8, scope: !4560)
!4583 = !DILocation(line: 1517, column: 19, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !2560, line: 1516, column: 33)
!4585 = distinct !DILexicalBlock(scope: !4560, file: !2560, line: 1516, column: 8)
!4586 = !DILocation(line: 1517, column: 17, scope: !4584)
!4587 = !DILocation(line: 1518, column: 4, scope: !4584)
!4588 = !DILocation(line: 1519, column: 19, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !2560, line: 1518, column: 39)
!4590 = distinct !DILexicalBlock(scope: !4585, file: !2560, line: 1518, column: 15)
!4591 = !DILocation(line: 1519, column: 17, scope: !4589)
!4592 = !DILocation(line: 1520, column: 4, scope: !4589)
!4593 = !DILocation(line: 1522, column: 4, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !2560, line: 1521, column: 47)
!4595 = distinct !DILexicalBlock(scope: !4561, file: !2560, line: 1521, column: 14)
!4596 = !DILocation(line: 1527, column: 19, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4594, file: !2560, line: 1522, column: 24)
!4598 = !DILocation(line: 1527, column: 17, scope: !4597)
!4599 = !DILocation(line: 1528, column: 5, scope: !4597)
!4600 = !DILocation(line: 0, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4597, file: !2560, line: 1530, column: 9)
!4602 = !DILocation(line: 1540, column: 23, scope: !4597)
!4603 = !DILocation(line: 1539, column: 17, scope: !4597)
!4604 = !DILocation(line: 1542, column: 5, scope: !4597)
!4605 = !DILocation(line: 1545, column: 23, scope: !4597)
!4606 = !DILocation(line: 1544, column: 17, scope: !4597)
!4607 = !DILocation(line: 1547, column: 5, scope: !4597)
!4608 = !DILocation(line: 1551, column: 23, scope: !4597)
!4609 = !DILocation(line: 1551, column: 6, scope: !4597)
!4610 = !DILocation(line: 1550, column: 17, scope: !4597)
!4611 = !DILocation(line: 1552, column: 5, scope: !4597)
!4612 = !DILocation(line: 0, scope: !4597)
!4613 = !DILocation(line: 1554, column: 8, scope: !4594)
!4614 = !DILocation(line: 1555, column: 19, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !2560, line: 1554, column: 33)
!4616 = distinct !DILexicalBlock(scope: !4594, file: !2560, line: 1554, column: 8)
!4617 = !DILocation(line: 1555, column: 17, scope: !4615)
!4618 = !DILocation(line: 1556, column: 4, scope: !4615)
!4619 = !DILocation(line: 1557, column: 19, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !2560, line: 1556, column: 39)
!4621 = distinct !DILexicalBlock(scope: !4616, file: !2560, line: 1556, column: 15)
!4622 = !DILocation(line: 1557, column: 17, scope: !4620)
!4623 = !DILocation(line: 1558, column: 4, scope: !4620)
!4624 = !DILocation(line: 0, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2560, line: 1560, column: 8)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2560, line: 1559, column: 45)
!4627 = distinct !DILexicalBlock(scope: !4595, file: !2560, line: 1559, column: 14)
!4628 = !DILocation(line: 1566, column: 17, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2560, line: 1565, column: 46)
!4630 = distinct !DILexicalBlock(scope: !4627, file: !2560, line: 1565, column: 14)
!4631 = !DILocation(line: 1566, column: 15, scope: !4629)
!4632 = !DILocation(line: 1567, column: 3, scope: !4629)
!4633 = !DILocation(line: 1574, column: 21, scope: !4462)
!4634 = !DILocation(line: 1575, column: 4, scope: !4460)
!4635 = !DILocation(line: 0, scope: !4460)
!4636 = !DILocation(line: 1575, column: 4, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4460, file: !2560, line: 1575, column: 4)
!4638 = !DILocation(line: 1582, column: 17, scope: !4396)
!4639 = !DILocation(line: 1582, column: 3, scope: !4396)
!4640 = !DILocation(line: 1584, column: 4, scope: !4464)
!4641 = !DILocation(line: 0, scope: !4464)
!4642 = !DILocation(line: 1584, column: 4, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4464, file: !2560, line: 1584, column: 4)
!4644 = !DILocation(line: 1587, column: 31, scope: !4467)
!4645 = !DILocation(line: 1591, column: 18, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4467, file: !2560, line: 1591, column: 8)
!4647 = !DILocation(line: 1591, column: 8, scope: !4467)
!4648 = !DILocation(line: 1592, column: 11, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4646, file: !2560, line: 1591, column: 24)
!4650 = !DILocation(line: 0, scope: !4467)
!4651 = !DILocation(line: 1593, column: 4, scope: !4649)
!4652 = !DILocation(line: 1594, column: 11, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4646, file: !2560, line: 1593, column: 11)
!4654 = !DILocation(line: 1604, column: 51, scope: !4465)
!4655 = !DILocation(line: 1604, column: 13, scope: !4465)
!4656 = !DILocation(line: 1604, column: 11, scope: !4465)
!4657 = !DILocation(line: 1606, column: 4, scope: !4465)
!4658 = !DILocation(line: 1609, column: 14, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4465, file: !2560, line: 1609, column: 8)
!4660 = !DILocation(line: 1609, column: 8, scope: !4465)
!4661 = !DILocation(line: 1619, column: 18, scope: !4465)
!4662 = !DILocation(line: 1620, column: 13, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4465, file: !2560, line: 1620, column: 8)
!4664 = !DILocation(line: 1620, column: 8, scope: !4465)
!4665 = !DILocation(line: 1622, column: 36, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4663, file: !2560, line: 1620, column: 18)
!4667 = !DILocation(line: 1622, column: 17, scope: !4666)
!4668 = !DILocation(line: 1623, column: 4, scope: !4666)
!4669 = !DILocation(line: 1632, column: 29, scope: !4465)
!4670 = !DILocation(line: 1632, column: 10, scope: !4465)
!4671 = !DILocation(line: 1632, column: 4, scope: !4465)
!4672 = !DILocation(line: 1407, column: 8, scope: !4396)
!4673 = !DILocation(line: 0, scope: !4465)
!4674 = !DILocation(line: 1634, column: 3, scope: !4465)
!4675 = !DILocation(line: 1640, column: 18, scope: !4470)
!4676 = !DILocation(line: 1640, column: 8, scope: !4465)
!4677 = !DILocation(line: 1729, column: 13, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1729, column: 7)
!4679 = !DILocation(line: 1641, column: 22, scope: !4469)
!4680 = !DILocation(line: 0, scope: !4469)
!4681 = !DILocation(line: 1646, column: 21, scope: !4469)
!4682 = !DILocation(line: 1649, column: 13, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4469, file: !2560, line: 1649, column: 9)
!4684 = !DILocation(line: 1649, column: 9, scope: !4469)
!4685 = !DILocation(line: 1650, column: 35, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !2560, line: 1649, column: 34)
!4687 = !DILocation(line: 1650, column: 23, scope: !4686)
!4688 = !DILocation(line: 1651, column: 5, scope: !4686)
!4689 = !DILocation(line: 1660, column: 15, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4465, file: !2560, line: 1660, column: 8)
!4691 = !DILocation(line: 1660, column: 19, scope: !4690)
!4692 = !DILocation(line: 1660, column: 8, scope: !4465)
!4693 = !DILocation(line: 1661, column: 23, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !2560, line: 1660, column: 28)
!4695 = !DILocation(line: 1661, column: 11, scope: !4694)
!4696 = !DILocation(line: 1665, column: 22, scope: !4694)
!4697 = !DILocation(line: 1666, column: 21, scope: !4694)
!4698 = !DILocation(line: 1668, column: 5, scope: !4694)
!4699 = !DILocation(line: 1677, column: 30, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !2560, line: 1676, column: 49)
!4701 = distinct !DILexicalBlock(scope: !4465, file: !2560, line: 1676, column: 8)
!4702 = !DILocation(line: 1677, column: 5, scope: !4700)
!4703 = !DILocation(line: 1680, column: 4, scope: !4465)
!4704 = !DILocation(line: 0, scope: !4646)
!4705 = !DILocation(line: 1597, column: 14, scope: !4467)
!4706 = !DILocation(line: 1699, column: 11, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1699, column: 7)
!4708 = !DILocation(line: 1699, column: 7, scope: !4396)
!4709 = !DILocation(line: 1725, column: 7, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1725, column: 7)
!4711 = !DILocation(line: 1725, column: 12, scope: !4710)
!4712 = !DILocation(line: 1747, column: 13, scope: !4477)
!4713 = !DILocation(line: 1747, column: 7, scope: !4396)
!4714 = !DILocation(line: 1722, column: 24, scope: !4396)
!4715 = !DILocation(line: 1725, column: 7, scope: !4396)
!4716 = !DILocation(line: 1729, column: 7, scope: !4396)
!4717 = !DILocation(line: 1736, column: 13, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4396, file: !2560, line: 1736, column: 7)
!4719 = !DILocation(line: 1735, column: 19, scope: !4396)
!4720 = !DILocation(line: 1736, column: 7, scope: !4396)
!4721 = !DILocation(line: 1748, column: 10, scope: !4476)
!4722 = !DILocation(line: 1750, column: 15, scope: !4475)
!4723 = !DILocation(line: 1750, column: 8, scope: !4476)
!4724 = !DILocation(line: 0, scope: !4474)
!4725 = !DILocation(line: 1756, column: 15, scope: !4483)
!4726 = !DILocation(line: 1756, column: 9, scope: !4474)
!4727 = !DILocation(line: 1758, column: 7, scope: !4479)
!4728 = !DILocation(line: 0, scope: !4479)
!4729 = !DILocation(line: 1758, column: 7, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4479, file: !2560, line: 1758, column: 7)
!4731 = !DILocation(line: 1764, column: 5, scope: !4474)
!4732 = !DILocation(line: 0, scope: !4476)
!4733 = !DILocation(line: 1764, column: 20, scope: !4474)
!4734 = !DILocation(line: 1764, column: 17, scope: !4474)
!4735 = !DILocation(line: 1765, column: 6, scope: !4485)
!4736 = !DILocation(line: 0, scope: !4485)
!4737 = !DILocation(line: 1765, column: 6, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4485, file: !2560, line: 1765, column: 6)
!4739 = distinct !{!4739, !4731, !4740}
!4740 = !DILocation(line: 1766, column: 5, scope: !4474)
!4741 = !DILocation(line: 1773, column: 12, scope: !4490)
!4742 = !DILocation(line: 1773, column: 7, scope: !4396)
!4743 = !DILocation(line: 1773, column: 7, scope: !4490)
!4744 = !DILocation(line: 1774, column: 4, scope: !4488)
!4745 = !DILocation(line: 0, scope: !4488)
!4746 = !DILocation(line: 1774, column: 4, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4488, file: !2560, line: 1774, column: 4)
!4748 = !DILocation(line: 1818, column: 8, scope: !4494)
!4749 = !DILocation(line: 1818, column: 27, scope: !4494)
!4750 = !DILocation(line: 1818, column: 25, scope: !4494)
!4751 = !DILocation(line: 1818, column: 8, scope: !4495)
!4752 = !DILocation(line: 1819, column: 5, scope: !4492)
!4753 = !DILocation(line: 0, scope: !4492)
!4754 = !DILocation(line: 1819, column: 5, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4492, file: !2560, line: 1819, column: 5)
!4756 = !DILocation(line: 1822, column: 14, scope: !4500)
!4757 = !DILocation(line: 1822, column: 8, scope: !4495)
!4758 = !DILocation(line: 1823, column: 5, scope: !4498)
!4759 = !DILocation(line: 0, scope: !4498)
!4760 = !DILocation(line: 1823, column: 5, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4498, file: !2560, line: 1823, column: 5)
!4762 = !DILocation(line: 1826, column: 20, scope: !4495)
!4763 = !DILocation(line: 1827, column: 4, scope: !4495)
!4764 = !DILocation(line: 0, scope: !4495)
!4765 = !DILocation(line: 1827, column: 21, scope: !4495)
!4766 = !DILocation(line: 1827, column: 18, scope: !4495)
!4767 = !DILocation(line: 1828, column: 5, scope: !4502)
!4768 = !DILocation(line: 0, scope: !4502)
!4769 = !DILocation(line: 1828, column: 5, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4502, file: !2560, line: 1828, column: 5)
!4771 = distinct !{!4771, !4763, !4772}
!4772 = !DILocation(line: 1829, column: 4, scope: !4495)
!4773 = !DILocation(line: 1831, column: 4, scope: !4505)
!4774 = !DILocation(line: 0, scope: !4505)
!4775 = !DILocation(line: 1831, column: 4, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4505, file: !2560, line: 1831, column: 4)
!4777 = !DILocation(line: 1835, column: 16, scope: !4396)
!4778 = !DILocation(line: 1835, column: 3, scope: !4396)
!4779 = !DILocation(line: 1836, column: 4, scope: !4507)
!4780 = !DILocation(line: 0, scope: !4507)
!4781 = !DILocation(line: 1836, column: 4, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4507, file: !2560, line: 1836, column: 4)
!4783 = !DILocation(line: 1837, column: 4, scope: !4508)
!4784 = distinct !{!4784, !4778, !4785}
!4785 = !DILocation(line: 1838, column: 3, scope: !4396)
!4786 = !DILocation(line: 1844, column: 1, scope: !4369)
!4787 = distinct !DISubprogram(name: "extract_conversion", scope: !2560, file: !2560, line: 642, type: !4788, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4790)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{!144, !4444, !144}
!4790 = !{!4791, !4792}
!4791 = !DILocalVariable(name: "conv", arg: 1, scope: !4787, file: !2560, line: 642, type: !4444)
!4792 = !DILocalVariable(name: "sp", arg: 2, scope: !4787, file: !2560, line: 643, type: !144)
!4793 = !DILocation(line: 0, scope: !4787)
!4794 = !DILocation(line: 645, column: 10, scope: !4787)
!4795 = !DILocation(line: 653, column: 2, scope: !4787)
!4796 = !DILocation(line: 654, column: 6, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4787, file: !2560, line: 654, column: 6)
!4798 = !DILocation(line: 654, column: 10, scope: !4797)
!4799 = !DILocation(line: 654, column: 6, scope: !4787)
!4800 = !DILocation(line: 655, column: 24, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4797, file: !2560, line: 654, column: 18)
!4802 = !DILocation(line: 655, column: 19, scope: !4801)
!4803 = !DILocation(line: 656, column: 3, scope: !4801)
!4804 = !DILocation(line: 659, column: 7, scope: !4787)
!4805 = !DILocation(line: 660, column: 7, scope: !4787)
!4806 = !DILocation(line: 661, column: 7, scope: !4787)
!4807 = !DILocation(line: 662, column: 7, scope: !4787)
!4808 = !DILocation(line: 663, column: 7, scope: !4787)
!4809 = !DILocation(line: 665, column: 2, scope: !4787)
!4810 = !DILocation(line: 666, column: 1, scope: !4787)
!4811 = distinct !DISubprogram(name: "outs", scope: !2560, file: !2560, line: 1319, type: !4812, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4814)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!103, !3358, !102, !144, !144}
!4814 = !{!4815, !4816, !4817, !4818, !4819, !4820}
!4815 = !DILocalVariable(name: "out", arg: 1, scope: !4811, file: !2560, line: 1319, type: !3358)
!4816 = !DILocalVariable(name: "ctx", arg: 2, scope: !4811, file: !2560, line: 1320, type: !102)
!4817 = !DILocalVariable(name: "sp", arg: 3, scope: !4811, file: !2560, line: 1321, type: !144)
!4818 = !DILocalVariable(name: "ep", arg: 4, scope: !4811, file: !2560, line: 1322, type: !144)
!4819 = !DILocalVariable(name: "count", scope: !4811, file: !2560, line: 1324, type: !204)
!4820 = !DILocalVariable(name: "rc", scope: !4821, file: !2560, line: 1327, type: !103)
!4821 = distinct !DILexicalBlock(scope: !4811, file: !2560, line: 1326, column: 45)
!4822 = !DILocation(line: 0, scope: !4811)
!4823 = !DILocation(line: 1326, column: 2, scope: !4811)
!4824 = !DILocation(line: 1324, column: 9, scope: !4811)
!4825 = !DILocation(line: 1326, column: 13, scope: !4811)
!4826 = !DILocation(line: 1326, column: 19, scope: !4811)
!4827 = !DILocation(line: 1327, column: 21, scope: !4821)
!4828 = !DILocation(line: 1326, column: 36, scope: !4811)
!4829 = !DILocation(line: 1326, column: 39, scope: !4811)
!4830 = !DILocation(line: 1327, column: 24, scope: !4821)
!4831 = !DILocation(line: 1327, column: 16, scope: !4821)
!4832 = !DILocation(line: 1327, column: 12, scope: !4821)
!4833 = !DILocation(line: 0, scope: !4821)
!4834 = !DILocation(line: 1329, column: 10, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4821, file: !2560, line: 1329, column: 7)
!4836 = !DILocation(line: 1329, column: 7, scope: !4821)
!4837 = distinct !{!4837, !4823, !4838}
!4838 = !DILocation(line: 1333, column: 2, scope: !4811)
!4839 = !DILocation(line: 1336, column: 1, scope: !4811)
!4840 = distinct !DISubprogram(name: "encode_uint", scope: !2560, file: !2560, line: 788, type: !4841, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4843)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!344, !2582, !4444, !344, !144}
!4843 = !{!4844, !4845, !4846, !4847, !4848, !4849, !4851, !4852}
!4844 = !DILocalVariable(name: "value", arg: 1, scope: !4840, file: !2560, line: 788, type: !2582)
!4845 = !DILocalVariable(name: "conv", arg: 2, scope: !4840, file: !2560, line: 789, type: !4444)
!4846 = !DILocalVariable(name: "bps", arg: 3, scope: !4840, file: !2560, line: 790, type: !344)
!4847 = !DILocalVariable(name: "bpe", arg: 4, scope: !4840, file: !2560, line: 791, type: !144)
!4848 = !DILocalVariable(name: "upcase", scope: !4840, file: !2560, line: 793, type: !157)
!4849 = !DILocalVariable(name: "radix", scope: !4840, file: !2560, line: 794, type: !4850)
!4850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4851 = !DILocalVariable(name: "bp", scope: !4840, file: !2560, line: 795, type: !344)
!4852 = !DILocalVariable(name: "lsv", scope: !4853, file: !2560, line: 798, type: !32)
!4853 = distinct !DILexicalBlock(scope: !4840, file: !2560, line: 797, column: 5)
!4854 = !DILocation(line: 0, scope: !4840)
!4855 = !DILocation(line: 793, column: 35, scope: !4840)
!4856 = !DILocation(line: 793, column: 24, scope: !4840)
!4857 = !DILocation(line: 793, column: 16, scope: !4840)
!4858 = !DILocation(line: 794, column: 29, scope: !4840)
!4859 = !DILocation(line: 795, column: 24, scope: !4840)
!4860 = !DILocation(line: 795, column: 17, scope: !4840)
!4861 = !DILocation(line: 797, column: 2, scope: !4840)
!4862 = !DILocation(line: 802, column: 9, scope: !4853)
!4863 = !DILocation(line: 798, column: 22, scope: !4853)
!4864 = !DILocation(line: 0, scope: !4853)
!4865 = !DILocation(line: 800, column: 16, scope: !4853)
!4866 = !DILocation(line: 800, column: 11, scope: !4853)
!4867 = !DILocation(line: 800, column: 4, scope: !4853)
!4868 = !DILocation(line: 800, column: 9, scope: !4853)
!4869 = !DILocation(line: 803, column: 18, scope: !4840)
!4870 = !DILocation(line: 803, column: 24, scope: !4840)
!4871 = !DILocation(line: 803, column: 2, scope: !4853)
!4872 = distinct !{!4872, !4861, !4873}
!4873 = !DILocation(line: 803, column: 37, scope: !4840)
!4874 = !DILocation(line: 808, column: 12, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4840, file: !2560, line: 808, column: 6)
!4876 = !DILocation(line: 808, column: 6, scope: !4840)
!4877 = !DILocation(line: 809, column: 7, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !2560, line: 808, column: 23)
!4879 = !DILocation(line: 813, column: 3, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !2560, line: 811, column: 27)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !2560, line: 811, column: 14)
!4882 = distinct !DILexicalBlock(scope: !4878, file: !2560, line: 809, column: 7)
!4883 = !DILocation(line: 0, scope: !4882)
!4884 = !DILocation(line: 818, column: 2, scope: !4840)
!4885 = distinct !DISubprogram(name: "store_count", scope: !2560, file: !2560, line: 1280, type: !4886, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4890)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{null, !4888, !102, !103}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4889, size: 32)
!4889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4411)
!4890 = !{!4891, !4892, !4893}
!4891 = !DILocalVariable(name: "conv", arg: 1, scope: !4885, file: !2560, line: 1280, type: !4888)
!4892 = !DILocalVariable(name: "dp", arg: 2, scope: !4885, file: !2560, line: 1281, type: !102)
!4893 = !DILocalVariable(name: "count", arg: 3, scope: !4885, file: !2560, line: 1282, type: !103)
!4894 = !DILocation(line: 0, scope: !4885)
!4895 = !DILocation(line: 1284, column: 38, scope: !4885)
!4896 = !DILocation(line: 1284, column: 2, scope: !4885)
!4897 = !DILocation(line: 1286, column: 4, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4885, file: !2560, line: 1284, column: 50)
!4899 = !DILocation(line: 1286, column: 14, scope: !4898)
!4900 = !DILocation(line: 1287, column: 3, scope: !4898)
!4901 = !DILocation(line: 1289, column: 24, scope: !4898)
!4902 = !DILocation(line: 1289, column: 22, scope: !4898)
!4903 = !DILocation(line: 1290, column: 3, scope: !4898)
!4904 = !DILocation(line: 1292, column: 18, scope: !4898)
!4905 = !DILocation(line: 1292, column: 4, scope: !4898)
!4906 = !DILocation(line: 1292, column: 16, scope: !4898)
!4907 = !DILocation(line: 1293, column: 3, scope: !4898)
!4908 = !DILocation(line: 1295, column: 4, scope: !4898)
!4909 = !DILocation(line: 1295, column: 15, scope: !4898)
!4910 = !DILocation(line: 1296, column: 3, scope: !4898)
!4911 = !DILocation(line: 1298, column: 22, scope: !4898)
!4912 = !DILocation(line: 1298, column: 4, scope: !4898)
!4913 = !DILocation(line: 1298, column: 20, scope: !4898)
!4914 = !DILocation(line: 1299, column: 3, scope: !4898)
!4915 = !DILocation(line: 1301, column: 21, scope: !4898)
!4916 = !DILocation(line: 1301, column: 4, scope: !4898)
!4917 = !DILocation(line: 1301, column: 19, scope: !4898)
!4918 = !DILocation(line: 1302, column: 3, scope: !4898)
!4919 = !DILocation(line: 1304, column: 4, scope: !4898)
!4920 = !DILocation(line: 1304, column: 17, scope: !4898)
!4921 = !DILocation(line: 1305, column: 3, scope: !4898)
!4922 = !DILocation(line: 1307, column: 4, scope: !4898)
!4923 = !DILocation(line: 1307, column: 20, scope: !4898)
!4924 = !DILocation(line: 1308, column: 3, scope: !4898)
!4925 = !DILocation(line: 1316, column: 1, scope: !4885)
!4926 = distinct !DISubprogram(name: "isupper", scope: !4927, file: !4927, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4928)
!4927 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4928 = !{!4929}
!4929 = !DILocalVariable(name: "a", arg: 1, scope: !4926, file: !4927, line: 16, type: !103)
!4930 = !DILocation(line: 0, scope: !4926)
!4931 = !DILocation(line: 18, column: 29, scope: !4926)
!4932 = !DILocation(line: 18, column: 45, scope: !4926)
!4933 = !DILocation(line: 18, column: 2, scope: !4926)
!4934 = distinct !DISubprogram(name: "conversion_radix", scope: !2560, file: !2560, line: 761, type: !4935, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4937)
!4935 = !DISubroutineType(types: !4936)
!4936 = !{!204, !146}
!4937 = !{!4938}
!4938 = !DILocalVariable(name: "specifier", arg: 1, scope: !4934, file: !2560, line: 761, type: !146)
!4939 = !DILocation(line: 0, scope: !4934)
!4940 = !DILocation(line: 763, column: 2, scope: !4934)
!4941 = !DILocation(line: 770, column: 3, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4934, file: !2560, line: 763, column: 21)
!4943 = !DILocation(line: 774, column: 3, scope: !4942)
!4944 = !DILocation(line: 0, scope: !4942)
!4945 = !DILocation(line: 776, column: 1, scope: !4934)
!4946 = distinct !DISubprogram(name: "extract_flags", scope: !2560, file: !2560, line: 339, type: !4788, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4947)
!4947 = !{!4948, !4949, !4950}
!4948 = !DILocalVariable(name: "conv", arg: 1, scope: !4946, file: !2560, line: 339, type: !4444)
!4949 = !DILocalVariable(name: "sp", arg: 2, scope: !4946, file: !2560, line: 340, type: !144)
!4950 = !DILocalVariable(name: "loop", scope: !4946, file: !2560, line: 342, type: !157)
!4951 = !DILocation(line: 0, scope: !4946)
!4952 = !DILocation(line: 344, column: 2, scope: !4946)
!4953 = !DILocation(line: 345, column: 11, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4946, file: !2560, line: 344, column: 5)
!4955 = !DILocation(line: 345, column: 3, scope: !4954)
!4956 = !DILocation(line: 351, column: 4, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4954, file: !2560, line: 345, column: 16)
!4958 = !DILocation(line: 354, column: 4, scope: !4957)
!4959 = !DILocation(line: 357, column: 4, scope: !4957)
!4960 = !DILocation(line: 360, column: 4, scope: !4957)
!4961 = !DILocation(line: 0, scope: !4957)
!4962 = !DILocation(line: 370, column: 12, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4946, file: !2560, line: 370, column: 6)
!4964 = !DILocation(line: 370, column: 22, scope: !4963)
!4965 = !DILocation(line: 371, column: 19, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4963, file: !2560, line: 370, column: 42)
!4967 = !DILocation(line: 372, column: 2, scope: !4966)
!4968 = !DILocation(line: 376, column: 2, scope: !4946)
!4969 = distinct !DISubprogram(name: "extract_width", scope: !2560, file: !2560, line: 388, type: !4788, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !4970)
!4970 = !{!4971, !4972, !4973, !4974}
!4971 = !DILocalVariable(name: "conv", arg: 1, scope: !4969, file: !2560, line: 388, type: !4444)
!4972 = !DILocalVariable(name: "sp", arg: 2, scope: !4969, file: !2560, line: 389, type: !144)
!4973 = !DILocalVariable(name: "wp", scope: !4969, file: !2560, line: 398, type: !144)
!4974 = !DILocalVariable(name: "width", scope: !4969, file: !2560, line: 399, type: !204)
!4975 = !DILocation(line: 0, scope: !4969)
!4976 = !DILocation(line: 391, column: 8, scope: !4969)
!4977 = !DILocation(line: 391, column: 22, scope: !4969)
!4978 = !DILocation(line: 393, column: 6, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4969, file: !2560, line: 393, column: 6)
!4980 = !DILocation(line: 393, column: 10, scope: !4979)
!4981 = !DILocation(line: 393, column: 6, scope: !4969)
!4982 = !DILocation(line: 394, column: 20, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4979, file: !2560, line: 393, column: 18)
!4984 = !DILocation(line: 395, column: 10, scope: !4983)
!4985 = !DILocation(line: 395, column: 3, scope: !4983)
!4986 = !DILocation(line: 399, column: 17, scope: !4969)
!4987 = !DILocation(line: 401, column: 6, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4969, file: !2560, line: 401, column: 6)
!4989 = !DILocation(line: 401, column: 9, scope: !4988)
!4990 = !DILocation(line: 401, column: 6, scope: !4969)
!4991 = !DILocation(line: 402, column: 23, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !2560, line: 401, column: 16)
!4993 = !DILocation(line: 403, column: 9, scope: !4992)
!4994 = !DILocation(line: 403, column: 21, scope: !4992)
!4995 = !DILocation(line: 405, column: 11, scope: !4992)
!4996 = !DILocation(line: 404, column: 21, scope: !4992)
!4997 = !DILocation(line: 406, column: 2, scope: !4992)
!4998 = !DILocation(line: 409, column: 1, scope: !4969)
!4999 = distinct !DISubprogram(name: "extract_prec", scope: !2560, file: !2560, line: 420, type: !4788, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !5000)
!5000 = !{!5001, !5002, !5003}
!5001 = !DILocalVariable(name: "conv", arg: 1, scope: !4999, file: !2560, line: 420, type: !4444)
!5002 = !DILocalVariable(name: "sp", arg: 2, scope: !4999, file: !2560, line: 421, type: !144)
!5003 = !DILocalVariable(name: "prec", scope: !4999, file: !2560, line: 435, type: !204)
!5004 = !DILocation(line: 0, scope: !4999)
!5005 = !DILocation(line: 423, column: 24, scope: !4999)
!5006 = !DILocation(line: 423, column: 28, scope: !4999)
!5007 = !DILocation(line: 423, column: 8, scope: !4999)
!5008 = !DILocation(line: 423, column: 21, scope: !4999)
!5009 = !DILocation(line: 425, column: 6, scope: !4999)
!5010 = !DILocation(line: 428, column: 2, scope: !4999)
!5011 = !DILocation(line: 430, column: 6, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4999, file: !2560, line: 430, column: 6)
!5013 = !DILocation(line: 430, column: 10, scope: !5012)
!5014 = !DILocation(line: 430, column: 6, scope: !4999)
!5015 = !DILocation(line: 431, column: 19, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5012, file: !2560, line: 430, column: 18)
!5017 = !DILocation(line: 432, column: 10, scope: !5016)
!5018 = !DILocation(line: 432, column: 3, scope: !5016)
!5019 = !DILocation(line: 435, column: 16, scope: !4999)
!5020 = !DILocation(line: 437, column: 8, scope: !4999)
!5021 = !DILocation(line: 437, column: 19, scope: !4999)
!5022 = !DILocation(line: 439, column: 10, scope: !4999)
!5023 = !DILocation(line: 438, column: 20, scope: !4999)
!5024 = !DILocation(line: 441, column: 9, scope: !4999)
!5025 = !DILocation(line: 442, column: 1, scope: !4999)
!5026 = distinct !DISubprogram(name: "extract_length", scope: !2560, file: !2560, line: 453, type: !4788, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !5027)
!5027 = !{!5028, !5029}
!5028 = !DILocalVariable(name: "conv", arg: 1, scope: !5026, file: !2560, line: 453, type: !4444)
!5029 = !DILocalVariable(name: "sp", arg: 2, scope: !5026, file: !2560, line: 454, type: !144)
!5030 = !DILocation(line: 0, scope: !5026)
!5031 = !DILocation(line: 456, column: 10, scope: !5026)
!5032 = !DILocation(line: 456, column: 2, scope: !5026)
!5033 = !DILocation(line: 458, column: 8, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5035, file: !2560, line: 458, column: 7)
!5035 = distinct !DILexicalBlock(scope: !5026, file: !2560, line: 456, column: 15)
!5036 = !DILocation(line: 458, column: 7, scope: !5034)
!5037 = !DILocation(line: 458, column: 13, scope: !5034)
!5038 = !DILocation(line: 0, scope: !5034)
!5039 = !DILocation(line: 458, column: 7, scope: !5035)
!5040 = !DILocation(line: 459, column: 21, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5034, file: !2560, line: 458, column: 21)
!5042 = !DILocation(line: 460, column: 4, scope: !5041)
!5043 = !DILocation(line: 461, column: 3, scope: !5041)
!5044 = !DILocation(line: 462, column: 21, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5034, file: !2560, line: 461, column: 10)
!5046 = !DILocation(line: 466, column: 8, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5035, file: !2560, line: 466, column: 7)
!5048 = !DILocation(line: 466, column: 7, scope: !5047)
!5049 = !DILocation(line: 466, column: 13, scope: !5047)
!5050 = !DILocation(line: 0, scope: !5047)
!5051 = !DILocation(line: 466, column: 7, scope: !5035)
!5052 = !DILocation(line: 467, column: 21, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5047, file: !2560, line: 466, column: 21)
!5054 = !DILocation(line: 468, column: 4, scope: !5053)
!5055 = !DILocation(line: 469, column: 3, scope: !5053)
!5056 = !DILocation(line: 470, column: 21, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5047, file: !2560, line: 469, column: 10)
!5058 = !DILocation(line: 474, column: 9, scope: !5035)
!5059 = !DILocation(line: 474, column: 20, scope: !5035)
!5060 = !DILocation(line: 475, column: 3, scope: !5035)
!5061 = !DILocation(line: 476, column: 3, scope: !5035)
!5062 = !DILocation(line: 478, column: 9, scope: !5035)
!5063 = !DILocation(line: 478, column: 20, scope: !5035)
!5064 = !DILocation(line: 479, column: 3, scope: !5035)
!5065 = !DILocation(line: 480, column: 3, scope: !5035)
!5066 = !DILocation(line: 482, column: 9, scope: !5035)
!5067 = !DILocation(line: 482, column: 20, scope: !5035)
!5068 = !DILocation(line: 483, column: 3, scope: !5035)
!5069 = !DILocation(line: 484, column: 3, scope: !5035)
!5070 = !DILocation(line: 486, column: 9, scope: !5035)
!5071 = !DILocation(line: 486, column: 20, scope: !5035)
!5072 = !DILocation(line: 487, column: 3, scope: !5035)
!5073 = !DILocation(line: 492, column: 21, scope: !5035)
!5074 = !DILocation(line: 493, column: 3, scope: !5035)
!5075 = !DILocation(line: 495, column: 9, scope: !5035)
!5076 = !DILocation(line: 495, column: 20, scope: !5035)
!5077 = !DILocation(line: 496, column: 3, scope: !5035)
!5078 = !DILocation(line: 498, column: 2, scope: !5026)
!5079 = distinct !DISubprogram(name: "extract_specifier", scope: !2560, file: !2560, line: 513, type: !4788, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !5080)
!5080 = !{!5081, !5082, !5083, !5084}
!5081 = !DILocalVariable(name: "conv", arg: 1, scope: !5079, file: !2560, line: 513, type: !4444)
!5082 = !DILocalVariable(name: "sp", arg: 2, scope: !5079, file: !2560, line: 514, type: !144)
!5083 = !DILocalVariable(name: "unsupported", scope: !5079, file: !2560, line: 516, type: !157)
!5084 = !DILabel(scope: !5085, name: "int_conv", file: !2560, line: 526)
!5085 = distinct !DILexicalBlock(scope: !5079, file: !2560, line: 520, column: 27)
!5086 = !DILocation(line: 0, scope: !5079)
!5087 = !DILocation(line: 518, column: 20, scope: !5079)
!5088 = !DILocation(line: 518, column: 8, scope: !5079)
!5089 = !DILocation(line: 518, column: 18, scope: !5079)
!5090 = !DILocation(line: 520, column: 2, scope: !5079)
!5091 = !DILocation(line: 525, column: 3, scope: !5085)
!5092 = !DILocation(line: 0, scope: !5085)
!5093 = !DILocation(line: 526, column: 1, scope: !5085)
!5094 = !DILocation(line: 528, column: 24, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5085, file: !2560, line: 528, column: 7)
!5096 = !DILocation(line: 528, column: 7, scope: !5085)
!5097 = !DILocation(line: 535, column: 23, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5085, file: !2560, line: 535, column: 7)
!5099 = !DILocation(line: 535, column: 7, scope: !5085)
!5100 = !DILocation(line: 536, column: 36, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5098, file: !2560, line: 535, column: 31)
!5102 = !DILocation(line: 537, column: 3, scope: !5101)
!5103 = !DILocation(line: 570, column: 9, scope: !5085)
!5104 = !DILocation(line: 570, column: 23, scope: !5085)
!5105 = !DILocation(line: 575, column: 4, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5107, file: !2560, line: 573, column: 48)
!5107 = distinct !DILexicalBlock(scope: !5085, file: !2560, line: 573, column: 7)
!5108 = !DILocation(line: 603, column: 9, scope: !5085)
!5109 = !DILocation(line: 603, column: 23, scope: !5085)
!5110 = !DILocation(line: 605, column: 24, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5085, file: !2560, line: 605, column: 7)
!5112 = !DILocation(line: 605, column: 7, scope: !5085)
!5113 = !DILocation(line: 612, column: 9, scope: !5085)
!5114 = !DILocation(line: 612, column: 23, scope: !5085)
!5115 = !DILocation(line: 619, column: 24, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5085, file: !2560, line: 619, column: 7)
!5117 = !DILocation(line: 619, column: 7, scope: !5085)
!5118 = !DILocation(line: 625, column: 9, scope: !5085)
!5119 = !DILocation(line: 625, column: 17, scope: !5085)
!5120 = !DILocation(line: 626, column: 3, scope: !5085)
!5121 = !DILocation(line: 629, column: 20, scope: !5079)
!5122 = !DILocation(line: 629, column: 8, scope: !5079)
!5123 = !DILocation(line: 518, column: 23, scope: !5079)
!5124 = !DILocation(line: 631, column: 2, scope: !5079)
!5125 = distinct !DISubprogram(name: "extract_decimal", scope: !2560, file: !2560, line: 318, type: !5126, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !5129)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!204, !5128}
!5128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!5129 = !{!5130, !5131, !5132}
!5130 = !DILocalVariable(name: "str", arg: 1, scope: !5125, file: !2560, line: 318, type: !5128)
!5131 = !DILocalVariable(name: "sp", scope: !5125, file: !2560, line: 320, type: !144)
!5132 = !DILocalVariable(name: "val", scope: !5125, file: !2560, line: 321, type: !204)
!5133 = !DILocation(line: 0, scope: !5125)
!5134 = !DILocation(line: 320, column: 19, scope: !5125)
!5135 = !DILocation(line: 323, column: 37, scope: !5125)
!5136 = !DILocation(line: 323, column: 17, scope: !5125)
!5137 = !DILocation(line: 323, column: 9, scope: !5125)
!5138 = !DILocation(line: 323, column: 2, scope: !5125)
!5139 = !DILocation(line: 324, column: 13, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5125, file: !2560, line: 323, column: 43)
!5141 = !DILocation(line: 324, column: 24, scope: !5140)
!5142 = !DILocation(line: 324, column: 19, scope: !5140)
!5143 = !DILocation(line: 324, column: 27, scope: !5140)
!5144 = distinct !{!5144, !5138, !5145}
!5145 = !DILocation(line: 325, column: 2, scope: !5125)
!5146 = !DILocation(line: 326, column: 7, scope: !5125)
!5147 = !DILocation(line: 327, column: 2, scope: !5125)
!5148 = distinct !DISubprogram(name: "isdigit", scope: !4927, file: !4927, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2556, retainedNodes: !5149)
!5149 = !{!5150}
!5150 = !DILocalVariable(name: "a", arg: 1, scope: !5148, file: !4927, line: 43, type: !103)
!5151 = !DILocation(line: 0, scope: !5148)
!5152 = !DILocation(line: 45, column: 29, scope: !5148)
!5153 = !DILocation(line: 45, column: 45, scope: !5148)
!5154 = !DILocation(line: 45, column: 2, scope: !5148)
!5155 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5156, file: !5156, line: 9, type: !3174, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !317)
!5156 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!5157 = !DILocation(line: 11, column: 1, scope: !5155)
!5158 = !{i64 2147561972, i64 2147562015, i64 2147562055}
!5159 = !DILocation(line: 12, column: 1, scope: !5155)
!5160 = !{i64 2147566199, i64 2147566242, i64 2147566282}
!5161 = !DILocation(line: 13, column: 1, scope: !5155)
!5162 = !{i64 2147566408, i64 2147566451, i64 2147566491}
!5163 = !DILocation(line: 14, column: 1, scope: !5155)
!5164 = !{i64 2147566625, i64 2147566668, i64 2147566708}
!5165 = !DILocation(line: 15, column: 1, scope: !5155)
!5166 = !{i64 2147566794, i64 2147566837, i64 2147566877}
!5167 = !DILocation(line: 16, column: 1, scope: !5155)
!5168 = !{i64 2147566957, i64 2147567000, i64 2147567040}
!5169 = !DILocation(line: 17, column: 1, scope: !5155)
!5170 = !{i64 2147567141, i64 2147567184, i64 2147567224}
!5171 = !DILocation(line: 18, column: 1, scope: !5155)
!5172 = !{i64 2147567320, i64 2147567363, i64 2147567403}
!5173 = !DILocation(line: 19, column: 1, scope: !5155)
!5174 = !{i64 2147567562, i64 2147567605, i64 2147567645}
!5175 = !DILocation(line: 20, column: 1, scope: !5155)
!5176 = !{i64 2147567797, i64 2147567840, i64 2147567880}
!5177 = !DILocation(line: 21, column: 1, scope: !5155)
!5178 = !{i64 2147567984, i64 2147568027, i64 2147568067}
!5179 = !DILocation(line: 22, column: 1, scope: !5155)
!5180 = !{i64 2147568200, i64 2147568243, i64 2147568283}
!5181 = !DILocation(line: 23, column: 1, scope: !5155)
!5182 = !{i64 2147568403, i64 2147568446, i64 2147568486}
!5183 = !DILocation(line: 24, column: 1, scope: !5155)
!5184 = !{i64 2147568606, i64 2147568649, i64 2147568689}
!5185 = !DILocation(line: 25, column: 1, scope: !5155)
!5186 = !{i64 2147568781, i64 2147568824, i64 2147568864}
!5187 = !DILocation(line: 26, column: 1, scope: !5155)
!5188 = !{i64 2147568989, i64 2147569032, i64 2147569072}
!5189 = !DILocation(line: 27, column: 1, scope: !5155)
!5190 = !{i64 2147569193, i64 2147569236, i64 2147569276}
!5191 = !DILocation(line: 28, column: 1, scope: !5155)
!5192 = !{i64 2147569386, i64 2147569429, i64 2147569469}
!5193 = !DILocation(line: 29, column: 1, scope: !5155)
!5194 = !{i64 2147569588, i64 2147569631, i64 2147569671}
!5195 = !DILocation(line: 30, column: 1, scope: !5155)
!5196 = !{i64 2147569815, i64 2147569858, i64 2147569898}
!5197 = !DILocation(line: 31, column: 1, scope: !5155)
!5198 = !{i64 2147570017, i64 2147570060, i64 2147570100}
!5199 = !DILocation(line: 32, column: 1, scope: !5155)
!5200 = !{i64 2147570232, i64 2147570275, i64 2147570315}
!5201 = !DILocation(line: 33, column: 1, scope: !5155)
!5202 = !{i64 2147570404, i64 2147570447, i64 2147570487}
!5203 = !DILocation(line: 34, column: 1, scope: !5155)
!5204 = !{i64 2147570606, i64 2147570649, i64 2147570689}
!5205 = !DILocation(line: 35, column: 1, scope: !5155)
!5206 = !{i64 2147570832, i64 2147570875, i64 2147570915}
!5207 = !DILocation(line: 36, column: 1, scope: !5155)
!5208 = !{i64 2147571031, i64 2147571074, i64 2147571114}
!5209 = !DILocation(line: 37, column: 1, scope: !5155)
!5210 = !{i64 2147571206, i64 2147571249, i64 2147571289}
!5211 = !DILocation(line: 38, column: 1, scope: !5155)
!5212 = !{i64 2147571459, i64 2147571502, i64 2147571542}
!5213 = !DILocation(line: 39, column: 1, scope: !5155)
!5214 = !{i64 2147571700, i64 2147571743, i64 2147571783}
!5215 = !DILocation(line: 40, column: 1, scope: !5155)
!5216 = !{i64 2147571935, i64 2147571978, i64 2147572018}
!5217 = !DILocation(line: 41, column: 1, scope: !5155)
!5218 = !{i64 2147572167, i64 2147572210, i64 2147572250}
!5219 = !DILocation(line: 42, column: 1, scope: !5155)
!5220 = !{i64 2147572393, i64 2147572436, i64 2147572476}
!5221 = !DILocation(line: 43, column: 1, scope: !5155)
!5222 = !{i64 2147572619, i64 2147572662, i64 2147572702}
!5223 = !DILocation(line: 44, column: 1, scope: !5155)
!5224 = !{i64 2147572845, i64 2147572888, i64 2147572928}
!5225 = !DILocation(line: 45, column: 1, scope: !5155)
!5226 = !{i64 2147573080, i64 2147573123, i64 2147573163}
!5227 = !DILocation(line: 46, column: 1, scope: !5155)
!5228 = !{i64 2147573306, i64 2147573349, i64 2147573389}
!5229 = !DILocation(line: 47, column: 1, scope: !5155)
!5230 = !{i64 2147573553, i64 2147573596, i64 2147573636}
!5231 = !DILocation(line: 48, column: 1, scope: !5155)
!5232 = !{i64 2147573782, i64 2147573825, i64 2147573865}
!5233 = !DILocation(line: 49, column: 1, scope: !5155)
!5234 = !{i64 2147574014, i64 2147574057, i64 2147574097}
!5235 = !DILocation(line: 50, column: 1, scope: !5155)
!5236 = !{i64 2147574258, i64 2147574301, i64 2147574341}
!5237 = !DILocation(line: 51, column: 1, scope: !5155)
!5238 = !{i64 2147574496, i64 2147574539, i64 2147574579}
!5239 = !DILocation(line: 52, column: 1, scope: !5155)
!5240 = !{i64 2147574770, i64 2147574813, i64 2147574853}
!5241 = !DILocation(line: 53, column: 1, scope: !5155)
!5242 = !{i64 2147579069, i64 2147579112, i64 2147579152}
!5243 = !DILocation(line: 54, column: 1, scope: !5155)
!5244 = !{i64 2147579322, i64 2147579365, i64 2147579405}
!5245 = !DILocation(line: 55, column: 1, scope: !5155)
!5246 = !{i64 2147579566, i64 2147579609, i64 2147579649}
!5247 = !DILocation(line: 56, column: 1, scope: !5155)
!5248 = !{i64 2147579801, i64 2147579844, i64 2147579884}
!5249 = !DILocation(line: 57, column: 1, scope: !5155)
!5250 = !{i64 2147580051, i64 2147580094, i64 2147580134}
!5251 = !DILocation(line: 58, column: 1, scope: !5155)
!5252 = !{i64 2147580298, i64 2147580341, i64 2147580381}
!5253 = !DILocation(line: 59, column: 1, scope: !5155)
!5254 = !{i64 2147580533, i64 2147580576, i64 2147580616}
!5255 = !DILocation(line: 60, column: 1, scope: !5155)
!5256 = !{i64 2147580768, i64 2147580811, i64 2147580851}
!5257 = !DILocation(line: 61, column: 1, scope: !5155)
!5258 = !{i64 2147581003, i64 2147581046, i64 2147581086}
!5259 = !DILocation(line: 62, column: 1, scope: !5155)
!5260 = !{i64 2147581241, i64 2147581284, i64 2147581324}
!5261 = !DILocation(line: 63, column: 1, scope: !5155)
!5262 = !{i64 2147581482, i64 2147581525, i64 2147581565}
!5263 = !DILocation(line: 64, column: 1, scope: !5155)
!5264 = !{i64 2147581762, i64 2147581805, i64 2147581845}
!5265 = !DILocation(line: 65, column: 1, scope: !5155)
!5266 = !{i64 2147582021, i64 2147582064, i64 2147582104}
!5267 = !DILocation(line: 66, column: 1, scope: !5155)
!5268 = !{i64 2147582250, i64 2147582293, i64 2147582333}
!5269 = !DILocation(line: 67, column: 1, scope: !5155)
!5270 = !{i64 2147582476, i64 2147582519, i64 2147582559}
!5271 = !DILocation(line: 68, column: 1, scope: !5155)
!5272 = !{i64 2147582714, i64 2147582757, i64 2147582797}
!5273 = !DILocation(line: 69, column: 1, scope: !5155)
!5274 = !{i64 2147582943, i64 2147582986, i64 2147583026}
!5275 = !DILocation(line: 70, column: 1, scope: !5155)
!5276 = !{i64 2147583151, i64 2147583194, i64 2147583234}
!5277 = !DILocation(line: 71, column: 1, scope: !5155)
!5278 = !{i64 2147583362, i64 2147583405, i64 2147583445}
!5279 = !DILocation(line: 72, column: 1, scope: !5155)
!5280 = !{i64 2147583597, i64 2147583640, i64 2147583680}
!5281 = !DILocation(line: 73, column: 1, scope: !5155)
!5282 = !{i64 2147583826, i64 2147583869, i64 2147583909}
!5283 = !DILocation(line: 74, column: 1, scope: !5155)
!5284 = !{i64 2147584064, i64 2147584107, i64 2147584147}
!5285 = !DILocation(line: 75, column: 1, scope: !5155)
!5286 = !{i64 2147584296, i64 2147584339, i64 2147584379}
!5287 = !DILocation(line: 76, column: 1, scope: !5155)
!5288 = !{i64 2147584522, i64 2147584565, i64 2147584605}
!5289 = !DILocation(line: 77, column: 1, scope: !5155)
!5290 = !{i64 2147584739, i64 2147584782, i64 2147584822}
!5291 = !DILocation(line: 78, column: 1, scope: !5155)
!5292 = !{i64 2147584971, i64 2147585014, i64 2147585054}
!5293 = !DILocation(line: 79, column: 1, scope: !5155)
!5294 = !{i64 2147585197, i64 2147585240, i64 2147585280}
!5295 = !DILocation(line: 80, column: 1, scope: !5155)
!5296 = !{i64 2147585411, i64 2147585454, i64 2147585494}
!5297 = !DILocation(line: 81, column: 1, scope: !5155)
!5298 = !{i64 2147585631, i64 2147585674, i64 2147585714}
!5299 = !DILocation(line: 82, column: 1, scope: !5155)
!5300 = !{i64 2147585863, i64 2147585906, i64 2147585946}
!5301 = !DILocation(line: 83, column: 1, scope: !5155)
!5302 = !{i64 2147586071, i64 2147586114, i64 2147586154}
!5303 = !DILocation(line: 84, column: 1, scope: !5155)
!5304 = !{i64 2147586276, i64 2147586319, i64 2147586359}
!5305 = !DILocation(line: 85, column: 1, scope: !5155)
!5306 = !{i64 2147586493, i64 2147586536, i64 2147586576}
!5307 = !DILocation(line: 86, column: 1, scope: !5155)
!5308 = !{i64 2147586707, i64 2147586750, i64 2147586790}
!5309 = !DILocation(line: 87, column: 1, scope: !5155)
!5310 = !{i64 2147586933, i64 2147586976, i64 2147587016}
!5311 = !DILocation(line: 88, column: 1, scope: !5155)
!5312 = !{i64 2147591214, i64 2147591257, i64 2147591297}
!5313 = !DILocation(line: 89, column: 1, scope: !5155)
!5314 = !{i64 2147591419, i64 2147591462, i64 2147591502}
!5315 = !DILocation(line: 90, column: 1, scope: !5155)
!5316 = !{i64 2147591651, i64 2147591694, i64 2147591734}
!5317 = !DILocation(line: 91, column: 1, scope: !5155)
!5318 = !{i64 2147591886, i64 2147591929, i64 2147591969}
!5319 = !DILocation(line: 92, column: 1, scope: !5155)
!5320 = !{i64 2147592136, i64 2147592179, i64 2147592219}
!5321 = !DILocation(line: 93, column: 1, scope: !5155)
!5322 = !{i64 2147592386, i64 2147592429, i64 2147592469}
!5323 = !DILocation(line: 94, column: 1, scope: !5155)
!5324 = !{i64 2147592624, i64 2147592667, i64 2147592707}
!5325 = !DILocation(line: 95, column: 1, scope: !5155)
!5326 = !{i64 2147592835, i64 2147592878, i64 2147592918}
!5327 = !DILocation(line: 96, column: 1, scope: !5155)
!5328 = !{i64 2147593052, i64 2147593095, i64 2147593135}
!5329 = !DILocation(line: 97, column: 1, scope: !5155)
!5330 = !{i64 2147593248, i64 2147593291, i64 2147593331}
!5331 = !DILocation(line: 98, column: 1, scope: !5155)
!5332 = !{i64 2147593450, i64 2147593493, i64 2147593533}
!5333 = !DILocation(line: 99, column: 1, scope: !5155)
!5334 = !{i64 2147593643, i64 2147593686, i64 2147593726}
!5335 = !DILocation(line: 100, column: 1, scope: !5155)
!5336 = !{i64 2147593851, i64 2147593894, i64 2147593934}
!5337 = !DILocation(line: 101, column: 1, scope: !5155)
!5338 = !{i64 2147594047, i64 2147594090, i64 2147594130}
!5339 = !DILocation(line: 102, column: 1, scope: !5155)
!5340 = !{i64 2147594255, i64 2147594298, i64 2147594338}
!5341 = !DILocation(line: 103, column: 1, scope: !5155)
!5342 = !{i64 2147594466, i64 2147594509, i64 2147594549}
!5343 = !DILocation(line: 104, column: 1, scope: !5155)
!5344 = !{i64 2147594665, i64 2147594708, i64 2147594748}
!5345 = !DILocation(line: 105, column: 1, scope: !5155)
!5346 = !{i64 2147594840, i64 2147594883, i64 2147594923}
!5347 = !DILocation(line: 106, column: 1, scope: !5155)
!5348 = !{i64 2147595024, i64 2147595067, i64 2147595107}
!5349 = !DILocation(line: 107, column: 1, scope: !5155)
!5350 = !{i64 2147595226, i64 2147595269, i64 2147595309}
!5351 = !DILocation(line: 108, column: 1, scope: !5155)
!5352 = !{i64 2147595425, i64 2147595468, i64 2147595508}
!5353 = !DILocation(line: 109, column: 1, scope: !5155)
!5354 = !{i64 2147595591, i64 2147595634, i64 2147595674}
!5355 = !DILocation(line: 110, column: 1, scope: !5155)
!5356 = !{i64 2147595775, i64 2147595818, i64 2147595858}
!5357 = !DILocation(line: 111, column: 1, scope: !5155)
!5358 = !{i64 2147595965, i64 2147596008, i64 2147596048}
!5359 = !DILocation(line: 112, column: 1, scope: !5155)
!5360 = !{i64 2147596149, i64 2147596192, i64 2147596232}
!5361 = !DILocation(line: 113, column: 1, scope: !5155)
!5362 = !{i64 2147596363, i64 2147596406, i64 2147596446}
!5363 = !DILocation(line: 114, column: 1, scope: !5155)
!5364 = !{i64 2147596574, i64 2147596617, i64 2147596657}
!5365 = !DILocation(line: 115, column: 1, scope: !5155)
!5366 = !{i64 2147596797, i64 2147596840, i64 2147596880}
!5367 = !DILocation(line: 116, column: 1, scope: !5155)
!5368 = !{i64 2147596981, i64 2147597024, i64 2147597064}
!5369 = !DILocation(line: 117, column: 1, scope: !5155)
!5370 = !{i64 2147597195, i64 2147597238, i64 2147597278}
!5371 = !DILocation(line: 118, column: 1, scope: !5155)
!5372 = !{i64 2147597361, i64 2147597404, i64 2147597444}
!5373 = !DILocation(line: 119, column: 1, scope: !5155)
!5374 = !{i64 2147597542, i64 2147597585, i64 2147597625}
!5375 = !DILocation(line: 120, column: 1, scope: !5155)
!5376 = !{i64 2147597735, i64 2147597778, i64 2147597818}
!5377 = !DILocation(line: 121, column: 1, scope: !5155)
!5378 = !{i64 2147597961, i64 2147598004, i64 2147598044}
!5379 = !DILocation(line: 122, column: 1, scope: !5155)
!5380 = !{i64 2147598175, i64 2147598218, i64 2147598258}
!5381 = !DILocation(line: 123, column: 1, scope: !5155)
!5382 = !{i64 2147598401, i64 2147598444, i64 2147598484}
!5383 = !DILocation(line: 124, column: 1, scope: !5155)
!5384 = !{i64 2147598618, i64 2147598661, i64 2147598701}
!5385 = !DILocation(line: 125, column: 1, scope: !5155)
!5386 = !{i64 2147598895, i64 2147598938, i64 2147598978}
!5387 = !DILocation(line: 126, column: 1, scope: !5155)
!5388 = !{i64 2147599121, i64 2147599164, i64 2147599204}
!5389 = !DILocation(line: 127, column: 1, scope: !5155)
!5390 = !{i64 2147599329, i64 2147599372, i64 2147599412}
!5391 = !DILocation(line: 128, column: 1, scope: !5155)
!5392 = !{i64 2147599525, i64 2147599568, i64 2147599608}
!5393 = !DILocation(line: 129, column: 1, scope: !5155)
!5394 = !{i64 2147599790, i64 2147599833, i64 2147599873}
!5395 = !DILocation(line: 130, column: 1, scope: !5155)
!5396 = !{i64 2147600004, i64 2147600047, i64 2147600087}
!5397 = !DILocation(line: 131, column: 1, scope: !5155)
!5398 = !{i64 2147600179, i64 2147600222, i64 2147600262}
!5399 = !DILocation(line: 132, column: 1, scope: !5155)
!5400 = !{i64 2147604494, i64 2147604537, i64 2147604577}
!5401 = !DILocation(line: 133, column: 1, scope: !5155)
!5402 = !{i64 2147604693, i64 2147604736, i64 2147604776}
!5403 = !DILocation(line: 134, column: 1, scope: !5155)
!5404 = !{i64 2147604935, i64 2147604978, i64 2147605018}
!5405 = !DILocation(line: 135, column: 1, scope: !5155)
!5406 = !{i64 2147605098, i64 2147605141, i64 2147605181}
!5407 = !DILocation(line: 136, column: 1, scope: !5155)
!5408 = !{i64 2147605285, i64 2147605328, i64 2147605368}
!5409 = !DILocation(line: 137, column: 1, scope: !5155)
!5410 = !{i64 2147605478, i64 2147605521, i64 2147605561}
!5411 = !DILocation(line: 138, column: 1, scope: !5155)
!5412 = !{i64 2147605661, i64 2147605704, i64 2147605744}
!5413 = !DILocation(line: 139, column: 1, scope: !5155)
!5414 = !{i64 2147605875, i64 2147605918, i64 2147605958}
!5415 = !DILocation(line: 140, column: 1, scope: !5155)
!5416 = !{i64 2147606086, i64 2147606129, i64 2147606169}
!5417 = !DILocation(line: 141, column: 1, scope: !5155)
!5418 = !{i64 2147606306, i64 2147606349, i64 2147606389}
!5419 = !DILocation(line: 142, column: 1, scope: !5155)
!5420 = !{i64 2147606513, i64 2147606556, i64 2147606596}
!5421 = !DILocation(line: 143, column: 1, scope: !5155)
!5422 = !{i64 2147606786, i64 2147606829, i64 2147606869}
!5423 = !DILocation(line: 144, column: 1, scope: !5155)
!5424 = !{i64 2147607034, i64 2147607077, i64 2147607117}
!5425 = !DILocation(line: 145, column: 1, scope: !5155)
!5426 = !{i64 2147607233, i64 2147607276, i64 2147607316}
!5427 = !DILocation(line: 146, column: 1, scope: !5155)
!5428 = !{i64 2147607468, i64 2147607511, i64 2147607551}
!5429 = !DILocation(line: 147, column: 1, scope: !5155)
!5430 = !{i64 2147607718, i64 2147607761, i64 2147607801}
!5431 = !DILocation(line: 148, column: 1, scope: !5155)
!5432 = !{i64 2147607920, i64 2147607963, i64 2147608003}
!5433 = !DILocation(line: 149, column: 1, scope: !5155)
!5434 = !{i64 2147608143, i64 2147608186, i64 2147608226}
!5435 = !DILocation(line: 150, column: 1, scope: !5155)
!5436 = !{i64 2147608357, i64 2147608400, i64 2147608440}
!5437 = !DILocation(line: 151, column: 1, scope: !5155)
!5438 = !{i64 2147608601, i64 2147608644, i64 2147608684}
!5439 = !DILocation(line: 152, column: 1, scope: !5155)
!5440 = !{i64 2147608830, i64 2147608873, i64 2147608913}
!5441 = !DILocation(line: 153, column: 1, scope: !5155)
!5442 = !{i64 2147609059, i64 2147609102, i64 2147609142}
!5443 = !DILocation(line: 154, column: 1, scope: !5155)
!5444 = !{i64 2147609267, i64 2147609310, i64 2147609350}
!5445 = !DILocation(line: 155, column: 1, scope: !5155)
!5446 = !{i64 2147609505, i64 2147609548, i64 2147609588}
!5447 = !DILocation(line: 156, column: 1, scope: !5155)
!5448 = !{i64 2147609731, i64 2147609774, i64 2147609814}
!5449 = !DILocation(line: 157, column: 1, scope: !5155)
!5450 = !{i64 2147609990, i64 2147610033, i64 2147610073}
!5451 = !DILocation(line: 158, column: 1, scope: !5155)
!5452 = !{i64 2147610210, i64 2147610253, i64 2147610293}
!5453 = !DILocation(line: 159, column: 1, scope: !5155)
!5454 = !{i64 2147610442, i64 2147610485, i64 2147610525}
!5455 = !DILocation(line: 160, column: 1, scope: !5155)
!5456 = !{i64 2147610683, i64 2147610726, i64 2147610766}
!5457 = !DILocation(line: 161, column: 1, scope: !5155)
!5458 = !{i64 2147610924, i64 2147610967, i64 2147611007}
!5459 = !DILocation(line: 162, column: 1, scope: !5155)
!5460 = !{i64 2147611147, i64 2147611190, i64 2147611230}
!5461 = !DILocation(line: 163, column: 1, scope: !5155)
!5462 = !{i64 2147611364, i64 2147611407, i64 2147611447}
!5463 = !DILocation(line: 164, column: 1, scope: !5155)
!5464 = !{i64 2147611605, i64 2147611648, i64 2147611688}
!5465 = !DILocation(line: 165, column: 1, scope: !5155)
!5466 = !{i64 2147611792, i64 2147611835, i64 2147611875}
!5467 = !DILocation(line: 166, column: 1, scope: !5155)
!5468 = !{i64 2147611979, i64 2147612022, i64 2147612062}
!5469 = !DILocation(line: 167, column: 1, scope: !5155)
!5470 = !{i64 2147612142, i64 2147612185, i64 2147612225}
!5471 = !DILocation(line: 168, column: 1, scope: !5155)
!5472 = !{i64 2147612401, i64 2147612444, i64 2147612484}
!5473 = !DILocation(line: 169, column: 1, scope: !5155)
!5474 = !{i64 2147612624, i64 2147612667, i64 2147612707}
!5475 = !DILocation(line: 170, column: 1, scope: !5155)
!5476 = !{i64 2147612853, i64 2147612896, i64 2147612936}
!5477 = !DILocation(line: 171, column: 1, scope: !5155)
!5478 = !{i64 2147617110, i64 2147617153, i64 2147617193}
!5479 = !DILocation(line: 172, column: 1, scope: !5155)
!5480 = !{i64 2147617322, i64 2147617365, i64 2147617405}
!5481 = !DILocation(line: 173, column: 1, scope: !5155)
!5482 = !{i64 2147617543, i64 2147617586, i64 2147617626}
!5483 = !DILocation(line: 174, column: 1, scope: !5155)
!5484 = !{i64 2147617757, i64 2147617800, i64 2147617840}
!5485 = !DILocation(line: 175, column: 1, scope: !5155)
!5486 = !{i64 2147617947, i64 2147617990, i64 2147618030}
!5487 = !DILocation(line: 176, column: 1, scope: !5155)
!5488 = !{i64 2147618146, i64 2147618189, i64 2147618229}
!5489 = !DILocation(line: 177, column: 1, scope: !5155)
!5490 = !{i64 2147618351, i64 2147618394, i64 2147618434}
!5491 = !DILocation(line: 178, column: 1, scope: !5155)
!5492 = !{i64 2147618571, i64 2147618614, i64 2147618654}
!5493 = !DILocation(line: 179, column: 1, scope: !5155)
!5494 = !{i64 2147618772, i64 2147618815, i64 2147618855}
!5495 = !DILocation(line: 180, column: 1, scope: !5155)
!5496 = !{i64 2147618971, i64 2147619014, i64 2147619054}
!5497 = !DILocation(line: 181, column: 1, scope: !5155)
!5498 = !{i64 2147619176, i64 2147619219, i64 2147619259}
!5499 = !DILocation(line: 182, column: 1, scope: !5155)
!5500 = !{i64 2147619345, i64 2147619388, i64 2147619428}
!5501 = !DILocation(line: 183, column: 1, scope: !5155)
!5502 = !{i64 2147619529, i64 2147619572, i64 2147619612}
!5503 = !DILocation(line: 184, column: 1, scope: !5155)
!5504 = !{i64 2147619713, i64 2147619756, i64 2147619796}
!5505 = !DILocation(line: 185, column: 1, scope: !5155)
!5506 = !{i64 2147619900, i64 2147619943, i64 2147619983}
!5507 = !DILocation(line: 186, column: 1, scope: !5155)
!5508 = !{i64 2147620084, i64 2147620127, i64 2147620167}
!5509 = !DILocation(line: 187, column: 1, scope: !5155)
!5510 = !{i64 2147620322, i64 2147620365, i64 2147620405}
!5511 = !DILocation(line: 188, column: 1, scope: !5155)
!5512 = !{i64 2147620552, i64 2147620595, i64 2147620635}
!5513 = !DILocation(line: 189, column: 1, scope: !5155)
!5514 = !{i64 2147620781, i64 2147620824, i64 2147620864}
!5515 = !DILocation(line: 190, column: 1, scope: !5155)
!5516 = !{i64 2147620968, i64 2147621011, i64 2147621051}
!5517 = !DILocation(line: 191, column: 1, scope: !5155)
!5518 = !{i64 2147621164, i64 2147621207, i64 2147621247}
!5519 = !DILocation(line: 192, column: 1, scope: !5155)
!5520 = !{i64 2147621372, i64 2147621415, i64 2147621455}
!5521 = !DILocation(line: 193, column: 1, scope: !5155)
!5522 = !{i64 2147621584, i64 2147621627, i64 2147621667}
!5523 = !DILocation(line: 194, column: 1, scope: !5155)
!5524 = !{i64 2147621783, i64 2147621826, i64 2147621866}
!5525 = !DILocation(line: 195, column: 1, scope: !5155)
!5526 = !{i64 2147622021, i64 2147622064, i64 2147622104}
!5527 = !DILocation(line: 196, column: 1, scope: !5155)
!5528 = !{i64 2147622217, i64 2147622260, i64 2147622300}
!5529 = !DILocation(line: 197, column: 1, scope: !5155)
!5530 = !{i64 2147622419, i64 2147622462, i64 2147622502}
!5531 = !DILocation(line: 198, column: 1, scope: !5155)
!5532 = !{i64 2147622612, i64 2147622655, i64 2147622695}
!5533 = !DILocation(line: 199, column: 1, scope: !5155)
!5534 = !{i64 2147622846, i64 2147622889, i64 2147622929}
!5535 = !DILocation(line: 200, column: 1, scope: !5155)
!5536 = !{i64 2147623009, i64 2147623052, i64 2147623092}
!5537 = !DILocation(line: 201, column: 1, scope: !5155)
!5538 = !{i64 2147623248, i64 2147623291, i64 2147623331}
!5539 = !DILocation(line: 202, column: 1, scope: !5155)
!5540 = !{i64 2147623487, i64 2147623530, i64 2147623570}
!5541 = !DILocation(line: 203, column: 1, scope: !5155)
!5542 = !{i64 2147623723, i64 2147623766, i64 2147623806}
!5543 = !DILocation(line: 204, column: 1, scope: !5155)
!5544 = !{i64 2147623953, i64 2147623996, i64 2147624036}
!5545 = !DILocation(line: 205, column: 1, scope: !5155)
!5546 = !{i64 2147624140, i64 2147624183, i64 2147624223}
!5547 = !DILocation(line: 206, column: 1, scope: !5155)
!5548 = !{i64 2147624339, i64 2147624382, i64 2147624422}
!5549 = !DILocation(line: 207, column: 1, scope: !5155)
!5550 = !{i64 2147624610, i64 2147624653, i64 2147624693}
!5551 = !DILocation(line: 208, column: 1, scope: !5155)
!5552 = !{i64 2147624785, i64 2147624828, i64 2147624868}
!5553 = !DILocation(line: 209, column: 1, scope: !5155)
!5554 = !{i64 2147625019, i64 2147625062, i64 2147625102}
!5555 = !DILocation(line: 210, column: 1, scope: !5155)
!5556 = !{i64 2147625227, i64 2147625270, i64 2147625310}
!5557 = !DILocation(line: 211, column: 1, scope: !5155)
!5558 = !{i64 2147625426, i64 2147625469, i64 2147625509}
!5559 = !DILocation(line: 212, column: 1, scope: !5155)
!5560 = !{i64 2147625644, i64 2147625687, i64 2147625727}
!5561 = !DILocation(line: 213, column: 1, scope: !5155)
!5562 = !{i64 2147625834, i64 2147625877, i64 2147625917}
!5563 = !DILocation(line: 214, column: 1, scope: !5155)
!5564 = !{i64 2147626030, i64 2147626073, i64 2147626113}
!5565 = !DILocation(line: 215, column: 1, scope: !5155)
!5566 = !{i64 2147630297, i64 2147630340, i64 2147630380}
!5567 = !DILocation(line: 216, column: 1, scope: !5155)
!5568 = !{i64 2147630502, i64 2147630545, i64 2147630585}
!5569 = !DILocation(line: 217, column: 1, scope: !5155)
!5570 = !{i64 2147630716, i64 2147630759, i64 2147630799}
!5571 = !DILocation(line: 218, column: 1, scope: !5155)
!5572 = !{i64 2147630942, i64 2147630985, i64 2147631025}
!5573 = !DILocation(line: 219, column: 1, scope: !5155)
!5574 = !{i64 2147631174, i64 2147631217, i64 2147631257}
!5575 = !DILocation(line: 220, column: 1, scope: !5155)
!5576 = !{i64 2147631358, i64 2147631401, i64 2147631441}
!5577 = !DILocation(line: 221, column: 1, scope: !5155)
!5578 = !{i64 2147631567, i64 2147631610, i64 2147631650}
!5579 = !DILocation(line: 222, column: 1, scope: !5155)
!5580 = !{i64 2147631751, i64 2147631794, i64 2147631834}
!5581 = !DILocation(line: 223, column: 1, scope: !5155)
!5582 = !{i64 2147631977, i64 2147632020, i64 2147632060}
!5583 = !DILocation(line: 224, column: 1, scope: !5155)
!5584 = !{i64 2147632203, i64 2147632246, i64 2147632286}
!5585 = !DILocation(line: 225, column: 1, scope: !5155)
!5586 = !{i64 2147632429, i64 2147632472, i64 2147632512}
!5587 = !DILocation(line: 226, column: 1, scope: !5155)
!5588 = !{i64 2147632655, i64 2147632698, i64 2147632738}
!5589 = !DILocation(line: 227, column: 1, scope: !5155)
!5590 = !{i64 2147632881, i64 2147632924, i64 2147632964}
!5591 = !DILocation(line: 228, column: 1, scope: !5155)
!5592 = !{i64 2147633113, i64 2147633156, i64 2147633196}
!5593 = !DILocation(line: 229, column: 1, scope: !5155)
!5594 = !{i64 2147633351, i64 2147633394, i64 2147633434}
!5595 = !DILocation(line: 230, column: 1, scope: !5155)
!5596 = !{i64 2147633571, i64 2147633614, i64 2147633654}
!5597 = !DILocation(line: 231, column: 1, scope: !5155)
!5598 = !{i64 2147633815, i64 2147633858, i64 2147633898}
!5599 = !DILocation(line: 232, column: 1, scope: !5155)
!5600 = !{i64 2147634056, i64 2147634099, i64 2147634139}
!5601 = !DILocation(line: 233, column: 1, scope: !5155)
!5602 = !{i64 2147634291, i64 2147634334, i64 2147634374}
!5603 = !DILocation(line: 234, column: 1, scope: !5155)
!5604 = !{i64 2147634523, i64 2147634566, i64 2147634606}
!5605 = !DILocation(line: 235, column: 1, scope: !5155)
!5606 = !{i64 2147634725, i64 2147634768, i64 2147634808}
!5607 = !DILocation(line: 236, column: 1, scope: !5155)
!5608 = !{i64 2147634975, i64 2147635018, i64 2147635058}
!5609 = !DILocation(line: 237, column: 1, scope: !5155)
!5610 = !{i64 2147635213, i64 2147635256, i64 2147635296}
!5611 = !DILocation(line: 238, column: 1, scope: !5155)
!5612 = !{i64 2147635397, i64 2147635440, i64 2147635480}
!5613 = !DILocation(line: 239, column: 1, scope: !5155)
!5614 = !{i64 2147635621, i64 2147635664, i64 2147635704}
!5615 = !DILocation(line: 240, column: 1, scope: !5155)
!5616 = !{i64 2147635859, i64 2147635902, i64 2147635942}
!5617 = !DILocation(line: 241, column: 1, scope: !5155)
!5618 = !{i64 2147636097, i64 2147636140, i64 2147636180}
!5619 = !DILocation(line: 242, column: 1, scope: !5155)
!5620 = !{i64 2147636290, i64 2147636333, i64 2147636373}
!5621 = !DILocation(line: 243, column: 1, scope: !5155)
!5622 = !{i64 2147636543, i64 2147636586, i64 2147636626}
!5623 = !DILocation(line: 244, column: 1, scope: !5155)
!5624 = !{i64 2147636757, i64 2147636800, i64 2147636840}
!5625 = !DILocation(line: 245, column: 1, scope: !5155)
!5626 = !{i64 2147636965, i64 2147637008, i64 2147637048}
!5627 = !DILocation(line: 246, column: 1, scope: !5155)
!5628 = !{i64 2147637155, i64 2147637198, i64 2147637238}
!5629 = !DILocation(line: 247, column: 1, scope: !5155)
!5630 = !{i64 2147637369, i64 2147637412, i64 2147637452}
!5631 = !DILocation(line: 248, column: 1, scope: !5155)
!5632 = !{i64 2147637631, i64 2147637674, i64 2147637714}
!5633 = !DILocation(line: 249, column: 1, scope: !5155)
!5634 = !{i64 2147637842, i64 2147637885, i64 2147637925}
!5635 = !DILocation(line: 250, column: 1, scope: !5155)
!5636 = !{i64 2147638086, i64 2147638129, i64 2147638169}
!5637 = !DILocation(line: 251, column: 1, scope: !5155)
!5638 = !{i64 2147638297, i64 2147638340, i64 2147638380}
!5639 = !DILocation(line: 252, column: 1, scope: !5155)
!5640 = !{i64 2147638526, i64 2147638569, i64 2147638609}
!5641 = !DILocation(line: 253, column: 1, scope: !5155)
!5642 = !{i64 2147642852, i64 2147642895, i64 2147642935}
!5643 = !DILocation(line: 254, column: 1, scope: !5155)
!5644 = !{i64 2147643057, i64 2147643100, i64 2147643140}
!5645 = !DILocation(line: 255, column: 1, scope: !5155)
!5646 = !{i64 2147643253, i64 2147643296, i64 2147643336}
!5647 = !DILocation(line: 256, column: 1, scope: !5155)
!5648 = !{i64 2147643476, i64 2147643519, i64 2147643559}
!5649 = !DILocation(line: 257, column: 1, scope: !5155)
!5650 = !{i64 2147643639, i64 2147643682, i64 2147643722}
!5651 = !DILocation(line: 258, column: 1, scope: !5155)
!5652 = !{i64 2147643844, i64 2147643887, i64 2147643927}
!5653 = !DILocation(line: 259, column: 1, scope: !5155)
!5654 = !{i64 2147644064, i64 2147644107, i64 2147644147}
!5655 = !DILocation(line: 260, column: 1, scope: !5155)
!5656 = !{i64 2147644278, i64 2147644321, i64 2147644361}
!5657 = !DILocation(line: 261, column: 1, scope: !5155)
!5658 = !{i64 2147644492, i64 2147644535, i64 2147644575}
!5659 = !DILocation(line: 262, column: 1, scope: !5155)
!5660 = !{i64 2147644703, i64 2147644746, i64 2147644786}
!5661 = !DILocation(line: 263, column: 1, scope: !5155)
!5662 = !{i64 2147644896, i64 2147644939, i64 2147644979}
!5663 = !DILocation(line: 264, column: 1, scope: !5155)
!5664 = !{i64 2147645095, i64 2147645138, i64 2147645178}
!5665 = !DILocation(line: 265, column: 1, scope: !5155)
!5666 = !{i64 2147645291, i64 2147645334, i64 2147645374}
!5667 = !DILocation(line: 266, column: 1, scope: !5155)
!5668 = !{i64 2147645490, i64 2147645533, i64 2147645573}
!5669 = !DILocation(line: 267, column: 1, scope: !5155)
!5670 = !{i64 2147645662, i64 2147645705, i64 2147645745}
!5671 = !DILocation(line: 268, column: 1, scope: !5155)
!5672 = !{i64 2147645855, i64 2147645898, i64 2147645938}
!5673 = !DILocation(line: 269, column: 1, scope: !5155)
!5674 = !{i64 2147646051, i64 2147646094, i64 2147646134}
!5675 = !DILocation(line: 270, column: 1, scope: !5155)
!5676 = !{i64 2147646278, i64 2147646321, i64 2147646361}
!5677 = !DILocation(line: 271, column: 1, scope: !5155)
!5678 = !{i64 2147646495, i64 2147646538, i64 2147646578}
!5679 = !DILocation(line: 272, column: 1, scope: !5155)
!5680 = !{i64 2147646787, i64 2147646830, i64 2147646870}
!5681 = !DILocation(line: 273, column: 1, scope: !5155)
!5682 = !{i64 2147647019, i64 2147647062, i64 2147647102}
!5683 = !DILocation(line: 274, column: 1, scope: !5155)
!5684 = !{i64 2147647236, i64 2147647279, i64 2147647319}
!5685 = !DILocation(line: 275, column: 1, scope: !5155)
!5686 = !{i64 2147647443, i64 2147647486, i64 2147647526}
!5687 = !DILocation(line: 276, column: 1, scope: !5155)
!5688 = !{i64 2147647644, i64 2147647687, i64 2147647727}
!5689 = !DILocation(line: 277, column: 1, scope: !5155)
!5690 = !{i64 2147647876, i64 2147647919, i64 2147647959}
!5691 = !DILocation(line: 278, column: 1, scope: !5155)
!5692 = !{i64 2147648084, i64 2147648127, i64 2147648167}
!5693 = !DILocation(line: 279, column: 1, scope: !5155)
!5694 = !{i64 2147648274, i64 2147648317, i64 2147648357}
!5695 = !DILocation(line: 280, column: 1, scope: !5155)
!5696 = !{i64 2147648500, i64 2147648543, i64 2147648583}
!5697 = !DILocation(line: 281, column: 1, scope: !5155)
!5698 = !{i64 2147648689, i64 2147648732, i64 2147648772}
!5699 = !DILocation(line: 282, column: 1, scope: !5155)
!5700 = !{i64 2147648960, i64 2147649003, i64 2147649043}
!5701 = !DILocation(line: 283, column: 1, scope: !5155)
!5702 = !{i64 2147649180, i64 2147649223, i64 2147649263}
!5703 = !DILocation(line: 284, column: 1, scope: !5155)
!5704 = !{i64 2147649433, i64 2147649476, i64 2147649516}
!5705 = !DILocation(line: 285, column: 1, scope: !5155)
!5706 = !{i64 2147649641, i64 2147649684, i64 2147649724}
!5707 = !DILocation(line: 286, column: 1, scope: !5155)
!5708 = !{i64 2147649873, i64 2147649916, i64 2147649956}
!5709 = !DILocation(line: 287, column: 1, scope: !5155)
!5710 = !{i64 2147650084, i64 2147650127, i64 2147650167}
!5711 = !DILocation(line: 288, column: 1, scope: !5155)
!5712 = !{i64 2147650274, i64 2147650317, i64 2147650357}
!5713 = !DILocation(line: 289, column: 1, scope: !5155)
!5714 = !{i64 2147650488, i64 2147650531, i64 2147650571}
!5715 = !DILocation(line: 290, column: 1, scope: !5155)
!5716 = !{i64 2147650687, i64 2147650730, i64 2147650770}
!5717 = !DILocation(line: 291, column: 1, scope: !5155)
!5718 = !{i64 2147650874, i64 2147650917, i64 2147650957}
!5719 = !DILocation(line: 292, column: 1, scope: !5155)
!5720 = !{i64 2147651082, i64 2147651125, i64 2147651165}
!5721 = !DILocation(line: 293, column: 1, scope: !5155)
!5722 = !{i64 2147651311, i64 2147651354, i64 2147651394}
!5723 = !DILocation(line: 294, column: 1, scope: !5155)
!5724 = !{i64 2147651513, i64 2147651556, i64 2147651596}
!5725 = !DILocation(line: 295, column: 1, scope: !5155)
!5726 = !{i64 2147655773, i64 2147655816, i64 2147655856}
!5727 = !DILocation(line: 296, column: 1, scope: !5155)
!5728 = !{i64 2147655990, i64 2147656033, i64 2147656073}
!5729 = !DILocation(line: 298, column: 1, scope: !5155)
!5730 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5731)
!5731 = !{!5732, !5733}
!5732 = !DILocalVariable(name: "arg", arg: 1, scope: !5730, file: !129, line: 30, type: !138)
!5733 = !DILocalVariable(name: "key", scope: !5730, file: !129, line: 32, type: !121)
!5734 = !DILocation(line: 0, scope: !5730)
!5735 = !DILocation(line: 37, column: 2, scope: !5730)
!5736 = !DILocation(line: 38, column: 2, scope: !5730)
!5737 = !DILocation(line: 55, column: 2, scope: !5738, inlinedAt: !5745)
!5738 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5742)
!5739 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!32}
!5742 = !{!5743, !5744}
!5743 = !DILocalVariable(name: "key", scope: !5738, file: !5739, line: 44, type: !32)
!5744 = !DILocalVariable(name: "tmp", scope: !5738, file: !5739, line: 53, type: !32)
!5745 = distinct !DILocation(line: 40, column: 8, scope: !5730)
!5746 = !{i64 2130655}
!5747 = !DILocation(line: 0, scope: !5738, inlinedAt: !5745)
!5748 = !DILocalVariable(name: "key", arg: 1, scope: !5749, file: !5739, line: 84, type: !32)
!5749 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5752)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{null, !32}
!5752 = !{!5748}
!5753 = !DILocation(line: 0, scope: !5749, inlinedAt: !5754)
!5754 = distinct !DILocation(line: 47, column: 2, scope: !5730)
!5755 = !DILocation(line: 95, column: 2, scope: !5749, inlinedAt: !5754)
!5756 = !{i64 2131472}
!5757 = !DILocation(line: 51, column: 18, scope: !5730)
!5758 = !DILocation(line: 53, column: 2, scope: !5730)
!5759 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5760, file: !5760, line: 1609, type: !3174, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5760 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5761 = !DILocation(line: 1611, column: 3, scope: !5759)
!5762 = !DILocation(line: 1612, column: 1, scope: !5759)
!5763 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5760, file: !5760, line: 1629, type: !3174, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !317)
!5764 = !DILocation(line: 1631, column: 3, scope: !5763)
!5765 = !DILocation(line: 1632, column: 1, scope: !5763)
!5766 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !5767)
!5767 = !{!5768}
!5768 = !DILocalVariable(name: "dev", arg: 1, scope: !5766, file: !171, line: 26, type: !179)
!5769 = !DILocation(line: 0, scope: !5766)
!5770 = !DILocation(line: 68, column: 2, scope: !5766)
!5771 = !DILocation(line: 25, column: 6, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !341, file: !294, line: 25, column: 6)
!5773 = !DILocation(line: 25, column: 10, scope: !5772)
!5774 = !DILocation(line: 25, column: 6, scope: !341)
!5775 = !DILocation(line: 26, column: 3, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !294, line: 26, column: 3)
!5777 = distinct !DILexicalBlock(scope: !5772, file: !294, line: 25, column: 19)
!5778 = !DILocation(line: 27, column: 2, scope: !5777)
!5779 = !DILocation(line: 29, column: 8, scope: !347)
!5780 = !DILocation(line: 0, scope: !347)
!5781 = !DILocation(line: 29, column: 6, scope: !341)
!5782 = !DILocation(line: 30, column: 14, scope: !341)
!5783 = !DILocation(line: 30, column: 2, scope: !341)
!5784 = distinct !DISubprogram(name: "k_queue_get", scope: !3610, file: !3610, line: 649, type: !5785, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5792)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!102, !5787, !5788}
!5787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!5788 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !5789)
!5789 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !5790)
!5790 = !{!5791}
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5789, file: !201, line: 66, baseType: !200, size: 64)
!5792 = !{!5793, !5794}
!5793 = !DILocalVariable(name: "queue", arg: 1, scope: !5784, file: !3610, line: 649, type: !5787)
!5794 = !DILocalVariable(name: "timeout", arg: 2, scope: !5784, file: !3610, line: 649, type: !5788)
!5795 = !DILocation(line: 0, scope: !5784)
!5796 = !DILocation(line: 658, column: 2, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5784, file: !3610, line: 658, column: 2)
!5798 = !{i64 2154739731}
!5799 = !DILocation(line: 659, column: 9, scope: !5784)
!5800 = !DILocation(line: 659, column: 2, scope: !5784)
!5801 = distinct !DISubprogram(name: "console_getline_init", scope: !294, file: !294, line: 33, type: !3174, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !5802)
!5802 = !{!5803}
!5803 = !DILocalVariable(name: "i", scope: !5801, file: !294, line: 35, type: !103)
!5804 = !DILocation(line: 0, scope: !5801)
!5805 = !DILocation(line: 38, column: 3, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !294, line: 38, column: 3)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !294, line: 37, column: 46)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !294, line: 37, column: 2)
!5809 = distinct !DILexicalBlock(scope: !5801, file: !294, line: 37, column: 2)
!5810 = !DILocation(line: 45, column: 2, scope: !5801)
!5811 = !DILocation(line: 46, column: 1, scope: !5801)
!5812 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5813, file: !5813, line: 57, type: !5814, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !5860)
!5813 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5814 = !DISubroutineType(types: !5815)
!5815 = !{null, !32, !5816}
!5816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5817, size: 32)
!5817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5818)
!5818 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2715, line: 141, baseType: !5819)
!5819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2715, line: 97, size: 256, elements: !5820)
!5820 = !{!5821}
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5819, file: !2715, line: 107, baseType: !5822, size: 256)
!5822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2715, line: 98, size: 256, elements: !5823)
!5823 = !{!5824, !5829, !5834, !5839, !5844, !5849, !5854, !5859}
!5824 = !DIDerivedType(tag: DW_TAG_member, scope: !5822, file: !2715, line: 99, baseType: !5825, size: 32)
!5825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5822, file: !2715, line: 99, size: 32, elements: !5826)
!5826 = !{!5827, !5828}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5825, file: !2715, line: 99, baseType: !121, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5825, file: !2715, line: 99, baseType: !121, size: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, scope: !5822, file: !2715, line: 100, baseType: !5830, size: 32, offset: 32)
!5830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5822, file: !2715, line: 100, size: 32, elements: !5831)
!5831 = !{!5832, !5833}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5830, file: !2715, line: 100, baseType: !121, size: 32)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5830, file: !2715, line: 100, baseType: !121, size: 32)
!5834 = !DIDerivedType(tag: DW_TAG_member, scope: !5822, file: !2715, line: 101, baseType: !5835, size: 32, offset: 64)
!5835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5822, file: !2715, line: 101, size: 32, elements: !5836)
!5836 = !{!5837, !5838}
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5835, file: !2715, line: 101, baseType: !121, size: 32)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5835, file: !2715, line: 101, baseType: !121, size: 32)
!5839 = !DIDerivedType(tag: DW_TAG_member, scope: !5822, file: !2715, line: 102, baseType: !5840, size: 32, offset: 96)
!5840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5822, file: !2715, line: 102, size: 32, elements: !5841)
!5841 = !{!5842, !5843}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5840, file: !2715, line: 102, baseType: !121, size: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5840, file: !2715, line: 102, baseType: !121, size: 32)
!5844 = !DIDerivedType(tag: DW_TAG_member, scope: !5822, file: !2715, line: 103, baseType: !5845, size: 32, offset: 128)
!5845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5822, file: !2715, line: 103, size: 32, elements: !5846)
!5846 = !{!5847, !5848}
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5845, file: !2715, line: 103, baseType: !121, size: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5845, file: !2715, line: 103, baseType: !121, size: 32)
!5849 = !DIDerivedType(tag: DW_TAG_member, scope: !5822, file: !2715, line: 104, baseType: !5850, size: 32, offset: 160)
!5850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5822, file: !2715, line: 104, size: 32, elements: !5851)
!5851 = !{!5852, !5853}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5850, file: !2715, line: 104, baseType: !121, size: 32)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5850, file: !2715, line: 104, baseType: !121, size: 32)
!5854 = !DIDerivedType(tag: DW_TAG_member, scope: !5822, file: !2715, line: 105, baseType: !5855, size: 32, offset: 192)
!5855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5822, file: !2715, line: 105, size: 32, elements: !5856)
!5856 = !{!5857, !5858}
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5855, file: !2715, line: 105, baseType: !121, size: 32)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5855, file: !2715, line: 105, baseType: !121, size: 32)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5822, file: !2715, line: 106, baseType: !121, size: 32, offset: 224)
!5860 = !{!5861, !5862}
!5861 = !DILocalVariable(name: "reason", arg: 1, scope: !5812, file: !5813, line: 57, type: !32)
!5862 = !DILocalVariable(name: "esf", arg: 2, scope: !5812, file: !5813, line: 57, type: !5816)
!5863 = !DILocation(line: 0, scope: !5812)
!5864 = !DILocation(line: 63, column: 2, scope: !5812)
!5865 = !DILocation(line: 64, column: 1, scope: !5812)
!5866 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5813, file: !5813, line: 82, type: !5867, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !5882)
!5867 = !DISubroutineType(types: !5868)
!5868 = !{null, !5816, !5869}
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 32)
!5870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !5871)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !5872)
!5872 = !{!5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5871, file: !446, line: 26, baseType: !121, size: 32)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5871, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5871, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5871, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5871, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5871, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5871, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5871, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5871, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!5882 = !{!5883, !5884, !5885}
!5883 = !DILocalVariable(name: "esf", arg: 1, scope: !5866, file: !5813, line: 82, type: !5816)
!5884 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5866, file: !5813, line: 82, type: !5869)
!5885 = !DILocalVariable(name: "reason", scope: !5866, file: !5813, line: 88, type: !32)
!5886 = !DILocation(line: 0, scope: !5866)
!5887 = !DILocation(line: 88, column: 35, scope: !5866)
!5888 = !DILocation(line: 108, column: 2, scope: !5866)
!5889 = !DILocation(line: 131, column: 1, scope: !5866)
!5890 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5813, file: !5813, line: 133, type: !5891, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2595, retainedNodes: !5893)
!5891 = !DISubroutineType(types: !5892)
!5892 = !{null, !102}
!5893 = !{!5894, !5895, !5896}
!5894 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5890, file: !5813, line: 133, type: !102)
!5895 = !DILocalVariable(name: "ssf_contents", scope: !5890, file: !5813, line: 135, type: !864)
!5896 = !DILocalVariable(name: "oops_esf", scope: !5890, file: !5813, line: 136, type: !5818)
!5897 = !DILocation(line: 0, scope: !5890)
!5898 = !DILocation(line: 136, column: 2, scope: !5890)
!5899 = !DILocation(line: 136, column: 15, scope: !5890)
!5900 = !DILocation(line: 139, column: 22, scope: !5890)
!5901 = !DILocation(line: 139, column: 17, scope: !5890)
!5902 = !DILocation(line: 139, column: 20, scope: !5890)
!5903 = !DILocation(line: 141, column: 2, scope: !5890)
!5904 = !DILocation(line: 142, column: 2, scope: !5890)
!5905 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5906, file: !5906, line: 40, type: !5750, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5907)
!5906 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5907 = !{!5908}
!5908 = !DILocalVariable(name: "irq", arg: 1, scope: !5905, file: !5906, line: 40, type: !32)
!5909 = !DILocation(line: 0, scope: !5905)
!5910 = !DILocation(line: 42, column: 2, scope: !5905)
!5911 = !DILocation(line: 43, column: 1, scope: !5905)
!5912 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !515, file: !515, line: 1684, type: !5913, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5915)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{null, !771}
!5915 = !{!5916}
!5916 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5912, file: !515, line: 1684, type: !771)
!5917 = !DILocation(line: 0, scope: !5912)
!5918 = !DILocation(line: 1686, column: 23, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5912, file: !515, line: 1686, column: 7)
!5920 = !DILocation(line: 1686, column: 7, scope: !5912)
!5921 = !DILocation(line: 1688, column: 5, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5919, file: !515, line: 1687, column: 3)
!5923 = !{i64 2151023627}
!5924 = !DILocation(line: 1689, column: 81, scope: !5922)
!5925 = !DILocation(line: 1689, column: 60, scope: !5922)
!5926 = !DILocation(line: 1689, column: 34, scope: !5922)
!5927 = !DILocation(line: 1689, column: 5, scope: !5922)
!5928 = !DILocation(line: 1689, column: 43, scope: !5922)
!5929 = !DILocation(line: 1690, column: 5, scope: !5922)
!5930 = !{i64 2151023741}
!5931 = !DILocation(line: 1691, column: 3, scope: !5922)
!5932 = !DILocation(line: 1692, column: 1, scope: !5912)
!5933 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5906, file: !5906, line: 45, type: !5750, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5934)
!5934 = !{!5935}
!5935 = !DILocalVariable(name: "irq", arg: 1, scope: !5933, file: !5906, line: 45, type: !32)
!5936 = !DILocation(line: 0, scope: !5933)
!5937 = !DILocation(line: 47, column: 2, scope: !5933)
!5938 = !DILocation(line: 48, column: 1, scope: !5933)
!5939 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !515, file: !515, line: 1722, type: !5913, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5940)
!5940 = !{!5941}
!5941 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5939, file: !515, line: 1722, type: !771)
!5942 = !DILocation(line: 0, scope: !5939)
!5943 = !DILocation(line: 1724, column: 23, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5939, file: !515, line: 1724, column: 7)
!5945 = !DILocation(line: 1724, column: 7, scope: !5939)
!5946 = !DILocation(line: 1726, column: 81, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5944, file: !515, line: 1725, column: 3)
!5948 = !DILocation(line: 1726, column: 60, scope: !5947)
!5949 = !DILocation(line: 1726, column: 34, scope: !5947)
!5950 = !DILocation(line: 1726, column: 5, scope: !5947)
!5951 = !DILocation(line: 1726, column: 43, scope: !5947)
!5952 = !DILocation(line: 271, column: 3, scope: !5953, inlinedAt: !5955)
!5953 = distinct !DISubprogram(name: "__DSB", scope: !5954, file: !5954, line: 269, type: !3174, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !317)
!5954 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5955 = distinct !DILocation(line: 1727, column: 5, scope: !5947)
!5956 = !{i64 3478010}
!5957 = !DILocation(line: 260, column: 3, scope: !5958, inlinedAt: !5959)
!5958 = distinct !DISubprogram(name: "__ISB", scope: !5954, file: !5954, line: 258, type: !3174, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !317)
!5959 = distinct !DILocation(line: 1728, column: 5, scope: !5947)
!5960 = !{i64 3477727}
!5961 = !DILocation(line: 1729, column: 3, scope: !5947)
!5962 = !DILocation(line: 1730, column: 1, scope: !5939)
!5963 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5906, file: !5906, line: 50, type: !5964, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5966)
!5964 = !DISubroutineType(types: !5965)
!5965 = !{!103, !32}
!5966 = !{!5967}
!5967 = !DILocalVariable(name: "irq", arg: 1, scope: !5963, file: !5906, line: 50, type: !32)
!5968 = !DILocation(line: 0, scope: !5963)
!5969 = !DILocation(line: 52, column: 20, scope: !5963)
!5970 = !DILocation(line: 52, column: 9, scope: !5963)
!5971 = !DILocation(line: 52, column: 41, scope: !5963)
!5972 = !DILocation(line: 52, column: 39, scope: !5963)
!5973 = !DILocation(line: 52, column: 2, scope: !5963)
!5974 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5906, file: !5906, line: 64, type: !5975, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5977)
!5975 = !DISubroutineType(types: !5976)
!5976 = !{null, !32, !32, !121}
!5977 = !{!5978, !5979, !5980}
!5978 = !DILocalVariable(name: "irq", arg: 1, scope: !5974, file: !5906, line: 64, type: !32)
!5979 = !DILocalVariable(name: "prio", arg: 2, scope: !5974, file: !5906, line: 64, type: !32)
!5980 = !DILocalVariable(name: "flags", arg: 3, scope: !5974, file: !5906, line: 64, type: !121)
!5981 = !DILocation(line: 0, scope: !5974)
!5982 = !DILocation(line: 83, column: 8, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5984, file: !5906, line: 82, column: 9)
!5984 = distinct !DILexicalBlock(scope: !5974, file: !5906, line: 76, column: 6)
!5985 = !DILocation(line: 95, column: 2, scope: !5974)
!5986 = !DILocation(line: 96, column: 1, scope: !5974)
!5987 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5988, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5990)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{null, !771, !121}
!5990 = !{!5991, !5992}
!5991 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5987, file: !515, line: 1814, type: !771)
!5992 = !DILocalVariable(name: "priority", arg: 2, scope: !5987, file: !515, line: 1814, type: !121)
!5993 = !DILocation(line: 0, scope: !5987)
!5994 = !DILocation(line: 0, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5987, file: !515, line: 1816, column: 7)
!5996 = !DILocation(line: 1816, column: 7, scope: !5987)
!5997 = !DILocation(line: 1824, column: 1, scope: !5987)
!5998 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5906, file: !5906, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5999)
!5999 = !{!6000}
!6000 = !DILocalVariable(name: "unused", arg: 1, scope: !5998, file: !5906, line: 155, type: !13)
!6001 = !DILocation(line: 0, scope: !5998)
!6002 = !DILocation(line: 159, column: 2, scope: !5998)
!6003 = !DILocation(line: 160, column: 1, scope: !5998)
!6004 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6005, file: !6005, line: 87, type: !3174, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !317)
!6005 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6006 = !DILocation(line: 89, column: 2, scope: !6004)
!6007 = !DILocation(line: 90, column: 2, scope: !6004)
!6008 = !DILocation(line: 91, column: 1, scope: !6004)
!6009 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6005, file: !6005, line: 23, type: !3174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6010 = !DISubprogram(name: "z_arm_int_exit", scope: !6011, file: !6011, line: 153, type: !3174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!6011 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6012 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6013, file: !6013, line: 256, type: !3174, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !317)
!6013 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6014 = !DILocation(line: 258, column: 2, scope: !6012)
!6015 = !DILocation(line: 260, column: 2, scope: !6012)
!6016 = !DILocation(line: 262, column: 2, scope: !6012)
!6017 = !DILocation(line: 263, column: 2, scope: !6012)
!6018 = !DILocation(line: 267, column: 2, scope: !6012)
!6019 = !DILocation(line: 268, column: 2, scope: !6012)
!6020 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6013, file: !6013, line: 53, type: !3174, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !317)
!6021 = !DILocation(line: 55, column: 12, scope: !6020)
!6022 = !DILocation(line: 271, column: 3, scope: !6023, inlinedAt: !6024)
!6023 = distinct !DISubprogram(name: "__DSB", scope: !5954, file: !5954, line: 269, type: !3174, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !317)
!6024 = distinct !DILocation(line: 56, column: 2, scope: !6020)
!6025 = !{i64 3476681}
!6026 = !DILocation(line: 260, column: 3, scope: !6027, inlinedAt: !6028)
!6027 = distinct !DISubprogram(name: "__ISB", scope: !5954, file: !5954, line: 258, type: !3174, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !317)
!6028 = distinct !DILocation(line: 57, column: 2, scope: !6020)
!6029 = !{i64 3476398}
!6030 = !DILocation(line: 58, column: 1, scope: !6020)
!6031 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6013, file: !6013, line: 96, type: !3174, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !317)
!6032 = !DILocation(line: 103, column: 13, scope: !6031)
!6033 = !DILocation(line: 975, column: 3, scope: !6034, inlinedAt: !6039)
!6034 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5954, file: !5954, line: 971, type: !6035, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6037)
!6035 = !DISubroutineType(types: !6036)
!6036 = !{!121}
!6037 = !{!6038}
!6038 = !DILocalVariable(name: "result", scope: !6034, file: !5954, line: 973, type: !121)
!6039 = distinct !DILocation(line: 189, column: 16, scope: !6031)
!6040 = !{i64 3497511}
!6041 = !DILocation(line: 0, scope: !6034, inlinedAt: !6039)
!6042 = !DILocation(line: 189, column: 32, scope: !6031)
!6043 = !DILocalVariable(name: "control", arg: 1, scope: !6044, file: !5954, line: 1001, type: !121)
!6044 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5954, file: !5954, line: 1001, type: !6045, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !6047)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{null, !121}
!6047 = !{!6043}
!6048 = !DILocation(line: 0, scope: !6044, inlinedAt: !6049)
!6049 = distinct !DILocation(line: 189, column: 2, scope: !6031)
!6050 = !DILocation(line: 1003, column: 3, scope: !6044, inlinedAt: !6049)
!6051 = !{i64 3498231}
!6052 = !DILocation(line: 260, column: 3, scope: !6027, inlinedAt: !6053)
!6053 = distinct !DILocation(line: 1004, column: 3, scope: !6044, inlinedAt: !6049)
!6054 = !DILocation(line: 191, column: 1, scope: !6031)
!6055 = distinct !DISubprogram(name: "arch_swap", scope: !6056, file: !6056, line: 33, type: !5964, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !6057)
!6056 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6057 = !{!6058}
!6058 = !DILocalVariable(name: "key", arg: 1, scope: !6055, file: !6056, line: 33, type: !32)
!6059 = !DILocation(line: 0, scope: !6055)
!6060 = !DILocation(line: 36, column: 2, scope: !6055)
!6061 = !DILocation(line: 36, column: 17, scope: !6055)
!6062 = !DILocation(line: 36, column: 25, scope: !6055)
!6063 = !DILocation(line: 37, column: 37, scope: !6055)
!6064 = !DILocation(line: 37, column: 17, scope: !6055)
!6065 = !DILocation(line: 37, column: 35, scope: !6055)
!6066 = !DILocation(line: 41, column: 12, scope: !6055)
!6067 = !DILocalVariable(name: "key", arg: 1, scope: !6068, file: !5739, line: 84, type: !32)
!6068 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !6069)
!6069 = !{!6067}
!6070 = !DILocation(line: 0, scope: !6068, inlinedAt: !6071)
!6071 = distinct !DILocation(line: 44, column: 2, scope: !6055)
!6072 = !DILocation(line: 95, column: 2, scope: !6068, inlinedAt: !6071)
!6073 = !{i64 2238745}
!6074 = !DILocation(line: 53, column: 9, scope: !6055)
!6075 = !DILocation(line: 53, column: 24, scope: !6055)
!6076 = !DILocation(line: 53, column: 2, scope: !6055)
!6077 = distinct !DISubprogram(name: "arch_new_thread", scope: !6078, file: !6078, line: 56, type: !6079, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6186)
!6078 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6079 = !DISubroutineType(types: !6080)
!6080 = !{null, !6081, !6181, !344, !3488, !102, !102, !102}
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6082, size: 32)
!6082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6083)
!6083 = !{!6084, !6142, !6154, !6155, !6156, !6157, !6163, !6176}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6082, file: !379, line: 247, baseType: !6085, size: 384)
!6085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6086)
!6086 = !{!6087, !6111, !6118, !6119, !6120, !6129, !6130, !6131}
!6087 = !DIDerivedType(tag: DW_TAG_member, scope: !6085, file: !379, line: 60, baseType: !6088, size: 64)
!6088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6085, file: !379, line: 60, size: 64, elements: !6089)
!6089 = !{!6090, !6105}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6088, file: !379, line: 61, baseType: !6091, size: 64)
!6091 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6092)
!6092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6093)
!6093 = !{!6094, !6100}
!6094 = !DIDerivedType(tag: DW_TAG_member, scope: !6092, file: !325, line: 38, baseType: !6095, size: 32)
!6095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6092, file: !325, line: 38, size: 32, elements: !6096)
!6096 = !{!6097, !6099}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6095, file: !325, line: 39, baseType: !6098, size: 32)
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6092, size: 32)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6095, file: !325, line: 40, baseType: !6098, size: 32)
!6100 = !DIDerivedType(tag: DW_TAG_member, scope: !6092, file: !325, line: 42, baseType: !6101, size: 32, offset: 32)
!6101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6092, file: !325, line: 42, size: 32, elements: !6102)
!6102 = !{!6103, !6104}
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6101, file: !325, line: 43, baseType: !6098, size: 32)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6101, file: !325, line: 44, baseType: !6098, size: 32)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6088, file: !379, line: 62, baseType: !6106, size: 64)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6107)
!6107 = !{!6108}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6106, file: !404, line: 50, baseType: !6109, size: 64)
!6109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6110, size: 64, elements: !363)
!6110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 32)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6085, file: !379, line: 68, baseType: !6112, size: 32, offset: 64)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 32)
!6113 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6114)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6115)
!6115 = !{!6116}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6114, file: !320, line: 232, baseType: !6117, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6092)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6085, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6085, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6120 = !DIDerivedType(tag: DW_TAG_member, scope: !6085, file: !379, line: 90, baseType: !6121, size: 16, offset: 112)
!6121 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6085, file: !379, line: 90, size: 16, elements: !6122)
!6122 = !{!6123, !6128}
!6123 = !DIDerivedType(tag: DW_TAG_member, scope: !6121, file: !379, line: 91, baseType: !6124, size: 16)
!6124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6121, file: !379, line: 91, size: 16, elements: !6125)
!6125 = !{!6126, !6127}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6124, file: !379, line: 96, baseType: !425, size: 8)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6124, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6121, file: !379, line: 100, baseType: !429, size: 16)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6085, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6085, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6085, file: !379, line: 131, baseType: !6132, size: 192, offset: 192)
!6132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6133)
!6133 = !{!6134, !6135, !6141}
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6132, file: !320, line: 245, baseType: !6091, size: 64)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6132, file: !320, line: 246, baseType: !6136, size: 32, offset: 64)
!6136 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6137)
!6137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6138, size: 32)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{null, !6140}
!6140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6132, size: 32)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6132, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6082, file: !379, line: 250, baseType: !6143, size: 288, offset: 384)
!6143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6144)
!6144 = !{!6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152, !6153}
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6143, file: !446, line: 26, baseType: !121, size: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6143, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6143, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6143, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6143, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6143, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6143, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6143, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6143, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6082, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6082, file: !379, line: 256, baseType: !6113, size: 64, offset: 704)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6082, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6082, file: !379, line: 300, baseType: !6158, size: 96, offset: 800)
!6158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6159)
!6159 = !{!6160, !6161, !6162}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6158, file: !379, line: 153, baseType: !22, size: 32)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6158, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6158, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6082, file: !379, line: 325, baseType: !6164, size: 32, offset: 896)
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 32)
!6165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6166)
!6166 = !{!6167, !6173, !6174}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6165, file: !296, line: 5074, baseType: !6168, size: 96)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6169)
!6169 = !{!6170, !6171, !6172}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6168, file: !472, line: 57, baseType: !475, size: 32)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6168, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6168, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6165, file: !296, line: 5075, baseType: !6113, size: 64, offset: 96)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6165, file: !296, line: 5076, baseType: !6175, offset: 160)
!6175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6082, file: !379, line: 343, baseType: !6177, size: 64, offset: 928)
!6177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6178)
!6178 = !{!6179, !6180}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6177, file: !446, line: 63, baseType: !121, size: 32)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6177, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 32)
!6182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3489, line: 44, baseType: !6183)
!6183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2162, line: 47, size: 8, elements: !6184)
!6184 = !{!6185}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6183, file: !2162, line: 48, baseType: !146, size: 8)
!6186 = !{!6187, !6188, !6189, !6190, !6191, !6192, !6193, !6194}
!6187 = !DILocalVariable(name: "thread", arg: 1, scope: !6077, file: !6078, line: 56, type: !6081)
!6188 = !DILocalVariable(name: "stack", arg: 2, scope: !6077, file: !6078, line: 56, type: !6181)
!6189 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6077, file: !6078, line: 57, type: !344)
!6190 = !DILocalVariable(name: "entry", arg: 4, scope: !6077, file: !6078, line: 57, type: !3488)
!6191 = !DILocalVariable(name: "p1", arg: 5, scope: !6077, file: !6078, line: 58, type: !102)
!6192 = !DILocalVariable(name: "p2", arg: 6, scope: !6077, file: !6078, line: 58, type: !102)
!6193 = !DILocalVariable(name: "p3", arg: 7, scope: !6077, file: !6078, line: 58, type: !102)
!6194 = !DILocalVariable(name: "iframe", scope: !6077, file: !6078, line: 60, type: !2713)
!6195 = !DILocation(line: 0, scope: !6077)
!6196 = !DILocation(line: 85, column: 11, scope: !6077)
!6197 = !DILocation(line: 93, column: 10, scope: !6077)
!6198 = !DILocation(line: 98, column: 13, scope: !6077)
!6199 = !DILocation(line: 100, column: 15, scope: !6077)
!6200 = !DILocation(line: 100, column: 10, scope: !6077)
!6201 = !DILocation(line: 100, column: 13, scope: !6077)
!6202 = !DILocation(line: 101, column: 15, scope: !6077)
!6203 = !DILocation(line: 101, column: 10, scope: !6077)
!6204 = !DILocation(line: 101, column: 13, scope: !6077)
!6205 = !DILocation(line: 102, column: 15, scope: !6077)
!6206 = !DILocation(line: 102, column: 10, scope: !6077)
!6207 = !DILocation(line: 102, column: 13, scope: !6077)
!6208 = !DILocation(line: 103, column: 15, scope: !6077)
!6209 = !DILocation(line: 103, column: 10, scope: !6077)
!6210 = !DILocation(line: 103, column: 13, scope: !6077)
!6211 = !DILocation(line: 106, column: 10, scope: !6077)
!6212 = !DILocation(line: 106, column: 15, scope: !6077)
!6213 = !DILocation(line: 122, column: 29, scope: !6077)
!6214 = !DILocation(line: 122, column: 23, scope: !6077)
!6215 = !DILocation(line: 122, column: 27, scope: !6077)
!6216 = !DILocation(line: 123, column: 15, scope: !6077)
!6217 = !DILocation(line: 123, column: 23, scope: !6077)
!6218 = !DILocation(line: 143, column: 1, scope: !6077)
!6219 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6078, file: !6078, line: 385, type: !6220, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6223)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{!121, !6222, !6222}
!6222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!6223 = !{!6224, !6225, !6226, !6229}
!6224 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6219, file: !6078, line: 385, type: !6222)
!6225 = !DILocalVariable(name: "psp", arg: 2, scope: !6219, file: !6078, line: 385, type: !6222)
!6226 = !DILocalVariable(name: "thread", scope: !6219, file: !6078, line: 388, type: !6227)
!6227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6228, size: 32)
!6228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6082)
!6229 = !DILocalVariable(name: "guard_len", scope: !6219, file: !6078, line: 405, type: !121)
!6230 = !DILocation(line: 0, scope: !6219)
!6231 = !DILocation(line: 388, column: 34, scope: !6219)
!6232 = !DILocation(line: 390, column: 13, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6219, file: !6078, line: 390, column: 6)
!6234 = !DILocation(line: 390, column: 6, scope: !6219)
!6235 = !DILocation(line: 438, column: 6, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6219, file: !6078, line: 438, column: 6)
!6237 = !DILocation(line: 438, column: 6, scope: !6219)
!6238 = !DILocation(line: 442, column: 3, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6236, file: !6078, line: 440, column: 22)
!6240 = !DILocation(line: 455, column: 1, scope: !6219)
!6241 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6078, file: !6078, line: 530, type: !6242, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6244)
!6242 = !DISubroutineType(types: !6243)
!6243 = !{null, !6081, !344, !3488}
!6244 = !{!6245, !6246, !6247}
!6245 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6241, file: !6078, line: 530, type: !6081)
!6246 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6241, file: !6078, line: 530, type: !344)
!6247 = !DILocalVariable(name: "_main", arg: 3, scope: !6241, file: !6078, line: 531, type: !3488)
!6248 = !DILocation(line: 0, scope: !6241)
!6249 = !DILocation(line: 535, column: 11, scope: !6241)
!6250 = !DILocation(line: 560, column: 2, scope: !6241)
!6251 = !DILocation(line: 576, column: 2, scope: !6241)
!6252 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6253 = !DILocation(line: 603, column: 2, scope: !6241)
!6254 = distinct !DISubprogram(name: "z_arm_fault", scope: !6255, file: !6255, line: 1036, type: !6256, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6271)
!6255 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6256 = !DISubroutineType(types: !6257)
!6257 = !{null, !121, !121, !121, !6258}
!6258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6259, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !446, line: 37, baseType: !6260)
!6260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6261)
!6261 = !{!6262, !6263, !6264, !6265, !6266, !6267, !6268, !6269, !6270}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6260, file: !446, line: 26, baseType: !121, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6260, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6260, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6260, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6260, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6260, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6260, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6260, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6260, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6271 = !{!6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281}
!6272 = !DILocalVariable(name: "msp", arg: 1, scope: !6254, file: !6255, line: 1036, type: !121)
!6273 = !DILocalVariable(name: "psp", arg: 2, scope: !6254, file: !6255, line: 1036, type: !121)
!6274 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6254, file: !6255, line: 1036, type: !121)
!6275 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6254, file: !6255, line: 1037, type: !6258)
!6276 = !DILocalVariable(name: "reason", scope: !6254, file: !6255, line: 1039, type: !121)
!6277 = !DILocalVariable(name: "fault", scope: !6254, file: !6255, line: 1040, type: !103)
!6278 = !DILocalVariable(name: "recoverable", scope: !6254, file: !6255, line: 1041, type: !157)
!6279 = !DILocalVariable(name: "nested_exc", scope: !6254, file: !6255, line: 1041, type: !157)
!6280 = !DILocalVariable(name: "esf", scope: !6254, file: !6255, line: 1042, type: !2781)
!6281 = !DILocalVariable(name: "esf_copy", scope: !6254, file: !6255, line: 1047, type: !2782)
!6282 = !DILocation(line: 0, scope: !6254)
!6283 = !DILocation(line: 1040, column: 19, scope: !6254)
!6284 = !DILocation(line: 1040, column: 24, scope: !6254)
!6285 = !DILocation(line: 1041, column: 2, scope: !6254)
!6286 = !DILocation(line: 1047, column: 2, scope: !6254)
!6287 = !DILocation(line: 1047, column: 15, scope: !6254)
!6288 = !DILocalVariable(name: "key", arg: 1, scope: !6289, file: !5739, line: 84, type: !32)
!6289 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6290)
!6290 = !{!6288}
!6291 = !DILocation(line: 0, scope: !6289, inlinedAt: !6292)
!6292 = distinct !DILocation(line: 1050, column: 2, scope: !6254)
!6293 = !DILocation(line: 95, column: 2, scope: !6289, inlinedAt: !6292)
!6294 = !{i64 2271989}
!6295 = !DILocation(line: 1055, column: 9, scope: !6254)
!6296 = !DILocation(line: 1063, column: 11, scope: !6254)
!6297 = !DILocation(line: 1064, column: 6, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6254, file: !6255, line: 1064, column: 6)
!6299 = !{i8 0, i8 2}
!6300 = !DILocation(line: 1064, column: 6, scope: !6254)
!6301 = !DILocation(line: 1070, column: 20, scope: !6254)
!6302 = !DILocation(line: 1070, column: 2, scope: !6254)
!6303 = !DILocation(line: 1089, column: 6, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6254, file: !6255, line: 1089, column: 6)
!6305 = !DILocation(line: 0, scope: !6304)
!6306 = !DILocation(line: 1089, column: 6, scope: !6254)
!6307 = !DILocation(line: 1090, column: 28, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !6255, line: 1090, column: 7)
!6309 = distinct !DILexicalBlock(scope: !6304, file: !6255, line: 1089, column: 18)
!6310 = !DILocation(line: 1090, column: 44, scope: !6308)
!6311 = !DILocation(line: 1090, column: 7, scope: !6309)
!6312 = !DILocation(line: 1091, column: 24, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6308, file: !6255, line: 1090, column: 50)
!6314 = !DILocation(line: 1092, column: 3, scope: !6313)
!6315 = !DILocation(line: 1094, column: 23, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6304, file: !6255, line: 1093, column: 9)
!6317 = !DILocation(line: 1097, column: 2, scope: !6254)
!6318 = !DILocation(line: 1098, column: 1, scope: !6254)
!6319 = distinct !DISubprogram(name: "get_esf", scope: !6255, file: !6255, line: 894, type: !6320, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6323)
!6320 = !DISubroutineType(types: !6321)
!6321 = !{!2781, !121, !121, !121, !6322}
!6322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!6323 = !{!6324, !6325, !6326, !6327, !6328, !6329}
!6324 = !DILocalVariable(name: "msp", arg: 1, scope: !6319, file: !6255, line: 894, type: !121)
!6325 = !DILocalVariable(name: "psp", arg: 2, scope: !6319, file: !6255, line: 894, type: !121)
!6326 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6319, file: !6255, line: 894, type: !121)
!6327 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6319, file: !6255, line: 895, type: !6322)
!6328 = !DILocalVariable(name: "alternative_state_exc", scope: !6319, file: !6255, line: 897, type: !157)
!6329 = !DILocalVariable(name: "ptr_esf", scope: !6319, file: !6255, line: 898, type: !2781)
!6330 = !DILocation(line: 0, scope: !6319)
!6331 = !DILocation(line: 900, column: 14, scope: !6319)
!6332 = !DILocation(line: 902, column: 49, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6319, file: !6255, line: 902, column: 6)
!6334 = !DILocation(line: 902, column: 6, scope: !6319)
!6335 = !DILocation(line: 983, column: 18, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6319, file: !6255, line: 983, column: 6)
!6337 = !DILocation(line: 991, column: 7, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !6255, line: 990, column: 30)
!6339 = distinct !DILexicalBlock(scope: !6319, file: !6255, line: 990, column: 6)
!6340 = !DILocation(line: 998, column: 16, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !6255, line: 995, column: 10)
!6342 = distinct !DILexicalBlock(scope: !6338, file: !6255, line: 991, column: 7)
!6343 = !DILocation(line: 1002, column: 2, scope: !6319)
!6344 = !DILocation(line: 1003, column: 1, scope: !6319)
!6345 = distinct !DISubprogram(name: "fault_handle", scope: !6255, file: !6255, line: 786, type: !6346, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6348)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!121, !2781, !103, !6322}
!6348 = !{!6349, !6350, !6351, !6352}
!6349 = !DILocalVariable(name: "esf", arg: 1, scope: !6345, file: !6255, line: 786, type: !2781)
!6350 = !DILocalVariable(name: "fault", arg: 2, scope: !6345, file: !6255, line: 786, type: !103)
!6351 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6345, file: !6255, line: 786, type: !6322)
!6352 = !DILocalVariable(name: "reason", scope: !6345, file: !6255, line: 788, type: !121)
!6353 = !DILocation(line: 0, scope: !6345)
!6354 = !DILocation(line: 790, column: 15, scope: !6345)
!6355 = !DILocation(line: 792, column: 2, scope: !6345)
!6356 = !DILocation(line: 794, column: 12, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6345, file: !6255, line: 792, column: 17)
!6358 = !DILocation(line: 795, column: 3, scope: !6357)
!6359 = !DILocation(line: 800, column: 12, scope: !6357)
!6360 = !DILocation(line: 801, column: 3, scope: !6357)
!6361 = !DILocation(line: 803, column: 12, scope: !6357)
!6362 = !DILocation(line: 804, column: 3, scope: !6357)
!6363 = !DILocation(line: 806, column: 12, scope: !6357)
!6364 = !DILocation(line: 807, column: 3, scope: !6357)
!6365 = !DILocation(line: 814, column: 3, scope: !6357)
!6366 = !DILocation(line: 815, column: 3, scope: !6357)
!6367 = !DILocation(line: 829, column: 2, scope: !6345)
!6368 = distinct !DISubprogram(name: "hard_fault", scope: !6255, file: !6255, line: 709, type: !6369, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6371)
!6369 = !DISubroutineType(types: !6370)
!6370 = !{!121, !2781, !6322}
!6371 = !{!6372, !6373, !6374}
!6372 = !DILocalVariable(name: "esf", arg: 1, scope: !6368, file: !6255, line: 709, type: !2781)
!6373 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6368, file: !6255, line: 709, type: !6322)
!6374 = !DILocalVariable(name: "reason", scope: !6368, file: !6255, line: 711, type: !121)
!6375 = !DILocation(line: 0, scope: !6368)
!6376 = !DILocation(line: 732, column: 15, scope: !6368)
!6377 = !DILocation(line: 734, column: 12, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6368, file: !6255, line: 734, column: 6)
!6379 = !DILocation(line: 734, column: 17, scope: !6378)
!6380 = !DILocation(line: 734, column: 41, scope: !6378)
!6381 = !DILocation(line: 734, column: 6, scope: !6368)
!6382 = !DILocation(line: 736, column: 19, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6378, file: !6255, line: 736, column: 13)
!6384 = !DILocation(line: 736, column: 49, scope: !6383)
!6385 = !DILocation(line: 736, column: 13, scope: !6378)
!6386 = !DILocation(line: 738, column: 19, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6383, file: !6255, line: 738, column: 13)
!6388 = !DILocation(line: 738, column: 24, scope: !6387)
!6389 = !DILocation(line: 738, column: 47, scope: !6387)
!6390 = !DILocation(line: 738, column: 13, scope: !6383)
!6391 = !DILocation(line: 740, column: 7, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !6255, line: 740, column: 7)
!6393 = distinct !DILexicalBlock(scope: !6387, file: !6255, line: 738, column: 53)
!6394 = !DILocation(line: 740, column: 7, scope: !6393)
!6395 = !DILocation(line: 742, column: 24, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6392, file: !6255, line: 740, column: 38)
!6397 = !DILocation(line: 743, column: 3, scope: !6396)
!6398 = !DILocation(line: 743, column: 20, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6392, file: !6255, line: 743, column: 14)
!6400 = !DILocation(line: 743, column: 25, scope: !6399)
!6401 = !DILocation(line: 743, column: 52, scope: !6399)
!6402 = !DILocation(line: 743, column: 14, scope: !6392)
!6403 = !DILocation(line: 744, column: 13, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6399, file: !6255, line: 743, column: 58)
!6405 = !DILocation(line: 745, column: 3, scope: !6404)
!6406 = !DILocation(line: 745, column: 20, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6399, file: !6255, line: 745, column: 14)
!6408 = !DILocation(line: 745, column: 25, scope: !6407)
!6409 = !DILocation(line: 745, column: 52, scope: !6407)
!6410 = !DILocation(line: 745, column: 14, scope: !6399)
!6411 = !DILocation(line: 746, column: 13, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !6255, line: 745, column: 58)
!6413 = !DILocation(line: 747, column: 3, scope: !6412)
!6414 = !DILocation(line: 747, column: 20, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6407, file: !6255, line: 747, column: 14)
!6416 = !DILocation(line: 747, column: 52, scope: !6415)
!6417 = !DILocation(line: 747, column: 14, scope: !6407)
!6418 = !DILocation(line: 748, column: 13, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !6255, line: 747, column: 58)
!6420 = !DILocation(line: 753, column: 3, scope: !6419)
!6421 = !DILocation(line: 766, column: 2, scope: !6368)
!6422 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6255, file: !6255, line: 229, type: !6346, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6423)
!6423 = !{!6424, !6425, !6426, !6427, !6428, !6429, !6432}
!6424 = !DILocalVariable(name: "esf", arg: 1, scope: !6422, file: !6255, line: 229, type: !2781)
!6425 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6422, file: !6255, line: 229, type: !103)
!6426 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6422, file: !6255, line: 230, type: !6322)
!6427 = !DILocalVariable(name: "reason", scope: !6422, file: !6255, line: 232, type: !121)
!6428 = !DILocalVariable(name: "mmfar", scope: !6422, file: !6255, line: 233, type: !121)
!6429 = !DILocalVariable(name: "temp", scope: !6430, file: !6255, line: 254, type: !121)
!6430 = distinct !DILexicalBlock(scope: !6431, file: !6255, line: 244, column: 48)
!6431 = distinct !DILexicalBlock(scope: !6422, file: !6255, line: 244, column: 6)
!6432 = !DILocalVariable(name: "min_stack_ptr", scope: !6433, file: !6255, line: 309, type: !121)
!6433 = distinct !DILexicalBlock(scope: !6434, file: !6255, line: 308, column: 43)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !6255, line: 308, column: 7)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !6255, line: 289, column: 40)
!6436 = distinct !DILexicalBlock(scope: !6422, file: !6255, line: 288, column: 6)
!6437 = !DILocation(line: 0, scope: !6422)
!6438 = !DILocation(line: 237, column: 12, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6422, file: !6255, line: 237, column: 6)
!6440 = !DILocation(line: 241, column: 12, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6422, file: !6255, line: 241, column: 6)
!6442 = !DILocation(line: 244, column: 12, scope: !6431)
!6443 = !DILocation(line: 244, column: 17, scope: !6431)
!6444 = !DILocation(line: 244, column: 42, scope: !6431)
!6445 = !DILocation(line: 244, column: 6, scope: !6422)
!6446 = !DILocation(line: 254, column: 24, scope: !6430)
!6447 = !DILocation(line: 0, scope: !6430)
!6448 = !DILocation(line: 256, column: 13, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6430, file: !6255, line: 256, column: 7)
!6450 = !DILocation(line: 256, column: 18, scope: !6449)
!6451 = !DILocation(line: 256, column: 44, scope: !6449)
!6452 = !DILocation(line: 256, column: 7, scope: !6430)
!6453 = !DILocation(line: 259, column: 24, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !6255, line: 259, column: 8)
!6455 = distinct !DILexicalBlock(scope: !6449, file: !6255, line: 256, column: 50)
!6456 = !DILocation(line: 259, column: 8, scope: !6455)
!6457 = !DILocation(line: 261, column: 15, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6454, file: !6255, line: 259, column: 30)
!6459 = !DILocation(line: 262, column: 4, scope: !6458)
!6460 = !DILocation(line: 265, column: 12, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6422, file: !6255, line: 265, column: 6)
!6462 = !DILocation(line: 269, column: 12, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6422, file: !6255, line: 269, column: 6)
!6464 = !DILocation(line: 288, column: 12, scope: !6436)
!6465 = !DILocation(line: 288, column: 17, scope: !6436)
!6466 = !DILocation(line: 288, column: 41, scope: !6436)
!6467 = !DILocation(line: 289, column: 9, scope: !6436)
!6468 = !DILocation(line: 289, column: 14, scope: !6436)
!6469 = !DILocation(line: 288, column: 6, scope: !6422)
!6470 = !DILocation(line: 308, column: 12, scope: !6434)
!6471 = !DILocation(line: 308, column: 17, scope: !6434)
!6472 = !DILocation(line: 308, column: 7, scope: !6435)
!6473 = !DILocation(line: 310, column: 6, scope: !6433)
!6474 = !DILocation(line: 309, column: 29, scope: !6433)
!6475 = !DILocation(line: 0, scope: !6433)
!6476 = !DILocation(line: 312, column: 8, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6433, file: !6255, line: 312, column: 8)
!6478 = !DILocation(line: 312, column: 8, scope: !6433)
!6479 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6480, file: !5954, line: 1099, type: !121)
!6480 = distinct !DISubprogram(name: "__set_PSP", scope: !5954, file: !5954, line: 1099, type: !6045, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6481)
!6481 = !{!6479}
!6482 = !DILocation(line: 0, scope: !6480, inlinedAt: !6483)
!6483 = distinct !DILocation(line: 338, column: 5, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6477, file: !6255, line: 312, column: 23)
!6485 = !DILocation(line: 1101, column: 3, scope: !6480, inlinedAt: !6483)
!6486 = !{i64 3527650}
!6487 = !DILocation(line: 341, column: 4, scope: !6484)
!6488 = !DILocation(line: 360, column: 12, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6422, file: !6255, line: 360, column: 6)
!6490 = !DILocation(line: 360, column: 17, scope: !6489)
!6491 = !DILocation(line: 360, column: 41, scope: !6489)
!6492 = !DILocation(line: 360, column: 6, scope: !6422)
!6493 = !DILocation(line: 361, column: 14, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6489, file: !6255, line: 360, column: 47)
!6495 = !DILocation(line: 362, column: 2, scope: !6494)
!6496 = !DILocation(line: 366, column: 12, scope: !6422)
!6497 = !DILocation(line: 369, column: 15, scope: !6422)
!6498 = !DILocation(line: 371, column: 2, scope: !6422)
!6499 = distinct !DISubprogram(name: "bus_fault", scope: !6255, file: !6255, line: 383, type: !6500, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6502)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!103, !2781, !103, !6322}
!6502 = !{!6503, !6504, !6505, !6506, !6507}
!6503 = !DILocalVariable(name: "esf", arg: 1, scope: !6499, file: !6255, line: 383, type: !2781)
!6504 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6499, file: !6255, line: 383, type: !103)
!6505 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6499, file: !6255, line: 383, type: !6322)
!6506 = !DILocalVariable(name: "reason", scope: !6499, file: !6255, line: 385, type: !121)
!6507 = !DILocalVariable(name: "bfar", scope: !6508, file: !6255, line: 405, type: !121)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !6255, line: 395, column: 42)
!6509 = distinct !DILexicalBlock(scope: !6499, file: !6255, line: 395, column: 6)
!6510 = !DILocation(line: 0, scope: !6499)
!6511 = !DILocation(line: 389, column: 11, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6499, file: !6255, line: 389, column: 6)
!6513 = !DILocation(line: 392, column: 11, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6499, file: !6255, line: 392, column: 6)
!6515 = !DILocation(line: 395, column: 11, scope: !6509)
!6516 = !DILocation(line: 395, column: 16, scope: !6509)
!6517 = !DILocation(line: 395, column: 6, scope: !6499)
!6518 = !DILocation(line: 405, column: 3, scope: !6508)
!6519 = !DILocation(line: 0, scope: !6508)
!6520 = !DILocation(line: 407, column: 13, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6508, file: !6255, line: 407, column: 7)
!6522 = !DILocation(line: 407, column: 18, scope: !6521)
!6523 = !DILocation(line: 407, column: 44, scope: !6521)
!6524 = !DILocation(line: 407, column: 7, scope: !6508)
!6525 = !DILocation(line: 411, column: 15, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !6255, line: 409, column: 30)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !6255, line: 409, column: 8)
!6528 = distinct !DILexicalBlock(scope: !6521, file: !6255, line: 407, column: 50)
!6529 = !DILocation(line: 412, column: 4, scope: !6526)
!6530 = !DILocation(line: 415, column: 11, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6499, file: !6255, line: 415, column: 6)
!6532 = !DILocation(line: 418, column: 12, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6499, file: !6255, line: 418, column: 6)
!6534 = !DILocation(line: 418, column: 17, scope: !6533)
!6535 = !DILocation(line: 418, column: 41, scope: !6533)
!6536 = !DILocation(line: 418, column: 6, scope: !6499)
!6537 = !DILocation(line: 423, column: 18, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6533, file: !6255, line: 423, column: 13)
!6539 = !DILocation(line: 524, column: 12, scope: !6499)
!6540 = !DILocation(line: 526, column: 15, scope: !6499)
!6541 = !DILocation(line: 528, column: 2, scope: !6499)
!6542 = distinct !DISubprogram(name: "usage_fault", scope: !6255, file: !6255, line: 539, type: !6543, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6547)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!121, !6545}
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 32)
!6546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2782)
!6547 = !{!6548, !6549}
!6548 = !DILocalVariable(name: "esf", arg: 1, scope: !6542, file: !6255, line: 539, type: !6545)
!6549 = !DILocalVariable(name: "reason", scope: !6542, file: !6255, line: 541, type: !121)
!6550 = !DILocation(line: 0, scope: !6542)
!6551 = !DILocation(line: 546, column: 12, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6542, file: !6255, line: 546, column: 6)
!6553 = !DILocation(line: 549, column: 12, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6542, file: !6255, line: 549, column: 6)
!6555 = !DILocation(line: 567, column: 12, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6542, file: !6255, line: 567, column: 6)
!6557 = !DILocation(line: 570, column: 12, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6542, file: !6255, line: 570, column: 6)
!6559 = !DILocation(line: 573, column: 12, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6542, file: !6255, line: 573, column: 6)
!6561 = !DILocation(line: 576, column: 12, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6542, file: !6255, line: 576, column: 6)
!6563 = !DILocation(line: 581, column: 12, scope: !6542)
!6564 = !DILocation(line: 583, column: 2, scope: !6542)
!6565 = distinct !DISubprogram(name: "debug_monitor", scope: !6255, file: !6255, line: 632, type: !6566, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6568)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{null, !2781, !6322}
!6568 = !{!6569, !6570}
!6569 = !DILocalVariable(name: "esf", arg: 1, scope: !6565, file: !6255, line: 632, type: !2781)
!6570 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6565, file: !6255, line: 632, type: !6322)
!6571 = !DILocation(line: 0, scope: !6565)
!6572 = !DILocation(line: 634, column: 15, scope: !6565)
!6573 = !DILocation(line: 652, column: 1, scope: !6565)
!6574 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6255, file: !6255, line: 658, type: !6575, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !6577)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{!157, !2781}
!6577 = !{!6578, !6579, !6580}
!6578 = !DILocalVariable(name: "esf", arg: 1, scope: !6574, file: !6255, line: 658, type: !2781)
!6579 = !DILocalVariable(name: "ret_addr", scope: !6574, file: !6255, line: 660, type: !2555)
!6580 = !DILocalVariable(name: "fault_insn", scope: !6574, file: !6255, line: 686, type: !429)
!6581 = !DILocation(line: 0, scope: !6574)
!6582 = !DILocation(line: 660, column: 46, scope: !6574)
!6583 = !DILocation(line: 660, column: 23, scope: !6574)
!6584 = !DILocation(line: 682, column: 11, scope: !6574)
!6585 = !DILocation(line: 271, column: 3, scope: !6586, inlinedAt: !6587)
!6586 = distinct !DISubprogram(name: "__DSB", scope: !5954, file: !5954, line: 269, type: !3174, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !317)
!6587 = distinct !DILocation(line: 683, column: 2, scope: !6574)
!6588 = !{i64 3503785}
!6589 = !DILocation(line: 260, column: 3, scope: !6590, inlinedAt: !6591)
!6590 = distinct !DISubprogram(name: "__ISB", scope: !5954, file: !5954, line: 258, type: !3174, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !317)
!6591 = distinct !DILocation(line: 684, column: 2, scope: !6574)
!6592 = !{i64 3503502}
!6593 = !DILocation(line: 686, column: 35, scope: !6574)
!6594 = !DILocation(line: 686, column: 24, scope: !6574)
!6595 = !DILocation(line: 688, column: 11, scope: !6574)
!6596 = !DILocation(line: 271, column: 3, scope: !6586, inlinedAt: !6597)
!6597 = distinct !DILocation(line: 689, column: 2, scope: !6574)
!6598 = !DILocation(line: 260, column: 3, scope: !6590, inlinedAt: !6599)
!6599 = distinct !DILocation(line: 690, column: 2, scope: !6574)
!6600 = !DILocation(line: 693, column: 45, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6574, file: !6255, line: 693, column: 6)
!6602 = !DILocation(line: 699, column: 1, scope: !6574)
!6603 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6255, file: !6255, line: 1107, type: !3174, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2753, retainedNodes: !317)
!6604 = !DILocation(line: 1111, column: 11, scope: !6603)
!6605 = !DILocation(line: 1136, column: 1, scope: !6603)
!6606 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6607, file: !6607, line: 26, type: !3174, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2824, retainedNodes: !6608)
!6607 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6608 = !{!6609}
!6609 = !DILocalVariable(name: "irq", scope: !6606, file: !6607, line: 28, type: !103)
!6610 = !DILocation(line: 0, scope: !6606)
!6611 = !DILocation(line: 30, column: 2, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6606, file: !6607, line: 30, column: 2)
!6613 = !DILocation(line: 31, column: 3, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !6607, line: 30, column: 39)
!6615 = distinct !DILexicalBlock(scope: !6612, file: !6607, line: 30, column: 2)
!6616 = !DILocation(line: 30, column: 35, scope: !6615)
!6617 = !DILocation(line: 30, column: 13, scope: !6615)
!6618 = distinct !{!6618, !6611, !6619}
!6619 = !DILocation(line: 32, column: 2, scope: !6612)
!6620 = !DILocation(line: 33, column: 1, scope: !6606)
!6621 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5988, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2824, retainedNodes: !6622)
!6622 = !{!6623, !6624}
!6623 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6621, file: !515, line: 1814, type: !771)
!6624 = !DILocalVariable(name: "priority", arg: 2, scope: !6621, file: !515, line: 1814, type: !121)
!6625 = !DILocation(line: 0, scope: !6621)
!6626 = !DILocation(line: 1816, column: 7, scope: !6621)
!6627 = !DILocation(line: 0, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6621, file: !515, line: 1816, column: 7)
!6629 = !DILocation(line: 1824, column: 1, scope: !6621)
!6630 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6631, file: !6631, line: 27, type: !6632, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !6735)
!6631 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6632 = !DISubroutineType(types: !6633)
!6633 = !{null, !6634}
!6634 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !6635)
!6635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6636, size: 32)
!6636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !6637)
!6637 = !{!6638, !6696, !6708, !6709, !6710, !6711, !6717, !6730}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6636, file: !379, line: 247, baseType: !6639, size: 384)
!6639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !6640)
!6640 = !{!6641, !6665, !6672, !6673, !6674, !6683, !6684, !6685}
!6641 = !DIDerivedType(tag: DW_TAG_member, scope: !6639, file: !379, line: 60, baseType: !6642, size: 64)
!6642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6639, file: !379, line: 60, size: 64, elements: !6643)
!6643 = !{!6644, !6659}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6642, file: !379, line: 61, baseType: !6645, size: 64)
!6645 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !6646)
!6646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !6647)
!6647 = !{!6648, !6654}
!6648 = !DIDerivedType(tag: DW_TAG_member, scope: !6646, file: !325, line: 38, baseType: !6649, size: 32)
!6649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6646, file: !325, line: 38, size: 32, elements: !6650)
!6650 = !{!6651, !6653}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6649, file: !325, line: 39, baseType: !6652, size: 32)
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6646, size: 32)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6649, file: !325, line: 40, baseType: !6652, size: 32)
!6654 = !DIDerivedType(tag: DW_TAG_member, scope: !6646, file: !325, line: 42, baseType: !6655, size: 32, offset: 32)
!6655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6646, file: !325, line: 42, size: 32, elements: !6656)
!6656 = !{!6657, !6658}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6655, file: !325, line: 43, baseType: !6652, size: 32)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6655, file: !325, line: 44, baseType: !6652, size: 32)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6642, file: !379, line: 62, baseType: !6660, size: 64)
!6660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !6661)
!6661 = !{!6662}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6660, file: !404, line: 50, baseType: !6663, size: 64)
!6663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6664, size: 64, elements: !363)
!6664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6660, size: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6639, file: !379, line: 68, baseType: !6666, size: 32, offset: 64)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 32)
!6667 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !6668)
!6668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !6669)
!6669 = !{!6670}
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6668, file: !320, line: 232, baseType: !6671, size: 64)
!6671 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !6646)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6639, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6639, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!6674 = !DIDerivedType(tag: DW_TAG_member, scope: !6639, file: !379, line: 90, baseType: !6675, size: 16, offset: 112)
!6675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6639, file: !379, line: 90, size: 16, elements: !6676)
!6676 = !{!6677, !6682}
!6677 = !DIDerivedType(tag: DW_TAG_member, scope: !6675, file: !379, line: 91, baseType: !6678, size: 16)
!6678 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6675, file: !379, line: 91, size: 16, elements: !6679)
!6679 = !{!6680, !6681}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6678, file: !379, line: 96, baseType: !425, size: 8)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6678, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6675, file: !379, line: 100, baseType: !429, size: 16)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6639, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6639, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6639, file: !379, line: 131, baseType: !6686, size: 192, offset: 192)
!6686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !6687)
!6687 = !{!6688, !6689, !6695}
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6686, file: !320, line: 245, baseType: !6645, size: 64)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6686, file: !320, line: 246, baseType: !6690, size: 32, offset: 64)
!6690 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !6691)
!6691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6692, size: 32)
!6692 = !DISubroutineType(types: !6693)
!6693 = !{null, !6694}
!6694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6686, size: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6686, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6636, file: !379, line: 250, baseType: !6697, size: 288, offset: 384)
!6697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !6698)
!6698 = !{!6699, !6700, !6701, !6702, !6703, !6704, !6705, !6706, !6707}
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6697, file: !446, line: 26, baseType: !121, size: 32)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6697, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6697, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6697, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6697, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6697, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6697, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6697, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6697, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6636, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6636, file: !379, line: 256, baseType: !6667, size: 64, offset: 704)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6636, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6636, file: !379, line: 300, baseType: !6712, size: 96, offset: 800)
!6712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !6713)
!6713 = !{!6714, !6715, !6716}
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6712, file: !379, line: 153, baseType: !22, size: 32)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6712, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6712, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6636, file: !379, line: 325, baseType: !6718, size: 32, offset: 896)
!6718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6719, size: 32)
!6719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !6720)
!6720 = !{!6721, !6727, !6728}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6719, file: !296, line: 5074, baseType: !6722, size: 96)
!6722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !6723)
!6723 = !{!6724, !6725, !6726}
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6722, file: !472, line: 57, baseType: !475, size: 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6722, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6722, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6719, file: !296, line: 5075, baseType: !6667, size: 64, offset: 96)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6719, file: !296, line: 5076, baseType: !6729, offset: 160)
!6729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6636, file: !379, line: 343, baseType: !6731, size: 64, offset: 928)
!6731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !6732)
!6732 = !{!6733, !6734}
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6731, file: !446, line: 63, baseType: !121, size: 32)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6731, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!6735 = !{!6736}
!6736 = !DILocalVariable(name: "thread", arg: 1, scope: !6630, file: !6631, line: 27, type: !6634)
!6737 = !DILocation(line: 0, scope: !6630)
!6738 = !DILocation(line: 29, column: 6, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6630, file: !6631, line: 29, column: 6)
!6740 = !DILocation(line: 29, column: 15, scope: !6739)
!6741 = !DILocation(line: 29, column: 6, scope: !6630)
!6742 = !DILocation(line: 1031, column: 3, scope: !6743, inlinedAt: !6746)
!6743 = distinct !DISubprogram(name: "__get_IPSR", scope: !5954, file: !5954, line: 1027, type: !6035, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !6744)
!6744 = !{!6745}
!6745 = !DILocalVariable(name: "result", scope: !6743, file: !5954, line: 1029, type: !121)
!6746 = distinct !DILocation(line: 48, column: 10, scope: !6747, inlinedAt: !6751)
!6747 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6748, file: !6748, line: 46, type: !6749, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !317)
!6748 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!157}
!6751 = distinct !DILocation(line: 30, column: 7, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !6631, line: 30, column: 7)
!6753 = distinct !DILexicalBlock(scope: !6739, file: !6631, line: 29, column: 26)
!6754 = !{i64 3492633}
!6755 = !DILocation(line: 0, scope: !6743, inlinedAt: !6746)
!6756 = !DILocation(line: 48, column: 9, scope: !6747, inlinedAt: !6751)
!6757 = !DILocation(line: 30, column: 7, scope: !6753)
!6758 = !DILocation(line: 42, column: 14, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6752, file: !6631, line: 30, column: 25)
!6760 = !DILocation(line: 48, column: 15, scope: !6759)
!6761 = !DILocation(line: 49, column: 3, scope: !6759)
!6762 = !DILocation(line: 52, column: 2, scope: !6630)
!6763 = !DILocation(line: 53, column: 1, scope: !6630)
!6764 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !374, file: !374, line: 127, type: !3174, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !367, retainedNodes: !317)
!6765 = !DILocation(line: 134, column: 2, scope: !6764)
!6766 = !DILocation(line: 156, column: 1, scope: !6764)
!6767 = !DILocation(line: 0, scope: !373)
!6768 = !DILocation(line: 289, column: 36, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !373, file: !374, line: 285, column: 2)
!6770 = !DILocation(line: 289, column: 42, scope: !6769)
!6771 = !DILocation(line: 300, column: 36, scope: !373)
!6772 = !DILocation(line: 301, column: 35, scope: !373)
!6773 = !DILocation(line: 302, column: 37, scope: !373)
!6774 = !DILocation(line: 311, column: 2, scope: !373)
!6775 = !DILocation(line: 316, column: 1, scope: !373)
!6776 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !543, file: !543, line: 180, type: !3174, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6777 = !DILocation(line: 188, column: 12, scope: !6776)
!6778 = !DILocation(line: 271, column: 3, scope: !6779, inlinedAt: !6780)
!6779 = distinct !DISubprogram(name: "__DSB", scope: !5954, file: !5954, line: 269, type: !3174, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6780 = distinct !DILocation(line: 192, column: 2, scope: !6776)
!6781 = !{i64 3661461}
!6782 = !DILocation(line: 260, column: 3, scope: !6783, inlinedAt: !6784)
!6783 = distinct !DISubprogram(name: "__ISB", scope: !5954, file: !5954, line: 258, type: !3174, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6784 = distinct !DILocation(line: 193, column: 2, scope: !6776)
!6785 = !{i64 3661178}
!6786 = !DILocation(line: 194, column: 1, scope: !6776)
!6787 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !543, file: !543, line: 199, type: !3174, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6788 = !DILocation(line: 282, column: 3, scope: !6789, inlinedAt: !6790)
!6789 = distinct !DISubprogram(name: "__DMB", scope: !5954, file: !5954, line: 280, type: !3174, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !317)
!6790 = distinct !DILocation(line: 202, column: 2, scope: !6787)
!6791 = !{i64 3661737}
!6792 = !DILocation(line: 205, column: 12, scope: !6787)
!6793 = !DILocation(line: 206, column: 1, scope: !6787)
!6794 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !543, file: !543, line: 275, type: !6795, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6808)
!6795 = !DISubroutineType(types: !6796)
!6796 = !{null, !6797, !262, !6222, !6222}
!6797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6798, size: 32)
!6798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6799)
!6799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !494, line: 52, size: 96, elements: !6800)
!6800 = !{!6801, !6802, !6803}
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6799, file: !494, line: 53, baseType: !22, size: 32)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6799, file: !494, line: 54, baseType: !204, size: 32, offset: 32)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6799, file: !494, line: 55, baseType: !6804, size: 32, offset: 64)
!6804 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !500, line: 151, baseType: !6805)
!6805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 149, size: 32, elements: !6806)
!6806 = !{!6807}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6805, file: !500, line: 150, baseType: !121, size: 32)
!6808 = !{!6809, !6810, !6811, !6812}
!6809 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6794, file: !543, line: 276, type: !6797)
!6810 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6794, file: !543, line: 276, type: !262)
!6811 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6794, file: !543, line: 277, type: !6222)
!6812 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6794, file: !543, line: 277, type: !6222)
!6813 = !DILocation(line: 0, scope: !6794)
!6814 = !DILocation(line: 279, column: 6, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6794, file: !543, line: 279, column: 6)
!6816 = !DILocation(line: 285, column: 1, scope: !6794)
!6817 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6818, file: !6818, line: 220, type: !6819, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6821)
!6818 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!103, !6797, !262, !6222, !6222}
!6821 = !{!6822, !6823, !6824, !6825, !6826}
!6822 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6817, file: !6818, line: 221, type: !6797)
!6823 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6817, file: !6818, line: 221, type: !262)
!6824 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6817, file: !6818, line: 222, type: !6222)
!6825 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6817, file: !6818, line: 223, type: !6222)
!6826 = !DILocalVariable(name: "mpu_reg_index", scope: !6817, file: !6818, line: 225, type: !103)
!6827 = !DILocation(line: 0, scope: !6817)
!6828 = !DILocation(line: 225, column: 22, scope: !6817)
!6829 = !DILocation(line: 233, column: 18, scope: !6817)
!6830 = !DILocation(line: 236, column: 23, scope: !6817)
!6831 = !DILocation(line: 236, column: 21, scope: !6817)
!6832 = !DILocation(line: 238, column: 2, scope: !6817)
!6833 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !543, file: !543, line: 105, type: !6834, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6836)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!103, !6797, !154, !154, !157}
!6836 = !{!6837, !6838, !6839, !6840, !6841, !6842}
!6837 = !DILocalVariable(name: "regions", arg: 1, scope: !6833, file: !543, line: 106, type: !6797)
!6838 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6833, file: !543, line: 106, type: !154)
!6839 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6833, file: !543, line: 106, type: !154)
!6840 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6833, file: !543, line: 107, type: !157)
!6841 = !DILocalVariable(name: "i", scope: !6833, file: !543, line: 109, type: !103)
!6842 = !DILocalVariable(name: "reg_index", scope: !6833, file: !543, line: 110, type: !103)
!6843 = !DILocation(line: 0, scope: !6833)
!6844 = !DILocation(line: 110, column: 18, scope: !6833)
!6845 = !DILocation(line: 112, column: 16, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !543, line: 112, column: 2)
!6847 = distinct !DILexicalBlock(scope: !6833, file: !543, line: 112, column: 2)
!6848 = !DILocation(line: 112, column: 2, scope: !6847)
!6849 = !DILocation(line: 113, column: 7, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !543, line: 113, column: 7)
!6851 = distinct !DILexicalBlock(scope: !6846, file: !543, line: 112, column: 36)
!6852 = !DILocation(line: 113, column: 18, scope: !6850)
!6853 = !DILocation(line: 113, column: 23, scope: !6850)
!6854 = !DILocation(line: 113, column: 7, scope: !6851)
!6855 = !DILocation(line: 118, column: 23, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !543, line: 118, column: 7)
!6857 = !DILocation(line: 119, column: 7, scope: !6856)
!6858 = !DILocation(line: 118, column: 7, scope: !6851)
!6859 = !DILocation(line: 124, column: 36, scope: !6851)
!6860 = !DILocation(line: 124, column: 15, scope: !6851)
!6861 = !DILocation(line: 126, column: 17, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6851, file: !543, line: 126, column: 7)
!6863 = !DILocation(line: 126, column: 7, scope: !6851)
!6864 = !DILocation(line: 131, column: 12, scope: !6851)
!6865 = !DILocation(line: 132, column: 2, scope: !6851)
!6866 = !DILocation(line: 112, column: 32, scope: !6846)
!6867 = distinct !{!6867, !6848, !6868}
!6868 = !DILocation(line: 132, column: 2, scope: !6847)
!6869 = !DILocation(line: 135, column: 1, scope: !6833)
!6870 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6818, file: !6818, line: 63, type: !6871, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6873)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{!103, !6797}
!6873 = !{!6874, !6875}
!6874 = !DILocalVariable(name: "part", arg: 1, scope: !6870, file: !6818, line: 63, type: !6797)
!6875 = !DILocalVariable(name: "partition_is_valid", scope: !6870, file: !6818, line: 70, type: !103)
!6876 = !DILocation(line: 0, scope: !6870)
!6877 = !DILocation(line: 71, column: 11, scope: !6870)
!6878 = !DILocation(line: 71, column: 37, scope: !6870)
!6879 = !DILocation(line: 72, column: 3, scope: !6870)
!6880 = !DILocation(line: 71, column: 30, scope: !6870)
!6881 = !DILocation(line: 75, column: 11, scope: !6870)
!6882 = !DILocation(line: 75, column: 17, scope: !6870)
!6883 = !DILocation(line: 75, column: 38, scope: !6870)
!6884 = !DILocation(line: 77, column: 2, scope: !6870)
!6885 = distinct !DISubprogram(name: "mpu_configure_region", scope: !543, file: !543, line: 79, type: !6886, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6888)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!103, !262, !6797}
!6888 = !{!6889, !6890, !6891}
!6889 = !DILocalVariable(name: "index", arg: 1, scope: !6885, file: !543, line: 79, type: !262)
!6890 = !DILocalVariable(name: "new_region", arg: 2, scope: !6885, file: !543, line: 80, type: !6797)
!6891 = !DILocalVariable(name: "region_conf", scope: !6885, file: !543, line: 82, type: !532)
!6892 = !DILocation(line: 0, scope: !6885)
!6893 = !DILocation(line: 82, column: 2, scope: !6885)
!6894 = !DILocation(line: 82, column: 24, scope: !6885)
!6895 = !DILocation(line: 87, column: 33, scope: !6885)
!6896 = !DILocation(line: 87, column: 14, scope: !6885)
!6897 = !DILocation(line: 87, column: 19, scope: !6885)
!6898 = !DILocation(line: 91, column: 55, scope: !6885)
!6899 = !DILocation(line: 92, column: 16, scope: !6885)
!6900 = !DILocation(line: 92, column: 53, scope: !6885)
!6901 = !DILocation(line: 91, column: 2, scope: !6885)
!6902 = !DILocation(line: 95, column: 9, scope: !6885)
!6903 = !DILocation(line: 97, column: 1, scope: !6885)
!6904 = !DILocation(line: 95, column: 2, scope: !6885)
!6905 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6818, file: !6818, line: 113, type: !6906, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6911)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{null, !6908, !6909, !121, !121}
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!6909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6910, size: 32)
!6910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6804)
!6911 = !{!6912, !6913, !6914, !6915}
!6912 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6905, file: !6818, line: 114, type: !6908)
!6913 = !DILocalVariable(name: "attr", arg: 2, scope: !6905, file: !6818, line: 115, type: !6909)
!6914 = !DILocalVariable(name: "base", arg: 3, scope: !6905, file: !6818, line: 115, type: !121)
!6915 = !DILocalVariable(name: "size", arg: 4, scope: !6905, file: !6818, line: 115, type: !121)
!6916 = !DILocation(line: 0, scope: !6905)
!6917 = !DILocation(line: 127, column: 23, scope: !6905)
!6918 = !DILocation(line: 127, column: 35, scope: !6905)
!6919 = !DILocation(line: 127, column: 33, scope: !6905)
!6920 = !DILocation(line: 127, column: 10, scope: !6905)
!6921 = !DILocation(line: 127, column: 15, scope: !6905)
!6922 = !DILocation(line: 129, column: 1, scope: !6905)
!6923 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !543, file: !543, line: 57, type: !6924, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6926)
!6924 = !DISubroutineType(types: !6925)
!6925 = !{!103, !262, !530}
!6926 = !{!6927, !6928}
!6927 = !DILocalVariable(name: "index", arg: 1, scope: !6923, file: !543, line: 57, type: !262)
!6928 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6923, file: !543, line: 58, type: !530)
!6929 = !DILocation(line: 0, scope: !6923)
!6930 = !DILocation(line: 61, column: 6, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6923, file: !543, line: 61, column: 6)
!6932 = !DILocation(line: 61, column: 12, scope: !6931)
!6933 = !DILocation(line: 61, column: 6, scope: !6923)
!6934 = !DILocation(line: 71, column: 2, scope: !6923)
!6935 = !DILocation(line: 73, column: 2, scope: !6923)
!6936 = !DILocation(line: 74, column: 1, scope: !6923)
!6937 = distinct !DISubprogram(name: "region_init", scope: !6818, file: !6818, line: 29, type: !6938, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6940)
!6938 = !DISubroutineType(types: !6939)
!6939 = !{null, !6222, !530}
!6940 = !{!6941, !6942}
!6941 = !DILocalVariable(name: "index", arg: 1, scope: !6937, file: !6818, line: 29, type: !6222)
!6942 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6937, file: !6818, line: 30, type: !530)
!6943 = !DILocation(line: 0, scope: !6937)
!6944 = !DILocation(line: 33, column: 2, scope: !6937)
!6945 = !DILocation(line: 47, column: 28, scope: !6937)
!6946 = !DILocation(line: 47, column: 33, scope: !6937)
!6947 = !DILocation(line: 48, column: 26, scope: !6937)
!6948 = !DILocation(line: 47, column: 12, scope: !6937)
!6949 = !DILocation(line: 49, column: 32, scope: !6937)
!6950 = !DILocation(line: 49, column: 37, scope: !6937)
!6951 = !DILocation(line: 49, column: 12, scope: !6937)
!6952 = !DILocation(line: 53, column: 1, scope: !6937)
!6953 = distinct !DISubprogram(name: "set_region_number", scope: !6954, file: !6954, line: 32, type: !6045, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6955)
!6954 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6955 = !{!6956}
!6956 = !DILocalVariable(name: "index", arg: 1, scope: !6953, file: !6954, line: 32, type: !121)
!6957 = !DILocation(line: 0, scope: !6953)
!6958 = !DILocation(line: 34, column: 11, scope: !6953)
!6959 = !DILocation(line: 35, column: 1, scope: !6953)
!6960 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6818, file: !6818, line: 88, type: !6961, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6963)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{!121, !121}
!6963 = !{!6964}
!6964 = !DILocalVariable(name: "size", arg: 1, scope: !6960, file: !6818, line: 88, type: !121)
!6965 = !DILocation(line: 0, scope: !6960)
!6966 = !DILocation(line: 91, column: 11, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6960, file: !6818, line: 91, column: 6)
!6968 = !DILocation(line: 91, column: 6, scope: !6960)
!6969 = !DILocation(line: 100, column: 11, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6960, file: !6818, line: 100, column: 6)
!6971 = !DILocation(line: 100, column: 6, scope: !6960)
!6972 = !DILocation(line: 104, column: 35, scope: !6960)
!6973 = !DILocation(line: 104, column: 16, scope: !6960)
!6974 = !DILocation(line: 104, column: 50, scope: !6960)
!6975 = !DILocation(line: 104, column: 72, scope: !6960)
!6976 = !DILocation(line: 104, column: 2, scope: !6960)
!6977 = !DILocation(line: 106, column: 1, scope: !6960)
!6978 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !543, file: !543, line: 307, type: !6979, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6981)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{null, !6797, !154}
!6981 = !{!6982, !6983}
!6982 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6978, file: !543, line: 308, type: !6797)
!6983 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6978, file: !543, line: 308, type: !154)
!6984 = !DILocation(line: 0, scope: !6978)
!6985 = !DILocation(line: 310, column: 6, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6978, file: !543, line: 310, column: 6)
!6987 = !DILocation(line: 316, column: 1, scope: !6978)
!6988 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6818, file: !6818, line: 249, type: !6989, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !6991)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!103, !6797, !154}
!6991 = !{!6992, !6993, !6994, !6995}
!6992 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6988, file: !6818, line: 250, type: !6797)
!6993 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6988, file: !6818, line: 250, type: !154)
!6994 = !DILocalVariable(name: "mpu_reg_index", scope: !6988, file: !6818, line: 252, type: !103)
!6995 = !DILocalVariable(name: "i", scope: !6996, file: !6818, line: 264, type: !103)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6818, line: 264, column: 3)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6818, line: 261, column: 32)
!6998 = distinct !DILexicalBlock(scope: !6988, file: !6818, line: 261, column: 6)
!6999 = !DILocation(line: 0, scope: !6988)
!7000 = !DILocation(line: 252, column: 22, scope: !6988)
!7001 = !DILocation(line: 258, column: 18, scope: !6988)
!7002 = !DILocation(line: 261, column: 20, scope: !6998)
!7003 = !DILocation(line: 261, column: 6, scope: !6988)
!7004 = !DILocation(line: 0, scope: !6996)
!7005 = !DILocation(line: 265, column: 4, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6818, line: 264, column: 59)
!7007 = distinct !DILexicalBlock(scope: !6996, file: !6818, line: 264, column: 3)
!7008 = !DILocation(line: 264, column: 55, scope: !7007)
!7009 = !DILocation(line: 264, column: 33, scope: !7007)
!7010 = !DILocation(line: 264, column: 3, scope: !6996)
!7011 = distinct !{!7011, !7010, !7012}
!7012 = !DILocation(line: 266, column: 3, scope: !6996)
!7013 = !DILocation(line: 269, column: 2, scope: !6988)
!7014 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7015, file: !7015, line: 218, type: !6045, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7016)
!7015 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7016 = !{!7017}
!7017 = !DILocalVariable(name: "rnr", arg: 1, scope: !7014, file: !7015, line: 218, type: !121)
!7018 = !DILocation(line: 0, scope: !7014)
!7019 = !DILocation(line: 220, column: 12, scope: !7014)
!7020 = !DILocation(line: 221, column: 13, scope: !7014)
!7021 = !DILocation(line: 222, column: 1, scope: !7014)
!7022 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !543, file: !543, line: 326, type: !7023, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !510, retainedNodes: !7025)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{!103}
!7025 = !{!7026}
!7026 = !DILocalVariable(name: "r_index", scope: !7022, file: !543, line: 328, type: !121)
!7027 = !DILocation(line: 330, column: 17, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7022, file: !543, line: 330, column: 6)
!7029 = !DILocation(line: 330, column: 29, scope: !7028)
!7030 = !DILocation(line: 330, column: 6, scope: !7022)
!7031 = !DILocation(line: 347, column: 2, scope: !7022)
!7032 = !DILocation(line: 0, scope: !7022)
!7033 = !DILocation(line: 364, column: 29, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !543, line: 364, column: 2)
!7035 = distinct !DILexicalBlock(scope: !7022, file: !543, line: 364, column: 2)
!7036 = !DILocation(line: 364, column: 2, scope: !7035)
!7037 = !DILocation(line: 365, column: 25, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7034, file: !543, line: 364, column: 66)
!7039 = !DILocation(line: 365, column: 3, scope: !7038)
!7040 = !DILocation(line: 364, column: 62, scope: !7034)
!7041 = distinct !{!7041, !7036, !7042}
!7042 = !DILocation(line: 366, column: 2, scope: !7035)
!7043 = !DILocation(line: 369, column: 23, scope: !7022)
!7044 = !DILocation(line: 369, column: 21, scope: !7022)
!7045 = !DILocation(line: 372, column: 2, scope: !7022)
!7046 = !DILocation(line: 443, column: 2, scope: !7022)
!7047 = !DILocation(line: 444, column: 1, scope: !7022)
!7048 = distinct !DISubprogram(name: "strcpy", scope: !7049, file: !7049, line: 20, type: !7050, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7054)
!7049 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7050 = !DISubroutineType(types: !7051)
!7051 = !{!344, !7052, !7053}
!7052 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !344)
!7053 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!7054 = !{!7055, !7056, !7057}
!7055 = !DILocalVariable(name: "d", arg: 1, scope: !7048, file: !7049, line: 20, type: !7052)
!7056 = !DILocalVariable(name: "s", arg: 2, scope: !7048, file: !7049, line: 20, type: !7053)
!7057 = !DILocalVariable(name: "dest", scope: !7048, file: !7049, line: 22, type: !344)
!7058 = !DILocation(line: 0, scope: !7048)
!7059 = !DILocation(line: 24, column: 9, scope: !7048)
!7060 = !DILocation(line: 24, column: 12, scope: !7048)
!7061 = !DILocation(line: 24, column: 2, scope: !7048)
!7062 = !DILocation(line: 25, column: 6, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7048, file: !7049, line: 24, column: 21)
!7064 = !DILocation(line: 26, column: 4, scope: !7063)
!7065 = !DILocation(line: 27, column: 4, scope: !7063)
!7066 = distinct !{!7066, !7061, !7067}
!7067 = !DILocation(line: 28, column: 2, scope: !7048)
!7068 = !DILocation(line: 30, column: 5, scope: !7048)
!7069 = !DILocation(line: 32, column: 2, scope: !7048)
!7070 = distinct !DISubprogram(name: "strncpy", scope: !7049, file: !7049, line: 42, type: !7071, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7073)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{!344, !7052, !7053, !204}
!7073 = !{!7074, !7075, !7076, !7077}
!7074 = !DILocalVariable(name: "d", arg: 1, scope: !7070, file: !7049, line: 42, type: !7052)
!7075 = !DILocalVariable(name: "s", arg: 2, scope: !7070, file: !7049, line: 42, type: !7053)
!7076 = !DILocalVariable(name: "n", arg: 3, scope: !7070, file: !7049, line: 42, type: !204)
!7077 = !DILocalVariable(name: "dest", scope: !7070, file: !7049, line: 44, type: !344)
!7078 = !DILocation(line: 0, scope: !7070)
!7079 = !DILocation(line: 46, column: 12, scope: !7070)
!7080 = !DILocation(line: 46, column: 17, scope: !7070)
!7081 = !DILocation(line: 46, column: 20, scope: !7070)
!7082 = !DILocation(line: 46, column: 23, scope: !7070)
!7083 = !DILocation(line: 46, column: 2, scope: !7070)
!7084 = !DILocation(line: 47, column: 6, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7070, file: !7049, line: 46, column: 32)
!7086 = !DILocation(line: 48, column: 4, scope: !7085)
!7087 = !DILocation(line: 49, column: 4, scope: !7085)
!7088 = !DILocation(line: 50, column: 4, scope: !7085)
!7089 = distinct !{!7089, !7083, !7090}
!7090 = !DILocation(line: 51, column: 2, scope: !7070)
!7091 = !DILocation(line: 54, column: 6, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7070, file: !7049, line: 53, column: 16)
!7093 = !DILocation(line: 55, column: 4, scope: !7092)
!7094 = !DILocation(line: 56, column: 4, scope: !7092)
!7095 = !DILocation(line: 53, column: 11, scope: !7070)
!7096 = !DILocation(line: 53, column: 2, scope: !7070)
!7097 = distinct !{!7097, !7096, !7098}
!7098 = !DILocation(line: 57, column: 2, scope: !7070)
!7099 = !DILocation(line: 59, column: 2, scope: !7070)
!7100 = distinct !DISubprogram(name: "strchr", scope: !7049, file: !7049, line: 69, type: !7101, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7103)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!344, !144, !103}
!7103 = !{!7104, !7105, !7106}
!7104 = !DILocalVariable(name: "s", arg: 1, scope: !7100, file: !7049, line: 69, type: !144)
!7105 = !DILocalVariable(name: "c", arg: 2, scope: !7100, file: !7049, line: 69, type: !103)
!7106 = !DILocalVariable(name: "tmp", scope: !7100, file: !7049, line: 71, type: !146)
!7107 = !DILocation(line: 0, scope: !7100)
!7108 = !DILocation(line: 73, column: 2, scope: !7100)
!7109 = !DILocation(line: 73, column: 10, scope: !7100)
!7110 = !DILocation(line: 73, column: 13, scope: !7100)
!7111 = !DILocation(line: 73, column: 21, scope: !7100)
!7112 = !DILocation(line: 74, column: 4, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7100, file: !7049, line: 73, column: 38)
!7114 = distinct !{!7114, !7108, !7115}
!7115 = !DILocation(line: 75, column: 2, scope: !7100)
!7116 = !DILocation(line: 77, column: 9, scope: !7100)
!7117 = !DILocation(line: 77, column: 2, scope: !7100)
!7118 = distinct !DISubprogram(name: "strrchr", scope: !7049, file: !7049, line: 87, type: !7101, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7119)
!7119 = !{!7120, !7121, !7122}
!7120 = !DILocalVariable(name: "s", arg: 1, scope: !7118, file: !7049, line: 87, type: !144)
!7121 = !DILocalVariable(name: "c", arg: 2, scope: !7118, file: !7049, line: 87, type: !103)
!7122 = !DILocalVariable(name: "match", scope: !7118, file: !7049, line: 89, type: !344)
!7123 = !DILocation(line: 0, scope: !7118)
!7124 = !DILocation(line: 91, column: 2, scope: !7118)
!7125 = !DILocation(line: 92, column: 7, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !7049, line: 92, column: 7)
!7127 = distinct !DILexicalBlock(scope: !7118, file: !7049, line: 91, column: 5)
!7128 = !DILocation(line: 92, column: 10, scope: !7126)
!7129 = !DILocation(line: 92, column: 7, scope: !7127)
!7130 = !DILocation(line: 95, column: 13, scope: !7118)
!7131 = !DILocation(line: 95, column: 2, scope: !7127)
!7132 = distinct !{!7132, !7124, !7133}
!7133 = !DILocation(line: 95, column: 15, scope: !7118)
!7134 = !DILocation(line: 97, column: 2, scope: !7118)
!7135 = distinct !DISubprogram(name: "strlen", scope: !7049, file: !7049, line: 107, type: !7136, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7138)
!7136 = !DISubroutineType(types: !7137)
!7137 = !{!204, !144}
!7138 = !{!7139, !7140}
!7139 = !DILocalVariable(name: "s", arg: 1, scope: !7135, file: !7049, line: 107, type: !144)
!7140 = !DILocalVariable(name: "n", scope: !7135, file: !7049, line: 109, type: !204)
!7141 = !DILocation(line: 0, scope: !7135)
!7142 = !DILocation(line: 111, column: 9, scope: !7135)
!7143 = !DILocation(line: 111, column: 12, scope: !7135)
!7144 = !DILocation(line: 111, column: 2, scope: !7135)
!7145 = !DILocation(line: 112, column: 4, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7135, file: !7049, line: 111, column: 21)
!7147 = !DILocation(line: 113, column: 4, scope: !7146)
!7148 = distinct !{!7148, !7144, !7149}
!7149 = !DILocation(line: 114, column: 2, scope: !7135)
!7150 = !DILocation(line: 116, column: 2, scope: !7135)
!7151 = distinct !DISubprogram(name: "strnlen", scope: !7049, file: !7049, line: 126, type: !7152, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7154)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!204, !144, !204}
!7154 = !{!7155, !7156, !7157}
!7155 = !DILocalVariable(name: "s", arg: 1, scope: !7151, file: !7049, line: 126, type: !144)
!7156 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7151, file: !7049, line: 126, type: !204)
!7157 = !DILocalVariable(name: "n", scope: !7151, file: !7049, line: 128, type: !204)
!7158 = !DILocation(line: 0, scope: !7151)
!7159 = !DILocation(line: 130, column: 9, scope: !7151)
!7160 = !DILocation(line: 130, column: 12, scope: !7151)
!7161 = !DILocation(line: 130, column: 20, scope: !7151)
!7162 = !DILocation(line: 130, column: 2, scope: !7151)
!7163 = !DILocation(line: 131, column: 4, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7151, file: !7049, line: 130, column: 35)
!7165 = !DILocation(line: 132, column: 4, scope: !7164)
!7166 = distinct !{!7166, !7162, !7167}
!7167 = !DILocation(line: 133, column: 2, scope: !7151)
!7168 = !DILocation(line: 135, column: 2, scope: !7151)
!7169 = distinct !DISubprogram(name: "strcmp", scope: !7049, file: !7049, line: 145, type: !7170, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7172)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{!103, !144, !144}
!7172 = !{!7173, !7174}
!7173 = !DILocalVariable(name: "s1", arg: 1, scope: !7169, file: !7049, line: 145, type: !144)
!7174 = !DILocalVariable(name: "s2", arg: 2, scope: !7169, file: !7049, line: 145, type: !144)
!7175 = !DILocation(line: 0, scope: !7169)
!7176 = !DILocation(line: 147, column: 10, scope: !7169)
!7177 = !DILocation(line: 147, column: 17, scope: !7169)
!7178 = !DILocation(line: 147, column: 14, scope: !7169)
!7179 = !DILocation(line: 147, column: 22, scope: !7169)
!7180 = !DILocation(line: 148, column: 5, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7169, file: !7049, line: 147, column: 40)
!7182 = !DILocation(line: 149, column: 5, scope: !7181)
!7183 = distinct !{!7183, !7184, !7185}
!7184 = !DILocation(line: 147, column: 2, scope: !7169)
!7185 = !DILocation(line: 150, column: 2, scope: !7169)
!7186 = !DILocation(line: 152, column: 9, scope: !7169)
!7187 = !DILocation(line: 152, column: 15, scope: !7169)
!7188 = !DILocation(line: 152, column: 13, scope: !7169)
!7189 = !DILocation(line: 152, column: 2, scope: !7169)
!7190 = distinct !DISubprogram(name: "strncmp", scope: !7049, file: !7049, line: 162, type: !7191, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7193)
!7191 = !DISubroutineType(types: !7192)
!7192 = !{!103, !144, !144, !204}
!7193 = !{!7194, !7195, !7196}
!7194 = !DILocalVariable(name: "s1", arg: 1, scope: !7190, file: !7049, line: 162, type: !144)
!7195 = !DILocalVariable(name: "s2", arg: 2, scope: !7190, file: !7049, line: 162, type: !144)
!7196 = !DILocalVariable(name: "n", arg: 3, scope: !7190, file: !7049, line: 162, type: !204)
!7197 = !DILocation(line: 0, scope: !7190)
!7198 = !DILocation(line: 164, column: 17, scope: !7190)
!7199 = !DILocation(line: 164, column: 21, scope: !7190)
!7200 = !DILocation(line: 164, column: 28, scope: !7190)
!7201 = !DILocation(line: 164, column: 25, scope: !7190)
!7202 = !DILocation(line: 164, column: 33, scope: !7190)
!7203 = !DILocation(line: 165, column: 5, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7190, file: !7049, line: 164, column: 51)
!7205 = !DILocation(line: 166, column: 5, scope: !7204)
!7206 = !DILocation(line: 167, column: 4, scope: !7204)
!7207 = distinct !{!7207, !7208, !7209}
!7208 = !DILocation(line: 164, column: 2, scope: !7190)
!7209 = !DILocation(line: 168, column: 2, scope: !7190)
!7210 = !DILocation(line: 170, column: 25, scope: !7190)
!7211 = !DILocation(line: 170, column: 31, scope: !7190)
!7212 = !DILocation(line: 170, column: 29, scope: !7190)
!7213 = !DILocation(line: 170, column: 9, scope: !7190)
!7214 = !DILocation(line: 170, column: 2, scope: !7190)
!7215 = distinct !DISubprogram(name: "strtok_r", scope: !7049, file: !7049, line: 180, type: !7216, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7219)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!344, !344, !144, !7218}
!7218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!7219 = !{!7220, !7221, !7222, !7223, !7224}
!7220 = !DILocalVariable(name: "str", arg: 1, scope: !7215, file: !7049, line: 180, type: !344)
!7221 = !DILocalVariable(name: "sep", arg: 2, scope: !7215, file: !7049, line: 180, type: !144)
!7222 = !DILocalVariable(name: "state", arg: 3, scope: !7215, file: !7049, line: 180, type: !7218)
!7223 = !DILocalVariable(name: "start", scope: !7215, file: !7049, line: 182, type: !344)
!7224 = !DILocalVariable(name: "end", scope: !7215, file: !7049, line: 182, type: !344)
!7225 = !DILocation(line: 0, scope: !7215)
!7226 = !DILocation(line: 184, column: 10, scope: !7215)
!7227 = !DILocation(line: 184, column: 22, scope: !7215)
!7228 = !DILocation(line: 187, column: 9, scope: !7215)
!7229 = !DILocation(line: 187, column: 16, scope: !7215)
!7230 = !DILocation(line: 187, column: 19, scope: !7215)
!7231 = !DILocation(line: 187, column: 2, scope: !7215)
!7232 = !DILocation(line: 188, column: 8, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7215, file: !7049, line: 187, column: 40)
!7234 = distinct !{!7234, !7231, !7235}
!7235 = !DILocation(line: 189, column: 2, scope: !7215)
!7236 = !DILocation(line: 198, column: 9, scope: !7215)
!7237 = !DILocation(line: 198, column: 18, scope: !7215)
!7238 = !DILocation(line: 198, column: 17, scope: !7215)
!7239 = !DILocation(line: 198, column: 2, scope: !7215)
!7240 = !DILocation(line: 199, column: 6, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7215, file: !7049, line: 198, column: 37)
!7242 = !DILocation(line: 198, column: 14, scope: !7215)
!7243 = distinct !{!7243, !7239, !7244}
!7244 = !DILocation(line: 200, column: 2, scope: !7215)
!7245 = !DILocation(line: 203, column: 8, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !7049, line: 202, column: 20)
!7247 = distinct !DILexicalBlock(scope: !7215, file: !7049, line: 202, column: 6)
!7248 = !DILocation(line: 204, column: 16, scope: !7246)
!7249 = !DILocation(line: 205, column: 2, scope: !7246)
!7250 = !DILocation(line: 210, column: 1, scope: !7215)
!7251 = distinct !DISubprogram(name: "strcat", scope: !7049, file: !7049, line: 212, type: !7050, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7252)
!7252 = !{!7253, !7254}
!7253 = !DILocalVariable(name: "dest", arg: 1, scope: !7251, file: !7049, line: 212, type: !7052)
!7254 = !DILocalVariable(name: "src", arg: 2, scope: !7251, file: !7049, line: 212, type: !7053)
!7255 = !DILocation(line: 0, scope: !7251)
!7256 = !DILocation(line: 214, column: 16, scope: !7251)
!7257 = !DILocation(line: 214, column: 14, scope: !7251)
!7258 = !DILocation(line: 214, column: 2, scope: !7251)
!7259 = !DILocation(line: 215, column: 2, scope: !7251)
!7260 = distinct !DISubprogram(name: "strncat", scope: !7049, file: !7049, line: 218, type: !7071, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7261)
!7261 = !{!7262, !7263, !7264, !7265, !7266}
!7262 = !DILocalVariable(name: "dest", arg: 1, scope: !7260, file: !7049, line: 218, type: !7052)
!7263 = !DILocalVariable(name: "src", arg: 2, scope: !7260, file: !7049, line: 218, type: !7053)
!7264 = !DILocalVariable(name: "n", arg: 3, scope: !7260, file: !7049, line: 219, type: !204)
!7265 = !DILocalVariable(name: "orig_dest", scope: !7260, file: !7049, line: 221, type: !344)
!7266 = !DILocalVariable(name: "len", scope: !7260, file: !7049, line: 222, type: !204)
!7267 = !DILocation(line: 0, scope: !7260)
!7268 = !DILocation(line: 222, column: 15, scope: !7260)
!7269 = !DILocation(line: 224, column: 7, scope: !7260)
!7270 = !DILocation(line: 225, column: 14, scope: !7260)
!7271 = !DILocation(line: 225, column: 19, scope: !7260)
!7272 = !DILocation(line: 225, column: 11, scope: !7260)
!7273 = !DILocation(line: 225, column: 23, scope: !7260)
!7274 = !DILocation(line: 225, column: 28, scope: !7260)
!7275 = !DILocation(line: 225, column: 2, scope: !7260)
!7276 = !DILocation(line: 226, column: 17, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7260, file: !7049, line: 225, column: 38)
!7278 = !DILocation(line: 226, column: 8, scope: !7277)
!7279 = !DILocation(line: 226, column: 11, scope: !7277)
!7280 = distinct !{!7280, !7275, !7281}
!7281 = !DILocation(line: 227, column: 2, scope: !7260)
!7282 = !DILocation(line: 228, column: 8, scope: !7260)
!7283 = !DILocation(line: 230, column: 2, scope: !7260)
!7284 = distinct !DISubprogram(name: "memcmp", scope: !7049, file: !7049, line: 239, type: !7285, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7287)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{!103, !13, !13, !204}
!7287 = !{!7288, !7289, !7290, !7291, !7292}
!7288 = !DILocalVariable(name: "m1", arg: 1, scope: !7284, file: !7049, line: 239, type: !13)
!7289 = !DILocalVariable(name: "m2", arg: 2, scope: !7284, file: !7049, line: 239, type: !13)
!7290 = !DILocalVariable(name: "n", arg: 3, scope: !7284, file: !7049, line: 239, type: !204)
!7291 = !DILocalVariable(name: "c1", scope: !7284, file: !7049, line: 241, type: !144)
!7292 = !DILocalVariable(name: "c2", scope: !7284, file: !7049, line: 242, type: !144)
!7293 = !DILocation(line: 0, scope: !7284)
!7294 = !DILocation(line: 244, column: 7, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7284, file: !7049, line: 244, column: 6)
!7296 = !DILocation(line: 244, column: 6, scope: !7284)
!7297 = !DILocation(line: 248, column: 10, scope: !7284)
!7298 = !DILocation(line: 248, column: 14, scope: !7284)
!7299 = !DILocation(line: 248, column: 19, scope: !7284)
!7300 = !DILocation(line: 248, column: 2, scope: !7284)
!7301 = !DILocation(line: 248, column: 23, scope: !7284)
!7302 = !DILocation(line: 248, column: 30, scope: !7284)
!7303 = !DILocation(line: 248, column: 27, scope: !7284)
!7304 = !DILocation(line: 249, column: 5, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7284, file: !7049, line: 248, column: 36)
!7306 = !DILocation(line: 250, column: 5, scope: !7305)
!7307 = distinct !{!7307, !7300, !7308}
!7308 = !DILocation(line: 251, column: 2, scope: !7284)
!7309 = !DILocation(line: 253, column: 9, scope: !7284)
!7310 = !DILocation(line: 253, column: 15, scope: !7284)
!7311 = !DILocation(line: 253, column: 13, scope: !7284)
!7312 = !DILocation(line: 253, column: 2, scope: !7284)
!7313 = !DILocation(line: 254, column: 1, scope: !7284)
!7314 = distinct !DISubprogram(name: "memmove", scope: !7049, file: !7049, line: 263, type: !7315, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7317)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{!102, !102, !13, !204}
!7317 = !{!7318, !7319, !7320, !7321, !7322}
!7318 = !DILocalVariable(name: "d", arg: 1, scope: !7314, file: !7049, line: 263, type: !102)
!7319 = !DILocalVariable(name: "s", arg: 2, scope: !7314, file: !7049, line: 263, type: !13)
!7320 = !DILocalVariable(name: "n", arg: 3, scope: !7314, file: !7049, line: 263, type: !204)
!7321 = !DILocalVariable(name: "dest", scope: !7314, file: !7049, line: 265, type: !344)
!7322 = !DILocalVariable(name: "src", scope: !7314, file: !7049, line: 266, type: !144)
!7323 = !DILocation(line: 0, scope: !7314)
!7324 = !DILocation(line: 268, column: 21, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7314, file: !7049, line: 268, column: 6)
!7326 = !DILocation(line: 268, column: 28, scope: !7325)
!7327 = !DILocation(line: 268, column: 6, scope: !7314)
!7328 = !DILocation(line: 280, column: 12, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7325, file: !7049, line: 278, column: 9)
!7330 = !DILocation(line: 280, column: 3, scope: !7329)
!7331 = !DILocation(line: 275, column: 5, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !7049, line: 274, column: 17)
!7333 = distinct !DILexicalBlock(scope: !7325, file: !7049, line: 268, column: 33)
!7334 = !DILocation(line: 276, column: 14, scope: !7332)
!7335 = !DILocation(line: 276, column: 4, scope: !7332)
!7336 = !DILocation(line: 276, column: 12, scope: !7332)
!7337 = !DILocation(line: 274, column: 12, scope: !7333)
!7338 = !DILocation(line: 274, column: 3, scope: !7333)
!7339 = distinct !{!7339, !7338, !7340}
!7340 = !DILocation(line: 277, column: 3, scope: !7333)
!7341 = !DILocation(line: 281, column: 12, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7329, file: !7049, line: 280, column: 17)
!7343 = !DILocation(line: 281, column: 10, scope: !7342)
!7344 = !DILocation(line: 282, column: 8, scope: !7342)
!7345 = !DILocation(line: 283, column: 7, scope: !7342)
!7346 = !DILocation(line: 284, column: 5, scope: !7342)
!7347 = distinct !{!7347, !7330, !7348}
!7348 = !DILocation(line: 285, column: 3, scope: !7329)
!7349 = !DILocation(line: 288, column: 2, scope: !7314)
!7350 = distinct !DISubprogram(name: "memcpy", scope: !7049, file: !7049, line: 298, type: !7351, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7355)
!7351 = !DISubroutineType(types: !7352)
!7352 = !{!102, !7353, !7354, !204}
!7353 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7354 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7355 = !{!7356, !7357, !7358, !7359, !7360}
!7356 = !DILocalVariable(name: "d", arg: 1, scope: !7350, file: !7049, line: 298, type: !7353)
!7357 = !DILocalVariable(name: "s", arg: 2, scope: !7350, file: !7049, line: 298, type: !7354)
!7358 = !DILocalVariable(name: "n", arg: 3, scope: !7350, file: !7049, line: 298, type: !204)
!7359 = !DILocalVariable(name: "d_byte", scope: !7350, file: !7049, line: 302, type: !230)
!7360 = !DILocalVariable(name: "s_byte", scope: !7350, file: !7049, line: 303, type: !2900)
!7361 = !DILocation(line: 0, scope: !7350)
!7362 = !DILocation(line: 337, column: 11, scope: !7350)
!7363 = !DILocation(line: 337, column: 2, scope: !7350)
!7364 = !DILocation(line: 338, column: 25, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7350, file: !7049, line: 337, column: 16)
!7366 = !DILocation(line: 338, column: 17, scope: !7365)
!7367 = !DILocation(line: 338, column: 11, scope: !7365)
!7368 = !DILocation(line: 338, column: 15, scope: !7365)
!7369 = !DILocation(line: 339, column: 4, scope: !7365)
!7370 = distinct !{!7370, !7363, !7371}
!7371 = !DILocation(line: 340, column: 2, scope: !7350)
!7372 = !DILocation(line: 342, column: 2, scope: !7350)
!7373 = distinct !DISubprogram(name: "memset", scope: !7049, file: !7049, line: 352, type: !7374, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7376)
!7374 = !DISubroutineType(types: !7375)
!7375 = !{!102, !102, !103, !204}
!7376 = !{!7377, !7378, !7379, !7380, !7381}
!7377 = !DILocalVariable(name: "buf", arg: 1, scope: !7373, file: !7049, line: 352, type: !102)
!7378 = !DILocalVariable(name: "c", arg: 2, scope: !7373, file: !7049, line: 352, type: !103)
!7379 = !DILocalVariable(name: "n", arg: 3, scope: !7373, file: !7049, line: 352, type: !204)
!7380 = !DILocalVariable(name: "d_byte", scope: !7373, file: !7049, line: 356, type: !230)
!7381 = !DILocalVariable(name: "c_byte", scope: !7373, file: !7049, line: 357, type: !155)
!7382 = !DILocation(line: 0, scope: !7373)
!7383 = !DILocation(line: 357, column: 25, scope: !7373)
!7384 = !DILocation(line: 389, column: 11, scope: !7373)
!7385 = !DILocation(line: 389, column: 2, scope: !7373)
!7386 = !DILocation(line: 390, column: 11, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7373, file: !7049, line: 389, column: 16)
!7388 = !DILocation(line: 390, column: 15, scope: !7387)
!7389 = !DILocation(line: 391, column: 4, scope: !7387)
!7390 = distinct !{!7390, !7385, !7391}
!7391 = !DILocation(line: 392, column: 2, scope: !7373)
!7392 = !DILocation(line: 394, column: 2, scope: !7373)
!7393 = distinct !DISubprogram(name: "memchr", scope: !7049, file: !7049, line: 404, type: !7394, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !7396)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!102, !13, !103, !204}
!7396 = !{!7397, !7398, !7399, !7400}
!7397 = !DILocalVariable(name: "s", arg: 1, scope: !7393, file: !7049, line: 404, type: !13)
!7398 = !DILocalVariable(name: "c", arg: 2, scope: !7393, file: !7049, line: 404, type: !103)
!7399 = !DILocalVariable(name: "n", arg: 3, scope: !7393, file: !7049, line: 404, type: !204)
!7400 = !DILocalVariable(name: "p", scope: !7401, file: !7049, line: 407, type: !2900)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !7049, line: 406, column: 14)
!7402 = distinct !DILexicalBlock(scope: !7393, file: !7049, line: 406, column: 6)
!7403 = !DILocation(line: 0, scope: !7393)
!7404 = !DILocation(line: 406, column: 8, scope: !7402)
!7405 = !DILocation(line: 406, column: 6, scope: !7393)
!7406 = !DILocation(line: 409, column: 3, scope: !7401)
!7407 = !DILocation(line: 0, scope: !7401)
!7408 = !DILocation(line: 410, column: 8, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7410, file: !7049, line: 410, column: 8)
!7410 = distinct !DILexicalBlock(scope: !7401, file: !7049, line: 409, column: 6)
!7411 = !DILocation(line: 410, column: 13, scope: !7409)
!7412 = !DILocation(line: 410, column: 8, scope: !7410)
!7413 = distinct !{!7413, !7406, !7414}
!7414 = !DILocation(line: 414, column: 20, scope: !7401)
!7415 = !DILocation(line: 417, column: 2, scope: !7393)
!7416 = !DILocation(line: 418, column: 1, scope: !7393)
!7417 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !553, file: !553, line: 23, type: !3308, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7418)
!7418 = !{!7419}
!7419 = !DILocalVariable(name: "hook", arg: 1, scope: !7417, file: !553, line: 23, type: !106)
!7420 = !DILocation(line: 0, scope: !7417)
!7421 = !DILocation(line: 25, column: 15, scope: !7417)
!7422 = !DILocation(line: 26, column: 1, scope: !7417)
!7423 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !553, file: !553, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7424)
!7424 = !{!7425}
!7425 = !DILocalVariable(name: "c", arg: 1, scope: !7423, file: !553, line: 14, type: !103)
!7426 = !DILocation(line: 0, scope: !7423)
!7427 = !DILocation(line: 18, column: 2, scope: !7423)
!7428 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !553, file: !553, line: 28, type: !7429, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7431)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{!103, !103, !549}
!7431 = !{!7432, !7433}
!7432 = !DILocalVariable(name: "c", arg: 1, scope: !7428, file: !553, line: 28, type: !103)
!7433 = !DILocalVariable(name: "stream", arg: 2, scope: !7428, file: !553, line: 28, type: !549)
!7434 = !DILocation(line: 0, scope: !7428)
!7435 = !DILocation(line: 30, column: 27, scope: !7428)
!7436 = !DILocation(line: 30, column: 50, scope: !7428)
!7437 = !DILocation(line: 30, column: 9, scope: !7428)
!7438 = !DILocation(line: 30, column: 2, scope: !7428)
!7439 = distinct !DISubprogram(name: "fputc", scope: !553, file: !553, line: 41, type: !7429, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7440)
!7440 = !{!7441, !7442}
!7441 = !DILocalVariable(name: "c", arg: 1, scope: !7439, file: !553, line: 41, type: !103)
!7442 = !DILocalVariable(name: "stream", arg: 2, scope: !7439, file: !553, line: 41, type: !549)
!7443 = !DILocation(line: 0, scope: !7439)
!7444 = !DILocation(line: 43, column: 9, scope: !7439)
!7445 = !DILocation(line: 43, column: 2, scope: !7439)
!7446 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7447, file: !7447, line: 72, type: !7429, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7448)
!7447 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!7448 = !{!7449, !7450}
!7449 = !DILocalVariable(name: "c", arg: 1, scope: !7446, file: !7447, line: 72, type: !103)
!7450 = !DILocalVariable(name: "stream", arg: 2, scope: !7446, file: !7447, line: 72, type: !549)
!7451 = !DILocation(line: 0, scope: !7446)
!7452 = !DILocation(line: 81, column: 2, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7446, file: !7447, line: 81, column: 2)
!7454 = !{i64 2154803529}
!7455 = !DILocation(line: 82, column: 9, scope: !7446)
!7456 = !DILocation(line: 82, column: 2, scope: !7446)
!7457 = distinct !DISubprogram(name: "fputs", scope: !553, file: !553, line: 46, type: !7458, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7461)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{!103, !7053, !7460}
!7460 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !549)
!7461 = !{!7462, !7463, !7464, !7465}
!7462 = !DILocalVariable(name: "s", arg: 1, scope: !7457, file: !553, line: 46, type: !7053)
!7463 = !DILocalVariable(name: "stream", arg: 2, scope: !7457, file: !553, line: 46, type: !7460)
!7464 = !DILocalVariable(name: "len", scope: !7457, file: !553, line: 48, type: !103)
!7465 = !DILocalVariable(name: "ret", scope: !7457, file: !553, line: 49, type: !103)
!7466 = !DILocation(line: 0, scope: !7457)
!7467 = !DILocation(line: 48, column: 12, scope: !7457)
!7468 = !DILocation(line: 51, column: 8, scope: !7457)
!7469 = !DILocation(line: 53, column: 13, scope: !7457)
!7470 = !DILocation(line: 53, column: 9, scope: !7457)
!7471 = !DILocation(line: 53, column: 2, scope: !7457)
!7472 = distinct !DISubprogram(name: "fwrite", scope: !553, file: !553, line: 99, type: !7473, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7475)
!7473 = !DISubroutineType(types: !7474)
!7474 = !{!204, !7354, !204, !204, !7460}
!7475 = !{!7476, !7477, !7478, !7479}
!7476 = !DILocalVariable(name: "ptr", arg: 1, scope: !7472, file: !553, line: 99, type: !7354)
!7477 = !DILocalVariable(name: "size", arg: 2, scope: !7472, file: !553, line: 99, type: !204)
!7478 = !DILocalVariable(name: "nitems", arg: 3, scope: !7472, file: !553, line: 99, type: !204)
!7479 = !DILocalVariable(name: "stream", arg: 4, scope: !7472, file: !553, line: 100, type: !7460)
!7480 = !DILocation(line: 0, scope: !7472)
!7481 = !DILocation(line: 102, column: 9, scope: !7472)
!7482 = !DILocation(line: 102, column: 2, scope: !7472)
!7483 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7447, file: !7447, line: 96, type: !7473, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7484)
!7484 = !{!7485, !7486, !7487, !7488}
!7485 = !DILocalVariable(name: "ptr", arg: 1, scope: !7483, file: !7447, line: 96, type: !7354)
!7486 = !DILocalVariable(name: "size", arg: 2, scope: !7483, file: !7447, line: 96, type: !204)
!7487 = !DILocalVariable(name: "nitems", arg: 3, scope: !7483, file: !7447, line: 96, type: !204)
!7488 = !DILocalVariable(name: "stream", arg: 4, scope: !7483, file: !7447, line: 96, type: !7460)
!7489 = !DILocation(line: 0, scope: !7483)
!7490 = !DILocation(line: 107, column: 2, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7483, file: !7447, line: 107, column: 2)
!7492 = !{i64 2154803633}
!7493 = !DILocation(line: 108, column: 9, scope: !7483)
!7494 = !DILocation(line: 108, column: 2, scope: !7483)
!7495 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !553, file: !553, line: 56, type: !7473, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7496)
!7496 = !{!7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504}
!7497 = !DILocalVariable(name: "ptr", arg: 1, scope: !7495, file: !553, line: 56, type: !7354)
!7498 = !DILocalVariable(name: "size", arg: 2, scope: !7495, file: !553, line: 56, type: !204)
!7499 = !DILocalVariable(name: "nitems", arg: 3, scope: !7495, file: !553, line: 57, type: !204)
!7500 = !DILocalVariable(name: "stream", arg: 4, scope: !7495, file: !553, line: 57, type: !7460)
!7501 = !DILocalVariable(name: "i", scope: !7495, file: !553, line: 59, type: !204)
!7502 = !DILocalVariable(name: "j", scope: !7495, file: !553, line: 60, type: !204)
!7503 = !DILocalVariable(name: "p", scope: !7495, file: !553, line: 61, type: !2900)
!7504 = !DILabel(scope: !7495, name: "done", file: !553, line: 82)
!7505 = !DILocation(line: 0, scope: !7495)
!7506 = !DILocation(line: 63, column: 14, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7495, file: !553, line: 63, column: 6)
!7508 = !DILocation(line: 63, column: 24, scope: !7507)
!7509 = !DILocation(line: 72, column: 3, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7495, file: !553, line: 70, column: 5)
!7511 = !DILocation(line: 0, scope: !7510)
!7512 = !DILocation(line: 73, column: 8, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !553, line: 73, column: 8)
!7514 = distinct !DILexicalBlock(scope: !7510, file: !553, line: 72, column: 6)
!7515 = !DILocation(line: 73, column: 29, scope: !7513)
!7516 = !DILocation(line: 73, column: 27, scope: !7513)
!7517 = !DILocation(line: 73, column: 21, scope: !7513)
!7518 = !DILocation(line: 73, column: 33, scope: !7513)
!7519 = !DILocation(line: 73, column: 8, scope: !7514)
!7520 = !DILocation(line: 76, column: 5, scope: !7514)
!7521 = !DILocation(line: 77, column: 14, scope: !7510)
!7522 = !DILocation(line: 77, column: 3, scope: !7514)
!7523 = distinct !{!7523, !7509, !7524}
!7524 = !DILocation(line: 77, column: 17, scope: !7510)
!7525 = !DILocation(line: 79, column: 4, scope: !7510)
!7526 = !DILocation(line: 80, column: 13, scope: !7495)
!7527 = !DILocation(line: 80, column: 2, scope: !7510)
!7528 = distinct !{!7528, !7529, !7530}
!7529 = !DILocation(line: 70, column: 2, scope: !7495)
!7530 = !DILocation(line: 80, column: 16, scope: !7495)
!7531 = !DILocation(line: 82, column: 1, scope: !7495)
!7532 = !DILocation(line: 83, column: 17, scope: !7495)
!7533 = !DILocation(line: 83, column: 2, scope: !7495)
!7534 = !DILocation(line: 84, column: 1, scope: !7495)
!7535 = distinct !DISubprogram(name: "puts", scope: !553, file: !553, line: 106, type: !7536, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !7538)
!7536 = !DISubroutineType(types: !7537)
!7537 = !{!103, !144}
!7538 = !{!7539}
!7539 = !DILocalVariable(name: "s", arg: 1, scope: !7535, file: !553, line: 106, type: !144)
!7540 = !DILocation(line: 0, scope: !7535)
!7541 = !DILocation(line: 108, column: 6, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7535, file: !553, line: 108, column: 6)
!7543 = !DILocation(line: 108, column: 23, scope: !7542)
!7544 = !DILocation(line: 108, column: 6, scope: !7535)
!7545 = !DILocation(line: 112, column: 9, scope: !7535)
!7546 = !DILocation(line: 112, column: 29, scope: !7535)
!7547 = !DILocation(line: 112, column: 2, scope: !7535)
!7548 = !DILocation(line: 113, column: 1, scope: !7535)
!7549 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !685, file: !685, line: 368, type: !738, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7550)
!7550 = !{!7551}
!7551 = !DILocalVariable(name: "dev", arg: 1, scope: !7549, file: !685, line: 368, type: !714)
!7552 = !DILocation(line: 0, scope: !7549)
!7553 = !DILocation(line: 370, column: 2, scope: !7549)
!7554 = !DILocation(line: 371, column: 1, scope: !7549)
!7555 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !685, file: !685, line: 243, type: !7556, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7558)
!7556 = !DISubroutineType(types: !7557)
!7557 = !{null, !103, !103, !714}
!7558 = !{!7559, !7560, !7561, !7562, !7564}
!7559 = !DILocalVariable(name: "min", arg: 1, scope: !7555, file: !685, line: 243, type: !103)
!7560 = !DILocalVariable(name: "max", arg: 2, scope: !7555, file: !685, line: 243, type: !103)
!7561 = !DILocalVariable(name: "dev", arg: 3, scope: !7555, file: !685, line: 243, type: !714)
!7562 = !DILocalVariable(name: "data", scope: !7555, file: !685, line: 245, type: !7563)
!7563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!7564 = !DILocalVariable(name: "line", scope: !7555, file: !685, line: 246, type: !103)
!7565 = !DILocation(line: 0, scope: !7555)
!7566 = !DILocation(line: 245, column: 38, scope: !7555)
!7567 = !DILocation(line: 249, column: 24, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !685, line: 249, column: 2)
!7569 = distinct !DILexicalBlock(scope: !7555, file: !685, line: 249, column: 2)
!7570 = !DILocation(line: 249, column: 2, scope: !7569)
!7571 = !DILocation(line: 251, column: 7, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !685, line: 251, column: 7)
!7573 = distinct !DILexicalBlock(scope: !7568, file: !685, line: 249, column: 39)
!7574 = !DILocation(line: 251, column: 7, scope: !7573)
!7575 = !DILocation(line: 253, column: 4, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7572, file: !685, line: 251, column: 36)
!7577 = !DILocation(line: 256, column: 24, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7576, file: !685, line: 256, column: 8)
!7579 = !DILocation(line: 256, column: 9, scope: !7578)
!7580 = !DILocation(line: 256, column: 8, scope: !7576)
!7581 = !DILocation(line: 260, column: 43, scope: !7576)
!7582 = !DILocation(line: 260, column: 4, scope: !7576)
!7583 = !DILocation(line: 261, column: 3, scope: !7576)
!7584 = !DILocation(line: 249, column: 35, scope: !7568)
!7585 = distinct !{!7585, !7570, !7586}
!7586 = !DILocation(line: 262, column: 2, scope: !7569)
!7587 = !DILocation(line: 263, column: 1, scope: !7555)
!7588 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !685, file: !685, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7589)
!7589 = !{!7590}
!7590 = !DILocalVariable(name: "line", arg: 1, scope: !7588, file: !685, line: 158, type: !103)
!7591 = !DILocation(line: 0, scope: !7588)
!7592 = !DILocation(line: 170, column: 38, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !685, line: 160, column: 17)
!7594 = distinct !DILexicalBlock(scope: !7588, file: !685, line: 160, column: 6)
!7595 = !DILocation(line: 170, column: 10, scope: !7593)
!7596 = !DILocation(line: 176, column: 1, scope: !7588)
!7597 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !685, file: !685, line: 183, type: !7598, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7600)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{null, !103}
!7600 = !{!7601}
!7601 = !DILocalVariable(name: "line", arg: 1, scope: !7597, file: !685, line: 183, type: !103)
!7602 = !DILocation(line: 0, scope: !7597)
!7603 = !DILocation(line: 195, column: 28, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !685, line: 185, column: 17)
!7605 = distinct !DILexicalBlock(scope: !7597, file: !685, line: 185, column: 6)
!7606 = !DILocation(line: 195, column: 3, scope: !7604)
!7607 = !DILocation(line: 200, column: 1, scope: !7597)
!7608 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7609, file: !7609, line: 910, type: !6045, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7610)
!7609 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7610 = !{!7611}
!7611 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7608, file: !7609, line: 910, type: !121)
!7612 = !DILocation(line: 0, scope: !7608)
!7613 = !DILocation(line: 912, column: 3, scope: !7608)
!7614 = !DILocation(line: 913, column: 1, scope: !7608)
!7615 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7609, file: !7609, line: 834, type: !6961, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7616)
!7616 = !{!7617}
!7617 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7615, file: !7609, line: 834, type: !121)
!7618 = !DILocation(line: 0, scope: !7615)
!7619 = !DILocation(line: 836, column: 11, scope: !7615)
!7620 = !DILocation(line: 836, column: 40, scope: !7615)
!7621 = !DILocation(line: 836, column: 3, scope: !7615)
!7622 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !685, file: !685, line: 304, type: !738, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7623)
!7623 = !{!7624}
!7624 = !DILocalVariable(name: "dev", arg: 1, scope: !7622, file: !685, line: 304, type: !714)
!7625 = !DILocation(line: 0, scope: !7622)
!7626 = !DILocation(line: 306, column: 2, scope: !7622)
!7627 = !DILocation(line: 307, column: 1, scope: !7622)
!7628 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !685, file: !685, line: 299, type: !738, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7629)
!7629 = !{!7630}
!7630 = !DILocalVariable(name: "dev", arg: 1, scope: !7628, file: !685, line: 299, type: !714)
!7631 = !DILocation(line: 0, scope: !7628)
!7632 = !DILocation(line: 301, column: 2, scope: !7628)
!7633 = !DILocation(line: 302, column: 1, scope: !7628)
!7634 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !685, file: !685, line: 294, type: !738, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7635)
!7635 = !{!7636}
!7636 = !DILocalVariable(name: "dev", arg: 1, scope: !7634, file: !685, line: 294, type: !714)
!7637 = !DILocation(line: 0, scope: !7634)
!7638 = !DILocation(line: 296, column: 2, scope: !7634)
!7639 = !DILocation(line: 297, column: 1, scope: !7634)
!7640 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !685, file: !685, line: 397, type: !738, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7641)
!7641 = !{!7642}
!7642 = !DILocalVariable(name: "dev", arg: 1, scope: !7640, file: !685, line: 397, type: !714)
!7643 = !DILocation(line: 0, scope: !7640)
!7644 = !DILocation(line: 399, column: 2, scope: !7640)
!7645 = !DILocation(line: 400, column: 1, scope: !7640)
!7646 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !685, file: !685, line: 392, type: !738, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7647)
!7647 = !{!7648}
!7648 = !DILocalVariable(name: "dev", arg: 1, scope: !7646, file: !685, line: 392, type: !714)
!7649 = !DILocation(line: 0, scope: !7646)
!7650 = !DILocation(line: 394, column: 2, scope: !7646)
!7651 = !DILocation(line: 395, column: 1, scope: !7646)
!7652 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !685, file: !685, line: 289, type: !738, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7653)
!7653 = !{!7654}
!7654 = !DILocalVariable(name: "dev", arg: 1, scope: !7652, file: !685, line: 289, type: !714)
!7655 = !DILocation(line: 0, scope: !7652)
!7656 = !DILocation(line: 291, column: 2, scope: !7652)
!7657 = !DILocation(line: 292, column: 1, scope: !7652)
!7658 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !685, file: !685, line: 387, type: !738, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7659)
!7659 = !{!7660}
!7660 = !DILocalVariable(name: "dev", arg: 1, scope: !7658, file: !685, line: 387, type: !714)
!7661 = !DILocation(line: 0, scope: !7658)
!7662 = !DILocation(line: 389, column: 2, scope: !7658)
!7663 = !DILocation(line: 390, column: 1, scope: !7658)
!7664 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !685, file: !685, line: 382, type: !738, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7665)
!7665 = !{!7666}
!7666 = !DILocalVariable(name: "dev", arg: 1, scope: !7664, file: !685, line: 382, type: !714)
!7667 = !DILocation(line: 0, scope: !7664)
!7668 = !DILocation(line: 384, column: 2, scope: !7664)
!7669 = !DILocation(line: 385, column: 1, scope: !7664)
!7670 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !685, file: !685, line: 373, type: !738, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7671)
!7671 = !{!7672}
!7672 = !DILocalVariable(name: "dev", arg: 1, scope: !7670, file: !685, line: 373, type: !714)
!7673 = !DILocation(line: 0, scope: !7670)
!7674 = !DILocation(line: 375, column: 2, scope: !7670)
!7675 = !DILocation(line: 376, column: 1, scope: !7670)
!7676 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !685, file: !685, line: 284, type: !738, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7677)
!7677 = !{!7678}
!7678 = !DILocalVariable(name: "dev", arg: 1, scope: !7676, file: !685, line: 284, type: !714)
!7679 = !DILocation(line: 0, scope: !7676)
!7680 = !DILocation(line: 286, column: 2, scope: !7676)
!7681 = !DILocation(line: 287, column: 1, scope: !7676)
!7682 = distinct !DISubprogram(name: "stm32_exti_init", scope: !685, file: !685, line: 416, type: !712, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7683)
!7683 = !{!7684}
!7684 = !DILocalVariable(name: "dev", arg: 1, scope: !7682, file: !685, line: 416, type: !714)
!7685 = !DILocation(line: 0, scope: !7682)
!7686 = !DILocation(line: 418, column: 2, scope: !7682)
!7687 = !DILocation(line: 420, column: 2, scope: !7682)
!7688 = !DILocation(line: 0, scope: !737)
!7689 = !DILocation(line: 493, column: 2, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !737, file: !685, line: 493, column: 2)
!7691 = !DILocation(line: 497, column: 2, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !737, file: !685, line: 497, column: 2)
!7693 = !DILocation(line: 507, column: 2, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !737, file: !685, line: 507, column: 2)
!7695 = !DILocation(line: 512, column: 2, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !737, file: !685, line: 512, column: 2)
!7697 = !DILocation(line: 516, column: 2, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !737, file: !685, line: 516, column: 2)
!7699 = !DILocation(line: 523, column: 2, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !737, file: !685, line: 523, column: 2)
!7701 = !DILocation(line: 527, column: 2, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !737, file: !685, line: 527, column: 2)
!7703 = !DILocation(line: 581, column: 2, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !737, file: !685, line: 581, column: 2)
!7705 = !DILocation(line: 586, column: 2, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !737, file: !685, line: 586, column: 2)
!7707 = !DILocation(line: 591, column: 2, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !737, file: !685, line: 591, column: 2)
!7709 = !DILocation(line: 595, column: 2, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !737, file: !685, line: 595, column: 2)
!7711 = !DILocation(line: 607, column: 1, scope: !737)
!7712 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !685, file: !685, line: 112, type: !7598, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7713)
!7713 = !{!7714, !7715}
!7714 = !DILocalVariable(name: "line", arg: 1, scope: !7712, file: !685, line: 112, type: !103)
!7715 = !DILocalVariable(name: "irqnum", scope: !7712, file: !685, line: 114, type: !103)
!7716 = !DILocation(line: 0, scope: !7712)
!7717 = !DILocation(line: 121, column: 11, scope: !7712)
!7718 = !DILocation(line: 130, column: 26, scope: !7712)
!7719 = !DILocation(line: 130, column: 2, scope: !7712)
!7720 = !DILocation(line: 134, column: 2, scope: !7712)
!7721 = !DILocation(line: 135, column: 1, scope: !7712)
!7722 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7609, file: !7609, line: 268, type: !6045, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7723)
!7723 = !{!7724}
!7724 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7722, file: !7609, line: 268, type: !121)
!7725 = !DILocation(line: 0, scope: !7722)
!7726 = !DILocation(line: 270, column: 3, scope: !7722)
!7727 = !DILocation(line: 271, column: 1, scope: !7722)
!7728 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !685, file: !685, line: 137, type: !7598, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7729)
!7729 = !{!7730}
!7730 = !DILocalVariable(name: "line", arg: 1, scope: !7728, file: !685, line: 137, type: !103)
!7731 = !DILocation(line: 0, scope: !7728)
!7732 = !DILocation(line: 141, column: 11, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7728, file: !685, line: 141, column: 6)
!7734 = !DILocation(line: 141, column: 6, scope: !7728)
!7735 = !DILocation(line: 145, column: 28, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7733, file: !685, line: 141, column: 17)
!7737 = !DILocation(line: 145, column: 3, scope: !7736)
!7738 = !DILocation(line: 147, column: 2, scope: !7736)
!7739 = !DILocation(line: 151, column: 1, scope: !7728)
!7740 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7609, file: !7609, line: 309, type: !6045, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7741)
!7741 = !{!7742}
!7742 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7740, file: !7609, line: 309, type: !121)
!7743 = !DILocation(line: 0, scope: !7740)
!7744 = !DILocation(line: 311, column: 3, scope: !7740)
!7745 = !DILocation(line: 312, column: 1, scope: !7740)
!7746 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !685, file: !685, line: 202, type: !7747, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7749)
!7747 = !DISubroutineType(types: !7748)
!7748 = !{null, !103, !103}
!7749 = !{!7750, !7751}
!7750 = !DILocalVariable(name: "line", arg: 1, scope: !7746, file: !685, line: 202, type: !103)
!7751 = !DILocalVariable(name: "trigger", arg: 2, scope: !7746, file: !685, line: 202, type: !103)
!7752 = !DILocation(line: 0, scope: !7746)
!7753 = !DILocation(line: 211, column: 2, scope: !7746)
!7754 = !DILocation(line: 213, column: 36, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7746, file: !685, line: 211, column: 19)
!7756 = !DILocation(line: 213, column: 3, scope: !7755)
!7757 = !DILocation(line: 214, column: 3, scope: !7755)
!7758 = !DILocation(line: 215, column: 3, scope: !7755)
!7759 = !DILocation(line: 217, column: 35, scope: !7755)
!7760 = !DILocation(line: 217, column: 3, scope: !7755)
!7761 = !DILocation(line: 218, column: 3, scope: !7755)
!7762 = !DILocation(line: 219, column: 3, scope: !7755)
!7763 = !DILocation(line: 221, column: 36, scope: !7755)
!7764 = !DILocation(line: 221, column: 3, scope: !7755)
!7765 = !DILocation(line: 222, column: 3, scope: !7755)
!7766 = !DILocation(line: 223, column: 3, scope: !7755)
!7767 = !DILocation(line: 225, column: 35, scope: !7755)
!7768 = !DILocation(line: 225, column: 3, scope: !7755)
!7769 = !DILocation(line: 226, column: 3, scope: !7755)
!7770 = !DILocation(line: 227, column: 3, scope: !7755)
!7771 = !DILocation(line: 232, column: 1, scope: !7746)
!7772 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7609, file: !7609, line: 573, type: !6045, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7773)
!7773 = !{!7774}
!7774 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7772, file: !7609, line: 573, type: !121)
!7775 = !DILocation(line: 0, scope: !7772)
!7776 = !DILocation(line: 575, column: 3, scope: !7772)
!7777 = !DILocation(line: 577, column: 1, scope: !7772)
!7778 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7609, file: !7609, line: 703, type: !6045, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7779)
!7779 = !{!7780}
!7780 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7778, file: !7609, line: 703, type: !121)
!7781 = !DILocation(line: 0, scope: !7778)
!7782 = !DILocation(line: 705, column: 3, scope: !7778)
!7783 = !DILocation(line: 706, column: 1, scope: !7778)
!7784 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7609, file: !7609, line: 529, type: !6045, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7785)
!7785 = !{!7786}
!7786 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7784, file: !7609, line: 529, type: !121)
!7787 = !DILocation(line: 0, scope: !7784)
!7788 = !DILocation(line: 531, column: 3, scope: !7784)
!7789 = !DILocation(line: 533, column: 1, scope: !7784)
!7790 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7609, file: !7609, line: 661, type: !6045, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7791)
!7791 = !{!7792}
!7792 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7790, file: !7609, line: 661, type: !121)
!7793 = !DILocation(line: 0, scope: !7790)
!7794 = !DILocation(line: 663, column: 3, scope: !7790)
!7795 = !DILocation(line: 664, column: 1, scope: !7790)
!7796 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !685, file: !685, line: 433, type: !7797, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7799)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!103, !103, !725, !102}
!7799 = !{!7800, !7801, !7802, !7803, !7805}
!7800 = !DILocalVariable(name: "line", arg: 1, scope: !7796, file: !685, line: 433, type: !103)
!7801 = !DILocalVariable(name: "cb", arg: 2, scope: !7796, file: !685, line: 433, type: !725)
!7802 = !DILocalVariable(name: "arg", arg: 3, scope: !7796, file: !685, line: 433, type: !102)
!7803 = !DILocalVariable(name: "dev", scope: !7796, file: !685, line: 435, type: !7804)
!7804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !714)
!7805 = !DILocalVariable(name: "data", scope: !7796, file: !685, line: 436, type: !7563)
!7806 = !DILocation(line: 0, scope: !7796)
!7807 = !DILocation(line: 438, column: 21, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7796, file: !685, line: 438, column: 6)
!7809 = !DILocation(line: 438, column: 6, scope: !7808)
!7810 = !DILocation(line: 438, column: 6, scope: !7796)
!7811 = !DILocation(line: 442, column: 20, scope: !7796)
!7812 = !DILocation(line: 443, column: 17, scope: !7796)
!7813 = !DILocation(line: 443, column: 22, scope: !7796)
!7814 = !DILocation(line: 445, column: 2, scope: !7796)
!7815 = !DILocation(line: 446, column: 1, scope: !7796)
!7816 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !685, file: !685, line: 448, type: !7598, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !581, retainedNodes: !7817)
!7817 = !{!7818, !7819, !7820}
!7818 = !DILocalVariable(name: "line", arg: 1, scope: !7816, file: !685, line: 448, type: !103)
!7819 = !DILocalVariable(name: "dev", scope: !7816, file: !685, line: 450, type: !7804)
!7820 = !DILocalVariable(name: "data", scope: !7816, file: !685, line: 451, type: !7563)
!7821 = !DILocation(line: 0, scope: !7816)
!7822 = !DILocation(line: 453, column: 17, scope: !7816)
!7823 = !DILocation(line: 453, column: 20, scope: !7816)
!7824 = !DILocation(line: 454, column: 17, scope: !7816)
!7825 = !DILocation(line: 454, column: 22, scope: !7816)
!7826 = !DILocation(line: 455, column: 1, scope: !7816)
!7827 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !868, file: !868, line: 183, type: !906, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7828)
!7828 = !{!7829, !7830, !7831, !7832, !7833}
!7829 = !DILocalVariable(name: "dev", arg: 1, scope: !7827, file: !868, line: 183, type: !897)
!7830 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7827, file: !868, line: 184, type: !908)
!7831 = !DILocalVariable(name: "pclken", scope: !7827, file: !868, line: 186, type: !858)
!7832 = !DILocalVariable(name: "reg", scope: !7827, file: !868, line: 187, type: !1597)
!7833 = !DILocalVariable(name: "reg_val", scope: !7827, file: !868, line: 188, type: !121)
!7834 = !DILocation(line: 0, scope: !7827)
!7835 = !DILocation(line: 192, column: 6, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7827, file: !868, line: 192, column: 6)
!7837 = !DILocation(line: 192, column: 6, scope: !7827)
!7838 = !DILocation(line: 197, column: 52, scope: !7827)
!7839 = !DILocation(line: 197, column: 8, scope: !7827)
!7840 = !DILocation(line: 198, column: 12, scope: !7827)
!7841 = !DILocation(line: 199, column: 21, scope: !7827)
!7842 = !DILocation(line: 199, column: 10, scope: !7827)
!7843 = !DILocation(line: 200, column: 7, scope: !7827)
!7844 = !DILocation(line: 202, column: 2, scope: !7827)
!7845 = !DILocation(line: 203, column: 1, scope: !7827)
!7846 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !868, file: !868, line: 205, type: !906, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7847)
!7847 = !{!7848, !7849, !7850, !7851, !7852}
!7848 = !DILocalVariable(name: "dev", arg: 1, scope: !7846, file: !868, line: 205, type: !897)
!7849 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7846, file: !868, line: 206, type: !908)
!7850 = !DILocalVariable(name: "pclken", scope: !7846, file: !868, line: 208, type: !858)
!7851 = !DILocalVariable(name: "reg", scope: !7846, file: !868, line: 209, type: !1597)
!7852 = !DILocalVariable(name: "reg_val", scope: !7846, file: !868, line: 210, type: !121)
!7853 = !DILocation(line: 0, scope: !7846)
!7854 = !DILocation(line: 214, column: 6, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7846, file: !868, line: 214, column: 6)
!7856 = !DILocation(line: 214, column: 6, scope: !7846)
!7857 = !DILocation(line: 219, column: 52, scope: !7846)
!7858 = !DILocation(line: 219, column: 8, scope: !7846)
!7859 = !DILocation(line: 220, column: 12, scope: !7846)
!7860 = !DILocation(line: 221, column: 22, scope: !7846)
!7861 = !DILocation(line: 221, column: 13, scope: !7846)
!7862 = !DILocation(line: 221, column: 10, scope: !7846)
!7863 = !DILocation(line: 222, column: 7, scope: !7846)
!7864 = !DILocation(line: 224, column: 2, scope: !7846)
!7865 = !DILocation(line: 225, column: 1, scope: !7846)
!7866 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !868, file: !868, line: 262, type: !922, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7867)
!7867 = !{!7868, !7869, !7870, !7871, !7872, !7873, !7874, !7875}
!7868 = !DILocalVariable(name: "clock", arg: 1, scope: !7866, file: !868, line: 262, type: !897)
!7869 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7866, file: !868, line: 263, type: !908)
!7870 = !DILocalVariable(name: "rate", arg: 3, scope: !7866, file: !868, line: 264, type: !864)
!7871 = !DILocalVariable(name: "pclken", scope: !7866, file: !868, line: 266, type: !858)
!7872 = !DILocalVariable(name: "ahb_clock", scope: !7866, file: !868, line: 273, type: !121)
!7873 = !DILocalVariable(name: "apb1_clock", scope: !7866, file: !868, line: 274, type: !121)
!7874 = !DILocalVariable(name: "apb2_clock", scope: !7866, file: !868, line: 276, type: !121)
!7875 = !DILocalVariable(name: "ahb3_clock", scope: !7866, file: !868, line: 286, type: !121)
!7876 = !DILocation(line: 0, scope: !7866)
!7877 = !DILocation(line: 273, column: 23, scope: !7866)
!7878 = !DILocation(line: 274, column: 24, scope: !7866)
!7879 = !DILocation(line: 299, column: 18, scope: !7866)
!7880 = !DILocation(line: 299, column: 2, scope: !7866)
!7881 = !DILocation(line: 319, column: 3, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7866, file: !868, line: 299, column: 23)
!7883 = !DILocation(line: 323, column: 3, scope: !7882)
!7884 = !DILocation(line: 346, column: 33, scope: !7882)
!7885 = !DILocation(line: 346, column: 11, scope: !7882)
!7886 = !DILocation(line: 350, column: 3, scope: !7882)
!7887 = !DILocation(line: 354, column: 33, scope: !7882)
!7888 = !DILocation(line: 354, column: 11, scope: !7882)
!7889 = !DILocation(line: 358, column: 3, scope: !7882)
!7890 = !DILocation(line: 374, column: 3, scope: !7882)
!7891 = !DILocation(line: 379, column: 3, scope: !7882)
!7892 = !DILocation(line: 0, scope: !7882)
!7893 = !DILocation(line: 396, column: 1, scope: !7866)
!7894 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !868, file: !868, line: 227, type: !938, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7895)
!7895 = !{!7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903}
!7896 = !DILocalVariable(name: "dev", arg: 1, scope: !7894, file: !868, line: 227, type: !897)
!7897 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7894, file: !868, line: 228, type: !908)
!7898 = !DILocalVariable(name: "data", arg: 3, scope: !7894, file: !868, line: 229, type: !102)
!7899 = !DILocalVariable(name: "pclken", scope: !7894, file: !868, line: 233, type: !858)
!7900 = !DILocalVariable(name: "reg", scope: !7894, file: !868, line: 234, type: !1597)
!7901 = !DILocalVariable(name: "reg_val", scope: !7894, file: !868, line: 235, type: !121)
!7902 = !DILocalVariable(name: "dt_val", scope: !7894, file: !868, line: 235, type: !121)
!7903 = !DILocalVariable(name: "err", scope: !7894, file: !868, line: 236, type: !103)
!7904 = !DILocation(line: 0, scope: !7894)
!7905 = !DILocation(line: 241, column: 30, scope: !7894)
!7906 = !DILocation(line: 241, column: 8, scope: !7894)
!7907 = !DILocation(line: 242, column: 10, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7894, file: !868, line: 242, column: 6)
!7909 = !DILocation(line: 242, column: 6, scope: !7894)
!7910 = !DILocation(line: 247, column: 11, scope: !7894)
!7911 = !DILocation(line: 248, column: 6, scope: !7894)
!7912 = !DILocation(line: 247, column: 44, scope: !7894)
!7913 = !DILocation(line: 250, column: 6, scope: !7894)
!7914 = !DILocation(line: 249, column: 52, scope: !7894)
!7915 = !DILocation(line: 249, column: 8, scope: !7894)
!7916 = !DILocation(line: 251, column: 12, scope: !7894)
!7917 = !DILocation(line: 252, column: 10, scope: !7894)
!7918 = !DILocation(line: 253, column: 7, scope: !7894)
!7919 = !DILocation(line: 255, column: 2, scope: !7894)
!7920 = !DILocation(line: 260, column: 1, scope: !7894)
!7921 = distinct !DISubprogram(name: "enabled_clock", scope: !868, file: !868, line: 100, type: !7922, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7924)
!7922 = !DISubroutineType(types: !7923)
!7923 = !{!103, !121}
!7924 = !{!7925, !7926}
!7925 = !DILocalVariable(name: "src_clk", arg: 1, scope: !7921, file: !868, line: 100, type: !121)
!7926 = !DILocalVariable(name: "r", scope: !7921, file: !868, line: 102, type: !103)
!7927 = !DILocation(line: 0, scope: !7921)
!7928 = !DILocation(line: 104, column: 2, scope: !7921)
!7929 = !DILocation(line: 180, column: 2, scope: !7921)
!7930 = !DILocation(line: 181, column: 1, scope: !7921)
!7931 = distinct !DISubprogram(name: "get_bus_clock", scope: !868, file: !868, line: 79, type: !7932, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7934)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!121, !121, !121}
!7934 = !{!7935, !7936}
!7935 = !DILocalVariable(name: "clock", arg: 1, scope: !7931, file: !868, line: 79, type: !121)
!7936 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7931, file: !868, line: 79, type: !121)
!7937 = !DILocation(line: 0, scope: !7931)
!7938 = !DILocation(line: 81, column: 15, scope: !7931)
!7939 = !DILocation(line: 81, column: 2, scope: !7931)
!7940 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !868, file: !868, line: 68, type: !7941, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7943)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!121, !121, !103, !103, !103}
!7943 = !{!7944, !7945, !7946, !7947}
!7944 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7940, file: !868, line: 68, type: !121)
!7945 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7940, file: !868, line: 69, type: !103)
!7946 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7940, file: !868, line: 70, type: !103)
!7947 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7940, file: !868, line: 71, type: !103)
!7948 = !DILocation(line: 0, scope: !7940)
!7949 = !DILocation(line: 75, column: 22, scope: !7940)
!7950 = !DILocation(line: 76, column: 13, scope: !7940)
!7951 = !DILocation(line: 75, column: 34, scope: !7940)
!7952 = !DILocation(line: 75, column: 2, scope: !7940)
!7953 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !868, file: !868, line: 641, type: !895, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !7954)
!7954 = !{!7955, !7956, !7957}
!7955 = !DILocalVariable(name: "dev", arg: 1, scope: !7953, file: !868, line: 641, type: !897)
!7956 = !DILocalVariable(name: "old_flash_freq", scope: !7953, file: !868, line: 664, type: !121)
!7957 = !DILocalVariable(name: "new_flash_freq", scope: !7953, file: !868, line: 665, type: !121)
!7958 = !DILocation(line: 0, scope: !7953)
!7959 = !DILocation(line: 646, column: 2, scope: !7953)
!7960 = !DILocation(line: 667, column: 19, scope: !7953)
!7961 = !DILocation(line: 674, column: 21, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7953, file: !868, line: 674, column: 6)
!7963 = !DILocation(line: 674, column: 6, scope: !7953)
!7964 = !DILocation(line: 675, column: 3, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7962, file: !868, line: 674, column: 59)
!7966 = !DILocation(line: 676, column: 2, scope: !7965)
!7967 = !DILocation(line: 680, column: 2, scope: !7953)
!7968 = !DILocation(line: 683, column: 2, scope: !7953)
!7969 = !DILocation(line: 690, column: 3, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7971, file: !868, line: 689, column: 9)
!7971 = distinct !DILexicalBlock(scope: !7953, file: !868, line: 685, column: 6)
!7972 = !DILocation(line: 695, column: 2, scope: !7953)
!7973 = !DILocation(line: 696, column: 2, scope: !7953)
!7974 = !DILocation(line: 696, column: 9, scope: !7953)
!7975 = !DILocation(line: 696, column: 34, scope: !7953)
!7976 = distinct !{!7976, !7973, !7977}
!7977 = !DILocation(line: 697, column: 2, scope: !7953)
!7978 = !DILocation(line: 720, column: 21, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7953, file: !868, line: 720, column: 6)
!7980 = !DILocation(line: 720, column: 6, scope: !7953)
!7981 = !DILocation(line: 721, column: 3, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7979, file: !868, line: 720, column: 60)
!7983 = !DILocation(line: 722, column: 2, scope: !7982)
!7984 = !DILocation(line: 725, column: 18, scope: !7953)
!7985 = !DILocation(line: 728, column: 2, scope: !7953)
!7986 = !DILocation(line: 730, column: 2, scope: !7953)
!7987 = !DILocation(line: 745, column: 2, scope: !7953)
!7988 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7989, file: !7989, line: 3275, type: !6035, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!7989 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7990 = !DILocation(line: 3277, column: 21, scope: !7988)
!7991 = !DILocation(line: 3277, column: 3, scope: !7988)
!7992 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !868, file: !868, line: 507, type: !3174, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!7993 = !DILocation(line: 516, column: 4, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !868, line: 515, column: 10)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !868, line: 513, column: 7)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !868, line: 510, column: 37)
!7997 = distinct !DILexicalBlock(scope: !7992, file: !868, line: 510, column: 6)
!7998 = !DILocation(line: 526, column: 3, scope: !7996)
!7999 = !DILocation(line: 527, column: 3, scope: !7996)
!8000 = !DILocation(line: 527, column: 10, scope: !7996)
!8001 = !DILocation(line: 527, column: 31, scope: !7996)
!8002 = distinct !{!8002, !7999, !8003}
!8003 = !DILocation(line: 529, column: 3, scope: !7996)
!8004 = !DILocation(line: 583, column: 3, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !868, line: 577, column: 37)
!8006 = distinct !DILexicalBlock(scope: !7992, file: !868, line: 577, column: 6)
!8007 = !DILocation(line: 584, column: 3, scope: !8005)
!8008 = !DILocation(line: 584, column: 10, scope: !8005)
!8009 = !DILocation(line: 584, column: 31, scope: !8005)
!8010 = distinct !{!8010, !8007, !8011}
!8011 = !DILocation(line: 585, column: 3, scope: !8005)
!8012 = !DILocation(line: 627, column: 1, scope: !7992)
!8013 = distinct !DISubprogram(name: "set_up_plls", scope: !868, file: !868, line: 448, type: !3174, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8014 = !DILocation(line: 460, column: 6, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8013, file: !868, line: 460, column: 6)
!8016 = !DILocation(line: 460, column: 31, scope: !8015)
!8017 = !DILocation(line: 460, column: 6, scope: !8013)
!8018 = !DILocation(line: 461, column: 3, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !868, line: 460, column: 67)
!8020 = !DILocation(line: 462, column: 3, scope: !8019)
!8021 = !DILocation(line: 463, column: 2, scope: !8019)
!8022 = !DILocation(line: 464, column: 2, scope: !8013)
!8023 = !DILocation(line: 488, column: 2, scope: !8013)
!8024 = !DILocation(line: 492, column: 2, scope: !8013)
!8025 = !DILocation(line: 496, column: 2, scope: !8013)
!8026 = !DILocation(line: 499, column: 2, scope: !8013)
!8027 = !DILocation(line: 500, column: 2, scope: !8013)
!8028 = !DILocation(line: 500, column: 9, scope: !8013)
!8029 = !DILocation(line: 500, column: 30, scope: !8013)
!8030 = distinct !{!8030, !8027, !8031}
!8031 = !DILocation(line: 502, column: 2, scope: !8013)
!8032 = !DILocation(line: 505, column: 1, scope: !8013)
!8033 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7989, file: !7989, line: 3224, type: !6045, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8034)
!8034 = !{!8035}
!8035 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8033, file: !7989, line: 3224, type: !121)
!8036 = !DILocation(line: 0, scope: !8033)
!8037 = !DILocation(line: 3226, column: 3, scope: !8033)
!8038 = !DILocation(line: 3227, column: 1, scope: !8033)
!8039 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7989, file: !7989, line: 3188, type: !6045, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8040)
!8040 = !{!8041}
!8041 = !DILocalVariable(name: "Source", arg: 1, scope: !8039, file: !7989, line: 3188, type: !121)
!8042 = !DILocation(line: 0, scope: !8039)
!8043 = !DILocation(line: 3190, column: 3, scope: !8039)
!8044 = !DILocation(line: 3191, column: 1, scope: !8039)
!8045 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7989, file: !7989, line: 3204, type: !6035, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8046 = !DILocation(line: 3206, column: 21, scope: !8045)
!8047 = !DILocation(line: 3206, column: 3, scope: !8045)
!8048 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7989, file: !7989, line: 3240, type: !6045, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8049)
!8049 = !{!8050}
!8050 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8048, file: !7989, line: 3240, type: !121)
!8051 = !DILocation(line: 0, scope: !8048)
!8052 = !DILocation(line: 3242, column: 3, scope: !8048)
!8053 = !DILocation(line: 3243, column: 1, scope: !8048)
!8054 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7989, file: !7989, line: 3256, type: !6045, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !8055)
!8055 = !{!8056}
!8056 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8054, file: !7989, line: 3256, type: !121)
!8057 = !DILocation(line: 0, scope: !8054)
!8058 = !DILocation(line: 3258, column: 3, scope: !8054)
!8059 = !DILocation(line: 3259, column: 1, scope: !8054)
!8060 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !868, file: !868, line: 409, type: !3174, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8061 = !DILocation(line: 412, column: 6, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8060, file: !868, line: 412, column: 6)
!8063 = !DILocation(line: 412, column: 27, scope: !8062)
!8064 = !DILocation(line: 412, column: 6, scope: !8060)
!8065 = !DILocation(line: 414, column: 3, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !868, line: 412, column: 33)
!8067 = !DILocation(line: 415, column: 3, scope: !8066)
!8068 = !DILocation(line: 415, column: 10, scope: !8066)
!8069 = !DILocation(line: 415, column: 31, scope: !8066)
!8070 = distinct !{!8070, !8067, !8071}
!8071 = !DILocation(line: 417, column: 3, scope: !8066)
!8072 = !DILocation(line: 421, column: 2, scope: !8060)
!8073 = !DILocation(line: 422, column: 2, scope: !8060)
!8074 = !DILocation(line: 422, column: 9, scope: !8060)
!8075 = !DILocation(line: 422, column: 34, scope: !8060)
!8076 = distinct !{!8076, !8073, !8077}
!8077 = !DILocation(line: 423, column: 2, scope: !8060)
!8078 = !DILocation(line: 424, column: 1, scope: !8060)
!8079 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7989, file: !7989, line: 4195, type: !3174, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8080 = !DILocation(line: 4197, column: 3, scope: !8079)
!8081 = !DILocation(line: 4198, column: 1, scope: !8079)
!8082 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7989, file: !7989, line: 4184, type: !3174, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8083 = !DILocation(line: 4186, column: 3, scope: !8082)
!8084 = !DILocation(line: 4187, column: 1, scope: !8082)
!8085 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7989, file: !7989, line: 4205, type: !6035, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8086 = !DILocation(line: 4207, column: 11, scope: !8085)
!8087 = !DILocation(line: 4207, column: 44, scope: !8085)
!8088 = !DILocation(line: 4207, column: 3, scope: !8085)
!8089 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7989, file: !7989, line: 3007, type: !6035, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8090 = !DILocation(line: 3009, column: 11, scope: !8089)
!8091 = !DILocation(line: 3009, column: 44, scope: !8089)
!8092 = !DILocation(line: 3009, column: 3, scope: !8089)
!8093 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7989, file: !7989, line: 2987, type: !3174, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8094 = !DILocation(line: 2989, column: 3, scope: !8093)
!8095 = !DILocation(line: 2990, column: 1, scope: !8093)
!8096 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7989, file: !7989, line: 2939, type: !3174, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8097 = !DILocation(line: 2941, column: 3, scope: !8096)
!8098 = !DILocation(line: 2942, column: 1, scope: !8096)
!8099 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7989, file: !7989, line: 2949, type: !3174, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8100 = !DILocation(line: 2951, column: 3, scope: !8099)
!8101 = !DILocation(line: 2952, column: 1, scope: !8099)
!8102 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7989, file: !7989, line: 2969, type: !6035, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8103 = !DILocation(line: 2971, column: 11, scope: !8102)
!8104 = !DILocation(line: 2971, column: 44, scope: !8102)
!8105 = !DILocation(line: 2971, column: 3, scope: !8102)
!8106 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7989, file: !7989, line: 3143, type: !3174, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8107 = !DILocation(line: 3145, column: 3, scope: !8106)
!8108 = !DILocation(line: 3146, column: 1, scope: !8106)
!8109 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7989, file: !7989, line: 3163, type: !6035, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !806, retainedNodes: !317)
!8110 = !DILocation(line: 3165, column: 11, scope: !8109)
!8111 = !DILocation(line: 3165, column: 46, scope: !8109)
!8112 = !DILocation(line: 3165, column: 3, scope: !8109)
!8113 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8114, file: !8114, line: 40, type: !6035, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !317)
!8114 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8115 = !DILocation(line: 45, column: 3, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !8114, line: 44, column: 44)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !8114, line: 44, column: 13)
!8118 = distinct !DILexicalBlock(scope: !8113, file: !8114, line: 42, column: 6)
!8119 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8114, file: !8114, line: 56, type: !3174, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !317)
!8120 = !DILocation(line: 58, column: 2, scope: !8119)
!8121 = !DILocation(line: 62, column: 1, scope: !8119)
!8122 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7989, file: !7989, line: 4304, type: !8123, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !8125)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{null, !121, !121, !121, !121}
!8125 = !{!8126, !8127, !8128, !8129}
!8126 = !DILocalVariable(name: "Source", arg: 1, scope: !8122, file: !7989, line: 4304, type: !121)
!8127 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8122, file: !7989, line: 4304, type: !121)
!8128 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8122, file: !7989, line: 4304, type: !121)
!8129 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8122, file: !7989, line: 4304, type: !121)
!8130 = !DILocation(line: 0, scope: !8122)
!8131 = !DILocation(line: 4306, column: 3, scope: !8122)
!8132 = !DILocation(line: 4308, column: 3, scope: !8122)
!8133 = !DILocation(line: 4312, column: 1, scope: !8122)
!8134 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8114, file: !8114, line: 69, type: !3174, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !317)
!8135 = !DILocation(line: 72, column: 2, scope: !8134)
!8136 = !DILocation(line: 73, column: 1, scope: !8134)
!8137 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8138, file: !8138, line: 1185, type: !6045, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2902, retainedNodes: !8139)
!8138 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8139 = !{!8140, !8141}
!8140 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8137, file: !8138, line: 1185, type: !121)
!8141 = !DILocalVariable(name: "tmpreg", scope: !8137, file: !8138, line: 1187, type: !120)
!8142 = !DILocation(line: 0, scope: !8137)
!8143 = !DILocation(line: 1187, column: 3, scope: !8137)
!8144 = !DILocation(line: 1187, column: 17, scope: !8137)
!8145 = !DILocation(line: 1188, column: 3, scope: !8137)
!8146 = !DILocation(line: 1190, column: 12, scope: !8137)
!8147 = !DILocation(line: 1190, column: 10, scope: !8137)
!8148 = !DILocation(line: 1191, column: 9, scope: !8137)
!8149 = !DILocation(line: 1192, column: 1, scope: !8137)
!8150 = distinct !DISubprogram(name: "uart_console_init", scope: !946, file: !946, line: 588, type: !983, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8151)
!8151 = !{!8152}
!8152 = !DILocalVariable(name: "arg", arg: 1, scope: !8150, file: !946, line: 588, type: !962)
!8153 = !DILocation(line: 0, scope: !8150)
!8154 = !DILocation(line: 593, column: 7, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8150, file: !946, line: 593, column: 6)
!8156 = !DILocation(line: 593, column: 6, scope: !8150)
!8157 = !DILocation(line: 597, column: 2, scope: !8150)
!8158 = !DILocation(line: 599, column: 2, scope: !8150)
!8159 = !DILocation(line: 600, column: 1, scope: !8150)
!8160 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !8162, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8164)
!8161 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!157, !962}
!8164 = !{!8165}
!8165 = !DILocalVariable(name: "dev", arg: 1, scope: !8160, file: !8161, line: 47, type: !962)
!8166 = !DILocation(line: 0, scope: !8160)
!8167 = !DILocation(line: 55, column: 2, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8160, file: !8161, line: 55, column: 2)
!8169 = !{i64 2154951609}
!8170 = !DILocation(line: 56, column: 9, scope: !8160)
!8171 = !DILocation(line: 56, column: 2, scope: !8160)
!8172 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !946, file: !946, line: 573, type: !3174, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !317)
!8173 = !DILocation(line: 576, column: 2, scope: !8172)
!8174 = !DILocation(line: 579, column: 2, scope: !8172)
!8175 = !DILocation(line: 581, column: 1, scope: !8172)
!8176 = distinct !DISubprogram(name: "console_out", scope: !946, file: !946, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8177)
!8177 = !{!8178}
!8178 = !DILocalVariable(name: "c", arg: 1, scope: !8176, file: !946, line: 77, type: !103)
!8179 = !DILocation(line: 0, scope: !8176)
!8180 = !DILocation(line: 89, column: 11, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8176, file: !946, line: 89, column: 6)
!8182 = !DILocation(line: 89, column: 6, scope: !8176)
!8183 = !DILocation(line: 90, column: 3, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8181, file: !946, line: 89, column: 17)
!8185 = !DILocation(line: 91, column: 2, scope: !8184)
!8186 = !DILocation(line: 92, column: 34, scope: !8176)
!8187 = !DILocation(line: 92, column: 2, scope: !8176)
!8188 = !DILocation(line: 94, column: 2, scope: !8176)
!8189 = distinct !DISubprogram(name: "uart_poll_out", scope: !8190, file: !8190, line: 95, type: !979, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8191)
!8190 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/getline")
!8191 = !{!8192, !8193}
!8192 = !DILocalVariable(name: "dev", arg: 1, scope: !8189, file: !8190, line: 95, type: !962)
!8193 = !DILocalVariable(name: "out_char", arg: 2, scope: !8189, file: !8190, line: 95, type: !155)
!8194 = !DILocation(line: 0, scope: !8189)
!8195 = !DILocation(line: 105, column: 2, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8189, file: !8190, line: 105, column: 2)
!8197 = !{i64 2155034854}
!8198 = !DILocation(line: 106, column: 2, scope: !8189)
!8199 = !DILocation(line: 107, column: 1, scope: !8189)
!8200 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !209, file: !209, line: 574, type: !979, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8201)
!8201 = !{!8202, !8203, !8204}
!8202 = !DILocalVariable(name: "dev", arg: 1, scope: !8200, file: !209, line: 574, type: !962)
!8203 = !DILocalVariable(name: "out_char", arg: 2, scope: !8200, file: !209, line: 575, type: !155)
!8204 = !DILocalVariable(name: "api", scope: !8200, file: !209, line: 577, type: !954)
!8205 = !DILocation(line: 0, scope: !8200)
!8206 = !DILocation(line: 578, column: 40, scope: !8200)
!8207 = !DILocation(line: 580, column: 7, scope: !8200)
!8208 = !DILocation(line: 580, column: 2, scope: !8200)
!8209 = !DILocation(line: 581, column: 1, scope: !8200)
!8210 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8162, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8211)
!8211 = !{!8212}
!8212 = !DILocalVariable(name: "dev", arg: 1, scope: !8210, file: !141, line: 730, type: !962)
!8213 = !DILocation(line: 0, scope: !8210)
!8214 = !DILocation(line: 732, column: 9, scope: !8210)
!8215 = !DILocation(line: 732, column: 2, scope: !8210)
!8216 = distinct !DISubprogram(name: "uart_register_input", scope: !946, file: !946, line: 549, type: !8217, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8219)
!8217 = !DISubroutineType(types: !8218)
!8218 = !{null, !1043, !1043, !1083}
!8219 = !{!8220, !8221, !8222}
!8220 = !DILocalVariable(name: "avail", arg: 1, scope: !8216, file: !946, line: 549, type: !1043)
!8221 = !DILocalVariable(name: "lines", arg: 2, scope: !8216, file: !946, line: 549, type: !1043)
!8222 = !DILocalVariable(name: "completion", arg: 3, scope: !8216, file: !946, line: 550, type: !1083)
!8223 = !DILocation(line: 0, scope: !8216)
!8224 = !DILocation(line: 552, column: 14, scope: !8216)
!8225 = !DILocation(line: 553, column: 14, scope: !8216)
!8226 = !DILocation(line: 554, column: 16, scope: !8216)
!8227 = !DILocation(line: 556, column: 2, scope: !8216)
!8228 = !DILocation(line: 557, column: 1, scope: !8216)
!8229 = distinct !DISubprogram(name: "console_input_init", scope: !946, file: !946, line: 532, type: !3174, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8230)
!8230 = !{!8231}
!8231 = !DILocalVariable(name: "c", scope: !8229, file: !946, line: 534, type: !154)
!8232 = !DILocation(line: 534, column: 2, scope: !8229)
!8233 = !DILocation(line: 536, column: 2, scope: !8229)
!8234 = !DILocation(line: 537, column: 2, scope: !8229)
!8235 = !DILocation(line: 539, column: 2, scope: !8229)
!8236 = !DILocation(line: 542, column: 9, scope: !8229)
!8237 = !DILocation(line: 542, column: 2, scope: !8229)
!8238 = !DILocation(line: 0, scope: !8229)
!8239 = !DILocation(line: 543, column: 3, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8229, file: !946, line: 542, column: 46)
!8241 = distinct !{!8241, !8237, !8242}
!8242 = !DILocation(line: 544, column: 2, scope: !8229)
!8243 = !DILocation(line: 546, column: 2, scope: !8229)
!8244 = !DILocation(line: 547, column: 1, scope: !8229)
!8245 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !8190, file: !8190, line: 265, type: !1013, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8246)
!8246 = !{!8247}
!8247 = !DILocalVariable(name: "dev", arg: 1, scope: !8245, file: !8190, line: 265, type: !962)
!8248 = !DILocation(line: 0, scope: !8245)
!8249 = !DILocation(line: 274, column: 2, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8245, file: !8190, line: 274, column: 2)
!8251 = !{i64 2155035330}
!8252 = !DILocation(line: 275, column: 2, scope: !8245)
!8253 = !DILocation(line: 276, column: 1, scope: !8245)
!8254 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !8190, file: !8190, line: 217, type: !1013, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8255)
!8255 = !{!8256}
!8256 = !DILocalVariable(name: "dev", arg: 1, scope: !8254, file: !8190, line: 217, type: !962)
!8257 = !DILocation(line: 0, scope: !8254)
!8258 = !DILocation(line: 226, column: 2, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8254, file: !8190, line: 226, column: 2)
!8260 = !{i64 2155035194}
!8261 = !DILocation(line: 227, column: 2, scope: !8254)
!8262 = !DILocation(line: 228, column: 1, scope: !8254)
!8263 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !209, file: !209, line: 1190, type: !8264, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8266)
!8264 = !DISubroutineType(types: !8265)
!8265 = !{null, !962, !1029}
!8266 = !{!8267, !8268}
!8267 = !DILocalVariable(name: "dev", arg: 1, scope: !8263, file: !209, line: 1190, type: !962)
!8268 = !DILocalVariable(name: "cb", arg: 2, scope: !8263, file: !209, line: 1191, type: !1029)
!8269 = !DILocation(line: 0, scope: !8263)
!8270 = !DILocation(line: 1193, column: 2, scope: !8263)
!8271 = !DILocation(line: 1194, column: 1, scope: !8263)
!8272 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !209, file: !209, line: 1024, type: !983, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8273)
!8273 = !{!8274, !8275}
!8274 = !DILocalVariable(name: "dev", arg: 1, scope: !8272, file: !209, line: 1024, type: !962)
!8275 = !DILocalVariable(name: "api", scope: !8272, file: !209, line: 1027, type: !954)
!8276 = !DILocation(line: 0, scope: !8272)
!8277 = !DILocation(line: 1028, column: 40, scope: !8272)
!8278 = !DILocation(line: 1030, column: 11, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8272, file: !209, line: 1030, column: 6)
!8280 = !DILocation(line: 1030, column: 24, scope: !8279)
!8281 = !DILocation(line: 1030, column: 6, scope: !8272)
!8282 = !DILocation(line: 1033, column: 9, scope: !8272)
!8283 = !DILocation(line: 1033, column: 2, scope: !8272)
!8284 = !DILocation(line: 1038, column: 1, scope: !8272)
!8285 = distinct !DISubprogram(name: "uart_fifo_read", scope: !209, file: !209, line: 785, type: !1009, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8286)
!8286 = !{!8287, !8288, !8289, !8290}
!8287 = !DILocalVariable(name: "dev", arg: 1, scope: !8285, file: !209, line: 785, type: !962)
!8288 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8285, file: !209, line: 785, type: !267)
!8289 = !DILocalVariable(name: "size", arg: 3, scope: !8285, file: !209, line: 786, type: !268)
!8290 = !DILocalVariable(name: "api", scope: !8285, file: !209, line: 789, type: !954)
!8291 = !DILocation(line: 0, scope: !8285)
!8292 = !DILocation(line: 790, column: 40, scope: !8285)
!8293 = !DILocation(line: 792, column: 11, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8285, file: !209, line: 792, column: 6)
!8295 = !DILocation(line: 792, column: 21, scope: !8294)
!8296 = !DILocation(line: 792, column: 6, scope: !8285)
!8297 = !DILocation(line: 796, column: 9, scope: !8285)
!8298 = !DILocation(line: 796, column: 2, scope: !8285)
!8299 = !DILocation(line: 803, column: 1, scope: !8285)
!8300 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !8190, file: !8190, line: 241, type: !1013, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8301)
!8301 = !{!8302}
!8302 = !DILocalVariable(name: "dev", arg: 1, scope: !8300, file: !8190, line: 241, type: !962)
!8303 = !DILocation(line: 0, scope: !8300)
!8304 = !DILocation(line: 250, column: 2, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8300, file: !8190, line: 250, column: 2)
!8306 = !{i64 2155035262}
!8307 = !DILocation(line: 251, column: 2, scope: !8300)
!8308 = !DILocation(line: 252, column: 1, scope: !8300)
!8309 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !209, file: !209, line: 934, type: !1013, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8310)
!8310 = !{!8311, !8312}
!8311 = !DILocalVariable(name: "dev", arg: 1, scope: !8309, file: !209, line: 934, type: !962)
!8312 = !DILocalVariable(name: "api", scope: !8309, file: !209, line: 937, type: !954)
!8313 = !DILocation(line: 0, scope: !8309)
!8314 = !DILocation(line: 938, column: 40, scope: !8309)
!8315 = !DILocation(line: 940, column: 11, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8309, file: !209, line: 940, column: 6)
!8317 = !DILocation(line: 940, column: 25, scope: !8316)
!8318 = !DILocation(line: 940, column: 6, scope: !8309)
!8319 = !DILocation(line: 941, column: 3, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8316, file: !209, line: 940, column: 34)
!8321 = !DILocation(line: 942, column: 2, scope: !8320)
!8322 = !DILocation(line: 946, column: 1, scope: !8309)
!8323 = !DILocation(line: 0, scope: !1091)
!8324 = !DILocation(line: 433, column: 9, scope: !1091)
!8325 = !DILocation(line: 433, column: 43, scope: !1091)
!8326 = !DILocation(line: 434, column: 9, scope: !1091)
!8327 = !DILocation(line: 433, column: 2, scope: !1091)
!8328 = !DILocation(line: 436, column: 3, scope: !1096)
!8329 = !DILocation(line: 439, column: 8, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !1096, file: !946, line: 439, column: 7)
!8331 = !DILocation(line: 439, column: 7, scope: !1096)
!8332 = distinct !{!8332, !8327, !8333}
!8333 = !DILocation(line: 529, column: 2, scope: !1091)
!8334 = !DILocation(line: 0, scope: !1096)
!8335 = !DILocation(line: 445, column: 8, scope: !1096)
!8336 = !DILocation(line: 446, column: 10, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !1096, file: !946, line: 446, column: 7)
!8338 = !DILocation(line: 446, column: 7, scope: !1096)
!8339 = !DILocation(line: 460, column: 8, scope: !1101)
!8340 = !DILocation(line: 460, column: 7, scope: !1096)
!8341 = !DILocation(line: 461, column: 10, scope: !1099)
!8342 = !DILocation(line: 0, scope: !1099)
!8343 = !DILocation(line: 461, column: 8, scope: !1100)
!8344 = !DILocation(line: 462, column: 9, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !1100, file: !946, line: 462, column: 8)
!8346 = !DILocation(line: 462, column: 8, scope: !1100)
!8347 = !DILocation(line: 477, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !1096, file: !946, line: 477, column: 7)
!8349 = !DILocation(line: 477, column: 7, scope: !1096)
!8350 = !DILocation(line: 478, column: 16, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8348, file: !946, line: 477, column: 46)
!8352 = !DILocation(line: 478, column: 22, scope: !8351)
!8353 = !DILocation(line: 478, column: 4, scope: !8351)
!8354 = !DILocation(line: 479, column: 4, scope: !8351)
!8355 = !DILocation(line: 483, column: 7, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !1096, file: !946, line: 483, column: 7)
!8357 = !DILocation(line: 483, column: 7, scope: !1096)
!8358 = !DILocation(line: 484, column: 13, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !946, line: 484, column: 8)
!8360 = distinct !DILexicalBlock(scope: !8356, file: !946, line: 483, column: 55)
!8361 = !DILocation(line: 484, column: 8, scope: !8360)
!8362 = !DILocation(line: 485, column: 5, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8359, file: !946, line: 484, column: 26)
!8364 = !DILocation(line: 486, column: 5, scope: !8363)
!8365 = !DILocation(line: 487, column: 4, scope: !8363)
!8366 = !DILocation(line: 493, column: 16, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !1096, file: !946, line: 493, column: 7)
!8368 = !DILocation(line: 493, column: 8, scope: !8367)
!8369 = !DILocation(line: 493, column: 7, scope: !1096)
!8370 = !DILocation(line: 494, column: 4, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8367, file: !946, line: 493, column: 23)
!8372 = !DILocation(line: 497, column: 9, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !946, line: 497, column: 9)
!8374 = distinct !DILexicalBlock(scope: !8371, file: !946, line: 494, column: 18)
!8375 = !DILocation(line: 497, column: 13, scope: !8373)
!8376 = !DILocation(line: 497, column: 9, scope: !8374)
!8377 = !DILocation(line: 498, column: 16, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !946, line: 497, column: 18)
!8379 = !DILocation(line: 498, column: 26, scope: !8378)
!8380 = !DILocation(line: 498, column: 34, scope: !8378)
!8381 = !DILocation(line: 498, column: 6, scope: !8378)
!8382 = !DILocation(line: 499, column: 5, scope: !8378)
!8383 = !DILocation(line: 502, column: 5, scope: !8374)
!8384 = !DILocation(line: 503, column: 5, scope: !8374)
!8385 = !DILocation(line: 505, column: 5, scope: !8374)
!8386 = !DILocation(line: 505, column: 15, scope: !8374)
!8387 = !DILocation(line: 505, column: 21, scope: !8374)
!8388 = !DILocation(line: 505, column: 19, scope: !8374)
!8389 = !DILocation(line: 505, column: 26, scope: !8374)
!8390 = !DILocation(line: 506, column: 5, scope: !8374)
!8391 = !DILocation(line: 507, column: 5, scope: !8374)
!8392 = !DILocation(line: 508, column: 9, scope: !8374)
!8393 = !DILocation(line: 509, column: 9, scope: !8374)
!8394 = !DILocation(line: 510, column: 5, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8374, file: !946, line: 510, column: 5)
!8396 = !DILocation(line: 511, column: 9, scope: !8374)
!8397 = !DILocation(line: 512, column: 5, scope: !8374)
!8398 = !DILocation(line: 514, column: 9, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8374, file: !946, line: 514, column: 9)
!8400 = !DILocation(line: 514, column: 23, scope: !8399)
!8401 = !DILocation(line: 515, column: 27, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8399, file: !946, line: 514, column: 32)
!8403 = !DILocation(line: 515, column: 38, scope: !8402)
!8404 = !DILocation(line: 515, column: 13, scope: !8402)
!8405 = !DILocation(line: 515, column: 10, scope: !8402)
!8406 = !DILocation(line: 516, column: 5, scope: !8402)
!8407 = !DILocation(line: 526, column: 7, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !1096, file: !946, line: 526, column: 7)
!8409 = !DILocation(line: 526, column: 13, scope: !8408)
!8410 = !DILocation(line: 526, column: 11, scope: !8408)
!8411 = !DILocation(line: 526, column: 17, scope: !8408)
!8412 = !DILocation(line: 526, column: 7, scope: !1096)
!8413 = !DILocation(line: 527, column: 17, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8408, file: !946, line: 526, column: 42)
!8415 = !DILocation(line: 527, column: 30, scope: !8414)
!8416 = !DILocation(line: 527, column: 4, scope: !8414)
!8417 = !DILocation(line: 528, column: 3, scope: !8414)
!8418 = !DILocation(line: 530, column: 1, scope: !1091)
!8419 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !209, file: !209, line: 1163, type: !1027, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8420)
!8420 = !{!8421, !8422, !8423, !8424}
!8421 = !DILocalVariable(name: "dev", arg: 1, scope: !8419, file: !209, line: 1163, type: !962)
!8422 = !DILocalVariable(name: "cb", arg: 2, scope: !8419, file: !209, line: 1164, type: !1029)
!8423 = !DILocalVariable(name: "user_data", arg: 3, scope: !8419, file: !209, line: 1165, type: !102)
!8424 = !DILocalVariable(name: "api", scope: !8419, file: !209, line: 1168, type: !954)
!8425 = !DILocation(line: 0, scope: !8419)
!8426 = !DILocation(line: 1169, column: 40, scope: !8419)
!8427 = !DILocation(line: 1171, column: 11, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8419, file: !209, line: 1171, column: 6)
!8429 = !DILocation(line: 1171, column: 20, scope: !8428)
!8430 = !DILocation(line: 1171, column: 29, scope: !8428)
!8431 = !DILocation(line: 1171, column: 46, scope: !8428)
!8432 = !DILocation(line: 1171, column: 6, scope: !8419)
!8433 = !DILocation(line: 1172, column: 3, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8428, file: !209, line: 1171, column: 56)
!8435 = !DILocation(line: 1173, column: 2, scope: !8434)
!8436 = !DILocation(line: 1179, column: 1, scope: !8419)
!8437 = distinct !DISubprogram(name: "uart_irq_update", scope: !8190, file: !8190, line: 360, type: !983, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8438)
!8438 = !{!8439}
!8439 = !DILocalVariable(name: "dev", arg: 1, scope: !8437, file: !8190, line: 360, type: !962)
!8440 = !DILocation(line: 0, scope: !8437)
!8441 = !DILocation(line: 368, column: 2, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8437, file: !8190, line: 368, column: 2)
!8443 = !{i64 2155035602}
!8444 = !DILocation(line: 369, column: 9, scope: !8437)
!8445 = !DILocation(line: 369, column: 2, scope: !8437)
!8446 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !8190, file: !8190, line: 337, type: !983, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8447)
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !8190, line: 337, type: !962)
!8449 = !DILocation(line: 0, scope: !8446)
!8450 = !DILocation(line: 345, column: 2, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8446, file: !8190, line: 345, column: 2)
!8452 = !{i64 2155035534}
!8453 = !DILocation(line: 346, column: 9, scope: !8446)
!8454 = !DILocation(line: 346, column: 2, scope: !8446)
!8455 = distinct !DISubprogram(name: "read_uart", scope: !946, file: !946, line: 127, type: !8456, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8458)
!8456 = !DISubroutineType(types: !8457)
!8457 = !{!103, !962, !267, !32}
!8458 = !{!8459, !8460, !8461, !8462}
!8459 = !DILocalVariable(name: "uart", arg: 1, scope: !8455, file: !946, line: 127, type: !962)
!8460 = !DILocalVariable(name: "buf", arg: 2, scope: !8455, file: !946, line: 127, type: !267)
!8461 = !DILocalVariable(name: "size", arg: 3, scope: !8455, file: !946, line: 128, type: !32)
!8462 = !DILocalVariable(name: "rx", scope: !8455, file: !946, line: 130, type: !103)
!8463 = !DILocation(line: 0, scope: !8455)
!8464 = !DILocation(line: 132, column: 7, scope: !8455)
!8465 = !DILocation(line: 133, column: 9, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8455, file: !946, line: 133, column: 6)
!8467 = !DILocation(line: 133, column: 6, scope: !8455)
!8468 = !DILocation(line: 135, column: 3, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8466, file: !946, line: 133, column: 14)
!8470 = !DILocation(line: 137, column: 3, scope: !8469)
!8471 = !DILocation(line: 141, column: 1, scope: !8455)
!8472 = distinct !DISubprogram(name: "k_queue_get", scope: !3610, file: !3610, line: 649, type: !8473, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8480)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!102, !8475, !8476}
!8475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!8476 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !8477)
!8477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !8478)
!8478 = !{!8479}
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8477, file: !201, line: 66, baseType: !200, size: 64)
!8480 = !{!8481, !8482}
!8481 = !DILocalVariable(name: "queue", arg: 1, scope: !8472, file: !3610, line: 649, type: !8475)
!8482 = !DILocalVariable(name: "timeout", arg: 2, scope: !8472, file: !3610, line: 649, type: !8476)
!8483 = !DILocation(line: 0, scope: !8472)
!8484 = !DILocation(line: 658, column: 2, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8472, file: !3610, line: 658, column: 2)
!8486 = !{i64 2154751299}
!8487 = !DILocation(line: 659, column: 9, scope: !8472)
!8488 = !DILocation(line: 659, column: 2, scope: !8472)
!8489 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1111, file: !1111, line: 131, type: !8490, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8494)
!8490 = !DISubroutineType(types: !8491)
!8491 = !{!157, !8492, !103}
!8492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8493, size: 32)
!8493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!8494 = !{!8495, !8496, !8497}
!8495 = !DILocalVariable(name: "target", arg: 1, scope: !8489, file: !1111, line: 131, type: !8492)
!8496 = !DILocalVariable(name: "bit", arg: 2, scope: !8489, file: !1111, line: 131, type: !103)
!8497 = !DILocalVariable(name: "val", scope: !8489, file: !1111, line: 133, type: !8498)
!8498 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1111, line: 23, baseType: !1110)
!8499 = !DILocation(line: 0, scope: !8489)
!8500 = !DILocation(line: 133, column: 21, scope: !8489)
!8501 = !DILocation(line: 135, column: 27, scope: !8489)
!8502 = !DILocation(line: 135, column: 50, scope: !8489)
!8503 = !DILocation(line: 135, column: 2, scope: !8489)
!8504 = distinct !DISubprogram(name: "handle_ansi", scope: !946, file: !946, line: 232, type: !8505, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8507)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{null, !154, !344}
!8507 = !{!8508, !8509, !8510}
!8508 = !DILocalVariable(name: "byte", arg: 1, scope: !8504, file: !946, line: 232, type: !154)
!8509 = !DILocalVariable(name: "line", arg: 2, scope: !8504, file: !946, line: 232, type: !344)
!8510 = !DILabel(scope: !8504, name: "ansi_cmd", file: !946, line: 268)
!8511 = !DILocation(line: 0, scope: !8504)
!8512 = !DILocation(line: 234, column: 6, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8504, file: !946, line: 234, column: 6)
!8514 = !DILocation(line: 234, column: 6, scope: !8504)
!8515 = !DILocation(line: 235, column: 16, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !946, line: 235, column: 7)
!8517 = distinct !DILexicalBlock(scope: !8513, file: !946, line: 234, column: 61)
!8518 = !DILocation(line: 235, column: 8, scope: !8516)
!8519 = !DILocation(line: 235, column: 7, scope: !8517)
!8520 = !DILocation(line: 236, column: 13, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8516, file: !946, line: 235, column: 23)
!8522 = !DILocation(line: 237, column: 4, scope: !8521)
!8523 = !DILocation(line: 240, column: 3, scope: !8517)
!8524 = !DILocation(line: 241, column: 19, scope: !8517)
!8525 = !DILocation(line: 241, column: 12, scope: !8517)
!8526 = !DILocation(line: 242, column: 14, scope: !8517)
!8527 = !DILocation(line: 243, column: 3, scope: !8517)
!8528 = !DILocation(line: 246, column: 6, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8504, file: !946, line: 246, column: 6)
!8530 = !DILocation(line: 246, column: 6, scope: !8504)
!8531 = !DILocation(line: 247, column: 15, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !946, line: 247, column: 7)
!8533 = distinct !DILexicalBlock(scope: !8529, file: !946, line: 246, column: 49)
!8534 = !DILocation(line: 247, column: 7, scope: !8532)
!8535 = !DILocation(line: 247, column: 7, scope: !8533)
!8536 = !DILocation(line: 248, column: 8, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !946, line: 248, column: 8)
!8538 = distinct !DILexicalBlock(scope: !8532, file: !946, line: 247, column: 22)
!8539 = !DILocation(line: 248, column: 8, scope: !8538)
!8540 = !DILocation(line: 249, column: 16, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8537, file: !946, line: 248, column: 53)
!8542 = !DILocation(line: 250, column: 24, scope: !8541)
!8543 = !DILocation(line: 250, column: 16, scope: !8541)
!8544 = !DILocation(line: 251, column: 4, scope: !8541)
!8545 = !DILocation(line: 252, column: 14, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8537, file: !946, line: 251, column: 11)
!8547 = !DILocation(line: 253, column: 22, scope: !8546)
!8548 = !DILocation(line: 253, column: 14, scope: !8546)
!8549 = !DILocation(line: 259, column: 12, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8533, file: !946, line: 259, column: 7)
!8551 = !DILocation(line: 259, column: 19, scope: !8550)
!8552 = !DILocation(line: 260, column: 8, scope: !8550)
!8553 = !DILocation(line: 259, column: 7, scope: !8533)
!8554 = !DILocation(line: 264, column: 3, scope: !8533)
!8555 = !DILocation(line: 265, column: 3, scope: !8533)
!8556 = !DILocation(line: 266, column: 2, scope: !8533)
!8557 = !DILocation(line: 268, column: 1, scope: !8504)
!8558 = !DILocation(line: 269, column: 2, scope: !8504)
!8559 = !DILocation(line: 271, column: 7, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !946, line: 271, column: 7)
!8561 = distinct !DILexicalBlock(scope: !8504, file: !946, line: 269, column: 16)
!8562 = !DILocation(line: 271, column: 18, scope: !8560)
!8563 = !DILocation(line: 271, column: 16, scope: !8560)
!8564 = !DILocation(line: 271, column: 7, scope: !8561)
!8565 = !DILocation(line: 275, column: 7, scope: !8561)
!8566 = !DILocation(line: 276, column: 7, scope: !8561)
!8567 = !DILocation(line: 277, column: 3, scope: !8561)
!8568 = !DILocation(line: 278, column: 3, scope: !8561)
!8569 = !DILocation(line: 280, column: 7, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8561, file: !946, line: 280, column: 7)
!8571 = !DILocation(line: 280, column: 18, scope: !8570)
!8572 = !DILocation(line: 280, column: 16, scope: !8570)
!8573 = !DILocation(line: 280, column: 7, scope: !8561)
!8574 = !DILocation(line: 284, column: 7, scope: !8561)
!8575 = !DILocation(line: 285, column: 7, scope: !8561)
!8576 = !DILocation(line: 286, column: 3, scope: !8561)
!8577 = !DILocation(line: 287, column: 3, scope: !8561)
!8578 = !DILocation(line: 289, column: 8, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8561, file: !946, line: 289, column: 7)
!8580 = !DILocation(line: 289, column: 7, scope: !8561)
!8581 = !DILocation(line: 293, column: 19, scope: !8561)
!8582 = !DILocation(line: 293, column: 3, scope: !8561)
!8583 = !DILocation(line: 294, column: 10, scope: !8561)
!8584 = !DILocation(line: 294, column: 7, scope: !8561)
!8585 = !DILocation(line: 295, column: 7, scope: !8561)
!8586 = !DILocation(line: 296, column: 3, scope: !8561)
!8587 = !DILocation(line: 298, column: 8, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8561, file: !946, line: 298, column: 7)
!8589 = !DILocation(line: 298, column: 7, scope: !8561)
!8590 = !DILocation(line: 302, column: 18, scope: !8561)
!8591 = !DILocation(line: 302, column: 3, scope: !8561)
!8592 = !DILocation(line: 303, column: 10, scope: !8561)
!8593 = !DILocation(line: 303, column: 7, scope: !8561)
!8594 = !DILocation(line: 304, column: 7, scope: !8561)
!8595 = !DILocation(line: 305, column: 3, scope: !8561)
!8596 = !DILocation(line: 307, column: 8, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8561, file: !946, line: 307, column: 7)
!8598 = !DILocation(line: 307, column: 7, scope: !8561)
!8599 = !DILocation(line: 311, column: 3, scope: !8561)
!8600 = !DILocation(line: 312, column: 18, scope: !8561)
!8601 = !DILocation(line: 312, column: 13, scope: !8561)
!8602 = !DILocation(line: 312, column: 24, scope: !8561)
!8603 = !DILocation(line: 312, column: 3, scope: !8561)
!8604 = !DILocation(line: 313, column: 3, scope: !8561)
!8605 = !DILocation(line: 318, column: 2, scope: !8504)
!8606 = !DILocation(line: 319, column: 1, scope: !8504)
!8607 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1111, file: !1111, line: 152, type: !8608, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8611)
!8608 = !DISubroutineType(types: !8609)
!8609 = !{!157, !8610, !103}
!8610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!8611 = !{!8612, !8613, !8614, !8615}
!8612 = !DILocalVariable(name: "target", arg: 1, scope: !8607, file: !1111, line: 152, type: !8610)
!8613 = !DILocalVariable(name: "bit", arg: 2, scope: !8607, file: !1111, line: 152, type: !103)
!8614 = !DILocalVariable(name: "mask", scope: !8607, file: !1111, line: 154, type: !8498)
!8615 = !DILocalVariable(name: "old", scope: !8607, file: !1111, line: 155, type: !8498)
!8616 = !DILocation(line: 0, scope: !8607)
!8617 = !DILocation(line: 154, column: 22, scope: !8607)
!8618 = !DILocation(line: 157, column: 45, scope: !8607)
!8619 = !DILocation(line: 157, column: 8, scope: !8607)
!8620 = !DILocation(line: 159, column: 14, scope: !8607)
!8621 = !DILocation(line: 159, column: 22, scope: !8607)
!8622 = !DILocation(line: 159, column: 2, scope: !8607)
!8623 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1111, file: !1111, line: 217, type: !8624, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8626)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{null, !8610, !103}
!8626 = !{!8627, !8628, !8629}
!8627 = !DILocalVariable(name: "target", arg: 1, scope: !8623, file: !1111, line: 217, type: !8610)
!8628 = !DILocalVariable(name: "bit", arg: 2, scope: !8623, file: !1111, line: 217, type: !103)
!8629 = !DILocalVariable(name: "mask", scope: !8623, file: !1111, line: 219, type: !8498)
!8630 = !DILocation(line: 0, scope: !8623)
!8631 = !DILocation(line: 219, column: 22, scope: !8623)
!8632 = !DILocation(line: 221, column: 8, scope: !8623)
!8633 = !DILocation(line: 222, column: 1, scope: !8623)
!8634 = distinct !DISubprogram(name: "isprint", scope: !4927, file: !4927, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8635)
!8635 = !{!8636}
!8636 = !DILocalVariable(name: "c", arg: 1, scope: !8634, file: !4927, line: 37, type: !103)
!8637 = !DILocation(line: 0, scope: !8634)
!8638 = !DILocation(line: 39, column: 38, scope: !8634)
!8639 = !DILocation(line: 39, column: 2, scope: !8634)
!8640 = distinct !DISubprogram(name: "del_char", scope: !946, file: !946, line: 191, type: !8641, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8643)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{null, !344, !154}
!8643 = !{!8644, !8645}
!8644 = !DILocalVariable(name: "pos", arg: 1, scope: !8640, file: !946, line: 191, type: !344)
!8645 = !DILocalVariable(name: "end", arg: 2, scope: !8640, file: !946, line: 191, type: !154)
!8646 = !DILocation(line: 0, scope: !8640)
!8647 = !DILocation(line: 193, column: 2, scope: !8640)
!8648 = !DILocation(line: 195, column: 10, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8640, file: !946, line: 195, column: 6)
!8650 = !DILocation(line: 195, column: 6, scope: !8640)
!8651 = !DILocation(line: 196, column: 3, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8649, file: !946, line: 195, column: 17)
!8653 = !DILocation(line: 197, column: 3, scope: !8652)
!8654 = !DILocation(line: 198, column: 3, scope: !8652)
!8655 = !DILocation(line: 201, column: 2, scope: !8640)
!8656 = !DILocation(line: 203, column: 2, scope: !8640)
!8657 = !DILocation(line: 203, column: 12, scope: !8640)
!8658 = !DILocation(line: 204, column: 16, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8640, file: !946, line: 203, column: 20)
!8660 = !DILocation(line: 204, column: 10, scope: !8659)
!8661 = !DILocation(line: 204, column: 8, scope: !8659)
!8662 = !DILocation(line: 205, column: 3, scope: !8659)
!8663 = !DILocation(line: 203, column: 15, scope: !8640)
!8664 = distinct !{!8664, !8656, !8665}
!8665 = !DILocation(line: 206, column: 2, scope: !8640)
!8666 = !DILocation(line: 208, column: 2, scope: !8640)
!8667 = !DILocation(line: 211, column: 2, scope: !8640)
!8668 = !DILocation(line: 212, column: 1, scope: !8640)
!8669 = distinct !DISubprogram(name: "insert_char", scope: !946, file: !946, line: 163, type: !8670, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8672)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{null, !344, !146, !154}
!8672 = !{!8673, !8674, !8675, !8676}
!8673 = !DILocalVariable(name: "pos", arg: 1, scope: !8669, file: !946, line: 163, type: !344)
!8674 = !DILocalVariable(name: "c", arg: 2, scope: !8669, file: !946, line: 163, type: !146)
!8675 = !DILocalVariable(name: "end", arg: 3, scope: !8669, file: !946, line: 163, type: !154)
!8676 = !DILocalVariable(name: "tmp", scope: !8669, file: !946, line: 165, type: !146)
!8677 = !DILocation(line: 0, scope: !8669)
!8678 = !DILocation(line: 168, column: 2, scope: !8669)
!8679 = !DILocation(line: 170, column: 10, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8669, file: !946, line: 170, column: 6)
!8681 = !DILocation(line: 170, column: 6, scope: !8669)
!8682 = !DILocation(line: 171, column: 8, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8680, file: !946, line: 170, column: 17)
!8684 = !DILocation(line: 172, column: 3, scope: !8683)
!8685 = !DILocation(line: 175, column: 8, scope: !8669)
!8686 = !DILocation(line: 176, column: 11, scope: !8669)
!8687 = !DILocation(line: 178, column: 2, scope: !8669)
!8688 = !DILocation(line: 180, column: 2, scope: !8669)
!8689 = !DILocation(line: 180, column: 12, scope: !8669)
!8690 = !DILocation(line: 181, column: 3, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8669, file: !946, line: 180, column: 20)
!8692 = !DILocation(line: 182, column: 7, scope: !8691)
!8693 = !DILocation(line: 183, column: 12, scope: !8691)
!8694 = !DILocation(line: 180, column: 15, scope: !8669)
!8695 = distinct !{!8695, !8688, !8696}
!8696 = !DILocation(line: 185, column: 2, scope: !8669)
!8697 = !DILocation(line: 188, column: 2, scope: !8669)
!8698 = !DILocation(line: 189, column: 1, scope: !8669)
!8699 = distinct !DISubprogram(name: "cursor_save", scope: !946, file: !946, line: 153, type: !3174, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !317)
!8700 = !DILocation(line: 155, column: 2, scope: !8699)
!8701 = !DILocation(line: 156, column: 1, scope: !8699)
!8702 = distinct !DISubprogram(name: "cursor_restore", scope: !946, file: !946, line: 158, type: !3174, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !317)
!8703 = !DILocation(line: 160, column: 2, scope: !8702)
!8704 = !DILocation(line: 161, column: 1, scope: !8702)
!8705 = distinct !DISubprogram(name: "atomic_or", scope: !8706, file: !8706, line: 279, type: !8707, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8709)
!8706 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!8498, !8610, !8498}
!8709 = !{!8710, !8711}
!8710 = !DILocalVariable(name: "target", arg: 1, scope: !8705, file: !8706, line: 279, type: !8610)
!8711 = !DILocalVariable(name: "value", arg: 2, scope: !8705, file: !8706, line: 279, type: !8498)
!8712 = !DILocation(line: 0, scope: !8705)
!8713 = !DILocation(line: 281, column: 9, scope: !8705)
!8714 = !DILocation(line: 281, column: 2, scope: !8705)
!8715 = distinct !DISubprogram(name: "atomic_and", scope: !8706, file: !8706, line: 319, type: !8707, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8716)
!8716 = !{!8717, !8718}
!8717 = !DILocalVariable(name: "target", arg: 1, scope: !8715, file: !8706, line: 319, type: !8610)
!8718 = !DILocalVariable(name: "value", arg: 2, scope: !8715, file: !8706, line: 319, type: !8498)
!8719 = !DILocation(line: 0, scope: !8715)
!8720 = !DILocation(line: 321, column: 9, scope: !8715)
!8721 = !DILocation(line: 321, column: 2, scope: !8715)
!8722 = distinct !DISubprogram(name: "isdigit", scope: !4927, file: !4927, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8723)
!8723 = !{!8724}
!8724 = !DILocalVariable(name: "a", arg: 1, scope: !8722, file: !4927, line: 43, type: !103)
!8725 = !DILocation(line: 0, scope: !8722)
!8726 = !DILocation(line: 45, column: 29, scope: !8722)
!8727 = !DILocation(line: 45, column: 45, scope: !8722)
!8728 = !DILocation(line: 45, column: 2, scope: !8722)
!8729 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1111, file: !1111, line: 176, type: !8608, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8730)
!8730 = !{!8731, !8732, !8733, !8734}
!8731 = !DILocalVariable(name: "target", arg: 1, scope: !8729, file: !1111, line: 176, type: !8610)
!8732 = !DILocalVariable(name: "bit", arg: 2, scope: !8729, file: !1111, line: 176, type: !103)
!8733 = !DILocalVariable(name: "mask", scope: !8729, file: !1111, line: 178, type: !8498)
!8734 = !DILocalVariable(name: "old", scope: !8729, file: !1111, line: 179, type: !8498)
!8735 = !DILocation(line: 0, scope: !8729)
!8736 = !DILocation(line: 181, column: 8, scope: !8729)
!8737 = !DILocation(line: 183, column: 14, scope: !8729)
!8738 = !DILocation(line: 183, column: 22, scope: !8729)
!8739 = !DILocation(line: 183, column: 2, scope: !8729)
!8740 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1111, file: !1111, line: 198, type: !8624, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8741)
!8741 = !{!8742, !8743, !8744}
!8742 = !DILocalVariable(name: "target", arg: 1, scope: !8740, file: !1111, line: 198, type: !8610)
!8743 = !DILocalVariable(name: "bit", arg: 2, scope: !8740, file: !1111, line: 198, type: !103)
!8744 = !DILocalVariable(name: "mask", scope: !8740, file: !1111, line: 200, type: !8498)
!8745 = !DILocation(line: 0, scope: !8740)
!8746 = !DILocation(line: 200, column: 22, scope: !8740)
!8747 = !DILocation(line: 202, column: 45, scope: !8740)
!8748 = !DILocation(line: 202, column: 8, scope: !8740)
!8749 = !DILocation(line: 203, column: 1, scope: !8740)
!8750 = distinct !DISubprogram(name: "cursor_backward", scope: !946, file: !946, line: 148, type: !5750, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8751)
!8751 = !{!8752}
!8752 = !DILocalVariable(name: "count", arg: 1, scope: !8750, file: !946, line: 148, type: !32)
!8753 = !DILocation(line: 0, scope: !8750)
!8754 = !DILocation(line: 150, column: 2, scope: !8750)
!8755 = !DILocation(line: 151, column: 1, scope: !8750)
!8756 = distinct !DISubprogram(name: "cursor_forward", scope: !946, file: !946, line: 143, type: !5750, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8757)
!8757 = !{!8758}
!8758 = !DILocalVariable(name: "count", arg: 1, scope: !8756, file: !946, line: 143, type: !32)
!8759 = !DILocation(line: 0, scope: !8756)
!8760 = !DILocation(line: 145, column: 2, scope: !8756)
!8761 = !DILocation(line: 146, column: 1, scope: !8756)
!8762 = distinct !DISubprogram(name: "atomic_get", scope: !8706, file: !8706, line: 159, type: !8763, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!8498, !8492}
!8765 = !{!8766}
!8766 = !DILocalVariable(name: "target", arg: 1, scope: !8762, file: !8706, line: 159, type: !8492)
!8767 = !DILocation(line: 0, scope: !8762)
!8768 = !DILocation(line: 161, column: 9, scope: !8762)
!8769 = !DILocation(line: 161, column: 2, scope: !8762)
!8770 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !209, file: !209, line: 1093, type: !983, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8771)
!8771 = !{!8772, !8773}
!8772 = !DILocalVariable(name: "dev", arg: 1, scope: !8770, file: !209, line: 1093, type: !962)
!8773 = !DILocalVariable(name: "api", scope: !8770, file: !209, line: 1096, type: !954)
!8774 = !DILocation(line: 0, scope: !8770)
!8775 = !DILocation(line: 1097, column: 40, scope: !8770)
!8776 = !DILocation(line: 1099, column: 11, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8770, file: !209, line: 1099, column: 6)
!8778 = !DILocation(line: 1099, column: 26, scope: !8777)
!8779 = !DILocation(line: 1099, column: 6, scope: !8770)
!8780 = !DILocation(line: 1102, column: 9, scope: !8770)
!8781 = !DILocation(line: 1102, column: 2, scope: !8770)
!8782 = !DILocation(line: 1107, column: 1, scope: !8770)
!8783 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !209, file: !209, line: 1136, type: !983, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8784)
!8784 = !{!8785, !8786}
!8785 = !DILocalVariable(name: "dev", arg: 1, scope: !8783, file: !209, line: 1136, type: !962)
!8786 = !DILocalVariable(name: "api", scope: !8783, file: !209, line: 1139, type: !954)
!8787 = !DILocation(line: 0, scope: !8783)
!8788 = !DILocation(line: 1140, column: 40, scope: !8783)
!8789 = !DILocation(line: 1142, column: 11, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8783, file: !209, line: 1142, column: 6)
!8791 = !DILocation(line: 1142, column: 22, scope: !8790)
!8792 = !DILocation(line: 1142, column: 6, scope: !8783)
!8793 = !DILocation(line: 1145, column: 9, scope: !8783)
!8794 = !DILocation(line: 1145, column: 2, scope: !8783)
!8795 = !DILocation(line: 1150, column: 1, scope: !8783)
!8796 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !209, file: !209, line: 878, type: !1013, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8797)
!8797 = !{!8798, !8799}
!8798 = !DILocalVariable(name: "dev", arg: 1, scope: !8796, file: !209, line: 878, type: !962)
!8799 = !DILocalVariable(name: "api", scope: !8796, file: !209, line: 881, type: !954)
!8800 = !DILocation(line: 0, scope: !8796)
!8801 = !DILocation(line: 882, column: 40, scope: !8796)
!8802 = !DILocation(line: 884, column: 11, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8796, file: !209, line: 884, column: 6)
!8804 = !DILocation(line: 884, column: 26, scope: !8803)
!8805 = !DILocation(line: 884, column: 6, scope: !8796)
!8806 = !DILocation(line: 885, column: 3, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8803, file: !209, line: 884, column: 35)
!8808 = !DILocation(line: 886, column: 2, scope: !8807)
!8809 = !DILocation(line: 890, column: 1, scope: !8796)
!8810 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !209, file: !209, line: 955, type: !1013, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8811)
!8811 = !{!8812, !8813}
!8812 = !DILocalVariable(name: "dev", arg: 1, scope: !8810, file: !209, line: 955, type: !962)
!8813 = !DILocalVariable(name: "api", scope: !8810, file: !209, line: 958, type: !954)
!8814 = !DILocation(line: 0, scope: !8810)
!8815 = !DILocation(line: 959, column: 40, scope: !8810)
!8816 = !DILocation(line: 961, column: 11, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8810, file: !209, line: 961, column: 6)
!8818 = !DILocation(line: 961, column: 26, scope: !8817)
!8819 = !DILocation(line: 961, column: 6, scope: !8810)
!8820 = !DILocation(line: 962, column: 3, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8817, file: !209, line: 961, column: 35)
!8822 = !DILocation(line: 963, column: 2, scope: !8821)
!8823 = !DILocation(line: 967, column: 1, scope: !8810)
!8824 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1293, file: !1293, line: 523, type: !1149, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8825)
!8825 = !{!8826, !8827, !8828, !8829, !8830}
!8826 = !DILocalVariable(name: "dev", arg: 1, scope: !8824, file: !1293, line: 523, type: !1151)
!8827 = !DILocalVariable(name: "pin", arg: 2, scope: !8824, file: !1293, line: 524, type: !1166)
!8828 = !DILocalVariable(name: "flags", arg: 3, scope: !8824, file: !1293, line: 524, type: !1167)
!8829 = !DILocalVariable(name: "err", scope: !8824, file: !1293, line: 526, type: !103)
!8830 = !DILocalVariable(name: "pincfg", scope: !8824, file: !1293, line: 527, type: !103)
!8831 = !DILocation(line: 0, scope: !8824)
!8832 = !DILocation(line: 527, column: 2, scope: !8824)
!8833 = !DILocation(line: 532, column: 8, scope: !8824)
!8834 = !DILocation(line: 533, column: 10, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8824, file: !1293, line: 533, column: 6)
!8836 = !DILocation(line: 533, column: 6, scope: !8824)
!8837 = !DILocation(line: 543, column: 13, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8824, file: !1293, line: 543, column: 6)
!8839 = !DILocation(line: 543, column: 28, scope: !8838)
!8840 = !DILocation(line: 543, column: 6, scope: !8824)
!8841 = !DILocation(line: 544, column: 14, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !1293, line: 544, column: 7)
!8843 = distinct !DILexicalBlock(scope: !8838, file: !1293, line: 543, column: 34)
!8844 = !DILocation(line: 544, column: 39, scope: !8842)
!8845 = !DILocation(line: 544, column: 7, scope: !8843)
!8846 = !DILocation(line: 545, column: 38, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8842, file: !1293, line: 544, column: 45)
!8848 = !DILocation(line: 545, column: 4, scope: !8847)
!8849 = !DILocation(line: 546, column: 3, scope: !8847)
!8850 = !DILocation(line: 546, column: 21, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8842, file: !1293, line: 546, column: 14)
!8852 = !DILocation(line: 546, column: 45, scope: !8851)
!8853 = !DILocation(line: 546, column: 14, scope: !8842)
!8854 = !DILocation(line: 547, column: 40, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8851, file: !1293, line: 546, column: 51)
!8856 = !DILocation(line: 547, column: 4, scope: !8855)
!8857 = !DILocation(line: 548, column: 3, scope: !8855)
!8858 = !DILocation(line: 551, column: 32, scope: !8824)
!8859 = !DILocation(line: 551, column: 37, scope: !8824)
!8860 = !DILocation(line: 551, column: 2, scope: !8824)
!8861 = !DILocation(line: 554, column: 6, scope: !8824)
!8862 = !DILocation(line: 562, column: 1, scope: !8824)
!8863 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1293, file: !1293, line: 410, type: !8864, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8866)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{!103, !1151, !864}
!8866 = !{!8867, !8868, !8869, !8871}
!8867 = !DILocalVariable(name: "dev", arg: 1, scope: !8863, file: !1293, line: 410, type: !1151)
!8868 = !DILocalVariable(name: "value", arg: 2, scope: !8863, file: !1293, line: 410, type: !864)
!8869 = !DILocalVariable(name: "cfg", scope: !8863, file: !1293, line: 412, type: !8870)
!8870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!8871 = !DILocalVariable(name: "gpio", scope: !8863, file: !1293, line: 413, type: !1224)
!8872 = !DILocation(line: 0, scope: !8863)
!8873 = !DILocation(line: 412, column: 45, scope: !8863)
!8874 = !DILocation(line: 413, column: 44, scope: !8863)
!8875 = !DILocation(line: 415, column: 11, scope: !8863)
!8876 = !DILocation(line: 415, column: 9, scope: !8863)
!8877 = !DILocation(line: 417, column: 2, scope: !8863)
!8878 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1293, file: !1293, line: 420, type: !1176, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8879)
!8879 = !{!8880, !8881, !8882, !8883, !8884, !8885}
!8880 = !DILocalVariable(name: "dev", arg: 1, scope: !8878, file: !1293, line: 420, type: !1151)
!8881 = !DILocalVariable(name: "mask", arg: 2, scope: !8878, file: !1293, line: 421, type: !1178)
!8882 = !DILocalVariable(name: "value", arg: 3, scope: !8878, file: !1293, line: 422, type: !1173)
!8883 = !DILocalVariable(name: "cfg", scope: !8878, file: !1293, line: 424, type: !8870)
!8884 = !DILocalVariable(name: "gpio", scope: !8878, file: !1293, line: 425, type: !1224)
!8885 = !DILocalVariable(name: "port_value", scope: !8878, file: !1293, line: 426, type: !121)
!8886 = !DILocation(line: 0, scope: !8878)
!8887 = !DILocation(line: 424, column: 45, scope: !8878)
!8888 = !DILocation(line: 425, column: 44, scope: !8878)
!8889 = !DILocation(line: 430, column: 15, scope: !8878)
!8890 = !DILocation(line: 431, column: 46, scope: !8878)
!8891 = !DILocation(line: 431, column: 44, scope: !8878)
!8892 = !DILocation(line: 431, column: 61, scope: !8878)
!8893 = !DILocation(line: 431, column: 53, scope: !8878)
!8894 = !DILocation(line: 431, column: 2, scope: !8878)
!8895 = !DILocation(line: 435, column: 2, scope: !8878)
!8896 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1293, file: !1293, line: 438, type: !1181, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8897)
!8897 = !{!8898, !8899, !8900, !8901}
!8898 = !DILocalVariable(name: "dev", arg: 1, scope: !8896, file: !1293, line: 438, type: !1151)
!8899 = !DILocalVariable(name: "pins", arg: 2, scope: !8896, file: !1293, line: 439, type: !1178)
!8900 = !DILocalVariable(name: "cfg", scope: !8896, file: !1293, line: 441, type: !8870)
!8901 = !DILocalVariable(name: "gpio", scope: !8896, file: !1293, line: 442, type: !1224)
!8902 = !DILocation(line: 0, scope: !8896)
!8903 = !DILocation(line: 441, column: 45, scope: !8896)
!8904 = !DILocation(line: 442, column: 44, scope: !8896)
!8905 = !DILocation(line: 448, column: 2, scope: !8896)
!8906 = !DILocation(line: 450, column: 2, scope: !8896)
!8907 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1293, file: !1293, line: 453, type: !1181, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8908)
!8908 = !{!8909, !8910, !8911, !8912}
!8909 = !DILocalVariable(name: "dev", arg: 1, scope: !8907, file: !1293, line: 453, type: !1151)
!8910 = !DILocalVariable(name: "pins", arg: 2, scope: !8907, file: !1293, line: 454, type: !1178)
!8911 = !DILocalVariable(name: "cfg", scope: !8907, file: !1293, line: 456, type: !8870)
!8912 = !DILocalVariable(name: "gpio", scope: !8907, file: !1293, line: 457, type: !1224)
!8913 = !DILocation(line: 0, scope: !8907)
!8914 = !DILocation(line: 456, column: 45, scope: !8907)
!8915 = !DILocation(line: 457, column: 44, scope: !8907)
!8916 = !DILocation(line: 467, column: 2, scope: !8907)
!8917 = !DILocation(line: 470, column: 2, scope: !8907)
!8918 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1293, file: !1293, line: 473, type: !1181, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8919)
!8919 = !{!8920, !8921, !8922, !8923}
!8920 = !DILocalVariable(name: "dev", arg: 1, scope: !8918, file: !1293, line: 473, type: !1151)
!8921 = !DILocalVariable(name: "pins", arg: 2, scope: !8918, file: !1293, line: 474, type: !1178)
!8922 = !DILocalVariable(name: "cfg", scope: !8918, file: !1293, line: 476, type: !8870)
!8923 = !DILocalVariable(name: "gpio", scope: !8918, file: !1293, line: 477, type: !1224)
!8924 = !DILocation(line: 0, scope: !8918)
!8925 = !DILocation(line: 476, column: 45, scope: !8918)
!8926 = !DILocation(line: 477, column: 44, scope: !8918)
!8927 = !DILocation(line: 484, column: 2, scope: !8918)
!8928 = !DILocation(line: 487, column: 2, scope: !8918)
!8929 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1293, file: !1293, line: 594, type: !1187, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8930)
!8930 = !{!8931, !8932, !8933, !8934, !8935, !8936, !8938, !8939, !8940}
!8931 = !DILocalVariable(name: "dev", arg: 1, scope: !8929, file: !1293, line: 594, type: !1151)
!8932 = !DILocalVariable(name: "pin", arg: 2, scope: !8929, file: !1293, line: 595, type: !1166)
!8933 = !DILocalVariable(name: "mode", arg: 3, scope: !8929, file: !1293, line: 596, type: !1125)
!8934 = !DILocalVariable(name: "trig", arg: 4, scope: !8929, file: !1293, line: 597, type: !1131)
!8935 = !DILocalVariable(name: "cfg", scope: !8929, file: !1293, line: 599, type: !8870)
!8936 = !DILocalVariable(name: "data", scope: !8929, file: !1293, line: 600, type: !8937)
!8937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!8938 = !DILocalVariable(name: "edge", scope: !8929, file: !1293, line: 601, type: !103)
!8939 = !DILocalVariable(name: "err", scope: !8929, file: !1293, line: 602, type: !103)
!8940 = !DILabel(scope: !8929, name: "exit", file: !1293, line: 643)
!8941 = !DILocation(line: 0, scope: !8929)
!8942 = !DILocation(line: 599, column: 45, scope: !8929)
!8943 = !DILocation(line: 604, column: 6, scope: !8929)
!8944 = !DILocation(line: 605, column: 34, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !1293, line: 605, column: 7)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !1293, line: 604, column: 38)
!8947 = distinct !DILexicalBlock(scope: !8929, file: !1293, line: 604, column: 6)
!8948 = !DILocation(line: 605, column: 7, scope: !8945)
!8949 = !DILocation(line: 605, column: 47, scope: !8945)
!8950 = !DILocation(line: 605, column: 39, scope: !8945)
!8951 = !DILocation(line: 605, column: 7, scope: !8946)
!8952 = !DILocation(line: 606, column: 4, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8945, file: !1293, line: 605, column: 53)
!8954 = !DILocation(line: 607, column: 4, scope: !8953)
!8955 = !DILocation(line: 608, column: 4, scope: !8953)
!8956 = !DILocation(line: 609, column: 3, scope: !8953)
!8957 = !DILocation(line: 600, column: 38, scope: !8929)
!8958 = !DILocation(line: 620, column: 30, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8929, file: !1293, line: 620, column: 6)
!8960 = !DILocation(line: 620, column: 6, scope: !8959)
!8961 = !DILocation(line: 620, column: 57, scope: !8959)
!8962 = !DILocation(line: 620, column: 6, scope: !8929)
!8963 = !DILocation(line: 625, column: 29, scope: !8929)
!8964 = !DILocation(line: 625, column: 2, scope: !8929)
!8965 = !DILocation(line: 627, column: 2, scope: !8929)
!8966 = !DILocation(line: 630, column: 3, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8929, file: !1293, line: 627, column: 16)
!8968 = !DILocation(line: 633, column: 3, scope: !8967)
!8969 = !DILocation(line: 636, column: 3, scope: !8967)
!8970 = !DILocation(line: 639, column: 2, scope: !8929)
!8971 = !DILocation(line: 641, column: 2, scope: !8929)
!8972 = !DILocation(line: 643, column: 1, scope: !8929)
!8973 = !DILocation(line: 644, column: 2, scope: !8929)
!8974 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1293, file: !1293, line: 647, type: !1191, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8975)
!8975 = !{!8976, !8977, !8978, !8979}
!8976 = !DILocalVariable(name: "dev", arg: 1, scope: !8974, file: !1293, line: 647, type: !1151)
!8977 = !DILocalVariable(name: "callback", arg: 2, scope: !8974, file: !1293, line: 648, type: !1193)
!8978 = !DILocalVariable(name: "set", arg: 3, scope: !8974, file: !1293, line: 649, type: !157)
!8979 = !DILocalVariable(name: "data", scope: !8974, file: !1293, line: 651, type: !8937)
!8980 = !DILocation(line: 0, scope: !8974)
!8981 = !DILocation(line: 651, column: 38, scope: !8974)
!8982 = !DILocation(line: 653, column: 37, scope: !8974)
!8983 = !DILocation(line: 653, column: 9, scope: !8974)
!8984 = !DILocation(line: 653, column: 2, scope: !8974)
!8985 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8986, file: !8986, line: 38, type: !8987, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !8990)
!8986 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!103, !8989, !1193, !157}
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 32)
!8990 = !{!8991, !8992, !8993}
!8991 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8985, file: !8986, line: 38, type: !8989)
!8992 = !DILocalVariable(name: "callback", arg: 2, scope: !8985, file: !8986, line: 39, type: !1193)
!8993 = !DILocalVariable(name: "set", arg: 3, scope: !8985, file: !8986, line: 40, type: !157)
!8994 = !DILocation(line: 0, scope: !8985)
!8995 = !DILocation(line: 45, column: 7, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8985, file: !8986, line: 45, column: 6)
!8997 = !DILocation(line: 45, column: 6, scope: !8985)
!8998 = !DILocation(line: 46, column: 56, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !8986, line: 46, column: 7)
!9000 = distinct !DILexicalBlock(scope: !8996, file: !8986, line: 45, column: 38)
!9001 = !DILocation(line: 46, column: 8, scope: !8999)
!9002 = !DILocation(line: 46, column: 7, scope: !9000)
!9003 = !DILocation(line: 51, column: 13, scope: !8996)
!9004 = !DILocation(line: 56, column: 43, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !8986, line: 55, column: 11)
!9006 = distinct !DILexicalBlock(scope: !8985, file: !8986, line: 55, column: 6)
!9007 = !DILocation(line: 56, column: 3, scope: !9005)
!9008 = !DILocation(line: 57, column: 2, scope: !9005)
!9009 = !DILocation(line: 60, column: 1, scope: !8985)
!9010 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1198, file: !1198, line: 261, type: !9011, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9013)
!9011 = !DISubroutineType(types: !9012)
!9012 = !{!157, !8989}
!9013 = !{!9014}
!9014 = !DILocalVariable(name: "list", arg: 1, scope: !9010, file: !1198, line: 261, type: !8989)
!9015 = !DILocation(line: 0, scope: !9010)
!9016 = !DILocation(line: 261, column: 1, scope: !9010)
!9017 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1198, file: !1198, line: 417, type: !9018, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9020)
!9018 = !DISubroutineType(types: !9019)
!9019 = !{!157, !8989, !1369}
!9020 = !{!9021, !9022, !9023, !9024}
!9021 = !DILocalVariable(name: "list", arg: 1, scope: !9017, file: !1198, line: 417, type: !8989)
!9022 = !DILocalVariable(name: "node", arg: 2, scope: !9017, file: !1198, line: 417, type: !1369)
!9023 = !DILocalVariable(name: "prev", scope: !9017, file: !1198, line: 417, type: !1369)
!9024 = !DILocalVariable(name: "test", scope: !9017, file: !1198, line: 417, type: !1369)
!9025 = !DILocation(line: 0, scope: !9017)
!9026 = !DILocation(line: 417, column: 1, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9017, file: !1198, line: 417, column: 1)
!9028 = !DILocation(line: 417, column: 1, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9027, file: !1198, line: 417, column: 1)
!9030 = !DILocation(line: 417, column: 1, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !1198, line: 417, column: 1)
!9032 = distinct !DILexicalBlock(scope: !9029, file: !1198, line: 417, column: 1)
!9033 = !DILocation(line: 417, column: 1, scope: !9032)
!9034 = distinct !{!9034, !9026, !9026}
!9035 = !DILocation(line: 417, column: 1, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9031, file: !1198, line: 417, column: 1)
!9037 = !DILocation(line: 417, column: 1, scope: !9017)
!9038 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1198, file: !1198, line: 298, type: !9039, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9041)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{null, !8989, !1369}
!9041 = !{!9042, !9043}
!9042 = !DILocalVariable(name: "list", arg: 1, scope: !9038, file: !1198, line: 298, type: !8989)
!9043 = !DILocalVariable(name: "node", arg: 2, scope: !9038, file: !1198, line: 298, type: !1369)
!9044 = !DILocation(line: 0, scope: !9038)
!9045 = !DILocation(line: 298, column: 1, scope: !9038)
!9046 = !DILocation(line: 298, column: 1, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9038, file: !1198, line: 298, column: 1)
!9048 = !DILocation(line: 298, column: 1, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9047, file: !1198, line: 298, column: 1)
!9050 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1198, file: !1198, line: 231, type: !9051, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9053)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!1369, !8989}
!9053 = !{!9054}
!9054 = !DILocalVariable(name: "list", arg: 1, scope: !9050, file: !1198, line: 231, type: !8989)
!9055 = !DILocation(line: 0, scope: !9050)
!9056 = !DILocation(line: 233, column: 15, scope: !9050)
!9057 = !DILocation(line: 233, column: 2, scope: !9050)
!9058 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1198, file: !1198, line: 209, type: !9059, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9061)
!9059 = !DISubroutineType(types: !9060)
!9060 = !{null, !1369, !1369}
!9061 = !{!9062, !9063}
!9062 = !DILocalVariable(name: "parent", arg: 1, scope: !9058, file: !1198, line: 209, type: !1369)
!9063 = !DILocalVariable(name: "child", arg: 2, scope: !9058, file: !1198, line: 209, type: !1369)
!9064 = !DILocation(line: 0, scope: !9058)
!9065 = !DILocation(line: 211, column: 10, scope: !9058)
!9066 = !DILocation(line: 211, column: 15, scope: !9058)
!9067 = !DILocation(line: 212, column: 1, scope: !9058)
!9068 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1198, file: !1198, line: 214, type: !9039, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9069)
!9069 = !{!9070, !9071}
!9070 = !DILocalVariable(name: "list", arg: 1, scope: !9068, file: !1198, line: 214, type: !8989)
!9071 = !DILocalVariable(name: "node", arg: 2, scope: !9068, file: !1198, line: 214, type: !1369)
!9072 = !DILocation(line: 0, scope: !9068)
!9073 = !DILocation(line: 216, column: 8, scope: !9068)
!9074 = !DILocation(line: 216, column: 13, scope: !9068)
!9075 = !DILocation(line: 217, column: 1, scope: !9068)
!9076 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1198, file: !1198, line: 243, type: !9051, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9077)
!9077 = !{!9078}
!9078 = !DILocalVariable(name: "list", arg: 1, scope: !9076, file: !1198, line: 243, type: !8989)
!9079 = !DILocation(line: 0, scope: !9076)
!9080 = !DILocation(line: 245, column: 15, scope: !9076)
!9081 = !DILocation(line: 245, column: 2, scope: !9076)
!9082 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1198, file: !1198, line: 219, type: !9039, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9083)
!9083 = !{!9084, !9085}
!9084 = !DILocalVariable(name: "list", arg: 1, scope: !9082, file: !1198, line: 219, type: !8989)
!9085 = !DILocalVariable(name: "node", arg: 2, scope: !9082, file: !1198, line: 219, type: !1369)
!9086 = !DILocation(line: 0, scope: !9082)
!9087 = !DILocation(line: 221, column: 8, scope: !9082)
!9088 = !DILocation(line: 221, column: 13, scope: !9082)
!9089 = !DILocation(line: 222, column: 1, scope: !9082)
!9090 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1198, file: !1198, line: 401, type: !9091, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9093)
!9091 = !DISubroutineType(types: !9092)
!9092 = !{null, !8989, !1369, !1369}
!9093 = !{!9094, !9095, !9096}
!9094 = !DILocalVariable(name: "list", arg: 1, scope: !9090, file: !1198, line: 401, type: !8989)
!9095 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9090, file: !1198, line: 401, type: !1369)
!9096 = !DILocalVariable(name: "node", arg: 3, scope: !9090, file: !1198, line: 401, type: !1369)
!9097 = !DILocation(line: 0, scope: !9090)
!9098 = !DILocation(line: 401, column: 1, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9090, file: !1198, line: 401, column: 1)
!9100 = !DILocation(line: 0, scope: !9099)
!9101 = !DILocation(line: 401, column: 1, scope: !9090)
!9102 = !DILocation(line: 401, column: 1, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9099, file: !1198, line: 401, column: 1)
!9104 = !DILocation(line: 401, column: 1, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9103, file: !1198, line: 401, column: 1)
!9106 = !DILocation(line: 401, column: 1, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9105, file: !1198, line: 401, column: 1)
!9108 = !DILocation(line: 401, column: 1, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9099, file: !1198, line: 401, column: 1)
!9110 = !DILocation(line: 401, column: 1, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9109, file: !1198, line: 401, column: 1)
!9112 = !DILocation(line: 401, column: 1, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9111, file: !1198, line: 401, column: 1)
!9114 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1198, file: !1198, line: 285, type: !9115, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9117)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!1369, !1369}
!9117 = !{!9118}
!9118 = !DILocalVariable(name: "node", arg: 1, scope: !9114, file: !1198, line: 285, type: !1369)
!9119 = !DILocation(line: 0, scope: !9114)
!9120 = !DILocation(line: 285, column: 1, scope: !9114)
!9121 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1198, file: !1198, line: 274, type: !9115, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9122)
!9122 = !{!9123}
!9123 = !DILocalVariable(name: "node", arg: 1, scope: !9121, file: !1198, line: 274, type: !1369)
!9124 = !DILocation(line: 0, scope: !9121)
!9125 = !DILocation(line: 274, column: 1, scope: !9121)
!9126 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1198, file: !1198, line: 204, type: !9115, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9127)
!9127 = !{!9128}
!9128 = !DILocalVariable(name: "node", arg: 1, scope: !9126, file: !1198, line: 204, type: !1369)
!9129 = !DILocation(line: 0, scope: !9126)
!9130 = !DILocation(line: 206, column: 15, scope: !9126)
!9131 = !DILocation(line: 206, column: 2, scope: !9126)
!9132 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1293, file: !1293, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9133)
!9133 = !{!9134, !9135, !9136}
!9134 = !DILocalVariable(name: "pin", arg: 1, scope: !9132, file: !1293, line: 342, type: !103)
!9135 = !DILocalVariable(name: "line", scope: !9132, file: !1293, line: 344, type: !121)
!9136 = !DILocalVariable(name: "port", scope: !9132, file: !1293, line: 345, type: !103)
!9137 = !DILocation(line: 0, scope: !9132)
!9138 = !DILocation(line: 344, column: 18, scope: !9132)
!9139 = !{i32 983040, i32 0}
!9140 = !DILocation(line: 356, column: 9, scope: !9132)
!9141 = !DILocation(line: 370, column: 2, scope: !9132)
!9142 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1293, file: !1293, line: 37, type: !728, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9143)
!9143 = !{!9144, !9145, !9146}
!9144 = !DILocalVariable(name: "line", arg: 1, scope: !9142, file: !1293, line: 37, type: !103)
!9145 = !DILocalVariable(name: "arg", arg: 2, scope: !9142, file: !1293, line: 37, type: !102)
!9146 = !DILocalVariable(name: "data", scope: !9142, file: !1293, line: 39, type: !8937)
!9147 = !DILocation(line: 0, scope: !9142)
!9148 = !DILocation(line: 41, column: 29, scope: !9142)
!9149 = !DILocation(line: 41, column: 39, scope: !9142)
!9150 = !DILocation(line: 41, column: 44, scope: !9142)
!9151 = !DILocation(line: 41, column: 2, scope: !9142)
!9152 = !DILocation(line: 42, column: 1, scope: !9142)
!9153 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1293, file: !1293, line: 376, type: !9154, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9156)
!9154 = !DISubroutineType(types: !9155)
!9155 = !{!103, !103, !103}
!9156 = !{!9157, !9158, !9159, !9161, !9162}
!9157 = !DILocalVariable(name: "port", arg: 1, scope: !9153, file: !1293, line: 376, type: !103)
!9158 = !DILocalVariable(name: "pin", arg: 2, scope: !9153, file: !1293, line: 376, type: !103)
!9159 = !DILocalVariable(name: "clk", scope: !9153, file: !1293, line: 386, type: !9160)
!9160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1151)
!9161 = !DILocalVariable(name: "pclken", scope: !9153, file: !1293, line: 387, type: !1412)
!9162 = !DILocalVariable(name: "ret", scope: !9153, file: !1293, line: 396, type: !103)
!9163 = !DILocation(line: 0, scope: !9153)
!9164 = !DILocation(line: 387, column: 2, scope: !9153)
!9165 = !DILocation(line: 387, column: 22, scope: !9153)
!9166 = !DILocation(line: 399, column: 8, scope: !9153)
!9167 = !DILocation(line: 400, column: 10, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9153, file: !1293, line: 400, column: 6)
!9169 = !DILocation(line: 400, column: 6, scope: !9153)
!9170 = !DILocation(line: 405, column: 2, scope: !9153)
!9171 = !DILocation(line: 407, column: 2, scope: !9153)
!9172 = !DILocation(line: 408, column: 1, scope: !9153)
!9173 = distinct !DISubprogram(name: "clock_control_on", scope: !815, file: !815, line: 123, type: !1258, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9174)
!9174 = !{!9175, !9176, !9177}
!9175 = !DILocalVariable(name: "dev", arg: 1, scope: !9173, file: !815, line: 123, type: !1151)
!9176 = !DILocalVariable(name: "sys", arg: 2, scope: !9173, file: !815, line: 124, type: !908)
!9177 = !DILocalVariable(name: "api", scope: !9173, file: !815, line: 126, type: !1251)
!9178 = !DILocation(line: 0, scope: !9173)
!9179 = !DILocation(line: 127, column: 49, scope: !9173)
!9180 = !DILocation(line: 129, column: 14, scope: !9173)
!9181 = !DILocation(line: 129, column: 9, scope: !9173)
!9182 = !DILocation(line: 129, column: 2, scope: !9173)
!9183 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1293, file: !1293, line: 311, type: !7747, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9184)
!9184 = !{!9185, !9186, !9187}
!9185 = !DILocalVariable(name: "port", arg: 1, scope: !9183, file: !1293, line: 311, type: !103)
!9186 = !DILocalVariable(name: "pin", arg: 2, scope: !9183, file: !1293, line: 311, type: !103)
!9187 = !DILocalVariable(name: "line", scope: !9183, file: !1293, line: 313, type: !121)
!9188 = !DILocation(line: 0, scope: !9183)
!9189 = !DILocation(line: 313, column: 18, scope: !9183)
!9190 = !DILocation(line: 337, column: 2, scope: !9183)
!9191 = !DILocation(line: 340, column: 1, scope: !9183)
!9192 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1293, file: !1293, line: 295, type: !9193, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9195)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{!121, !103}
!9195 = !{!9196}
!9196 = !DILocalVariable(name: "pin", arg: 1, scope: !9192, file: !1293, line: 295, type: !103)
!9197 = !DILocation(line: 0, scope: !9192)
!9198 = !DILocation(line: 307, column: 46, scope: !9192)
!9199 = !DILocation(line: 307, column: 27, scope: !9192)
!9200 = !DILocation(line: 307, column: 32, scope: !9192)
!9201 = !DILocation(line: 307, column: 14, scope: !9192)
!9202 = !DILocation(line: 307, column: 39, scope: !9192)
!9203 = !DILocation(line: 307, column: 2, scope: !9192)
!9204 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5760, file: !5760, line: 671, type: !9205, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9207)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{null, !121, !121}
!9207 = !{!9208, !9209}
!9208 = !DILocalVariable(name: "Port", arg: 1, scope: !9204, file: !5760, line: 671, type: !121)
!9209 = !DILocalVariable(name: "Line", arg: 2, scope: !9204, file: !5760, line: 671, type: !121)
!9210 = !DILocation(line: 0, scope: !9204)
!9211 = !DILocation(line: 673, column: 3, scope: !9204)
!9212 = !DILocalVariable(name: "value", arg: 1, scope: !9213, file: !5954, line: 373, type: !121)
!9213 = distinct !DISubprogram(name: "__RBIT", scope: !5954, file: !5954, line: 373, type: !6961, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9214)
!9214 = !{!9212, !9215}
!9215 = !DILocalVariable(name: "result", scope: !9213, file: !5954, line: 375, type: !121)
!9216 = !DILocation(line: 0, scope: !9213, inlinedAt: !9217)
!9217 = distinct !DILocation(line: 673, column: 3, scope: !9204)
!9218 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9217)
!9219 = !{i64 3499933}
!9220 = !DILocalVariable(name: "value", arg: 1, scope: !9221, file: !5954, line: 403, type: !121)
!9221 = distinct !DISubprogram(name: "__CLZ", scope: !5954, file: !5954, line: 403, type: !9222, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9224)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!154, !121}
!9224 = !{!9220}
!9225 = !DILocation(line: 0, scope: !9221, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 673, column: 3, scope: !9204)
!9227 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9226)
!9228 = !DILocation(line: 674, column: 1, scope: !9204)
!9229 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8986, file: !8986, line: 69, type: !9230, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9232)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{null, !8989, !1151, !121}
!9232 = !{!9233, !9234, !9235, !9236, !9237}
!9233 = !DILocalVariable(name: "list", arg: 1, scope: !9229, file: !8986, line: 69, type: !8989)
!9234 = !DILocalVariable(name: "port", arg: 2, scope: !9229, file: !8986, line: 70, type: !1151)
!9235 = !DILocalVariable(name: "pins", arg: 3, scope: !9229, file: !8986, line: 71, type: !121)
!9236 = !DILocalVariable(name: "cb", scope: !9229, file: !8986, line: 73, type: !1193)
!9237 = !DILocalVariable(name: "tmp", scope: !9229, file: !8986, line: 73, type: !1193)
!9238 = !DILocation(line: 0, scope: !9229)
!9239 = !DILocation(line: 75, column: 2, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9229, file: !8986, line: 75, column: 2)
!9241 = !DILocation(line: 0, scope: !9240)
!9242 = !DILocation(line: 76, column: 11, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !8986, line: 76, column: 7)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !8986, line: 75, column: 57)
!9245 = distinct !DILexicalBlock(scope: !9240, file: !8986, line: 75, column: 2)
!9246 = !DILocation(line: 76, column: 20, scope: !9243)
!9247 = !DILocation(line: 76, column: 7, scope: !9244)
!9248 = !DILocation(line: 78, column: 8, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9243, file: !8986, line: 76, column: 28)
!9250 = !DILocation(line: 78, column: 4, scope: !9249)
!9251 = !DILocation(line: 79, column: 3, scope: !9249)
!9252 = !DILocation(line: 75, column: 2, scope: !9245)
!9253 = !DILocation(line: 81, column: 1, scope: !9229)
!9254 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5760, file: !5760, line: 710, type: !6961, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9255)
!9255 = !{!9256}
!9256 = !DILocalVariable(name: "Line", arg: 1, scope: !9254, file: !5760, line: 710, type: !121)
!9257 = !DILocation(line: 0, scope: !9254)
!9258 = !DILocation(line: 712, column: 21, scope: !9254)
!9259 = !DILocation(line: 0, scope: !9213, inlinedAt: !9260)
!9260 = distinct !DILocation(line: 712, column: 76, scope: !9254)
!9261 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9260)
!9262 = !DILocation(line: 0, scope: !9221, inlinedAt: !9263)
!9263 = distinct !DILocation(line: 712, column: 76, scope: !9254)
!9264 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9263)
!9265 = !DILocation(line: 712, column: 73, scope: !9254)
!9266 = !DILocation(line: 712, column: 3, scope: !9254)
!9267 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9268, file: !9268, line: 910, type: !9269, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9271)
!9268 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9269 = !DISubroutineType(types: !9270)
!9270 = !{null, !1224, !121}
!9271 = !{!9272, !9273}
!9272 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9267, file: !9268, line: 910, type: !1224)
!9273 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9267, file: !9268, line: 910, type: !121)
!9274 = !DILocation(line: 0, scope: !9267)
!9275 = !DILocation(line: 912, column: 3, scope: !9267)
!9276 = !DILocation(line: 913, column: 1, scope: !9267)
!9277 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9268, file: !9268, line: 823, type: !9278, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9280)
!9278 = !DISubroutineType(types: !9279)
!9279 = !{!121, !1224}
!9280 = !{!9281}
!9281 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9277, file: !9268, line: 823, type: !1224)
!9282 = !DILocation(line: 0, scope: !9277)
!9283 = !DILocation(line: 825, column: 21, scope: !9277)
!9284 = !DILocation(line: 825, column: 3, scope: !9277)
!9285 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9268, file: !9268, line: 812, type: !9269, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9286)
!9286 = !{!9287, !9288}
!9287 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9285, file: !9268, line: 812, type: !1224)
!9288 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9285, file: !9268, line: 812, type: !121)
!9289 = !DILocation(line: 0, scope: !9285)
!9290 = !DILocation(line: 814, column: 3, scope: !9285)
!9291 = !DILocation(line: 815, column: 1, scope: !9285)
!9292 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9268, file: !9268, line: 771, type: !9278, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9293)
!9293 = !{!9294}
!9294 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9292, file: !9268, line: 771, type: !1224)
!9295 = !DILocation(line: 0, scope: !9292)
!9296 = !DILocation(line: 773, column: 21, scope: !9292)
!9297 = !DILocation(line: 773, column: 3, scope: !9292)
!9298 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1293, file: !1293, line: 47, type: !9299, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9301)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{!103, !1167, !2584}
!9301 = !{!9302, !9303}
!9302 = !DILocalVariable(name: "flags", arg: 1, scope: !9298, file: !1293, line: 47, type: !1167)
!9303 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9298, file: !1293, line: 47, type: !2584)
!9304 = !DILocation(line: 0, scope: !9298)
!9305 = !DILocation(line: 50, column: 13, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9298, file: !1293, line: 50, column: 6)
!9307 = !DILocation(line: 50, column: 28, scope: !9306)
!9308 = !DILocation(line: 50, column: 6, scope: !9298)
!9309 = !DILocation(line: 53, column: 11, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9306, file: !1293, line: 50, column: 34)
!9311 = !DILocation(line: 55, column: 14, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9310, file: !1293, line: 55, column: 7)
!9313 = !DILocation(line: 55, column: 35, scope: !9312)
!9314 = !DILocation(line: 55, column: 7, scope: !9310)
!9315 = !DILocation(line: 56, column: 14, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !1293, line: 56, column: 8)
!9317 = distinct !DILexicalBlock(scope: !9312, file: !1293, line: 55, column: 41)
!9318 = !DILocation(line: 56, column: 8, scope: !9317)
!9319 = !DILocation(line: 0, scope: !9312)
!9320 = !DILocation(line: 66, column: 14, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9310, file: !1293, line: 66, column: 7)
!9322 = !DILocation(line: 66, column: 30, scope: !9321)
!9323 = !DILocation(line: 66, column: 7, scope: !9310)
!9324 = !DILocation(line: 67, column: 12, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9321, file: !1293, line: 66, column: 36)
!9326 = !DILocation(line: 68, column: 3, scope: !9325)
!9327 = !DILocation(line: 68, column: 21, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9321, file: !1293, line: 68, column: 14)
!9329 = !DILocation(line: 68, column: 39, scope: !9328)
!9330 = !DILocation(line: 68, column: 14, scope: !9321)
!9331 = !DILocation(line: 69, column: 12, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !1293, line: 68, column: 45)
!9333 = !DILocation(line: 70, column: 3, scope: !9332)
!9334 = !DILocation(line: 72, column: 21, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9306, file: !1293, line: 72, column: 14)
!9336 = !DILocation(line: 72, column: 35, scope: !9335)
!9337 = !DILocation(line: 72, column: 14, scope: !9306)
!9338 = !DILocation(line: 77, column: 14, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !1293, line: 77, column: 7)
!9340 = distinct !DILexicalBlock(scope: !9335, file: !1293, line: 72, column: 41)
!9341 = !DILocation(line: 77, column: 30, scope: !9339)
!9342 = !DILocation(line: 77, column: 7, scope: !9340)
!9343 = !DILocation(line: 0, scope: !9306)
!9344 = !DILocation(line: 90, column: 1, scope: !9298)
!9345 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1293, file: !1293, line: 157, type: !9346, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9348)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{null, !1151, !103, !103, !103}
!9348 = !{!9349, !9350, !9351, !9352, !9353, !9354, !9355, !9356, !9357, !9358, !9359}
!9349 = !DILocalVariable(name: "dev", arg: 1, scope: !9345, file: !1293, line: 157, type: !1151)
!9350 = !DILocalVariable(name: "pin", arg: 2, scope: !9345, file: !1293, line: 157, type: !103)
!9351 = !DILocalVariable(name: "conf", arg: 3, scope: !9345, file: !1293, line: 158, type: !103)
!9352 = !DILocalVariable(name: "func", arg: 4, scope: !9345, file: !1293, line: 158, type: !103)
!9353 = !DILocalVariable(name: "cfg", scope: !9345, file: !1293, line: 160, type: !8870)
!9354 = !DILocalVariable(name: "gpio", scope: !9345, file: !1293, line: 161, type: !1224)
!9355 = !DILocalVariable(name: "pin_ll", scope: !9345, file: !1293, line: 163, type: !103)
!9356 = !DILocalVariable(name: "mode", scope: !9345, file: !1293, line: 227, type: !32)
!9357 = !DILocalVariable(name: "otype", scope: !9345, file: !1293, line: 227, type: !32)
!9358 = !DILocalVariable(name: "ospeed", scope: !9345, file: !1293, line: 227, type: !32)
!9359 = !DILocalVariable(name: "pupd", scope: !9345, file: !1293, line: 227, type: !32)
!9360 = !DILocation(line: 0, scope: !9345)
!9361 = !DILocation(line: 160, column: 45, scope: !9345)
!9362 = !DILocation(line: 161, column: 44, scope: !9345)
!9363 = !DILocation(line: 163, column: 15, scope: !9345)
!9364 = !DILocation(line: 229, column: 14, scope: !9345)
!9365 = !DILocation(line: 246, column: 47, scope: !9345)
!9366 = !DILocation(line: 246, column: 2, scope: !9345)
!9367 = !DILocation(line: 248, column: 43, scope: !9345)
!9368 = !DILocation(line: 248, column: 2, scope: !9345)
!9369 = !DILocation(line: 250, column: 40, scope: !9345)
!9370 = !DILocation(line: 250, column: 2, scope: !9345)
!9371 = !DILocation(line: 252, column: 11, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9345, file: !1293, line: 252, column: 6)
!9373 = !DILocation(line: 252, column: 6, scope: !9345)
!9374 = !DILocation(line: 253, column: 11, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9376, file: !1293, line: 253, column: 7)
!9376 = distinct !DILexicalBlock(scope: !9372, file: !1293, line: 252, column: 36)
!9377 = !DILocation(line: 253, column: 7, scope: !9376)
!9378 = !DILocation(line: 254, column: 4, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9375, file: !1293, line: 253, column: 16)
!9380 = !DILocation(line: 255, column: 3, scope: !9379)
!9381 = !DILocation(line: 256, column: 4, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9375, file: !1293, line: 255, column: 10)
!9383 = !DILocation(line: 260, column: 40, scope: !9345)
!9384 = !DILocation(line: 260, column: 2, scope: !9345)
!9385 = !DILocation(line: 265, column: 1, scope: !9345)
!9386 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1293, file: !1293, line: 137, type: !9193, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9387)
!9387 = !{!9388, !9389}
!9388 = !DILocalVariable(name: "pin", arg: 1, scope: !9386, file: !1293, line: 137, type: !103)
!9389 = !DILocalVariable(name: "pinval", scope: !9386, file: !1293, line: 139, type: !121)
!9390 = !DILocation(line: 0, scope: !9386)
!9391 = !DILocation(line: 149, column: 13, scope: !9386)
!9392 = !DILocation(line: 151, column: 2, scope: !9386)
!9393 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9268, file: !9268, line: 342, type: !9394, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9396)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{null, !1224, !121, !121}
!9396 = !{!9397, !9398, !9399}
!9397 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9393, file: !9268, line: 342, type: !1224)
!9398 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9393, file: !9268, line: 342, type: !121)
!9399 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9393, file: !9268, line: 342, type: !121)
!9400 = !DILocation(line: 0, scope: !9393)
!9401 = !DILocation(line: 344, column: 3, scope: !9393)
!9402 = !DILocation(line: 345, column: 1, scope: !9393)
!9403 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9268, file: !9268, line: 413, type: !9394, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9404)
!9404 = !{!9405, !9406, !9407}
!9405 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9403, file: !9268, line: 413, type: !1224)
!9406 = !DILocalVariable(name: "Pin", arg: 2, scope: !9403, file: !9268, line: 413, type: !121)
!9407 = !DILocalVariable(name: "Speed", arg: 3, scope: !9403, file: !9268, line: 413, type: !121)
!9408 = !DILocation(line: 0, scope: !9403)
!9409 = !DILocation(line: 415, column: 3, scope: !9403)
!9410 = !DILocation(line: 0, scope: !9213, inlinedAt: !9411)
!9411 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9412 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9411)
!9413 = !DILocation(line: 0, scope: !9221, inlinedAt: !9414)
!9414 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9415 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9414)
!9416 = !DILocation(line: 0, scope: !9213, inlinedAt: !9417)
!9417 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9418 = !DILocation(line: 0, scope: !9221, inlinedAt: !9419)
!9419 = distinct !DILocation(line: 415, column: 3, scope: !9403)
!9420 = !DILocation(line: 417, column: 1, scope: !9403)
!9421 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9268, file: !9268, line: 484, type: !9394, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9422)
!9422 = !{!9423, !9424, !9425}
!9423 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9421, file: !9268, line: 484, type: !1224)
!9424 = !DILocalVariable(name: "Pin", arg: 2, scope: !9421, file: !9268, line: 484, type: !121)
!9425 = !DILocalVariable(name: "Pull", arg: 3, scope: !9421, file: !9268, line: 484, type: !121)
!9426 = !DILocation(line: 0, scope: !9421)
!9427 = !DILocation(line: 486, column: 3, scope: !9421)
!9428 = !DILocation(line: 0, scope: !9213, inlinedAt: !9429)
!9429 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9430 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9429)
!9431 = !DILocation(line: 0, scope: !9221, inlinedAt: !9432)
!9432 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9433 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9432)
!9434 = !DILocation(line: 0, scope: !9213, inlinedAt: !9435)
!9435 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9436 = !DILocation(line: 0, scope: !9221, inlinedAt: !9437)
!9437 = distinct !DILocation(line: 486, column: 3, scope: !9421)
!9438 = !DILocation(line: 487, column: 1, scope: !9421)
!9439 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9268, file: !9268, line: 556, type: !9394, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9440)
!9440 = !{!9441, !9442, !9443}
!9441 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9439, file: !9268, line: 556, type: !1224)
!9442 = !DILocalVariable(name: "Pin", arg: 2, scope: !9439, file: !9268, line: 556, type: !121)
!9443 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9439, file: !9268, line: 556, type: !121)
!9444 = !DILocation(line: 0, scope: !9439)
!9445 = !DILocation(line: 558, column: 3, scope: !9439)
!9446 = !DILocation(line: 0, scope: !9213, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9448 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9447)
!9449 = !DILocation(line: 0, scope: !9221, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9451 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9450)
!9452 = !DILocation(line: 0, scope: !9213, inlinedAt: !9453)
!9453 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9454 = !DILocation(line: 0, scope: !9221, inlinedAt: !9455)
!9455 = distinct !DILocation(line: 558, column: 3, scope: !9439)
!9456 = !DILocation(line: 560, column: 1, scope: !9439)
!9457 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9268, file: !9268, line: 633, type: !9394, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9458)
!9458 = !{!9459, !9460, !9461}
!9459 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9457, file: !9268, line: 633, type: !1224)
!9460 = !DILocalVariable(name: "Pin", arg: 2, scope: !9457, file: !9268, line: 633, type: !121)
!9461 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9457, file: !9268, line: 633, type: !121)
!9462 = !DILocation(line: 0, scope: !9457)
!9463 = !DILocation(line: 635, column: 3, scope: !9457)
!9464 = !DILocation(line: 0, scope: !9213, inlinedAt: !9465)
!9465 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9466 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9465)
!9467 = !DILocation(line: 0, scope: !9221, inlinedAt: !9468)
!9468 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9469 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9468)
!9470 = !DILocation(line: 0, scope: !9213, inlinedAt: !9471)
!9471 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9472 = !DILocation(line: 0, scope: !9221, inlinedAt: !9473)
!9473 = distinct !DILocation(line: 635, column: 3, scope: !9457)
!9474 = !DILocation(line: 637, column: 1, scope: !9457)
!9475 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9268, file: !9268, line: 273, type: !9394, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479}
!9477 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9475, file: !9268, line: 273, type: !1224)
!9478 = !DILocalVariable(name: "Pin", arg: 2, scope: !9475, file: !9268, line: 273, type: !121)
!9479 = !DILocalVariable(name: "Mode", arg: 3, scope: !9475, file: !9268, line: 273, type: !121)
!9480 = !DILocation(line: 0, scope: !9475)
!9481 = !DILocation(line: 275, column: 3, scope: !9475)
!9482 = !DILocation(line: 0, scope: !9213, inlinedAt: !9483)
!9483 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9484 = !DILocation(line: 380, column: 4, scope: !9213, inlinedAt: !9483)
!9485 = !DILocation(line: 0, scope: !9221, inlinedAt: !9486)
!9486 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9487 = !DILocation(line: 414, column: 7, scope: !9221, inlinedAt: !9486)
!9488 = !DILocation(line: 0, scope: !9213, inlinedAt: !9489)
!9489 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9490 = !DILocation(line: 0, scope: !9221, inlinedAt: !9491)
!9491 = distinct !DILocation(line: 275, column: 3, scope: !9475)
!9492 = !DILocation(line: 276, column: 1, scope: !9475)
!9493 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1293, file: !1293, line: 698, type: !1306, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9494)
!9494 = !{!9495, !9496, !9497}
!9495 = !DILocalVariable(name: "dev", arg: 1, scope: !9493, file: !1293, line: 698, type: !1151)
!9496 = !DILocalVariable(name: "data", scope: !9493, file: !1293, line: 700, type: !8937)
!9497 = !DILocalVariable(name: "ret", scope: !9493, file: !1293, line: 701, type: !103)
!9498 = !DILocation(line: 0, scope: !9493)
!9499 = !DILocation(line: 700, column: 38, scope: !9493)
!9500 = !DILocation(line: 703, column: 8, scope: !9493)
!9501 = !DILocation(line: 703, column: 12, scope: !9493)
!9502 = !DILocation(line: 705, column: 7, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9493, file: !1293, line: 705, column: 6)
!9504 = !DILocation(line: 705, column: 6, scope: !9493)
!9505 = !DILocation(line: 722, column: 8, scope: !9493)
!9506 = !DILocation(line: 723, column: 10, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9493, file: !1293, line: 723, column: 6)
!9508 = !DILocation(line: 723, column: 6, scope: !9493)
!9509 = !DILocation(line: 731, column: 1, scope: !9493)
!9510 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !9511, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9513)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{!157, !1151}
!9513 = !{!9514}
!9514 = !DILocalVariable(name: "dev", arg: 1, scope: !9510, file: !8161, line: 47, type: !1151)
!9515 = !DILocation(line: 0, scope: !9510)
!9516 = !DILocation(line: 55, column: 2, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9510, file: !8161, line: 55, column: 2)
!9518 = !{i64 2154942816}
!9519 = !DILocation(line: 56, column: 9, scope: !9510)
!9520 = !DILocation(line: 56, column: 2, scope: !9510)
!9521 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1293, file: !1293, line: 270, type: !9522, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9524)
!9522 = !DISubroutineType(types: !9523)
!9523 = !{!103, !1151, !157}
!9524 = !{!9525, !9526, !9527, !9528, !9529}
!9525 = !DILocalVariable(name: "dev", arg: 1, scope: !9521, file: !1293, line: 270, type: !1151)
!9526 = !DILocalVariable(name: "on", arg: 2, scope: !9521, file: !1293, line: 270, type: !157)
!9527 = !DILocalVariable(name: "cfg", scope: !9521, file: !1293, line: 272, type: !8870)
!9528 = !DILocalVariable(name: "ret", scope: !9521, file: !1293, line: 273, type: !103)
!9529 = !DILocalVariable(name: "clk", scope: !9521, file: !1293, line: 278, type: !9160)
!9530 = !DILocation(line: 0, scope: !9521)
!9531 = !DILocation(line: 272, column: 45, scope: !9521)
!9532 = !DILocation(line: 282, column: 38, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !1293, line: 280, column: 10)
!9534 = distinct !DILexicalBlock(scope: !9521, file: !1293, line: 280, column: 6)
!9535 = !DILocation(line: 282, column: 6, scope: !9533)
!9536 = !DILocation(line: 281, column: 9, scope: !9533)
!9537 = !DILocation(line: 293, column: 1, scope: !9521)
!9538 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9511, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9539)
!9539 = !{!9540}
!9540 = !DILocalVariable(name: "dev", arg: 1, scope: !9538, file: !141, line: 730, type: !1151)
!9541 = !DILocation(line: 0, scope: !9538)
!9542 = !DILocation(line: 732, column: 9, scope: !9538)
!9543 = !DILocation(line: 732, column: 2, scope: !9538)
!9544 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1293, file: !1293, line: 496, type: !9545, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9547)
!9545 = !DISubroutineType(types: !9546)
!9546 = !{!103, !1151, !103, !103, !103}
!9547 = !{!9548, !9549, !9550, !9551, !9552, !9553}
!9548 = !DILocalVariable(name: "dev", arg: 1, scope: !9544, file: !1293, line: 496, type: !1151)
!9549 = !DILocalVariable(name: "pin", arg: 2, scope: !9544, file: !1293, line: 496, type: !103)
!9550 = !DILocalVariable(name: "conf", arg: 3, scope: !9544, file: !1293, line: 496, type: !103)
!9551 = !DILocalVariable(name: "func", arg: 4, scope: !9544, file: !1293, line: 496, type: !103)
!9552 = !DILocalVariable(name: "ret", scope: !9544, file: !1293, line: 498, type: !103)
!9553 = !DILocalVariable(name: "gpio_out", scope: !9554, file: !1293, line: 508, type: !121)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !1293, line: 507, column: 27)
!9555 = distinct !DILexicalBlock(scope: !9544, file: !1293, line: 507, column: 6)
!9556 = !DILocation(line: 0, scope: !9544)
!9557 = !DILocation(line: 505, column: 2, scope: !9544)
!9558 = !DILocation(line: 507, column: 11, scope: !9555)
!9559 = !DILocation(line: 507, column: 6, scope: !9544)
!9560 = !DILocation(line: 508, column: 28, scope: !9554)
!9561 = !DILocation(line: 0, scope: !9554)
!9562 = !DILocation(line: 510, column: 16, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9554, file: !1293, line: 510, column: 7)
!9564 = !DILocation(line: 0, scope: !9563)
!9565 = !DILocation(line: 510, column: 7, scope: !9554)
!9566 = !DILocation(line: 511, column: 4, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9563, file: !1293, line: 510, column: 32)
!9568 = !DILocation(line: 512, column: 3, scope: !9567)
!9569 = !DILocation(line: 513, column: 4, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1293, line: 512, column: 39)
!9571 = distinct !DILexicalBlock(scope: !9563, file: !1293, line: 512, column: 14)
!9572 = !DILocation(line: 514, column: 3, scope: !9570)
!9573 = !DILocation(line: 518, column: 1, scope: !9544)
!9574 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1601, file: !1601, line: 526, type: !1472, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9575)
!9575 = !{!9576, !9577, !9578}
!9576 = !DILocalVariable(name: "dev", arg: 1, scope: !9574, file: !1601, line: 526, type: !1474)
!9577 = !DILocalVariable(name: "c", arg: 2, scope: !9574, file: !1601, line: 526, type: !230)
!9578 = !DILocalVariable(name: "config", scope: !9574, file: !1601, line: 528, type: !9579)
!9579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 32)
!9580 = !DILocation(line: 0, scope: !9574)
!9581 = !DILocation(line: 528, column: 48, scope: !9574)
!9582 = !DILocation(line: 531, column: 40, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9574, file: !1601, line: 531, column: 6)
!9584 = !DILocation(line: 531, column: 6, scope: !9583)
!9585 = !DILocation(line: 531, column: 6, scope: !9574)
!9586 = !DILocation(line: 532, column: 34, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9583, file: !1601, line: 531, column: 48)
!9588 = !DILocation(line: 532, column: 3, scope: !9587)
!9589 = !DILocation(line: 533, column: 2, scope: !9587)
!9590 = !DILocation(line: 539, column: 42, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9574, file: !1601, line: 539, column: 6)
!9592 = !DILocation(line: 539, column: 7, scope: !9591)
!9593 = !DILocation(line: 539, column: 6, scope: !9574)
!9594 = !DILocation(line: 543, column: 52, scope: !9574)
!9595 = !DILocation(line: 543, column: 22, scope: !9574)
!9596 = !DILocation(line: 543, column: 5, scope: !9574)
!9597 = !DILocation(line: 545, column: 2, scope: !9574)
!9598 = !DILocation(line: 546, column: 1, scope: !9574)
!9599 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1601, file: !1601, line: 548, type: !1491, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9600)
!9600 = !{!9601, !9602, !9603, !9604}
!9601 = !DILocalVariable(name: "dev", arg: 1, scope: !9599, file: !1601, line: 548, type: !1474)
!9602 = !DILocalVariable(name: "c", arg: 2, scope: !9599, file: !1601, line: 549, type: !155)
!9603 = !DILocalVariable(name: "config", scope: !9599, file: !1601, line: 551, type: !9579)
!9604 = !DILocalVariable(name: "key", scope: !9599, file: !1601, line: 555, type: !32)
!9605 = !DILocation(line: 0, scope: !9599)
!9606 = !DILocation(line: 551, column: 48, scope: !9599)
!9607 = !DILocation(line: 562, column: 2, scope: !9599)
!9608 = !DILocation(line: 563, column: 41, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !1601, line: 563, column: 7)
!9610 = distinct !DILexicalBlock(scope: !9599, file: !1601, line: 562, column: 12)
!9611 = !DILocation(line: 563, column: 7, scope: !9609)
!9612 = !DILocation(line: 563, column: 7, scope: !9610)
!9613 = !DILocation(line: 55, column: 2, scope: !9614, inlinedAt: !9618)
!9614 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9615)
!9615 = !{!9616, !9617}
!9616 = !DILocalVariable(name: "key", scope: !9614, file: !5739, line: 44, type: !32)
!9617 = !DILocalVariable(name: "tmp", scope: !9614, file: !5739, line: 53, type: !32)
!9618 = distinct !DILocation(line: 564, column: 10, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9609, file: !1601, line: 563, column: 49)
!9620 = !{i64 2288346}
!9621 = !DILocation(line: 0, scope: !9614, inlinedAt: !9618)
!9622 = !DILocation(line: 565, column: 42, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9619, file: !1601, line: 565, column: 8)
!9624 = !DILocation(line: 565, column: 8, scope: !9623)
!9625 = !DILocation(line: 565, column: 8, scope: !9619)
!9626 = !DILocalVariable(name: "key", arg: 1, scope: !9627, file: !5739, line: 84, type: !32)
!9627 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9628)
!9628 = !{!9626}
!9629 = !DILocation(line: 0, scope: !9627, inlinedAt: !9630)
!9630 = distinct !DILocation(line: 568, column: 4, scope: !9619)
!9631 = !DILocation(line: 95, column: 2, scope: !9627, inlinedAt: !9630)
!9632 = !{i64 2289163}
!9633 = !DILocation(line: 569, column: 3, scope: !9619)
!9634 = distinct !{!9634, !9607, !9635}
!9635 = !DILocation(line: 570, column: 2, scope: !9599)
!9636 = !DILocation(line: 592, column: 33, scope: !9599)
!9637 = !DILocation(line: 592, column: 2, scope: !9599)
!9638 = !DILocation(line: 0, scope: !9627, inlinedAt: !9639)
!9639 = distinct !DILocation(line: 593, column: 2, scope: !9599)
!9640 = !DILocation(line: 95, column: 2, scope: !9627, inlinedAt: !9639)
!9641 = !DILocation(line: 594, column: 1, scope: !9599)
!9642 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1601, file: !1601, line: 596, type: !1495, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9643)
!9643 = !{!9644, !9645, !9646}
!9644 = !DILocalVariable(name: "dev", arg: 1, scope: !9642, file: !1601, line: 596, type: !1474)
!9645 = !DILocalVariable(name: "config", scope: !9642, file: !1601, line: 598, type: !9579)
!9646 = !DILocalVariable(name: "err", scope: !9642, file: !1601, line: 599, type: !121)
!9647 = !DILocation(line: 0, scope: !9642)
!9648 = !DILocation(line: 598, column: 48, scope: !9642)
!9649 = !DILocation(line: 606, column: 40, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 606, column: 6)
!9651 = !DILocation(line: 606, column: 6, scope: !9650)
!9652 = !DILocation(line: 606, column: 6, scope: !9642)
!9653 = !DILocation(line: 610, column: 39, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 610, column: 6)
!9655 = !DILocation(line: 610, column: 6, scope: !9654)
!9656 = !DILocation(line: 610, column: 6, scope: !9642)
!9657 = !DILocation(line: 614, column: 39, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 614, column: 6)
!9659 = !DILocation(line: 614, column: 6, scope: !9658)
!9660 = !DILocation(line: 614, column: 6, scope: !9642)
!9661 = !DILocation(line: 619, column: 40, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 619, column: 6)
!9663 = !DILocation(line: 619, column: 6, scope: !9662)
!9664 = !DILocation(line: 619, column: 6, scope: !9642)
!9665 = !DILocation(line: 623, column: 10, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 623, column: 6)
!9667 = !DILocation(line: 623, column: 6, scope: !9642)
!9668 = !DILocation(line: 624, column: 34, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9666, file: !1601, line: 623, column: 24)
!9670 = !DILocation(line: 624, column: 3, scope: !9669)
!9671 = !DILocation(line: 625, column: 2, scope: !9669)
!9672 = !DILocation(line: 632, column: 10, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 632, column: 6)
!9674 = !DILocation(line: 632, column: 6, scope: !9642)
!9675 = !DILocation(line: 633, column: 34, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9673, file: !1601, line: 632, column: 32)
!9677 = !DILocation(line: 633, column: 3, scope: !9676)
!9678 = !DILocation(line: 634, column: 2, scope: !9676)
!9679 = !DILocation(line: 636, column: 10, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 636, column: 6)
!9681 = !DILocation(line: 636, column: 6, scope: !9642)
!9682 = !DILocation(line: 637, column: 33, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9680, file: !1601, line: 636, column: 31)
!9684 = !DILocation(line: 637, column: 3, scope: !9683)
!9685 = !DILocation(line: 638, column: 2, scope: !9683)
!9686 = !DILocation(line: 640, column: 10, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9642, file: !1601, line: 640, column: 6)
!9688 = !DILocation(line: 640, column: 6, scope: !9642)
!9689 = !DILocation(line: 641, column: 33, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9687, file: !1601, line: 640, column: 32)
!9691 = !DILocation(line: 641, column: 3, scope: !9690)
!9692 = !DILocation(line: 642, column: 2, scope: !9690)
!9693 = !DILocation(line: 646, column: 32, scope: !9642)
!9694 = !DILocation(line: 646, column: 2, scope: !9642)
!9695 = !DILocation(line: 648, column: 2, scope: !9642)
!9696 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1601, file: !1601, line: 419, type: !1499, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9697)
!9697 = !{!9698, !9699, !9700, !9701, !9703, !9704, !9705, !9706}
!9698 = !DILocalVariable(name: "dev", arg: 1, scope: !9696, file: !1601, line: 419, type: !1474)
!9699 = !DILocalVariable(name: "cfg", arg: 2, scope: !9696, file: !1601, line: 420, type: !1501)
!9700 = !DILocalVariable(name: "config", scope: !9696, file: !1601, line: 422, type: !9579)
!9701 = !DILocalVariable(name: "data", scope: !9696, file: !1601, line: 423, type: !9702)
!9702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!9703 = !DILocalVariable(name: "parity", scope: !9696, file: !1601, line: 424, type: !6222)
!9704 = !DILocalVariable(name: "stopbits", scope: !9696, file: !1601, line: 425, type: !6222)
!9705 = !DILocalVariable(name: "databits", scope: !9696, file: !1601, line: 426, type: !6222)
!9706 = !DILocalVariable(name: "flowctrl", scope: !9696, file: !1601, line: 428, type: !6222)
!9707 = !DILocation(line: 0, scope: !9696)
!9708 = !DILocation(line: 422, column: 48, scope: !9696)
!9709 = !DILocation(line: 423, column: 38, scope: !9696)
!9710 = !DILocation(line: 424, column: 56, scope: !9696)
!9711 = !DILocation(line: 424, column: 51, scope: !9696)
!9712 = !DILocation(line: 424, column: 26, scope: !9696)
!9713 = !DILocation(line: 425, column: 60, scope: !9696)
!9714 = !DILocation(line: 425, column: 55, scope: !9696)
!9715 = !DILocation(line: 425, column: 28, scope: !9696)
!9716 = !DILocation(line: 426, column: 60, scope: !9696)
!9717 = !DILocation(line: 426, column: 55, scope: !9696)
!9718 = !DILocation(line: 426, column: 28, scope: !9696)
!9719 = !DILocation(line: 428, column: 58, scope: !9696)
!9720 = !DILocation(line: 428, column: 53, scope: !9696)
!9721 = !DILocation(line: 428, column: 28, scope: !9696)
!9722 = !DILocation(line: 431, column: 44, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 431, column: 6)
!9724 = !DILocation(line: 438, column: 22, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 437, column: 6)
!9726 = !DILocation(line: 437, column: 6, scope: !9696)
!9727 = !DILocation(line: 448, column: 6, scope: !9696)
!9728 = !DILocation(line: 465, column: 47, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 465, column: 6)
!9730 = !DILocation(line: 475, column: 21, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 475, column: 6)
!9732 = !DILocation(line: 475, column: 6, scope: !9696)
!9733 = !DILocation(line: 476, column: 8, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !1601, line: 476, column: 7)
!9735 = distinct !DILexicalBlock(scope: !9731, file: !1601, line: 475, column: 49)
!9736 = !DILocation(line: 477, column: 34, scope: !9734)
!9737 = !DILocation(line: 476, column: 7, scope: !9735)
!9738 = !DILocation(line: 482, column: 27, scope: !9696)
!9739 = !DILocation(line: 482, column: 2, scope: !9696)
!9740 = !DILocation(line: 484, column: 16, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 484, column: 6)
!9742 = !DILocation(line: 484, column: 13, scope: !9741)
!9743 = !DILocation(line: 484, column: 6, scope: !9696)
!9744 = !DILocation(line: 485, column: 3, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9741, file: !1601, line: 484, column: 44)
!9746 = !DILocation(line: 486, column: 2, scope: !9745)
!9747 = !DILocation(line: 488, column: 18, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 488, column: 6)
!9749 = !DILocation(line: 488, column: 15, scope: !9748)
!9750 = !DILocation(line: 488, column: 6, scope: !9696)
!9751 = !DILocation(line: 489, column: 3, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9748, file: !1601, line: 488, column: 48)
!9753 = !DILocation(line: 490, column: 2, scope: !9752)
!9754 = !DILocation(line: 492, column: 18, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 492, column: 6)
!9756 = !DILocation(line: 492, column: 15, scope: !9755)
!9757 = !DILocation(line: 492, column: 6, scope: !9696)
!9758 = !DILocation(line: 493, column: 3, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9755, file: !1601, line: 492, column: 48)
!9760 = !DILocation(line: 494, column: 2, scope: !9759)
!9761 = !DILocation(line: 496, column: 18, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 496, column: 6)
!9763 = !DILocation(line: 496, column: 15, scope: !9762)
!9764 = !DILocation(line: 496, column: 6, scope: !9696)
!9765 = !DILocation(line: 497, column: 3, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9762, file: !1601, line: 496, column: 46)
!9767 = !DILocation(line: 498, column: 2, scope: !9766)
!9768 = !DILocation(line: 500, column: 11, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9696, file: !1601, line: 500, column: 6)
!9770 = !DILocation(line: 500, column: 29, scope: !9769)
!9771 = !DILocation(line: 500, column: 20, scope: !9769)
!9772 = !DILocation(line: 500, column: 6, scope: !9696)
!9773 = !DILocation(line: 501, column: 3, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9769, file: !1601, line: 500, column: 40)
!9775 = !DILocation(line: 502, column: 26, scope: !9774)
!9776 = !DILocation(line: 502, column: 19, scope: !9774)
!9777 = !DILocation(line: 503, column: 2, scope: !9774)
!9778 = !DILocation(line: 505, column: 26, scope: !9696)
!9779 = !DILocation(line: 505, column: 2, scope: !9696)
!9780 = !DILocation(line: 506, column: 2, scope: !9696)
!9781 = !DILocation(line: 507, column: 1, scope: !9696)
!9782 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1601, file: !1601, line: 509, type: !1512, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9783)
!9783 = !{!9784, !9785, !9786}
!9784 = !DILocalVariable(name: "dev", arg: 1, scope: !9782, file: !1601, line: 509, type: !1474)
!9785 = !DILocalVariable(name: "cfg", arg: 2, scope: !9782, file: !1601, line: 510, type: !1514)
!9786 = !DILocalVariable(name: "data", scope: !9782, file: !1601, line: 512, type: !9702)
!9787 = !DILocation(line: 0, scope: !9782)
!9788 = !DILocation(line: 512, column: 38, scope: !9782)
!9789 = !DILocation(line: 514, column: 24, scope: !9782)
!9790 = !DILocation(line: 514, column: 7, scope: !9782)
!9791 = !DILocation(line: 514, column: 16, scope: !9782)
!9792 = !DILocation(line: 515, column: 41, scope: !9782)
!9793 = !{i32 0, i32 1537}
!9794 = !DILocation(line: 515, column: 16, scope: !9782)
!9795 = !DILocation(line: 515, column: 7, scope: !9782)
!9796 = !DILocation(line: 515, column: 14, scope: !9782)
!9797 = !DILocation(line: 517, column: 3, scope: !9782)
!9798 = !{i32 0, i32 12289}
!9799 = !DILocation(line: 516, column: 19, scope: !9782)
!9800 = !DILocation(line: 516, column: 7, scope: !9782)
!9801 = !DILocation(line: 516, column: 17, scope: !9782)
!9802 = !DILocation(line: 519, column: 3, scope: !9782)
!9803 = !DILocation(line: 519, column: 33, scope: !9782)
!9804 = !DILocation(line: 518, column: 19, scope: !9782)
!9805 = !DILocation(line: 518, column: 7, scope: !9782)
!9806 = !DILocation(line: 518, column: 17, scope: !9782)
!9807 = !DILocation(line: 521, column: 3, scope: !9782)
!9808 = !{i32 0, i32 769}
!9809 = !DILocation(line: 520, column: 19, scope: !9782)
!9810 = !DILocation(line: 520, column: 7, scope: !9782)
!9811 = !DILocation(line: 520, column: 17, scope: !9782)
!9812 = !DILocation(line: 522, column: 2, scope: !9782)
!9813 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1601, file: !1601, line: 661, type: !1517, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9814)
!9814 = !{!9815, !9816, !9817, !9818, !9819, !9820}
!9815 = !DILocalVariable(name: "dev", arg: 1, scope: !9813, file: !1601, line: 661, type: !1474)
!9816 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9813, file: !1601, line: 662, type: !261)
!9817 = !DILocalVariable(name: "size", arg: 3, scope: !9813, file: !1601, line: 663, type: !103)
!9818 = !DILocalVariable(name: "config", scope: !9813, file: !1601, line: 665, type: !9579)
!9819 = !DILocalVariable(name: "num_tx", scope: !9813, file: !1601, line: 666, type: !154)
!9820 = !DILocalVariable(name: "key", scope: !9813, file: !1601, line: 667, type: !32)
!9821 = !DILocation(line: 0, scope: !9813)
!9822 = !DILocation(line: 665, column: 48, scope: !9813)
!9823 = !DILocation(line: 669, column: 41, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9813, file: !1601, line: 669, column: 6)
!9825 = !DILocation(line: 669, column: 7, scope: !9824)
!9826 = !DILocation(line: 669, column: 6, scope: !9813)
!9827 = !DILocation(line: 55, column: 2, scope: !9614, inlinedAt: !9828)
!9828 = distinct !DILocation(line: 674, column: 8, scope: !9813)
!9829 = !DILocation(line: 0, scope: !9614, inlinedAt: !9828)
!9830 = !DILocation(line: 676, column: 24, scope: !9813)
!9831 = !DILocation(line: 676, column: 29, scope: !9813)
!9832 = !DILocation(line: 677, column: 43, scope: !9813)
!9833 = !DILocation(line: 677, column: 9, scope: !9813)
!9834 = !DILocation(line: 676, column: 2, scope: !9813)
!9835 = !DILocation(line: 681, column: 34, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9813, file: !1601, line: 677, column: 51)
!9837 = !DILocation(line: 681, column: 55, scope: !9836)
!9838 = !DILocation(line: 681, column: 41, scope: !9836)
!9839 = !DILocation(line: 681, column: 3, scope: !9836)
!9840 = !DILocation(line: 676, column: 17, scope: !9813)
!9841 = distinct !{!9841, !9834, !9842}
!9842 = !DILocation(line: 682, column: 2, scope: !9813)
!9843 = !DILocation(line: 0, scope: !9627, inlinedAt: !9844)
!9844 = distinct !DILocation(line: 684, column: 2, scope: !9813)
!9845 = !DILocation(line: 95, column: 2, scope: !9627, inlinedAt: !9844)
!9846 = !DILocation(line: 686, column: 2, scope: !9813)
!9847 = !DILocation(line: 687, column: 1, scope: !9813)
!9848 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1601, file: !1601, line: 689, type: !1521, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852, !9853, !9854}
!9850 = !DILocalVariable(name: "dev", arg: 1, scope: !9848, file: !1601, line: 689, type: !1474)
!9851 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9848, file: !1601, line: 689, type: !267)
!9852 = !DILocalVariable(name: "size", arg: 3, scope: !9848, file: !1601, line: 690, type: !268)
!9853 = !DILocalVariable(name: "config", scope: !9848, file: !1601, line: 692, type: !9579)
!9854 = !DILocalVariable(name: "num_rx", scope: !9848, file: !1601, line: 693, type: !154)
!9855 = !DILocation(line: 0, scope: !9848)
!9856 = !DILocation(line: 692, column: 48, scope: !9848)
!9857 = !DILocation(line: 696, column: 44, scope: !9848)
!9858 = !DILocation(line: 695, column: 24, scope: !9848)
!9859 = !DILocation(line: 695, column: 29, scope: !9848)
!9860 = !DILocation(line: 696, column: 9, scope: !9848)
!9861 = !DILocation(line: 695, column: 2, scope: !9848)
!9862 = !DILocation(line: 700, column: 53, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9848, file: !1601, line: 696, column: 52)
!9864 = !DILocation(line: 700, column: 23, scope: !9863)
!9865 = !DILocation(line: 700, column: 17, scope: !9863)
!9866 = !DILocation(line: 700, column: 3, scope: !9863)
!9867 = !DILocation(line: 700, column: 21, scope: !9863)
!9868 = !DILocation(line: 703, column: 41, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9863, file: !1601, line: 703, column: 7)
!9870 = !DILocation(line: 703, column: 7, scope: !9869)
!9871 = !DILocation(line: 703, column: 7, scope: !9863)
!9872 = !DILocation(line: 704, column: 35, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9869, file: !1601, line: 703, column: 49)
!9874 = !DILocation(line: 704, column: 4, scope: !9873)
!9875 = !DILocation(line: 709, column: 3, scope: !9873)
!9876 = !DILocation(line: 695, column: 17, scope: !9848)
!9877 = distinct !{!9877, !9861, !9878}
!9878 = !DILocation(line: 710, column: 2, scope: !9848)
!9879 = !DILocation(line: 712, column: 2, scope: !9848)
!9880 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1601, file: !1601, line: 715, type: !1525, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9881)
!9881 = !{!9882, !9883}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1601, line: 715, type: !1474)
!9883 = !DILocalVariable(name: "config", scope: !9880, file: !1601, line: 717, type: !9579)
!9884 = !DILocation(line: 0, scope: !9880)
!9885 = !DILocation(line: 717, column: 48, scope: !9880)
!9886 = !DILocation(line: 729, column: 31, scope: !9880)
!9887 = !DILocation(line: 729, column: 2, scope: !9880)
!9888 = !DILocation(line: 734, column: 1, scope: !9880)
!9889 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1601, file: !1601, line: 736, type: !1525, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9890)
!9890 = !{!9891, !9892}
!9891 = !DILocalVariable(name: "dev", arg: 1, scope: !9889, file: !1601, line: 736, type: !1474)
!9892 = !DILocalVariable(name: "config", scope: !9889, file: !1601, line: 738, type: !9579)
!9893 = !DILocation(line: 0, scope: !9889)
!9894 = !DILocation(line: 738, column: 48, scope: !9889)
!9895 = !DILocation(line: 746, column: 32, scope: !9889)
!9896 = !DILocation(line: 746, column: 2, scope: !9889)
!9897 = !DILocation(line: 756, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1601, file: !1601, line: 758, type: !1495, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "dev", arg: 1, scope: !9898, file: !1601, line: 758, type: !1474)
!9901 = !DILocalVariable(name: "config", scope: !9898, file: !1601, line: 760, type: !9579)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 760, column: 48, scope: !9898)
!9904 = !DILocation(line: 762, column: 43, scope: !9898)
!9905 = !DILocation(line: 762, column: 9, scope: !9898)
!9906 = !DILocation(line: 762, column: 50, scope: !9898)
!9907 = !DILocation(line: 763, column: 35, scope: !9898)
!9908 = !DILocation(line: 763, column: 3, scope: !9898)
!9909 = !DILocation(line: 762, column: 2, scope: !9898)
!9910 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1601, file: !1601, line: 773, type: !1525, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9911)
!9911 = !{!9912, !9913}
!9912 = !DILocalVariable(name: "dev", arg: 1, scope: !9910, file: !1601, line: 773, type: !1474)
!9913 = !DILocalVariable(name: "config", scope: !9910, file: !1601, line: 775, type: !9579)
!9914 = !DILocation(line: 0, scope: !9910)
!9915 = !DILocation(line: 775, column: 48, scope: !9910)
!9916 = !DILocation(line: 777, column: 33, scope: !9910)
!9917 = !DILocation(line: 777, column: 2, scope: !9910)
!9918 = !DILocation(line: 778, column: 1, scope: !9910)
!9919 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1601, file: !1601, line: 780, type: !1525, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9920)
!9920 = !{!9921, !9922}
!9921 = !DILocalVariable(name: "dev", arg: 1, scope: !9919, file: !1601, line: 780, type: !1474)
!9922 = !DILocalVariable(name: "config", scope: !9919, file: !1601, line: 782, type: !9579)
!9923 = !DILocation(line: 0, scope: !9919)
!9924 = !DILocation(line: 782, column: 48, scope: !9919)
!9925 = !DILocation(line: 784, column: 34, scope: !9919)
!9926 = !DILocation(line: 784, column: 2, scope: !9919)
!9927 = !DILocation(line: 785, column: 1, scope: !9919)
!9928 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1601, file: !1601, line: 766, type: !1495, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9929)
!9929 = !{!9930, !9931}
!9930 = !DILocalVariable(name: "dev", arg: 1, scope: !9928, file: !1601, line: 766, type: !1474)
!9931 = !DILocalVariable(name: "config", scope: !9928, file: !1601, line: 768, type: !9579)
!9932 = !DILocation(line: 0, scope: !9928)
!9933 = !DILocation(line: 768, column: 48, scope: !9928)
!9934 = !DILocation(line: 770, column: 42, scope: !9928)
!9935 = !DILocation(line: 770, column: 9, scope: !9928)
!9936 = !DILocation(line: 770, column: 2, scope: !9928)
!9937 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1601, file: !1601, line: 787, type: !1495, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9938)
!9938 = !{!9939, !9940}
!9939 = !DILocalVariable(name: "dev", arg: 1, scope: !9937, file: !1601, line: 787, type: !1474)
!9940 = !DILocalVariable(name: "config", scope: !9937, file: !1601, line: 789, type: !9579)
!9941 = !DILocation(line: 0, scope: !9937)
!9942 = !DILocation(line: 789, column: 48, scope: !9937)
!9943 = !DILocation(line: 794, column: 44, scope: !9937)
!9944 = !DILocation(line: 794, column: 9, scope: !9937)
!9945 = !DILocation(line: 794, column: 2, scope: !9937)
!9946 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1601, file: !1601, line: 797, type: !1525, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9947)
!9947 = !{!9948, !9949}
!9948 = !DILocalVariable(name: "dev", arg: 1, scope: !9946, file: !1601, line: 797, type: !1474)
!9949 = !DILocalVariable(name: "config", scope: !9946, file: !1601, line: 799, type: !9579)
!9950 = !DILocation(line: 0, scope: !9946)
!9951 = !DILocation(line: 799, column: 48, scope: !9946)
!9952 = !DILocation(line: 802, column: 34, scope: !9946)
!9953 = !DILocation(line: 802, column: 2, scope: !9946)
!9954 = !DILocation(line: 805, column: 6, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9946, file: !1601, line: 805, column: 6)
!9956 = !DILocation(line: 806, column: 3, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9955, file: !1601, line: 805, column: 43)
!9958 = !DILocation(line: 810, column: 31, scope: !9946)
!9959 = !DILocation(line: 807, column: 2, scope: !9957)
!9960 = !DILocation(line: 810, column: 2, scope: !9946)
!9961 = !DILocation(line: 811, column: 1, scope: !9946)
!9962 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1601, file: !1601, line: 813, type: !1525, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9963)
!9963 = !{!9964, !9965}
!9964 = !DILocalVariable(name: "dev", arg: 1, scope: !9962, file: !1601, line: 813, type: !1474)
!9965 = !DILocalVariable(name: "config", scope: !9962, file: !1601, line: 815, type: !9579)
!9966 = !DILocation(line: 0, scope: !9962)
!9967 = !DILocation(line: 815, column: 48, scope: !9962)
!9968 = !DILocation(line: 818, column: 35, scope: !9962)
!9969 = !DILocation(line: 818, column: 2, scope: !9962)
!9970 = !DILocation(line: 821, column: 6, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9962, file: !1601, line: 821, column: 6)
!9972 = !DILocation(line: 822, column: 3, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9971, file: !1601, line: 821, column: 43)
!9974 = !DILocation(line: 826, column: 32, scope: !9962)
!9975 = !DILocation(line: 823, column: 2, scope: !9973)
!9976 = !DILocation(line: 826, column: 2, scope: !9962)
!9977 = !DILocation(line: 827, column: 1, scope: !9962)
!9978 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1601, file: !1601, line: 829, type: !1495, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9979)
!9979 = !{!9980, !9981}
!9980 = !DILocalVariable(name: "dev", arg: 1, scope: !9978, file: !1601, line: 829, type: !1474)
!9981 = !DILocalVariable(name: "config", scope: !9978, file: !1601, line: 831, type: !9579)
!9982 = !DILocation(line: 0, scope: !9978)
!9983 = !DILocation(line: 831, column: 48, scope: !9978)
!9984 = !DILocation(line: 833, column: 46, scope: !9978)
!9985 = !DILocation(line: 833, column: 11, scope: !9978)
!9986 = !DILocation(line: 833, column: 53, scope: !9978)
!9987 = !DILocation(line: 834, column: 38, scope: !9978)
!9988 = !DILocation(line: 834, column: 4, scope: !9978)
!9989 = !DILocation(line: 834, column: 46, scope: !9978)
!9990 = !DILocation(line: 835, column: 37, scope: !9978)
!9991 = !DILocation(line: 835, column: 4, scope: !9978)
!9992 = !DILocation(line: 835, column: 44, scope: !9978)
!9993 = !DILocation(line: 836, column: 36, scope: !9978)
!9994 = !DILocation(line: 836, column: 4, scope: !9978)
!9995 = !DILocation(line: 833, column: 2, scope: !9978)
!9996 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1601, file: !1601, line: 839, type: !1495, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9997)
!9997 = !{!9998}
!9998 = !DILocalVariable(name: "dev", arg: 1, scope: !9996, file: !1601, line: 839, type: !1474)
!9999 = !DILocation(line: 0, scope: !9996)
!10000 = !DILocation(line: 841, column: 2, scope: !9996)
!10001 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1601, file: !1601, line: 844, type: !1539, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10002)
!10002 = !{!10003, !10004, !10005, !10006}
!10003 = !DILocalVariable(name: "dev", arg: 1, scope: !10001, file: !1601, line: 844, type: !1474)
!10004 = !DILocalVariable(name: "cb", arg: 2, scope: !10001, file: !1601, line: 845, type: !1541)
!10005 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10001, file: !1601, line: 846, type: !102)
!10006 = !DILocalVariable(name: "data", scope: !10001, file: !1601, line: 848, type: !9702)
!10007 = !DILocation(line: 0, scope: !10001)
!10008 = !DILocation(line: 848, column: 38, scope: !10001)
!10009 = !DILocation(line: 850, column: 8, scope: !10001)
!10010 = !DILocation(line: 850, column: 16, scope: !10001)
!10011 = !DILocation(line: 851, column: 8, scope: !10001)
!10012 = !DILocation(line: 851, column: 18, scope: !10001)
!10013 = !DILocation(line: 852, column: 1, scope: !10001)
!10014 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10015, file: !10015, line: 1792, type: !10016, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10018)
!10015 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10016 = !DISubroutineType(types: !10017)
!10017 = !{!121, !1545}
!10018 = !{!10019}
!10019 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10014, file: !10015, line: 1792, type: !1545)
!10020 = !DILocation(line: 0, scope: !10014)
!10021 = !DILocation(line: 1794, column: 11, scope: !10014)
!10022 = !DILocation(line: 1794, column: 47, scope: !10014)
!10023 = !DILocation(line: 1794, column: 3, scope: !10014)
!10024 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10015, file: !10015, line: 2227, type: !10016, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10025)
!10025 = !{!10026}
!10026 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10024, file: !10015, line: 2227, type: !1545)
!10027 = !DILocation(line: 0, scope: !10024)
!10028 = !DILocation(line: 2229, column: 11, scope: !10024)
!10029 = !DILocation(line: 2229, column: 51, scope: !10024)
!10030 = !DILocation(line: 2229, column: 3, scope: !10024)
!10031 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10015, file: !10015, line: 1803, type: !10016, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10032)
!10032 = !{!10033}
!10033 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10031, file: !10015, line: 1803, type: !1545)
!10034 = !DILocation(line: 0, scope: !10031)
!10035 = !DILocation(line: 1805, column: 11, scope: !10031)
!10036 = !DILocation(line: 1805, column: 45, scope: !10031)
!10037 = !DILocation(line: 1805, column: 3, scope: !10031)
!10038 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10015, file: !10015, line: 2238, type: !10016, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10039)
!10039 = !{!10040}
!10040 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10038, file: !10015, line: 2238, type: !1545)
!10041 = !DILocation(line: 0, scope: !10038)
!10042 = !DILocation(line: 2240, column: 11, scope: !10038)
!10043 = !DILocation(line: 2240, column: 49, scope: !10038)
!10044 = !DILocation(line: 2240, column: 3, scope: !10038)
!10045 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10015, file: !10015, line: 2192, type: !10046, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10048)
!10046 = !DISubroutineType(types: !10047)
!10047 = !{null, !1545}
!10048 = !{!10049, !10050}
!10049 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10045, file: !10015, line: 2192, type: !1545)
!10050 = !DILocalVariable(name: "val", scope: !10051, file: !10015, line: 2194, type: !121)
!10051 = distinct !DILexicalBlock(scope: !10045, file: !10015, line: 2194, column: 3)
!10052 = !DILocation(line: 0, scope: !10045)
!10053 = !DILocation(line: 2194, column: 3, scope: !10051)
!10054 = !DILocalVariable(name: "addr", arg: 1, scope: !10055, file: !5954, line: 476, type: !1597)
!10055 = distinct !DISubprogram(name: "__LDREXW", scope: !5954, file: !5954, line: 476, type: !10056, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10058)
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!121, !1597}
!10058 = !{!10054, !10059}
!10059 = !DILocalVariable(name: "result", scope: !10055, file: !5954, line: 478, type: !121)
!10060 = !DILocation(line: 0, scope: !10055, inlinedAt: !10061)
!10061 = distinct !DILocation(line: 2194, column: 3, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10051, file: !10015, line: 2194, column: 3)
!10063 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10061)
!10064 = !{i64 3527540}
!10065 = !DILocation(line: 2194, column: 3, scope: !10062)
!10066 = !DILocation(line: 0, scope: !10051)
!10067 = !DILocalVariable(name: "value", arg: 1, scope: !10068, file: !5954, line: 527, type: !121)
!10068 = distinct !DISubprogram(name: "__STREXW", scope: !5954, file: !5954, line: 527, type: !10069, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10071)
!10069 = !DISubroutineType(types: !10070)
!10070 = !{!121, !121, !1597}
!10071 = !{!10067, !10072, !10073}
!10072 = !DILocalVariable(name: "addr", arg: 2, scope: !10068, file: !5954, line: 527, type: !1597)
!10073 = !DILocalVariable(name: "result", scope: !10068, file: !5954, line: 529, type: !121)
!10074 = !DILocation(line: 0, scope: !10068, inlinedAt: !10075)
!10075 = distinct !DILocation(line: 2194, column: 3, scope: !10051)
!10076 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10075)
!10077 = !{i64 3528976}
!10078 = distinct !{!10078, !10053, !10053}
!10079 = !DILocation(line: 2195, column: 1, scope: !10045)
!10080 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10015, file: !10015, line: 2177, type: !10046, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10081)
!10081 = !{!10082}
!10082 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10080, file: !10015, line: 2177, type: !1545)
!10083 = !DILocation(line: 0, scope: !10080)
!10084 = !DILocation(line: 2179, column: 3, scope: !10080)
!10085 = !DILocation(line: 2180, column: 1, scope: !10080)
!10086 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10015, file: !10015, line: 2164, type: !10046, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10087)
!10087 = !{!10088, !10089}
!10088 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10086, file: !10015, line: 2164, type: !1545)
!10089 = !DILocalVariable(name: "val", scope: !10090, file: !10015, line: 2166, type: !121)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !10015, line: 2166, column: 3)
!10091 = !DILocation(line: 0, scope: !10086)
!10092 = !DILocation(line: 2166, column: 3, scope: !10090)
!10093 = !DILocation(line: 0, scope: !10055, inlinedAt: !10094)
!10094 = distinct !DILocation(line: 2166, column: 3, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !10015, line: 2166, column: 3)
!10096 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10094)
!10097 = !DILocation(line: 2166, column: 3, scope: !10095)
!10098 = !DILocation(line: 0, scope: !10090)
!10099 = !DILocation(line: 0, scope: !10068, inlinedAt: !10100)
!10100 = distinct !DILocation(line: 2166, column: 3, scope: !10090)
!10101 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10100)
!10102 = distinct !{!10102, !10092, !10092}
!10103 = !DILocation(line: 2167, column: 1, scope: !10086)
!10104 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10015, file: !10015, line: 2096, type: !10046, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10104, file: !10015, line: 2096, type: !1545)
!10107 = !DILocalVariable(name: "val", scope: !10108, file: !10015, line: 2098, type: !121)
!10108 = distinct !DILexicalBlock(scope: !10104, file: !10015, line: 2098, column: 3)
!10109 = !DILocation(line: 0, scope: !10104)
!10110 = !DILocation(line: 2098, column: 3, scope: !10108)
!10111 = !DILocation(line: 0, scope: !10055, inlinedAt: !10112)
!10112 = distinct !DILocation(line: 2098, column: 3, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10108, file: !10015, line: 2098, column: 3)
!10114 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10112)
!10115 = !DILocation(line: 2098, column: 3, scope: !10113)
!10116 = !DILocation(line: 0, scope: !10108)
!10117 = !DILocation(line: 0, scope: !10068, inlinedAt: !10118)
!10118 = distinct !DILocation(line: 2098, column: 3, scope: !10108)
!10119 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10118)
!10120 = distinct !{!10120, !10110, !10110}
!10121 = !DILocation(line: 2099, column: 1, scope: !10104)
!10122 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10015, file: !10015, line: 2081, type: !10046, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10123)
!10123 = !{!10124}
!10124 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10122, file: !10015, line: 2081, type: !1545)
!10125 = !DILocation(line: 0, scope: !10122)
!10126 = !DILocation(line: 2083, column: 3, scope: !10122)
!10127 = !DILocation(line: 2084, column: 1, scope: !10122)
!10128 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10015, file: !10015, line: 2068, type: !10046, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10129)
!10129 = !{!10130, !10131}
!10130 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10128, file: !10015, line: 2068, type: !1545)
!10131 = !DILocalVariable(name: "val", scope: !10132, file: !10015, line: 2070, type: !121)
!10132 = distinct !DILexicalBlock(scope: !10128, file: !10015, line: 2070, column: 3)
!10133 = !DILocation(line: 0, scope: !10128)
!10134 = !DILocation(line: 2070, column: 3, scope: !10132)
!10135 = !DILocation(line: 0, scope: !10055, inlinedAt: !10136)
!10136 = distinct !DILocation(line: 2070, column: 3, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10132, file: !10015, line: 2070, column: 3)
!10138 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10136)
!10139 = !DILocation(line: 2070, column: 3, scope: !10137)
!10140 = !DILocation(line: 0, scope: !10132)
!10141 = !DILocation(line: 0, scope: !10068, inlinedAt: !10142)
!10142 = distinct !DILocation(line: 2070, column: 3, scope: !10132)
!10143 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10142)
!10144 = distinct !{!10144, !10134, !10134}
!10145 = !DILocation(line: 2071, column: 1, scope: !10128)
!10146 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10015, file: !10015, line: 2131, type: !10046, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10147)
!10147 = !{!10148, !10149}
!10148 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10146, file: !10015, line: 2131, type: !1545)
!10149 = !DILocalVariable(name: "val", scope: !10150, file: !10015, line: 2133, type: !121)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !10015, line: 2133, column: 3)
!10151 = !DILocation(line: 0, scope: !10146)
!10152 = !DILocation(line: 2133, column: 3, scope: !10150)
!10153 = !DILocation(line: 0, scope: !10055, inlinedAt: !10154)
!10154 = distinct !DILocation(line: 2133, column: 3, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10150, file: !10015, line: 2133, column: 3)
!10156 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10154)
!10157 = !DILocation(line: 2133, column: 3, scope: !10155)
!10158 = !DILocation(line: 0, scope: !10150)
!10159 = !DILocation(line: 0, scope: !10068, inlinedAt: !10160)
!10160 = distinct !DILocation(line: 2133, column: 3, scope: !10150)
!10161 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10160)
!10162 = distinct !{!10162, !10152, !10152}
!10163 = !DILocation(line: 2134, column: 1, scope: !10146)
!10164 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10015, file: !10015, line: 2035, type: !10046, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10165)
!10165 = !{!10166, !10167}
!10166 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10164, file: !10015, line: 2035, type: !1545)
!10167 = !DILocalVariable(name: "val", scope: !10168, file: !10015, line: 2037, type: !121)
!10168 = distinct !DILexicalBlock(scope: !10164, file: !10015, line: 2037, column: 3)
!10169 = !DILocation(line: 0, scope: !10164)
!10170 = !DILocation(line: 2037, column: 3, scope: !10168)
!10171 = !DILocation(line: 0, scope: !10055, inlinedAt: !10172)
!10172 = distinct !DILocation(line: 2037, column: 3, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10168, file: !10015, line: 2037, column: 3)
!10174 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10172)
!10175 = !DILocation(line: 2037, column: 3, scope: !10173)
!10176 = !DILocation(line: 0, scope: !10168)
!10177 = !DILocation(line: 0, scope: !10068, inlinedAt: !10178)
!10178 = distinct !DILocation(line: 2037, column: 3, scope: !10168)
!10179 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10178)
!10180 = distinct !{!10180, !10170, !10170}
!10181 = !DILocation(line: 2038, column: 1, scope: !10164)
!10182 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10015, file: !10015, line: 1814, type: !10016, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10183)
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10182, file: !10015, line: 1814, type: !1545)
!10185 = !DILocation(line: 0, scope: !10182)
!10186 = !DILocation(line: 1816, column: 11, scope: !10182)
!10187 = !DILocation(line: 1816, column: 46, scope: !10182)
!10188 = !DILocation(line: 1816, column: 3, scope: !10182)
!10189 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10015, file: !10015, line: 2142, type: !10046, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10190)
!10190 = !{!10191, !10192}
!10191 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10189, file: !10015, line: 2142, type: !1545)
!10192 = !DILocalVariable(name: "val", scope: !10193, file: !10015, line: 2144, type: !121)
!10193 = distinct !DILexicalBlock(scope: !10189, file: !10015, line: 2144, column: 3)
!10194 = !DILocation(line: 0, scope: !10189)
!10195 = !DILocation(line: 2144, column: 3, scope: !10193)
!10196 = !DILocation(line: 0, scope: !10055, inlinedAt: !10197)
!10197 = distinct !DILocation(line: 2144, column: 3, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10193, file: !10015, line: 2144, column: 3)
!10199 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10197)
!10200 = !DILocation(line: 2144, column: 3, scope: !10198)
!10201 = !DILocation(line: 0, scope: !10193)
!10202 = !DILocation(line: 0, scope: !10068, inlinedAt: !10203)
!10203 = distinct !DILocation(line: 2144, column: 3, scope: !10193)
!10204 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10203)
!10205 = distinct !{!10205, !10195, !10195}
!10206 = !DILocation(line: 2145, column: 1, scope: !10189)
!10207 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10015, file: !10015, line: 2046, type: !10046, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10208)
!10208 = !{!10209, !10210}
!10209 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10207, file: !10015, line: 2046, type: !1545)
!10210 = !DILocalVariable(name: "val", scope: !10211, file: !10015, line: 2048, type: !121)
!10211 = distinct !DILexicalBlock(scope: !10207, file: !10015, line: 2048, column: 3)
!10212 = !DILocation(line: 0, scope: !10207)
!10213 = !DILocation(line: 2048, column: 3, scope: !10211)
!10214 = !DILocation(line: 0, scope: !10055, inlinedAt: !10215)
!10215 = distinct !DILocation(line: 2048, column: 3, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10211, file: !10015, line: 2048, column: 3)
!10217 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10215)
!10218 = !DILocation(line: 2048, column: 3, scope: !10216)
!10219 = !DILocation(line: 0, scope: !10211)
!10220 = !DILocation(line: 0, scope: !10068, inlinedAt: !10221)
!10221 = distinct !DILocation(line: 2048, column: 3, scope: !10211)
!10222 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10221)
!10223 = distinct !{!10223, !10213, !10213}
!10224 = !DILocation(line: 2049, column: 1, scope: !10207)
!10225 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10015, file: !10015, line: 2403, type: !10226, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10228)
!10226 = !DISubroutineType(types: !10227)
!10227 = !{!154, !1545}
!10228 = !{!10229}
!10229 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10225, file: !10015, line: 2403, type: !1545)
!10230 = !DILocation(line: 0, scope: !10225)
!10231 = !DILocation(line: 2405, column: 20, scope: !10225)
!10232 = !DILocation(line: 2405, column: 10, scope: !10225)
!10233 = !DILocation(line: 2405, column: 3, scope: !10225)
!10234 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10015, file: !10015, line: 1770, type: !10016, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10235)
!10235 = !{!10236}
!10236 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10234, file: !10015, line: 1770, type: !1545)
!10237 = !DILocation(line: 0, scope: !10234)
!10238 = !DILocation(line: 1772, column: 11, scope: !10234)
!10239 = !DILocation(line: 1772, column: 46, scope: !10234)
!10240 = !DILocation(line: 1772, column: 3, scope: !10234)
!10241 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10015, file: !10015, line: 1934, type: !10046, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10242)
!10242 = !{!10243, !10244}
!10243 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10241, file: !10015, line: 1934, type: !1545)
!10244 = !DILocalVariable(name: "tmpreg", scope: !10241, file: !10015, line: 1936, type: !120)
!10245 = !DILocation(line: 0, scope: !10241)
!10246 = !DILocation(line: 1936, column: 3, scope: !10241)
!10247 = !DILocation(line: 1936, column: 17, scope: !10241)
!10248 = !DILocation(line: 1937, column: 20, scope: !10241)
!10249 = !DILocation(line: 1937, column: 10, scope: !10241)
!10250 = !DILocation(line: 1938, column: 10, scope: !10241)
!10251 = !DILocation(line: 1939, column: 20, scope: !10241)
!10252 = !DILocation(line: 1939, column: 10, scope: !10241)
!10253 = !DILocation(line: 1940, column: 10, scope: !10241)
!10254 = !DILocation(line: 1941, column: 1, scope: !10241)
!10255 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10015, file: !10015, line: 2426, type: !10256, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{null, !1545, !154}
!10258 = !{!10259, !10260}
!10259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10255, file: !10015, line: 2426, type: !1545)
!10260 = !DILocalVariable(name: "Value", arg: 2, scope: !10255, file: !10015, line: 2426, type: !154)
!10261 = !DILocation(line: 0, scope: !10255)
!10262 = !DILocation(line: 2428, column: 16, scope: !10255)
!10263 = !DILocation(line: 2428, column: 11, scope: !10255)
!10264 = !DILocation(line: 2428, column: 14, scope: !10255)
!10265 = !DILocation(line: 2429, column: 1, scope: !10255)
!10266 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1601, file: !1601, line: 205, type: !10267, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10269)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{!121, !1474}
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "dev", arg: 1, scope: !10266, file: !1601, line: 205, type: !1474)
!10271 = !DILocalVariable(name: "config", scope: !10266, file: !1601, line: 207, type: !9579)
!10272 = !DILocation(line: 0, scope: !10266)
!10273 = !DILocation(line: 207, column: 48, scope: !10266)
!10274 = !DILocation(line: 209, column: 36, scope: !10266)
!10275 = !DILocation(line: 209, column: 9, scope: !10266)
!10276 = !DILocation(line: 209, column: 2, scope: !10266)
!10277 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1601, file: !1601, line: 270, type: !10278, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10280)
!10278 = !DISubroutineType(types: !10279)
!10279 = !{!1440, !121}
!10280 = !{!10281}
!10281 = !DILocalVariable(name: "parity", arg: 1, scope: !10277, file: !1601, line: 270, type: !121)
!10282 = !DILocation(line: 0, scope: !10277)
!10283 = !DILocation(line: 272, column: 2, scope: !10277)
!10284 = !DILocation(line: 281, column: 1, scope: !10277)
!10285 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1601, file: !1601, line: 220, type: !10267, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10286)
!10286 = !{!10287, !10288}
!10287 = !DILocalVariable(name: "dev", arg: 1, scope: !10285, file: !1601, line: 220, type: !1474)
!10288 = !DILocalVariable(name: "config", scope: !10285, file: !1601, line: 222, type: !9579)
!10289 = !DILocation(line: 0, scope: !10285)
!10290 = !DILocation(line: 222, column: 48, scope: !10285)
!10291 = !DILocation(line: 224, column: 44, scope: !10285)
!10292 = !DILocation(line: 224, column: 9, scope: !10285)
!10293 = !DILocation(line: 224, column: 2, scope: !10285)
!10294 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1601, file: !1601, line: 304, type: !10295, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10297)
!10295 = !DISubroutineType(types: !10296)
!10296 = !{!1454, !121}
!10297 = !{!10298}
!10298 = !DILocalVariable(name: "sb", arg: 1, scope: !10294, file: !1601, line: 304, type: !121)
!10299 = !DILocation(line: 0, scope: !10294)
!10300 = !DILocation(line: 306, column: 2, scope: !10294)
!10301 = !DILocation(line: 0, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10294, file: !1601, line: 306, column: 14)
!10303 = !DILocation(line: 323, column: 1, scope: !10294)
!10304 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1601, file: !1601, line: 235, type: !10267, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10305)
!10305 = !{!10306, !10307}
!10306 = !DILocalVariable(name: "dev", arg: 1, scope: !10304, file: !1601, line: 235, type: !1474)
!10307 = !DILocalVariable(name: "config", scope: !10304, file: !1601, line: 237, type: !9579)
!10308 = !DILocation(line: 0, scope: !10304)
!10309 = !DILocation(line: 237, column: 48, scope: !10304)
!10310 = !DILocation(line: 239, column: 39, scope: !10304)
!10311 = !DILocation(line: 239, column: 9, scope: !10304)
!10312 = !DILocation(line: 239, column: 2, scope: !10304)
!10313 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1601, file: !1601, line: 355, type: !10314, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10316)
!10314 = !DISubroutineType(types: !10315)
!10315 = !{!1447, !121, !121}
!10316 = !{!10317, !10318}
!10317 = !DILocalVariable(name: "db", arg: 1, scope: !10313, file: !1601, line: 355, type: !121)
!10318 = !DILocalVariable(name: "p", arg: 2, scope: !10313, file: !1601, line: 356, type: !121)
!10319 = !DILocation(line: 0, scope: !10313)
!10320 = !DILocation(line: 358, column: 2, scope: !10313)
!10321 = !DILocation(line: 384, column: 1, scope: !10313)
!10322 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1601, file: !1601, line: 250, type: !10267, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10323)
!10323 = !{!10324, !10325}
!10324 = !DILocalVariable(name: "dev", arg: 1, scope: !10322, file: !1601, line: 250, type: !1474)
!10325 = !DILocalVariable(name: "config", scope: !10322, file: !1601, line: 252, type: !9579)
!10326 = !DILocation(line: 0, scope: !10322)
!10327 = !DILocation(line: 252, column: 48, scope: !10322)
!10328 = !DILocation(line: 254, column: 40, scope: !10322)
!10329 = !DILocation(line: 254, column: 9, scope: !10322)
!10330 = !DILocation(line: 254, column: 2, scope: !10322)
!10331 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1601, file: !1601, line: 409, type: !10332, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10334)
!10332 = !DISubroutineType(types: !10333)
!10333 = !{!1460, !121}
!10334 = !{!10335}
!10335 = !DILocalVariable(name: "fc", arg: 1, scope: !10331, file: !1601, line: 409, type: !121)
!10336 = !DILocation(line: 0, scope: !10331)
!10337 = !DILocation(line: 411, column: 9, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10331, file: !1601, line: 411, column: 6)
!10339 = !DILocation(line: 416, column: 1, scope: !10331)
!10340 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10015, file: !10015, line: 967, type: !10016, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10341)
!10341 = !{!10342}
!10342 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10340, file: !10015, line: 967, type: !1545)
!10343 = !DILocation(line: 0, scope: !10340)
!10344 = !DILocation(line: 969, column: 21, scope: !10340)
!10345 = !DILocation(line: 969, column: 3, scope: !10340)
!10346 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10015, file: !10015, line: 601, type: !10016, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10347)
!10347 = !{!10348}
!10348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10346, file: !10015, line: 601, type: !1545)
!10349 = !DILocation(line: 0, scope: !10346)
!10350 = !DILocation(line: 603, column: 21, scope: !10346)
!10351 = !DILocation(line: 603, column: 3, scope: !10346)
!10352 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10015, file: !10015, line: 820, type: !10016, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10353)
!10353 = !{!10354}
!10354 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10352, file: !10015, line: 820, type: !1545)
!10355 = !DILocation(line: 0, scope: !10352)
!10356 = !DILocation(line: 822, column: 21, scope: !10352)
!10357 = !DILocation(line: 822, column: 3, scope: !10352)
!10358 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10015, file: !10015, line: 547, type: !10016, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10359)
!10359 = !{!10360}
!10360 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10358, file: !10015, line: 547, type: !1545)
!10361 = !DILocation(line: 0, scope: !10358)
!10362 = !DILocation(line: 549, column: 21, scope: !10358)
!10363 = !DILocation(line: 549, column: 3, scope: !10358)
!10364 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1601, file: !1601, line: 257, type: !10365, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10367)
!10365 = !DISubroutineType(types: !10366)
!10366 = !{!121, !1440}
!10367 = !{!10368}
!10368 = !DILocalVariable(name: "parity", arg: 1, scope: !10364, file: !1601, line: 257, type: !1440)
!10369 = !DILocation(line: 0, scope: !10364)
!10370 = !DILocation(line: 259, column: 2, scope: !10364)
!10371 = !DILocation(line: 268, column: 1, scope: !10364)
!10372 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1601, file: !1601, line: 283, type: !10373, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10375)
!10373 = !DISubroutineType(types: !10374)
!10374 = !{!121, !1454}
!10375 = !{!10376}
!10376 = !DILocalVariable(name: "sb", arg: 1, scope: !10372, file: !1601, line: 283, type: !1454)
!10377 = !DILocation(line: 0, scope: !10372)
!10378 = !DILocation(line: 285, column: 2, scope: !10372)
!10379 = !DILocation(line: 0, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10372, file: !1601, line: 285, column: 14)
!10381 = !DILocation(line: 302, column: 1, scope: !10372)
!10382 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1601, file: !1601, line: 325, type: !10383, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10385)
!10383 = !DISubroutineType(types: !10384)
!10384 = !{!121, !1447, !1440}
!10385 = !{!10386, !10387}
!10386 = !DILocalVariable(name: "db", arg: 1, scope: !10382, file: !1601, line: 325, type: !1447)
!10387 = !DILocalVariable(name: "p", arg: 2, scope: !10382, file: !1601, line: 326, type: !1440)
!10388 = !DILocation(line: 0, scope: !10382)
!10389 = !DILocation(line: 328, column: 2, scope: !10382)
!10390 = !DILocation(line: 353, column: 1, scope: !10382)
!10391 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1601, file: !1601, line: 393, type: !10392, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10394)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!121, !1460}
!10394 = !{!10395}
!10395 = !DILocalVariable(name: "fc", arg: 1, scope: !10391, file: !1601, line: 393, type: !1460)
!10396 = !DILocation(line: 0, scope: !10391)
!10397 = !DILocation(line: 395, column: 9, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10391, file: !1601, line: 395, column: 6)
!10399 = !DILocation(line: 400, column: 1, scope: !10391)
!10400 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10015, file: !10015, line: 424, type: !10046, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10401)
!10401 = !{!10402}
!10402 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10400, file: !10015, line: 424, type: !1545)
!10403 = !DILocation(line: 0, scope: !10400)
!10404 = !DILocation(line: 426, column: 3, scope: !10400)
!10405 = !DILocation(line: 427, column: 1, scope: !10400)
!10406 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1601, file: !1601, line: 197, type: !10407, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10409)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{null, !1474, !121}
!10409 = !{!10410, !10411, !10412}
!10410 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !1601, line: 197, type: !1474)
!10411 = !DILocalVariable(name: "parity", arg: 2, scope: !10406, file: !1601, line: 198, type: !121)
!10412 = !DILocalVariable(name: "config", scope: !10406, file: !1601, line: 200, type: !9579)
!10413 = !DILocation(line: 0, scope: !10406)
!10414 = !DILocation(line: 200, column: 48, scope: !10406)
!10415 = !DILocation(line: 202, column: 29, scope: !10406)
!10416 = !DILocation(line: 202, column: 2, scope: !10406)
!10417 = !DILocation(line: 203, column: 1, scope: !10406)
!10418 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1601, file: !1601, line: 212, type: !10407, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10419)
!10419 = !{!10420, !10421, !10422}
!10420 = !DILocalVariable(name: "dev", arg: 1, scope: !10418, file: !1601, line: 212, type: !1474)
!10421 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10418, file: !1601, line: 213, type: !121)
!10422 = !DILocalVariable(name: "config", scope: !10418, file: !1601, line: 215, type: !9579)
!10423 = !DILocation(line: 0, scope: !10418)
!10424 = !DILocation(line: 215, column: 48, scope: !10418)
!10425 = !DILocation(line: 217, column: 37, scope: !10418)
!10426 = !DILocation(line: 217, column: 2, scope: !10418)
!10427 = !DILocation(line: 218, column: 1, scope: !10418)
!10428 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1601, file: !1601, line: 227, type: !10407, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10429)
!10429 = !{!10430, !10431, !10432}
!10430 = !DILocalVariable(name: "dev", arg: 1, scope: !10428, file: !1601, line: 227, type: !1474)
!10431 = !DILocalVariable(name: "databits", arg: 2, scope: !10428, file: !1601, line: 228, type: !121)
!10432 = !DILocalVariable(name: "config", scope: !10428, file: !1601, line: 230, type: !9579)
!10433 = !DILocation(line: 0, scope: !10428)
!10434 = !DILocation(line: 230, column: 48, scope: !10428)
!10435 = !DILocation(line: 232, column: 32, scope: !10428)
!10436 = !DILocation(line: 232, column: 2, scope: !10428)
!10437 = !DILocation(line: 233, column: 1, scope: !10428)
!10438 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1601, file: !1601, line: 242, type: !10407, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10439)
!10439 = !{!10440, !10441, !10442}
!10440 = !DILocalVariable(name: "dev", arg: 1, scope: !10438, file: !1601, line: 242, type: !1474)
!10441 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10438, file: !1601, line: 243, type: !121)
!10442 = !DILocalVariable(name: "config", scope: !10438, file: !1601, line: 245, type: !9579)
!10443 = !DILocation(line: 0, scope: !10438)
!10444 = !DILocation(line: 245, column: 48, scope: !10438)
!10445 = !DILocation(line: 247, column: 33, scope: !10438)
!10446 = !DILocation(line: 247, column: 2, scope: !10438)
!10447 = !DILocation(line: 248, column: 1, scope: !10438)
!10448 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1601, file: !1601, line: 107, type: !10407, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10449)
!10449 = !{!10450, !10451, !10452, !10453, !10454}
!10450 = !DILocalVariable(name: "dev", arg: 1, scope: !10448, file: !1601, line: 107, type: !1474)
!10451 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10448, file: !1601, line: 107, type: !121)
!10452 = !DILocalVariable(name: "config", scope: !10448, file: !1601, line: 109, type: !9579)
!10453 = !DILocalVariable(name: "data", scope: !10448, file: !1601, line: 110, type: !9702)
!10454 = !DILocalVariable(name: "clock_rate", scope: !10448, file: !1601, line: 112, type: !121)
!10455 = !DILocation(line: 0, scope: !10448)
!10456 = !DILocation(line: 109, column: 48, scope: !10448)
!10457 = !DILocation(line: 110, column: 38, scope: !10448)
!10458 = !DILocation(line: 112, column: 2, scope: !10448)
!10459 = !DILocation(line: 123, column: 36, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !1601, line: 123, column: 7)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !1601, line: 122, column: 9)
!10462 = distinct !DILexicalBlock(scope: !10448, file: !1601, line: 115, column: 6)
!10463 = !DILocation(line: 124, column: 42, scope: !10460)
!10464 = !DILocation(line: 123, column: 7, scope: !10460)
!10465 = !DILocation(line: 125, column: 22, scope: !10460)
!10466 = !DILocation(line: 123, column: 7, scope: !10461)
!10467 = !DILocation(line: 176, column: 36, scope: !10448)
!10468 = !DILocation(line: 176, column: 3, scope: !10448)
!10469 = !DILocation(line: 179, column: 32, scope: !10448)
!10470 = !DILocation(line: 180, column: 10, scope: !10448)
!10471 = !DILocation(line: 179, column: 3, scope: !10448)
!10472 = !DILocation(line: 195, column: 1, scope: !10448)
!10473 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10015, file: !10015, line: 410, type: !10046, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10474)
!10474 = !{!10475}
!10475 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10473, file: !10015, line: 410, type: !1545)
!10476 = !DILocation(line: 0, scope: !10473)
!10477 = !DILocation(line: 412, column: 3, scope: !10473)
!10478 = !DILocation(line: 413, column: 1, scope: !10473)
!10479 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !815, file: !815, line: 216, type: !1578, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10480)
!10480 = !{!10481, !10482, !10483, !10484}
!10481 = !DILocalVariable(name: "dev", arg: 1, scope: !10479, file: !815, line: 216, type: !1474)
!10482 = !DILocalVariable(name: "sys", arg: 2, scope: !10479, file: !815, line: 217, type: !908)
!10483 = !DILocalVariable(name: "rate", arg: 3, scope: !10479, file: !815, line: 218, type: !864)
!10484 = !DILocalVariable(name: "api", scope: !10479, file: !815, line: 220, type: !1556)
!10485 = !DILocation(line: 0, scope: !10479)
!10486 = !DILocation(line: 221, column: 49, scope: !10479)
!10487 = !DILocation(line: 223, column: 11, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10479, file: !815, line: 223, column: 6)
!10489 = !DILocation(line: 223, column: 20, scope: !10488)
!10490 = !DILocation(line: 223, column: 6, scope: !10479)
!10491 = !DILocation(line: 227, column: 9, scope: !10479)
!10492 = !DILocation(line: 227, column: 2, scope: !10479)
!10493 = !DILocation(line: 228, column: 1, scope: !10479)
!10494 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10015, file: !10015, line: 615, type: !10495, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10497)
!10495 = !DISubroutineType(types: !10496)
!10496 = !{null, !1545, !121}
!10497 = !{!10498, !10499}
!10498 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10494, file: !10015, line: 615, type: !1545)
!10499 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10494, file: !10015, line: 615, type: !121)
!10500 = !DILocation(line: 0, scope: !10494)
!10501 = !DILocation(line: 617, column: 3, scope: !10494)
!10502 = !DILocation(line: 618, column: 1, scope: !10494)
!10503 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10015, file: !10015, line: 1020, type: !10504, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10506)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{null, !1545, !121, !121, !121}
!10506 = !{!10507, !10508, !10509, !10510}
!10507 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10503, file: !10015, line: 1020, type: !1545)
!10508 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10503, file: !10015, line: 1020, type: !121)
!10509 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10503, file: !10015, line: 1020, type: !121)
!10510 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10503, file: !10015, line: 1021, type: !121)
!10511 = !DILocation(line: 0, scope: !10503)
!10512 = !DILocation(line: 1029, column: 30, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10514, file: !10015, line: 1028, column: 3)
!10514 = distinct !DILexicalBlock(scope: !10503, file: !10015, line: 1023, column: 7)
!10515 = !DILocation(line: 1029, column: 19, scope: !10513)
!10516 = !DILocation(line: 1029, column: 13, scope: !10513)
!10517 = !DILocation(line: 1029, column: 17, scope: !10513)
!10518 = !DILocation(line: 1031, column: 1, scope: !10503)
!10519 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10015, file: !10015, line: 949, type: !10495, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10520)
!10520 = !{!10521, !10522}
!10521 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10519, file: !10015, line: 949, type: !1545)
!10522 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10519, file: !10015, line: 949, type: !121)
!10523 = !DILocation(line: 0, scope: !10519)
!10524 = !DILocation(line: 951, column: 3, scope: !10519)
!10525 = !DILocation(line: 952, column: 1, scope: !10519)
!10526 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10015, file: !10015, line: 588, type: !10495, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10527)
!10527 = !{!10528, !10529}
!10528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10526, file: !10015, line: 588, type: !1545)
!10529 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10526, file: !10015, line: 588, type: !121)
!10530 = !DILocation(line: 0, scope: !10526)
!10531 = !DILocation(line: 590, column: 3, scope: !10526)
!10532 = !DILocation(line: 591, column: 1, scope: !10526)
!10533 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10015, file: !10015, line: 805, type: !10495, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10534)
!10534 = !{!10535, !10536}
!10535 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10533, file: !10015, line: 805, type: !1545)
!10536 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10533, file: !10015, line: 805, type: !121)
!10537 = !DILocation(line: 0, scope: !10533)
!10538 = !DILocation(line: 807, column: 3, scope: !10533)
!10539 = !DILocation(line: 808, column: 1, scope: !10533)
!10540 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10015, file: !10015, line: 532, type: !10495, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10541)
!10541 = !{!10542, !10543}
!10542 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10540, file: !10015, line: 532, type: !1545)
!10543 = !DILocalVariable(name: "Parity", arg: 2, scope: !10540, file: !10015, line: 532, type: !121)
!10544 = !DILocation(line: 0, scope: !10540)
!10545 = !DILocation(line: 534, column: 3, scope: !10540)
!10546 = !DILocation(line: 535, column: 1, scope: !10540)
!10547 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10015, file: !10015, line: 1737, type: !10016, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10548)
!10548 = !{!10549}
!10549 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10547, file: !10015, line: 1737, type: !1545)
!10550 = !DILocation(line: 0, scope: !10547)
!10551 = !DILocation(line: 1739, column: 11, scope: !10547)
!10552 = !DILocation(line: 1739, column: 3, scope: !10547)
!10553 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10015, file: !10015, line: 1748, type: !10016, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10554)
!10554 = !{!10555}
!10555 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10553, file: !10015, line: 1748, type: !1545)
!10556 = !DILocation(line: 0, scope: !10553)
!10557 = !DILocation(line: 1750, column: 11, scope: !10553)
!10558 = !DILocation(line: 1750, column: 45, scope: !10553)
!10559 = !DILocation(line: 1750, column: 3, scope: !10553)
!10560 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10015, file: !10015, line: 1827, type: !10016, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10561)
!10561 = !{!10562}
!10562 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10560, file: !10015, line: 1827, type: !1545)
!10563 = !DILocation(line: 0, scope: !10560)
!10564 = !DILocation(line: 1829, column: 11, scope: !10560)
!10565 = !DILocation(line: 1829, column: 46, scope: !10560)
!10566 = !DILocation(line: 1829, column: 3, scope: !10560)
!10567 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10015, file: !10015, line: 1992, type: !10046, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10568)
!10568 = !{!10569}
!10569 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10567, file: !10015, line: 1992, type: !1545)
!10570 = !DILocation(line: 0, scope: !10567)
!10571 = !DILocation(line: 1994, column: 3, scope: !10567)
!10572 = !DILocation(line: 1995, column: 1, scope: !10567)
!10573 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10015, file: !10015, line: 1877, type: !10046, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10574)
!10574 = !{!10575, !10576}
!10575 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10573, file: !10015, line: 1877, type: !1545)
!10576 = !DILocalVariable(name: "tmpreg", scope: !10573, file: !10015, line: 1879, type: !120)
!10577 = !DILocation(line: 0, scope: !10573)
!10578 = !DILocation(line: 1879, column: 3, scope: !10573)
!10579 = !DILocation(line: 1879, column: 17, scope: !10573)
!10580 = !DILocation(line: 1880, column: 20, scope: !10573)
!10581 = !DILocation(line: 1880, column: 10, scope: !10573)
!10582 = !DILocation(line: 1881, column: 10, scope: !10573)
!10583 = !DILocation(line: 1882, column: 20, scope: !10573)
!10584 = !DILocation(line: 1882, column: 10, scope: !10573)
!10585 = !DILocation(line: 1883, column: 10, scope: !10573)
!10586 = !DILocation(line: 1884, column: 1, scope: !10573)
!10587 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10015, file: !10015, line: 1896, type: !10046, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10588)
!10588 = !{!10589, !10590}
!10589 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10587, file: !10015, line: 1896, type: !1545)
!10590 = !DILocalVariable(name: "tmpreg", scope: !10587, file: !10015, line: 1898, type: !120)
!10591 = !DILocation(line: 0, scope: !10587)
!10592 = !DILocation(line: 1898, column: 3, scope: !10587)
!10593 = !DILocation(line: 1898, column: 17, scope: !10587)
!10594 = !DILocation(line: 1899, column: 20, scope: !10587)
!10595 = !DILocation(line: 1899, column: 10, scope: !10587)
!10596 = !DILocation(line: 1900, column: 10, scope: !10587)
!10597 = !DILocation(line: 1901, column: 20, scope: !10587)
!10598 = !DILocation(line: 1901, column: 10, scope: !10587)
!10599 = !DILocation(line: 1902, column: 10, scope: !10587)
!10600 = !DILocation(line: 1903, column: 1, scope: !10587)
!10601 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10015, file: !10015, line: 1915, type: !10046, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10602)
!10602 = !{!10603, !10604}
!10603 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10601, file: !10015, line: 1915, type: !1545)
!10604 = !DILocalVariable(name: "tmpreg", scope: !10601, file: !10015, line: 1917, type: !120)
!10605 = !DILocation(line: 0, scope: !10601)
!10606 = !DILocation(line: 1917, column: 3, scope: !10601)
!10607 = !DILocation(line: 1917, column: 17, scope: !10601)
!10608 = !DILocation(line: 1918, column: 20, scope: !10601)
!10609 = !DILocation(line: 1918, column: 10, scope: !10601)
!10610 = !DILocation(line: 1919, column: 10, scope: !10601)
!10611 = !DILocation(line: 1920, column: 20, scope: !10601)
!10612 = !DILocation(line: 1920, column: 10, scope: !10601)
!10613 = !DILocation(line: 1921, column: 10, scope: !10601)
!10614 = !DILocation(line: 1922, column: 1, scope: !10601)
!10615 = !DILocation(line: 0, scope: !1655)
!10616 = !DILocation(line: 1914, column: 1, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !1655, file: !1601, line: 1914, column: 1)
!10618 = !DILocation(line: 1914, column: 1, scope: !1655)
!10619 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1601, file: !1601, line: 987, type: !1525, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10620)
!10620 = !{!10621, !10622}
!10621 = !DILocalVariable(name: "dev", arg: 1, scope: !10619, file: !1601, line: 987, type: !1474)
!10622 = !DILocalVariable(name: "data", scope: !10619, file: !1601, line: 989, type: !9702)
!10623 = !DILocation(line: 0, scope: !10619)
!10624 = !DILocation(line: 989, column: 38, scope: !10619)
!10625 = !DILocation(line: 1014, column: 12, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10619, file: !1601, line: 1014, column: 6)
!10627 = !DILocation(line: 1014, column: 6, scope: !10626)
!10628 = !DILocation(line: 1014, column: 6, scope: !10619)
!10629 = !DILocation(line: 1015, column: 28, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10626, file: !1601, line: 1014, column: 21)
!10631 = !DILocation(line: 1015, column: 3, scope: !10630)
!10632 = !DILocation(line: 1016, column: 2, scope: !10630)
!10633 = !DILocation(line: 1059, column: 1, scope: !10619)
!10634 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1601, file: !1601, line: 1583, type: !1495, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10635)
!10635 = !{!10636, !10637, !10638, !10639, !10640, !10641}
!10636 = !DILocalVariable(name: "dev", arg: 1, scope: !10634, file: !1601, line: 1583, type: !1474)
!10637 = !DILocalVariable(name: "config", scope: !10634, file: !1601, line: 1585, type: !9579)
!10638 = !DILocalVariable(name: "data", scope: !10634, file: !1601, line: 1586, type: !9702)
!10639 = !DILocalVariable(name: "ll_parity", scope: !10634, file: !1601, line: 1587, type: !121)
!10640 = !DILocalVariable(name: "ll_datawidth", scope: !10634, file: !1601, line: 1588, type: !121)
!10641 = !DILocalVariable(name: "err", scope: !10634, file: !1601, line: 1589, type: !103)
!10642 = !DILocation(line: 0, scope: !10634)
!10643 = !DILocation(line: 1585, column: 48, scope: !10634)
!10644 = !DILocation(line: 1586, column: 38, scope: !10634)
!10645 = !DILocation(line: 1591, column: 2, scope: !10634)
!10646 = !DILocation(line: 1593, column: 29, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10634, file: !1601, line: 1593, column: 6)
!10648 = !DILocation(line: 1593, column: 7, scope: !10647)
!10649 = !DILocation(line: 1593, column: 6, scope: !10634)
!10650 = !DILocation(line: 1599, column: 31, scope: !10634)
!10651 = !DILocation(line: 1599, column: 71, scope: !10634)
!10652 = !DILocation(line: 1599, column: 8, scope: !10634)
!10653 = !DILocation(line: 1600, column: 10, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10634, file: !1601, line: 1600, column: 6)
!10655 = !DILocation(line: 1600, column: 6, scope: !10634)
!10656 = !DILocation(line: 1616, column: 36, scope: !10634)
!10657 = !DILocation(line: 1616, column: 8, scope: !10634)
!10658 = !DILocation(line: 1617, column: 10, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10634, file: !1601, line: 1617, column: 6)
!10660 = !DILocation(line: 1617, column: 6, scope: !10634)
!10661 = !DILocation(line: 1621, column: 27, scope: !10634)
!10662 = !DILocation(line: 1621, column: 2, scope: !10634)
!10663 = !DILocation(line: 1624, column: 40, scope: !10634)
!10664 = !DILocation(line: 1624, column: 2, scope: !10634)
!10665 = !DILocation(line: 1630, column: 14, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10634, file: !1601, line: 1630, column: 6)
!10667 = !DILocation(line: 1630, column: 6, scope: !10634)
!10668 = !DILocation(line: 1638, column: 2, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !1601, line: 1634, column: 34)
!10670 = distinct !DILexicalBlock(scope: !10666, file: !1601, line: 1634, column: 13)
!10671 = !DILocation(line: 0, scope: !10666)
!10672 = !DILocation(line: 1649, column: 35, scope: !10634)
!10673 = !DILocation(line: 1649, column: 2, scope: !10634)
!10674 = !DILocation(line: 1654, column: 14, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10634, file: !1601, line: 1654, column: 6)
!10676 = !DILocation(line: 1654, column: 6, scope: !10634)
!10677 = !DILocation(line: 1655, column: 3, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10675, file: !1601, line: 1654, column: 31)
!10679 = !DILocation(line: 1656, column: 2, scope: !10678)
!10680 = !DILocation(line: 1659, column: 37, scope: !10634)
!10681 = !DILocation(line: 1659, column: 2, scope: !10634)
!10682 = !DILocation(line: 1662, column: 14, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10634, file: !1601, line: 1662, column: 6)
!10684 = !DILocation(line: 1662, column: 6, scope: !10634)
!10685 = !DILocation(line: 1663, column: 37, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10683, file: !1601, line: 1662, column: 27)
!10687 = !DILocation(line: 1663, column: 3, scope: !10686)
!10688 = !DILocation(line: 1664, column: 2, scope: !10686)
!10689 = !DILocation(line: 1684, column: 26, scope: !10634)
!10690 = !DILocation(line: 1684, column: 2, scope: !10634)
!10691 = !DILocation(line: 1701, column: 10, scope: !10634)
!10692 = !DILocation(line: 1701, column: 2, scope: !10634)
!10693 = !DILocation(line: 1722, column: 2, scope: !10634)
!10694 = !DILocation(line: 1724, column: 1, scope: !10634)
!10695 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1601, file: !1601, line: 651, type: !1525, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10696)
!10696 = !{!10697, !10698, !10699}
!10697 = !DILocalVariable(name: "dev", arg: 1, scope: !10695, file: !1601, line: 651, type: !1474)
!10698 = !DILocalVariable(name: "data", scope: !10695, file: !1601, line: 653, type: !9702)
!10699 = !DILocalVariable(name: "clk", scope: !10695, file: !1601, line: 654, type: !10700)
!10700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!10701 = !DILocation(line: 0, scope: !10695)
!10702 = !DILocation(line: 653, column: 38, scope: !10695)
!10703 = !DILocation(line: 656, column: 8, scope: !10695)
!10704 = !DILocation(line: 656, column: 14, scope: !10695)
!10705 = !DILocation(line: 657, column: 1, scope: !10695)
!10706 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !10707, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10709)
!10707 = !DISubroutineType(types: !10708)
!10708 = !{!157, !1474}
!10709 = !{!10710}
!10710 = !DILocalVariable(name: "dev", arg: 1, scope: !10706, file: !8161, line: 47, type: !1474)
!10711 = !DILocation(line: 0, scope: !10706)
!10712 = !DILocation(line: 55, column: 2, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10706, file: !8161, line: 55, column: 2)
!10714 = !{i64 2155033979}
!10715 = !DILocation(line: 56, column: 9, scope: !10706)
!10716 = !DILocation(line: 56, column: 2, scope: !10706)
!10717 = distinct !DISubprogram(name: "clock_control_on", scope: !815, file: !815, line: 123, type: !1563, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10718)
!10718 = !{!10719, !10720, !10721}
!10719 = !DILocalVariable(name: "dev", arg: 1, scope: !10717, file: !815, line: 123, type: !1474)
!10720 = !DILocalVariable(name: "sys", arg: 2, scope: !10717, file: !815, line: 124, type: !908)
!10721 = !DILocalVariable(name: "api", scope: !10717, file: !815, line: 126, type: !1556)
!10722 = !DILocation(line: 0, scope: !10717)
!10723 = !DILocation(line: 127, column: 49, scope: !10717)
!10724 = !DILocation(line: 129, column: 14, scope: !10717)
!10725 = !DILocation(line: 129, column: 9, scope: !10717)
!10726 = !DILocation(line: 129, column: 2, scope: !10717)
!10727 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1628, file: !1628, line: 342, type: !10728, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10730)
!10728 = !DISubroutineType(types: !10729)
!10729 = !{!103, !1689, !154}
!10730 = !{!10731, !10732, !10733, !10734}
!10731 = !DILocalVariable(name: "config", arg: 1, scope: !10727, file: !1628, line: 342, type: !1689)
!10732 = !DILocalVariable(name: "id", arg: 2, scope: !10727, file: !1628, line: 343, type: !154)
!10733 = !DILocalVariable(name: "ret", scope: !10727, file: !1628, line: 345, type: !103)
!10734 = !DILocalVariable(name: "state", scope: !10727, file: !1628, line: 346, type: !1631)
!10735 = !DILocation(line: 0, scope: !10727)
!10736 = !DILocation(line: 346, column: 2, scope: !10727)
!10737 = !DILocation(line: 348, column: 8, scope: !10727)
!10738 = !DILocation(line: 349, column: 10, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10727, file: !1628, line: 349, column: 6)
!10740 = !DILocation(line: 349, column: 6, scope: !10727)
!10741 = !DILocation(line: 353, column: 44, scope: !10727)
!10742 = !DILocation(line: 353, column: 9, scope: !10727)
!10743 = !DILocation(line: 353, column: 2, scope: !10727)
!10744 = !DILocation(line: 354, column: 1, scope: !10727)
!10745 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10015, file: !10015, line: 497, type: !10495, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10746)
!10746 = !{!10747, !10748, !10749}
!10747 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10745, file: !10015, line: 497, type: !1545)
!10748 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10745, file: !10015, line: 497, type: !121)
!10749 = !DILocalVariable(name: "val", scope: !10750, file: !10015, line: 499, type: !121)
!10750 = distinct !DILexicalBlock(scope: !10745, file: !10015, line: 499, column: 3)
!10751 = !DILocation(line: 0, scope: !10745)
!10752 = !DILocation(line: 499, column: 3, scope: !10750)
!10753 = !DILocation(line: 0, scope: !10055, inlinedAt: !10754)
!10754 = distinct !DILocation(line: 499, column: 3, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10750, file: !10015, line: 499, column: 3)
!10756 = !DILocation(line: 480, column: 4, scope: !10055, inlinedAt: !10754)
!10757 = !DILocation(line: 499, column: 3, scope: !10755)
!10758 = !DILocation(line: 0, scope: !10750)
!10759 = !DILocation(line: 0, scope: !10068, inlinedAt: !10760)
!10760 = distinct !DILocation(line: 499, column: 3, scope: !10750)
!10761 = !DILocation(line: 531, column: 4, scope: !10068, inlinedAt: !10760)
!10762 = distinct !{!10762, !10752, !10752}
!10763 = !DILocation(line: 500, column: 1, scope: !10745)
!10764 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10015, file: !10015, line: 850, type: !10504, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10765)
!10765 = !{!10766, !10767, !10768, !10769}
!10766 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10764, file: !10015, line: 850, type: !1545)
!10767 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10764, file: !10015, line: 850, type: !121)
!10768 = !DILocalVariable(name: "Parity", arg: 3, scope: !10764, file: !10015, line: 850, type: !121)
!10769 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10764, file: !10015, line: 851, type: !121)
!10770 = !DILocation(line: 0, scope: !10764)
!10771 = !DILocation(line: 853, column: 3, scope: !10764)
!10772 = !DILocation(line: 854, column: 3, scope: !10764)
!10773 = !DILocation(line: 855, column: 1, scope: !10764)
!10774 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10015, file: !10015, line: 1337, type: !10046, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10775)
!10775 = !{!10776}
!10776 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10774, file: !10015, line: 1337, type: !1545)
!10777 = !DILocation(line: 0, scope: !10774)
!10778 = !DILocation(line: 1339, column: 3, scope: !10774)
!10779 = !DILocation(line: 1340, column: 1, scope: !10774)
!10780 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1628, file: !1628, line: 316, type: !10781, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!103, !1689, !1631}
!10783 = !{!10784, !10785, !10786}
!10784 = !DILocalVariable(name: "config", arg: 1, scope: !10780, file: !1628, line: 317, type: !1689)
!10785 = !DILocalVariable(name: "state", arg: 2, scope: !10780, file: !1628, line: 318, type: !1631)
!10786 = !DILocalVariable(name: "reg", scope: !10780, file: !1628, line: 320, type: !22)
!10787 = !DILocation(line: 0, scope: !10780)
!10788 = !DILocation(line: 329, column: 39, scope: !10780)
!10789 = !DILocation(line: 329, column: 52, scope: !10780)
!10790 = !DILocation(line: 329, column: 9, scope: !10780)
!10791 = !DILocation(line: 329, column: 2, scope: !10780)
!10792 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !10707, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !10793)
!10793 = !{!10794}
!10794 = !DILocalVariable(name: "dev", arg: 1, scope: !10792, file: !141, line: 730, type: !1474)
!10795 = !DILocation(line: 0, scope: !10792)
!10796 = !DILocation(line: 732, column: 9, scope: !10792)
!10797 = !DILocation(line: 732, column: 2, scope: !10792)
!10798 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1770, file: !1770, line: 270, type: !1776, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10799)
!10799 = !{!10800}
!10800 = !DILocalVariable(name: "dev", arg: 1, scope: !10798, file: !1770, line: 270, type: !1778)
!10801 = !DILocation(line: 0, scope: !10798)
!10802 = !DILocation(line: 274, column: 2, scope: !10798)
!10803 = !DILocation(line: 275, column: 12, scope: !10798)
!10804 = !DILocation(line: 276, column: 15, scope: !10798)
!10805 = !DILocation(line: 277, column: 16, scope: !10798)
!10806 = !DILocation(line: 278, column: 15, scope: !10798)
!10807 = !DILocation(line: 279, column: 16, scope: !10798)
!10808 = !DILocation(line: 282, column: 2, scope: !10798)
!10809 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5988, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10810)
!10810 = !{!10811, !10812}
!10811 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10809, file: !515, line: 1814, type: !771)
!10812 = !DILocalVariable(name: "priority", arg: 2, scope: !10809, file: !515, line: 1814, type: !121)
!10813 = !DILocation(line: 0, scope: !10809)
!10814 = !DILocation(line: 1822, column: 46, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !515, line: 1821, column: 3)
!10816 = distinct !DILexicalBlock(scope: !10809, file: !515, line: 1816, column: 7)
!10817 = !DILocation(line: 1824, column: 1, scope: !10809)
!10818 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1770, file: !1770, line: 118, type: !5891, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10819)
!10819 = !{!10820, !10821}
!10820 = !DILocalVariable(name: "arg", arg: 1, scope: !10818, file: !1770, line: 118, type: !102)
!10821 = !DILocalVariable(name: "dticks", scope: !10818, file: !1770, line: 121, type: !121)
!10822 = !DILocation(line: 0, scope: !10818)
!10823 = !DILocation(line: 124, column: 2, scope: !10818)
!10824 = !DILocation(line: 129, column: 17, scope: !10818)
!10825 = !DILocation(line: 129, column: 14, scope: !10818)
!10826 = !DILocation(line: 130, column: 15, scope: !10818)
!10827 = !DILocation(line: 145, column: 27, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !1770, line: 132, column: 16)
!10829 = distinct !DILexicalBlock(scope: !10818, file: !1770, line: 132, column: 6)
!10830 = !DILocation(line: 145, column: 25, scope: !10828)
!10831 = !DILocation(line: 145, column: 45, scope: !10828)
!10832 = !DILocation(line: 146, column: 30, scope: !10828)
!10833 = !DILocation(line: 146, column: 20, scope: !10828)
!10834 = !DILocation(line: 147, column: 3, scope: !10828)
!10835 = !DILocation(line: 151, column: 2, scope: !10818)
!10836 = !DILocation(line: 152, column: 1, scope: !10818)
!10837 = distinct !DISubprogram(name: "elapsed", scope: !1770, file: !1770, line: 85, type: !6035, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10838)
!10838 = !{!10839, !10840, !10841}
!10839 = !DILocalVariable(name: "val1", scope: !10837, file: !1770, line: 87, type: !121)
!10840 = !DILocalVariable(name: "ctrl", scope: !10837, file: !1770, line: 88, type: !121)
!10841 = !DILocalVariable(name: "val2", scope: !10837, file: !1770, line: 89, type: !121)
!10842 = !DILocation(line: 87, column: 27, scope: !10837)
!10843 = !DILocation(line: 0, scope: !10837)
!10844 = !DILocation(line: 88, column: 27, scope: !10837)
!10845 = !DILocation(line: 89, column: 27, scope: !10837)
!10846 = !DILocation(line: 105, column: 12, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10837, file: !1770, line: 105, column: 6)
!10848 = !DILocation(line: 106, column: 6, scope: !10847)
!10849 = !DILocation(line: 107, column: 16, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10847, file: !1770, line: 106, column: 24)
!10851 = !DILocation(line: 111, column: 18, scope: !10850)
!10852 = !DILocation(line: 112, column: 2, scope: !10850)
!10853 = !DILocation(line: 114, column: 20, scope: !10837)
!10854 = !DILocation(line: 114, column: 30, scope: !10837)
!10855 = !DILocation(line: 114, column: 28, scope: !10837)
!10856 = !DILocation(line: 114, column: 2, scope: !10837)
!10857 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1770, file: !1770, line: 154, type: !10858, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{null, !745, !157}
!10860 = !{!10861, !10862, !10863, !10864, !10865, !10866, !10867, !10872, !10873}
!10861 = !DILocalVariable(name: "ticks", arg: 1, scope: !10857, file: !1770, line: 154, type: !745)
!10862 = !DILocalVariable(name: "idle", arg: 2, scope: !10857, file: !1770, line: 154, type: !157)
!10863 = !DILocalVariable(name: "delay", scope: !10857, file: !1770, line: 169, type: !121)
!10864 = !DILocalVariable(name: "val1", scope: !10857, file: !1770, line: 170, type: !121)
!10865 = !DILocalVariable(name: "val2", scope: !10857, file: !1770, line: 170, type: !121)
!10866 = !DILocalVariable(name: "last_load_", scope: !10857, file: !1770, line: 171, type: !121)
!10867 = !DILocalVariable(name: "key", scope: !10857, file: !1770, line: 176, type: !10868)
!10868 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !10869)
!10869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !10870)
!10870 = !{!10871}
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10869, file: !316, line: 33, baseType: !103, size: 32)
!10872 = !DILocalVariable(name: "pending", scope: !10857, file: !1770, line: 178, type: !121)
!10873 = !DILocalVariable(name: "unannounced", scope: !10857, file: !1770, line: 185, type: !121)
!10874 = !DILocation(line: 0, scope: !10857)
!10875 = !DILocation(line: 162, column: 49, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10857, file: !1770, line: 162, column: 6)
!10877 = !DILocation(line: 163, column: 17, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10876, file: !1770, line: 162, column: 78)
!10879 = !DILocation(line: 164, column: 13, scope: !10878)
!10880 = !DILocation(line: 165, column: 3, scope: !10878)
!10881 = !DILocation(line: 171, column: 24, scope: !10857)
!10882 = !DILocation(line: 173, column: 10, scope: !10857)
!10883 = !DILocation(line: 174, column: 10, scope: !10857)
!10884 = !DILocalVariable(name: "l", arg: 1, scope: !10885, file: !316, line: 136, type: !10888)
!10885 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !10886, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10889)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{!10868, !10888}
!10888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!10889 = !{!10884, !10890}
!10890 = !DILocalVariable(name: "k", scope: !10885, file: !316, line: 139, type: !10868)
!10891 = !DILocation(line: 0, scope: !10885, inlinedAt: !10892)
!10892 = distinct !DILocation(line: 176, column: 25, scope: !10857)
!10893 = !DILocation(line: 55, column: 2, scope: !10894, inlinedAt: !10898)
!10894 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10895)
!10895 = !{!10896, !10897}
!10896 = !DILocalVariable(name: "key", scope: !10894, file: !5739, line: 44, type: !32)
!10897 = !DILocalVariable(name: "tmp", scope: !10894, file: !5739, line: 53, type: !32)
!10898 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !10892)
!10899 = !{i64 2220881}
!10900 = !DILocation(line: 0, scope: !10894, inlinedAt: !10898)
!10901 = !DILocation(line: 178, column: 21, scope: !10857)
!10902 = !DILocation(line: 180, column: 18, scope: !10857)
!10903 = !DILocation(line: 182, column: 14, scope: !10857)
!10904 = !DILocation(line: 183, column: 15, scope: !10857)
!10905 = !DILocation(line: 185, column: 39, scope: !10857)
!10906 = !DILocation(line: 185, column: 37, scope: !10857)
!10907 = !DILocation(line: 187, column: 27, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10857, file: !1770, line: 187, column: 6)
!10909 = !DILocation(line: 187, column: 6, scope: !10857)
!10910 = !DILocation(line: 202, column: 27, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10908, file: !1770, line: 195, column: 9)
!10912 = !DILocation(line: 202, column: 48, scope: !10911)
!10913 = !DILocation(line: 203, column: 9, scope: !10911)
!10914 = !DILocation(line: 204, column: 11, scope: !10911)
!10915 = !DILocation(line: 205, column: 13, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10911, file: !1770, line: 205, column: 7)
!10917 = !DILocation(line: 205, column: 7, scope: !10911)
!10918 = !DILocation(line: 0, scope: !10908)
!10919 = !DILocation(line: 212, column: 18, scope: !10857)
!10920 = !DILocation(line: 214, column: 28, scope: !10857)
!10921 = !DILocation(line: 214, column: 16, scope: !10857)
!10922 = !DILocation(line: 215, column: 15, scope: !10857)
!10923 = !DILocation(line: 227, column: 11, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10857, file: !1770, line: 227, column: 6)
!10925 = !DILocation(line: 227, column: 6, scope: !10857)
!10926 = !DILocation(line: 228, column: 15, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10924, file: !1770, line: 227, column: 19)
!10928 = !DILocation(line: 228, column: 38, scope: !10927)
!10929 = !DILocation(line: 228, column: 24, scope: !10927)
!10930 = !DILocation(line: 229, column: 2, scope: !10927)
!10931 = !DILocation(line: 230, column: 24, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10924, file: !1770, line: 229, column: 9)
!10933 = !DILocation(line: 230, column: 15, scope: !10932)
!10934 = !DILocation(line: 0, scope: !10924)
!10935 = !DILocalVariable(name: "key", arg: 2, scope: !10936, file: !316, line: 190, type: !10868)
!10936 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !10937, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10939)
!10937 = !DISubroutineType(types: !10938)
!10938 = !{null, !10888, !10868}
!10939 = !{!10940, !10935}
!10940 = !DILocalVariable(name: "l", arg: 1, scope: !10936, file: !316, line: 189, type: !10888)
!10941 = !DILocation(line: 0, scope: !10936, inlinedAt: !10942)
!10942 = distinct !DILocation(line: 232, column: 2, scope: !10857)
!10943 = !DILocalVariable(name: "key", arg: 1, scope: !10944, file: !5739, line: 84, type: !32)
!10944 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10945)
!10945 = !{!10943}
!10946 = !DILocation(line: 0, scope: !10944, inlinedAt: !10947)
!10947 = distinct !DILocation(line: 215, column: 2, scope: !10936, inlinedAt: !10942)
!10948 = !DILocation(line: 95, column: 2, scope: !10944, inlinedAt: !10947)
!10949 = !{i64 2221698}
!10950 = !DILocation(line: 234, column: 1, scope: !10857)
!10951 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1770, file: !1770, line: 236, type: !6035, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10952)
!10952 = !{!10953, !10954}
!10953 = !DILocalVariable(name: "key", scope: !10951, file: !1770, line: 242, type: !10868)
!10954 = !DILocalVariable(name: "cyc", scope: !10951, file: !1770, line: 243, type: !121)
!10955 = !DILocation(line: 0, scope: !10885, inlinedAt: !10956)
!10956 = distinct !DILocation(line: 242, column: 25, scope: !10951)
!10957 = !DILocation(line: 55, column: 2, scope: !10894, inlinedAt: !10958)
!10958 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !10956)
!10959 = !DILocation(line: 0, scope: !10894, inlinedAt: !10958)
!10960 = !DILocation(line: 0, scope: !10951)
!10961 = !DILocation(line: 243, column: 17, scope: !10951)
!10962 = !DILocation(line: 243, column: 29, scope: !10951)
!10963 = !DILocation(line: 243, column: 27, scope: !10951)
!10964 = !DILocation(line: 243, column: 43, scope: !10951)
!10965 = !DILocation(line: 243, column: 41, scope: !10951)
!10966 = !DILocation(line: 0, scope: !10936, inlinedAt: !10967)
!10967 = distinct !DILocation(line: 245, column: 2, scope: !10951)
!10968 = !DILocation(line: 0, scope: !10944, inlinedAt: !10969)
!10969 = distinct !DILocation(line: 215, column: 2, scope: !10936, inlinedAt: !10967)
!10970 = !DILocation(line: 95, column: 2, scope: !10944, inlinedAt: !10969)
!10971 = !DILocation(line: 246, column: 13, scope: !10951)
!10972 = !DILocation(line: 246, column: 2, scope: !10951)
!10973 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1770, file: !1770, line: 249, type: !6035, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !10974)
!10974 = !{!10975, !10976}
!10975 = !DILocalVariable(name: "key", scope: !10973, file: !1770, line: 251, type: !10868)
!10976 = !DILocalVariable(name: "ret", scope: !10973, file: !1770, line: 252, type: !121)
!10977 = !DILocation(line: 0, scope: !10885, inlinedAt: !10978)
!10978 = distinct !DILocation(line: 251, column: 25, scope: !10973)
!10979 = !DILocation(line: 55, column: 2, scope: !10894, inlinedAt: !10980)
!10980 = distinct !DILocation(line: 145, column: 10, scope: !10885, inlinedAt: !10978)
!10981 = !DILocation(line: 0, scope: !10894, inlinedAt: !10980)
!10982 = !DILocation(line: 0, scope: !10973)
!10983 = !DILocation(line: 252, column: 17, scope: !10973)
!10984 = !DILocation(line: 252, column: 29, scope: !10973)
!10985 = !DILocation(line: 252, column: 27, scope: !10973)
!10986 = !DILocation(line: 0, scope: !10936, inlinedAt: !10987)
!10987 = distinct !DILocation(line: 254, column: 2, scope: !10973)
!10988 = !DILocation(line: 0, scope: !10944, inlinedAt: !10989)
!10989 = distinct !DILocation(line: 215, column: 2, scope: !10936, inlinedAt: !10987)
!10990 = !DILocation(line: 95, column: 2, scope: !10944, inlinedAt: !10989)
!10991 = !DILocation(line: 255, column: 2, scope: !10973)
!10992 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1770, file: !1770, line: 258, type: !3174, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !317)
!10993 = !DILocation(line: 260, column: 6, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10992, file: !1770, line: 260, column: 6)
!10995 = !DILocation(line: 260, column: 16, scope: !10994)
!10996 = !DILocation(line: 260, column: 6, scope: !10992)
!10997 = !DILocation(line: 261, column: 17, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10994, file: !1770, line: 260, column: 34)
!10999 = !DILocation(line: 262, column: 2, scope: !10998)
!11000 = !DILocation(line: 263, column: 1, scope: !10992)
!11001 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1770, file: !1770, line: 265, type: !3174, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !317)
!11002 = !DILocation(line: 267, column: 16, scope: !11001)
!11003 = !DILocation(line: 268, column: 1, scope: !11001)
!11004 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11005, file: !11005, line: 9, type: !11006, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2940, retainedNodes: !11029)
!11005 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!103, !11008, !154, !11028}
!11008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11009, size: 32)
!11009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11010)
!11010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1628, line: 60, size: 64, elements: !11011)
!11011 = !{!11012, !11027}
!11012 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11010, file: !1628, line: 69, baseType: !11013, size: 32)
!11013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11014, size: 32)
!11014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11015)
!11015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1628, line: 50, size: 64, elements: !11016)
!11016 = !{!11017, !11025, !11026}
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11015, file: !1628, line: 52, baseType: !11018, size: 32)
!11018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11019, size: 32)
!11019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11020)
!11020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1639, line: 37, baseType: !11021)
!11021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1639, line: 32, size: 64, elements: !11022)
!11022 = !{!11023, !11024}
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11021, file: !1639, line: 34, baseType: !121, size: 32)
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11021, file: !1639, line: 36, baseType: !121, size: 32, offset: 32)
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11015, file: !1628, line: 54, baseType: !154, size: 8, offset: 32)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11015, file: !1628, line: 56, baseType: !154, size: 8, offset: 40)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11010, file: !1628, line: 71, baseType: !154, size: 8, offset: 32)
!11028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11013, size: 32)
!11029 = !{!11030, !11031, !11032}
!11030 = !DILocalVariable(name: "config", arg: 1, scope: !11004, file: !11005, line: 9, type: !11008)
!11031 = !DILocalVariable(name: "id", arg: 2, scope: !11004, file: !11005, line: 9, type: !154)
!11032 = !DILocalVariable(name: "state", arg: 3, scope: !11004, file: !11005, line: 10, type: !11028)
!11033 = !DILocation(line: 0, scope: !11004)
!11034 = !DILocation(line: 12, column: 20, scope: !11004)
!11035 = !DILocation(line: 13, column: 27, scope: !11004)
!11036 = !DILocation(line: 13, column: 42, scope: !11004)
!11037 = !DILocation(line: 13, column: 19, scope: !11004)
!11038 = !DILocation(line: 13, column: 16, scope: !11004)
!11039 = !DILocation(line: 13, column: 2, scope: !11004)
!11040 = distinct !{!11040, !11039, !11041}
!11041 = !DILocation(line: 19, column: 2, scope: !11004)
!11042 = !DILocation(line: 14, column: 23, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !11005, line: 14, column: 7)
!11044 = distinct !DILexicalBlock(scope: !11004, file: !11005, line: 13, column: 54)
!11045 = !DILocation(line: 14, column: 10, scope: !11043)
!11046 = !DILocation(line: 18, column: 11, scope: !11044)
!11047 = !DILocation(line: 14, column: 7, scope: !11044)
!11048 = !DILocation(line: 22, column: 1, scope: !11004)
!11049 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1887, file: !1887, line: 193, type: !11050, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1805, retainedNodes: !11059)
!11050 = !DISubroutineType(types: !11051)
!11051 = !{!103, !11052, !154, !22}
!11052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11053, size: 32)
!11053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11054)
!11054 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1639, line: 37, baseType: !11055)
!11055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1639, line: 32, size: 64, elements: !11056)
!11056 = !{!11057, !11058}
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11055, file: !1639, line: 34, baseType: !121, size: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11055, file: !1639, line: 36, baseType: !121, size: 32, offset: 32)
!11059 = !{!11060, !11061, !11062, !11063, !11064, !11065, !11066, !11067, !11069}
!11060 = !DILocalVariable(name: "pins", arg: 1, scope: !11049, file: !1887, line: 193, type: !11052)
!11061 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11049, file: !1887, line: 193, type: !154)
!11062 = !DILocalVariable(name: "reg", arg: 3, scope: !11049, file: !1887, line: 194, type: !22)
!11063 = !DILocalVariable(name: "pin", scope: !11049, file: !1887, line: 196, type: !121)
!11064 = !DILocalVariable(name: "mux", scope: !11049, file: !1887, line: 196, type: !121)
!11065 = !DILocalVariable(name: "pin_cgf", scope: !11049, file: !1887, line: 197, type: !121)
!11066 = !DILocalVariable(name: "ret", scope: !11049, file: !1887, line: 198, type: !103)
!11067 = !DILocalVariable(name: "i", scope: !11068, file: !1887, line: 209, type: !154)
!11068 = distinct !DILexicalBlock(scope: !11049, file: !1887, line: 209, column: 2)
!11069 = !DILocalVariable(name: "gpio_out", scope: !11070, file: !1887, line: 239, type: !121)
!11070 = distinct !DILexicalBlock(scope: !11071, file: !1887, line: 238, column: 55)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !1887, line: 238, column: 14)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !1887, line: 236, column: 14)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !1887, line: 234, column: 7)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !1887, line: 209, column: 41)
!11075 = distinct !DILexicalBlock(scope: !11068, file: !1887, line: 209, column: 2)
!11076 = !DILocation(line: 0, scope: !11049)
!11077 = !DILocation(line: 0, scope: !11068)
!11078 = !DILocation(line: 209, column: 25, scope: !11075)
!11079 = !DILocation(line: 209, column: 2, scope: !11068)
!11080 = distinct !{!11080, !11079, !11081}
!11081 = !DILocation(line: 259, column: 2, scope: !11068)
!11082 = !DILocation(line: 210, column: 17, scope: !11074)
!11083 = !DILocation(line: 234, column: 7, scope: !11073)
!11084 = !DILocation(line: 234, column: 33, scope: !11073)
!11085 = !DILocation(line: 234, column: 7, scope: !11074)
!11086 = !DILocation(line: 235, column: 22, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11073, file: !1887, line: 234, column: 49)
!11088 = !DILocation(line: 235, column: 29, scope: !11087)
!11089 = !DILocation(line: 236, column: 3, scope: !11087)
!11090 = !DILocation(line: 236, column: 14, scope: !11073)
!11091 = !DILocation(line: 239, column: 32, scope: !11070)
!11092 = !DILocation(line: 0, scope: !11070)
!11093 = !DILocation(line: 241, column: 8, scope: !11070)
!11094 = !DILocation(line: 246, column: 3, scope: !11070)
!11095 = !DILocation(line: 252, column: 9, scope: !11074)
!11096 = !DILocation(line: 255, column: 9, scope: !11074)
!11097 = !DILocation(line: 256, column: 11, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11074, file: !1887, line: 256, column: 7)
!11099 = !DILocation(line: 209, column: 37, scope: !11075)
!11100 = !DILocation(line: 256, column: 7, scope: !11074)
!11101 = !DILocation(line: 262, column: 1, scope: !11049)
!11102 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1887, file: !1887, line: 176, type: !11103, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1805, retainedNodes: !11105)
!11103 = !DISubroutineType(types: !11104)
!11104 = !{!103, !121, !121, !121}
!11105 = !{!11106, !11107, !11108, !11109}
!11106 = !DILocalVariable(name: "pin", arg: 1, scope: !11102, file: !1887, line: 176, type: !121)
!11107 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11102, file: !1887, line: 176, type: !121)
!11108 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11102, file: !1887, line: 176, type: !121)
!11109 = !DILocalVariable(name: "port_device", scope: !11102, file: !1887, line: 178, type: !1817)
!11110 = !DILocation(line: 0, scope: !11102)
!11111 = !DILocation(line: 180, column: 22, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11102, file: !1887, line: 180, column: 6)
!11113 = !DILocation(line: 180, column: 6, scope: !11102)
!11114 = !DILocation(line: 180, column: 6, scope: !11112)
!11115 = !DILocation(line: 184, column: 16, scope: !11102)
!11116 = !DILocation(line: 186, column: 19, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11102, file: !1887, line: 186, column: 6)
!11118 = !DILocation(line: 186, column: 28, scope: !11117)
!11119 = !DILocation(line: 186, column: 33, scope: !11117)
!11120 = !DILocation(line: 186, column: 6, scope: !11102)
!11121 = !DILocation(line: 190, column: 43, scope: !11102)
!11122 = !DILocation(line: 190, column: 9, scope: !11102)
!11123 = !DILocation(line: 190, column: 2, scope: !11102)
!11124 = !DILocation(line: 191, column: 1, scope: !11102)
!11125 = distinct !DISubprogram(name: "device_is_ready", scope: !8161, file: !8161, line: 47, type: !11126, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1805, retainedNodes: !11128)
!11126 = !DISubroutineType(types: !11127)
!11127 = !{!157, !1817}
!11128 = !{!11129}
!11129 = !DILocalVariable(name: "dev", arg: 1, scope: !11125, file: !8161, line: 47, type: !1817)
!11130 = !DILocation(line: 0, scope: !11125)
!11131 = !DILocation(line: 55, column: 2, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11125, file: !8161, line: 55, column: 2)
!11133 = !{i64 2149458951}
!11134 = !DILocation(line: 56, column: 9, scope: !11125)
!11135 = !DILocation(line: 56, column: 2, scope: !11125)
!11136 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !11126, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1805, retainedNodes: !11137)
!11137 = !{!11138}
!11138 = !DILocalVariable(name: "dev", arg: 1, scope: !11136, file: !141, line: 730, type: !1817)
!11139 = !DILocation(line: 0, scope: !11136)
!11140 = !DILocation(line: 732, column: 9, scope: !11136)
!11141 = !DILocation(line: 732, column: 2, scope: !11136)
!11142 = distinct !DISubprogram(name: "SystemInit", scope: !1936, file: !1936, line: 167, type: !3174, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !317)
!11143 = !DILocation(line: 182, column: 1, scope: !11142)
!11144 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1936, file: !1936, line: 220, type: !3174, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !11145)
!11145 = !{!11146, !11147, !11148, !11149, !11150}
!11146 = !DILocalVariable(name: "tmp", scope: !11144, file: !1936, line: 222, type: !121)
!11147 = !DILocalVariable(name: "pllvco", scope: !11144, file: !1936, line: 222, type: !121)
!11148 = !DILocalVariable(name: "pllp", scope: !11144, file: !1936, line: 222, type: !121)
!11149 = !DILocalVariable(name: "pllsource", scope: !11144, file: !1936, line: 222, type: !121)
!11150 = !DILocalVariable(name: "pllm", scope: !11144, file: !1936, line: 222, type: !121)
!11151 = !DILocation(line: 0, scope: !11144)
!11152 = !DILocation(line: 225, column: 14, scope: !11144)
!11153 = !DILocation(line: 225, column: 19, scope: !11144)
!11154 = !DILocation(line: 227, column: 3, scope: !11144)
!11155 = !DILocation(line: 240, column: 25, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11144, file: !1936, line: 228, column: 3)
!11157 = !DILocation(line: 241, column: 19, scope: !11156)
!11158 = !DILocation(line: 241, column: 27, scope: !11156)
!11159 = !DILocation(line: 0, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11156, file: !1936, line: 243, column: 11)
!11161 = !DILocation(line: 254, column: 22, scope: !11156)
!11162 = !DILocation(line: 254, column: 62, scope: !11156)
!11163 = !DILocation(line: 255, column: 31, scope: !11156)
!11164 = !DILocation(line: 256, column: 7, scope: !11156)
!11165 = !DILocation(line: 0, scope: !11156)
!11166 = !DILocation(line: 263, column: 30, scope: !11144)
!11167 = !DILocation(line: 263, column: 52, scope: !11144)
!11168 = !DILocation(line: 263, column: 9, scope: !11144)
!11169 = !DILocation(line: 265, column: 19, scope: !11144)
!11170 = !DILocation(line: 266, column: 1, scope: !11144)
!11171 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11172, file: !11172, line: 200, type: !11173, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11173 = !DISubroutineType(types: !11174)
!11174 = !{!11175}
!11175 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2946, line: 44, baseType: !2945)
!11176 = !DILocation(line: 202, column: 3, scope: !11171)
!11177 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11172, file: !11172, line: 219, type: !11178, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !11203)
!11178 = !DISubroutineType(types: !11179)
!11179 = !{!11175, !11180}
!11180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11181, size: 32)
!11181 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11182, line: 70, baseType: !11183)
!11182 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11182, line: 49, size: 416, elements: !11184)
!11184 = !{!11185, !11186, !11187, !11188, !11189, !11190, !11191}
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11183, file: !11182, line: 51, baseType: !121, size: 32)
!11186 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11183, file: !11182, line: 54, baseType: !121, size: 32, offset: 32)
!11187 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11183, file: !11182, line: 57, baseType: !121, size: 32, offset: 64)
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11183, file: !11182, line: 60, baseType: !121, size: 32, offset: 96)
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11183, file: !11182, line: 63, baseType: !121, size: 32, offset: 128)
!11190 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11183, file: !11182, line: 66, baseType: !121, size: 32, offset: 160)
!11191 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11183, file: !11182, line: 69, baseType: !11192, size: 224, offset: 192)
!11192 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11193, line: 73, baseType: !11194)
!11193 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11193, line: 45, size: 224, elements: !11195)
!11195 = !{!11196, !11197, !11198, !11199, !11200, !11201, !11202}
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11194, file: !11193, line: 47, baseType: !121, size: 32)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11194, file: !11193, line: 50, baseType: !121, size: 32, offset: 32)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11194, file: !11193, line: 53, baseType: !121, size: 32, offset: 64)
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11194, file: !11193, line: 56, baseType: !121, size: 32, offset: 96)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11194, file: !11193, line: 60, baseType: !121, size: 32, offset: 128)
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11194, file: !11193, line: 63, baseType: !121, size: 32, offset: 160)
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11194, file: !11193, line: 68, baseType: !121, size: 32, offset: 192)
!11203 = !{!11204, !11205, !11206, !11207, !11211}
!11204 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11177, file: !11172, line: 219, type: !11180)
!11205 = !DILocalVariable(name: "tickstart", scope: !11177, file: !11172, line: 221, type: !121)
!11206 = !DILocalVariable(name: "pll_config", scope: !11177, file: !11172, line: 221, type: !121)
!11207 = !DILocalVariable(name: "pwrclkchanged", scope: !11208, file: !11172, line: 391, type: !11210)
!11208 = distinct !DILexicalBlock(scope: !11209, file: !11172, line: 390, column: 3)
!11209 = distinct !DILexicalBlock(scope: !11177, file: !11172, line: 389, column: 6)
!11210 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !810, line: 188, baseType: !2952)
!11211 = !DILocalVariable(name: "tmpreg", scope: !11212, file: !11172, line: 400, type: !120)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !11172, line: 400, column: 7)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !11172, line: 399, column: 5)
!11214 = distinct !DILexicalBlock(scope: !11208, file: !11172, line: 398, column: 8)
!11215 = !DILocation(line: 0, scope: !11177)
!11216 = !DILocation(line: 224, column: 24, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11177, file: !11172, line: 224, column: 6)
!11218 = !DILocation(line: 224, column: 6, scope: !11177)
!11219 = !DILocation(line: 232, column: 27, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11177, file: !11172, line: 232, column: 6)
!11221 = !DILocation(line: 232, column: 43, scope: !11220)
!11222 = !DILocation(line: 232, column: 69, scope: !11220)
!11223 = !DILocation(line: 232, column: 6, scope: !11177)
!11224 = !DILocation(line: 237, column: 9, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !11172, line: 237, column: 8)
!11226 = distinct !DILexicalBlock(scope: !11220, file: !11172, line: 233, column: 3)
!11227 = !DILocation(line: 237, column: 39, scope: !11225)
!11228 = !DILocation(line: 237, column: 60, scope: !11225)
!11229 = !DILocation(line: 238, column: 9, scope: !11225)
!11230 = !DILocation(line: 238, column: 39, scope: !11225)
!11231 = !DILocation(line: 238, column: 60, scope: !11225)
!11232 = !DILocation(line: 238, column: 70, scope: !11225)
!11233 = !DILocation(line: 238, column: 78, scope: !11225)
!11234 = !DILocation(line: 238, column: 100, scope: !11225)
!11235 = !DILocation(line: 237, column: 8, scope: !11226)
!11236 = !DILocation(line: 240, column: 11, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !11172, line: 240, column: 10)
!11238 = distinct !DILexicalBlock(scope: !11225, file: !11172, line: 239, column: 5)
!11239 = !DILocation(line: 240, column: 57, scope: !11237)
!11240 = !DILocation(line: 240, column: 80, scope: !11237)
!11241 = !DILocation(line: 240, column: 89, scope: !11237)
!11242 = !DILocation(line: 240, column: 10, scope: !11238)
!11243 = !DILocation(line: 248, column: 7, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11245, file: !11172, line: 248, column: 7)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !11172, line: 248, column: 7)
!11246 = distinct !DILexicalBlock(scope: !11225, file: !11172, line: 246, column: 5)
!11247 = !DILocation(line: 248, column: 7, scope: !11245)
!11248 = !DILocation(line: 248, column: 7, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11244, file: !11172, line: 248, column: 7)
!11250 = !DILocation(line: 248, column: 7, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !11172, line: 248, column: 7)
!11252 = distinct !DILexicalBlock(scope: !11244, file: !11172, line: 248, column: 7)
!11253 = !DILocation(line: 248, column: 7, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11252, file: !11172, line: 248, column: 7)
!11255 = !DILocation(line: 0, scope: !11244)
!11256 = !DILocation(line: 251, column: 30, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11246, file: !11172, line: 251, column: 10)
!11258 = !DILocation(line: 251, column: 40, scope: !11257)
!11259 = !DILocation(line: 0, scope: !11257)
!11260 = !DILocation(line: 251, column: 10, scope: !11246)
!11261 = !DILocation(line: 257, column: 15, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11257, file: !11172, line: 252, column: 7)
!11263 = !DILocation(line: 257, column: 51, scope: !11262)
!11264 = !DILocation(line: 257, column: 9, scope: !11262)
!11265 = !DILocation(line: 259, column: 15, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !11172, line: 259, column: 14)
!11267 = distinct !DILexicalBlock(scope: !11262, file: !11172, line: 258, column: 9)
!11268 = !DILocation(line: 259, column: 29, scope: !11266)
!11269 = !DILocation(line: 259, column: 43, scope: !11266)
!11270 = !DILocation(line: 259, column: 14, scope: !11267)
!11271 = distinct !{!11271, !11264, !11272}
!11272 = !DILocation(line: 263, column: 9, scope: !11262)
!11273 = !DILocation(line: 271, column: 15, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11257, file: !11172, line: 266, column: 7)
!11275 = !DILocation(line: 271, column: 9, scope: !11274)
!11276 = !DILocation(line: 273, column: 15, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11278, file: !11172, line: 273, column: 14)
!11278 = distinct !DILexicalBlock(scope: !11274, file: !11172, line: 272, column: 9)
!11279 = !DILocation(line: 273, column: 29, scope: !11277)
!11280 = !DILocation(line: 273, column: 43, scope: !11277)
!11281 = !DILocation(line: 273, column: 14, scope: !11278)
!11282 = distinct !{!11282, !11275, !11283}
!11283 = !DILocation(line: 277, column: 9, scope: !11274)
!11284 = !DILocation(line: 282, column: 27, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11177, file: !11172, line: 282, column: 6)
!11286 = !DILocation(line: 282, column: 43, scope: !11285)
!11287 = !DILocation(line: 282, column: 69, scope: !11285)
!11288 = !DILocation(line: 282, column: 6, scope: !11177)
!11289 = !DILocation(line: 289, column: 9, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !11172, line: 289, column: 8)
!11291 = distinct !DILexicalBlock(scope: !11285, file: !11172, line: 283, column: 3)
!11292 = !DILocation(line: 289, column: 39, scope: !11290)
!11293 = !DILocation(line: 289, column: 60, scope: !11290)
!11294 = !DILocation(line: 290, column: 9, scope: !11290)
!11295 = !DILocation(line: 290, column: 39, scope: !11290)
!11296 = !DILocation(line: 290, column: 60, scope: !11290)
!11297 = !DILocation(line: 290, column: 70, scope: !11290)
!11298 = !DILocation(line: 290, column: 78, scope: !11290)
!11299 = !DILocation(line: 290, column: 100, scope: !11290)
!11300 = !DILocation(line: 289, column: 8, scope: !11291)
!11301 = !DILocation(line: 293, column: 11, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11303, file: !11172, line: 293, column: 10)
!11303 = distinct !DILexicalBlock(scope: !11290, file: !11172, line: 291, column: 5)
!11304 = !DILocation(line: 293, column: 57, scope: !11302)
!11305 = !DILocation(line: 293, column: 80, scope: !11302)
!11306 = !DILocation(line: 293, column: 89, scope: !11302)
!11307 = !DILocation(line: 293, column: 10, scope: !11303)
!11308 = !DILocation(line: 307, column: 30, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !11172, line: 307, column: 10)
!11310 = distinct !DILexicalBlock(scope: !11290, file: !11172, line: 305, column: 5)
!11311 = !DILocation(line: 307, column: 39, scope: !11309)
!11312 = !DILocation(line: 307, column: 10, scope: !11310)
!11313 = !DILocation(line: 310, column: 9, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11309, file: !11172, line: 308, column: 7)
!11315 = !DILocation(line: 313, column: 21, scope: !11314)
!11316 = !DILocation(line: 316, column: 9, scope: !11314)
!11317 = !DILocation(line: 316, column: 15, scope: !11314)
!11318 = !DILocation(line: 316, column: 51, scope: !11314)
!11319 = !DILocation(line: 318, column: 15, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !11172, line: 318, column: 14)
!11321 = distinct !DILexicalBlock(scope: !11314, file: !11172, line: 317, column: 9)
!11322 = !DILocation(line: 318, column: 29, scope: !11320)
!11323 = !DILocation(line: 318, column: 43, scope: !11320)
!11324 = !DILocation(line: 318, column: 14, scope: !11321)
!11325 = distinct !{!11325, !11316, !11326}
!11326 = !DILocation(line: 322, column: 9, scope: !11314)
!11327 = !DILocation(line: 330, column: 9, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11309, file: !11172, line: 328, column: 7)
!11329 = !DILocation(line: 333, column: 21, scope: !11328)
!11330 = !DILocation(line: 336, column: 9, scope: !11328)
!11331 = !DILocation(line: 336, column: 15, scope: !11328)
!11332 = !DILocation(line: 338, column: 15, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !11172, line: 338, column: 14)
!11334 = distinct !DILexicalBlock(scope: !11328, file: !11172, line: 337, column: 9)
!11335 = !DILocation(line: 338, column: 29, scope: !11333)
!11336 = !DILocation(line: 338, column: 43, scope: !11333)
!11337 = !DILocation(line: 338, column: 14, scope: !11334)
!11338 = distinct !{!11338, !11330, !11339}
!11339 = !DILocation(line: 342, column: 9, scope: !11328)
!11340 = !DILocation(line: 0, scope: !11290)
!11341 = !DILocation(line: 347, column: 27, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11177, file: !11172, line: 347, column: 6)
!11343 = !DILocation(line: 347, column: 43, scope: !11342)
!11344 = !DILocation(line: 347, column: 69, scope: !11342)
!11345 = !DILocation(line: 347, column: 6, scope: !11177)
!11346 = !DILocation(line: 353, column: 28, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !11172, line: 353, column: 8)
!11348 = distinct !DILexicalBlock(scope: !11342, file: !11172, line: 348, column: 3)
!11349 = !DILocation(line: 353, column: 37, scope: !11347)
!11350 = !DILocation(line: 353, column: 8, scope: !11348)
!11351 = !DILocation(line: 356, column: 7, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11347, file: !11172, line: 354, column: 5)
!11353 = !DILocation(line: 359, column: 19, scope: !11352)
!11354 = !DILocation(line: 362, column: 7, scope: !11352)
!11355 = !DILocation(line: 362, column: 13, scope: !11352)
!11356 = !DILocation(line: 362, column: 49, scope: !11352)
!11357 = !DILocation(line: 364, column: 13, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !11172, line: 364, column: 12)
!11359 = distinct !DILexicalBlock(scope: !11352, file: !11172, line: 363, column: 7)
!11360 = !DILocation(line: 364, column: 27, scope: !11358)
!11361 = !DILocation(line: 364, column: 41, scope: !11358)
!11362 = !DILocation(line: 364, column: 12, scope: !11359)
!11363 = distinct !{!11363, !11354, !11364}
!11364 = !DILocation(line: 368, column: 7, scope: !11352)
!11365 = !DILocation(line: 373, column: 7, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11347, file: !11172, line: 371, column: 5)
!11367 = !DILocation(line: 376, column: 19, scope: !11366)
!11368 = !DILocation(line: 379, column: 7, scope: !11366)
!11369 = !DILocation(line: 379, column: 13, scope: !11366)
!11370 = !DILocation(line: 381, column: 13, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !11172, line: 381, column: 12)
!11372 = distinct !DILexicalBlock(scope: !11366, file: !11172, line: 380, column: 7)
!11373 = !DILocation(line: 381, column: 27, scope: !11371)
!11374 = !DILocation(line: 381, column: 41, scope: !11371)
!11375 = !DILocation(line: 381, column: 12, scope: !11372)
!11376 = distinct !{!11376, !11368, !11377}
!11377 = !DILocation(line: 385, column: 7, scope: !11366)
!11378 = !DILocation(line: 389, column: 27, scope: !11209)
!11379 = !DILocation(line: 389, column: 43, scope: !11209)
!11380 = !DILocation(line: 389, column: 69, scope: !11209)
!11381 = !DILocation(line: 389, column: 6, scope: !11177)
!11382 = !DILocation(line: 0, scope: !11208)
!11383 = !DILocation(line: 398, column: 8, scope: !11214)
!11384 = !DILocation(line: 398, column: 8, scope: !11208)
!11385 = !DILocation(line: 400, column: 7, scope: !11212)
!11386 = !DILocation(line: 400, column: 7, scope: !11213)
!11387 = !DILocation(line: 402, column: 5, scope: !11213)
!11388 = !DILocation(line: 404, column: 8, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11208, file: !11172, line: 404, column: 8)
!11390 = !DILocation(line: 404, column: 8, scope: !11208)
!11391 = !DILocation(line: 407, column: 7, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11389, file: !11172, line: 405, column: 5)
!11393 = !DILocation(line: 410, column: 19, scope: !11392)
!11394 = !DILocation(line: 412, column: 7, scope: !11392)
!11395 = !DILocation(line: 412, column: 13, scope: !11392)
!11396 = !DILocation(line: 414, column: 13, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !11172, line: 414, column: 12)
!11398 = distinct !DILexicalBlock(scope: !11392, file: !11172, line: 413, column: 7)
!11399 = !DILocation(line: 414, column: 27, scope: !11397)
!11400 = !DILocation(line: 414, column: 40, scope: !11397)
!11401 = !DILocation(line: 414, column: 12, scope: !11398)
!11402 = distinct !{!11402, !11394, !11403}
!11403 = !DILocation(line: 418, column: 7, scope: !11392)
!11404 = !DILocation(line: 422, column: 5, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !11172, line: 422, column: 5)
!11406 = distinct !DILexicalBlock(scope: !11208, file: !11172, line: 422, column: 5)
!11407 = !DILocation(line: 422, column: 5, scope: !11406)
!11408 = !DILocation(line: 422, column: 5, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11405, file: !11172, line: 422, column: 5)
!11410 = !DILocation(line: 422, column: 5, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !11172, line: 422, column: 5)
!11412 = distinct !DILexicalBlock(scope: !11405, file: !11172, line: 422, column: 5)
!11413 = !DILocation(line: 422, column: 5, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11412, file: !11172, line: 422, column: 5)
!11415 = !DILocation(line: 0, scope: !11405)
!11416 = !DILocation(line: 424, column: 28, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11208, file: !11172, line: 424, column: 8)
!11418 = !DILocation(line: 424, column: 38, scope: !11417)
!11419 = !DILocation(line: 0, scope: !11417)
!11420 = !DILocation(line: 424, column: 8, scope: !11208)
!11421 = !DILocation(line: 430, column: 13, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11417, file: !11172, line: 425, column: 5)
!11423 = !DILocation(line: 430, column: 49, scope: !11422)
!11424 = !DILocation(line: 430, column: 7, scope: !11422)
!11425 = !DILocation(line: 432, column: 13, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !11172, line: 432, column: 12)
!11427 = distinct !DILexicalBlock(scope: !11422, file: !11172, line: 431, column: 7)
!11428 = !DILocation(line: 432, column: 27, scope: !11426)
!11429 = !DILocation(line: 432, column: 41, scope: !11426)
!11430 = !DILocation(line: 432, column: 12, scope: !11427)
!11431 = distinct !{!11431, !11424, !11432}
!11432 = !DILocation(line: 436, column: 7, scope: !11422)
!11433 = !DILocation(line: 444, column: 13, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11417, file: !11172, line: 439, column: 5)
!11435 = !DILocation(line: 444, column: 7, scope: !11434)
!11436 = !DILocation(line: 446, column: 13, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !11172, line: 446, column: 12)
!11438 = distinct !DILexicalBlock(scope: !11434, file: !11172, line: 445, column: 7)
!11439 = !DILocation(line: 446, column: 27, scope: !11437)
!11440 = !DILocation(line: 446, column: 41, scope: !11437)
!11441 = !DILocation(line: 446, column: 12, scope: !11438)
!11442 = distinct !{!11442, !11435, !11443}
!11443 = !DILocation(line: 450, column: 7, scope: !11434)
!11444 = !DILocation(line: 454, column: 8, scope: !11208)
!11445 = !DILocation(line: 456, column: 7, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !11172, line: 455, column: 5)
!11447 = distinct !DILexicalBlock(scope: !11208, file: !11172, line: 454, column: 8)
!11448 = !DILocation(line: 457, column: 5, scope: !11446)
!11449 = !DILocation(line: 462, column: 31, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11177, file: !11172, line: 462, column: 7)
!11451 = !DILocation(line: 462, column: 41, scope: !11450)
!11452 = !DILocation(line: 462, column: 7, scope: !11177)
!11453 = !DILocation(line: 465, column: 8, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !11172, line: 465, column: 8)
!11455 = distinct !DILexicalBlock(scope: !11450, file: !11172, line: 463, column: 3)
!11456 = !DILocation(line: 465, column: 38, scope: !11454)
!11457 = !DILocation(line: 465, column: 8, scope: !11455)
!11458 = !DILocation(line: 467, column: 44, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11460, file: !11172, line: 467, column: 10)
!11460 = distinct !DILexicalBlock(scope: !11454, file: !11172, line: 466, column: 5)
!11461 = !DILocation(line: 0, scope: !11459)
!11462 = !DILocation(line: 467, column: 10, scope: !11460)
!11463 = !DILocation(line: 483, column: 15, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11459, file: !11172, line: 468, column: 7)
!11465 = !DILocation(line: 483, column: 9, scope: !11464)
!11466 = !DILocation(line: 485, column: 15, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !11172, line: 485, column: 14)
!11468 = distinct !DILexicalBlock(scope: !11464, file: !11172, line: 484, column: 9)
!11469 = !DILocation(line: 485, column: 29, scope: !11467)
!11470 = !DILocation(line: 485, column: 43, scope: !11467)
!11471 = !DILocation(line: 485, column: 14, scope: !11468)
!11472 = distinct !{!11472, !11465, !11473}
!11473 = !DILocation(line: 489, column: 9, scope: !11464)
!11474 = !DILocation(line: 492, column: 9, scope: !11464)
!11475 = !DILocation(line: 498, column: 9, scope: !11464)
!11476 = !DILocation(line: 501, column: 21, scope: !11464)
!11477 = !DILocation(line: 504, column: 9, scope: !11464)
!11478 = !DILocation(line: 504, column: 15, scope: !11464)
!11479 = !DILocation(line: 504, column: 51, scope: !11464)
!11480 = !DILocation(line: 506, column: 15, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !11172, line: 506, column: 14)
!11482 = distinct !DILexicalBlock(scope: !11464, file: !11172, line: 505, column: 9)
!11483 = !DILocation(line: 506, column: 29, scope: !11481)
!11484 = !DILocation(line: 506, column: 43, scope: !11481)
!11485 = !DILocation(line: 506, column: 14, scope: !11482)
!11486 = distinct !{!11486, !11477, !11487}
!11487 = !DILocation(line: 510, column: 9, scope: !11464)
!11488 = !DILocation(line: 521, column: 15, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11459, file: !11172, line: 513, column: 7)
!11490 = !DILocation(line: 521, column: 9, scope: !11489)
!11491 = !DILocation(line: 523, column: 15, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11493, file: !11172, line: 523, column: 14)
!11493 = distinct !DILexicalBlock(scope: !11489, file: !11172, line: 522, column: 9)
!11494 = !DILocation(line: 523, column: 29, scope: !11492)
!11495 = !DILocation(line: 523, column: 43, scope: !11492)
!11496 = !DILocation(line: 523, column: 14, scope: !11493)
!11497 = distinct !{!11497, !11490, !11498}
!11498 = !DILocation(line: 527, column: 9, scope: !11489)
!11499 = !DILocation(line: 533, column: 44, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !11172, line: 533, column: 10)
!11501 = distinct !DILexicalBlock(scope: !11454, file: !11172, line: 531, column: 5)
!11502 = !DILocation(line: 533, column: 10, scope: !11501)
!11503 = !DILocation(line: 540, column: 27, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11500, file: !11172, line: 538, column: 7)
!11505 = !DILocation(line: 543, column: 14, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11504, file: !11172, line: 542, column: 13)
!11507 = !DILocation(line: 543, column: 81, scope: !11506)
!11508 = !DILocation(line: 543, column: 55, scope: !11506)
!11509 = !DILocation(line: 543, column: 92, scope: !11506)
!11510 = !DILocation(line: 544, column: 14, scope: !11506)
!11511 = !DILocation(line: 544, column: 80, scope: !11506)
!11512 = !DILocation(line: 544, column: 53, scope: !11506)
!11513 = !DILocation(line: 544, column: 111, scope: !11506)
!11514 = !DILocation(line: 545, column: 14, scope: !11506)
!11515 = !DILocation(line: 545, column: 80, scope: !11506)
!11516 = !DILocation(line: 545, column: 86, scope: !11506)
!11517 = !DILocation(line: 545, column: 53, scope: !11506)
!11518 = !DILocation(line: 545, column: 111, scope: !11506)
!11519 = !DILocation(line: 546, column: 14, scope: !11506)
!11520 = !DILocation(line: 546, column: 82, scope: !11506)
!11521 = !DILocation(line: 546, column: 101, scope: !11506)
!11522 = !DILocation(line: 546, column: 53, scope: !11506)
!11523 = !DILocation(line: 546, column: 126, scope: !11506)
!11524 = !DILocation(line: 547, column: 14, scope: !11506)
!11525 = !DILocation(line: 547, column: 80, scope: !11506)
!11526 = !DILocation(line: 547, column: 85, scope: !11506)
!11527 = !DILocation(line: 547, column: 53, scope: !11506)
!11528 = !DILocation(line: 547, column: 111, scope: !11506)
!11529 = !DILocation(line: 548, column: 14, scope: !11506)
!11530 = !DILocation(line: 548, column: 80, scope: !11506)
!11531 = !DILocation(line: 548, column: 85, scope: !11506)
!11532 = !DILocation(line: 548, column: 53, scope: !11506)
!11533 = !DILocation(line: 542, column: 13, scope: !11504)
!11534 = !DILocation(line: 563, column: 3, scope: !11177)
!11535 = !DILocation(line: 564, column: 1, scope: !11177)
!11536 = !DISubprogram(name: "HAL_GetTick", scope: !11537, file: !11537, line: 234, type: !6035, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11537 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11538 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11172, file: !11172, line: 591, type: !11539, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !11550)
!11539 = !DISubroutineType(types: !11540)
!11540 = !{!11175, !11541, !121}
!11541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11542, size: 32)
!11542 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11182, line: 92, baseType: !11543)
!11543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11182, line: 75, size: 160, elements: !11544)
!11544 = !{!11545, !11546, !11547, !11548, !11549}
!11545 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11543, file: !11182, line: 77, baseType: !121, size: 32)
!11546 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11543, file: !11182, line: 80, baseType: !121, size: 32, offset: 32)
!11547 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11543, file: !11182, line: 83, baseType: !121, size: 32, offset: 64)
!11548 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11543, file: !11182, line: 86, baseType: !121, size: 32, offset: 96)
!11549 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11543, file: !11182, line: 89, baseType: !121, size: 32, offset: 128)
!11550 = !{!11551, !11552, !11553}
!11551 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11538, file: !11172, line: 591, type: !11541)
!11552 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11538, file: !11172, line: 591, type: !121)
!11553 = !DILocalVariable(name: "tickstart", scope: !11538, file: !11172, line: 593, type: !121)
!11554 = !DILocation(line: 0, scope: !11538)
!11555 = !DILocation(line: 596, column: 24, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11538, file: !11172, line: 596, column: 6)
!11557 = !DILocation(line: 596, column: 6, scope: !11538)
!11558 = !DILocation(line: 610, column: 17, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11538, file: !11172, line: 610, column: 6)
!11560 = !DILocation(line: 610, column: 15, scope: !11559)
!11561 = !DILocation(line: 610, column: 6, scope: !11538)
!11562 = !DILocation(line: 613, column: 5, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11559, file: !11172, line: 611, column: 3)
!11564 = !DILocation(line: 617, column: 8, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11563, file: !11172, line: 617, column: 8)
!11566 = !DILocation(line: 617, column: 34, scope: !11565)
!11567 = !DILocation(line: 617, column: 8, scope: !11563)
!11568 = !DILocation(line: 624, column: 27, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11538, file: !11172, line: 624, column: 6)
!11570 = !DILocation(line: 624, column: 38, scope: !11569)
!11571 = !DILocation(line: 624, column: 60, scope: !11569)
!11572 = !DILocation(line: 624, column: 6, scope: !11538)
!11573 = !DILocation(line: 628, column: 40, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11575, file: !11172, line: 628, column: 8)
!11575 = distinct !DILexicalBlock(scope: !11569, file: !11172, line: 625, column: 3)
!11576 = !DILocation(line: 628, column: 63, scope: !11574)
!11577 = !DILocation(line: 628, column: 8, scope: !11575)
!11578 = !DILocation(line: 630, column: 7, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11574, file: !11172, line: 629, column: 5)
!11580 = !DILocation(line: 633, column: 29, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11575, file: !11172, line: 633, column: 8)
!11582 = !DILocation(line: 631, column: 5, scope: !11579)
!11583 = !DILocation(line: 633, column: 40, scope: !11581)
!11584 = !DILocation(line: 633, column: 63, scope: !11581)
!11585 = !DILocation(line: 633, column: 8, scope: !11575)
!11586 = !DILocation(line: 635, column: 7, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11581, file: !11172, line: 634, column: 5)
!11588 = !DILocation(line: 636, column: 5, scope: !11587)
!11589 = !DILocation(line: 639, column: 5, scope: !11575)
!11590 = !DILocation(line: 643, column: 27, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11538, file: !11172, line: 643, column: 6)
!11592 = !DILocation(line: 640, column: 3, scope: !11575)
!11593 = !DILocation(line: 643, column: 38, scope: !11591)
!11594 = !DILocation(line: 643, column: 62, scope: !11591)
!11595 = !DILocation(line: 643, column: 6, scope: !11538)
!11596 = !DILocation(line: 648, column: 27, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11598, file: !11172, line: 648, column: 8)
!11598 = distinct !DILexicalBlock(scope: !11591, file: !11172, line: 644, column: 3)
!11599 = !DILocation(line: 648, column: 8, scope: !11598)
!11600 = !DILocation(line: 651, column: 10, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11602, file: !11172, line: 651, column: 10)
!11602 = distinct !DILexicalBlock(scope: !11597, file: !11172, line: 649, column: 5)
!11603 = !DILocation(line: 651, column: 46, scope: !11601)
!11604 = !DILocation(line: 651, column: 10, scope: !11602)
!11605 = !DILocation(line: 661, column: 10, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !11172, line: 661, column: 10)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !11172, line: 659, column: 5)
!11608 = distinct !DILexicalBlock(scope: !11597, file: !11172, line: 657, column: 13)
!11609 = !DILocation(line: 661, column: 46, scope: !11606)
!11610 = !DILocation(line: 661, column: 10, scope: !11607)
!11611 = !DILocation(line: 670, column: 10, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !11172, line: 670, column: 10)
!11613 = distinct !DILexicalBlock(scope: !11608, file: !11172, line: 668, column: 5)
!11614 = !DILocation(line: 670, column: 46, scope: !11612)
!11615 = !DILocation(line: 670, column: 10, scope: !11613)
!11616 = !DILocation(line: 676, column: 5, scope: !11598)
!11617 = !DILocation(line: 679, column: 17, scope: !11598)
!11618 = !DILocation(line: 681, column: 5, scope: !11598)
!11619 = !DILocation(line: 681, column: 12, scope: !11598)
!11620 = !DILocation(line: 681, column: 65, scope: !11598)
!11621 = !DILocation(line: 681, column: 78, scope: !11598)
!11622 = !DILocation(line: 681, column: 42, scope: !11598)
!11623 = !DILocation(line: 683, column: 12, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !11172, line: 683, column: 11)
!11625 = distinct !DILexicalBlock(scope: !11598, file: !11172, line: 682, column: 5)
!11626 = !DILocation(line: 683, column: 26, scope: !11624)
!11627 = !DILocation(line: 683, column: 39, scope: !11624)
!11628 = !DILocation(line: 683, column: 11, scope: !11625)
!11629 = distinct !{!11629, !11618, !11630}
!11630 = !DILocation(line: 687, column: 5, scope: !11598)
!11631 = !DILocation(line: 691, column: 17, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11538, file: !11172, line: 691, column: 6)
!11633 = !DILocation(line: 691, column: 15, scope: !11632)
!11634 = !DILocation(line: 691, column: 6, scope: !11538)
!11635 = !DILocation(line: 694, column: 5, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11632, file: !11172, line: 692, column: 3)
!11637 = !DILocation(line: 698, column: 8, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11636, file: !11172, line: 698, column: 8)
!11639 = !DILocation(line: 698, column: 34, scope: !11638)
!11640 = !DILocation(line: 698, column: 8, scope: !11636)
!11641 = !DILocation(line: 705, column: 27, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11538, file: !11172, line: 705, column: 6)
!11643 = !DILocation(line: 705, column: 38, scope: !11642)
!11644 = !DILocation(line: 705, column: 61, scope: !11642)
!11645 = !DILocation(line: 705, column: 6, scope: !11538)
!11646 = !DILocation(line: 708, column: 5, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11642, file: !11172, line: 706, column: 3)
!11648 = !DILocation(line: 712, column: 27, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11538, file: !11172, line: 712, column: 6)
!11650 = !DILocation(line: 709, column: 3, scope: !11647)
!11651 = !DILocation(line: 712, column: 38, scope: !11649)
!11652 = !DILocation(line: 712, column: 61, scope: !11649)
!11653 = !DILocation(line: 712, column: 6, scope: !11538)
!11654 = !DILocation(line: 715, column: 5, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11649, file: !11172, line: 713, column: 3)
!11656 = !DILocation(line: 716, column: 3, scope: !11655)
!11657 = !DILocation(line: 719, column: 21, scope: !11538)
!11658 = !DILocation(line: 719, column: 70, scope: !11538)
!11659 = !DILocation(line: 719, column: 91, scope: !11538)
!11660 = !DILocation(line: 719, column: 50, scope: !11538)
!11661 = !DILocation(line: 719, column: 47, scope: !11538)
!11662 = !DILocation(line: 719, column: 19, scope: !11538)
!11663 = !DILocation(line: 722, column: 17, scope: !11538)
!11664 = !DILocation(line: 722, column: 3, scope: !11538)
!11665 = !DILocation(line: 724, column: 3, scope: !11538)
!11666 = !DILocation(line: 725, column: 1, scope: !11538)
!11667 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11172, file: !11172, line: 885, type: !6035, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !11668)
!11668 = !{!11669, !11670, !11671, !11672}
!11669 = !DILocalVariable(name: "pllm", scope: !11667, file: !11172, line: 887, type: !121)
!11670 = !DILocalVariable(name: "pllvco", scope: !11667, file: !11172, line: 887, type: !121)
!11671 = !DILocalVariable(name: "pllp", scope: !11667, file: !11172, line: 887, type: !121)
!11672 = !DILocalVariable(name: "sysclockfreq", scope: !11667, file: !11172, line: 888, type: !121)
!11673 = !DILocation(line: 0, scope: !11667)
!11674 = !DILocation(line: 891, column: 16, scope: !11667)
!11675 = !DILocation(line: 891, column: 21, scope: !11667)
!11676 = !DILocation(line: 891, column: 3, scope: !11667)
!11677 = !DILocation(line: 907, column: 19, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !11172, line: 904, column: 5)
!11679 = distinct !DILexicalBlock(scope: !11667, file: !11172, line: 892, column: 3)
!11680 = !DILocation(line: 907, column: 27, scope: !11678)
!11681 = !DILocation(line: 908, column: 10, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11678, file: !11172, line: 908, column: 10)
!11683 = !DILocation(line: 0, scope: !11682)
!11684 = !DILocation(line: 918, column: 23, scope: !11678)
!11685 = !DILocation(line: 918, column: 82, scope: !11678)
!11686 = !DILocation(line: 920, column: 28, scope: !11678)
!11687 = !DILocation(line: 921, column: 7, scope: !11678)
!11688 = !DILocation(line: 0, scope: !11679)
!11689 = !DILocation(line: 929, column: 3, scope: !11667)
!11690 = !DISubprogram(name: "HAL_InitTick", scope: !11537, file: !11537, line: 223, type: !11691, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11691 = !DISubroutineType(types: !11692)
!11692 = !{!11175, !121}
!11693 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11172, file: !11172, line: 775, type: !11694, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !11696)
!11694 = !DISubroutineType(types: !11695)
!11695 = !{null, !121, !121, !121}
!11696 = !{!11697, !11698, !11699, !11700, !11710}
!11697 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11693, file: !11172, line: 775, type: !121)
!11698 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11693, file: !11172, line: 775, type: !121)
!11699 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11693, file: !11172, line: 775, type: !121)
!11700 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11693, file: !11172, line: 777, type: !11701)
!11701 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11702, line: 62, baseType: !11703)
!11702 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11702, line: 46, size: 160, elements: !11704)
!11704 = !{!11705, !11706, !11707, !11708, !11709}
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11703, file: !11702, line: 48, baseType: !121, size: 32)
!11706 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11703, file: !11702, line: 51, baseType: !121, size: 32, offset: 32)
!11707 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11703, file: !11702, line: 54, baseType: !121, size: 32, offset: 64)
!11708 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11703, file: !11702, line: 57, baseType: !121, size: 32, offset: 96)
!11709 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11703, file: !11702, line: 60, baseType: !121, size: 32, offset: 128)
!11710 = !DILocalVariable(name: "tmpreg", scope: !11711, file: !11172, line: 787, type: !120)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !11172, line: 787, column: 5)
!11712 = distinct !DILexicalBlock(scope: !11713, file: !11172, line: 783, column: 3)
!11713 = distinct !DILexicalBlock(scope: !11693, file: !11172, line: 782, column: 6)
!11714 = !DILocation(line: 0, scope: !11693)
!11715 = !DILocation(line: 777, column: 3, scope: !11693)
!11716 = !DILocation(line: 777, column: 20, scope: !11693)
!11717 = !DILocation(line: 782, column: 15, scope: !11713)
!11718 = !DILocation(line: 782, column: 6, scope: !11693)
!11719 = !DILocation(line: 787, column: 5, scope: !11711)
!11720 = !DILocation(line: 787, column: 5, scope: !11712)
!11721 = !DILocation(line: 790, column: 21, scope: !11712)
!11722 = !DILocation(line: 790, column: 25, scope: !11712)
!11723 = !DILocation(line: 791, column: 21, scope: !11712)
!11724 = !DILocation(line: 791, column: 26, scope: !11712)
!11725 = !DILocation(line: 792, column: 21, scope: !11712)
!11726 = !DILocation(line: 792, column: 27, scope: !11712)
!11727 = !DILocation(line: 793, column: 21, scope: !11712)
!11728 = !DILocation(line: 793, column: 26, scope: !11712)
!11729 = !DILocation(line: 794, column: 21, scope: !11712)
!11730 = !DILocation(line: 794, column: 31, scope: !11712)
!11731 = !DILocation(line: 795, column: 5, scope: !11712)
!11732 = !DILocation(line: 798, column: 5, scope: !11712)
!11733 = !DILocation(line: 804, column: 3, scope: !11712)
!11734 = !DILocation(line: 830, column: 1, scope: !11693)
!11735 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11702, file: !11702, line: 224, type: !11736, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{null, !3014, !11738}
!11738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11701, size: 32)
!11739 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11172, file: !11172, line: 841, type: !3174, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11740 = !DILocation(line: 843, column: 38, scope: !11739)
!11741 = !DILocation(line: 844, column: 1, scope: !11739)
!11742 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11172, file: !11172, line: 850, type: !3174, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11743 = !DILocation(line: 852, column: 38, scope: !11742)
!11744 = !DILocation(line: 853, column: 1, scope: !11742)
!11745 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11172, file: !11172, line: 941, type: !6035, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11746 = !DILocation(line: 943, column: 10, scope: !11745)
!11747 = !DILocation(line: 943, column: 3, scope: !11745)
!11748 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11172, file: !11172, line: 952, type: !6035, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11749 = !DILocation(line: 955, column: 11, scope: !11748)
!11750 = !DILocation(line: 955, column: 56, scope: !11748)
!11751 = !DILocation(line: 955, column: 78, scope: !11748)
!11752 = !DILocation(line: 955, column: 36, scope: !11748)
!11753 = !DILocation(line: 955, column: 33, scope: !11748)
!11754 = !DILocation(line: 955, column: 3, scope: !11748)
!11755 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11172, file: !11172, line: 964, type: !6035, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11756 = !DILocation(line: 967, column: 11, scope: !11755)
!11757 = !DILocation(line: 967, column: 55, scope: !11755)
!11758 = !DILocation(line: 967, column: 77, scope: !11755)
!11759 = !DILocation(line: 967, column: 35, scope: !11755)
!11760 = !DILocation(line: 967, column: 32, scope: !11755)
!11761 = !DILocation(line: 967, column: 3, scope: !11755)
!11762 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11172, file: !11172, line: 977, type: !11763, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !11765)
!11763 = !DISubroutineType(types: !11764)
!11764 = !{null, !11180}
!11765 = !{!11766}
!11766 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11762, file: !11172, line: 977, type: !11180)
!11767 = !DILocation(line: 0, scope: !11762)
!11768 = !DILocation(line: 980, column: 22, scope: !11762)
!11769 = !DILocation(line: 980, column: 37, scope: !11762)
!11770 = !DILocation(line: 983, column: 12, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11762, file: !11172, line: 983, column: 6)
!11772 = !DILocation(line: 983, column: 15, scope: !11771)
!11773 = !DILocation(line: 983, column: 31, scope: !11771)
!11774 = !DILocation(line: 983, column: 6, scope: !11762)
!11775 = !DILocation(line: 985, column: 24, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11771, file: !11172, line: 984, column: 3)
!11777 = !DILocation(line: 985, column: 33, scope: !11776)
!11778 = !DILocation(line: 986, column: 3, scope: !11776)
!11779 = !DILocation(line: 987, column: 17, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11771, file: !11172, line: 987, column: 11)
!11781 = !DILocation(line: 987, column: 20, scope: !11780)
!11782 = !DILocation(line: 987, column: 35, scope: !11780)
!11783 = !DILocation(line: 0, scope: !11780)
!11784 = !DILocation(line: 987, column: 11, scope: !11771)
!11785 = !DILocation(line: 989, column: 33, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11780, file: !11172, line: 988, column: 3)
!11787 = !DILocation(line: 990, column: 3, scope: !11786)
!11788 = !DILocation(line: 993, column: 33, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11780, file: !11172, line: 992, column: 3)
!11790 = !DILocation(line: 997, column: 12, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11762, file: !11172, line: 997, column: 6)
!11792 = !DILocation(line: 997, column: 15, scope: !11791)
!11793 = !DILocation(line: 1003, column: 24, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11791, file: !11172, line: 1002, column: 3)
!11795 = !DILocation(line: 1003, column: 33, scope: !11794)
!11796 = !DILocation(line: 1006, column: 61, scope: !11762)
!11797 = !DILocation(line: 1006, column: 81, scope: !11762)
!11798 = !DILocation(line: 1006, column: 22, scope: !11762)
!11799 = !DILocation(line: 1006, column: 42, scope: !11762)
!11800 = !DILocation(line: 1009, column: 12, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11762, file: !11172, line: 1009, column: 6)
!11802 = !DILocation(line: 1009, column: 17, scope: !11801)
!11803 = !DILocation(line: 1009, column: 35, scope: !11801)
!11804 = !DILocation(line: 1009, column: 6, scope: !11762)
!11805 = !DILocation(line: 1011, column: 24, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11801, file: !11172, line: 1010, column: 3)
!11807 = !DILocation(line: 1011, column: 33, scope: !11806)
!11808 = !DILocation(line: 1012, column: 3, scope: !11806)
!11809 = !DILocation(line: 1013, column: 17, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11801, file: !11172, line: 1013, column: 11)
!11811 = !DILocation(line: 1013, column: 22, scope: !11810)
!11812 = !DILocation(line: 1013, column: 39, scope: !11810)
!11813 = !DILocation(line: 0, scope: !11810)
!11814 = !DILocation(line: 1013, column: 11, scope: !11801)
!11815 = !DILocation(line: 1015, column: 33, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11810, file: !11172, line: 1014, column: 3)
!11817 = !DILocation(line: 1016, column: 3, scope: !11816)
!11818 = !DILocation(line: 1019, column: 33, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11810, file: !11172, line: 1018, column: 3)
!11820 = !DILocation(line: 1023, column: 12, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11762, file: !11172, line: 1023, column: 6)
!11822 = !DILocation(line: 1023, column: 16, scope: !11821)
!11823 = !DILocation(line: 1029, column: 24, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11821, file: !11172, line: 1028, column: 3)
!11825 = !DILocation(line: 1029, column: 33, scope: !11824)
!11826 = !DILocation(line: 1033, column: 12, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11762, file: !11172, line: 1033, column: 6)
!11828 = !DILocation(line: 1033, column: 15, scope: !11827)
!11829 = !DILocation(line: 1033, column: 30, scope: !11827)
!11830 = !DILocation(line: 1033, column: 6, scope: !11762)
!11831 = !DILocation(line: 1039, column: 28, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11827, file: !11172, line: 1038, column: 3)
!11833 = !DILocation(line: 1039, column: 37, scope: !11832)
!11834 = !DILocation(line: 1041, column: 54, scope: !11762)
!11835 = !DILocation(line: 1041, column: 62, scope: !11762)
!11836 = !DILocation(line: 1041, column: 26, scope: !11762)
!11837 = !DILocation(line: 1041, column: 36, scope: !11762)
!11838 = !DILocation(line: 1042, column: 49, scope: !11762)
!11839 = !DILocation(line: 1042, column: 57, scope: !11762)
!11840 = !DILocation(line: 1042, column: 26, scope: !11762)
!11841 = !DILocation(line: 1042, column: 31, scope: !11762)
!11842 = !DILocation(line: 1043, column: 50, scope: !11762)
!11843 = !DILocation(line: 1043, column: 78, scope: !11762)
!11844 = !DILocation(line: 1043, column: 26, scope: !11762)
!11845 = !DILocation(line: 1043, column: 31, scope: !11762)
!11846 = !DILocation(line: 1044, column: 52, scope: !11762)
!11847 = !DILocation(line: 1044, column: 102, scope: !11762)
!11848 = !DILocation(line: 1044, column: 109, scope: !11762)
!11849 = !DILocation(line: 1044, column: 26, scope: !11762)
!11850 = !DILocation(line: 1044, column: 31, scope: !11762)
!11851 = !DILocation(line: 1045, column: 50, scope: !11762)
!11852 = !DILocation(line: 1045, column: 78, scope: !11762)
!11853 = !DILocation(line: 1045, column: 26, scope: !11762)
!11854 = !DILocation(line: 1045, column: 31, scope: !11762)
!11855 = !DILocation(line: 1046, column: 1, scope: !11762)
!11856 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11172, file: !11172, line: 1056, type: !11857, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !11859)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{null, !11541, !864}
!11859 = !{!11860, !11861}
!11860 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11856, file: !11172, line: 1056, type: !11541)
!11861 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11856, file: !11172, line: 1056, type: !864)
!11862 = !DILocation(line: 0, scope: !11856)
!11863 = !DILocation(line: 1059, column: 22, scope: !11856)
!11864 = !DILocation(line: 1059, column: 32, scope: !11856)
!11865 = !DILocation(line: 1062, column: 53, scope: !11856)
!11866 = !DILocation(line: 1062, column: 58, scope: !11856)
!11867 = !DILocation(line: 1062, column: 22, scope: !11856)
!11868 = !DILocation(line: 1062, column: 35, scope: !11856)
!11869 = !DILocation(line: 1065, column: 54, scope: !11856)
!11870 = !DILocation(line: 1065, column: 59, scope: !11856)
!11871 = !DILocation(line: 1065, column: 22, scope: !11856)
!11872 = !DILocation(line: 1065, column: 36, scope: !11856)
!11873 = !DILocation(line: 1068, column: 55, scope: !11856)
!11874 = !DILocation(line: 1068, column: 60, scope: !11856)
!11875 = !DILocation(line: 1068, column: 22, scope: !11856)
!11876 = !DILocation(line: 1068, column: 37, scope: !11856)
!11877 = !DILocation(line: 1071, column: 56, scope: !11856)
!11878 = !DILocation(line: 1071, column: 79, scope: !11856)
!11879 = !DILocation(line: 1071, column: 22, scope: !11856)
!11880 = !DILocation(line: 1071, column: 37, scope: !11856)
!11881 = !DILocation(line: 1074, column: 34, scope: !11856)
!11882 = !DILocation(line: 1074, column: 38, scope: !11856)
!11883 = !DILocation(line: 1074, column: 14, scope: !11856)
!11884 = !DILocation(line: 1075, column: 1, scope: !11856)
!11885 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11172, file: !11172, line: 1082, type: !3174, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11886 = !DILocation(line: 1085, column: 6, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11885, file: !11172, line: 1085, column: 6)
!11888 = !DILocation(line: 1085, column: 6, scope: !11885)
!11889 = !DILocation(line: 1088, column: 5, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11887, file: !11172, line: 1086, column: 3)
!11891 = !DILocation(line: 1091, column: 5, scope: !11890)
!11892 = !DILocation(line: 1092, column: 3, scope: !11890)
!11893 = !DILocation(line: 1093, column: 1, scope: !11885)
!11894 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11172, file: !11172, line: 1099, type: !3174, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !317)
!11895 = !DILocation(line: 1104, column: 1, scope: !11894)
!11896 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11897, file: !11897, line: 257, type: !6045, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11898)
!11897 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11898 = !{!11899}
!11899 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11896, file: !11897, line: 257, type: !121)
!11900 = !DILocation(line: 0, scope: !11896)
!11901 = !DILocation(line: 260, column: 3, scope: !11896)
!11902 = !DILocation(line: 261, column: 1, scope: !11896)
!11903 = distinct !DISubprogram(name: "LL_InitTick", scope: !11904, file: !11904, line: 260, type: !9205, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11905)
!11904 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11905 = !{!11906, !11907}
!11906 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11903, file: !11904, line: 260, type: !121)
!11907 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11903, file: !11904, line: 260, type: !121)
!11908 = !DILocation(line: 0, scope: !11903)
!11909 = !DILocation(line: 263, column: 46, scope: !11903)
!11910 = !DILocation(line: 263, column: 55, scope: !11903)
!11911 = !DILocation(line: 263, column: 18, scope: !11903)
!11912 = !DILocation(line: 264, column: 18, scope: !11903)
!11913 = !DILocation(line: 265, column: 18, scope: !11903)
!11914 = !DILocation(line: 267, column: 1, scope: !11903)
!11915 = distinct !DISubprogram(name: "LL_mDelay", scope: !11897, file: !11897, line: 273, type: !6045, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11916)
!11916 = !{!11917, !11918}
!11917 = !DILocalVariable(name: "Delay", arg: 1, scope: !11915, file: !11897, line: 273, type: !121)
!11918 = !DILocalVariable(name: "tmp", scope: !11915, file: !11897, line: 275, type: !120)
!11919 = !DILocation(line: 0, scope: !11915)
!11920 = !DILocation(line: 275, column: 3, scope: !11915)
!11921 = !DILocation(line: 275, column: 18, scope: !11915)
!11922 = !DILocation(line: 275, column: 33, scope: !11915)
!11923 = !DILocation(line: 277, column: 10, scope: !11915)
!11924 = !DILocation(line: 280, column: 12, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11915, file: !11897, line: 280, column: 6)
!11926 = !DILocation(line: 285, column: 3, scope: !11915)
!11927 = !DILocation(line: 287, column: 18, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !11897, line: 287, column: 8)
!11929 = distinct !DILexicalBlock(scope: !11915, file: !11897, line: 286, column: 3)
!11930 = !DILocation(line: 292, column: 1, scope: !11915)
!11931 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11897, file: !11897, line: 323, type: !6045, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11932)
!11932 = !{!11933}
!11933 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11931, file: !11897, line: 323, type: !121)
!11934 = !DILocation(line: 0, scope: !11931)
!11935 = !DILocation(line: 326, column: 19, scope: !11931)
!11936 = !DILocation(line: 327, column: 1, scope: !11931)
!11937 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11897, file: !11897, line: 338, type: !11938, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11941)
!11938 = !DISubroutineType(types: !11939)
!11939 = !{!11940, !121}
!11940 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !810, line: 201, baseType: !809)
!11941 = !{!11942, !11943, !11944, !11945, !11946}
!11942 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11937, file: !11897, line: 338, type: !121)
!11943 = !DILocalVariable(name: "timeout", scope: !11937, file: !11897, line: 340, type: !121)
!11944 = !DILocalVariable(name: "getlatency", scope: !11937, file: !11897, line: 341, type: !121)
!11945 = !DILocalVariable(name: "latency", scope: !11937, file: !11897, line: 342, type: !121)
!11946 = !DILocalVariable(name: "status", scope: !11937, file: !11897, line: 343, type: !11940)
!11947 = !DILocation(line: 0, scope: !11937)
!11948 = !DILocation(line: 347, column: 21, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11937, file: !11897, line: 347, column: 6)
!11950 = !DILocation(line: 347, column: 6, scope: !11937)
!11951 = !DILocation(line: 353, column: 8, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11953, file: !11897, line: 353, column: 8)
!11953 = distinct !DILexicalBlock(scope: !11949, file: !11897, line: 352, column: 3)
!11954 = !DILocation(line: 353, column: 40, scope: !11952)
!11955 = !DILocation(line: 353, column: 8, scope: !11953)
!11956 = !DILocation(line: 374, column: 55, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11958, file: !11897, line: 374, column: 10)
!11958 = distinct !DILexicalBlock(scope: !11952, file: !11897, line: 354, column: 5)
!11959 = !DILocation(line: 368, column: 26, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11958, file: !11897, line: 368, column: 10)
!11961 = !DILocation(line: 368, column: 55, scope: !11960)
!11962 = !DILocation(line: 380, column: 57, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !11897, line: 380, column: 12)
!11964 = distinct !DILexicalBlock(scope: !11957, file: !11897, line: 379, column: 7)
!11965 = !DILocation(line: 387, column: 8, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11953, file: !11897, line: 387, column: 8)
!11967 = !DILocation(line: 387, column: 40, scope: !11966)
!11968 = !DILocation(line: 387, column: 8, scope: !11953)
!11969 = !DILocation(line: 407, column: 26, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !11897, line: 407, column: 10)
!11971 = distinct !DILexicalBlock(scope: !11966, file: !11897, line: 388, column: 5)
!11972 = !DILocation(line: 407, column: 55, scope: !11970)
!11973 = !DILocation(line: 413, column: 28, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !11897, line: 413, column: 12)
!11975 = distinct !DILexicalBlock(scope: !11970, file: !11897, line: 412, column: 7)
!11976 = !DILocation(line: 413, column: 57, scope: !11974)
!11977 = !DILocation(line: 0, scope: !11953)
!11978 = !DILocation(line: 420, column: 8, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11953, file: !11897, line: 420, column: 8)
!11980 = !DILocation(line: 420, column: 40, scope: !11979)
!11981 = !DILocation(line: 420, column: 8, scope: !11953)
!11982 = !DILocation(line: 429, column: 26, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11984, file: !11897, line: 429, column: 10)
!11984 = distinct !DILexicalBlock(scope: !11979, file: !11897, line: 421, column: 5)
!11985 = !DILocation(line: 429, column: 55, scope: !11983)
!11986 = !DILocation(line: 435, column: 28, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11988, file: !11897, line: 435, column: 12)
!11988 = distinct !DILexicalBlock(scope: !11983, file: !11897, line: 434, column: 7)
!11989 = !DILocation(line: 435, column: 57, scope: !11987)
!11990 = !DILocation(line: 444, column: 5, scope: !11953)
!11991 = !DILocation(line: 448, column: 5, scope: !11953)
!11992 = !DILocation(line: 451, column: 18, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11953, file: !11897, line: 449, column: 5)
!11994 = !DILocation(line: 452, column: 12, scope: !11993)
!11995 = !DILocation(line: 453, column: 26, scope: !11953)
!11996 = !DILocation(line: 453, column: 38, scope: !11953)
!11997 = !DILocation(line: 453, column: 5, scope: !11993)
!11998 = distinct !{!11998, !11991, !11999}
!11999 = !DILocation(line: 453, column: 54, scope: !11953)
!12000 = !DILocation(line: 0, scope: !11949)
!12001 = !DILocation(line: 464, column: 3, scope: !11937)
!12002 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12003, file: !12003, line: 519, type: !6035, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12003 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12004 = !DILocation(line: 521, column: 21, scope: !12002)
!12005 = !DILocation(line: 521, column: 3, scope: !12002)
!12006 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5760, file: !5760, line: 1543, type: !6045, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12007)
!12007 = !{!12008}
!12008 = !DILocalVariable(name: "Latency", arg: 1, scope: !12006, file: !5760, line: 1543, type: !121)
!12009 = !DILocation(line: 0, scope: !12006)
!12010 = !DILocation(line: 1545, column: 3, scope: !12006)
!12011 = !DILocation(line: 1546, column: 1, scope: !12006)
!12012 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5760, file: !5760, line: 1569, type: !6035, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12013 = !DILocation(line: 1571, column: 21, scope: !12012)
!12014 = !DILocation(line: 1571, column: 3, scope: !12012)
!12015 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11897, file: !11897, line: 483, type: !12016, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12032)
!12016 = !DISubroutineType(types: !12017)
!12017 = !{!11940, !12018, !12025}
!12018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12019, size: 32)
!12019 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11904, line: 114, baseType: !12020)
!12020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11904, line: 94, size: 96, elements: !12021)
!12021 = !{!12022, !12023, !12024}
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12020, file: !11904, line: 96, baseType: !121, size: 32)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12020, file: !11904, line: 102, baseType: !121, size: 32, offset: 32)
!12024 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12020, file: !11904, line: 109, baseType: !121, size: 32, offset: 64)
!12025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12026, size: 32)
!12026 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11904, line: 139, baseType: !12027)
!12027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11904, line: 119, size: 96, elements: !12028)
!12028 = !{!12029, !12030, !12031}
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12027, file: !11904, line: 121, baseType: !121, size: 32)
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12027, file: !11904, line: 127, baseType: !121, size: 32, offset: 32)
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12027, file: !11904, line: 133, baseType: !121, size: 32, offset: 64)
!12032 = !{!12033, !12034, !12035, !12036}
!12033 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12015, file: !11897, line: 483, type: !12018)
!12034 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12015, file: !11897, line: 484, type: !12025)
!12035 = !DILocalVariable(name: "status", scope: !12015, file: !11897, line: 486, type: !11940)
!12036 = !DILocalVariable(name: "pllfreq", scope: !12015, file: !11897, line: 487, type: !121)
!12037 = !DILocation(line: 0, scope: !12015)
!12038 = !DILocation(line: 490, column: 6, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12015, file: !11897, line: 490, column: 6)
!12040 = !DILocation(line: 490, column: 25, scope: !12039)
!12041 = !DILocation(line: 490, column: 6, scope: !12015)
!12042 = !DILocation(line: 493, column: 15, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12039, file: !11897, line: 491, column: 3)
!12044 = !DILocation(line: 496, column: 8, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12043, file: !11897, line: 496, column: 8)
!12046 = !DILocation(line: 496, column: 29, scope: !12045)
!12047 = !DILocation(line: 496, column: 8, scope: !12043)
!12048 = !DILocation(line: 498, column: 7, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12045, file: !11897, line: 497, column: 5)
!12050 = !DILocation(line: 499, column: 7, scope: !12049)
!12051 = !DILocation(line: 499, column: 14, scope: !12049)
!12052 = !DILocation(line: 499, column: 35, scope: !12049)
!12053 = distinct !{!12053, !12050, !12054}
!12054 = !DILocation(line: 502, column: 7, scope: !12049)
!12055 = !DILocation(line: 506, column: 76, scope: !12043)
!12056 = !DILocation(line: 506, column: 103, scope: !12043)
!12057 = !DILocation(line: 507, column: 54, scope: !12043)
!12058 = !DILocation(line: 506, column: 5, scope: !12043)
!12059 = !DILocation(line: 510, column: 14, scope: !12043)
!12060 = !DILocation(line: 511, column: 3, scope: !12043)
!12061 = !DILocation(line: 0, scope: !12039)
!12062 = !DILocation(line: 518, column: 3, scope: !12015)
!12063 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11897, file: !11897, line: 642, type: !12064, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12066)
!12064 = !DISubroutineType(types: !12065)
!12065 = !{!11940}
!12066 = !{!12067}
!12067 = !DILocalVariable(name: "status", scope: !12063, file: !11897, line: 644, type: !11940)
!12068 = !DILocation(line: 0, scope: !12063)
!12069 = !DILocation(line: 647, column: 6, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12063, file: !11897, line: 647, column: 6)
!12071 = !DILocation(line: 647, column: 27, scope: !12070)
!12072 = !DILocation(line: 663, column: 6, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12063, file: !11897, line: 663, column: 6)
!12074 = !DILocation(line: 663, column: 30, scope: !12073)
!12075 = !DILocation(line: 663, column: 6, scope: !12063)
!12076 = !DILocation(line: 669, column: 3, scope: !12063)
!12077 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11897, file: !11897, line: 611, type: !12078, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12080)
!12078 = !DISubroutineType(types: !12079)
!12079 = !{!121, !121, !12018}
!12080 = !{!12081, !12082, !12083}
!12081 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12077, file: !11897, line: 611, type: !121)
!12082 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12077, file: !11897, line: 611, type: !12018)
!12083 = !DILocalVariable(name: "pllfreq", scope: !12077, file: !11897, line: 613, type: !121)
!12084 = !DILocation(line: 0, scope: !12077)
!12085 = !DILocation(line: 622, column: 56, scope: !12077)
!12086 = !DILocation(line: 622, column: 61, scope: !12077)
!12087 = !DILocation(line: 622, column: 32, scope: !12077)
!12088 = !DILocation(line: 626, column: 45, scope: !12077)
!12089 = !DILocation(line: 626, column: 50, scope: !12077)
!12090 = !DILocation(line: 626, column: 21, scope: !12077)
!12091 = !DILocation(line: 630, column: 47, scope: !12077)
!12092 = !DILocation(line: 630, column: 82, scope: !12077)
!12093 = !DILocation(line: 630, column: 21, scope: !12077)
!12094 = !DILocation(line: 633, column: 3, scope: !12077)
!12095 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7989, file: !7989, line: 3007, type: !6035, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12096 = !DILocation(line: 3009, column: 11, scope: !12095)
!12097 = !DILocation(line: 3009, column: 44, scope: !12095)
!12098 = !DILocation(line: 3009, column: 3, scope: !12095)
!12099 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7989, file: !7989, line: 2987, type: !3174, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12100 = !DILocation(line: 2989, column: 3, scope: !12099)
!12101 = !DILocation(line: 2990, column: 1, scope: !12099)
!12102 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7989, file: !7989, line: 4304, type: !8123, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12103)
!12103 = !{!12104, !12105, !12106, !12107}
!12104 = !DILocalVariable(name: "Source", arg: 1, scope: !12102, file: !7989, line: 4304, type: !121)
!12105 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12102, file: !7989, line: 4304, type: !121)
!12106 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12102, file: !7989, line: 4304, type: !121)
!12107 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12102, file: !7989, line: 4304, type: !121)
!12108 = !DILocation(line: 0, scope: !12102)
!12109 = !DILocation(line: 4306, column: 3, scope: !12102)
!12110 = !DILocation(line: 4308, column: 3, scope: !12102)
!12111 = !DILocation(line: 4312, column: 1, scope: !12102)
!12112 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11897, file: !11897, line: 681, type: !12113, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12115)
!12113 = !DISubroutineType(types: !12114)
!12114 = !{!11940, !121, !12025}
!12115 = !{!12116, !12117, !12118, !12119}
!12116 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12112, file: !11897, line: 681, type: !121)
!12117 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12112, file: !11897, line: 681, type: !12025)
!12118 = !DILocalVariable(name: "status", scope: !12112, file: !11897, line: 683, type: !11940)
!12119 = !DILocalVariable(name: "hclk_frequency", scope: !12112, file: !11897, line: 684, type: !121)
!12120 = !DILocation(line: 0, scope: !12112)
!12121 = !DILocation(line: 691, column: 20, scope: !12112)
!12122 = !DILocation(line: 694, column: 6, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12112, file: !11897, line: 694, column: 6)
!12124 = !DILocation(line: 694, column: 22, scope: !12123)
!12125 = !DILocation(line: 694, column: 6, scope: !12112)
!12126 = !DILocation(line: 697, column: 14, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12123, file: !11897, line: 695, column: 3)
!12128 = !DILocation(line: 701, column: 13, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12112, file: !11897, line: 701, column: 6)
!12130 = !DILocation(line: 701, column: 6, scope: !12112)
!12131 = !DILocation(line: 704, column: 5, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12129, file: !11897, line: 702, column: 3)
!12133 = !DILocation(line: 705, column: 5, scope: !12132)
!12134 = !DILocation(line: 705, column: 12, scope: !12132)
!12135 = !DILocation(line: 705, column: 33, scope: !12132)
!12136 = distinct !{!12136, !12133, !12137}
!12137 = !DILocation(line: 708, column: 5, scope: !12132)
!12138 = !DILocation(line: 711, column: 49, scope: !12132)
!12139 = !DILocation(line: 711, column: 5, scope: !12132)
!12140 = !DILocation(line: 712, column: 5, scope: !12132)
!12141 = !DILocation(line: 713, column: 5, scope: !12132)
!12142 = !DILocation(line: 713, column: 12, scope: !12132)
!12143 = !DILocation(line: 713, column: 37, scope: !12132)
!12144 = distinct !{!12144, !12141, !12145}
!12145 = !DILocation(line: 716, column: 5, scope: !12132)
!12146 = !DILocation(line: 719, column: 50, scope: !12132)
!12147 = !DILocation(line: 719, column: 5, scope: !12132)
!12148 = !DILocation(line: 720, column: 50, scope: !12132)
!12149 = !DILocation(line: 720, column: 5, scope: !12132)
!12150 = !DILocation(line: 721, column: 3, scope: !12132)
!12151 = !DILocation(line: 724, column: 6, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12112, file: !11897, line: 724, column: 6)
!12153 = !DILocation(line: 724, column: 22, scope: !12152)
!12154 = !DILocation(line: 724, column: 6, scope: !12112)
!12155 = !DILocation(line: 727, column: 14, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12152, file: !11897, line: 725, column: 3)
!12157 = !DILocation(line: 728, column: 3, scope: !12156)
!12158 = !DILocation(line: 731, column: 13, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12112, file: !11897, line: 731, column: 6)
!12160 = !DILocation(line: 731, column: 6, scope: !12112)
!12161 = !DILocation(line: 733, column: 5, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12159, file: !11897, line: 732, column: 3)
!12163 = !DILocation(line: 734, column: 3, scope: !12162)
!12164 = !DILocation(line: 736, column: 3, scope: !12112)
!12165 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7989, file: !7989, line: 4184, type: !3174, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12166 = !DILocation(line: 4186, column: 3, scope: !12165)
!12167 = !DILocation(line: 4187, column: 1, scope: !12165)
!12168 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7989, file: !7989, line: 4205, type: !6035, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12169 = !DILocation(line: 4207, column: 11, scope: !12168)
!12170 = !DILocation(line: 4207, column: 44, scope: !12168)
!12171 = !DILocation(line: 4207, column: 3, scope: !12168)
!12172 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7989, file: !7989, line: 3224, type: !6045, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12173)
!12173 = !{!12174}
!12174 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12172, file: !7989, line: 3224, type: !121)
!12175 = !DILocation(line: 0, scope: !12172)
!12176 = !DILocation(line: 3226, column: 3, scope: !12172)
!12177 = !DILocation(line: 3227, column: 1, scope: !12172)
!12178 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7989, file: !7989, line: 3188, type: !6045, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12179)
!12179 = !{!12180}
!12180 = !DILocalVariable(name: "Source", arg: 1, scope: !12178, file: !7989, line: 3188, type: !121)
!12181 = !DILocation(line: 0, scope: !12178)
!12182 = !DILocation(line: 3190, column: 3, scope: !12178)
!12183 = !DILocation(line: 3191, column: 1, scope: !12178)
!12184 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7989, file: !7989, line: 3204, type: !6035, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12185 = !DILocation(line: 3206, column: 21, scope: !12184)
!12186 = !DILocation(line: 3206, column: 3, scope: !12184)
!12187 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7989, file: !7989, line: 3240, type: !6045, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12188)
!12188 = !{!12189}
!12189 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12187, file: !7989, line: 3240, type: !121)
!12190 = !DILocation(line: 0, scope: !12187)
!12191 = !DILocation(line: 3242, column: 3, scope: !12187)
!12192 = !DILocation(line: 3243, column: 1, scope: !12187)
!12193 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7989, file: !7989, line: 3256, type: !6045, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12194)
!12194 = !{!12195}
!12195 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12193, file: !7989, line: 3256, type: !121)
!12196 = !DILocation(line: 0, scope: !12193)
!12197 = !DILocation(line: 3258, column: 3, scope: !12193)
!12198 = !DILocation(line: 3259, column: 1, scope: !12193)
!12199 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7989, file: !7989, line: 5153, type: !6035, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12200 = !DILocation(line: 5155, column: 11, scope: !12199)
!12201 = !DILocation(line: 5155, column: 47, scope: !12199)
!12202 = !DILocation(line: 5155, column: 3, scope: !12199)
!12203 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11897, file: !11897, line: 540, type: !12204, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !12206)
!12204 = !DISubroutineType(types: !12205)
!12205 = !{!11940, !121, !121, !12018, !12025}
!12206 = !{!12207, !12208, !12209, !12210, !12211, !12212}
!12207 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12203, file: !11897, line: 540, type: !121)
!12208 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12203, file: !11897, line: 540, type: !121)
!12209 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12203, file: !11897, line: 541, type: !12018)
!12210 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12203, file: !11897, line: 541, type: !12025)
!12211 = !DILocalVariable(name: "status", scope: !12203, file: !11897, line: 543, type: !11940)
!12212 = !DILocalVariable(name: "pllfreq", scope: !12203, file: !11897, line: 544, type: !121)
!12213 = !DILocation(line: 0, scope: !12203)
!12214 = !DILocation(line: 551, column: 6, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12203, file: !11897, line: 551, column: 6)
!12216 = !DILocation(line: 551, column: 25, scope: !12215)
!12217 = !DILocation(line: 551, column: 6, scope: !12203)
!12218 = !DILocation(line: 554, column: 15, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12215, file: !11897, line: 552, column: 3)
!12220 = !DILocation(line: 557, column: 8, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12219, file: !11897, line: 557, column: 8)
!12222 = !DILocation(line: 557, column: 29, scope: !12221)
!12223 = !DILocation(line: 557, column: 8, scope: !12219)
!12224 = !DILocation(line: 560, column: 20, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12226, file: !11897, line: 560, column: 10)
!12226 = distinct !DILexicalBlock(scope: !12221, file: !11897, line: 558, column: 5)
!12227 = !DILocation(line: 560, column: 10, scope: !12226)
!12228 = !DILocation(line: 562, column: 9, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12225, file: !11897, line: 561, column: 7)
!12230 = !DILocation(line: 563, column: 7, scope: !12229)
!12231 = !DILocation(line: 566, column: 9, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12225, file: !11897, line: 565, column: 7)
!12233 = !DILocation(line: 570, column: 7, scope: !12226)
!12234 = !DILocation(line: 571, column: 7, scope: !12226)
!12235 = !DILocation(line: 571, column: 14, scope: !12226)
!12236 = !DILocation(line: 571, column: 35, scope: !12226)
!12237 = distinct !{!12237, !12234, !12238}
!12238 = !DILocation(line: 574, column: 7, scope: !12226)
!12239 = !DILocation(line: 578, column: 76, scope: !12219)
!12240 = !DILocation(line: 578, column: 103, scope: !12219)
!12241 = !DILocation(line: 579, column: 54, scope: !12219)
!12242 = !DILocation(line: 578, column: 5, scope: !12219)
!12243 = !DILocation(line: 582, column: 14, scope: !12219)
!12244 = !DILocation(line: 583, column: 3, scope: !12219)
!12245 = !DILocation(line: 0, scope: !12215)
!12246 = !DILocation(line: 590, column: 3, scope: !12203)
!12247 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7989, file: !7989, line: 2969, type: !6035, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12248 = !DILocation(line: 2971, column: 11, scope: !12247)
!12249 = !DILocation(line: 2971, column: 44, scope: !12247)
!12250 = !DILocation(line: 2971, column: 3, scope: !12247)
!12251 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7989, file: !7989, line: 2929, type: !3174, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12252 = !DILocation(line: 2931, column: 3, scope: !12251)
!12253 = !DILocation(line: 2932, column: 1, scope: !12251)
!12254 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7989, file: !7989, line: 2939, type: !3174, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12255 = !DILocation(line: 2941, column: 3, scope: !12254)
!12256 = !DILocation(line: 2942, column: 1, scope: !12254)
!12257 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7989, file: !7989, line: 2949, type: !3174, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !317)
!12258 = !DILocation(line: 2951, column: 3, scope: !12257)
!12259 = !DILocation(line: 2952, column: 1, scope: !12257)
!12260 = distinct !DISubprogram(name: "z_device_state_init", scope: !12261, file: !12261, line: 23, type: !3174, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12262)
!12261 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12262 = !{!12263}
!12263 = !DILocalVariable(name: "dev", scope: !12260, file: !12261, line: 25, type: !12264)
!12264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12265, size: 32)
!12265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12266)
!12266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !12267)
!12267 = !{!12268, !12269, !12270, !12271, !12277, !12278}
!12268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12266, file: !141, line: 380, baseType: !144, size: 32)
!12269 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12266, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!12270 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12266, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!12271 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12266, file: !141, line: 386, baseType: !12272, size: 32, offset: 96)
!12272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12273, size: 32)
!12273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !12274)
!12274 = !{!12275, !12276}
!12275 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12273, file: !141, line: 359, baseType: !154, size: 8)
!12276 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12273, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12277 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12266, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!12278 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12266, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!12279 = !DILocation(line: 0, scope: !12260)
!12280 = !DILocation(line: 31, column: 1, scope: !12260)
!12281 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12261, file: !12261, line: 33, type: !12282, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12284)
!12282 = !DISubroutineType(types: !12283)
!12283 = !{!12264, !144}
!12284 = !{!12285, !12286}
!12285 = !DILocalVariable(name: "name", arg: 1, scope: !12281, file: !12261, line: 33, type: !144)
!12286 = !DILocalVariable(name: "dev", scope: !12281, file: !12261, line: 35, type: !12264)
!12287 = !DILocation(line: 0, scope: !12281)
!12288 = !DILocation(line: 40, column: 12, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12281, file: !12261, line: 40, column: 6)
!12290 = !DILocation(line: 40, column: 21, scope: !12289)
!12291 = !DILocation(line: 40, column: 25, scope: !12289)
!12292 = !DILocation(line: 40, column: 33, scope: !12289)
!12293 = !DILocation(line: 40, column: 6, scope: !12281)
!12294 = !DILocation(line: 55, column: 2, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12281, file: !12261, line: 55, column: 2)
!12296 = !DILocation(line: 50, column: 7, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !12261, line: 50, column: 7)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !12261, line: 49, column: 57)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !12261, line: 49, column: 2)
!12300 = distinct !DILexicalBlock(scope: !12281, file: !12261, line: 49, column: 2)
!12301 = !DILocation(line: 50, column: 30, scope: !12297)
!12302 = !DILocation(line: 50, column: 39, scope: !12297)
!12303 = !DILocation(line: 50, column: 44, scope: !12297)
!12304 = !DILocation(line: 50, column: 7, scope: !12298)
!12305 = !DILocation(line: 49, column: 53, scope: !12299)
!12306 = !DILocation(line: 49, column: 33, scope: !12299)
!12307 = !DILocation(line: 49, column: 2, scope: !12300)
!12308 = distinct !{!12308, !12307, !12309}
!12309 = !DILocation(line: 53, column: 2, scope: !12300)
!12310 = !DILocation(line: 56, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !12261, line: 56, column: 7)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !12261, line: 55, column: 57)
!12313 = distinct !DILexicalBlock(scope: !12295, file: !12261, line: 55, column: 2)
!12314 = !DILocation(line: 56, column: 30, scope: !12311)
!12315 = !DILocation(line: 56, column: 52, scope: !12311)
!12316 = !DILocation(line: 56, column: 34, scope: !12311)
!12317 = !DILocation(line: 56, column: 58, scope: !12311)
!12318 = !DILocation(line: 56, column: 7, scope: !12312)
!12319 = !DILocation(line: 55, column: 53, scope: !12313)
!12320 = !DILocation(line: 55, column: 33, scope: !12313)
!12321 = distinct !{!12321, !12294, !12322}
!12322 = !DILocation(line: 59, column: 2, scope: !12295)
!12323 = !DILocation(line: 62, column: 1, scope: !12281)
!12324 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12261, file: !12261, line: 93, type: !12325, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12327)
!12325 = !DISubroutineType(types: !12326)
!12326 = !{!157, !12264}
!12327 = !{!12328}
!12328 = !DILocalVariable(name: "dev", arg: 1, scope: !12324, file: !12261, line: 93, type: !12264)
!12329 = !DILocation(line: 0, scope: !12324)
!12330 = !DILocation(line: 99, column: 10, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12324, file: !12261, line: 99, column: 6)
!12332 = !DILocation(line: 99, column: 6, scope: !12324)
!12333 = !DILocation(line: 103, column: 14, scope: !12324)
!12334 = !DILocation(line: 103, column: 21, scope: !12324)
!12335 = !DILocation(line: 103, column: 33, scope: !12324)
!12336 = !DILocation(line: 103, column: 49, scope: !12324)
!12337 = !DILocation(line: 103, column: 58, scope: !12324)
!12338 = !DILocation(line: 104, column: 1, scope: !12324)
!12339 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12261, file: !12261, line: 87, type: !12340, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12343)
!12340 = !DISubroutineType(types: !12341)
!12341 = !{!204, !12342}
!12342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12264, size: 32)
!12343 = !{!12344}
!12344 = !DILocalVariable(name: "devices", arg: 1, scope: !12339, file: !12261, line: 87, type: !12342)
!12345 = !DILocation(line: 0, scope: !12339)
!12346 = !DILocation(line: 89, column: 11, scope: !12339)
!12347 = !DILocation(line: 90, column: 2, scope: !12339)
!12348 = distinct !DISubprogram(name: "device_required_foreach", scope: !12261, file: !12261, line: 125, type: !12349, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12355)
!12349 = !DISubroutineType(types: !12350)
!12350 = !{!103, !12264, !12351, !102}
!12351 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !12352)
!12352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12353, size: 32)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!103, !12264, !102}
!12355 = !{!12356, !12357, !12358, !12359, !12360}
!12356 = !DILocalVariable(name: "dev", arg: 1, scope: !12348, file: !12261, line: 125, type: !12264)
!12357 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12348, file: !12261, line: 126, type: !12351)
!12358 = !DILocalVariable(name: "context", arg: 3, scope: !12348, file: !12261, line: 127, type: !102)
!12359 = !DILocalVariable(name: "handle_count", scope: !12348, file: !12261, line: 129, type: !204)
!12360 = !DILocalVariable(name: "handles", scope: !12348, file: !12261, line: 130, type: !160)
!12361 = !DILocation(line: 0, scope: !12348)
!12362 = !DILocation(line: 129, column: 2, scope: !12348)
!12363 = !DILocation(line: 129, column: 9, scope: !12348)
!12364 = !DILocation(line: 130, column: 35, scope: !12348)
!12365 = !DILocation(line: 132, column: 33, scope: !12348)
!12366 = !DILocation(line: 132, column: 9, scope: !12348)
!12367 = !DILocation(line: 133, column: 1, scope: !12348)
!12368 = !DILocation(line: 132, column: 2, scope: !12348)
!12369 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !12370, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12372)
!12370 = !DISubroutineType(types: !12371)
!12371 = !{!160, !12264, !2590}
!12372 = !{!12373, !12374, !12375, !12376}
!12373 = !DILocalVariable(name: "dev", arg: 1, scope: !12369, file: !141, line: 493, type: !12264)
!12374 = !DILocalVariable(name: "count", arg: 2, scope: !12369, file: !141, line: 493, type: !2590)
!12375 = !DILocalVariable(name: "rv", scope: !12369, file: !141, line: 495, type: !160)
!12376 = !DILocalVariable(name: "i", scope: !12377, file: !141, line: 498, type: !204)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !141, line: 497, column: 18)
!12378 = distinct !DILexicalBlock(scope: !12369, file: !141, line: 497, column: 6)
!12379 = !DILocation(line: 0, scope: !12369)
!12380 = !DILocation(line: 495, column: 35, scope: !12369)
!12381 = !DILocation(line: 497, column: 9, scope: !12378)
!12382 = !DILocation(line: 497, column: 6, scope: !12369)
!12383 = !DILocation(line: 0, scope: !12377)
!12384 = !DILocation(line: 500, column: 11, scope: !12377)
!12385 = !DILocation(line: 500, column: 40, scope: !12377)
!12386 = !DILocation(line: 502, column: 4, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12377, file: !141, line: 501, column: 40)
!12388 = distinct !{!12388, !12389, !12390}
!12389 = !DILocation(line: 500, column: 3, scope: !12377)
!12390 = !DILocation(line: 503, column: 3, scope: !12377)
!12391 = !DILocation(line: 504, column: 10, scope: !12377)
!12392 = !DILocation(line: 505, column: 2, scope: !12377)
!12393 = !DILocation(line: 507, column: 2, scope: !12369)
!12394 = distinct !DISubprogram(name: "device_visitor", scope: !12261, file: !12261, line: 106, type: !12395, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12397)
!12395 = !DISubroutineType(types: !12396)
!12396 = !{!103, !160, !204, !12351, !102}
!12397 = !{!12398, !12399, !12400, !12401, !12402, !12404, !12407, !12408}
!12398 = !DILocalVariable(name: "handles", arg: 1, scope: !12394, file: !12261, line: 106, type: !160)
!12399 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12394, file: !12261, line: 107, type: !204)
!12400 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12394, file: !12261, line: 108, type: !12351)
!12401 = !DILocalVariable(name: "context", arg: 4, scope: !12394, file: !12261, line: 109, type: !102)
!12402 = !DILocalVariable(name: "i", scope: !12403, file: !12261, line: 112, type: !204)
!12403 = distinct !DILexicalBlock(scope: !12394, file: !12261, line: 112, column: 2)
!12404 = !DILocalVariable(name: "dh", scope: !12405, file: !12261, line: 113, type: !162)
!12405 = distinct !DILexicalBlock(scope: !12406, file: !12261, line: 112, column: 44)
!12406 = distinct !DILexicalBlock(scope: !12403, file: !12261, line: 112, column: 2)
!12407 = !DILocalVariable(name: "rdev", scope: !12405, file: !12261, line: 114, type: !12264)
!12408 = !DILocalVariable(name: "rc", scope: !12405, file: !12261, line: 115, type: !103)
!12409 = !DILocation(line: 0, scope: !12394)
!12410 = !DILocation(line: 0, scope: !12403)
!12411 = !DILocation(line: 112, column: 23, scope: !12406)
!12412 = !DILocation(line: 112, column: 2, scope: !12403)
!12413 = distinct !{!12413, !12412, !12414}
!12414 = !DILocation(line: 120, column: 2, scope: !12403)
!12415 = !DILocation(line: 113, column: 24, scope: !12405)
!12416 = !DILocation(line: 0, scope: !12405)
!12417 = !DILocation(line: 114, column: 31, scope: !12405)
!12418 = !DILocation(line: 115, column: 12, scope: !12405)
!12419 = !DILocation(line: 117, column: 10, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12405, file: !12261, line: 117, column: 7)
!12421 = !DILocation(line: 112, column: 39, scope: !12406)
!12422 = !DILocation(line: 123, column: 1, scope: !12394)
!12423 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !12424, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12426)
!12424 = !DISubroutineType(types: !12425)
!12425 = !{!12264, !162}
!12426 = !{!12427, !12428, !12429}
!12427 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12423, file: !141, line: 439, type: !162)
!12428 = !DILocalVariable(name: "dev", scope: !12423, file: !141, line: 443, type: !12264)
!12429 = !DILocalVariable(name: "numdev", scope: !12423, file: !141, line: 444, type: !204)
!12430 = !DILocation(line: 0, scope: !12423)
!12431 = !DILocation(line: 446, column: 7, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12423, file: !141, line: 446, column: 6)
!12433 = !DILocation(line: 446, column: 18, scope: !12432)
!12434 = !DILocation(line: 446, column: 23, scope: !12432)
!12435 = !DILocation(line: 450, column: 2, scope: !12423)
!12436 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12261, file: !12261, line: 135, type: !12349, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12437)
!12437 = !{!12438, !12439, !12440, !12441, !12442}
!12438 = !DILocalVariable(name: "dev", arg: 1, scope: !12436, file: !12261, line: 135, type: !12264)
!12439 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12436, file: !12261, line: 136, type: !12351)
!12440 = !DILocalVariable(name: "context", arg: 3, scope: !12436, file: !12261, line: 137, type: !102)
!12441 = !DILocalVariable(name: "handle_count", scope: !12436, file: !12261, line: 139, type: !204)
!12442 = !DILocalVariable(name: "handles", scope: !12436, file: !12261, line: 140, type: !160)
!12443 = !DILocation(line: 0, scope: !12436)
!12444 = !DILocation(line: 139, column: 2, scope: !12436)
!12445 = !DILocation(line: 139, column: 9, scope: !12436)
!12446 = !DILocation(line: 140, column: 35, scope: !12436)
!12447 = !DILocation(line: 142, column: 33, scope: !12436)
!12448 = !DILocation(line: 142, column: 9, scope: !12436)
!12449 = !DILocation(line: 143, column: 1, scope: !12436)
!12450 = !DILocation(line: 142, column: 2, scope: !12436)
!12451 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !12370, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3091, retainedNodes: !12452)
!12452 = !{!12453, !12454, !12455, !12456, !12457}
!12453 = !DILocalVariable(name: "dev", arg: 1, scope: !12451, file: !141, line: 573, type: !12264)
!12454 = !DILocalVariable(name: "count", arg: 2, scope: !12451, file: !141, line: 573, type: !2590)
!12455 = !DILocalVariable(name: "rv", scope: !12451, file: !141, line: 575, type: !160)
!12456 = !DILocalVariable(name: "region", scope: !12451, file: !141, line: 576, type: !204)
!12457 = !DILocalVariable(name: "i", scope: !12451, file: !141, line: 577, type: !204)
!12458 = !DILocation(line: 0, scope: !12451)
!12459 = !DILocation(line: 575, column: 35, scope: !12451)
!12460 = !DILocation(line: 579, column: 9, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12451, file: !141, line: 579, column: 6)
!12462 = !DILocation(line: 579, column: 6, scope: !12451)
!12463 = !DILocation(line: 582, column: 8, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !141, line: 582, column: 8)
!12465 = distinct !DILexicalBlock(scope: !12466, file: !141, line: 581, column: 23)
!12466 = distinct !DILexicalBlock(scope: !12461, file: !141, line: 579, column: 18)
!12467 = !DILocation(line: 582, column: 12, scope: !12464)
!12468 = !DILocation(line: 585, column: 6, scope: !12465)
!12469 = !DILocation(line: 0, scope: !12466)
!12470 = !DILocation(line: 581, column: 17, scope: !12466)
!12471 = !DILocation(line: 581, column: 3, scope: !12466)
!12472 = !DILocation(line: 588, column: 10, scope: !12466)
!12473 = !DILocation(line: 588, column: 16, scope: !12466)
!12474 = !DILocation(line: 589, column: 4, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12466, file: !141, line: 588, column: 39)
!12476 = !DILocation(line: 588, column: 3, scope: !12466)
!12477 = distinct !{!12477, !12476, !12478}
!12478 = !DILocation(line: 590, column: 3, scope: !12466)
!12479 = !DILocation(line: 591, column: 10, scope: !12466)
!12480 = !DILocation(line: 592, column: 2, scope: !12466)
!12481 = !DILocation(line: 575, column: 25, scope: !12451)
!12482 = !DILocation(line: 594, column: 2, scope: !12451)
!12483 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1948, file: !1948, line: 49, type: !12484, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1945, retainedNodes: !317)
!12484 = !DISubroutineType(types: !12485)
!12485 = !{!2584}
!12486 = !DILocation(line: 51, column: 10, scope: !12483)
!12487 = !DILocation(line: 51, column: 20, scope: !12483)
!12488 = !DILocation(line: 51, column: 2, scope: !12483)
!12489 = distinct !DISubprogram(name: "coredump", scope: !3098, file: !3098, line: 209, type: !12490, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12636)
!12490 = !DISubroutineType(types: !12491)
!12491 = !{null, !32, !12492, !12536}
!12492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12493, size: 32)
!12493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12494)
!12494 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2715, line: 141, baseType: !12495)
!12495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2715, line: 97, size: 256, elements: !12496)
!12496 = !{!12497}
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12495, file: !2715, line: 107, baseType: !12498, size: 256)
!12498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2715, line: 98, size: 256, elements: !12499)
!12499 = !{!12500, !12505, !12510, !12515, !12520, !12525, !12530, !12535}
!12500 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !2715, line: 99, baseType: !12501, size: 32)
!12501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !2715, line: 99, size: 32, elements: !12502)
!12502 = !{!12503, !12504}
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12501, file: !2715, line: 99, baseType: !121, size: 32)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12501, file: !2715, line: 99, baseType: !121, size: 32)
!12505 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !2715, line: 100, baseType: !12506, size: 32, offset: 32)
!12506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !2715, line: 100, size: 32, elements: !12507)
!12507 = !{!12508, !12509}
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12506, file: !2715, line: 100, baseType: !121, size: 32)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12506, file: !2715, line: 100, baseType: !121, size: 32)
!12510 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !2715, line: 101, baseType: !12511, size: 32, offset: 64)
!12511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !2715, line: 101, size: 32, elements: !12512)
!12512 = !{!12513, !12514}
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12511, file: !2715, line: 101, baseType: !121, size: 32)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12511, file: !2715, line: 101, baseType: !121, size: 32)
!12515 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !2715, line: 102, baseType: !12516, size: 32, offset: 96)
!12516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !2715, line: 102, size: 32, elements: !12517)
!12517 = !{!12518, !12519}
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12516, file: !2715, line: 102, baseType: !121, size: 32)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12516, file: !2715, line: 102, baseType: !121, size: 32)
!12520 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !2715, line: 103, baseType: !12521, size: 32, offset: 128)
!12521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !2715, line: 103, size: 32, elements: !12522)
!12522 = !{!12523, !12524}
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12521, file: !2715, line: 103, baseType: !121, size: 32)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12521, file: !2715, line: 103, baseType: !121, size: 32)
!12525 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !2715, line: 104, baseType: !12526, size: 32, offset: 160)
!12526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !2715, line: 104, size: 32, elements: !12527)
!12527 = !{!12528, !12529}
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12526, file: !2715, line: 104, baseType: !121, size: 32)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12526, file: !2715, line: 104, baseType: !121, size: 32)
!12530 = !DIDerivedType(tag: DW_TAG_member, scope: !12498, file: !2715, line: 105, baseType: !12531, size: 32, offset: 192)
!12531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12498, file: !2715, line: 105, size: 32, elements: !12532)
!12532 = !{!12533, !12534}
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12531, file: !2715, line: 105, baseType: !121, size: 32)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12531, file: !2715, line: 105, baseType: !121, size: 32)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12498, file: !2715, line: 106, baseType: !121, size: 32, offset: 224)
!12536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12537, size: 32)
!12537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !12538)
!12538 = !{!12539, !12597, !12609, !12610, !12611, !12612, !12618, !12631}
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12537, file: !379, line: 247, baseType: !12540, size: 384)
!12540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !12541)
!12541 = !{!12542, !12566, !12573, !12574, !12575, !12584, !12585, !12586}
!12542 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !379, line: 60, baseType: !12543, size: 64)
!12543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !379, line: 60, size: 64, elements: !12544)
!12544 = !{!12545, !12560}
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12543, file: !379, line: 61, baseType: !12546, size: 64)
!12546 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !325, line: 49, baseType: !12547)
!12547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !12548)
!12548 = !{!12549, !12555}
!12549 = !DIDerivedType(tag: DW_TAG_member, scope: !12547, file: !325, line: 38, baseType: !12550, size: 32)
!12550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12547, file: !325, line: 38, size: 32, elements: !12551)
!12551 = !{!12552, !12554}
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12550, file: !325, line: 39, baseType: !12553, size: 32)
!12553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12547, size: 32)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12550, file: !325, line: 40, baseType: !12553, size: 32)
!12555 = !DIDerivedType(tag: DW_TAG_member, scope: !12547, file: !325, line: 42, baseType: !12556, size: 32, offset: 32)
!12556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12547, file: !325, line: 42, size: 32, elements: !12557)
!12557 = !{!12558, !12559}
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12556, file: !325, line: 43, baseType: !12553, size: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12556, file: !325, line: 44, baseType: !12553, size: 32)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12543, file: !379, line: 62, baseType: !12561, size: 64)
!12561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !12562)
!12562 = !{!12563}
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12561, file: !404, line: 50, baseType: !12564, size: 64)
!12564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12565, size: 64, elements: !363)
!12565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12561, size: 32)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12540, file: !379, line: 68, baseType: !12567, size: 32, offset: 64)
!12567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12568, size: 32)
!12568 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !12569)
!12569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !12570)
!12570 = !{!12571}
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12569, file: !320, line: 232, baseType: !12572, size: 64)
!12572 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !12547)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12540, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12540, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!12575 = !DIDerivedType(tag: DW_TAG_member, scope: !12540, file: !379, line: 90, baseType: !12576, size: 16, offset: 112)
!12576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12540, file: !379, line: 90, size: 16, elements: !12577)
!12577 = !{!12578, !12583}
!12578 = !DIDerivedType(tag: DW_TAG_member, scope: !12576, file: !379, line: 91, baseType: !12579, size: 16)
!12579 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12576, file: !379, line: 91, size: 16, elements: !12580)
!12580 = !{!12581, !12582}
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12579, file: !379, line: 96, baseType: !425, size: 8)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12579, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12576, file: !379, line: 100, baseType: !429, size: 16)
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12540, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12540, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12540, file: !379, line: 131, baseType: !12587, size: 192, offset: 192)
!12587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !12588)
!12588 = !{!12589, !12590, !12596}
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12587, file: !320, line: 245, baseType: !12546, size: 64)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12587, file: !320, line: 246, baseType: !12591, size: 32, offset: 64)
!12591 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !12592)
!12592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12593, size: 32)
!12593 = !DISubroutineType(types: !12594)
!12594 = !{null, !12595}
!12595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12587, size: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12587, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12537, file: !379, line: 250, baseType: !12598, size: 288, offset: 384)
!12598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !12599)
!12599 = !{!12600, !12601, !12602, !12603, !12604, !12605, !12606, !12607, !12608}
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12598, file: !446, line: 26, baseType: !121, size: 32)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12598, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12598, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12598, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12598, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12598, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12598, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12598, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12598, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12537, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12537, file: !379, line: 256, baseType: !12568, size: 64, offset: 704)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12537, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12537, file: !379, line: 300, baseType: !12613, size: 96, offset: 800)
!12613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !12614)
!12614 = !{!12615, !12616, !12617}
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12613, file: !379, line: 153, baseType: !22, size: 32)
!12616 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12613, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!12617 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12613, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12537, file: !379, line: 325, baseType: !12619, size: 32, offset: 896)
!12619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12620, size: 32)
!12620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !12621)
!12621 = !{!12622, !12628, !12629}
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12620, file: !296, line: 5074, baseType: !12623, size: 96)
!12623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !12624)
!12624 = !{!12625, !12626, !12627}
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12623, file: !472, line: 57, baseType: !475, size: 32)
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12623, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12623, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12620, file: !296, line: 5075, baseType: !12568, size: 64, offset: 96)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12620, file: !296, line: 5076, baseType: !12630, offset: 160)
!12630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12537, file: !379, line: 343, baseType: !12632, size: 64, offset: 928)
!12632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !12633)
!12633 = !{!12634, !12635}
!12634 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12632, file: !446, line: 63, baseType: !121, size: 32)
!12635 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12632, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!12636 = !{!12637, !12638, !12639}
!12637 = !DILocalVariable(name: "reason", arg: 1, scope: !12489, file: !3098, line: 209, type: !32)
!12638 = !DILocalVariable(name: "esf", arg: 2, scope: !12489, file: !3098, line: 209, type: !12492)
!12639 = !DILocalVariable(name: "thread", arg: 3, scope: !12489, file: !3098, line: 210, type: !12536)
!12640 = !DILocation(line: 0, scope: !12489)
!12641 = !DILocation(line: 212, column: 1, scope: !12489)
!12642 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3098, file: !3098, line: 214, type: !12643, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12645)
!12643 = !DISubroutineType(types: !12644)
!12644 = !{null, !22, !22}
!12645 = !{!12646, !12647}
!12646 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12642, file: !3098, line: 214, type: !22)
!12647 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12642, file: !3098, line: 214, type: !22)
!12648 = !DILocation(line: 0, scope: !12642)
!12649 = !DILocation(line: 216, column: 1, scope: !12642)
!12650 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3098, file: !3098, line: 218, type: !12651, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{null, !267, !204}
!12653 = !{!12654, !12655}
!12654 = !DILocalVariable(name: "buf", arg: 1, scope: !12650, file: !3098, line: 218, type: !267)
!12655 = !DILocalVariable(name: "buflen", arg: 2, scope: !12650, file: !3098, line: 218, type: !204)
!12656 = !DILocation(line: 0, scope: !12650)
!12657 = !DILocation(line: 220, column: 1, scope: !12650)
!12658 = distinct !DISubprogram(name: "coredump_query", scope: !3098, file: !3098, line: 222, type: !12659, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12661)
!12659 = !DISubroutineType(types: !12660)
!12660 = !{!103, !3097, !102}
!12661 = !{!12662, !12663}
!12662 = !DILocalVariable(name: "query_id", arg: 1, scope: !12658, file: !3098, line: 222, type: !3097)
!12663 = !DILocalVariable(name: "arg", arg: 2, scope: !12658, file: !3098, line: 222, type: !102)
!12664 = !DILocation(line: 0, scope: !12658)
!12665 = !DILocation(line: 224, column: 2, scope: !12658)
!12666 = distinct !DISubprogram(name: "coredump_cmd", scope: !3098, file: !3098, line: 227, type: !12667, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12669)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!103, !3104, !102}
!12669 = !{!12670, !12671}
!12670 = !DILocalVariable(name: "query_id", arg: 1, scope: !12666, file: !3098, line: 227, type: !3104)
!12671 = !DILocalVariable(name: "arg", arg: 2, scope: !12666, file: !3098, line: 227, type: !102)
!12672 = !DILocation(line: 0, scope: !12666)
!12673 = !DILocation(line: 229, column: 2, scope: !12666)
!12674 = distinct !DISubprogram(name: "arch_system_halt", scope: !12675, file: !12675, line: 23, type: !5750, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12676)
!12675 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12676 = !{!12677}
!12677 = !DILocalVariable(name: "reason", arg: 1, scope: !12674, file: !12675, line: 23, type: !32)
!12678 = !DILocation(line: 0, scope: !12674)
!12679 = !DILocation(line: 55, column: 2, scope: !12680, inlinedAt: !12684)
!12680 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12681)
!12681 = !{!12682, !12683}
!12682 = !DILocalVariable(name: "key", scope: !12680, file: !5739, line: 44, type: !32)
!12683 = !DILocalVariable(name: "tmp", scope: !12680, file: !5739, line: 53, type: !32)
!12684 = distinct !DILocation(line: 31, column: 8, scope: !12674)
!12685 = !{i64 2240906}
!12686 = !DILocation(line: 0, scope: !12680, inlinedAt: !12684)
!12687 = !DILocation(line: 32, column: 2, scope: !12674)
!12688 = !DILocation(line: 32, column: 2, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !12675, line: 32, column: 2)
!12690 = distinct !DILexicalBlock(scope: !12674, file: !12675, line: 32, column: 2)
!12691 = distinct !{!12691, !12692, !12693}
!12692 = !DILocation(line: 32, column: 2, scope: !12690)
!12693 = !DILocation(line: 34, column: 2, scope: !12690)
!12694 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12675, file: !12675, line: 39, type: !12695, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12697)
!12695 = !DISubroutineType(types: !12696)
!12696 = !{null, !32, !12492}
!12697 = !{!12698, !12699}
!12698 = !DILocalVariable(name: "reason", arg: 1, scope: !12694, file: !12675, line: 39, type: !32)
!12699 = !DILocalVariable(name: "esf", arg: 2, scope: !12694, file: !12675, line: 40, type: !12492)
!12700 = !DILocation(line: 0, scope: !12694)
!12701 = !DILocation(line: 46, column: 2, scope: !12694)
!12702 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12675, file: !12675, line: 81, type: !5750, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12703)
!12703 = !{!12704}
!12704 = !DILocalVariable(name: "reason", arg: 1, scope: !12702, file: !12675, line: 81, type: !32)
!12705 = !DILocation(line: 0, scope: !12702)
!12706 = !DILocation(line: 83, column: 2, scope: !12702)
!12707 = distinct !DISubprogram(name: "z_fatal_error", scope: !12675, file: !12675, line: 96, type: !12695, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12708)
!12708 = !{!12709, !12710, !12711, !12712}
!12709 = !DILocalVariable(name: "reason", arg: 1, scope: !12707, file: !12675, line: 96, type: !32)
!12710 = !DILocalVariable(name: "esf", arg: 2, scope: !12707, file: !12675, line: 96, type: !12492)
!12711 = !DILocalVariable(name: "key", scope: !12707, file: !12675, line: 102, type: !32)
!12712 = !DILocalVariable(name: "thread", scope: !12707, file: !12675, line: 103, type: !12536)
!12713 = !DILocation(line: 0, scope: !12707)
!12714 = !DILocation(line: 55, column: 2, scope: !12680, inlinedAt: !12715)
!12715 = distinct !DILocation(line: 102, column: 21, scope: !12707)
!12716 = !DILocation(line: 0, scope: !12680, inlinedAt: !12715)
!12717 = !DILocation(line: 119, column: 11, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12707, file: !12675, line: 119, column: 6)
!12719 = !DILocation(line: 119, column: 20, scope: !12718)
!12720 = !DILocation(line: 131, column: 2, scope: !12707)
!12721 = !DILocation(line: 151, column: 7, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !12675, line: 146, column: 32)
!12723 = distinct !DILexicalBlock(scope: !12707, file: !12675, line: 146, column: 6)
!12724 = !DILocation(line: 151, column: 21, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12722, file: !12675, line: 151, column: 7)
!12726 = !DILocation(line: 104, column: 4, scope: !12707)
!12727 = !DILocalVariable(name: "key", arg: 1, scope: !12728, file: !5739, line: 84, type: !32)
!12728 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12729)
!12729 = !{!12727}
!12730 = !DILocation(line: 0, scope: !12728, inlinedAt: !12731)
!12731 = distinct !DILocation(line: 186, column: 2, scope: !12707)
!12732 = !DILocation(line: 95, column: 2, scope: !12728, inlinedAt: !12731)
!12733 = !{i64 2241723}
!12734 = !DILocation(line: 189, column: 3, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12736, file: !12675, line: 188, column: 41)
!12736 = distinct !DILexicalBlock(scope: !12707, file: !12675, line: 188, column: 6)
!12737 = !DILocation(line: 191, column: 1, scope: !12707)
!12738 = distinct !DISubprogram(name: "k_current_get", scope: !296, file: !296, line: 530, type: !12739, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !317)
!12739 = !DISubroutineType(types: !12740)
!12740 = !{!12741}
!12741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !12536)
!12742 = !DILocation(line: 535, column: 9, scope: !12738)
!12743 = !DILocation(line: 535, column: 2, scope: !12738)
!12744 = distinct !DISubprogram(name: "k_thread_abort", scope: !3610, file: !3610, line: 188, type: !12745, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !12747)
!12745 = !DISubroutineType(types: !12746)
!12746 = !{null, !12741}
!12747 = !{!12748}
!12748 = !DILocalVariable(name: "thread", arg: 1, scope: !12744, file: !3610, line: 188, type: !12741)
!12749 = !DILocation(line: 0, scope: !12744)
!12750 = !DILocation(line: 197, column: 2, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12744, file: !3610, line: 197, column: 2)
!12752 = !{i64 2154741685}
!12753 = !DILocation(line: 198, column: 2, scope: !12744)
!12754 = !DILocation(line: 199, column: 1, scope: !12744)
!12755 = distinct !DISubprogram(name: "z_current_get", scope: !3610, file: !3610, line: 173, type: !12739, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3094, retainedNodes: !317)
!12756 = !DILocation(line: 180, column: 2, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12755, file: !3610, line: 180, column: 2)
!12758 = !{i64 2154741617}
!12759 = !DILocation(line: 181, column: 9, scope: !12755)
!12760 = !DILocation(line: 181, column: 2, scope: !12755)
!12761 = distinct !DISubprogram(name: "z_early_memset", scope: !1955, file: !1955, line: 108, type: !12762, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12764)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{null, !102, !103, !204}
!12764 = !{!12765, !12766, !12767}
!12765 = !DILocalVariable(name: "dst", arg: 1, scope: !12761, file: !1955, line: 108, type: !102)
!12766 = !DILocalVariable(name: "c", arg: 2, scope: !12761, file: !1955, line: 108, type: !103)
!12767 = !DILocalVariable(name: "n", arg: 3, scope: !12761, file: !1955, line: 108, type: !204)
!12768 = !DILocation(line: 0, scope: !12761)
!12769 = !DILocation(line: 110, column: 9, scope: !12761)
!12770 = !DILocation(line: 111, column: 1, scope: !12761)
!12771 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1955, file: !1955, line: 121, type: !12772, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12774)
!12772 = !DISubroutineType(types: !12773)
!12773 = !{null, !102, !13, !204}
!12774 = !{!12775, !12776, !12777}
!12775 = !DILocalVariable(name: "dst", arg: 1, scope: !12771, file: !1955, line: 121, type: !102)
!12776 = !DILocalVariable(name: "src", arg: 2, scope: !12771, file: !1955, line: 121, type: !13)
!12777 = !DILocalVariable(name: "n", arg: 3, scope: !12771, file: !1955, line: 121, type: !204)
!12778 = !DILocation(line: 0, scope: !12771)
!12779 = !DILocation(line: 123, column: 9, scope: !12771)
!12780 = !DILocation(line: 124, column: 1, scope: !12771)
!12781 = distinct !DISubprogram(name: "z_bss_zero", scope: !1955, file: !1955, line: 132, type: !3174, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !317)
!12782 = !DILocation(line: 143, column: 2, scope: !12781)
!12783 = !DILocation(line: 168, column: 1, scope: !12781)
!12784 = distinct !DISubprogram(name: "z_init_cpu", scope: !1955, file: !1955, line: 372, type: !7598, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12785)
!12785 = !{!12786}
!12786 = !DILocalVariable(name: "id", arg: 1, scope: !12784, file: !1955, line: 372, type: !103)
!12787 = !DILocation(line: 0, scope: !12784)
!12788 = !DILocation(line: 374, column: 2, scope: !12784)
!12789 = !DILocation(line: 375, column: 34, scope: !12784)
!12790 = !DILocation(line: 375, column: 19, scope: !12784)
!12791 = !DILocation(line: 375, column: 31, scope: !12784)
!12792 = !DILocation(line: 376, column: 24, scope: !12784)
!12793 = !DILocation(line: 376, column: 19, scope: !12784)
!12794 = !DILocation(line: 376, column: 22, scope: !12784)
!12795 = !DILocation(line: 378, column: 26, scope: !12784)
!12796 = !DILocation(line: 378, column: 4, scope: !12784)
!12797 = !DILocation(line: 378, column: 50, scope: !12784)
!12798 = !DILocation(line: 377, column: 19, scope: !12784)
!12799 = !DILocation(line: 377, column: 29, scope: !12784)
!12800 = !DILocation(line: 384, column: 1, scope: !12784)
!12801 = distinct !DISubprogram(name: "init_idle_thread", scope: !1955, file: !1955, line: 343, type: !7598, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12802)
!12802 = !{!12803, !12804, !12805, !12808}
!12803 = !DILocalVariable(name: "i", arg: 1, scope: !12801, file: !1955, line: 343, type: !103)
!12804 = !DILocalVariable(name: "thread", scope: !12801, file: !1955, line: 345, type: !2047)
!12805 = !DILocalVariable(name: "stack", scope: !12801, file: !1955, line: 346, type: !12806)
!12806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12807, size: 32)
!12807 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3489, line: 44, baseType: !2161)
!12808 = !DILocalVariable(name: "tname", scope: !12801, file: !1955, line: 358, type: !344)
!12809 = !DILocation(line: 0, scope: !12801)
!12810 = !DILocation(line: 345, column: 29, scope: !12801)
!12811 = !DILocation(line: 346, column: 28, scope: !12801)
!12812 = !DILocation(line: 362, column: 37, scope: !12801)
!12813 = !DILocation(line: 362, column: 36, scope: !12801)
!12814 = !DILocation(line: 361, column: 2, scope: !12801)
!12815 = !DILocation(line: 365, column: 2, scope: !12801)
!12816 = !DILocation(line: 370, column: 1, scope: !12801)
!12817 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2162, file: !2162, line: 331, type: !12818, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12820)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{!344, !12806}
!12820 = !{!12821}
!12821 = !DILocalVariable(name: "sym", arg: 1, scope: !12817, file: !2162, line: 331, type: !12806)
!12822 = !DILocation(line: 0, scope: !12817)
!12823 = !DILocation(line: 333, column: 21, scope: !12817)
!12824 = !DILocation(line: 333, column: 2, scope: !12817)
!12825 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12826, file: !12826, line: 155, type: !12827, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12829)
!12826 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12827 = !DISubroutineType(types: !12828)
!12828 = !{null, !2047}
!12829 = !{!12830}
!12830 = !DILocalVariable(name: "thread", arg: 1, scope: !12825, file: !12826, line: 155, type: !2047)
!12831 = !DILocation(line: 0, scope: !12825)
!12832 = !DILocation(line: 157, column: 15, scope: !12825)
!12833 = !DILocation(line: 157, column: 28, scope: !12825)
!12834 = !DILocation(line: 158, column: 1, scope: !12825)
!12835 = distinct !DISubprogram(name: "z_cstart", scope: !1955, file: !1955, line: 501, type: !3174, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12836)
!12836 = !{!12837}
!12837 = !DILocalVariable(name: "dummy_thread", scope: !12835, file: !1955, line: 518, type: !2048)
!12838 = !DILocation(line: 507, column: 2, scope: !12835)
!12839 = !DILocation(line: 43, column: 14, scope: !12840, inlinedAt: !12844)
!12840 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12841, file: !12841, line: 40, type: !3174, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12842)
!12841 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12842 = !{!12843}
!12843 = !DILocalVariable(name: "msp", scope: !12840, file: !12841, line: 42, type: !121)
!12844 = distinct !DILocation(line: 44, column: 2, scope: !12845, inlinedAt: !12847)
!12845 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12846, file: !12846, line: 42, type: !3174, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !317)
!12846 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12847 = distinct !DILocation(line: 510, column: 2, scope: !12835)
!12848 = !DILocation(line: 43, column: 3, scope: !12840, inlinedAt: !12844)
!12849 = !DILocation(line: 43, column: 60, scope: !12840, inlinedAt: !12844)
!12850 = !DILocation(line: 0, scope: !12840, inlinedAt: !12844)
!12851 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12852, file: !5954, line: 1153, type: !121)
!12852 = distinct !DISubprogram(name: "__set_MSP", scope: !5954, file: !5954, line: 1153, type: !6045, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12853)
!12853 = !{!12851}
!12854 = !DILocation(line: 0, scope: !12852, inlinedAt: !12855)
!12855 = distinct !DILocation(line: 46, column: 2, scope: !12840, inlinedAt: !12844)
!12856 = !DILocation(line: 1155, column: 3, scope: !12852, inlinedAt: !12855)
!12857 = !{i64 3515282}
!12858 = !DILocation(line: 62, column: 11, scope: !12840, inlinedAt: !12844)
!12859 = !DILocation(line: 102, column: 2, scope: !12860, inlinedAt: !12861)
!12860 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6748, file: !6748, line: 97, type: !3174, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !317)
!12861 = distinct !DILocation(line: 45, column: 2, scope: !12845, inlinedAt: !12847)
!12862 = !DILocation(line: 108, column: 2, scope: !12860, inlinedAt: !12861)
!12863 = !DILocation(line: 112, column: 2, scope: !12860, inlinedAt: !12861)
!12864 = !DILocation(line: 113, column: 2, scope: !12860, inlinedAt: !12861)
!12865 = !DILocation(line: 114, column: 2, scope: !12860, inlinedAt: !12861)
!12866 = !DILocation(line: 116, column: 2, scope: !12860, inlinedAt: !12861)
!12867 = !DILocation(line: 123, column: 13, scope: !12860, inlinedAt: !12861)
!12868 = !DILocation(line: 46, column: 2, scope: !12845, inlinedAt: !12847)
!12869 = !DILocation(line: 47, column: 2, scope: !12845, inlinedAt: !12847)
!12870 = !DILocation(line: 174, column: 12, scope: !12871, inlinedAt: !12872)
!12871 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6748, file: !6748, line: 169, type: !3174, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !317)
!12872 = distinct !DILocation(line: 48, column: 2, scope: !12845, inlinedAt: !12847)
!12873 = !DILocation(line: 179, column: 12, scope: !12871, inlinedAt: !12872)
!12874 = !DILocation(line: 50, column: 2, scope: !12845, inlinedAt: !12847)
!12875 = !DILocation(line: 57, column: 2, scope: !12845, inlinedAt: !12847)
!12876 = !DILocation(line: 518, column: 2, scope: !12835)
!12877 = !DILocation(line: 518, column: 18, scope: !12835)
!12878 = !DILocation(line: 520, column: 2, scope: !12835)
!12879 = !DILocation(line: 523, column: 2, scope: !12835)
!12880 = !DILocation(line: 526, column: 2, scope: !12835)
!12881 = !DILocation(line: 527, column: 2, scope: !12835)
!12882 = !DILocation(line: 543, column: 24, scope: !12835)
!12883 = !DILocation(line: 543, column: 2, scope: !12835)
!12884 = !DILocation(line: 0, scope: !2181)
!12885 = !DILocation(line: 246, column: 15, scope: !2199)
!12886 = !DILocation(line: 246, column: 36, scope: !2198)
!12887 = !DILocation(line: 246, column: 2, scope: !2199)
!12888 = !DILocation(line: 247, column: 37, scope: !2197)
!12889 = !DILocation(line: 0, scope: !2197)
!12890 = !DILocation(line: 248, column: 19, scope: !2197)
!12891 = !DILocation(line: 248, column: 12, scope: !2197)
!12892 = !DILocation(line: 250, column: 11, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !2197, file: !1955, line: 250, column: 7)
!12894 = !DILocation(line: 250, column: 7, scope: !2197)
!12895 = !DILocation(line: 254, column: 11, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12897, file: !1955, line: 254, column: 8)
!12897 = distinct !DILexicalBlock(scope: !12893, file: !1955, line: 250, column: 20)
!12898 = !DILocation(line: 254, column: 8, scope: !12897)
!12899 = !DILocation(line: 255, column: 9, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12896, file: !1955, line: 254, column: 17)
!12901 = !DILocation(line: 258, column: 9, scope: !12900)
!12902 = !DILocation(line: 261, column: 28, scope: !12900)
!12903 = !DILocation(line: 261, column: 10, scope: !12900)
!12904 = !DILocation(line: 261, column: 17, scope: !12900)
!12905 = !DILocation(line: 261, column: 26, scope: !12900)
!12906 = !DILocation(line: 262, column: 4, scope: !12900)
!12907 = !DILocation(line: 263, column: 9, scope: !12897)
!12908 = !DILocation(line: 263, column: 16, scope: !12897)
!12909 = !DILocation(line: 263, column: 28, scope: !12897)
!12910 = !DILocation(line: 264, column: 3, scope: !12897)
!12911 = !DILocation(line: 246, column: 60, scope: !2198)
!12912 = distinct !{!12912, !12887, !12913}
!12913 = !DILocation(line: 265, column: 2, scope: !2199)
!12914 = !DILocation(line: 266, column: 1, scope: !2181)
!12915 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !515, file: !515, line: 1814, type: !5988, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12916)
!12916 = !{!12917, !12918}
!12917 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12915, file: !515, line: 1814, type: !771)
!12918 = !DILocalVariable(name: "priority", arg: 2, scope: !12915, file: !515, line: 1814, type: !121)
!12919 = !DILocation(line: 0, scope: !12915)
!12920 = !DILocation(line: 1822, column: 48, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12922, file: !515, line: 1821, column: 3)
!12922 = distinct !DILexicalBlock(scope: !12915, file: !515, line: 1816, column: 7)
!12923 = !DILocation(line: 1822, column: 32, scope: !12921)
!12924 = !DILocation(line: 1822, column: 40, scope: !12921)
!12925 = !DILocation(line: 1822, column: 5, scope: !12921)
!12926 = !DILocation(line: 1822, column: 46, scope: !12921)
!12927 = !DILocation(line: 1824, column: 1, scope: !12915)
!12928 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12846, file: !12846, line: 32, type: !3174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!12929 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12930, file: !12930, line: 215, type: !12827, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12931)
!12930 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12931 = !{!12932}
!12932 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12929, file: !12930, line: 215, type: !2047)
!12933 = !DILocation(line: 0, scope: !12929)
!12934 = !DILocation(line: 217, column: 21, scope: !12929)
!12935 = !DILocation(line: 217, column: 34, scope: !12929)
!12936 = !DILocation(line: 221, column: 21, scope: !12929)
!12937 = !DILocation(line: 221, column: 34, scope: !12929)
!12938 = !DILocation(line: 223, column: 27, scope: !12929)
!12939 = !DILocation(line: 223, column: 33, scope: !12929)
!12940 = !DILocation(line: 224, column: 27, scope: !12929)
!12941 = !DILocation(line: 224, column: 32, scope: !12929)
!12942 = !DILocation(line: 232, column: 16, scope: !12929)
!12943 = !DILocation(line: 232, column: 30, scope: !12929)
!12944 = !DILocation(line: 239, column: 24, scope: !12929)
!12945 = !DILocation(line: 240, column: 1, scope: !12929)
!12946 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1955, file: !1955, line: 399, type: !342, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12947)
!12947 = !{!12948}
!12948 = !DILocalVariable(name: "stack_ptr", scope: !12946, file: !1955, line: 401, type: !344)
!12949 = !DILocation(line: 404, column: 2, scope: !12946)
!12950 = !DILocation(line: 416, column: 24, scope: !12946)
!12951 = !DILocation(line: 418, column: 14, scope: !12946)
!12952 = !DILocation(line: 0, scope: !12946)
!12953 = !DILocation(line: 423, column: 2, scope: !12946)
!12954 = !DILocation(line: 424, column: 2, scope: !12946)
!12955 = !DILocation(line: 426, column: 2, scope: !12946)
!12956 = !DILocation(line: 428, column: 2, scope: !12946)
!12957 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1955, file: !1955, line: 432, type: !12958, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12960)
!12958 = !DISubroutineType(types: !12959)
!12959 = !{null, !344}
!12960 = !{!12961}
!12961 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12957, file: !1955, line: 432, type: !344)
!12962 = !DILocation(line: 0, scope: !12957)
!12963 = !DILocation(line: 435, column: 2, scope: !12957)
!12964 = !DILocation(line: 445, column: 2, scope: !12957)
!12965 = distinct !DISubprogram(name: "bg_thread_main", scope: !1955, file: !1955, line: 277, type: !3491, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1951, retainedNodes: !12966)
!12966 = !{!12967, !12968, !12969}
!12967 = !DILocalVariable(name: "unused1", arg: 1, scope: !12965, file: !1955, line: 277, type: !102)
!12968 = !DILocalVariable(name: "unused2", arg: 2, scope: !12965, file: !1955, line: 277, type: !102)
!12969 = !DILocalVariable(name: "unused3", arg: 3, scope: !12965, file: !1955, line: 277, type: !102)
!12970 = !DILocation(line: 0, scope: !12965)
!12971 = !DILocation(line: 291, column: 20, scope: !12965)
!12972 = !DILocation(line: 293, column: 2, scope: !12965)
!12973 = !DILocation(line: 297, column: 2, scope: !12965)
!12974 = !DILocation(line: 305, column: 2, scope: !12965)
!12975 = !DILocation(line: 307, column: 2, scope: !12965)
!12976 = !DILocation(line: 330, column: 8, scope: !12965)
!12977 = !DILocation(line: 333, column: 34, scope: !12965)
!12978 = !DILocation(line: 339, column: 1, scope: !12965)
!12979 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2208, file: !2208, line: 45, type: !12980, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !12988)
!12980 = !DISubroutineType(types: !12981)
!12981 = !{null, !12982, !102}
!12982 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !296, line: 103, baseType: !12983)
!12983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12984, size: 32)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{null, !12986, !102}
!12986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12987, size: 32)
!12987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2213)
!12988 = !{!12989, !12990}
!12989 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12979, file: !2208, line: 45, type: !12982)
!12990 = !DILocalVariable(name: "user_data", arg: 2, scope: !12979, file: !2208, line: 45, type: !102)
!12991 = !DILocation(line: 0, scope: !12979)
!12992 = !DILocation(line: 71, column: 1, scope: !12979)
!12993 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2208, file: !2208, line: 73, type: !12980, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !12994)
!12994 = !{!12995, !12996}
!12995 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12993, file: !2208, line: 73, type: !12982)
!12996 = !DILocalVariable(name: "user_data", arg: 2, scope: !12993, file: !2208, line: 73, type: !102)
!12997 = !DILocation(line: 0, scope: !12993)
!12998 = !DILocation(line: 95, column: 1, scope: !12993)
!12999 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2208, file: !2208, line: 97, type: !6749, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!13000 = !DILocation(line: 1031, column: 3, scope: !13001, inlinedAt: !13004)
!13001 = distinct !DISubprogram(name: "__get_IPSR", scope: !5954, file: !5954, line: 1027, type: !6035, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13002)
!13002 = !{!13003}
!13003 = !DILocalVariable(name: "result", scope: !13001, file: !5954, line: 1029, type: !121)
!13004 = distinct !DILocation(line: 48, column: 10, scope: !13005, inlinedAt: !13006)
!13005 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6748, file: !6748, line: 46, type: !6749, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!13006 = distinct !DILocation(line: 99, column: 9, scope: !12999)
!13007 = !{i64 3520933}
!13008 = !DILocation(line: 0, scope: !13001, inlinedAt: !13004)
!13009 = !DILocation(line: 48, column: 9, scope: !13005, inlinedAt: !13006)
!13010 = !DILocation(line: 99, column: 2, scope: !12999)
!13011 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2208, file: !2208, line: 106, type: !3174, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!13012 = !DILocation(line: 108, column: 2, scope: !13011)
!13013 = !DILocation(line: 108, column: 17, scope: !13011)
!13014 = !DILocation(line: 108, column: 30, scope: !13011)
!13015 = !DILocation(line: 109, column: 1, scope: !13011)
!13016 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2208, file: !2208, line: 116, type: !3174, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!13017 = !DILocation(line: 118, column: 2, scope: !13016)
!13018 = !DILocation(line: 118, column: 17, scope: !13016)
!13019 = !DILocation(line: 118, column: 30, scope: !13016)
!13020 = !DILocation(line: 119, column: 1, scope: !13016)
!13021 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2208, file: !2208, line: 126, type: !6749, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !317)
!13022 = !DILocation(line: 128, column: 10, scope: !13021)
!13023 = !DILocation(line: 128, column: 25, scope: !13021)
!13024 = !DILocation(line: 128, column: 38, scope: !13021)
!13025 = !DILocation(line: 128, column: 53, scope: !13021)
!13026 = !DILocation(line: 128, column: 2, scope: !13021)
!13027 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2208, file: !2208, line: 187, type: !13028, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13030)
!13028 = !DISubroutineType(types: !13029)
!13029 = !{!103, !2212, !144}
!13030 = !{!13031, !13032}
!13031 = !DILocalVariable(name: "thread", arg: 1, scope: !13027, file: !2208, line: 187, type: !2212)
!13032 = !DILocalVariable(name: "value", arg: 2, scope: !13027, file: !2208, line: 187, type: !144)
!13033 = !DILocation(line: 0, scope: !13027)
!13034 = !DILocation(line: 206, column: 2, scope: !13027)
!13035 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2208, file: !2208, line: 238, type: !13036, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13038)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!144, !2212}
!13038 = !{!13039}
!13039 = !DILocalVariable(name: "thread", arg: 1, scope: !13035, file: !2208, line: 238, type: !2212)
!13040 = !DILocation(line: 0, scope: !13035)
!13041 = !DILocation(line: 244, column: 2, scope: !13035)
!13042 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2208, file: !2208, line: 248, type: !13043, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13045)
!13043 = !DISubroutineType(types: !13044)
!13044 = !{!103, !2211, !344, !204}
!13045 = !{!13046, !13047, !13048}
!13046 = !DILocalVariable(name: "thread", arg: 1, scope: !13042, file: !2208, line: 248, type: !2211)
!13047 = !DILocalVariable(name: "buf", arg: 2, scope: !13042, file: !2208, line: 248, type: !344)
!13048 = !DILocalVariable(name: "size", arg: 3, scope: !13042, file: !2208, line: 248, type: !204)
!13049 = !DILocation(line: 0, scope: !13042)
!13050 = !DILocation(line: 257, column: 2, scope: !13042)
!13051 = !DILocation(line: 0, scope: !2207)
!13052 = !DILocation(line: 281, column: 11, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !2207, file: !2208, line: 281, column: 6)
!13054 = !DILocation(line: 281, column: 20, scope: !13053)
!13055 = !DILocation(line: 275, column: 45, scope: !2207)
!13056 = !DILocation(line: 285, column: 10, scope: !2207)
!13057 = !DILocation(line: 0, scope: !2328)
!13058 = !DILocation(line: 293, column: 39, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !2328, file: !2208, line: 293, column: 2)
!13060 = !DILocation(line: 293, column: 2, scope: !2328)
!13061 = !DILocation(line: 273, column: 14, scope: !2207)
!13062 = !DILocation(line: 309, column: 2, scope: !2207)
!13063 = !DILocation(line: 309, column: 11, scope: !2207)
!13064 = !DILocation(line: 311, column: 2, scope: !2207)
!13065 = !DILocation(line: 293, column: 26, scope: !13059)
!13066 = !DILocation(line: 294, column: 9, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13059, file: !2208, line: 293, column: 54)
!13068 = !DILocation(line: 295, column: 21, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13067, file: !2208, line: 295, column: 7)
!13070 = !DILocation(line: 295, column: 28, scope: !13069)
!13071 = !DILocation(line: 295, column: 7, scope: !13067)
!13072 = !DILocation(line: 299, column: 25, scope: !13067)
!13073 = !DILocation(line: 299, column: 41, scope: !13067)
!13074 = !DILocation(line: 300, column: 7, scope: !13067)
!13075 = !DILocation(line: 300, column: 26, scope: !13067)
!13076 = !DILocation(line: 299, column: 10, scope: !13067)
!13077 = !DILocation(line: 299, column: 7, scope: !13067)
!13078 = !DILocation(line: 302, column: 16, scope: !13067)
!13079 = !DILocation(line: 304, column: 20, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13067, file: !2208, line: 304, column: 7)
!13081 = !DILocation(line: 304, column: 7, scope: !13067)
!13082 = !DILocation(line: 305, column: 26, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13080, file: !2208, line: 304, column: 26)
!13084 = !DILocation(line: 305, column: 42, scope: !13083)
!13085 = !DILocation(line: 305, column: 11, scope: !13083)
!13086 = !DILocation(line: 305, column: 8, scope: !13083)
!13087 = !DILocation(line: 306, column: 3, scope: !13083)
!13088 = !DILocation(line: 293, column: 50, scope: !13059)
!13089 = !DILocation(line: 312, column: 1, scope: !2207)
!13090 = distinct !DISubprogram(name: "copy_bytes", scope: !2208, file: !2208, line: 261, type: !13091, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13093)
!13091 = !DISubroutineType(types: !13092)
!13092 = !{!204, !344, !204, !144, !204}
!13093 = !{!13094, !13095, !13096, !13097, !13098}
!13094 = !DILocalVariable(name: "dest", arg: 1, scope: !13090, file: !2208, line: 261, type: !344)
!13095 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13090, file: !2208, line: 261, type: !204)
!13096 = !DILocalVariable(name: "src", arg: 3, scope: !13090, file: !2208, line: 261, type: !144)
!13097 = !DILocalVariable(name: "src_size", arg: 4, scope: !13090, file: !2208, line: 261, type: !204)
!13098 = !DILocalVariable(name: "bytes_to_copy", scope: !13090, file: !2208, line: 263, type: !204)
!13099 = !DILocation(line: 0, scope: !13090)
!13100 = !DILocation(line: 265, column: 18, scope: !13090)
!13101 = !DILocation(line: 266, column: 2, scope: !13090)
!13102 = !DILocation(line: 268, column: 2, scope: !13090)
!13103 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2208, file: !2208, line: 383, type: !13104, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13106)
!13104 = !DISubroutineType(types: !13105)
!13105 = !{null, !2212}
!13106 = !{!13107}
!13107 = !DILocalVariable(name: "thread", arg: 1, scope: !13103, file: !2208, line: 383, type: !2212)
!13108 = !DILocation(line: 0, scope: !13103)
!13109 = !DILocation(line: 387, column: 2, scope: !13103)
!13110 = !DILocation(line: 388, column: 1, scope: !13103)
!13111 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2208, file: !2208, line: 528, type: !13112, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13119)
!13112 = !DISubroutineType(types: !13113)
!13113 = !{!344, !2212, !13114, !204, !3488, !102, !102, !102, !103, !121, !144}
!13114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13115, size: 32)
!13115 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3489, line: 44, baseType: !13116)
!13116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2162, line: 47, size: 8, elements: !13117)
!13117 = !{!13118}
!13118 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13116, file: !2162, line: 48, baseType: !146, size: 8)
!13119 = !{!13120, !13121, !13122, !13123, !13124, !13125, !13126, !13127, !13128, !13129, !13130}
!13120 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13111, file: !2208, line: 528, type: !2212)
!13121 = !DILocalVariable(name: "stack", arg: 2, scope: !13111, file: !2208, line: 529, type: !13114)
!13122 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13111, file: !2208, line: 529, type: !204)
!13123 = !DILocalVariable(name: "entry", arg: 4, scope: !13111, file: !2208, line: 530, type: !3488)
!13124 = !DILocalVariable(name: "p1", arg: 5, scope: !13111, file: !2208, line: 531, type: !102)
!13125 = !DILocalVariable(name: "p2", arg: 6, scope: !13111, file: !2208, line: 531, type: !102)
!13126 = !DILocalVariable(name: "p3", arg: 7, scope: !13111, file: !2208, line: 531, type: !102)
!13127 = !DILocalVariable(name: "prio", arg: 8, scope: !13111, file: !2208, line: 532, type: !103)
!13128 = !DILocalVariable(name: "options", arg: 9, scope: !13111, file: !2208, line: 532, type: !121)
!13129 = !DILocalVariable(name: "name", arg: 10, scope: !13111, file: !2208, line: 532, type: !144)
!13130 = !DILocalVariable(name: "stack_ptr", scope: !13111, file: !2208, line: 534, type: !344)
!13131 = !DILocation(line: 0, scope: !13111)
!13132 = !DILocation(line: 550, column: 28, scope: !13111)
!13133 = !DILocation(line: 550, column: 2, scope: !13111)
!13134 = !DILocation(line: 553, column: 34, scope: !13111)
!13135 = !DILocation(line: 553, column: 2, scope: !13111)
!13136 = !DILocation(line: 554, column: 14, scope: !13111)
!13137 = !DILocation(line: 564, column: 2, scope: !13111)
!13138 = !DILocation(line: 567, column: 14, scope: !13111)
!13139 = !DILocation(line: 567, column: 24, scope: !13111)
!13140 = !DILocation(line: 612, column: 7, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13111, file: !2208, line: 612, column: 6)
!13142 = !DILocation(line: 612, column: 6, scope: !13111)
!13143 = !DILocation(line: 627, column: 40, scope: !13111)
!13144 = !DILocation(line: 637, column: 2, scope: !13111)
!13145 = !DILocation(line: 613, column: 15, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13141, file: !2208, line: 612, column: 17)
!13147 = !DILocation(line: 613, column: 29, scope: !13146)
!13148 = !DILocation(line: 638, column: 1, scope: !13111)
!13149 = distinct !DISubprogram(name: "z_waitq_init", scope: !13150, file: !13150, line: 47, type: !13151, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13153)
!13150 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13151 = !DISubroutineType(types: !13152)
!13152 = !{null, !2243}
!13153 = !{!13154}
!13154 = !DILocalVariable(name: "w", arg: 1, scope: !13149, file: !13150, line: 47, type: !2243)
!13155 = !DILocation(line: 0, scope: !13149)
!13156 = !DILocation(line: 49, column: 21, scope: !13149)
!13157 = !DILocation(line: 49, column: 2, scope: !13149)
!13158 = !DILocation(line: 50, column: 1, scope: !13149)
!13159 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2208, file: !2208, line: 791, type: !13160, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13163)
!13160 = !DISubroutineType(types: !13161)
!13161 = !{null, !13162, !103, !121, !32}
!13162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!13163 = !{!13164, !13165, !13166, !13167}
!13164 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13159, file: !2208, line: 791, type: !13162)
!13165 = !DILocalVariable(name: "priority", arg: 2, scope: !13159, file: !2208, line: 791, type: !103)
!13166 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13159, file: !2208, line: 792, type: !121)
!13167 = !DILocalVariable(name: "options", arg: 4, scope: !13159, file: !2208, line: 792, type: !32)
!13168 = !DILocation(line: 0, scope: !13159)
!13169 = !DILocation(line: 795, column: 15, scope: !13159)
!13170 = !DILocation(line: 795, column: 25, scope: !13159)
!13171 = !DILocation(line: 796, column: 30, scope: !13159)
!13172 = !DILocation(line: 796, column: 15, scope: !13159)
!13173 = !DILocation(line: 796, column: 28, scope: !13159)
!13174 = !DILocation(line: 797, column: 30, scope: !13159)
!13175 = !DILocation(line: 797, column: 15, scope: !13159)
!13176 = !DILocation(line: 797, column: 28, scope: !13159)
!13177 = !DILocation(line: 799, column: 22, scope: !13159)
!13178 = !DILocation(line: 799, column: 15, scope: !13159)
!13179 = !DILocation(line: 799, column: 20, scope: !13159)
!13180 = !DILocation(line: 801, column: 15, scope: !13159)
!13181 = !DILocation(line: 801, column: 28, scope: !13159)
!13182 = !DILocation(line: 814, column: 2, scope: !13159)
!13183 = !DILocation(line: 815, column: 1, scope: !13159)
!13184 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2208, file: !2208, line: 449, type: !13185, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13187)
!13185 = !DISubroutineType(types: !13186)
!13186 = !{!344, !2212, !13114, !204}
!13187 = !{!13188, !13189, !13190, !13191, !13192, !13193, !13194, !13195}
!13188 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13184, file: !2208, line: 449, type: !2212)
!13189 = !DILocalVariable(name: "stack", arg: 2, scope: !13184, file: !2208, line: 450, type: !13114)
!13190 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13184, file: !2208, line: 450, type: !204)
!13191 = !DILocalVariable(name: "stack_obj_size", scope: !13184, file: !2208, line: 452, type: !204)
!13192 = !DILocalVariable(name: "stack_buf_size", scope: !13184, file: !2208, line: 452, type: !204)
!13193 = !DILocalVariable(name: "stack_ptr", scope: !13184, file: !2208, line: 453, type: !344)
!13194 = !DILocalVariable(name: "stack_buf_start", scope: !13184, file: !2208, line: 453, type: !344)
!13195 = !DILocalVariable(name: "delta", scope: !13184, file: !2208, line: 454, type: !204)
!13196 = !DILocation(line: 0, scope: !13184)
!13197 = !DILocation(line: 465, column: 20, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13184, file: !2208, line: 463, column: 2)
!13199 = !DILocation(line: 466, column: 21, scope: !13198)
!13200 = !DILocation(line: 473, column: 28, scope: !13184)
!13201 = !DILocation(line: 514, column: 33, scope: !13184)
!13202 = !DILocation(line: 514, column: 25, scope: !13184)
!13203 = !DILocation(line: 514, column: 31, scope: !13184)
!13204 = !DILocation(line: 515, column: 25, scope: !13184)
!13205 = !DILocation(line: 515, column: 30, scope: !13184)
!13206 = !DILocation(line: 516, column: 25, scope: !13184)
!13207 = !DILocation(line: 516, column: 31, scope: !13184)
!13208 = !DILocation(line: 520, column: 2, scope: !13184)
!13209 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2162, file: !2162, line: 331, type: !13210, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13212)
!13210 = !DISubroutineType(types: !13211)
!13211 = !{!344, !13114}
!13212 = !{!13213}
!13213 = !DILocalVariable(name: "sym", arg: 1, scope: !13209, file: !2162, line: 331, type: !13114)
!13214 = !DILocation(line: 0, scope: !13209)
!13215 = !DILocation(line: 333, column: 21, scope: !13209)
!13216 = !DILocation(line: 333, column: 2, scope: !13209)
!13217 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13218, file: !13218, line: 40, type: !13219, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13221)
!13218 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13219 = !DISubroutineType(types: !13220)
!13220 = !{null, !13162}
!13221 = !{!13222}
!13222 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13217, file: !13218, line: 40, type: !13162)
!13223 = !DILocation(line: 0, scope: !13217)
!13224 = !DILocation(line: 42, column: 31, scope: !13217)
!13225 = !DILocation(line: 42, column: 2, scope: !13217)
!13226 = !DILocation(line: 43, column: 1, scope: !13217)
!13227 = distinct !DISubprogram(name: "z_init_timeout", scope: !13218, file: !13218, line: 25, type: !2269, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13228)
!13228 = !{!13229}
!13229 = !DILocalVariable(name: "to", arg: 1, scope: !13227, file: !13218, line: 25, type: !2271)
!13230 = !DILocation(line: 0, scope: !13227)
!13231 = !DILocation(line: 27, column: 22, scope: !13227)
!13232 = !DILocation(line: 27, column: 2, scope: !13227)
!13233 = !DILocation(line: 28, column: 1, scope: !13227)
!13234 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !13235, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13237)
!13235 = !DISubroutineType(types: !13236)
!13236 = !{null, !2315}
!13237 = !{!13238}
!13238 = !DILocalVariable(name: "node", arg: 1, scope: !13234, file: !325, line: 211, type: !2315)
!13239 = !DILocation(line: 0, scope: !13234)
!13240 = !DILocation(line: 213, column: 8, scope: !13234)
!13241 = !DILocation(line: 213, column: 13, scope: !13234)
!13242 = !DILocation(line: 214, column: 8, scope: !13234)
!13243 = !DILocation(line: 214, column: 13, scope: !13234)
!13244 = !DILocation(line: 215, column: 1, scope: !13234)
!13245 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13246, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13249)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{null, !13248}
!13248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!13249 = !{!13250}
!13250 = !DILocalVariable(name: "list", arg: 1, scope: !13245, file: !325, line: 197, type: !13248)
!13251 = !DILocation(line: 0, scope: !13245)
!13252 = !DILocation(line: 199, column: 8, scope: !13245)
!13253 = !DILocation(line: 199, column: 13, scope: !13245)
!13254 = !DILocation(line: 200, column: 8, scope: !13245)
!13255 = !DILocation(line: 200, column: 13, scope: !13245)
!13256 = !DILocation(line: 201, column: 1, scope: !13245)
!13257 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2208, file: !2208, line: 641, type: !13258, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13264)
!13258 = !DISubroutineType(types: !13259)
!13259 = !{!2211, !2212, !13114, !204, !3488, !102, !102, !102, !103, !121, !13260}
!13260 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !13261)
!13261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !13262)
!13262 = !{!13263}
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13261, file: !201, line: 66, baseType: !200, size: 64)
!13264 = !{!13265, !13266, !13267, !13268, !13269, !13270, !13271, !13272, !13273, !13274}
!13265 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13257, file: !2208, line: 641, type: !2212)
!13266 = !DILocalVariable(name: "stack", arg: 2, scope: !13257, file: !2208, line: 642, type: !13114)
!13267 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13257, file: !2208, line: 643, type: !204)
!13268 = !DILocalVariable(name: "entry", arg: 4, scope: !13257, file: !2208, line: 643, type: !3488)
!13269 = !DILocalVariable(name: "p1", arg: 5, scope: !13257, file: !2208, line: 644, type: !102)
!13270 = !DILocalVariable(name: "p2", arg: 6, scope: !13257, file: !2208, line: 644, type: !102)
!13271 = !DILocalVariable(name: "p3", arg: 7, scope: !13257, file: !2208, line: 644, type: !102)
!13272 = !DILocalVariable(name: "prio", arg: 8, scope: !13257, file: !2208, line: 645, type: !103)
!13273 = !DILocalVariable(name: "options", arg: 9, scope: !13257, file: !2208, line: 645, type: !121)
!13274 = !DILocalVariable(name: "delay", arg: 10, scope: !13257, file: !2208, line: 645, type: !13260)
!13275 = !DILocation(line: 0, scope: !13257)
!13276 = !DILocation(line: 649, column: 2, scope: !13257)
!13277 = !DILocation(line: 652, column: 7, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13257, file: !2208, line: 652, column: 6)
!13279 = !DILocation(line: 652, column: 6, scope: !13257)
!13280 = !DILocation(line: 653, column: 3, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13278, file: !2208, line: 652, column: 39)
!13282 = !DILocation(line: 654, column: 2, scope: !13281)
!13283 = !DILocation(line: 656, column: 2, scope: !13257)
!13284 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2208, file: !2208, line: 401, type: !13285, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13287)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{null, !2212, !13260}
!13287 = !{!13288, !13289}
!13288 = !DILocalVariable(name: "thread", arg: 1, scope: !13284, file: !2208, line: 401, type: !2212)
!13289 = !DILocalVariable(name: "delay", arg: 2, scope: !13284, file: !2208, line: 401, type: !13260)
!13290 = !DILocation(line: 0, scope: !13284)
!13291 = !DILocation(line: 404, column: 6, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13284, file: !2208, line: 404, column: 6)
!13293 = !DILocation(line: 404, column: 6, scope: !13284)
!13294 = !DILocation(line: 405, column: 3, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13292, file: !2208, line: 404, column: 38)
!13296 = !DILocation(line: 406, column: 2, scope: !13295)
!13297 = !DILocation(line: 407, column: 3, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13292, file: !2208, line: 406, column: 9)
!13299 = !DILocation(line: 413, column: 1, scope: !13284)
!13300 = distinct !DISubprogram(name: "k_thread_start", scope: !3610, file: !3610, line: 205, type: !13301, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13303)
!13301 = !DISubroutineType(types: !13302)
!13302 = !{null, !2211}
!13303 = !{!13304}
!13304 = !DILocalVariable(name: "thread", arg: 1, scope: !13300, file: !3610, line: 205, type: !2211)
!13305 = !DILocation(line: 0, scope: !13300)
!13306 = !DILocation(line: 214, column: 2, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13300, file: !3610, line: 214, column: 2)
!13308 = !{i64 2154766909}
!13309 = !DILocation(line: 215, column: 2, scope: !13300)
!13310 = !DILocation(line: 216, column: 1, scope: !13300)
!13311 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13218, file: !13218, line: 47, type: !13285, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13312)
!13312 = !{!13313, !13314}
!13313 = !DILocalVariable(name: "thread", arg: 1, scope: !13311, file: !13218, line: 47, type: !2212)
!13314 = !DILocalVariable(name: "ticks", arg: 2, scope: !13311, file: !13218, line: 47, type: !13260)
!13315 = !DILocation(line: 0, scope: !13311)
!13316 = !DILocation(line: 49, column: 30, scope: !13311)
!13317 = !DILocation(line: 49, column: 2, scope: !13311)
!13318 = !DILocation(line: 50, column: 1, scope: !13311)
!13319 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2208, file: !2208, line: 748, type: !3174, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13320)
!13320 = !{!13321, !13339}
!13321 = !DILocalVariable(name: "thread_data", scope: !13322, file: !2208, line: 750, type: !13323)
!13322 = distinct !DILexicalBlock(scope: !13319, file: !2208, line: 750, column: 2)
!13323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13324, size: 32)
!13324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !296, line: 620, size: 384, elements: !13325)
!13325 = !{!13326, !13327, !13328, !13329, !13330, !13331, !13332, !13333, !13334, !13335, !13336, !13338}
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13324, file: !296, line: 621, baseType: !2212, size: 32)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13324, file: !296, line: 622, baseType: !13114, size: 32, offset: 32)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13324, file: !296, line: 623, baseType: !32, size: 32, offset: 64)
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13324, file: !296, line: 624, baseType: !3488, size: 32, offset: 96)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13324, file: !296, line: 625, baseType: !102, size: 32, offset: 128)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13324, file: !296, line: 626, baseType: !102, size: 32, offset: 160)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13324, file: !296, line: 627, baseType: !102, size: 32, offset: 192)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13324, file: !296, line: 628, baseType: !103, size: 32, offset: 224)
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13324, file: !296, line: 629, baseType: !121, size: 32, offset: 256)
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13324, file: !296, line: 630, baseType: !745, size: 32, offset: 288)
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13324, file: !296, line: 631, baseType: !13337, size: 32, offset: 320)
!13337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13324, file: !296, line: 632, baseType: !144, size: 32, offset: 352)
!13339 = !DILocalVariable(name: "thread_data", scope: !13340, file: !2208, line: 781, type: !13323)
!13340 = distinct !DILexicalBlock(scope: !13319, file: !2208, line: 781, column: 2)
!13341 = !DILocation(line: 0, scope: !13322)
!13342 = !DILocation(line: 750, column: 2, scope: !13322)
!13343 = !DILocation(line: 780, column: 2, scope: !13319)
!13344 = !DILocation(line: 0, scope: !13340)
!13345 = !DILocation(line: 781, column: 2, scope: !13340)
!13346 = !DILocation(line: 752, column: 17, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13348, file: !2208, line: 750, column: 38)
!13348 = distinct !DILexicalBlock(scope: !13322, file: !2208, line: 750, column: 2)
!13349 = !DILocation(line: 753, column: 17, scope: !13347)
!13350 = !DILocation(line: 754, column: 17, scope: !13347)
!13351 = !DILocation(line: 755, column: 17, scope: !13347)
!13352 = !DILocation(line: 756, column: 17, scope: !13347)
!13353 = !DILocation(line: 757, column: 17, scope: !13347)
!13354 = !DILocation(line: 758, column: 17, scope: !13347)
!13355 = !DILocation(line: 759, column: 17, scope: !13347)
!13356 = !DILocation(line: 760, column: 17, scope: !13347)
!13357 = !DILocation(line: 751, column: 3, scope: !13347)
!13358 = !DILocation(line: 763, column: 16, scope: !13347)
!13359 = !DILocation(line: 763, column: 29, scope: !13347)
!13360 = !DILocation(line: 763, column: 39, scope: !13347)
!13361 = !DILocation(line: 750, column: 2, scope: !13348)
!13362 = !DILocation(line: 750, column: 2, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13348, file: !2208, line: 750, column: 2)
!13364 = distinct !{!13364, !13342, !13365}
!13365 = !DILocation(line: 764, column: 2, scope: !13322)
!13366 = !DILocation(line: 787, column: 2, scope: !13319)
!13367 = !DILocation(line: 788, column: 1, scope: !13319)
!13368 = !DILocation(line: 782, column: 20, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !2208, line: 782, column: 7)
!13370 = distinct !DILexicalBlock(scope: !13371, file: !2208, line: 781, column: 38)
!13371 = distinct !DILexicalBlock(scope: !13340, file: !2208, line: 781, column: 2)
!13372 = !DILocation(line: 782, column: 31, scope: !13369)
!13373 = !DILocation(line: 782, column: 7, scope: !13370)
!13374 = !DILocation(line: 783, column: 37, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13369, file: !2208, line: 782, column: 51)
!13376 = !DILocation(line: 784, column: 10, scope: !13375)
!13377 = !DILocation(line: 783, column: 4, scope: !13375)
!13378 = !DILocation(line: 785, column: 3, scope: !13375)
!13379 = !DILocation(line: 781, column: 2, scope: !13371)
!13380 = !DILocation(line: 781, column: 2, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13371, file: !2208, line: 781, column: 2)
!13382 = distinct !{!13382, !13345, !13383}
!13383 = !DILocation(line: 786, column: 2, scope: !13340)
!13384 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13385, file: !13385, line: 403, type: !13386, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13388)
!13385 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13386 = !DISubroutineType(types: !13387)
!13387 = !{!1595, !1595}
!13388 = !{!13389}
!13389 = !DILocalVariable(name: "t", arg: 1, scope: !13384, file: !13385, line: 403, type: !1595)
!13390 = !DILocation(line: 0, scope: !13384)
!13391 = !DILocalVariable(name: "t", arg: 1, scope: !13392, file: !13385, line: 102, type: !1595)
!13392 = distinct !DISubprogram(name: "z_tmcvt", scope: !13385, file: !13385, line: 102, type: !13393, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13395)
!13393 = !DISubroutineType(types: !13394)
!13394 = !{!1595, !1595, !121, !121, !157, !157, !157, !157}
!13395 = !{!13391, !13396, !13397, !13398, !13399, !13400, !13401, !13402, !13403, !13404, !13405}
!13396 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13392, file: !13385, line: 102, type: !121)
!13397 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13392, file: !13385, line: 103, type: !121)
!13398 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13392, file: !13385, line: 103, type: !157)
!13399 = !DILocalVariable(name: "result32", arg: 5, scope: !13392, file: !13385, line: 104, type: !157)
!13400 = !DILocalVariable(name: "round_up", arg: 6, scope: !13392, file: !13385, line: 104, type: !157)
!13401 = !DILocalVariable(name: "round_off", arg: 7, scope: !13392, file: !13385, line: 105, type: !157)
!13402 = !DILocalVariable(name: "mul_ratio", scope: !13392, file: !13385, line: 107, type: !157)
!13403 = !DILocalVariable(name: "div_ratio", scope: !13392, file: !13385, line: 109, type: !157)
!13404 = !DILocalVariable(name: "off", scope: !13392, file: !13385, line: 116, type: !1595)
!13405 = !DILocalVariable(name: "rdivisor", scope: !13406, file: !13385, line: 119, type: !121)
!13406 = distinct !DILexicalBlock(scope: !13407, file: !13385, line: 118, column: 18)
!13407 = distinct !DILexicalBlock(scope: !13392, file: !13385, line: 118, column: 6)
!13408 = !DILocation(line: 0, scope: !13392, inlinedAt: !13409)
!13409 = distinct !DILocation(line: 406, column: 9, scope: !13384)
!13410 = !DILocation(line: 145, column: 13, scope: !13411, inlinedAt: !13409)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !13385, line: 144, column: 10)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !13385, line: 142, column: 7)
!13413 = distinct !DILexicalBlock(scope: !13414, file: !13385, line: 141, column: 24)
!13414 = distinct !DILexicalBlock(scope: !13415, file: !13385, line: 141, column: 13)
!13415 = distinct !DILexicalBlock(scope: !13392, file: !13385, line: 134, column: 6)
!13416 = !DILocation(line: 406, column: 2, scope: !13384)
!13417 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2208, file: !2208, line: 817, type: !3486, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13418)
!13418 = !{!13419, !13420, !13421, !13422}
!13419 = !DILocalVariable(name: "entry", arg: 1, scope: !13417, file: !2208, line: 817, type: !3488)
!13420 = !DILocalVariable(name: "p1", arg: 2, scope: !13417, file: !2208, line: 818, type: !102)
!13421 = !DILocalVariable(name: "p2", arg: 3, scope: !13417, file: !2208, line: 818, type: !102)
!13422 = !DILocalVariable(name: "p3", arg: 4, scope: !13417, file: !2208, line: 818, type: !102)
!13423 = !DILocation(line: 0, scope: !13417)
!13424 = !DILocation(line: 822, column: 2, scope: !13417)
!13425 = !DILocation(line: 822, column: 17, scope: !13417)
!13426 = !DILocation(line: 822, column: 30, scope: !13417)
!13427 = !DILocation(line: 823, column: 2, scope: !13417)
!13428 = !DILocation(line: 845, column: 2, scope: !13417)
!13429 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2208, file: !2208, line: 888, type: !13430, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13432)
!13430 = !DISubroutineType(types: !13431)
!13431 = !{!103, !2212}
!13432 = !{!13433}
!13433 = !DILocalVariable(name: "thread", arg: 1, scope: !13429, file: !2208, line: 888, type: !2212)
!13434 = !DILocation(line: 0, scope: !13429)
!13435 = !DILocation(line: 893, column: 2, scope: !13429)
!13436 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2208, file: !2208, line: 897, type: !13437, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13439)
!13437 = !DISubroutineType(types: !13438)
!13438 = !{!103, !2212, !32}
!13439 = !{!13440, !13441}
!13440 = !DILocalVariable(name: "thread", arg: 1, scope: !13436, file: !2208, line: 897, type: !2212)
!13441 = !DILocalVariable(name: "options", arg: 2, scope: !13436, file: !2208, line: 897, type: !32)
!13442 = !DILocation(line: 0, scope: !13436)
!13443 = !DILocation(line: 902, column: 2, scope: !13436)
!13444 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2208, file: !2208, line: 1072, type: !13445, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13450)
!13445 = !DISubroutineType(types: !13446)
!13446 = !{!103, !2211, !13447}
!13447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13448, size: 32)
!13448 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !379, line: 234, baseType: !13449)
!13449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !379, line: 192, elements: !317)
!13450 = !{!13451, !13452}
!13451 = !DILocalVariable(name: "thread", arg: 1, scope: !13444, file: !2208, line: 1072, type: !2211)
!13452 = !DILocalVariable(name: "stats", arg: 2, scope: !13444, file: !2208, line: 1073, type: !13447)
!13453 = !DILocation(line: 0, scope: !13444)
!13454 = !DILocation(line: 1075, column: 14, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13444, file: !2208, line: 1075, column: 6)
!13456 = !DILocation(line: 1075, column: 23, scope: !13455)
!13457 = !DILocation(line: 1086, column: 1, scope: !13444)
!13458 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2208, file: !2208, line: 1088, type: !13459, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !13461)
!13459 = !DISubroutineType(types: !13460)
!13460 = !{!103, !13447}
!13461 = !{!13462}
!13462 = !DILocalVariable(name: "stats", arg: 1, scope: !13458, file: !2208, line: 1088, type: !13447)
!13463 = !DILocation(line: 0, scope: !13458)
!13464 = !DILocation(line: 1094, column: 12, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13458, file: !2208, line: 1094, column: 6)
!13466 = !DILocation(line: 1120, column: 1, scope: !13458)
!13467 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13468, file: !13468, line: 20, type: !3174, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !317)
!13468 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13469 = !DILocation(line: 30, column: 2, scope: !13467)
!13470 = !DILocation(line: 31, column: 1, scope: !13467)
!13471 = distinct !DISubprogram(name: "idle", scope: !13468, file: !13468, line: 33, type: !3491, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !13472)
!13472 = !{!13473, !13474, !13475}
!13473 = !DILocalVariable(name: "unused1", arg: 1, scope: !13471, file: !13468, line: 33, type: !102)
!13474 = !DILocalVariable(name: "unused2", arg: 2, scope: !13471, file: !13468, line: 33, type: !102)
!13475 = !DILocalVariable(name: "unused3", arg: 3, scope: !13471, file: !13468, line: 33, type: !102)
!13476 = !DILocation(line: 0, scope: !13471)
!13477 = !DILocation(line: 41, column: 2, scope: !13471)
!13478 = !DILocation(line: 55, column: 2, scope: !13479, inlinedAt: !13483)
!13479 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !13480)
!13480 = !{!13481, !13482}
!13481 = !DILocalVariable(name: "key", scope: !13479, file: !5739, line: 44, type: !32)
!13482 = !DILocalVariable(name: "tmp", scope: !13479, file: !5739, line: 53, type: !32)
!13483 = distinct !DILocation(line: 62, column: 10, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13471, file: !13468, line: 41, column: 15)
!13485 = !{i64 2239248}
!13486 = !DILocation(line: 0, scope: !13479, inlinedAt: !13483)
!13487 = !DILocation(line: 86, column: 3, scope: !13484)
!13488 = distinct !{!13488, !13477, !13489}
!13489 = !DILocation(line: 105, column: 2, scope: !13471)
!13490 = distinct !DISubprogram(name: "k_cpu_idle", scope: !296, file: !296, line: 5627, type: !3174, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !317)
!13491 = !DILocation(line: 5629, column: 2, scope: !13490)
!13492 = !DILocation(line: 5630, column: 1, scope: !13490)
!13493 = !DISubprogram(name: "arch_cpu_idle", scope: !3489, file: !3489, line: 167, type: !3174, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!13494 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3130, file: !3130, line: 30, type: !13495, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13497)
!13495 = !DISubroutineType(types: !13496)
!13496 = !{!102, !3139, !157}
!13497 = !{!13498, !13499, !13500, !13501}
!13498 = !DILocalVariable(name: "node", arg: 1, scope: !13494, file: !3130, line: 30, type: !3139)
!13499 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13494, file: !3130, line: 30, type: !157)
!13500 = !DILocalVariable(name: "ret", scope: !13494, file: !3130, line: 32, type: !102)
!13501 = !DILocalVariable(name: "anode", scope: !13502, file: !3130, line: 40, type: !3128)
!13502 = distinct !DILexicalBlock(scope: !13503, file: !3130, line: 34, column: 68)
!13503 = distinct !DILexicalBlock(scope: !13494, file: !3130, line: 34, column: 6)
!13504 = !DILocation(line: 0, scope: !13494)
!13505 = !DILocation(line: 34, column: 12, scope: !13503)
!13506 = !DILocation(line: 34, column: 21, scope: !13503)
!13507 = !DILocation(line: 34, column: 25, scope: !13503)
!13508 = !DILocation(line: 34, column: 52, scope: !13503)
!13509 = !DILocation(line: 34, column: 6, scope: !13494)
!13510 = !DILocation(line: 0, scope: !13502)
!13511 = !DILocation(line: 43, column: 16, scope: !13502)
!13512 = !DILocation(line: 44, column: 7, scope: !13502)
!13513 = !DILocation(line: 42, column: 11, scope: !13502)
!13514 = !DILocation(line: 45, column: 4, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13516, file: !3130, line: 44, column: 19)
!13516 = distinct !DILexicalBlock(scope: !13502, file: !3130, line: 44, column: 7)
!13517 = !DILocation(line: 46, column: 3, scope: !13515)
!13518 = !DILocation(line: 52, column: 9, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13503, file: !3130, line: 47, column: 9)
!13520 = !DILocation(line: 0, scope: !13503)
!13521 = !DILocation(line: 55, column: 2, scope: !13494)
!13522 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !303, file: !303, line: 270, type: !13523, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13525)
!13523 = !DISubroutineType(types: !13524)
!13524 = !{!154, !3139}
!13525 = !{!13526}
!13526 = !DILocalVariable(name: "node", arg: 1, scope: !13522, file: !303, line: 270, type: !3139)
!13527 = !DILocation(line: 0, scope: !13522)
!13528 = !DILocation(line: 272, column: 15, scope: !13522)
!13529 = !DILocation(line: 272, column: 9, scope: !13522)
!13530 = !DILocation(line: 272, column: 2, scope: !13522)
!13531 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3130, file: !3130, line: 58, type: !13532, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13551)
!13532 = !DISubroutineType(types: !13533)
!13533 = !{null, !13534}
!13534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13535, size: 32)
!13535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !296, line: 1709, size: 128, elements: !13536)
!13536 = !{!13537, !13543, !13545}
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13535, file: !296, line: 1710, baseType: !13538, size: 64)
!13538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !303, line: 46, baseType: !13539)
!13539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !303, line: 41, size: 64, elements: !13540)
!13540 = !{!13541, !13542}
!13541 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13539, file: !303, line: 42, baseType: !3139, size: 32)
!13542 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13539, file: !303, line: 43, baseType: !3139, size: 32, offset: 32)
!13543 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13535, file: !296, line: 1711, baseType: !13544, offset: 64)
!13544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13535, file: !296, line: 1712, baseType: !13546, size: 64, offset: 64)
!13546 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !13547)
!13547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !13548)
!13548 = !{!13549}
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13547, file: !320, line: 232, baseType: !13550, size: 64)
!13550 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !3142)
!13551 = !{!13552}
!13552 = !DILocalVariable(name: "queue", arg: 1, scope: !13531, file: !3130, line: 58, type: !13534)
!13553 = !DILocation(line: 0, scope: !13531)
!13554 = !DILocation(line: 60, column: 26, scope: !13531)
!13555 = !DILocation(line: 60, column: 2, scope: !13531)
!13556 = !DILocation(line: 62, column: 23, scope: !13531)
!13557 = !DILocation(line: 62, column: 2, scope: !13531)
!13558 = !DILocation(line: 70, column: 1, scope: !13531)
!13559 = distinct !DISubprogram(name: "sys_sflist_init", scope: !303, file: !303, line: 202, type: !13560, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13563)
!13560 = !DISubroutineType(types: !13561)
!13561 = !{null, !13562}
!13562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13538, size: 32)
!13563 = !{!13564}
!13564 = !DILocalVariable(name: "list", arg: 1, scope: !13559, file: !303, line: 202, type: !13562)
!13565 = !DILocation(line: 0, scope: !13559)
!13566 = !DILocation(line: 204, column: 8, scope: !13559)
!13567 = !DILocation(line: 204, column: 13, scope: !13559)
!13568 = !DILocation(line: 205, column: 8, scope: !13559)
!13569 = !DILocation(line: 205, column: 13, scope: !13559)
!13570 = !DILocation(line: 206, column: 1, scope: !13559)
!13571 = distinct !DISubprogram(name: "z_waitq_init", scope: !13150, file: !13150, line: 47, type: !13572, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13575)
!13572 = !DISubroutineType(types: !13573)
!13573 = !{null, !13574}
!13574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13546, size: 32)
!13575 = !{!13576}
!13576 = !DILocalVariable(name: "w", arg: 1, scope: !13571, file: !13150, line: 47, type: !13574)
!13577 = !DILocation(line: 0, scope: !13571)
!13578 = !DILocation(line: 49, column: 21, scope: !13571)
!13579 = !DILocation(line: 49, column: 2, scope: !13571)
!13580 = !DILocation(line: 50, column: 1, scope: !13571)
!13581 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !13582, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13585)
!13582 = !DISubroutineType(types: !13583)
!13583 = !{null, !13584}
!13584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13550, size: 32)
!13585 = !{!13586}
!13586 = !DILocalVariable(name: "list", arg: 1, scope: !13581, file: !325, line: 197, type: !13584)
!13587 = !DILocation(line: 0, scope: !13581)
!13588 = !DILocation(line: 199, column: 8, scope: !13581)
!13589 = !DILocation(line: 199, column: 13, scope: !13581)
!13590 = !DILocation(line: 200, column: 8, scope: !13581)
!13591 = !DILocation(line: 200, column: 13, scope: !13581)
!13592 = !DILocation(line: 201, column: 1, scope: !13581)
!13593 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3130, file: !3130, line: 94, type: !13532, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13594)
!13594 = !{!13595, !13596, !13601}
!13595 = !DILocalVariable(name: "queue", arg: 1, scope: !13593, file: !3130, line: 94, type: !13534)
!13596 = !DILocalVariable(name: "key", scope: !13593, file: !3130, line: 98, type: !13597)
!13597 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !13598)
!13598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !13599)
!13599 = !{!13600}
!13600 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13598, file: !316, line: 33, baseType: !103, size: 32)
!13601 = !DILocalVariable(name: "first_pending_thread", scope: !13593, file: !3130, line: 99, type: !13602)
!13602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13603, size: 32)
!13603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !379, line: 245, size: 1024, elements: !13604)
!13604 = !{!13605, !13643, !13655, !13656, !13657, !13658, !13664, !13676}
!13605 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13603, file: !379, line: 247, baseType: !13606, size: 384)
!13606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !379, line: 57, size: 384, elements: !13607)
!13607 = !{!13608, !13618, !13619, !13620, !13621, !13630, !13631, !13632}
!13608 = !DIDerivedType(tag: DW_TAG_member, scope: !13606, file: !379, line: 60, baseType: !13609, size: 64)
!13609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13606, file: !379, line: 60, size: 64, elements: !13610)
!13610 = !{!13611, !13612}
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13609, file: !379, line: 61, baseType: !3141, size: 64)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13609, file: !379, line: 62, baseType: !13613, size: 64)
!13613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !404, line: 49, size: 64, elements: !13614)
!13614 = !{!13615}
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13613, file: !404, line: 50, baseType: !13616, size: 64)
!13616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13617, size: 64, elements: !363)
!13617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13613, size: 32)
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13606, file: !379, line: 68, baseType: !13574, size: 32, offset: 64)
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13606, file: !379, line: 71, baseType: !154, size: 8, offset: 96)
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13606, file: !379, line: 74, baseType: !154, size: 8, offset: 104)
!13621 = !DIDerivedType(tag: DW_TAG_member, scope: !13606, file: !379, line: 90, baseType: !13622, size: 16, offset: 112)
!13622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13606, file: !379, line: 90, size: 16, elements: !13623)
!13623 = !{!13624, !13629}
!13624 = !DIDerivedType(tag: DW_TAG_member, scope: !13622, file: !379, line: 91, baseType: !13625, size: 16)
!13625 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13622, file: !379, line: 91, size: 16, elements: !13626)
!13626 = !{!13627, !13628}
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13625, file: !379, line: 96, baseType: !425, size: 8)
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13625, file: !379, line: 97, baseType: !154, size: 8, offset: 8)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13622, file: !379, line: 100, baseType: !429, size: 16)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13606, file: !379, line: 107, baseType: !121, size: 32, offset: 128)
!13631 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13606, file: !379, line: 127, baseType: !102, size: 32, offset: 160)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13606, file: !379, line: 131, baseType: !13633, size: 192, offset: 192)
!13633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !320, line: 244, size: 192, elements: !13634)
!13634 = !{!13635, !13636, !13642}
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13633, file: !320, line: 245, baseType: !3141, size: 64)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13633, file: !320, line: 246, baseType: !13637, size: 32, offset: 64)
!13637 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !320, line: 242, baseType: !13638)
!13638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13639, size: 32)
!13639 = !DISubroutineType(types: !13640)
!13640 = !{null, !13641}
!13641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13633, size: 32)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13633, file: !320, line: 249, baseType: !202, size: 64, offset: 128)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13603, file: !379, line: 250, baseType: !13644, size: 288, offset: 384)
!13644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !446, line: 25, size: 288, elements: !13645)
!13645 = !{!13646, !13647, !13648, !13649, !13650, !13651, !13652, !13653, !13654}
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13644, file: !446, line: 26, baseType: !121, size: 32)
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13644, file: !446, line: 27, baseType: !121, size: 32, offset: 32)
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13644, file: !446, line: 28, baseType: !121, size: 32, offset: 64)
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13644, file: !446, line: 29, baseType: !121, size: 32, offset: 96)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13644, file: !446, line: 30, baseType: !121, size: 32, offset: 128)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13644, file: !446, line: 31, baseType: !121, size: 32, offset: 160)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13644, file: !446, line: 32, baseType: !121, size: 32, offset: 192)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13644, file: !446, line: 33, baseType: !121, size: 32, offset: 224)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13644, file: !446, line: 34, baseType: !121, size: 32, offset: 256)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13603, file: !379, line: 253, baseType: !102, size: 32, offset: 672)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13603, file: !379, line: 256, baseType: !13546, size: 64, offset: 704)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13603, file: !379, line: 294, baseType: !103, size: 32, offset: 768)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13603, file: !379, line: 300, baseType: !13659, size: 96, offset: 800)
!13659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !379, line: 149, size: 96, elements: !13660)
!13660 = !{!13661, !13662, !13663}
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13659, file: !379, line: 153, baseType: !22, size: 32)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13659, file: !379, line: 162, baseType: !204, size: 32, offset: 32)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13659, file: !379, line: 168, baseType: !204, size: 32, offset: 64)
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13603, file: !379, line: 325, baseType: !13665, size: 32, offset: 896)
!13665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13666, size: 32)
!13666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !13667)
!13667 = !{!13668, !13674, !13675}
!13668 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13666, file: !296, line: 5074, baseType: !13669, size: 96)
!13669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !13670)
!13670 = !{!13671, !13672, !13673}
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13669, file: !472, line: 57, baseType: !475, size: 32)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13669, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13669, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13666, file: !296, line: 5075, baseType: !13546, size: 64, offset: 96)
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13666, file: !296, line: 5076, baseType: !13544, offset: 160)
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13603, file: !379, line: 343, baseType: !13677, size: 64, offset: 928)
!13677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !446, line: 60, size: 64, elements: !13678)
!13678 = !{!13679, !13680}
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13677, file: !446, line: 63, baseType: !121, size: 32)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13677, file: !446, line: 66, baseType: !121, size: 32, offset: 32)
!13681 = !DILocation(line: 0, scope: !13593)
!13682 = !DILocalVariable(name: "l", arg: 1, scope: !13683, file: !316, line: 136, type: !13686)
!13683 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !13684, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13687)
!13684 = !DISubroutineType(types: !13685)
!13685 = !{!13597, !13686}
!13686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13544, size: 32)
!13687 = !{!13682, !13688}
!13688 = !DILocalVariable(name: "k", scope: !13683, file: !316, line: 139, type: !13597)
!13689 = !DILocation(line: 0, scope: !13683, inlinedAt: !13690)
!13690 = distinct !DILocation(line: 98, column: 25, scope: !13593)
!13691 = !DILocation(line: 55, column: 2, scope: !13692, inlinedAt: !13696)
!13692 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13693)
!13693 = !{!13694, !13695}
!13694 = !DILocalVariable(name: "key", scope: !13692, file: !5739, line: 44, type: !32)
!13695 = !DILocalVariable(name: "tmp", scope: !13692, file: !5739, line: 53, type: !32)
!13696 = distinct !DILocation(line: 145, column: 10, scope: !13683, inlinedAt: !13690)
!13697 = !{i64 2246989}
!13698 = !DILocation(line: 0, scope: !13692, inlinedAt: !13696)
!13699 = !DILocation(line: 101, column: 55, scope: !13593)
!13700 = !DILocation(line: 101, column: 25, scope: !13593)
!13701 = !DILocation(line: 103, column: 27, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13593, file: !3130, line: 103, column: 6)
!13703 = !DILocation(line: 103, column: 6, scope: !13593)
!13704 = !DILocation(line: 104, column: 3, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13702, file: !3130, line: 103, column: 36)
!13706 = !DILocation(line: 105, column: 2, scope: !13705)
!13707 = !DILocation(line: 98, column: 45, scope: !13593)
!13708 = !DILocation(line: 108, column: 2, scope: !13593)
!13709 = !DILocation(line: 109, column: 1, scope: !13593)
!13710 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3130, file: !3130, line: 81, type: !13711, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13713)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{null, !13602, !102}
!13713 = !{!13714, !13715}
!13714 = !DILocalVariable(name: "thread", arg: 1, scope: !13710, file: !3130, line: 81, type: !13602)
!13715 = !DILocalVariable(name: "data", arg: 2, scope: !13710, file: !3130, line: 81, type: !102)
!13716 = !DILocation(line: 0, scope: !13710)
!13717 = !DILocalVariable(name: "thread", arg: 1, scope: !13718, file: !13719, line: 134, type: !13602)
!13718 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13719, file: !13719, line: 134, type: !13720, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13722)
!13719 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13720 = !DISubroutineType(types: !13721)
!13721 = !{null, !13602, !32, !102}
!13722 = !{!13717, !13723, !13724}
!13723 = !DILocalVariable(name: "value", arg: 2, scope: !13718, file: !13719, line: 135, type: !32)
!13724 = !DILocalVariable(name: "data", arg: 3, scope: !13718, file: !13719, line: 136, type: !102)
!13725 = !DILocation(line: 0, scope: !13718, inlinedAt: !13726)
!13726 = distinct !DILocation(line: 83, column: 2, scope: !13710)
!13727 = !DILocalVariable(name: "thread", arg: 1, scope: !13728, file: !12846, line: 65, type: !13602)
!13728 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12846, file: !12846, line: 65, type: !13729, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13731)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{null, !13602, !32}
!13731 = !{!13727, !13732}
!13732 = !DILocalVariable(name: "value", arg: 2, scope: !13728, file: !12846, line: 65, type: !32)
!13733 = !DILocation(line: 0, scope: !13728, inlinedAt: !13734)
!13734 = distinct !DILocation(line: 138, column: 2, scope: !13718, inlinedAt: !13726)
!13735 = !DILocation(line: 67, column: 15, scope: !13728, inlinedAt: !13734)
!13736 = !DILocation(line: 67, column: 33, scope: !13728, inlinedAt: !13734)
!13737 = !DILocation(line: 139, column: 15, scope: !13718, inlinedAt: !13726)
!13738 = !DILocation(line: 139, column: 25, scope: !13718, inlinedAt: !13726)
!13739 = !DILocation(line: 84, column: 2, scope: !13710)
!13740 = !DILocation(line: 85, column: 1, scope: !13710)
!13741 = distinct !DISubprogram(name: "k_queue_insert", scope: !3130, file: !3130, line: 175, type: !13742, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13744)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{null, !13534, !102, !102}
!13744 = !{!13745, !13746, !13747}
!13745 = !DILocalVariable(name: "queue", arg: 1, scope: !13741, file: !3130, line: 175, type: !13534)
!13746 = !DILocalVariable(name: "prev", arg: 2, scope: !13741, file: !3130, line: 175, type: !102)
!13747 = !DILocalVariable(name: "data", arg: 3, scope: !13741, file: !3130, line: 175, type: !102)
!13748 = !DILocation(line: 0, scope: !13741)
!13749 = !DILocation(line: 179, column: 8, scope: !13741)
!13750 = !DILocation(line: 182, column: 1, scope: !13741)
!13751 = distinct !DISubprogram(name: "queue_insert", scope: !3130, file: !3130, line: 120, type: !13752, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13754)
!13752 = !DISubroutineType(types: !13753)
!13753 = !{!745, !13534, !102, !102, !157, !157}
!13754 = !{!13755, !13756, !13757, !13758, !13759, !13760, !13761, !13762}
!13755 = !DILocalVariable(name: "queue", arg: 1, scope: !13751, file: !3130, line: 120, type: !13534)
!13756 = !DILocalVariable(name: "prev", arg: 2, scope: !13751, file: !3130, line: 120, type: !102)
!13757 = !DILocalVariable(name: "data", arg: 3, scope: !13751, file: !3130, line: 120, type: !102)
!13758 = !DILocalVariable(name: "alloc", arg: 4, scope: !13751, file: !3130, line: 121, type: !157)
!13759 = !DILocalVariable(name: "is_append", arg: 5, scope: !13751, file: !3130, line: 121, type: !157)
!13760 = !DILocalVariable(name: "first_pending_thread", scope: !13751, file: !3130, line: 123, type: !13602)
!13761 = !DILocalVariable(name: "key", scope: !13751, file: !3130, line: 124, type: !13597)
!13762 = !DILocalVariable(name: "anode", scope: !13763, file: !3130, line: 146, type: !3128)
!13763 = distinct !DILexicalBlock(scope: !13764, file: !3130, line: 145, column: 13)
!13764 = distinct !DILexicalBlock(scope: !13751, file: !3130, line: 145, column: 6)
!13765 = !DILocation(line: 0, scope: !13751)
!13766 = !DILocation(line: 124, column: 45, scope: !13751)
!13767 = !DILocation(line: 0, scope: !13683, inlinedAt: !13768)
!13768 = distinct !DILocation(line: 124, column: 25, scope: !13751)
!13769 = !DILocation(line: 55, column: 2, scope: !13692, inlinedAt: !13770)
!13770 = distinct !DILocation(line: 145, column: 10, scope: !13683, inlinedAt: !13768)
!13771 = !DILocation(line: 0, scope: !13692, inlinedAt: !13770)
!13772 = !DILocation(line: 128, column: 6, scope: !13751)
!13773 = !DILocation(line: 129, column: 39, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13775, file: !3130, line: 128, column: 17)
!13775 = distinct !DILexicalBlock(scope: !13751, file: !3130, line: 128, column: 6)
!13776 = !DILocation(line: 129, column: 10, scope: !13774)
!13777 = !DILocation(line: 130, column: 2, scope: !13774)
!13778 = !DILocation(line: 131, column: 55, scope: !13751)
!13779 = !DILocation(line: 131, column: 25, scope: !13751)
!13780 = !DILocation(line: 133, column: 27, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13751, file: !3130, line: 133, column: 6)
!13782 = !DILocation(line: 133, column: 6, scope: !13751)
!13783 = !DILocation(line: 136, column: 3, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13781, file: !3130, line: 133, column: 36)
!13785 = !DILocation(line: 137, column: 3, scope: !13784)
!13786 = !DILocation(line: 141, column: 3, scope: !13784)
!13787 = !DILocation(line: 145, column: 6, scope: !13751)
!13788 = !DILocation(line: 148, column: 11, scope: !13763)
!13789 = !DILocation(line: 0, scope: !13763)
!13790 = !DILocation(line: 149, column: 13, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13763, file: !3130, line: 149, column: 7)
!13792 = !DILocation(line: 149, column: 7, scope: !13763)
!13793 = !DILocalVariable(name: "key", arg: 2, scope: !13794, file: !316, line: 190, type: !13597)
!13794 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !13795, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13797)
!13795 = !DISubroutineType(types: !13796)
!13796 = !{null, !13686, !13597}
!13797 = !{!13798, !13793}
!13798 = !DILocalVariable(name: "l", arg: 1, scope: !13794, file: !316, line: 189, type: !13686)
!13799 = !DILocation(line: 0, scope: !13794, inlinedAt: !13800)
!13800 = distinct !DILocation(line: 150, column: 4, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13791, file: !3130, line: 149, column: 22)
!13802 = !DILocalVariable(name: "key", arg: 1, scope: !13803, file: !5739, line: 84, type: !32)
!13803 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13804)
!13804 = !{!13802}
!13805 = !DILocation(line: 0, scope: !13803, inlinedAt: !13806)
!13806 = distinct !DILocation(line: 215, column: 2, scope: !13794, inlinedAt: !13800)
!13807 = !DILocation(line: 95, column: 2, scope: !13803, inlinedAt: !13806)
!13808 = !{i64 2247806}
!13809 = !DILocation(line: 157, column: 10, scope: !13763)
!13810 = !DILocation(line: 157, column: 15, scope: !13763)
!13811 = !DILocation(line: 158, column: 27, scope: !13763)
!13812 = !DILocation(line: 158, column: 3, scope: !13763)
!13813 = !DILocation(line: 161, column: 19, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13764, file: !3130, line: 160, column: 9)
!13815 = !DILocation(line: 161, column: 3, scope: !13814)
!13816 = !DILocation(line: 166, column: 42, scope: !13751)
!13817 = !DILocation(line: 166, column: 28, scope: !13751)
!13818 = !DILocation(line: 166, column: 36, scope: !13751)
!13819 = !DILocation(line: 166, column: 2, scope: !13751)
!13820 = !DILocation(line: 168, column: 2, scope: !13751)
!13821 = !DILocation(line: 172, column: 2, scope: !13751)
!13822 = !DILocation(line: 173, column: 1, scope: !13751)
!13823 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !303, file: !303, line: 255, type: !13824, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13826)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!3139, !13562}
!13826 = !{!13827}
!13827 = !DILocalVariable(name: "list", arg: 1, scope: !13823, file: !303, line: 255, type: !13562)
!13828 = !DILocation(line: 0, scope: !13823)
!13829 = !DILocation(line: 257, column: 15, scope: !13823)
!13830 = !DILocation(line: 257, column: 2, scope: !13823)
!13831 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13719, file: !13719, line: 102, type: !13832, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13833)
!13832 = !DISubroutineType(types: !3093)
!13833 = !{!13834}
!13834 = !DILocalVariable(name: "size", arg: 1, scope: !13831, file: !13719, line: 102, type: !204)
!13835 = !DILocation(line: 0, scope: !13831)
!13836 = !DILocation(line: 104, column: 9, scope: !13831)
!13837 = !DILocation(line: 104, column: 2, scope: !13831)
!13838 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !303, file: !303, line: 288, type: !13839, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{null, !3139, !154}
!13841 = !{!13842, !13843}
!13842 = !DILocalVariable(name: "node", arg: 1, scope: !13838, file: !303, line: 288, type: !3139)
!13843 = !DILocalVariable(name: "flags", arg: 2, scope: !13838, file: !303, line: 288, type: !154)
!13844 = !DILocation(line: 0, scope: !13838)
!13845 = !DILocation(line: 291, column: 25, scope: !13838)
!13846 = !DILocation(line: 291, column: 8, scope: !13838)
!13847 = !DILocation(line: 291, column: 23, scope: !13838)
!13848 = !DILocation(line: 292, column: 1, scope: !13838)
!13849 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !303, file: !303, line: 420, type: !13850, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13852)
!13850 = !DISubroutineType(types: !13851)
!13851 = !{null, !13562, !3139, !3139}
!13852 = !{!13853, !13854, !13855}
!13853 = !DILocalVariable(name: "list", arg: 1, scope: !13849, file: !303, line: 420, type: !13562)
!13854 = !DILocalVariable(name: "prev", arg: 2, scope: !13849, file: !303, line: 420, type: !3139)
!13855 = !DILocalVariable(name: "node", arg: 3, scope: !13849, file: !303, line: 420, type: !3139)
!13856 = !DILocation(line: 0, scope: !13849)
!13857 = !DILocation(line: 420, column: 1, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13849, file: !303, line: 420, column: 1)
!13859 = !DILocation(line: 420, column: 1, scope: !13849)
!13860 = !DILocation(line: 420, column: 1, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13858, file: !303, line: 420, column: 1)
!13862 = !DILocation(line: 420, column: 1, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13858, file: !303, line: 420, column: 1)
!13864 = !DILocation(line: 420, column: 1, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13863, file: !303, line: 420, column: 1)
!13866 = !DILocation(line: 420, column: 1, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13863, file: !303, line: 420, column: 1)
!13868 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !303, file: !303, line: 360, type: !13869, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13871)
!13869 = !DISubroutineType(types: !13870)
!13870 = !{null, !13562, !3139}
!13871 = !{!13872, !13873}
!13872 = !DILocalVariable(name: "list", arg: 1, scope: !13868, file: !303, line: 360, type: !13562)
!13873 = !DILocalVariable(name: "node", arg: 2, scope: !13868, file: !303, line: 360, type: !3139)
!13874 = !DILocation(line: 0, scope: !13868)
!13875 = !DILocation(line: 360, column: 1, scope: !13868)
!13876 = !DILocation(line: 360, column: 1, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13868, file: !303, line: 360, column: 1)
!13878 = !DILocation(line: 360, column: 1, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13877, file: !303, line: 360, column: 1)
!13880 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !303, file: !303, line: 211, type: !13881, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13883)
!13881 = !DISubroutineType(types: !13882)
!13882 = !{!3139, !3139}
!13883 = !{!13884}
!13884 = !DILocalVariable(name: "node", arg: 1, scope: !13880, file: !303, line: 211, type: !3139)
!13885 = !DILocation(line: 0, scope: !13880)
!13886 = !DILocation(line: 213, column: 32, scope: !13880)
!13887 = !DILocation(line: 213, column: 47, scope: !13880)
!13888 = !DILocation(line: 213, column: 9, scope: !13880)
!13889 = !DILocation(line: 213, column: 2, scope: !13880)
!13890 = distinct !DISubprogram(name: "sys_sflist_append", scope: !303, file: !303, line: 373, type: !13869, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13891)
!13891 = !{!13892, !13893}
!13892 = !DILocalVariable(name: "list", arg: 1, scope: !13890, file: !303, line: 373, type: !13562)
!13893 = !DILocalVariable(name: "node", arg: 2, scope: !13890, file: !303, line: 373, type: !3139)
!13894 = !DILocation(line: 0, scope: !13890)
!13895 = !DILocation(line: 373, column: 1, scope: !13890)
!13896 = !DILocation(line: 373, column: 1, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13890, file: !303, line: 373, column: 1)
!13898 = !DILocation(line: 373, column: 1, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13897, file: !303, line: 373, column: 1)
!13900 = !DILocation(line: 373, column: 1, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13897, file: !303, line: 373, column: 1)
!13902 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !303, file: !303, line: 218, type: !13903, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13905)
!13903 = !DISubroutineType(types: !13904)
!13904 = !{null, !3139, !3139}
!13905 = !{!13906, !13907, !13908}
!13906 = !DILocalVariable(name: "parent", arg: 1, scope: !13902, file: !303, line: 218, type: !3139)
!13907 = !DILocalVariable(name: "child", arg: 2, scope: !13902, file: !303, line: 219, type: !3139)
!13908 = !DILocalVariable(name: "cur_flags", scope: !13902, file: !303, line: 221, type: !154)
!13909 = !DILocation(line: 0, scope: !13902)
!13910 = !DILocation(line: 221, column: 22, scope: !13902)
!13911 = !DILocation(line: 223, column: 27, scope: !13902)
!13912 = !DILocation(line: 223, column: 39, scope: !13902)
!13913 = !DILocation(line: 223, column: 37, scope: !13902)
!13914 = !DILocation(line: 223, column: 10, scope: !13902)
!13915 = !DILocation(line: 223, column: 25, scope: !13902)
!13916 = !DILocation(line: 224, column: 1, scope: !13902)
!13917 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !303, file: !303, line: 231, type: !13869, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13918)
!13918 = !{!13919, !13920}
!13919 = !DILocalVariable(name: "list", arg: 1, scope: !13917, file: !303, line: 231, type: !13562)
!13920 = !DILocalVariable(name: "node", arg: 2, scope: !13917, file: !303, line: 231, type: !3139)
!13921 = !DILocation(line: 0, scope: !13917)
!13922 = !DILocation(line: 233, column: 8, scope: !13917)
!13923 = !DILocation(line: 233, column: 13, scope: !13917)
!13924 = !DILocation(line: 234, column: 1, scope: !13917)
!13925 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !303, file: !303, line: 226, type: !13869, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13926)
!13926 = !{!13927, !13928}
!13927 = !DILocalVariable(name: "list", arg: 1, scope: !13925, file: !303, line: 226, type: !13562)
!13928 = !DILocalVariable(name: "node", arg: 2, scope: !13925, file: !303, line: 226, type: !3139)
!13929 = !DILocation(line: 0, scope: !13925)
!13930 = !DILocation(line: 228, column: 8, scope: !13925)
!13931 = !DILocation(line: 228, column: 13, scope: !13925)
!13932 = !DILocation(line: 229, column: 1, scope: !13925)
!13933 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !303, file: !303, line: 243, type: !13824, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13934)
!13934 = !{!13935}
!13935 = !DILocalVariable(name: "list", arg: 1, scope: !13933, file: !303, line: 243, type: !13562)
!13936 = !DILocation(line: 0, scope: !13933)
!13937 = !DILocation(line: 245, column: 15, scope: !13933)
!13938 = !DILocation(line: 245, column: 2, scope: !13933)
!13939 = distinct !DISubprogram(name: "k_queue_append", scope: !3130, file: !3130, line: 184, type: !13940, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !13534, !102}
!13942 = !{!13943, !13944}
!13943 = !DILocalVariable(name: "queue", arg: 1, scope: !13939, file: !3130, line: 184, type: !13534)
!13944 = !DILocalVariable(name: "data", arg: 2, scope: !13939, file: !3130, line: 184, type: !102)
!13945 = !DILocation(line: 0, scope: !13939)
!13946 = !DILocation(line: 188, column: 8, scope: !13939)
!13947 = !DILocation(line: 191, column: 1, scope: !13939)
!13948 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3130, file: !3130, line: 193, type: !13940, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13949)
!13949 = !{!13950, !13951}
!13950 = !DILocalVariable(name: "queue", arg: 1, scope: !13948, file: !3130, line: 193, type: !13534)
!13951 = !DILocalVariable(name: "data", arg: 2, scope: !13948, file: !3130, line: 193, type: !102)
!13952 = !DILocation(line: 0, scope: !13948)
!13953 = !DILocation(line: 197, column: 8, scope: !13948)
!13954 = !DILocation(line: 200, column: 1, scope: !13948)
!13955 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3130, file: !3130, line: 202, type: !13956, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{!745, !13534, !102}
!13958 = !{!13959, !13960, !13961}
!13959 = !DILocalVariable(name: "queue", arg: 1, scope: !13955, file: !3130, line: 202, type: !13534)
!13960 = !DILocalVariable(name: "data", arg: 2, scope: !13955, file: !3130, line: 202, type: !102)
!13961 = !DILocalVariable(name: "ret", scope: !13955, file: !3130, line: 206, type: !745)
!13962 = !DILocation(line: 0, scope: !13955)
!13963 = !DILocation(line: 206, column: 16, scope: !13955)
!13964 = !DILocation(line: 210, column: 2, scope: !13955)
!13965 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3130, file: !3130, line: 223, type: !13956, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13966)
!13966 = !{!13967, !13968, !13969}
!13967 = !DILocalVariable(name: "queue", arg: 1, scope: !13965, file: !3130, line: 223, type: !13534)
!13968 = !DILocalVariable(name: "data", arg: 2, scope: !13965, file: !3130, line: 223, type: !102)
!13969 = !DILocalVariable(name: "ret", scope: !13965, file: !3130, line: 227, type: !745)
!13970 = !DILocation(line: 0, scope: !13965)
!13971 = !DILocation(line: 227, column: 16, scope: !13965)
!13972 = !DILocation(line: 231, column: 2, scope: !13965)
!13973 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3130, file: !3130, line: 244, type: !13974, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !13976)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!103, !13534, !102, !102}
!13976 = !{!13977, !13978, !13979, !13980, !13981}
!13977 = !DILocalVariable(name: "queue", arg: 1, scope: !13973, file: !3130, line: 244, type: !13534)
!13978 = !DILocalVariable(name: "head", arg: 2, scope: !13973, file: !3130, line: 244, type: !102)
!13979 = !DILocalVariable(name: "tail", arg: 3, scope: !13973, file: !3130, line: 244, type: !102)
!13980 = !DILocalVariable(name: "key", scope: !13973, file: !3130, line: 255, type: !13597)
!13981 = !DILocalVariable(name: "thread", scope: !13973, file: !3130, line: 256, type: !13602)
!13982 = !DILocation(line: 0, scope: !13973)
!13983 = !DILocation(line: 249, column: 2, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13973, file: !3130, line: 249, column: 2)
!13985 = !DILocation(line: 255, column: 45, scope: !13973)
!13986 = !DILocation(line: 0, scope: !13683, inlinedAt: !13987)
!13987 = distinct !DILocation(line: 255, column: 25, scope: !13973)
!13988 = !DILocation(line: 55, column: 2, scope: !13692, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 145, column: 10, scope: !13683, inlinedAt: !13987)
!13990 = !DILocation(line: 0, scope: !13692, inlinedAt: !13989)
!13991 = !DILocation(line: 259, column: 42, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13993, file: !3130, line: 258, column: 20)
!13993 = distinct !DILexicalBlock(scope: !13973, file: !3130, line: 258, column: 6)
!13994 = !DILocation(line: 259, column: 12, scope: !13992)
!13995 = !DILocation(line: 262, column: 24, scope: !13973)
!13996 = !DILocation(line: 262, column: 2, scope: !13973)
!13997 = !DILocation(line: 263, column: 3, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13973, file: !3130, line: 262, column: 45)
!13999 = !DILocation(line: 264, column: 11, scope: !13998)
!14000 = !DILocation(line: 264, column: 10, scope: !13998)
!14001 = !DILocation(line: 265, column: 12, scope: !13998)
!14002 = !DILocation(line: 262, column: 15, scope: !13973)
!14003 = distinct !{!14003, !13996, !14004}
!14004 = !DILocation(line: 266, column: 2, scope: !13973)
!14005 = !DILocation(line: 268, column: 6, scope: !13973)
!14006 = !DILocation(line: 269, column: 34, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !14008, file: !3130, line: 268, column: 20)
!14008 = distinct !DILexicalBlock(scope: !13973, file: !3130, line: 268, column: 6)
!14009 = !DILocation(line: 269, column: 3, scope: !14007)
!14010 = !DILocation(line: 270, column: 2, scope: !14007)
!14011 = !DILocation(line: 275, column: 2, scope: !13973)
!14012 = !DILocation(line: 277, column: 1, scope: !13973)
!14013 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !303, file: !303, line: 391, type: !14014, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14016)
!14014 = !DISubroutineType(types: !14015)
!14015 = !{null, !13562, !102, !102}
!14016 = !{!14017, !14018, !14019}
!14017 = !DILocalVariable(name: "list", arg: 1, scope: !14013, file: !303, line: 391, type: !13562)
!14018 = !DILocalVariable(name: "head", arg: 2, scope: !14013, file: !303, line: 391, type: !102)
!14019 = !DILocalVariable(name: "tail", arg: 3, scope: !14013, file: !303, line: 391, type: !102)
!14020 = !DILocation(line: 0, scope: !14013)
!14021 = !DILocation(line: 391, column: 1, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14013, file: !303, line: 391, column: 1)
!14023 = !DILocation(line: 391, column: 1, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !14025, file: !303, line: 391, column: 1)
!14025 = distinct !DILexicalBlock(scope: !14022, file: !303, line: 391, column: 1)
!14026 = !DILocation(line: 0, scope: !14024)
!14027 = !DILocation(line: 391, column: 1, scope: !14025)
!14028 = !DILocation(line: 391, column: 1, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14024, file: !303, line: 391, column: 1)
!14030 = !DILocation(line: 391, column: 1, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14024, file: !303, line: 391, column: 1)
!14032 = !DILocation(line: 391, column: 1, scope: !14013)
!14033 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3130, file: !3130, line: 279, type: !14034, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14048)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{!103, !13534, !14036}
!14036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14037, size: 32)
!14037 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1198, line: 40, baseType: !14038)
!14038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1198, line: 35, size: 64, elements: !14039)
!14039 = !{!14040, !14047}
!14040 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14038, file: !1198, line: 36, baseType: !14041, size: 32)
!14041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14042, size: 32)
!14042 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1198, line: 33, baseType: !14043)
!14043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1198, line: 29, size: 32, elements: !14044)
!14044 = !{!14045}
!14045 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14043, file: !1198, line: 30, baseType: !14046, size: 32)
!14046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14043, size: 32)
!14047 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14038, file: !1198, line: 37, baseType: !14041, size: 32, offset: 32)
!14048 = !{!14049, !14050, !14051}
!14049 = !DILocalVariable(name: "queue", arg: 1, scope: !14033, file: !3130, line: 279, type: !13534)
!14050 = !DILocalVariable(name: "list", arg: 2, scope: !14033, file: !3130, line: 279, type: !14036)
!14051 = !DILocalVariable(name: "ret", scope: !14033, file: !3130, line: 281, type: !103)
!14052 = !DILocation(line: 0, scope: !14033)
!14053 = !DILocation(line: 286, column: 2, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14033, file: !3130, line: 286, column: 2)
!14055 = !DILocation(line: 286, column: 2, scope: !14033)
!14056 = !DILocation(line: 301, column: 41, scope: !14033)
!14057 = !DILocation(line: 301, column: 53, scope: !14033)
!14058 = !DILocation(line: 301, column: 8, scope: !14033)
!14059 = !DILocation(line: 302, column: 2, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14033, file: !3130, line: 302, column: 2)
!14061 = !DILocation(line: 302, column: 2, scope: !14033)
!14062 = !DILocation(line: 307, column: 2, scope: !14033)
!14063 = !DILocation(line: 311, column: 2, scope: !14033)
!14064 = !DILocation(line: 312, column: 1, scope: !14033)
!14065 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1198, file: !1198, line: 261, type: !14066, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14068)
!14066 = !DISubroutineType(types: !14067)
!14067 = !{!157, !14036}
!14068 = !{!14069}
!14069 = !DILocalVariable(name: "list", arg: 1, scope: !14065, file: !1198, line: 261, type: !14036)
!14070 = !DILocation(line: 0, scope: !14065)
!14071 = !DILocation(line: 261, column: 1, scope: !14065)
!14072 = distinct !DISubprogram(name: "sys_slist_init", scope: !1198, file: !1198, line: 196, type: !14073, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14075)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{null, !14036}
!14075 = !{!14076}
!14076 = !DILocalVariable(name: "list", arg: 1, scope: !14072, file: !1198, line: 196, type: !14036)
!14077 = !DILocation(line: 0, scope: !14072)
!14078 = !DILocation(line: 198, column: 8, scope: !14072)
!14079 = !DILocation(line: 198, column: 13, scope: !14072)
!14080 = !DILocation(line: 199, column: 8, scope: !14072)
!14081 = !DILocation(line: 199, column: 13, scope: !14072)
!14082 = !DILocation(line: 200, column: 1, scope: !14072)
!14083 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1198, file: !1198, line: 231, type: !14084, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{!14041, !14036}
!14086 = !{!14087}
!14087 = !DILocalVariable(name: "list", arg: 1, scope: !14083, file: !1198, line: 231, type: !14036)
!14088 = !DILocation(line: 0, scope: !14083)
!14089 = !DILocation(line: 233, column: 15, scope: !14083)
!14090 = !DILocation(line: 233, column: 2, scope: !14083)
!14091 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3130, file: !3130, line: 314, type: !14092, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14098)
!14092 = !DISubroutineType(types: !14093)
!14093 = !{!102, !13534, !14094}
!14094 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !14095)
!14095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !14096)
!14096 = !{!14097}
!14097 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14095, file: !201, line: 66, baseType: !200, size: 64)
!14098 = !{!14099, !14100, !14101, !14102, !14103, !14106}
!14099 = !DILocalVariable(name: "queue", arg: 1, scope: !14091, file: !3130, line: 314, type: !13534)
!14100 = !DILocalVariable(name: "timeout", arg: 2, scope: !14091, file: !3130, line: 314, type: !14094)
!14101 = !DILocalVariable(name: "key", scope: !14091, file: !3130, line: 316, type: !13597)
!14102 = !DILocalVariable(name: "data", scope: !14091, file: !3130, line: 317, type: !102)
!14103 = !DILocalVariable(name: "node", scope: !14104, file: !3130, line: 322, type: !3139)
!14104 = distinct !DILexicalBlock(scope: !14105, file: !3130, line: 321, column: 52)
!14105 = distinct !DILexicalBlock(scope: !14091, file: !3130, line: 321, column: 6)
!14106 = !DILocalVariable(name: "ret", scope: !14091, file: !3130, line: 343, type: !103)
!14107 = !DILocation(line: 0, scope: !14091)
!14108 = !DILocation(line: 316, column: 45, scope: !14091)
!14109 = !DILocation(line: 0, scope: !13683, inlinedAt: !14110)
!14110 = distinct !DILocation(line: 316, column: 25, scope: !14091)
!14111 = !DILocation(line: 55, column: 2, scope: !13692, inlinedAt: !14112)
!14112 = distinct !DILocation(line: 145, column: 10, scope: !13683, inlinedAt: !14110)
!14113 = !DILocation(line: 0, scope: !13692, inlinedAt: !14112)
!14114 = !DILocation(line: 321, column: 6, scope: !14105)
!14115 = !DILocation(line: 321, column: 6, scope: !14091)
!14116 = !{!"branch_weights", i32 1, i32 2000}
!14117 = !DILocation(line: 324, column: 10, scope: !14104)
!14118 = !DILocation(line: 0, scope: !14104)
!14119 = !DILocation(line: 325, column: 10, scope: !14104)
!14120 = !DILocation(line: 0, scope: !13794, inlinedAt: !14121)
!14121 = distinct !DILocation(line: 326, column: 3, scope: !14104)
!14122 = !DILocation(line: 0, scope: !13803, inlinedAt: !14123)
!14123 = distinct !DILocation(line: 215, column: 2, scope: !13794, inlinedAt: !14121)
!14124 = !DILocation(line: 95, column: 2, scope: !13803, inlinedAt: !14123)
!14125 = !DILocation(line: 335, column: 6, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14091, file: !3130, line: 335, column: 6)
!14127 = !DILocation(line: 335, column: 6, scope: !14091)
!14128 = !DILocation(line: 0, scope: !13794, inlinedAt: !14129)
!14129 = distinct !DILocation(line: 336, column: 3, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14126, file: !3130, line: 335, column: 40)
!14131 = !DILocation(line: 0, scope: !13803, inlinedAt: !14132)
!14132 = distinct !DILocation(line: 215, column: 2, scope: !13794, inlinedAt: !14129)
!14133 = !DILocation(line: 95, column: 2, scope: !13803, inlinedAt: !14132)
!14134 = !DILocation(line: 340, column: 3, scope: !14130)
!14135 = !DILocation(line: 343, column: 51, scope: !14091)
!14136 = !DILocation(line: 343, column: 12, scope: !14091)
!14137 = !DILocation(line: 348, column: 14, scope: !14091)
!14138 = !DILocation(line: 348, column: 9, scope: !14091)
!14139 = !DILocation(line: 348, column: 29, scope: !14091)
!14140 = !DILocation(line: 348, column: 44, scope: !14091)
!14141 = !DILocation(line: 349, column: 1, scope: !14091)
!14142 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !303, file: !303, line: 323, type: !14143, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14145)
!14143 = !DISubroutineType(types: !14144)
!14144 = !{!157, !13562}
!14145 = !{!14146}
!14146 = !DILocalVariable(name: "list", arg: 1, scope: !14142, file: !303, line: 323, type: !13562)
!14147 = !DILocation(line: 0, scope: !14142)
!14148 = !DILocation(line: 323, column: 1, scope: !14142)
!14149 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !303, file: !303, line: 434, type: !13824, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14150)
!14150 = !{!14151, !14152}
!14151 = !DILocalVariable(name: "list", arg: 1, scope: !14149, file: !303, line: 434, type: !13562)
!14152 = !DILocalVariable(name: "node", scope: !14149, file: !303, line: 434, type: !3139)
!14153 = !DILocation(line: 0, scope: !14149)
!14154 = !DILocation(line: 434, column: 1, scope: !14149)
!14155 = !DILocation(line: 434, column: 1, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14149, file: !303, line: 434, column: 1)
!14157 = !DILocation(line: 434, column: 1, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14156, file: !303, line: 434, column: 1)
!14159 = distinct !DISubprogram(name: "k_queue_remove", scope: !3130, file: !3130, line: 351, type: !14160, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{!157, !13534, !102}
!14162 = !{!14163, !14164, !14165}
!14163 = !DILocalVariable(name: "queue", arg: 1, scope: !14159, file: !3130, line: 351, type: !13534)
!14164 = !DILocalVariable(name: "data", arg: 2, scope: !14159, file: !3130, line: 351, type: !102)
!14165 = !DILocalVariable(name: "ret", scope: !14159, file: !3130, line: 355, type: !157)
!14166 = !DILocation(line: 0, scope: !14159)
!14167 = !DILocation(line: 355, column: 48, scope: !14159)
!14168 = !DILocation(line: 355, column: 56, scope: !14159)
!14169 = !DILocation(line: 355, column: 13, scope: !14159)
!14170 = !DILocation(line: 359, column: 2, scope: !14159)
!14171 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !303, file: !303, line: 478, type: !14172, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14174)
!14172 = !DISubroutineType(types: !14173)
!14173 = !{!157, !13562, !3139}
!14174 = !{!14175, !14176, !14177, !14178}
!14175 = !DILocalVariable(name: "list", arg: 1, scope: !14171, file: !303, line: 478, type: !13562)
!14176 = !DILocalVariable(name: "node", arg: 2, scope: !14171, file: !303, line: 478, type: !3139)
!14177 = !DILocalVariable(name: "prev", scope: !14171, file: !303, line: 478, type: !3139)
!14178 = !DILocalVariable(name: "test", scope: !14171, file: !303, line: 478, type: !3139)
!14179 = !DILocation(line: 0, scope: !14171)
!14180 = !DILocation(line: 478, column: 1, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14171, file: !303, line: 478, column: 1)
!14182 = !DILocation(line: 478, column: 1, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14181, file: !303, line: 478, column: 1)
!14184 = !DILocation(line: 478, column: 1, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !303, line: 478, column: 1)
!14186 = distinct !DILexicalBlock(scope: !14183, file: !303, line: 478, column: 1)
!14187 = !DILocation(line: 478, column: 1, scope: !14186)
!14188 = distinct !{!14188, !14180, !14180}
!14189 = !DILocation(line: 478, column: 1, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14185, file: !303, line: 478, column: 1)
!14191 = !DILocation(line: 478, column: 1, scope: !14171)
!14192 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !303, file: !303, line: 463, type: !13850, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14193)
!14193 = !{!14194, !14195, !14196}
!14194 = !DILocalVariable(name: "list", arg: 1, scope: !14192, file: !303, line: 463, type: !13562)
!14195 = !DILocalVariable(name: "prev_node", arg: 2, scope: !14192, file: !303, line: 463, type: !3139)
!14196 = !DILocalVariable(name: "node", arg: 3, scope: !14192, file: !303, line: 463, type: !3139)
!14197 = !DILocation(line: 0, scope: !14192)
!14198 = !DILocation(line: 463, column: 1, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14192, file: !303, line: 463, column: 1)
!14200 = !DILocation(line: 0, scope: !14199)
!14201 = !DILocation(line: 463, column: 1, scope: !14192)
!14202 = !DILocation(line: 463, column: 1, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14199, file: !303, line: 463, column: 1)
!14204 = !DILocation(line: 463, column: 1, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14203, file: !303, line: 463, column: 1)
!14206 = !DILocation(line: 463, column: 1, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14205, file: !303, line: 463, column: 1)
!14208 = !DILocation(line: 463, column: 1, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14199, file: !303, line: 463, column: 1)
!14210 = !DILocation(line: 463, column: 1, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14209, file: !303, line: 463, column: 1)
!14212 = !DILocation(line: 463, column: 1, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14211, file: !303, line: 463, column: 1)
!14214 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !303, file: !303, line: 347, type: !13881, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14215)
!14215 = !{!14216}
!14216 = !DILocalVariable(name: "node", arg: 1, scope: !14214, file: !303, line: 347, type: !3139)
!14217 = !DILocation(line: 0, scope: !14214)
!14218 = !DILocation(line: 347, column: 1, scope: !14214)
!14219 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !303, file: !303, line: 336, type: !13881, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14220)
!14220 = !{!14221}
!14221 = !DILocalVariable(name: "node", arg: 1, scope: !14219, file: !303, line: 336, type: !3139)
!14222 = !DILocation(line: 0, scope: !14219)
!14223 = !DILocation(line: 336, column: 1, scope: !14219)
!14224 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3130, file: !3130, line: 362, type: !14160, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14225)
!14225 = !{!14226, !14227, !14228}
!14226 = !DILocalVariable(name: "queue", arg: 1, scope: !14224, file: !3130, line: 362, type: !13534)
!14227 = !DILocalVariable(name: "data", arg: 2, scope: !14224, file: !3130, line: 362, type: !102)
!14228 = !DILocalVariable(name: "test", scope: !14224, file: !3130, line: 366, type: !3139)
!14229 = !DILocation(line: 0, scope: !14224)
!14230 = !DILocation(line: 368, column: 2, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14224, file: !3130, line: 368, column: 2)
!14232 = !DILocation(line: 368, column: 2, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14231, file: !3130, line: 368, column: 2)
!14234 = !DILocation(line: 369, column: 12, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !3130, line: 369, column: 7)
!14236 = distinct !DILexicalBlock(scope: !14233, file: !3130, line: 368, column: 49)
!14237 = !DILocation(line: 369, column: 7, scope: !14236)
!14238 = distinct !{!14238, !14230, !14239}
!14239 = !DILocation(line: 374, column: 2, scope: !14231)
!14240 = !DILocation(line: 376, column: 2, scope: !14224)
!14241 = !DILocation(line: 380, column: 2, scope: !14224)
!14242 = !DILocation(line: 381, column: 1, scope: !14224)
!14243 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3130, file: !3130, line: 383, type: !14244, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14246)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{!102, !13534}
!14246 = !{!14247, !14248}
!14247 = !DILocalVariable(name: "queue", arg: 1, scope: !14243, file: !3130, line: 383, type: !13534)
!14248 = !DILocalVariable(name: "ret", scope: !14243, file: !3130, line: 385, type: !102)
!14249 = !DILocation(line: 0, scope: !14243)
!14250 = !DILocation(line: 385, column: 61, scope: !14243)
!14251 = !DILocation(line: 385, column: 32, scope: !14243)
!14252 = !DILocation(line: 385, column: 14, scope: !14243)
!14253 = !DILocation(line: 389, column: 2, scope: !14243)
!14254 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3130, file: !3130, line: 392, type: !14244, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3114, retainedNodes: !14255)
!14255 = !{!14256, !14257}
!14256 = !DILocalVariable(name: "queue", arg: 1, scope: !14254, file: !3130, line: 392, type: !13534)
!14257 = !DILocalVariable(name: "ret", scope: !14254, file: !3130, line: 394, type: !102)
!14258 = !DILocation(line: 0, scope: !14254)
!14259 = !DILocation(line: 394, column: 61, scope: !14254)
!14260 = !DILocation(line: 394, column: 32, scope: !14254)
!14261 = !DILocation(line: 394, column: 14, scope: !14254)
!14262 = !DILocation(line: 398, column: 2, scope: !14254)
!14263 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2440, file: !2440, line: 93, type: !14264, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14266)
!14264 = !DISubroutineType(types: !14265)
!14265 = !{!745, !2335, !2335}
!14266 = !{!14267, !14268, !14269, !14270}
!14267 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14263, file: !2440, line: 93, type: !2335)
!14268 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14263, file: !2440, line: 94, type: !2335)
!14269 = !DILocalVariable(name: "b1", scope: !14263, file: !2440, line: 97, type: !745)
!14270 = !DILocalVariable(name: "b2", scope: !14263, file: !2440, line: 98, type: !745)
!14271 = !DILocation(line: 0, scope: !14263)
!14272 = !DILocation(line: 97, column: 30, scope: !14263)
!14273 = !DILocation(line: 98, column: 30, scope: !14263)
!14274 = !DILocation(line: 100, column: 9, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14263, file: !2440, line: 100, column: 6)
!14276 = !DILocation(line: 100, column: 6, scope: !14263)
!14277 = !DILocation(line: 125, column: 1, scope: !14263)
!14278 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2440, file: !2440, line: 428, type: !14279, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14281)
!14279 = !DISubroutineType(types: !14280)
!14280 = !{null, !2335}
!14281 = !{!14282}
!14282 = !DILocalVariable(name: "curr", arg: 1, scope: !14278, file: !2440, line: 428, type: !2335)
!14283 = !DILocation(line: 0, scope: !14278)
!14284 = !DILocation(line: 434, column: 6, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14278, file: !2440, line: 434, column: 6)
!14286 = !DILocation(line: 434, column: 23, scope: !14285)
!14287 = !DILocation(line: 434, column: 6, scope: !14278)
!14288 = !DILocation(line: 435, column: 50, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14285, file: !2440, line: 434, column: 29)
!14290 = !DILocation(line: 435, column: 48, scope: !14289)
!14291 = !DILocation(line: 435, column: 29, scope: !14289)
!14292 = !DILocation(line: 436, column: 24, scope: !14289)
!14293 = !DILocation(line: 436, column: 3, scope: !14289)
!14294 = !DILocation(line: 437, column: 2, scope: !14289)
!14295 = !DILocation(line: 438, column: 1, scope: !14278)
!14296 = distinct !DISubprogram(name: "slice_time", scope: !2440, file: !2440, line: 407, type: !14297, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14299)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{!103, !2335}
!14299 = !{!14300, !14301}
!14300 = !DILocalVariable(name: "curr", arg: 1, scope: !14296, file: !2440, line: 407, type: !2335)
!14301 = !DILocalVariable(name: "ret", scope: !14296, file: !2440, line: 409, type: !103)
!14302 = !DILocation(line: 0, scope: !14296)
!14303 = !DILocation(line: 409, column: 12, scope: !14296)
!14304 = !DILocation(line: 416, column: 2, scope: !14296)
!14305 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2440, file: !2440, line: 440, type: !14306, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14308)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{null, !745, !103}
!14308 = !{!14309, !14310, !14311, !14317}
!14309 = !DILocalVariable(name: "slice", arg: 1, scope: !14305, file: !2440, line: 440, type: !745)
!14310 = !DILocalVariable(name: "prio", arg: 2, scope: !14305, file: !2440, line: 440, type: !103)
!14311 = !DILocalVariable(name: "__i", scope: !14312, file: !2440, line: 442, type: !14313)
!14312 = distinct !DILexicalBlock(scope: !14305, file: !2440, line: 442, column: 2)
!14313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !14314)
!14314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !14315)
!14315 = !{!14316}
!14316 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14314, file: !316, line: 33, baseType: !103, size: 32)
!14317 = !DILocalVariable(name: "__key", scope: !14312, file: !2440, line: 442, type: !14313)
!14318 = !DILocation(line: 0, scope: !14305)
!14319 = !DILocation(line: 0, scope: !14312)
!14320 = !DILocalVariable(name: "l", arg: 1, scope: !14321, file: !316, line: 136, type: !14324)
!14321 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !14322, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14325)
!14322 = !DISubroutineType(types: !14323)
!14323 = !{!14313, !14324}
!14324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!14325 = !{!14320, !14326}
!14326 = !DILocalVariable(name: "k", scope: !14321, file: !316, line: 139, type: !14313)
!14327 = !DILocation(line: 0, scope: !14321, inlinedAt: !14328)
!14328 = distinct !DILocation(line: 442, column: 2, scope: !14312)
!14329 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !14334)
!14330 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14331)
!14331 = !{!14332, !14333}
!14332 = !DILocalVariable(name: "key", scope: !14330, file: !5739, line: 44, type: !32)
!14333 = !DILocalVariable(name: "tmp", scope: !14330, file: !5739, line: 53, type: !32)
!14334 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !14328)
!14335 = !{i64 2283219}
!14336 = !DILocation(line: 0, scope: !14330, inlinedAt: !14334)
!14337 = !DILocation(line: 443, column: 29, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14339, file: !2440, line: 442, column: 26)
!14339 = distinct !DILexicalBlock(scope: !14312, file: !2440, line: 442, column: 2)
!14340 = !DILocation(line: 444, column: 17, scope: !14338)
!14341 = !DILocation(line: 445, column: 51, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14338, file: !2440, line: 445, column: 7)
!14343 = !DILocation(line: 445, column: 7, scope: !14338)
!14344 = !DILocation(line: 0, scope: !14338)
!14345 = !DILocation(line: 451, column: 18, scope: !14338)
!14346 = !DILocation(line: 452, column: 3, scope: !14338)
!14347 = !DILocalVariable(name: "key", arg: 2, scope: !14348, file: !316, line: 190, type: !14313)
!14348 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !14349, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14351)
!14349 = !DISubroutineType(types: !14350)
!14350 = !{null, !14324, !14313}
!14351 = !{!14352, !14347}
!14352 = !DILocalVariable(name: "l", arg: 1, scope: !14348, file: !316, line: 189, type: !14324)
!14353 = !DILocation(line: 0, scope: !14348, inlinedAt: !14354)
!14354 = distinct !DILocation(line: 442, column: 2, scope: !14339)
!14355 = !DILocalVariable(name: "key", arg: 1, scope: !14356, file: !5739, line: 84, type: !32)
!14356 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14357)
!14357 = !{!14355}
!14358 = !DILocation(line: 0, scope: !14356, inlinedAt: !14359)
!14359 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !14354)
!14360 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !14359)
!14361 = !{i64 2284036}
!14362 = !DILocation(line: 454, column: 1, scope: !14305)
!14363 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13385, file: !13385, line: 389, type: !6961, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14364)
!14364 = !{!14365}
!14365 = !DILocalVariable(name: "t", arg: 1, scope: !14363, file: !13385, line: 389, type: !121)
!14366 = !DILocation(line: 0, scope: !14363)
!14367 = !DILocalVariable(name: "t", arg: 1, scope: !14368, file: !13385, line: 102, type: !1595)
!14368 = distinct !DISubprogram(name: "z_tmcvt", scope: !13385, file: !13385, line: 102, type: !13393, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14369)
!14369 = !{!14367, !14370, !14371, !14372, !14373, !14374, !14375, !14376, !14377, !14378, !14379}
!14370 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14368, file: !13385, line: 102, type: !121)
!14371 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14368, file: !13385, line: 103, type: !121)
!14372 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14368, file: !13385, line: 103, type: !157)
!14373 = !DILocalVariable(name: "result32", arg: 5, scope: !14368, file: !13385, line: 104, type: !157)
!14374 = !DILocalVariable(name: "round_up", arg: 6, scope: !14368, file: !13385, line: 104, type: !157)
!14375 = !DILocalVariable(name: "round_off", arg: 7, scope: !14368, file: !13385, line: 105, type: !157)
!14376 = !DILocalVariable(name: "mul_ratio", scope: !14368, file: !13385, line: 107, type: !157)
!14377 = !DILocalVariable(name: "div_ratio", scope: !14368, file: !13385, line: 109, type: !157)
!14378 = !DILocalVariable(name: "off", scope: !14368, file: !13385, line: 116, type: !1595)
!14379 = !DILocalVariable(name: "rdivisor", scope: !14380, file: !13385, line: 119, type: !121)
!14380 = distinct !DILexicalBlock(scope: !14381, file: !13385, line: 118, column: 18)
!14381 = distinct !DILexicalBlock(scope: !14368, file: !13385, line: 118, column: 6)
!14382 = !DILocation(line: 0, scope: !14368, inlinedAt: !14383)
!14383 = distinct !DILocation(line: 392, column: 9, scope: !14363)
!14384 = !DILocation(line: 143, column: 25, scope: !14385, inlinedAt: !14383)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !13385, line: 142, column: 17)
!14386 = distinct !DILexicalBlock(scope: !14387, file: !13385, line: 142, column: 7)
!14387 = distinct !DILexicalBlock(scope: !14388, file: !13385, line: 141, column: 24)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !13385, line: 141, column: 13)
!14389 = distinct !DILexicalBlock(scope: !14368, file: !13385, line: 134, column: 6)
!14390 = !DILocation(line: 392, column: 2, scope: !14363)
!14391 = distinct !DISubprogram(name: "z_time_slice", scope: !2440, file: !2440, line: 502, type: !7598, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14392)
!14392 = !{!14393, !14394}
!14393 = !DILocalVariable(name: "ticks", arg: 1, scope: !14391, file: !2440, line: 502, type: !103)
!14394 = !DILocalVariable(name: "key", scope: !14391, file: !2440, line: 511, type: !14313)
!14395 = !DILocation(line: 0, scope: !14391)
!14396 = !DILocation(line: 0, scope: !14321, inlinedAt: !14397)
!14397 = distinct !DILocation(line: 511, column: 25, scope: !14391)
!14398 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !14399)
!14399 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !14397)
!14400 = !DILocation(line: 0, scope: !14330, inlinedAt: !14399)
!14401 = !DILocation(line: 514, column: 6, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !14391, file: !2440, line: 514, column: 6)
!14403 = !DILocation(line: 514, column: 25, scope: !14402)
!14404 = !DILocation(line: 514, column: 22, scope: !14402)
!14405 = !DILocation(line: 514, column: 6, scope: !14391)
!14406 = !DILocation(line: 515, column: 3, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14402, file: !2440, line: 514, column: 35)
!14408 = !DILocation(line: 0, scope: !14348, inlinedAt: !14409)
!14409 = distinct !DILocation(line: 516, column: 3, scope: !14407)
!14410 = !DILocation(line: 0, scope: !14356, inlinedAt: !14411)
!14411 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !14409)
!14412 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !14411)
!14413 = !DILocation(line: 517, column: 3, scope: !14407)
!14414 = !DILocation(line: 519, column: 18, scope: !14391)
!14415 = !DILocation(line: 522, column: 6, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !14391, file: !2440, line: 522, column: 6)
!14417 = !DILocation(line: 522, column: 27, scope: !14416)
!14418 = !DILocation(line: 522, column: 30, scope: !14416)
!14419 = !DILocation(line: 522, column: 6, scope: !14391)
!14420 = !DILocation(line: 523, column: 30, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !2440, line: 523, column: 7)
!14422 = distinct !DILexicalBlock(scope: !14416, file: !2440, line: 522, column: 51)
!14423 = !DILocation(line: 523, column: 13, scope: !14421)
!14424 = !DILocation(line: 523, column: 7, scope: !14422)
!14425 = !DILocation(line: 530, column: 10, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14421, file: !2440, line: 523, column: 43)
!14427 = !DILocation(line: 531, column: 3, scope: !14426)
!14428 = !DILocation(line: 532, column: 30, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14421, file: !2440, line: 531, column: 10)
!14430 = !DILocation(line: 535, column: 29, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14416, file: !2440, line: 534, column: 9)
!14432 = !DILocation(line: 0, scope: !14348, inlinedAt: !14433)
!14433 = distinct !DILocation(line: 537, column: 2, scope: !14391)
!14434 = !DILocation(line: 0, scope: !14356, inlinedAt: !14435)
!14435 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !14433)
!14436 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !14435)
!14437 = !DILocation(line: 538, column: 1, scope: !14391)
!14438 = distinct !DISubprogram(name: "sliceable", scope: !2440, file: !2440, line: 468, type: !14439, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14441)
!14439 = !DISubroutineType(types: !14440)
!14440 = !{!157, !2335}
!14441 = !{!14442, !14443}
!14442 = !DILocalVariable(name: "thread", arg: 1, scope: !14438, file: !2440, line: 468, type: !2335)
!14443 = !DILocalVariable(name: "ret", scope: !14438, file: !2440, line: 470, type: !157)
!14444 = !DILocation(line: 0, scope: !14438)
!14445 = !DILocation(line: 470, column: 13, scope: !14438)
!14446 = !DILocation(line: 471, column: 3, scope: !14438)
!14447 = !DILocation(line: 471, column: 7, scope: !14438)
!14448 = !DILocation(line: 472, column: 3, scope: !14438)
!14449 = !DILocation(line: 472, column: 37, scope: !14438)
!14450 = !DILocation(line: 472, column: 24, scope: !14438)
!14451 = !DILocation(line: 472, column: 43, scope: !14438)
!14452 = !DILocation(line: 472, column: 7, scope: !14438)
!14453 = !DILocation(line: 473, column: 3, scope: !14438)
!14454 = !DILocation(line: 473, column: 7, scope: !14438)
!14455 = !DILocation(line: 473, column: 6, scope: !14438)
!14456 = !DILocation(line: 479, column: 2, scope: !14438)
!14457 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2440, file: !2440, line: 482, type: !14458, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14460)
!14458 = !DISubroutineType(types: !14459)
!14459 = !{!14313, !14313}
!14460 = !{!14461, !14462}
!14461 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14457, file: !2440, line: 482, type: !14313)
!14462 = !DILocalVariable(name: "curr", scope: !14457, file: !2440, line: 484, type: !2335)
!14463 = !DILocation(line: 0, scope: !14457)
!14464 = !DILocation(line: 484, column: 26, scope: !14457)
!14465 = !DILocation(line: 493, column: 7, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14457, file: !2440, line: 493, column: 6)
!14467 = !DILocation(line: 493, column: 6, scope: !14457)
!14468 = !DILocation(line: 494, column: 3, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14466, file: !2440, line: 493, column: 49)
!14470 = !DILocation(line: 495, column: 2, scope: !14469)
!14471 = !DILocation(line: 496, column: 2, scope: !14457)
!14472 = !DILocation(line: 499, column: 1, scope: !14457)
!14473 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12826, file: !12826, line: 106, type: !14439, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14474)
!14474 = !{!14475, !14476}
!14475 = !DILocalVariable(name: "thread", arg: 1, scope: !14473, file: !12826, line: 106, type: !2335)
!14476 = !DILocalVariable(name: "state", scope: !14473, file: !12826, line: 108, type: !154)
!14477 = !DILocation(line: 0, scope: !14473)
!14478 = !DILocation(line: 108, column: 31, scope: !14473)
!14479 = !DILocation(line: 110, column: 16, scope: !14473)
!14480 = !DILocation(line: 111, column: 41, scope: !14473)
!14481 = !DILocation(line: 110, column: 2, scope: !14473)
!14482 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2440, file: !2440, line: 393, type: !14279, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14483)
!14483 = !{!14484}
!14484 = !DILocalVariable(name: "thread", arg: 1, scope: !14482, file: !2440, line: 393, type: !2335)
!14485 = !DILocation(line: 0, scope: !14482)
!14486 = !DILocation(line: 395, column: 6, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14482, file: !2440, line: 395, column: 6)
!14488 = !DILocation(line: 395, column: 6, scope: !14482)
!14489 = !DILocalVariable(name: "thread", arg: 1, scope: !14490, file: !2440, line: 264, type: !2335)
!14490 = distinct !DISubprogram(name: "dequeue_thread", scope: !2440, file: !2440, line: 264, type: !14279, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14491)
!14491 = !{!14489}
!14492 = !DILocation(line: 0, scope: !14490, inlinedAt: !14493)
!14493 = distinct !DILocation(line: 396, column: 3, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14487, file: !2440, line: 395, column: 34)
!14495 = !DILocation(line: 266, column: 15, scope: !14490, inlinedAt: !14493)
!14496 = !DILocation(line: 266, column: 28, scope: !14490, inlinedAt: !14493)
!14497 = !DILocalVariable(name: "thread", arg: 1, scope: !14498, file: !2440, line: 232, type: !2335)
!14498 = distinct !DISubprogram(name: "runq_remove", scope: !2440, file: !2440, line: 232, type: !14279, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14499)
!14499 = !{!14497}
!14500 = !DILocation(line: 0, scope: !14498, inlinedAt: !14501)
!14501 = distinct !DILocation(line: 268, column: 3, scope: !14502, inlinedAt: !14493)
!14502 = distinct !DILexicalBlock(scope: !14503, file: !2440, line: 267, column: 35)
!14503 = distinct !DILexicalBlock(scope: !14490, file: !2440, line: 267, column: 6)
!14504 = !DILocation(line: 234, column: 2, scope: !14498, inlinedAt: !14501)
!14505 = !DILocation(line: 397, column: 2, scope: !14494)
!14506 = !DILocalVariable(name: "thread", arg: 1, scope: !14507, file: !2440, line: 250, type: !2335)
!14507 = distinct !DISubprogram(name: "queue_thread", scope: !2440, file: !2440, line: 250, type: !14279, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14508)
!14508 = !{!14506}
!14509 = !DILocation(line: 0, scope: !14507, inlinedAt: !14510)
!14510 = distinct !DILocation(line: 398, column: 2, scope: !14482)
!14511 = !DILocation(line: 252, column: 15, scope: !14507, inlinedAt: !14510)
!14512 = !DILocation(line: 252, column: 28, scope: !14507, inlinedAt: !14510)
!14513 = !DILocalVariable(name: "thread", arg: 1, scope: !14514, file: !2440, line: 227, type: !2335)
!14514 = distinct !DISubprogram(name: "runq_add", scope: !2440, file: !2440, line: 227, type: !14279, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14515)
!14515 = !{!14513}
!14516 = !DILocation(line: 0, scope: !14514, inlinedAt: !14517)
!14517 = distinct !DILocation(line: 254, column: 3, scope: !14518, inlinedAt: !14510)
!14518 = distinct !DILexicalBlock(scope: !14519, file: !2440, line: 253, column: 35)
!14519 = distinct !DILexicalBlock(scope: !14507, file: !2440, line: 253, column: 6)
!14520 = !DILocalVariable(name: "pq", arg: 1, scope: !14521, file: !2440, line: 181, type: !14524)
!14521 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2440, file: !2440, line: 181, type: !14522, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14525)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{null, !14524, !2335}
!14524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!14525 = !{!14520, !14526, !14527}
!14526 = !DILocalVariable(name: "thread", arg: 2, scope: !14521, file: !2440, line: 182, type: !2335)
!14527 = !DILocalVariable(name: "t", scope: !14521, file: !2440, line: 184, type: !2335)
!14528 = !DILocation(line: 0, scope: !14521, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 229, column: 2, scope: !14514, inlinedAt: !14517)
!14530 = !DILocation(line: 188, column: 2, scope: !14531, inlinedAt: !14529)
!14531 = distinct !DILexicalBlock(scope: !14521, file: !2440, line: 188, column: 2)
!14532 = !DILocation(line: 188, column: 2, scope: !14533, inlinedAt: !14529)
!14533 = distinct !DILexicalBlock(scope: !14531, file: !2440, line: 188, column: 2)
!14534 = !DILocation(line: 0, scope: !14531, inlinedAt: !14529)
!14535 = !DILocation(line: 189, column: 7, scope: !14536, inlinedAt: !14529)
!14536 = distinct !DILexicalBlock(scope: !14537, file: !2440, line: 189, column: 7)
!14537 = distinct !DILexicalBlock(scope: !14533, file: !2440, line: 188, column: 56)
!14538 = !DILocation(line: 189, column: 35, scope: !14536, inlinedAt: !14529)
!14539 = !DILocation(line: 189, column: 7, scope: !14537, inlinedAt: !14529)
!14540 = !DILocation(line: 191, column: 21, scope: !14541, inlinedAt: !14529)
!14541 = distinct !DILexicalBlock(scope: !14536, file: !2440, line: 189, column: 40)
!14542 = !DILocation(line: 190, column: 4, scope: !14541, inlinedAt: !14529)
!14543 = !DILocation(line: 192, column: 4, scope: !14541, inlinedAt: !14529)
!14544 = distinct !{!14544, !14530, !14545}
!14545 = !DILocation(line: 194, column: 2, scope: !14531, inlinedAt: !14529)
!14546 = !DILocation(line: 196, column: 37, scope: !14521, inlinedAt: !14529)
!14547 = !DILocation(line: 196, column: 2, scope: !14521, inlinedAt: !14529)
!14548 = !DILocation(line: 197, column: 1, scope: !14521, inlinedAt: !14529)
!14549 = !DILocation(line: 399, column: 25, scope: !14482)
!14550 = !DILocation(line: 399, column: 22, scope: !14482)
!14551 = !DILocation(line: 399, column: 2, scope: !14482)
!14552 = !DILocation(line: 400, column: 1, scope: !14482)
!14553 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12826, file: !12826, line: 136, type: !14439, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14554)
!14554 = !{!14555}
!14555 = !DILocalVariable(name: "thread", arg: 1, scope: !14553, file: !12826, line: 136, type: !2335)
!14556 = !DILocation(line: 0, scope: !14553)
!14557 = !DILocation(line: 138, column: 9, scope: !14553)
!14558 = !DILocation(line: 138, column: 2, scope: !14553)
!14559 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2440, file: !2440, line: 1137, type: !14522, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14560)
!14560 = !{!14561, !14562}
!14561 = !DILocalVariable(name: "pq", arg: 1, scope: !14559, file: !2440, line: 1137, type: !14524)
!14562 = !DILocalVariable(name: "thread", arg: 2, scope: !14559, file: !2440, line: 1137, type: !2335)
!14563 = !DILocation(line: 0, scope: !14559)
!14564 = !DILocation(line: 1141, column: 33, scope: !14559)
!14565 = !DILocation(line: 1141, column: 2, scope: !14559)
!14566 = !DILocation(line: 1142, column: 1, scope: !14559)
!14567 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !14568, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14570)
!14568 = !DISubroutineType(types: !14569)
!14569 = !{!2436, !14524}
!14570 = !{!14571}
!14571 = !DILocalVariable(name: "list", arg: 1, scope: !14567, file: !325, line: 294, type: !14524)
!14572 = !DILocation(line: 0, scope: !14567)
!14573 = !DILocation(line: 296, column: 9, scope: !14567)
!14574 = !DILocation(line: 296, column: 49, scope: !14567)
!14575 = !DILocation(line: 296, column: 2, scope: !14567)
!14576 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !14577, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14579)
!14577 = !DISubroutineType(types: !14578)
!14578 = !{null, !2436, !2436}
!14579 = !{!14580, !14581, !14582}
!14580 = !DILocalVariable(name: "successor", arg: 1, scope: !14576, file: !325, line: 443, type: !2436)
!14581 = !DILocalVariable(name: "node", arg: 2, scope: !14576, file: !325, line: 443, type: !2436)
!14582 = !DILocalVariable(name: "prev", scope: !14576, file: !325, line: 445, type: !14583)
!14583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2436)
!14584 = !DILocation(line: 0, scope: !14576)
!14585 = !DILocation(line: 445, column: 39, scope: !14576)
!14586 = !DILocation(line: 447, column: 8, scope: !14576)
!14587 = !DILocation(line: 447, column: 13, scope: !14576)
!14588 = !DILocation(line: 448, column: 8, scope: !14576)
!14589 = !DILocation(line: 448, column: 13, scope: !14576)
!14590 = !DILocation(line: 449, column: 8, scope: !14576)
!14591 = !DILocation(line: 449, column: 13, scope: !14576)
!14592 = !DILocation(line: 450, column: 18, scope: !14576)
!14593 = !DILocation(line: 451, column: 1, scope: !14576)
!14594 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !14595, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14597)
!14595 = !DISubroutineType(types: !14596)
!14596 = !{!2436, !14524, !2436}
!14597 = !{!14598, !14599}
!14598 = !DILocalVariable(name: "list", arg: 1, scope: !14594, file: !325, line: 341, type: !14524)
!14599 = !DILocalVariable(name: "node", arg: 2, scope: !14594, file: !325, line: 342, type: !2436)
!14600 = !DILocation(line: 0, scope: !14594)
!14601 = !DILocation(line: 344, column: 15, scope: !14594)
!14602 = !DILocation(line: 344, column: 9, scope: !14594)
!14603 = !DILocation(line: 344, column: 26, scope: !14594)
!14604 = !DILocation(line: 344, column: 2, scope: !14594)
!14605 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !14606, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14608)
!14606 = !DISubroutineType(types: !14607)
!14607 = !{null, !14524, !2436}
!14608 = !{!14609, !14610, !14611}
!14609 = !DILocalVariable(name: "list", arg: 1, scope: !14605, file: !325, line: 404, type: !14524)
!14610 = !DILocalVariable(name: "node", arg: 2, scope: !14605, file: !325, line: 404, type: !2436)
!14611 = !DILocalVariable(name: "tail", scope: !14605, file: !325, line: 406, type: !14583)
!14612 = !DILocation(line: 0, scope: !14605)
!14613 = !DILocation(line: 406, column: 34, scope: !14605)
!14614 = !DILocation(line: 408, column: 8, scope: !14605)
!14615 = !DILocation(line: 408, column: 13, scope: !14605)
!14616 = !DILocation(line: 409, column: 8, scope: !14605)
!14617 = !DILocation(line: 409, column: 13, scope: !14605)
!14618 = !DILocation(line: 411, column: 8, scope: !14605)
!14619 = !DILocation(line: 411, column: 13, scope: !14605)
!14620 = !DILocation(line: 412, column: 13, scope: !14605)
!14621 = !DILocation(line: 413, column: 1, scope: !14605)
!14622 = distinct !DISubprogram(name: "update_cache", scope: !2440, file: !2440, line: 559, type: !7598, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14623)
!14623 = !{!14624, !14625}
!14624 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14622, file: !2440, line: 559, type: !103)
!14625 = !DILocalVariable(name: "thread", scope: !14622, file: !2440, line: 562, type: !2335)
!14626 = !DILocation(line: 0, scope: !14622)
!14627 = !DILocation(line: 239, column: 9, scope: !14628, inlinedAt: !14631)
!14628 = distinct !DISubprogram(name: "runq_best", scope: !2440, file: !2440, line: 237, type: !14629, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!14629 = !DISubroutineType(types: !14630)
!14630 = !{!2335}
!14631 = distinct !DILocation(line: 314, column: 28, scope: !14632, inlinedAt: !14635)
!14632 = distinct !DISubprogram(name: "next_up", scope: !2440, file: !2440, line: 312, type: !14629, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14633)
!14633 = !{!14634}
!14634 = !DILocalVariable(name: "thread", scope: !14632, file: !2440, line: 314, type: !2335)
!14635 = distinct !DILocation(line: 562, column: 28, scope: !14622)
!14636 = !DILocation(line: 0, scope: !14632, inlinedAt: !14635)
!14637 = !DILocation(line: 340, column: 17, scope: !14632, inlinedAt: !14635)
!14638 = !DILocation(line: 340, column: 9, scope: !14632, inlinedAt: !14635)
!14639 = !DILocalVariable(name: "thread", arg: 1, scope: !14640, file: !2440, line: 127, type: !2335)
!14640 = distinct !DISubprogram(name: "should_preempt", scope: !2440, file: !2440, line: 127, type: !14641, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14643)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{!157, !2335, !103}
!14643 = !{!14639, !14644}
!14644 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14640, file: !2440, line: 128, type: !103)
!14645 = !DILocation(line: 0, scope: !14640, inlinedAt: !14646)
!14646 = distinct !DILocation(line: 564, column: 6, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14622, file: !2440, line: 564, column: 6)
!14648 = !DILocation(line: 133, column: 17, scope: !14649, inlinedAt: !14646)
!14649 = distinct !DILexicalBlock(scope: !14640, file: !2440, line: 133, column: 6)
!14650 = !DILocation(line: 0, scope: !14647)
!14651 = !DILocation(line: 133, column: 6, scope: !14640, inlinedAt: !14646)
!14652 = !DILocation(line: 140, column: 6, scope: !14653, inlinedAt: !14646)
!14653 = distinct !DILexicalBlock(scope: !14640, file: !2440, line: 140, column: 6)
!14654 = !DILocation(line: 140, column: 6, scope: !14640, inlinedAt: !14646)
!14655 = !DILocation(line: 150, column: 9, scope: !14656, inlinedAt: !14646)
!14656 = distinct !DILexicalBlock(scope: !14640, file: !2440, line: 149, column: 6)
!14657 = !DILocation(line: 149, column: 6, scope: !14640, inlinedAt: !14646)
!14658 = !DILocation(line: 157, column: 6, scope: !14659, inlinedAt: !14646)
!14659 = distinct !DILexicalBlock(scope: !14640, file: !2440, line: 157, column: 6)
!14660 = !DILocation(line: 564, column: 6, scope: !14622)
!14661 = !DILocation(line: 566, column: 14, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14663, file: !2440, line: 566, column: 7)
!14663 = distinct !DILexicalBlock(scope: !14647, file: !2440, line: 564, column: 42)
!14664 = !DILocation(line: 566, column: 7, scope: !14663)
!14665 = !DILocation(line: 567, column: 4, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14662, file: !2440, line: 566, column: 27)
!14667 = !DILocation(line: 568, column: 3, scope: !14666)
!14668 = !DILocation(line: 585, column: 1, scope: !14622)
!14669 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2440, file: !2440, line: 1144, type: !14670, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14672)
!14670 = !DISubroutineType(types: !14671)
!14671 = !{!2335, !14524}
!14672 = !{!14673, !14674, !14675}
!14673 = !DILocalVariable(name: "pq", arg: 1, scope: !14669, file: !2440, line: 1144, type: !14524)
!14674 = !DILocalVariable(name: "thread", scope: !14669, file: !2440, line: 1146, type: !2335)
!14675 = !DILocalVariable(name: "n", scope: !14669, file: !2440, line: 1147, type: !2436)
!14676 = !DILocation(line: 0, scope: !14669)
!14677 = !DILocation(line: 1147, column: 19, scope: !14669)
!14678 = !DILocation(line: 1152, column: 2, scope: !14669)
!14679 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12826, file: !12826, line: 115, type: !14439, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14680)
!14680 = !{!14681}
!14681 = !DILocalVariable(name: "thread", arg: 1, scope: !14679, file: !12826, line: 115, type: !2335)
!14682 = !DILocation(line: 0, scope: !14679)
!14683 = !DILocation(line: 117, column: 46, scope: !14679)
!14684 = !DILocation(line: 117, column: 10, scope: !14679)
!14685 = !DILocation(line: 117, column: 9, scope: !14679)
!14686 = !DILocation(line: 117, column: 2, scope: !14679)
!14687 = distinct !DISubprogram(name: "is_preempt", scope: !2440, file: !2440, line: 62, type: !14297, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14688)
!14688 = !{!14689}
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14687, file: !2440, line: 62, type: !2335)
!14690 = !DILocation(line: 0, scope: !14687)
!14691 = !DILocation(line: 65, column: 22, scope: !14687)
!14692 = !DILocation(line: 65, column: 30, scope: !14687)
!14693 = !DILocation(line: 65, column: 2, scope: !14687)
!14694 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13218, file: !13218, line: 35, type: !14695, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14699)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{!157, !14697}
!14697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14698, size: 32)
!14698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2386)
!14699 = !{!14700}
!14700 = !DILocalVariable(name: "to", arg: 1, scope: !14694, file: !13218, line: 35, type: !14697)
!14701 = !DILocation(line: 0, scope: !14694)
!14702 = !DILocation(line: 37, column: 35, scope: !14694)
!14703 = !DILocation(line: 37, column: 10, scope: !14694)
!14704 = !DILocation(line: 37, column: 9, scope: !14694)
!14705 = !DILocation(line: 37, column: 2, scope: !14694)
!14706 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !14707, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14711)
!14707 = !DISubroutineType(types: !14708)
!14708 = !{!157, !14709}
!14709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14710, size: 32)
!14710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2345)
!14711 = !{!14712}
!14712 = !DILocalVariable(name: "node", arg: 1, scope: !14706, file: !325, line: 225, type: !14709)
!14713 = !DILocation(line: 0, scope: !14706)
!14714 = !DILocation(line: 227, column: 15, scope: !14706)
!14715 = !DILocation(line: 227, column: 20, scope: !14706)
!14716 = !DILocation(line: 227, column: 2, scope: !14706)
!14717 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !14595, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14718)
!14718 = !{!14719, !14720}
!14719 = !DILocalVariable(name: "list", arg: 1, scope: !14717, file: !325, line: 325, type: !14524)
!14720 = !DILocalVariable(name: "node", arg: 2, scope: !14717, file: !325, line: 326, type: !2436)
!14721 = !DILocation(line: 0, scope: !14717)
!14722 = !DILocation(line: 328, column: 24, scope: !14717)
!14723 = !DILocation(line: 328, column: 15, scope: !14717)
!14724 = !DILocation(line: 328, column: 9, scope: !14717)
!14725 = !DILocation(line: 328, column: 45, scope: !14717)
!14726 = !DILocation(line: 328, column: 2, scope: !14717)
!14727 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !14728, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14730)
!14728 = !DISubroutineType(types: !14729)
!14729 = !{!157, !14524}
!14730 = !{!14731}
!14731 = !DILocalVariable(name: "list", arg: 1, scope: !14727, file: !325, line: 266, type: !14524)
!14732 = !DILocation(line: 0, scope: !14727)
!14733 = !DILocation(line: 268, column: 15, scope: !14727)
!14734 = !DILocation(line: 268, column: 20, scope: !14727)
!14735 = !DILocation(line: 268, column: 2, scope: !14727)
!14736 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !14737, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14739)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{null, !2436}
!14739 = !{!14740, !14741, !14742}
!14740 = !DILocalVariable(name: "node", arg: 1, scope: !14736, file: !325, line: 496, type: !2436)
!14741 = !DILocalVariable(name: "prev", scope: !14736, file: !325, line: 498, type: !14583)
!14742 = !DILocalVariable(name: "next", scope: !14736, file: !325, line: 499, type: !14583)
!14743 = !DILocation(line: 0, scope: !14736)
!14744 = !DILocation(line: 498, column: 34, scope: !14736)
!14745 = !DILocation(line: 499, column: 34, scope: !14736)
!14746 = !DILocation(line: 501, column: 8, scope: !14736)
!14747 = !DILocation(line: 501, column: 13, scope: !14736)
!14748 = !DILocation(line: 502, column: 8, scope: !14736)
!14749 = !DILocation(line: 502, column: 13, scope: !14736)
!14750 = !DILocation(line: 503, column: 2, scope: !14736)
!14751 = !DILocation(line: 504, column: 1, scope: !14736)
!14752 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !14737, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14753)
!14753 = !{!14754}
!14754 = !DILocalVariable(name: "node", arg: 1, scope: !14752, file: !325, line: 211, type: !2436)
!14755 = !DILocation(line: 0, scope: !14752)
!14756 = !DILocation(line: 213, column: 8, scope: !14752)
!14757 = !DILocation(line: 213, column: 13, scope: !14752)
!14758 = !DILocation(line: 214, column: 8, scope: !14752)
!14759 = !DILocation(line: 214, column: 13, scope: !14752)
!14760 = !DILocation(line: 215, column: 1, scope: !14752)
!14761 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12826, file: !12826, line: 131, type: !14762, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14764)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{!157, !2335, !121}
!14764 = !{!14765, !14766}
!14765 = !DILocalVariable(name: "thread", arg: 1, scope: !14761, file: !12826, line: 131, type: !2335)
!14766 = !DILocalVariable(name: "state", arg: 2, scope: !14761, file: !12826, line: 131, type: !121)
!14767 = !DILocation(line: 0, scope: !14761)
!14768 = !DILocation(line: 133, column: 23, scope: !14761)
!14769 = !DILocation(line: 133, column: 45, scope: !14761)
!14770 = !DILocation(line: 133, column: 2, scope: !14761)
!14771 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12826, file: !12826, line: 211, type: !14772, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14774)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!157, !103, !103}
!14774 = !{!14775, !14776}
!14775 = !DILocalVariable(name: "prio", arg: 1, scope: !14771, file: !12826, line: 211, type: !103)
!14776 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14771, file: !12826, line: 211, type: !103)
!14777 = !DILocation(line: 0, scope: !14771)
!14778 = !DILocation(line: 213, column: 9, scope: !14771)
!14779 = !DILocation(line: 213, column: 2, scope: !14771)
!14780 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12826, file: !12826, line: 83, type: !14439, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14781)
!14781 = !{!14782}
!14782 = !DILocalVariable(name: "thread", arg: 1, scope: !14780, file: !12826, line: 83, type: !2335)
!14783 = !DILocation(line: 0, scope: !14780)
!14784 = !DILocation(line: 89, column: 16, scope: !14780)
!14785 = !DILocation(line: 89, column: 2, scope: !14780)
!14786 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12826, file: !12826, line: 206, type: !14772, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14787)
!14787 = !{!14788, !14789}
!14788 = !DILocalVariable(name: "prio1", arg: 1, scope: !14786, file: !12826, line: 206, type: !103)
!14789 = !DILocalVariable(name: "prio2", arg: 2, scope: !14786, file: !12826, line: 206, type: !103)
!14790 = !DILocation(line: 0, scope: !14786)
!14791 = !DILocation(line: 208, column: 15, scope: !14786)
!14792 = !DILocation(line: 208, column: 2, scope: !14786)
!14793 = distinct !DISubprogram(name: "z_ready_thread", scope: !2440, file: !2440, line: 635, type: !14279, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14794)
!14794 = !{!14795, !14796, !14798}
!14795 = !DILocalVariable(name: "thread", arg: 1, scope: !14793, file: !2440, line: 635, type: !2335)
!14796 = !DILocalVariable(name: "__i", scope: !14797, file: !2440, line: 637, type: !14313)
!14797 = distinct !DILexicalBlock(scope: !14793, file: !2440, line: 637, column: 2)
!14798 = !DILocalVariable(name: "__key", scope: !14797, file: !2440, line: 637, type: !14313)
!14799 = !DILocation(line: 0, scope: !14793)
!14800 = !DILocation(line: 0, scope: !14797)
!14801 = !DILocation(line: 0, scope: !14321, inlinedAt: !14802)
!14802 = distinct !DILocation(line: 637, column: 2, scope: !14797)
!14803 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !14802)
!14805 = !DILocation(line: 0, scope: !14330, inlinedAt: !14804)
!14806 = !DILocation(line: 639, column: 4, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !2440, line: 638, column: 41)
!14808 = distinct !DILexicalBlock(scope: !14809, file: !2440, line: 638, column: 7)
!14809 = distinct !DILexicalBlock(scope: !14810, file: !2440, line: 637, column: 26)
!14810 = distinct !DILexicalBlock(scope: !14797, file: !2440, line: 637, column: 2)
!14811 = !DILocation(line: 0, scope: !14348, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 637, column: 2, scope: !14810)
!14813 = !DILocation(line: 0, scope: !14356, inlinedAt: !14814)
!14814 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !14812)
!14815 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !14814)
!14816 = !DILocation(line: 642, column: 1, scope: !14793)
!14817 = distinct !DISubprogram(name: "ready_thread", scope: !2440, file: !2440, line: 617, type: !14279, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14818)
!14818 = !{!14819}
!14819 = !DILocalVariable(name: "thread", arg: 1, scope: !14817, file: !2440, line: 617, type: !2335)
!14820 = !DILocation(line: 0, scope: !14817)
!14821 = !DILocation(line: 626, column: 7, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14817, file: !2440, line: 626, column: 6)
!14823 = !DILocation(line: 626, column: 34, scope: !14822)
!14824 = !DILocation(line: 626, column: 37, scope: !14822)
!14825 = !DILocation(line: 626, column: 6, scope: !14817)
!14826 = !DILocation(line: 0, scope: !14507, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 629, column: 3, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14822, file: !2440, line: 626, column: 64)
!14829 = !DILocation(line: 252, column: 15, scope: !14507, inlinedAt: !14827)
!14830 = !DILocation(line: 252, column: 28, scope: !14507, inlinedAt: !14827)
!14831 = !DILocation(line: 0, scope: !14514, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 254, column: 3, scope: !14518, inlinedAt: !14827)
!14833 = !DILocation(line: 0, scope: !14521, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 229, column: 2, scope: !14514, inlinedAt: !14832)
!14835 = !DILocation(line: 188, column: 2, scope: !14531, inlinedAt: !14834)
!14836 = !DILocation(line: 188, column: 2, scope: !14533, inlinedAt: !14834)
!14837 = !DILocation(line: 0, scope: !14531, inlinedAt: !14834)
!14838 = !DILocation(line: 189, column: 7, scope: !14536, inlinedAt: !14834)
!14839 = !DILocation(line: 189, column: 35, scope: !14536, inlinedAt: !14834)
!14840 = !DILocation(line: 189, column: 7, scope: !14537, inlinedAt: !14834)
!14841 = !DILocation(line: 191, column: 21, scope: !14541, inlinedAt: !14834)
!14842 = !DILocation(line: 190, column: 4, scope: !14541, inlinedAt: !14834)
!14843 = !DILocation(line: 192, column: 4, scope: !14541, inlinedAt: !14834)
!14844 = distinct !{!14844, !14835, !14845}
!14845 = !DILocation(line: 194, column: 2, scope: !14531, inlinedAt: !14834)
!14846 = !DILocation(line: 196, column: 37, scope: !14521, inlinedAt: !14834)
!14847 = !DILocation(line: 196, column: 2, scope: !14521, inlinedAt: !14834)
!14848 = !DILocation(line: 197, column: 1, scope: !14521, inlinedAt: !14834)
!14849 = !DILocation(line: 630, column: 3, scope: !14828)
!14850 = !DILocation(line: 632, column: 2, scope: !14828)
!14851 = !DILocation(line: 633, column: 1, scope: !14817)
!14852 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12826, file: !12826, line: 120, type: !14439, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14853)
!14853 = !{!14854}
!14854 = !DILocalVariable(name: "thread", arg: 1, scope: !14852, file: !12826, line: 120, type: !2335)
!14855 = !DILocation(line: 0, scope: !14852)
!14856 = !DILocation(line: 122, column: 12, scope: !14852)
!14857 = !DILocation(line: 122, column: 62, scope: !14852)
!14858 = !DILocation(line: 123, column: 4, scope: !14852)
!14859 = !DILocation(line: 122, column: 2, scope: !14852)
!14860 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2440, file: !2440, line: 644, type: !14279, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14861)
!14861 = !{!14862, !14863, !14865}
!14862 = !DILocalVariable(name: "thread", arg: 1, scope: !14860, file: !2440, line: 644, type: !2335)
!14863 = !DILocalVariable(name: "__i", scope: !14864, file: !2440, line: 646, type: !14313)
!14864 = distinct !DILexicalBlock(scope: !14860, file: !2440, line: 646, column: 2)
!14865 = !DILocalVariable(name: "__key", scope: !14864, file: !2440, line: 646, type: !14313)
!14866 = !DILocation(line: 0, scope: !14860)
!14867 = !DILocation(line: 0, scope: !14864)
!14868 = !DILocation(line: 0, scope: !14321, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 646, column: 2, scope: !14864)
!14870 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !14869)
!14872 = !DILocation(line: 0, scope: !14330, inlinedAt: !14871)
!14873 = !DILocation(line: 647, column: 3, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14875, file: !2440, line: 646, column: 26)
!14875 = distinct !DILexicalBlock(scope: !14864, file: !2440, line: 646, column: 2)
!14876 = !DILocation(line: 0, scope: !14348, inlinedAt: !14877)
!14877 = distinct !DILocation(line: 646, column: 2, scope: !14875)
!14878 = !DILocation(line: 0, scope: !14356, inlinedAt: !14879)
!14879 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !14877)
!14880 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !14879)
!14881 = !DILocation(line: 649, column: 1, scope: !14860)
!14882 = distinct !DISubprogram(name: "z_sched_start", scope: !2440, file: !2440, line: 651, type: !14279, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14883)
!14883 = !{!14884, !14885}
!14884 = !DILocalVariable(name: "thread", arg: 1, scope: !14882, file: !2440, line: 651, type: !2335)
!14885 = !DILocalVariable(name: "key", scope: !14882, file: !2440, line: 653, type: !14313)
!14886 = !DILocation(line: 0, scope: !14882)
!14887 = !DILocation(line: 0, scope: !14321, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 653, column: 25, scope: !14882)
!14889 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !14888)
!14891 = !DILocation(line: 0, scope: !14330, inlinedAt: !14890)
!14892 = !DILocation(line: 655, column: 6, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14882, file: !2440, line: 655, column: 6)
!14894 = !DILocation(line: 655, column: 6, scope: !14882)
!14895 = !DILocation(line: 0, scope: !14348, inlinedAt: !14896)
!14896 = distinct !DILocation(line: 656, column: 3, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14893, file: !2440, line: 655, column: 36)
!14898 = !DILocation(line: 0, scope: !14356, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !14896)
!14900 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !14899)
!14901 = !DILocation(line: 657, column: 3, scope: !14897)
!14902 = !DILocation(line: 660, column: 2, scope: !14882)
!14903 = !DILocation(line: 661, column: 2, scope: !14882)
!14904 = !DILocation(line: 662, column: 2, scope: !14882)
!14905 = !DILocation(line: 663, column: 1, scope: !14882)
!14906 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12826, file: !12826, line: 126, type: !14439, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14907)
!14907 = !{!14908}
!14908 = !DILocalVariable(name: "thread", arg: 1, scope: !14906, file: !12826, line: 126, type: !2335)
!14909 = !DILocation(line: 0, scope: !14906)
!14910 = !DILocation(line: 128, column: 23, scope: !14906)
!14911 = !DILocation(line: 128, column: 36, scope: !14906)
!14912 = !DILocation(line: 128, column: 56, scope: !14906)
!14913 = !DILocation(line: 128, column: 2, scope: !14906)
!14914 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12826, file: !12826, line: 155, type: !14279, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14915)
!14915 = !{!14916}
!14916 = !DILocalVariable(name: "thread", arg: 1, scope: !14914, file: !12826, line: 155, type: !2335)
!14917 = !DILocation(line: 0, scope: !14914)
!14918 = !DILocation(line: 157, column: 15, scope: !14914)
!14919 = !DILocation(line: 157, column: 28, scope: !14914)
!14920 = !DILocation(line: 158, column: 1, scope: !14914)
!14921 = distinct !DISubprogram(name: "z_reschedule", scope: !2440, file: !2440, line: 967, type: !14349, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14922)
!14922 = !{!14923, !14924}
!14923 = !DILocalVariable(name: "lock", arg: 1, scope: !14921, file: !2440, line: 967, type: !14324)
!14924 = !DILocalVariable(name: "key", arg: 2, scope: !14921, file: !2440, line: 967, type: !14313)
!14925 = !DILocation(line: 0, scope: !14921)
!14926 = !DILocation(line: 969, column: 6, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14921, file: !2440, line: 969, column: 6)
!14928 = !DILocation(line: 969, column: 23, scope: !14927)
!14929 = !DILocation(line: 969, column: 26, scope: !14927)
!14930 = !DILocation(line: 969, column: 6, scope: !14921)
!14931 = !DILocalVariable(name: "key", arg: 2, scope: !14932, file: !12930, line: 193, type: !14313)
!14932 = distinct !DISubprogram(name: "z_swap", scope: !12930, file: !12930, line: 193, type: !14933, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14935)
!14933 = !DISubroutineType(types: !14934)
!14934 = !{!103, !14324, !14313}
!14935 = !{!14936, !14931}
!14936 = !DILocalVariable(name: "lock", arg: 1, scope: !14932, file: !12930, line: 193, type: !14324)
!14937 = !DILocation(line: 0, scope: !14932, inlinedAt: !14938)
!14938 = distinct !DILocation(line: 970, column: 3, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14927, file: !2440, line: 969, column: 39)
!14940 = !DILocation(line: 196, column: 9, scope: !14932, inlinedAt: !14938)
!14941 = !DILocation(line: 971, column: 2, scope: !14939)
!14942 = !DILocation(line: 0, scope: !14348, inlinedAt: !14943)
!14943 = distinct !DILocation(line: 972, column: 3, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14927, file: !2440, line: 971, column: 9)
!14945 = !DILocation(line: 0, scope: !14356, inlinedAt: !14946)
!14946 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !14943)
!14947 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !14946)
!14948 = !DILocation(line: 975, column: 1, scope: !14921)
!14949 = distinct !DISubprogram(name: "resched", scope: !2440, file: !2440, line: 940, type: !14950, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14952)
!14950 = !DISubroutineType(types: !14951)
!14951 = !{!157, !121}
!14952 = !{!14953}
!14953 = !DILocalVariable(name: "key", arg: 1, scope: !14949, file: !2440, line: 940, type: !121)
!14954 = !DILocation(line: 0, scope: !14949)
!14955 = !DILocalVariable(name: "key", arg: 1, scope: !14956, file: !5739, line: 112, type: !32)
!14956 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5739, file: !5739, line: 112, type: !14957, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14959)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{!157, !32}
!14959 = !{!14955}
!14960 = !DILocation(line: 0, scope: !14956, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 946, column: 9, scope: !14949)
!14962 = !DILocation(line: 115, column: 13, scope: !14956, inlinedAt: !14961)
!14963 = !DILocation(line: 946, column: 32, scope: !14949)
!14964 = !DILocation(line: 1031, column: 3, scope: !14965, inlinedAt: !14968)
!14965 = distinct !DISubprogram(name: "__get_IPSR", scope: !5954, file: !5954, line: 1027, type: !6035, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14966)
!14966 = !{!14967}
!14967 = !DILocalVariable(name: "result", scope: !14965, file: !5954, line: 1029, type: !121)
!14968 = distinct !DILocation(line: 48, column: 10, scope: !14969, inlinedAt: !14970)
!14969 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6748, file: !6748, line: 46, type: !6749, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!14970 = distinct !DILocation(line: 946, column: 36, scope: !14949)
!14971 = !{i64 3538090}
!14972 = !DILocation(line: 0, scope: !14965, inlinedAt: !14968)
!14973 = !DILocation(line: 48, column: 9, scope: !14969, inlinedAt: !14970)
!14974 = !DILocation(line: 946, column: 2, scope: !14949)
!14975 = distinct !DISubprogram(name: "need_swap", scope: !2440, file: !2440, line: 953, type: !6749, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14976)
!14976 = !{!14977}
!14977 = !DILocalVariable(name: "new_thread", scope: !14975, file: !2440, line: 959, type: !2335)
!14978 = !DILocation(line: 962, column: 31, scope: !14975)
!14979 = !DILocation(line: 0, scope: !14975)
!14980 = !DILocation(line: 963, column: 23, scope: !14975)
!14981 = !DILocation(line: 963, column: 20, scope: !14975)
!14982 = !DILocation(line: 963, column: 2, scope: !14975)
!14983 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12930, file: !12930, line: 181, type: !5964, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14984)
!14984 = !{!14985, !14986}
!14985 = !DILocalVariable(name: "key", arg: 1, scope: !14983, file: !12930, line: 181, type: !32)
!14986 = !DILocalVariable(name: "ret", scope: !14983, file: !12930, line: 183, type: !103)
!14987 = !DILocation(line: 0, scope: !14983)
!14988 = !DILocation(line: 185, column: 8, scope: !14983)
!14989 = !DILocation(line: 186, column: 2, scope: !14983)
!14990 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2440, file: !2440, line: 665, type: !14279, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !14991)
!14991 = !{!14992, !14993, !14995}
!14992 = !DILocalVariable(name: "thread", arg: 1, scope: !14990, file: !2440, line: 665, type: !2335)
!14993 = !DILocalVariable(name: "__i", scope: !14994, file: !2440, line: 671, type: !14313)
!14994 = distinct !DILexicalBlock(scope: !14990, file: !2440, line: 671, column: 2)
!14995 = !DILocalVariable(name: "__key", scope: !14994, file: !2440, line: 671, type: !14313)
!14996 = !DILocation(line: 0, scope: !14990)
!14997 = !DILocation(line: 669, column: 8, scope: !14990)
!14998 = !DILocation(line: 0, scope: !14994)
!14999 = !DILocation(line: 0, scope: !14321, inlinedAt: !15000)
!15000 = distinct !DILocation(line: 671, column: 2, scope: !14994)
!15001 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15000)
!15003 = !DILocation(line: 0, scope: !14330, inlinedAt: !15002)
!15004 = !DILocation(line: 672, column: 7, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !15006, file: !2440, line: 672, column: 7)
!15006 = distinct !DILexicalBlock(scope: !15007, file: !2440, line: 671, column: 26)
!15007 = distinct !DILexicalBlock(scope: !14994, file: !2440, line: 671, column: 2)
!15008 = !DILocation(line: 672, column: 7, scope: !15006)
!15009 = !DILocation(line: 0, scope: !14490, inlinedAt: !15010)
!15010 = distinct !DILocation(line: 673, column: 4, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15005, file: !2440, line: 672, column: 35)
!15012 = !DILocation(line: 266, column: 15, scope: !14490, inlinedAt: !15010)
!15013 = !DILocation(line: 266, column: 28, scope: !14490, inlinedAt: !15010)
!15014 = !DILocation(line: 0, scope: !14498, inlinedAt: !15015)
!15015 = distinct !DILocation(line: 268, column: 3, scope: !14502, inlinedAt: !15010)
!15016 = !DILocation(line: 234, column: 2, scope: !14498, inlinedAt: !15015)
!15017 = !DILocation(line: 674, column: 3, scope: !15011)
!15018 = !DILocation(line: 675, column: 3, scope: !15006)
!15019 = !DILocation(line: 676, column: 26, scope: !15006)
!15020 = !DILocation(line: 676, column: 23, scope: !15006)
!15021 = !DILocation(line: 676, column: 3, scope: !15006)
!15022 = !DILocation(line: 0, scope: !14348, inlinedAt: !15023)
!15023 = distinct !DILocation(line: 671, column: 2, scope: !15007)
!15024 = !DILocation(line: 0, scope: !14356, inlinedAt: !15025)
!15025 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15023)
!15026 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15025)
!15027 = !DILocation(line: 679, column: 16, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !14990, file: !2440, line: 679, column: 6)
!15029 = !DILocation(line: 679, column: 13, scope: !15028)
!15030 = !DILocation(line: 679, column: 6, scope: !14990)
!15031 = !DILocation(line: 680, column: 3, scope: !15032)
!15032 = distinct !DILexicalBlock(scope: !15028, file: !2440, line: 679, column: 26)
!15033 = !DILocation(line: 681, column: 2, scope: !15032)
!15034 = !DILocation(line: 684, column: 1, scope: !14990)
!15035 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13218, file: !13218, line: 52, type: !14297, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15036)
!15036 = !{!15037}
!15037 = !DILocalVariable(name: "thread", arg: 1, scope: !15035, file: !13218, line: 52, type: !2335)
!15038 = !DILocation(line: 0, scope: !15035)
!15039 = !DILocation(line: 54, column: 39, scope: !15035)
!15040 = !DILocation(line: 54, column: 9, scope: !15035)
!15041 = !DILocation(line: 54, column: 2, scope: !15035)
!15042 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12826, file: !12826, line: 141, type: !14279, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15043)
!15043 = !{!15044}
!15044 = !DILocalVariable(name: "thread", arg: 1, scope: !15042, file: !12826, line: 141, type: !2335)
!15045 = !DILocation(line: 0, scope: !15042)
!15046 = !DILocation(line: 143, column: 15, scope: !15042)
!15047 = !DILocation(line: 143, column: 28, scope: !15042)
!15048 = !DILocation(line: 146, column: 1, scope: !15042)
!15049 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12826, file: !12826, line: 73, type: !3174, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!15050 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15051)
!15051 = distinct !DILocation(line: 75, column: 30, scope: !15049)
!15052 = !DILocation(line: 0, scope: !14330, inlinedAt: !15051)
!15053 = !DILocation(line: 75, column: 9, scope: !15049)
!15054 = !DILocation(line: 76, column: 1, scope: !15049)
!15055 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2440, file: !2440, line: 977, type: !6045, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15056)
!15056 = !{!15057}
!15057 = !DILocalVariable(name: "key", arg: 1, scope: !15055, file: !2440, line: 977, type: !121)
!15058 = !DILocation(line: 0, scope: !15055)
!15059 = !DILocation(line: 979, column: 6, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15055, file: !2440, line: 979, column: 6)
!15061 = !DILocation(line: 979, column: 6, scope: !15055)
!15062 = !DILocation(line: 980, column: 3, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15060, file: !2440, line: 979, column: 20)
!15064 = !DILocation(line: 981, column: 2, scope: !15063)
!15065 = !DILocation(line: 0, scope: !14356, inlinedAt: !15066)
!15066 = distinct !DILocation(line: 982, column: 3, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15060, file: !2440, line: 981, column: 9)
!15068 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15066)
!15069 = !DILocation(line: 985, column: 1, scope: !15055)
!15070 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2440, file: !2440, line: 695, type: !14279, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15071)
!15071 = !{!15072, !15073}
!15072 = !DILocalVariable(name: "thread", arg: 1, scope: !15070, file: !2440, line: 695, type: !2335)
!15073 = !DILocalVariable(name: "key", scope: !15070, file: !2440, line: 699, type: !14313)
!15074 = !DILocation(line: 0, scope: !15070)
!15075 = !DILocation(line: 0, scope: !14321, inlinedAt: !15076)
!15076 = distinct !DILocation(line: 699, column: 25, scope: !15070)
!15077 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15078)
!15078 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15076)
!15079 = !DILocation(line: 0, scope: !14330, inlinedAt: !15078)
!15080 = !DILocation(line: 702, column: 7, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15070, file: !2440, line: 702, column: 6)
!15082 = !DILocation(line: 702, column: 6, scope: !15070)
!15083 = !DILocation(line: 0, scope: !14348, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 703, column: 3, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15081, file: !2440, line: 702, column: 38)
!15086 = !DILocation(line: 0, scope: !14356, inlinedAt: !15087)
!15087 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15084)
!15088 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15087)
!15089 = !DILocation(line: 704, column: 3, scope: !15085)
!15090 = !DILocation(line: 707, column: 2, scope: !15070)
!15091 = !DILocation(line: 708, column: 2, scope: !15070)
!15092 = !DILocation(line: 710, column: 2, scope: !15070)
!15093 = !DILocation(line: 713, column: 1, scope: !15070)
!15094 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12826, file: !12826, line: 96, type: !14439, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15095)
!15095 = !{!15096}
!15096 = !DILocalVariable(name: "thread", arg: 1, scope: !15094, file: !12826, line: 96, type: !2335)
!15097 = !DILocation(line: 0, scope: !15094)
!15098 = !DILocation(line: 98, column: 23, scope: !15094)
!15099 = !DILocation(line: 98, column: 36, scope: !15094)
!15100 = !DILocation(line: 98, column: 57, scope: !15094)
!15101 = !DILocation(line: 98, column: 2, scope: !15094)
!15102 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12826, file: !12826, line: 148, type: !14279, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15103)
!15103 = !{!15104}
!15104 = !DILocalVariable(name: "thread", arg: 1, scope: !15102, file: !12826, line: 148, type: !2335)
!15105 = !DILocation(line: 0, scope: !15102)
!15106 = !DILocation(line: 150, column: 15, scope: !15102)
!15107 = !DILocation(line: 150, column: 28, scope: !15102)
!15108 = !DILocation(line: 153, column: 1, scope: !15102)
!15109 = distinct !DISubprogram(name: "z_pend_thread", scope: !2440, file: !2440, line: 770, type: !15110, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15116)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{null, !2335, !2366, !15112}
!15112 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !15113)
!15113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !15114)
!15114 = !{!15115}
!15115 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15113, file: !201, line: 66, baseType: !200, size: 64)
!15116 = !{!15117, !15118, !15119, !15120, !15122}
!15117 = !DILocalVariable(name: "thread", arg: 1, scope: !15109, file: !2440, line: 770, type: !2335)
!15118 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15109, file: !2440, line: 770, type: !2366)
!15119 = !DILocalVariable(name: "timeout", arg: 3, scope: !15109, file: !2440, line: 771, type: !15112)
!15120 = !DILocalVariable(name: "__i", scope: !15121, file: !2440, line: 774, type: !14313)
!15121 = distinct !DILexicalBlock(scope: !15109, file: !2440, line: 774, column: 2)
!15122 = !DILocalVariable(name: "__key", scope: !15121, file: !2440, line: 774, type: !14313)
!15123 = !DILocation(line: 0, scope: !15109)
!15124 = !DILocation(line: 0, scope: !15121)
!15125 = !DILocation(line: 0, scope: !14321, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 774, column: 2, scope: !15121)
!15127 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15128)
!15128 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15126)
!15129 = !DILocation(line: 0, scope: !14330, inlinedAt: !15128)
!15130 = !DILocation(line: 775, column: 3, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15132, file: !2440, line: 774, column: 26)
!15132 = distinct !DILexicalBlock(scope: !15121, file: !2440, line: 774, column: 2)
!15133 = !DILocation(line: 0, scope: !14348, inlinedAt: !15134)
!15134 = distinct !DILocation(line: 774, column: 2, scope: !15132)
!15135 = !DILocation(line: 0, scope: !14356, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15134)
!15137 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15136)
!15138 = !DILocation(line: 777, column: 1, scope: !15109)
!15139 = distinct !DISubprogram(name: "pend_locked", scope: !2440, file: !2440, line: 760, type: !15110, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15140)
!15140 = !{!15141, !15142, !15143}
!15141 = !DILocalVariable(name: "thread", arg: 1, scope: !15139, file: !2440, line: 760, type: !2335)
!15142 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15139, file: !2440, line: 760, type: !2366)
!15143 = !DILocalVariable(name: "timeout", arg: 3, scope: !15139, file: !2440, line: 761, type: !15112)
!15144 = !DILocation(line: 0, scope: !15139)
!15145 = !DILocation(line: 766, column: 2, scope: !15139)
!15146 = !DILocation(line: 767, column: 2, scope: !15139)
!15147 = !DILocation(line: 768, column: 1, scope: !15139)
!15148 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2440, file: !2440, line: 740, type: !15149, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15151)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{null, !2335, !2366}
!15151 = !{!15152, !15153}
!15152 = !DILocalVariable(name: "thread", arg: 1, scope: !15148, file: !2440, line: 740, type: !2335)
!15153 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15148, file: !2440, line: 740, type: !2366)
!15154 = !DILocation(line: 0, scope: !15148)
!15155 = !DILocation(line: 742, column: 2, scope: !15148)
!15156 = !DILocation(line: 743, column: 2, scope: !15148)
!15157 = !DILocation(line: 747, column: 13, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15148, file: !2440, line: 747, column: 6)
!15159 = !DILocation(line: 747, column: 6, scope: !15148)
!15160 = !DILocation(line: 748, column: 16, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15158, file: !2440, line: 747, column: 22)
!15162 = !DILocation(line: 748, column: 26, scope: !15161)
!15163 = !DILocation(line: 749, column: 28, scope: !15161)
!15164 = !DILocation(line: 0, scope: !14521, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 749, column: 3, scope: !15161)
!15166 = !DILocation(line: 188, column: 2, scope: !14531, inlinedAt: !15165)
!15167 = !DILocation(line: 188, column: 2, scope: !14533, inlinedAt: !15165)
!15168 = !DILocation(line: 0, scope: !14531, inlinedAt: !15165)
!15169 = !DILocation(line: 189, column: 7, scope: !14536, inlinedAt: !15165)
!15170 = !DILocation(line: 189, column: 35, scope: !14536, inlinedAt: !15165)
!15171 = !DILocation(line: 189, column: 7, scope: !14537, inlinedAt: !15165)
!15172 = !DILocation(line: 191, column: 21, scope: !14541, inlinedAt: !15165)
!15173 = !DILocation(line: 190, column: 4, scope: !14541, inlinedAt: !15165)
!15174 = !DILocation(line: 192, column: 4, scope: !14541, inlinedAt: !15165)
!15175 = distinct !{!15175, !15166, !15176}
!15176 = !DILocation(line: 194, column: 2, scope: !14531, inlinedAt: !15165)
!15177 = !DILocation(line: 196, column: 37, scope: !14521, inlinedAt: !15165)
!15178 = !DILocation(line: 196, column: 2, scope: !14521, inlinedAt: !15165)
!15179 = !DILocation(line: 197, column: 1, scope: !14521, inlinedAt: !15165)
!15180 = !DILocation(line: 751, column: 1, scope: !15148)
!15181 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2440, file: !2440, line: 753, type: !15182, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15184)
!15182 = !DISubroutineType(types: !15183)
!15183 = !{null, !2335, !15112}
!15184 = !{!15185, !15186}
!15185 = !DILocalVariable(name: "thread", arg: 1, scope: !15181, file: !2440, line: 753, type: !2335)
!15186 = !DILocalVariable(name: "timeout", arg: 2, scope: !15181, file: !2440, line: 753, type: !15112)
!15187 = !DILocation(line: 0, scope: !15181)
!15188 = !DILocation(line: 755, column: 7, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15181, file: !2440, line: 755, column: 6)
!15190 = !DILocation(line: 755, column: 6, scope: !15181)
!15191 = !DILocation(line: 756, column: 3, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15189, file: !2440, line: 755, column: 41)
!15193 = !DILocation(line: 757, column: 2, scope: !15192)
!15194 = !DILocation(line: 758, column: 1, scope: !15181)
!15195 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13218, file: !13218, line: 47, type: !15182, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15196)
!15196 = !{!15197, !15198}
!15197 = !DILocalVariable(name: "thread", arg: 1, scope: !15195, file: !13218, line: 47, type: !2335)
!15198 = !DILocalVariable(name: "ticks", arg: 2, scope: !15195, file: !13218, line: 47, type: !15112)
!15199 = !DILocation(line: 0, scope: !15195)
!15200 = !DILocation(line: 49, column: 30, scope: !15195)
!15201 = !DILocation(line: 49, column: 2, scope: !15195)
!15202 = !DILocation(line: 50, column: 1, scope: !15195)
!15203 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2440, file: !2440, line: 795, type: !2392, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15204)
!15204 = !{!15205, !15206, !15207, !15209, !15210}
!15205 = !DILocalVariable(name: "timeout", arg: 1, scope: !15203, file: !2440, line: 795, type: !2394)
!15206 = !DILocalVariable(name: "thread", scope: !15203, file: !2440, line: 797, type: !2335)
!15207 = !DILocalVariable(name: "__i", scope: !15208, file: !2440, line: 800, type: !14313)
!15208 = distinct !DILexicalBlock(scope: !15203, file: !2440, line: 800, column: 2)
!15209 = !DILocalVariable(name: "__key", scope: !15208, file: !2440, line: 800, type: !14313)
!15210 = !DILocalVariable(name: "killed", scope: !15211, file: !2440, line: 801, type: !157)
!15211 = distinct !DILexicalBlock(scope: !15212, file: !2440, line: 800, column: 26)
!15212 = distinct !DILexicalBlock(scope: !15208, file: !2440, line: 800, column: 2)
!15213 = !DILocation(line: 0, scope: !15203)
!15214 = !DILocation(line: 797, column: 28, scope: !15203)
!15215 = !DILocation(line: 0, scope: !15208)
!15216 = !DILocation(line: 0, scope: !14321, inlinedAt: !15217)
!15217 = distinct !DILocation(line: 800, column: 2, scope: !15208)
!15218 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15219)
!15219 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15217)
!15220 = !DILocation(line: 0, scope: !14330, inlinedAt: !15219)
!15221 = !DILocation(line: 801, column: 27, scope: !15211)
!15222 = !DILocation(line: 801, column: 32, scope: !15211)
!15223 = !DILocation(line: 801, column: 61, scope: !15211)
!15224 = !DILocation(line: 0, scope: !15211)
!15225 = !DILocation(line: 804, column: 7, scope: !15211)
!15226 = !DILocation(line: 805, column: 21, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !2440, line: 805, column: 8)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !2440, line: 804, column: 16)
!15229 = distinct !DILexicalBlock(scope: !15211, file: !2440, line: 804, column: 7)
!15230 = !DILocation(line: 805, column: 31, scope: !15227)
!15231 = !DILocation(line: 805, column: 8, scope: !15228)
!15232 = !DILocation(line: 806, column: 5, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15227, file: !2440, line: 805, column: 40)
!15234 = !DILocation(line: 807, column: 4, scope: !15233)
!15235 = !DILocation(line: 808, column: 4, scope: !15228)
!15236 = !DILocation(line: 809, column: 4, scope: !15228)
!15237 = !DILocation(line: 810, column: 4, scope: !15228)
!15238 = !DILocation(line: 811, column: 3, scope: !15228)
!15239 = !DILocation(line: 0, scope: !14348, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 800, column: 2, scope: !15212)
!15241 = !DILocation(line: 0, scope: !14356, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15240)
!15243 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15242)
!15244 = !DILocation(line: 813, column: 1, scope: !15203)
!15245 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2440, file: !2440, line: 779, type: !14279, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15246)
!15246 = !{!15247}
!15247 = !DILocalVariable(name: "thread", arg: 1, scope: !15245, file: !2440, line: 779, type: !2335)
!15248 = !DILocation(line: 0, scope: !15245)
!15249 = !DILocation(line: 781, column: 2, scope: !15245)
!15250 = !DILocation(line: 782, column: 2, scope: !15245)
!15251 = !DILocation(line: 783, column: 15, scope: !15245)
!15252 = !DILocation(line: 783, column: 25, scope: !15245)
!15253 = !DILocation(line: 784, column: 1, scope: !15245)
!15254 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12826, file: !12826, line: 165, type: !14279, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15255)
!15255 = !{!15256}
!15256 = !DILocalVariable(name: "thread", arg: 1, scope: !15254, file: !12826, line: 165, type: !2335)
!15257 = !DILocation(line: 0, scope: !15254)
!15258 = !DILocation(line: 167, column: 15, scope: !15254)
!15259 = !DILocation(line: 167, column: 28, scope: !15254)
!15260 = !DILocation(line: 168, column: 1, scope: !15254)
!15261 = distinct !DISubprogram(name: "unready_thread", scope: !2440, file: !2440, line: 731, type: !14279, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15262)
!15262 = !{!15263}
!15263 = !DILocalVariable(name: "thread", arg: 1, scope: !15261, file: !2440, line: 731, type: !2335)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 733, column: 6, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15261, file: !2440, line: 733, column: 6)
!15267 = !DILocation(line: 733, column: 6, scope: !15261)
!15268 = !DILocation(line: 0, scope: !14490, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 734, column: 3, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15266, file: !2440, line: 733, column: 34)
!15271 = !DILocation(line: 266, column: 15, scope: !14490, inlinedAt: !15269)
!15272 = !DILocation(line: 266, column: 28, scope: !14490, inlinedAt: !15269)
!15273 = !DILocation(line: 0, scope: !14498, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 268, column: 3, scope: !14502, inlinedAt: !15269)
!15275 = !DILocation(line: 234, column: 2, scope: !14498, inlinedAt: !15274)
!15276 = !DILocation(line: 735, column: 2, scope: !15270)
!15277 = !DILocation(line: 736, column: 25, scope: !15261)
!15278 = !DILocation(line: 736, column: 22, scope: !15261)
!15279 = !DILocation(line: 736, column: 2, scope: !15261)
!15280 = !DILocation(line: 737, column: 1, scope: !15261)
!15281 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12826, file: !12826, line: 160, type: !14279, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15282)
!15282 = !{!15283}
!15283 = !DILocalVariable(name: "thread", arg: 1, scope: !15281, file: !12826, line: 160, type: !2335)
!15284 = !DILocation(line: 0, scope: !15281)
!15285 = !DILocation(line: 162, column: 15, scope: !15281)
!15286 = !DILocation(line: 162, column: 28, scope: !15281)
!15287 = !DILocation(line: 163, column: 1, scope: !15281)
!15288 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2440, file: !2440, line: 786, type: !14279, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15289)
!15289 = !{!15290, !15291, !15293}
!15290 = !DILocalVariable(name: "thread", arg: 1, scope: !15288, file: !2440, line: 786, type: !2335)
!15291 = !DILocalVariable(name: "__i", scope: !15292, file: !2440, line: 788, type: !14313)
!15292 = distinct !DILexicalBlock(scope: !15288, file: !2440, line: 788, column: 2)
!15293 = !DILocalVariable(name: "__key", scope: !15292, file: !2440, line: 788, type: !14313)
!15294 = !DILocation(line: 0, scope: !15288)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 0, scope: !14321, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 788, column: 2, scope: !15292)
!15298 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15297)
!15300 = !DILocation(line: 0, scope: !14330, inlinedAt: !15299)
!15301 = !DILocation(line: 789, column: 3, scope: !15302)
!15302 = distinct !DILexicalBlock(scope: !15303, file: !2440, line: 788, column: 26)
!15303 = distinct !DILexicalBlock(scope: !15292, file: !2440, line: 788, column: 2)
!15304 = !DILocation(line: 0, scope: !14348, inlinedAt: !15305)
!15305 = distinct !DILocation(line: 788, column: 2, scope: !15303)
!15306 = !DILocation(line: 0, scope: !14356, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15305)
!15308 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15307)
!15309 = !DILocation(line: 791, column: 1, scope: !15288)
!15310 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2440, file: !2440, line: 816, type: !15311, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15313)
!15311 = !DISubroutineType(types: !15312)
!15312 = !{!103, !121, !2366, !15112}
!15313 = !{!15314, !15315, !15316, !15317, !15318, !15320}
!15314 = !DILocalVariable(name: "key", arg: 1, scope: !15310, file: !2440, line: 816, type: !121)
!15315 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15310, file: !2440, line: 816, type: !2366)
!15316 = !DILocalVariable(name: "timeout", arg: 3, scope: !15310, file: !2440, line: 816, type: !15112)
!15317 = !DILocalVariable(name: "ret", scope: !15310, file: !2440, line: 828, type: !103)
!15318 = !DILocalVariable(name: "__i", scope: !15319, file: !2440, line: 829, type: !14313)
!15319 = distinct !DILexicalBlock(scope: !15310, file: !2440, line: 829, column: 2)
!15320 = !DILocalVariable(name: "__key", scope: !15319, file: !2440, line: 829, type: !14313)
!15321 = !DILocation(line: 0, scope: !15310)
!15322 = !DILocation(line: 823, column: 14, scope: !15310)
!15323 = !DILocation(line: 823, column: 2, scope: !15310)
!15324 = !DILocation(line: 826, column: 20, scope: !15310)
!15325 = !DILocation(line: 826, column: 18, scope: !15310)
!15326 = !DILocation(line: 828, column: 12, scope: !15310)
!15327 = !DILocation(line: 0, scope: !15319)
!15328 = !DILocation(line: 0, scope: !14321, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 829, column: 2, scope: !15319)
!15330 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15331)
!15331 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15329)
!15332 = !DILocation(line: 0, scope: !14330, inlinedAt: !15331)
!15333 = !DILocation(line: 830, column: 7, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15335, file: !2440, line: 830, column: 7)
!15335 = distinct !DILexicalBlock(scope: !15336, file: !2440, line: 829, column: 26)
!15336 = distinct !DILexicalBlock(scope: !15319, file: !2440, line: 829, column: 2)
!15337 = !DILocation(line: 830, column: 26, scope: !15334)
!15338 = !DILocation(line: 830, column: 23, scope: !15334)
!15339 = !DILocation(line: 830, column: 7, scope: !15335)
!15340 = !DILocation(line: 831, column: 20, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15334, file: !2440, line: 830, column: 36)
!15342 = !DILocation(line: 832, column: 3, scope: !15341)
!15343 = !DILocation(line: 0, scope: !14348, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 829, column: 2, scope: !15336)
!15345 = !DILocation(line: 0, scope: !14356, inlinedAt: !15346)
!15346 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15344)
!15347 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15346)
!15348 = !DILocation(line: 834, column: 2, scope: !15310)
!15349 = distinct !DISubprogram(name: "z_pend_curr", scope: !2440, file: !2440, line: 840, type: !15350, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15352)
!15350 = !DISubroutineType(types: !15351)
!15351 = !{!103, !14324, !14313, !2366, !15112}
!15352 = !{!15353, !15354, !15355, !15356}
!15353 = !DILocalVariable(name: "lock", arg: 1, scope: !15349, file: !2440, line: 840, type: !14324)
!15354 = !DILocalVariable(name: "key", arg: 2, scope: !15349, file: !2440, line: 840, type: !14313)
!15355 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15349, file: !2440, line: 841, type: !2366)
!15356 = !DILocalVariable(name: "timeout", arg: 4, scope: !15349, file: !2440, line: 841, type: !15112)
!15357 = !DILocation(line: 0, scope: !15349)
!15358 = !DILocation(line: 844, column: 20, scope: !15349)
!15359 = !DILocation(line: 844, column: 18, scope: !15349)
!15360 = !DILocation(line: 0, scope: !14321, inlinedAt: !15361)
!15361 = distinct !DILocation(line: 856, column: 9, scope: !15349)
!15362 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15361)
!15364 = !DILocation(line: 0, scope: !14330, inlinedAt: !15363)
!15365 = !DILocation(line: 857, column: 14, scope: !15349)
!15366 = !DILocation(line: 857, column: 2, scope: !15349)
!15367 = !DILocation(line: 0, scope: !14932, inlinedAt: !15368)
!15368 = distinct !DILocation(line: 859, column: 9, scope: !15349)
!15369 = !DILocation(line: 196, column: 9, scope: !14932, inlinedAt: !15368)
!15370 = !DILocation(line: 859, column: 2, scope: !15349)
!15371 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2440, file: !2440, line: 862, type: !15372, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15374)
!15372 = !DISubroutineType(types: !15373)
!15373 = !{!2335, !2366}
!15374 = !{!15375, !15376, !15377, !15379}
!15375 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15371, file: !2440, line: 862, type: !2366)
!15376 = !DILocalVariable(name: "thread", scope: !15371, file: !2440, line: 864, type: !2335)
!15377 = !DILocalVariable(name: "__i", scope: !15378, file: !2440, line: 866, type: !14313)
!15378 = distinct !DILexicalBlock(scope: !15371, file: !2440, line: 866, column: 2)
!15379 = !DILocalVariable(name: "__key", scope: !15378, file: !2440, line: 866, type: !14313)
!15380 = !DILocation(line: 0, scope: !15371)
!15381 = !DILocation(line: 0, scope: !15378)
!15382 = !DILocation(line: 0, scope: !14321, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 866, column: 2, scope: !15378)
!15384 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15383)
!15386 = !DILocation(line: 0, scope: !14330, inlinedAt: !15385)
!15387 = !DILocation(line: 867, column: 12, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15389, file: !2440, line: 866, column: 26)
!15389 = distinct !DILexicalBlock(scope: !15378, file: !2440, line: 866, column: 2)
!15390 = !DILocation(line: 869, column: 14, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15388, file: !2440, line: 869, column: 7)
!15392 = !DILocation(line: 869, column: 7, scope: !15388)
!15393 = !DILocation(line: 870, column: 4, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15391, file: !2440, line: 869, column: 23)
!15395 = !DILocation(line: 871, column: 3, scope: !15394)
!15396 = !DILocation(line: 0, scope: !14348, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 866, column: 2, scope: !15389)
!15398 = !DILocation(line: 0, scope: !14356, inlinedAt: !15399)
!15399 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15397)
!15400 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15399)
!15401 = !DILocation(line: 874, column: 2, scope: !15371)
!15402 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2440, file: !2440, line: 877, type: !15372, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15403)
!15403 = !{!15404, !15405, !15406, !15408}
!15404 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15402, file: !2440, line: 877, type: !2366)
!15405 = !DILocalVariable(name: "thread", scope: !15402, file: !2440, line: 879, type: !2335)
!15406 = !DILocalVariable(name: "__i", scope: !15407, file: !2440, line: 881, type: !14313)
!15407 = distinct !DILexicalBlock(scope: !15402, file: !2440, line: 881, column: 2)
!15408 = !DILocalVariable(name: "__key", scope: !15407, file: !2440, line: 881, type: !14313)
!15409 = !DILocation(line: 0, scope: !15402)
!15410 = !DILocation(line: 0, scope: !15407)
!15411 = !DILocation(line: 0, scope: !14321, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 881, column: 2, scope: !15407)
!15413 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15414)
!15414 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15412)
!15415 = !DILocation(line: 0, scope: !14330, inlinedAt: !15414)
!15416 = !DILocation(line: 882, column: 12, scope: !15417)
!15417 = distinct !DILexicalBlock(scope: !15418, file: !2440, line: 881, column: 26)
!15418 = distinct !DILexicalBlock(scope: !15407, file: !2440, line: 881, column: 2)
!15419 = !DILocation(line: 884, column: 14, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15417, file: !2440, line: 884, column: 7)
!15421 = !DILocation(line: 884, column: 7, scope: !15417)
!15422 = !DILocation(line: 885, column: 4, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15420, file: !2440, line: 884, column: 23)
!15424 = !DILocation(line: 886, column: 10, scope: !15423)
!15425 = !DILocation(line: 887, column: 3, scope: !15423)
!15426 = !DILocation(line: 0, scope: !14348, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 881, column: 2, scope: !15418)
!15428 = !DILocation(line: 0, scope: !14356, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15427)
!15430 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15429)
!15431 = !DILocation(line: 890, column: 2, scope: !15402)
!15432 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2440, file: !2440, line: 893, type: !14279, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15433)
!15433 = !{!15434}
!15434 = !DILocalVariable(name: "thread", arg: 1, scope: !15432, file: !2440, line: 893, type: !2335)
!15435 = !DILocation(line: 0, scope: !15432)
!15436 = !DILocation(line: 0, scope: !15288, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 895, column: 2, scope: !15432)
!15438 = !DILocation(line: 0, scope: !15292, inlinedAt: !15437)
!15439 = !DILocation(line: 0, scope: !14321, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 788, column: 2, scope: !15292, inlinedAt: !15437)
!15441 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15440)
!15443 = !DILocation(line: 0, scope: !14330, inlinedAt: !15442)
!15444 = !DILocation(line: 789, column: 3, scope: !15302, inlinedAt: !15437)
!15445 = !DILocation(line: 0, scope: !14348, inlinedAt: !15446)
!15446 = distinct !DILocation(line: 788, column: 2, scope: !15303, inlinedAt: !15437)
!15447 = !DILocation(line: 0, scope: !14356, inlinedAt: !15448)
!15448 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15446)
!15449 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15448)
!15450 = !DILocation(line: 896, column: 8, scope: !15432)
!15451 = !DILocation(line: 897, column: 1, scope: !15432)
!15452 = distinct !DISubprogram(name: "z_set_prio", scope: !2440, file: !2440, line: 902, type: !14641, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15453)
!15453 = !{!15454, !15455, !15456, !15457, !15459}
!15454 = !DILocalVariable(name: "thread", arg: 1, scope: !15452, file: !2440, line: 902, type: !2335)
!15455 = !DILocalVariable(name: "prio", arg: 2, scope: !15452, file: !2440, line: 902, type: !103)
!15456 = !DILocalVariable(name: "need_sched", scope: !15452, file: !2440, line: 904, type: !157)
!15457 = !DILocalVariable(name: "__i", scope: !15458, file: !2440, line: 906, type: !14313)
!15458 = distinct !DILexicalBlock(scope: !15452, file: !2440, line: 906, column: 2)
!15459 = !DILocalVariable(name: "__key", scope: !15458, file: !2440, line: 906, type: !14313)
!15460 = !DILocation(line: 0, scope: !15452)
!15461 = !DILocation(line: 0, scope: !15458)
!15462 = !DILocation(line: 0, scope: !14321, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 906, column: 2, scope: !15458)
!15464 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15463)
!15466 = !DILocation(line: 0, scope: !14330, inlinedAt: !15465)
!15467 = !DILocation(line: 907, column: 16, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15469, file: !2440, line: 906, column: 26)
!15469 = distinct !DILexicalBlock(scope: !15458, file: !2440, line: 906, column: 2)
!15470 = !DILocation(line: 909, column: 7, scope: !15468)
!15471 = !DILocation(line: 0, scope: !14490, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 912, column: 5, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !2440, line: 911, column: 63)
!15474 = distinct !DILexicalBlock(scope: !15475, file: !2440, line: 911, column: 8)
!15475 = distinct !DILexicalBlock(scope: !15476, file: !2440, line: 909, column: 19)
!15476 = distinct !DILexicalBlock(scope: !15468, file: !2440, line: 909, column: 7)
!15477 = !DILocation(line: 266, column: 28, scope: !14490, inlinedAt: !15472)
!15478 = !DILocation(line: 0, scope: !14498, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 268, column: 3, scope: !14502, inlinedAt: !15472)
!15480 = !DILocation(line: 234, column: 2, scope: !14498, inlinedAt: !15479)
!15481 = !DILocation(line: 913, column: 23, scope: !15473)
!15482 = !DILocation(line: 0, scope: !14507, inlinedAt: !15483)
!15483 = distinct !DILocation(line: 914, column: 5, scope: !15473)
!15484 = !DILocation(line: 252, column: 28, scope: !14507, inlinedAt: !15483)
!15485 = !DILocation(line: 0, scope: !14514, inlinedAt: !15486)
!15486 = distinct !DILocation(line: 254, column: 3, scope: !14518, inlinedAt: !15483)
!15487 = !DILocation(line: 0, scope: !14521, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 229, column: 2, scope: !14514, inlinedAt: !15486)
!15489 = !DILocation(line: 188, column: 2, scope: !14531, inlinedAt: !15488)
!15490 = !DILocation(line: 188, column: 2, scope: !14533, inlinedAt: !15488)
!15491 = !DILocation(line: 0, scope: !14531, inlinedAt: !15488)
!15492 = !DILocation(line: 189, column: 7, scope: !14536, inlinedAt: !15488)
!15493 = !DILocation(line: 189, column: 35, scope: !14536, inlinedAt: !15488)
!15494 = !DILocation(line: 189, column: 7, scope: !14537, inlinedAt: !15488)
!15495 = !DILocation(line: 190, column: 4, scope: !14541, inlinedAt: !15488)
!15496 = !DILocation(line: 192, column: 4, scope: !14541, inlinedAt: !15488)
!15497 = distinct !{!15497, !15489, !15498}
!15498 = !DILocation(line: 194, column: 2, scope: !14531, inlinedAt: !15488)
!15499 = !DILocation(line: 196, column: 2, scope: !14521, inlinedAt: !15488)
!15500 = !DILocation(line: 197, column: 1, scope: !14521, inlinedAt: !15488)
!15501 = !DILocation(line: 918, column: 4, scope: !15475)
!15502 = !DILocation(line: 919, column: 3, scope: !15475)
!15503 = !DILocation(line: 920, column: 22, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15476, file: !2440, line: 919, column: 10)
!15505 = !DILocation(line: 0, scope: !14348, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 906, column: 2, scope: !15469)
!15507 = !DILocation(line: 0, scope: !14356, inlinedAt: !15508)
!15508 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15506)
!15509 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15508)
!15510 = !DILocation(line: 926, column: 2, scope: !15452)
!15511 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2440, file: !2440, line: 929, type: !15512, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15514)
!15512 = !DISubroutineType(types: !15513)
!15513 = !{null, !2335, !103}
!15514 = !{!15515, !15516, !15517}
!15515 = !DILocalVariable(name: "thread", arg: 1, scope: !15511, file: !2440, line: 929, type: !2335)
!15516 = !DILocalVariable(name: "prio", arg: 2, scope: !15511, file: !2440, line: 929, type: !103)
!15517 = !DILocalVariable(name: "need_sched", scope: !15511, file: !2440, line: 931, type: !157)
!15518 = !DILocation(line: 0, scope: !15511)
!15519 = !DILocation(line: 931, column: 20, scope: !15511)
!15520 = !DILocation(line: 935, column: 17, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15511, file: !2440, line: 935, column: 6)
!15522 = !DILocation(line: 935, column: 20, scope: !15521)
!15523 = !DILocation(line: 935, column: 35, scope: !15521)
!15524 = !DILocation(line: 935, column: 48, scope: !15521)
!15525 = !DILocation(line: 935, column: 6, scope: !15511)
!15526 = !DILocation(line: 936, column: 3, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15521, file: !2440, line: 935, column: 55)
!15528 = !DILocation(line: 937, column: 2, scope: !15527)
!15529 = !DILocation(line: 938, column: 1, scope: !15511)
!15530 = distinct !DISubprogram(name: "k_sched_lock", scope: !2440, file: !2440, line: 987, type: !3174, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15531)
!15531 = !{!15532, !15534}
!15532 = !DILocalVariable(name: "__i", scope: !15533, file: !2440, line: 989, type: !14313)
!15533 = distinct !DILexicalBlock(scope: !15530, file: !2440, line: 989, column: 2)
!15534 = !DILocalVariable(name: "__key", scope: !15533, file: !2440, line: 989, type: !14313)
!15535 = !DILocation(line: 0, scope: !15533)
!15536 = !DILocation(line: 0, scope: !14321, inlinedAt: !15537)
!15537 = distinct !DILocation(line: 989, column: 2, scope: !15533)
!15538 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15539)
!15539 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15537)
!15540 = !DILocation(line: 0, scope: !14330, inlinedAt: !15539)
!15541 = !DILocation(line: 992, column: 3, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15543, file: !2440, line: 989, column: 26)
!15543 = distinct !DILexicalBlock(scope: !15533, file: !2440, line: 989, column: 2)
!15544 = !DILocation(line: 0, scope: !14348, inlinedAt: !15545)
!15545 = distinct !DILocation(line: 989, column: 2, scope: !15543)
!15546 = !DILocation(line: 0, scope: !14356, inlinedAt: !15547)
!15547 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15545)
!15548 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15547)
!15549 = !DILocation(line: 994, column: 1, scope: !15530)
!15550 = distinct !DISubprogram(name: "z_sched_lock", scope: !12826, file: !12826, line: 251, type: !3174, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!15551 = !DILocation(line: 256, column: 4, scope: !15550)
!15552 = !DILocation(line: 256, column: 19, scope: !15550)
!15553 = !DILocation(line: 256, column: 2, scope: !15550)
!15554 = !DILocation(line: 258, column: 2, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15550, file: !12826, line: 258, column: 2)
!15556 = !{i64 2154866085}
!15557 = !DILocation(line: 259, column: 1, scope: !15550)
!15558 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2440, file: !2440, line: 996, type: !3174, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15559)
!15559 = !{!15560, !15562}
!15560 = !DILocalVariable(name: "__i", scope: !15561, file: !2440, line: 998, type: !14313)
!15561 = distinct !DILexicalBlock(scope: !15558, file: !2440, line: 998, column: 2)
!15562 = !DILocalVariable(name: "__key", scope: !15561, file: !2440, line: 998, type: !14313)
!15563 = !DILocation(line: 0, scope: !15561)
!15564 = !DILocation(line: 0, scope: !14321, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 998, column: 2, scope: !15561)
!15566 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15567)
!15567 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15565)
!15568 = !DILocation(line: 0, scope: !14330, inlinedAt: !15567)
!15569 = !DILocation(line: 1002, column: 5, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15571, file: !2440, line: 998, column: 26)
!15571 = distinct !DILexicalBlock(scope: !15561, file: !2440, line: 998, column: 2)
!15572 = !DILocation(line: 1002, column: 20, scope: !15570)
!15573 = !DILocation(line: 1002, column: 3, scope: !15570)
!15574 = !DILocation(line: 1003, column: 3, scope: !15570)
!15575 = !DILocation(line: 0, scope: !14348, inlinedAt: !15576)
!15576 = distinct !DILocation(line: 998, column: 2, scope: !15571)
!15577 = !DILocation(line: 0, scope: !14356, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !15576)
!15579 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !15578)
!15580 = !DILocation(line: 1011, column: 2, scope: !15558)
!15581 = !DILocation(line: 1012, column: 1, scope: !15558)
!15582 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2440, file: !2440, line: 1014, type: !14629, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!15583 = !DILocation(line: 1028, column: 25, scope: !15582)
!15584 = !DILocation(line: 1028, column: 2, scope: !15582)
!15585 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2440, file: !2440, line: 1155, type: !15586, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15588)
!15586 = !DISubroutineType(types: !15587)
!15587 = !{!157, !2364, !2364}
!15588 = !{!15589, !15590, !15591, !15592, !15593}
!15589 = !DILocalVariable(name: "a", arg: 1, scope: !15585, file: !2440, line: 1155, type: !2364)
!15590 = !DILocalVariable(name: "b", arg: 2, scope: !15585, file: !2440, line: 1155, type: !2364)
!15591 = !DILocalVariable(name: "thread_a", scope: !15585, file: !2440, line: 1157, type: !2335)
!15592 = !DILocalVariable(name: "thread_b", scope: !15585, file: !2440, line: 1157, type: !2335)
!15593 = !DILocalVariable(name: "cmp", scope: !15585, file: !2440, line: 1158, type: !745)
!15594 = !DILocation(line: 0, scope: !15585)
!15595 = !DILocation(line: 1160, column: 13, scope: !15585)
!15596 = !DILocation(line: 1161, column: 13, scope: !15585)
!15597 = !DILocation(line: 1163, column: 8, scope: !15585)
!15598 = !DILocation(line: 1165, column: 10, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15585, file: !2440, line: 1165, column: 6)
!15600 = !DILocation(line: 1165, column: 6, scope: !15585)
!15601 = !DILocation(line: 1167, column: 17, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15599, file: !2440, line: 1167, column: 13)
!15603 = !DILocation(line: 1167, column: 13, scope: !15599)
!15604 = !DILocation(line: 1170, column: 25, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15602, file: !2440, line: 1169, column: 9)
!15606 = !DILocation(line: 1170, column: 52, scope: !15605)
!15607 = !DILocation(line: 1170, column: 35, scope: !15605)
!15608 = !DILocation(line: 1170, column: 3, scope: !15605)
!15609 = !DILocation(line: 0, scope: !15599)
!15610 = !DILocation(line: 1173, column: 1, scope: !15585)
!15611 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2440, file: !2440, line: 1175, type: !15612, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15627)
!15612 = !DISubroutineType(types: !15613)
!15613 = !{null, !15614, !2335}
!15614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15615, size: 32)
!15615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15616, line: 37, size: 128, elements: !15617)
!15616 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15617 = !{!15618, !15626}
!15618 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15615, file: !15616, line: 38, baseType: !15619, size: 96)
!15619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !404, line: 83, size: 96, elements: !15620)
!15620 = !{!15621, !15622, !15625}
!15621 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15619, file: !404, line: 84, baseType: !2364, size: 32)
!15622 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15619, file: !404, line: 85, baseType: !15623, size: 32, offset: 32)
!15623 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !404, line: 81, baseType: !15624)
!15624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15586, size: 32)
!15625 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15619, file: !404, line: 86, baseType: !103, size: 32, offset: 64)
!15626 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15615, file: !15616, line: 39, baseType: !103, size: 32, offset: 96)
!15627 = !{!15628, !15629, !15630, !15631, !15640}
!15628 = !DILocalVariable(name: "pq", arg: 1, scope: !15611, file: !2440, line: 1175, type: !15614)
!15629 = !DILocalVariable(name: "thread", arg: 2, scope: !15611, file: !2440, line: 1175, type: !2335)
!15630 = !DILocalVariable(name: "t", scope: !15611, file: !2440, line: 1177, type: !2335)
!15631 = !DILocalVariable(name: "__f", scope: !15632, file: !2440, line: 1190, type: !15635)
!15632 = distinct !DILexicalBlock(scope: !15633, file: !2440, line: 1190, column: 3)
!15633 = distinct !DILexicalBlock(scope: !15634, file: !2440, line: 1189, column: 27)
!15634 = distinct !DILexicalBlock(scope: !15611, file: !2440, line: 1189, column: 6)
!15635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !404, line: 155, size: 96, elements: !15636)
!15636 = !{!15637, !15638, !15639}
!15637 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15635, file: !404, line: 156, baseType: !2435, size: 32)
!15638 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15635, file: !404, line: 157, baseType: !267, size: 32, offset: 32)
!15639 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15635, file: !404, line: 158, baseType: !745, size: 32, offset: 64)
!15640 = !DILocalVariable(name: "n", scope: !15641, file: !2440, line: 1190, type: !2364)
!15641 = distinct !DILexicalBlock(scope: !15642, file: !2440, line: 1190, column: 3)
!15642 = distinct !DILexicalBlock(scope: !15632, file: !2440, line: 1190, column: 3)
!15643 = !DILocation(line: 0, scope: !15611)
!15644 = !DILocation(line: 1181, column: 31, scope: !15611)
!15645 = !DILocation(line: 1181, column: 45, scope: !15611)
!15646 = !DILocation(line: 1181, column: 15, scope: !15611)
!15647 = !DILocation(line: 1181, column: 25, scope: !15611)
!15648 = !DILocation(line: 1189, column: 11, scope: !15634)
!15649 = !DILocation(line: 1189, column: 7, scope: !15634)
!15650 = !DILocation(line: 1189, column: 6, scope: !15611)
!15651 = !DILocation(line: 1190, column: 3, scope: !15632)
!15652 = !DILocation(line: 1190, column: 3, scope: !15641)
!15653 = !DILocation(line: 0, scope: !15641)
!15654 = !DILocation(line: 1190, column: 3, scope: !15642)
!15655 = !DILocation(line: 1193, column: 2, scope: !15633)
!15656 = !DILocation(line: 1191, column: 42, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15642, file: !2440, line: 1190, column: 54)
!15658 = !DILocation(line: 1191, column: 12, scope: !15657)
!15659 = !DILocation(line: 1191, column: 22, scope: !15657)
!15660 = distinct !{!15660, !15651, !15661}
!15661 = !DILocation(line: 1192, column: 3, scope: !15632)
!15662 = !DILocation(line: 1195, column: 17, scope: !15611)
!15663 = !DILocation(line: 1195, column: 37, scope: !15611)
!15664 = !DILocation(line: 1195, column: 2, scope: !15611)
!15665 = !DILocation(line: 1196, column: 1, scope: !15611)
!15666 = !DISubprogram(name: "z_rb_foreach_next", scope: !404, file: !404, line: 176, type: !15667, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15667 = !DISubroutineType(types: !15668)
!15668 = !{!2364, !15669, !15670}
!15669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15619, size: 32)
!15670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15635, size: 32)
!15671 = !DISubprogram(name: "rb_insert", scope: !404, file: !404, line: 105, type: !15672, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15672 = !DISubroutineType(types: !15673)
!15673 = !{null, !15669, !2364}
!15674 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2440, file: !2440, line: 1198, type: !15612, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15675)
!15675 = !{!15676, !15677}
!15676 = !DILocalVariable(name: "pq", arg: 1, scope: !15674, file: !2440, line: 1198, type: !15614)
!15677 = !DILocalVariable(name: "thread", arg: 2, scope: !15674, file: !2440, line: 1198, type: !2335)
!15678 = !DILocation(line: 0, scope: !15674)
!15679 = !DILocation(line: 1202, column: 17, scope: !15674)
!15680 = !DILocation(line: 1202, column: 37, scope: !15674)
!15681 = !DILocation(line: 1202, column: 2, scope: !15674)
!15682 = !DILocation(line: 1204, column: 16, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15674, file: !2440, line: 1204, column: 6)
!15684 = !DILocation(line: 1204, column: 7, scope: !15683)
!15685 = !DILocation(line: 1204, column: 6, scope: !15674)
!15686 = !DILocation(line: 1205, column: 7, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15683, file: !2440, line: 1204, column: 22)
!15688 = !DILocation(line: 1205, column: 22, scope: !15687)
!15689 = !DILocation(line: 1206, column: 2, scope: !15687)
!15690 = !DILocation(line: 1207, column: 1, scope: !15674)
!15691 = !DISubprogram(name: "rb_remove", scope: !404, file: !404, line: 110, type: !15672, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15692 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2440, file: !2440, line: 1209, type: !15693, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15695)
!15693 = !DISubroutineType(types: !15694)
!15694 = !{!2335, !15614}
!15695 = !{!15696, !15697, !15698}
!15696 = !DILocalVariable(name: "pq", arg: 1, scope: !15692, file: !2440, line: 1209, type: !15614)
!15697 = !DILocalVariable(name: "thread", scope: !15692, file: !2440, line: 1211, type: !2335)
!15698 = !DILocalVariable(name: "n", scope: !15692, file: !2440, line: 1212, type: !2364)
!15699 = !DILocation(line: 0, scope: !15692)
!15700 = !DILocation(line: 1212, column: 37, scope: !15692)
!15701 = !DILocation(line: 1212, column: 21, scope: !15692)
!15702 = !DILocation(line: 1217, column: 2, scope: !15692)
!15703 = distinct !DISubprogram(name: "rb_get_min", scope: !404, file: !404, line: 115, type: !15704, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15706)
!15704 = !DISubroutineType(types: !15705)
!15705 = !{!2364, !15669}
!15706 = !{!15707}
!15707 = !DILocalVariable(name: "tree", arg: 1, scope: !15703, file: !404, line: 115, type: !15669)
!15708 = !DILocation(line: 0, scope: !15703)
!15709 = !DILocation(line: 117, column: 9, scope: !15703)
!15710 = !DILocation(line: 117, column: 2, scope: !15703)
!15711 = !DISubprogram(name: "z_rb_get_minmax", scope: !404, file: !404, line: 100, type: !15712, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !317)
!15712 = !DISubroutineType(types: !15713)
!15713 = !{!2364, !15669, !154}
!15714 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2440, file: !2440, line: 1246, type: !15715, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15725)
!15715 = !DISubroutineType(types: !15716)
!15716 = !{!2335, !15717}
!15717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15718, size: 32)
!15718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15616, line: 53, size: 2080, elements: !15719)
!15719 = !{!15720, !15724}
!15720 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15718, file: !15616, line: 54, baseType: !15721, size: 2048)
!15721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2371, size: 2048, elements: !15722)
!15722 = !{!15723}
!15723 = !DISubrange(count: 32)
!15724 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15718, file: !15616, line: 55, baseType: !32, size: 32, offset: 2048)
!15725 = !{!15726, !15727, !15728, !15729}
!15726 = !DILocalVariable(name: "pq", arg: 1, scope: !15714, file: !2440, line: 1246, type: !15717)
!15727 = !DILocalVariable(name: "thread", scope: !15714, file: !2440, line: 1252, type: !2335)
!15728 = !DILocalVariable(name: "l", scope: !15714, file: !2440, line: 1253, type: !14524)
!15729 = !DILocalVariable(name: "n", scope: !15714, file: !2440, line: 1254, type: !2436)
!15730 = !DILocation(line: 0, scope: !15714)
!15731 = !DILocation(line: 1248, column: 11, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15714, file: !2440, line: 1248, column: 6)
!15733 = !DILocation(line: 1248, column: 7, scope: !15732)
!15734 = !DILocation(line: 1248, column: 6, scope: !15714)
!15735 = !DILocation(line: 1253, column: 31, scope: !15714)
!15736 = !DILocation(line: 1253, column: 20, scope: !15714)
!15737 = !DILocation(line: 1254, column: 19, scope: !15714)
!15738 = !DILocation(line: 1260, column: 1, scope: !15714)
!15739 = distinct !DISubprogram(name: "z_unpend_all", scope: !2440, file: !2440, line: 1262, type: !15740, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15742)
!15740 = !DISubroutineType(types: !15741)
!15741 = !{!103, !2366}
!15742 = !{!15743, !15744, !15745}
!15743 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15739, file: !2440, line: 1262, type: !2366)
!15744 = !DILocalVariable(name: "need_sched", scope: !15739, file: !2440, line: 1264, type: !103)
!15745 = !DILocalVariable(name: "thread", scope: !15739, file: !2440, line: 1265, type: !2335)
!15746 = !DILocation(line: 0, scope: !15739)
!15747 = !DILocation(line: 1267, column: 19, scope: !15739)
!15748 = !DILocation(line: 1267, column: 41, scope: !15739)
!15749 = !DILocation(line: 1267, column: 2, scope: !15739)
!15750 = !DILocation(line: 1268, column: 3, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15739, file: !2440, line: 1267, column: 50)
!15752 = !DILocation(line: 1269, column: 3, scope: !15751)
!15753 = distinct !{!15753, !15749, !15754}
!15754 = !DILocation(line: 1271, column: 2, scope: !15739)
!15755 = !DILocation(line: 1273, column: 2, scope: !15739)
!15756 = distinct !DISubprogram(name: "z_waitq_head", scope: !13150, file: !13150, line: 52, type: !15372, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15757)
!15757 = !{!15758}
!15758 = !DILocalVariable(name: "w", arg: 1, scope: !15756, file: !13150, line: 52, type: !2366)
!15759 = !DILocation(line: 0, scope: !15756)
!15760 = !DILocation(line: 54, column: 52, scope: !15756)
!15761 = !DILocation(line: 54, column: 28, scope: !15756)
!15762 = !DILocation(line: 54, column: 9, scope: !15756)
!15763 = !DILocation(line: 54, column: 2, scope: !15756)
!15764 = distinct !DISubprogram(name: "init_ready_q", scope: !2440, file: !2440, line: 1276, type: !15765, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15772)
!15765 = !DISubroutineType(types: !15766)
!15766 = !{null, !15767}
!15767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15768, size: 32)
!15768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !320, line: 83, size: 96, elements: !15769)
!15769 = !{!15770, !15771}
!15770 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15768, file: !320, line: 86, baseType: !2335, size: 32)
!15771 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15768, file: !320, line: 90, baseType: !2371, size: 64, offset: 32)
!15772 = !{!15773}
!15773 = !DILocalVariable(name: "rq", arg: 1, scope: !15764, file: !2440, line: 1276, type: !15767)
!15774 = !DILocation(line: 0, scope: !15764)
!15775 = !DILocation(line: 1289, column: 22, scope: !15764)
!15776 = !DILocation(line: 1289, column: 2, scope: !15764)
!15777 = !DILocation(line: 1291, column: 1, scope: !15764)
!15778 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !15779, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15781)
!15779 = !DISubroutineType(types: !15780)
!15780 = !{null, !14524}
!15781 = !{!15782}
!15782 = !DILocalVariable(name: "list", arg: 1, scope: !15778, file: !325, line: 197, type: !14524)
!15783 = !DILocation(line: 0, scope: !15778)
!15784 = !DILocation(line: 199, column: 8, scope: !15778)
!15785 = !DILocation(line: 199, column: 13, scope: !15778)
!15786 = !DILocation(line: 200, column: 8, scope: !15778)
!15787 = !DILocation(line: 200, column: 13, scope: !15778)
!15788 = !DILocation(line: 201, column: 1, scope: !15778)
!15789 = distinct !DISubprogram(name: "z_sched_init", scope: !2440, file: !2440, line: 1293, type: !3174, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!15790 = !DILocation(line: 1302, column: 2, scope: !15789)
!15791 = !DILocation(line: 1306, column: 2, scope: !15789)
!15792 = !DILocation(line: 1309, column: 1, scope: !15789)
!15793 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2440, file: !2440, line: 1311, type: !15794, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15797)
!15794 = !DISubroutineType(types: !15795)
!15795 = !{!103, !15796}
!15796 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !379, line: 347, baseType: !2335)
!15797 = !{!15798}
!15798 = !DILocalVariable(name: "thread", arg: 1, scope: !15793, file: !2440, line: 1311, type: !15796)
!15799 = !DILocation(line: 0, scope: !15793)
!15800 = !DILocation(line: 1313, column: 22, scope: !15793)
!15801 = !DILocation(line: 1313, column: 9, scope: !15793)
!15802 = !DILocation(line: 1313, column: 2, scope: !15793)
!15803 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2440, file: !2440, line: 1325, type: !15804, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15806)
!15804 = !DISubroutineType(types: !15805)
!15805 = !{null, !15796, !103}
!15806 = !{!15807, !15808, !15809}
!15807 = !DILocalVariable(name: "thread", arg: 1, scope: !15803, file: !2440, line: 1325, type: !15796)
!15808 = !DILocalVariable(name: "prio", arg: 2, scope: !15803, file: !2440, line: 1325, type: !103)
!15809 = !DILocalVariable(name: "th", scope: !15803, file: !2440, line: 1334, type: !2335)
!15810 = !DILocation(line: 0, scope: !15803)
!15811 = !DILocation(line: 1336, column: 2, scope: !15803)
!15812 = !DILocation(line: 1337, column: 1, scope: !15803)
!15813 = distinct !DISubprogram(name: "k_can_yield", scope: !2440, file: !2440, line: 1384, type: !6749, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!15814 = !DILocation(line: 1386, column: 11, scope: !15813)
!15815 = !DILocation(line: 1386, column: 29, scope: !15813)
!15816 = !DILocation(line: 1386, column: 32, scope: !15813)
!15817 = !DILocation(line: 1386, column: 46, scope: !15813)
!15818 = !DILocation(line: 1387, column: 28, scope: !15813)
!15819 = !DILocation(line: 1387, column: 4, scope: !15813)
!15820 = !DILocation(line: 1386, column: 2, scope: !15813)
!15821 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !296, file: !296, line: 989, type: !6749, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!15822 = !DILocation(line: 993, column: 10, scope: !15821)
!15823 = !DILocation(line: 993, column: 2, scope: !15821)
!15824 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2440, file: !2440, line: 1390, type: !3174, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15825)
!15825 = !{!15826}
!15826 = !DILocalVariable(name: "key", scope: !15824, file: !2440, line: 1396, type: !14313)
!15827 = !DILocation(line: 0, scope: !14321, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 1396, column: 25, scope: !15824)
!15829 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15830)
!15830 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15828)
!15831 = !DILocation(line: 0, scope: !14330, inlinedAt: !15830)
!15832 = !DILocation(line: 0, scope: !15824)
!15833 = !DILocation(line: 1400, column: 18, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !2440, line: 1399, column: 36)
!15835 = distinct !DILexicalBlock(scope: !15824, file: !2440, line: 1398, column: 6)
!15836 = !DILocation(line: 0, scope: !14490, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 1400, column: 3, scope: !15834)
!15838 = !DILocation(line: 266, column: 15, scope: !14490, inlinedAt: !15837)
!15839 = !DILocation(line: 266, column: 28, scope: !14490, inlinedAt: !15837)
!15840 = !DILocation(line: 0, scope: !14498, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 268, column: 3, scope: !14502, inlinedAt: !15837)
!15842 = !DILocation(line: 234, column: 2, scope: !14498, inlinedAt: !15841)
!15843 = !DILocation(line: 1402, column: 15, scope: !15824)
!15844 = !DILocation(line: 0, scope: !14507, inlinedAt: !15845)
!15845 = distinct !DILocation(line: 1402, column: 2, scope: !15824)
!15846 = !DILocation(line: 252, column: 15, scope: !14507, inlinedAt: !15845)
!15847 = !DILocation(line: 252, column: 28, scope: !14507, inlinedAt: !15845)
!15848 = !DILocation(line: 0, scope: !14514, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 254, column: 3, scope: !14518, inlinedAt: !15845)
!15850 = !DILocation(line: 0, scope: !14521, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 229, column: 2, scope: !14514, inlinedAt: !15849)
!15852 = !DILocation(line: 188, column: 2, scope: !14531, inlinedAt: !15851)
!15853 = !DILocation(line: 188, column: 2, scope: !14533, inlinedAt: !15851)
!15854 = !DILocation(line: 0, scope: !14531, inlinedAt: !15851)
!15855 = !DILocation(line: 189, column: 7, scope: !14536, inlinedAt: !15851)
!15856 = !DILocation(line: 189, column: 35, scope: !14536, inlinedAt: !15851)
!15857 = !DILocation(line: 189, column: 7, scope: !14537, inlinedAt: !15851)
!15858 = !DILocation(line: 191, column: 21, scope: !14541, inlinedAt: !15851)
!15859 = !DILocation(line: 190, column: 4, scope: !14541, inlinedAt: !15851)
!15860 = !DILocation(line: 192, column: 4, scope: !14541, inlinedAt: !15851)
!15861 = distinct !{!15861, !15852, !15862}
!15862 = !DILocation(line: 194, column: 2, scope: !14531, inlinedAt: !15851)
!15863 = !DILocation(line: 196, column: 37, scope: !14521, inlinedAt: !15851)
!15864 = !DILocation(line: 196, column: 2, scope: !14521, inlinedAt: !15851)
!15865 = !DILocation(line: 197, column: 1, scope: !14521, inlinedAt: !15851)
!15866 = !DILocation(line: 1403, column: 2, scope: !15824)
!15867 = !DILocation(line: 0, scope: !14932, inlinedAt: !15868)
!15868 = distinct !DILocation(line: 1404, column: 2, scope: !15824)
!15869 = !DILocation(line: 196, column: 9, scope: !14932, inlinedAt: !15868)
!15870 = !DILocation(line: 1405, column: 1, scope: !15824)
!15871 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2440, file: !2440, line: 1459, type: !15872, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15874)
!15872 = !DISubroutineType(types: !15873)
!15873 = !{!745, !15112}
!15874 = !{!15875, !15876, !15877}
!15875 = !DILocalVariable(name: "timeout", arg: 1, scope: !15871, file: !2440, line: 1459, type: !15112)
!15876 = !DILocalVariable(name: "ticks", scope: !15871, file: !2440, line: 1461, type: !200)
!15877 = !DILocalVariable(name: "ret", scope: !15871, file: !2440, line: 1480, type: !745)
!15878 = !DILocation(line: 0, scope: !15871)
!15879 = !DILocation(line: 1468, column: 6, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15871, file: !2440, line: 1468, column: 6)
!15881 = !DILocation(line: 1468, column: 6, scope: !15871)
!15882 = !DILocation(line: 1469, column: 20, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15880, file: !2440, line: 1468, column: 40)
!15884 = !DILocation(line: 1469, column: 3, scope: !15883)
!15885 = !DILocation(line: 1473, column: 3, scope: !15883)
!15886 = !DILocation(line: 1478, column: 10, scope: !15871)
!15887 = !DILocation(line: 1480, column: 16, scope: !15871)
!15888 = !DILocation(line: 1485, column: 1, scope: !15871)
!15889 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3610, file: !3610, line: 310, type: !15890, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15892)
!15890 = !DISubroutineType(types: !15891)
!15891 = !{null, !15796}
!15892 = !{!15893}
!15893 = !DILocalVariable(name: "thread", arg: 1, scope: !15889, file: !3610, line: 310, type: !15796)
!15894 = !DILocation(line: 0, scope: !15889)
!15895 = !DILocation(line: 319, column: 2, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15889, file: !3610, line: 319, column: 2)
!15897 = !{i64 2154784474}
!15898 = !DILocation(line: 320, column: 2, scope: !15889)
!15899 = !DILocation(line: 321, column: 1, scope: !15889)
!15900 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2440, file: !2440, line: 1415, type: !15901, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15903)
!15901 = !DISubroutineType(types: !15902)
!15902 = !{!745, !200}
!15903 = !{!15904, !15905, !15906, !15907}
!15904 = !DILocalVariable(name: "ticks", arg: 1, scope: !15900, file: !2440, line: 1415, type: !200)
!15905 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15900, file: !2440, line: 1418, type: !121)
!15906 = !DILocalVariable(name: "timeout", scope: !15900, file: !2440, line: 1430, type: !15112)
!15907 = !DILocalVariable(name: "key", scope: !15900, file: !2440, line: 1437, type: !14313)
!15908 = !DILocation(line: 0, scope: !15900)
!15909 = !DILocation(line: 1425, column: 12, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15900, file: !2440, line: 1425, column: 6)
!15911 = !DILocation(line: 1425, column: 6, scope: !15900)
!15912 = !DILocation(line: 1426, column: 3, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15910, file: !2440, line: 1425, column: 18)
!15914 = !DILocation(line: 1427, column: 3, scope: !15913)
!15915 = !DILocation(line: 1431, column: 24, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15900, file: !2440, line: 1431, column: 6)
!15917 = !DILocation(line: 1431, column: 6, scope: !15900)
!15918 = !DILocation(line: 1432, column: 35, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15916, file: !2440, line: 1431, column: 30)
!15920 = !DILocation(line: 1432, column: 27, scope: !15919)
!15921 = !DILocation(line: 1433, column: 2, scope: !15919)
!15922 = !DILocation(line: 1434, column: 27, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15916, file: !2440, line: 1433, column: 9)
!15924 = !DILocation(line: 0, scope: !15916)
!15925 = !DILocation(line: 0, scope: !14321, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 1437, column: 25, scope: !15900)
!15927 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !15926)
!15929 = !DILocation(line: 0, scope: !14330, inlinedAt: !15928)
!15930 = !DILocation(line: 1440, column: 20, scope: !15900)
!15931 = !DILocation(line: 1440, column: 18, scope: !15900)
!15932 = !DILocation(line: 1442, column: 2, scope: !15900)
!15933 = !DILocation(line: 1443, column: 23, scope: !15900)
!15934 = !DILocation(line: 1443, column: 2, scope: !15900)
!15935 = !DILocation(line: 1444, column: 29, scope: !15900)
!15936 = !DILocation(line: 1444, column: 2, scope: !15900)
!15937 = !DILocation(line: 0, scope: !14932, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 1446, column: 8, scope: !15900)
!15939 = !DILocation(line: 196, column: 9, scope: !14932, inlinedAt: !15938)
!15940 = !DILocation(line: 1450, column: 10, scope: !15900)
!15941 = !DILocation(line: 1450, column: 45, scope: !15900)
!15942 = !DILocation(line: 1450, column: 43, scope: !15900)
!15943 = !DILocation(line: 1451, column: 6, scope: !15900)
!15944 = !DILocation(line: 1457, column: 1, scope: !15900)
!15945 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13385, file: !13385, line: 1103, type: !13386, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15946)
!15946 = !{!15947}
!15947 = !DILocalVariable(name: "t", arg: 1, scope: !15945, file: !13385, line: 1103, type: !1595)
!15948 = !DILocation(line: 0, scope: !15945)
!15949 = !DILocation(line: 0, scope: !14368, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 1106, column: 9, scope: !15945)
!15951 = !DILocation(line: 139, column: 13, scope: !15952, inlinedAt: !15950)
!15952 = distinct !DILexicalBlock(scope: !15953, file: !13385, line: 138, column: 10)
!15953 = distinct !DILexicalBlock(scope: !15954, file: !13385, line: 136, column: 7)
!15954 = distinct !DILexicalBlock(scope: !14389, file: !13385, line: 134, column: 17)
!15955 = !DILocation(line: 1106, column: 2, scope: !15945)
!15956 = distinct !DISubprogram(name: "k_yield", scope: !3610, file: !3610, line: 140, type: !3174, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!15957 = !DILocation(line: 148, column: 2, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15956, file: !3610, line: 148, column: 2)
!15959 = !{i64 2154783794}
!15960 = !DILocation(line: 149, column: 2, scope: !15956)
!15961 = !DILocation(line: 150, column: 1, scope: !15956)
!15962 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2440, file: !2440, line: 1495, type: !15963, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15965)
!15963 = !DISubroutineType(types: !15964)
!15964 = !{!745, !103}
!15965 = !{!15966, !15967}
!15966 = !DILocalVariable(name: "us", arg: 1, scope: !15962, file: !2440, line: 1495, type: !103)
!15967 = !DILocalVariable(name: "ticks", scope: !15962, file: !2440, line: 1497, type: !745)
!15968 = !DILocation(line: 0, scope: !15962)
!15969 = !DILocation(line: 1501, column: 31, scope: !15962)
!15970 = !DILocation(line: 1501, column: 10, scope: !15962)
!15971 = !DILocation(line: 1502, column: 23, scope: !15962)
!15972 = !DILocation(line: 1502, column: 10, scope: !15962)
!15973 = !DILocation(line: 1506, column: 31, scope: !15962)
!15974 = !DILocation(line: 1506, column: 9, scope: !15962)
!15975 = !DILocation(line: 1506, column: 2, scope: !15962)
!15976 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13385, file: !13385, line: 571, type: !13386, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15977)
!15977 = !{!15978}
!15978 = !DILocalVariable(name: "t", arg: 1, scope: !15976, file: !13385, line: 571, type: !1595)
!15979 = !DILocation(line: 0, scope: !15976)
!15980 = !DILocation(line: 0, scope: !14368, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 574, column: 9, scope: !15976)
!15982 = !DILocation(line: 135, column: 5, scope: !15954, inlinedAt: !15981)
!15983 = !DILocation(line: 139, column: 13, scope: !15952, inlinedAt: !15981)
!15984 = !DILocation(line: 574, column: 2, scope: !15976)
!15985 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13385, file: !13385, line: 1187, type: !13386, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15986)
!15986 = !{!15987}
!15987 = !DILocalVariable(name: "t", arg: 1, scope: !15985, file: !13385, line: 1187, type: !1595)
!15988 = !DILocation(line: 0, scope: !15985)
!15989 = !DILocation(line: 0, scope: !14368, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 1190, column: 9, scope: !15985)
!15991 = !DILocation(line: 145, column: 13, scope: !15992, inlinedAt: !15990)
!15992 = distinct !DILexicalBlock(scope: !14386, file: !13385, line: 144, column: 10)
!15993 = !DILocation(line: 1190, column: 2, scope: !15985)
!15994 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2440, file: !2440, line: 1517, type: !15890, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !15995)
!15995 = !{!15996}
!15996 = !DILocalVariable(name: "thread", arg: 1, scope: !15994, file: !2440, line: 1517, type: !15796)
!15997 = !DILocation(line: 0, scope: !15994)
!15998 = !DILocation(line: 1521, column: 6, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15994, file: !2440, line: 1521, column: 6)
!16000 = !DILocation(line: 1521, column: 6, scope: !15994)
!16001 = !DILocation(line: 1525, column: 6, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15994, file: !2440, line: 1525, column: 6)
!16003 = !DILocation(line: 1525, column: 37, scope: !16002)
!16004 = !DILocation(line: 1525, column: 6, scope: !15994)
!16005 = !DILocation(line: 1527, column: 20, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !16007, file: !2440, line: 1527, column: 7)
!16007 = distinct !DILexicalBlock(scope: !16002, file: !2440, line: 1525, column: 42)
!16008 = !DILocation(line: 1527, column: 33, scope: !16006)
!16009 = !DILocation(line: 1527, column: 7, scope: !16007)
!16010 = !DILocation(line: 1532, column: 2, scope: !15994)
!16011 = !DILocation(line: 1533, column: 2, scope: !15994)
!16012 = !DILocation(line: 1031, column: 3, scope: !14965, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 48, column: 10, scope: !14969, inlinedAt: !16014)
!16014 = distinct !DILocation(line: 1537, column: 7, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !15994, file: !2440, line: 1537, column: 6)
!16016 = !DILocation(line: 0, scope: !14965, inlinedAt: !16013)
!16017 = !DILocation(line: 48, column: 9, scope: !14969, inlinedAt: !16014)
!16018 = !DILocation(line: 1537, column: 6, scope: !15994)
!16019 = !DILocation(line: 1538, column: 3, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16015, file: !2440, line: 1537, column: 25)
!16021 = !DILocation(line: 1539, column: 2, scope: !16020)
!16022 = !DILocation(line: 1540, column: 1, scope: !15994)
!16023 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12826, file: !12826, line: 101, type: !14439, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16024)
!16024 = !{!16025}
!16025 = !DILocalVariable(name: "thread", arg: 1, scope: !16023, file: !12826, line: 101, type: !2335)
!16026 = !DILocation(line: 0, scope: !16023)
!16027 = !DILocation(line: 103, column: 23, scope: !16023)
!16028 = !DILocation(line: 103, column: 36, scope: !16023)
!16029 = !DILocation(line: 103, column: 55, scope: !16023)
!16030 = !DILocation(line: 103, column: 2, scope: !16023)
!16031 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2440, file: !2440, line: 1567, type: !16032, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16034)
!16032 = !DISubroutineType(types: !16033)
!16033 = !{!15796}
!16034 = !{!16035}
!16035 = !DILocalVariable(name: "ret", scope: !16031, file: !2440, line: 1577, type: !15796)
!16036 = !DILocation(line: 1577, column: 30, scope: !16031)
!16037 = !DILocation(line: 0, scope: !16031)
!16038 = !DILocation(line: 1582, column: 2, scope: !16031)
!16039 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2440, file: !2440, line: 1593, type: !7023, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !317)
!16040 = !DILocation(line: 1031, column: 3, scope: !14965, inlinedAt: !16041)
!16041 = distinct !DILocation(line: 48, column: 10, scope: !14969, inlinedAt: !16042)
!16042 = distinct !DILocation(line: 1595, column: 10, scope: !16039)
!16043 = !DILocation(line: 0, scope: !14965, inlinedAt: !16041)
!16044 = !DILocation(line: 48, column: 9, scope: !14969, inlinedAt: !16042)
!16045 = !DILocation(line: 1595, column: 27, scope: !16039)
!16046 = !DILocation(line: 1595, column: 41, scope: !16039)
!16047 = !DILocation(line: 1595, column: 30, scope: !16039)
!16048 = !DILocation(line: 1595, column: 2, scope: !16039)
!16049 = distinct !DISubprogram(name: "z_thread_abort", scope: !2440, file: !2440, line: 1725, type: !14279, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16050)
!16050 = !{!16051, !16052}
!16051 = !DILocalVariable(name: "thread", arg: 1, scope: !16049, file: !2440, line: 1725, type: !2335)
!16052 = !DILocalVariable(name: "key", scope: !16049, file: !2440, line: 1727, type: !14313)
!16053 = !DILocation(line: 0, scope: !16049)
!16054 = !DILocation(line: 0, scope: !14321, inlinedAt: !16055)
!16055 = distinct !DILocation(line: 1727, column: 25, scope: !16049)
!16056 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !16057)
!16057 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !16055)
!16058 = !DILocation(line: 0, scope: !14330, inlinedAt: !16057)
!16059 = !DILocation(line: 1729, column: 20, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16049, file: !2440, line: 1729, column: 6)
!16061 = !DILocation(line: 1729, column: 33, scope: !16060)
!16062 = !DILocation(line: 1729, column: 48, scope: !16060)
!16063 = !DILocation(line: 1729, column: 6, scope: !16049)
!16064 = !DILocation(line: 0, scope: !14348, inlinedAt: !16065)
!16065 = distinct !DILocation(line: 1730, column: 3, scope: !16066)
!16066 = distinct !DILexicalBlock(scope: !16060, file: !2440, line: 1729, column: 54)
!16067 = !DILocation(line: 0, scope: !14356, inlinedAt: !16068)
!16068 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !16065)
!16069 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !16068)
!16070 = !DILocation(line: 1732, column: 3, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16066, file: !2440, line: 1732, column: 3)
!16072 = !{i64 2155521204, i64 2155521220, i64 2155521246, i64 2155521274, i64 2155521294}
!16073 = !DILocation(line: 1733, column: 3, scope: !16066)
!16074 = !DILocation(line: 1736, column: 20, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16049, file: !2440, line: 1736, column: 6)
!16076 = !DILocation(line: 1736, column: 33, scope: !16075)
!16077 = !DILocation(line: 1736, column: 49, scope: !16075)
!16078 = !DILocation(line: 1736, column: 6, scope: !16049)
!16079 = !DILocation(line: 0, scope: !14348, inlinedAt: !16080)
!16080 = distinct !DILocation(line: 1737, column: 3, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16075, file: !2440, line: 1736, column: 56)
!16082 = !DILocation(line: 0, scope: !14356, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !16080)
!16084 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !16083)
!16085 = !DILocation(line: 1738, column: 3, scope: !16081)
!16086 = !DILocation(line: 1775, column: 2, scope: !16049)
!16087 = !DILocation(line: 1776, column: 16, scope: !16088)
!16088 = distinct !DILexicalBlock(scope: !16049, file: !2440, line: 1776, column: 6)
!16089 = !DILocation(line: 1776, column: 13, scope: !16088)
!16090 = !DILocation(line: 1776, column: 25, scope: !16088)
!16091 = !DILocation(line: 1031, column: 3, scope: !14965, inlinedAt: !16092)
!16092 = distinct !DILocation(line: 48, column: 10, scope: !14969, inlinedAt: !16093)
!16093 = distinct !DILocation(line: 1776, column: 29, scope: !16088)
!16094 = !DILocation(line: 0, scope: !14965, inlinedAt: !16092)
!16095 = !DILocation(line: 48, column: 9, scope: !14969, inlinedAt: !16093)
!16096 = !DILocation(line: 1776, column: 6, scope: !16049)
!16097 = !DILocation(line: 0, scope: !14932, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 1777, column: 3, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16088, file: !2440, line: 1776, column: 47)
!16100 = !DILocation(line: 196, column: 9, scope: !14932, inlinedAt: !16098)
!16101 = !DILocation(line: 1779, column: 2, scope: !16099)
!16102 = !DILocation(line: 0, scope: !14348, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 1780, column: 2, scope: !16049)
!16104 = !DILocation(line: 0, scope: !14356, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !16103)
!16106 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !16105)
!16107 = !DILocation(line: 1781, column: 1, scope: !16049)
!16108 = distinct !DISubprogram(name: "end_thread", scope: !2440, file: !2440, line: 1690, type: !14279, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16109)
!16109 = !{!16110}
!16110 = !DILocalVariable(name: "thread", arg: 1, scope: !16108, file: !2440, line: 1690, type: !2335)
!16111 = !DILocation(line: 0, scope: !16108)
!16112 = !DILocation(line: 1695, column: 20, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16108, file: !2440, line: 1695, column: 6)
!16114 = !DILocation(line: 1695, column: 33, scope: !16113)
!16115 = !DILocation(line: 1695, column: 49, scope: !16113)
!16116 = !DILocation(line: 1695, column: 6, scope: !16108)
!16117 = !DILocation(line: 1697, column: 29, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16113, file: !2440, line: 1695, column: 56)
!16119 = !DILocation(line: 1698, column: 7, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16118, file: !2440, line: 1698, column: 7)
!16121 = !DILocation(line: 1698, column: 7, scope: !16118)
!16122 = !DILocation(line: 0, scope: !14490, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 1699, column: 4, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16120, file: !2440, line: 1698, column: 35)
!16125 = !DILocation(line: 266, column: 28, scope: !14490, inlinedAt: !16123)
!16126 = !DILocation(line: 0, scope: !14498, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 268, column: 3, scope: !14502, inlinedAt: !16123)
!16128 = !DILocation(line: 234, column: 2, scope: !14498, inlinedAt: !16127)
!16129 = !DILocation(line: 1700, column: 3, scope: !16124)
!16130 = !DILocation(line: 1701, column: 20, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16118, file: !2440, line: 1701, column: 7)
!16132 = !DILocation(line: 1701, column: 30, scope: !16131)
!16133 = !DILocation(line: 1701, column: 7, scope: !16118)
!16134 = !DILocation(line: 1702, column: 4, scope: !16135)
!16135 = distinct !DILexicalBlock(scope: !16131, file: !2440, line: 1701, column: 39)
!16136 = !DILocation(line: 1703, column: 3, scope: !16135)
!16137 = !DILocation(line: 1704, column: 9, scope: !16118)
!16138 = !DILocation(line: 1705, column: 23, scope: !16118)
!16139 = !DILocation(line: 1705, column: 3, scope: !16118)
!16140 = !DILocation(line: 1706, column: 3, scope: !16118)
!16141 = !DILocation(line: 1722, column: 2, scope: !16118)
!16142 = !DILocation(line: 1723, column: 1, scope: !16108)
!16143 = distinct !DISubprogram(name: "unpend_all", scope: !2440, file: !2440, line: 1674, type: !16144, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16146)
!16144 = !DISubroutineType(types: !16145)
!16145 = !{null, !2366}
!16146 = !{!16147, !16148}
!16147 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16143, file: !2440, line: 1674, type: !2366)
!16148 = !DILocalVariable(name: "thread", scope: !16143, file: !2440, line: 1676, type: !2335)
!16149 = !DILocation(line: 0, scope: !16143)
!16150 = !DILocation(line: 1678, column: 19, scope: !16143)
!16151 = !DILocation(line: 1678, column: 41, scope: !16143)
!16152 = !DILocation(line: 1678, column: 2, scope: !16143)
!16153 = !DILocation(line: 1679, column: 3, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16143, file: !2440, line: 1678, column: 50)
!16155 = !DILocation(line: 1680, column: 9, scope: !16154)
!16156 = !DILocalVariable(name: "thread", arg: 1, scope: !16157, file: !12846, line: 65, type: !2335)
!16157 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12846, file: !12846, line: 65, type: !16158, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16160)
!16158 = !DISubroutineType(types: !16159)
!16159 = !{null, !2335, !32}
!16160 = !{!16156, !16161}
!16161 = !DILocalVariable(name: "value", arg: 2, scope: !16157, file: !12846, line: 65, type: !32)
!16162 = !DILocation(line: 0, scope: !16157, inlinedAt: !16163)
!16163 = distinct !DILocation(line: 1681, column: 3, scope: !16154)
!16164 = !DILocation(line: 67, column: 15, scope: !16157, inlinedAt: !16163)
!16165 = !DILocation(line: 67, column: 33, scope: !16157, inlinedAt: !16163)
!16166 = !DILocation(line: 1682, column: 3, scope: !16154)
!16167 = distinct !{!16167, !16152, !16168}
!16168 = !DILocation(line: 1683, column: 2, scope: !16143)
!16169 = !DILocation(line: 1684, column: 1, scope: !16143)
!16170 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2440, file: !2440, line: 1794, type: !16171, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16173)
!16171 = !DISubroutineType(types: !16172)
!16172 = !{!103, !2335, !15112}
!16173 = !{!16174, !16175, !16176, !16177}
!16174 = !DILocalVariable(name: "thread", arg: 1, scope: !16170, file: !2440, line: 1794, type: !2335)
!16175 = !DILocalVariable(name: "timeout", arg: 2, scope: !16170, file: !2440, line: 1794, type: !15112)
!16176 = !DILocalVariable(name: "key", scope: !16170, file: !2440, line: 1796, type: !14313)
!16177 = !DILocalVariable(name: "ret", scope: !16170, file: !2440, line: 1797, type: !103)
!16178 = !DILocation(line: 0, scope: !16170)
!16179 = !DILocation(line: 0, scope: !14321, inlinedAt: !16180)
!16180 = distinct !DILocation(line: 1796, column: 25, scope: !16170)
!16181 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !16182)
!16182 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !16180)
!16183 = !DILocation(line: 0, scope: !14330, inlinedAt: !16182)
!16184 = !DILocation(line: 1801, column: 20, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16170, file: !2440, line: 1801, column: 6)
!16186 = !DILocation(line: 1801, column: 33, scope: !16185)
!16187 = !DILocation(line: 1801, column: 49, scope: !16185)
!16188 = !DILocation(line: 1801, column: 6, scope: !16170)
!16189 = !DILocation(line: 1803, column: 13, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16185, file: !2440, line: 1803, column: 13)
!16191 = !DILocation(line: 1803, column: 13, scope: !16185)
!16192 = !DILocation(line: 1805, column: 24, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16190, file: !2440, line: 1805, column: 13)
!16194 = !DILocation(line: 1805, column: 21, scope: !16193)
!16195 = !DILocation(line: 1805, column: 34, scope: !16193)
!16196 = !DILocation(line: 1806, column: 20, scope: !16193)
!16197 = !DILocation(line: 1806, column: 44, scope: !16193)
!16198 = !DILocation(line: 1806, column: 30, scope: !16193)
!16199 = !DILocation(line: 1805, column: 13, scope: !16190)
!16200 = !DILocation(line: 1810, column: 42, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16193, file: !2440, line: 1808, column: 9)
!16202 = !DILocation(line: 1810, column: 3, scope: !16201)
!16203 = !DILocation(line: 1811, column: 22, scope: !16201)
!16204 = !DILocation(line: 1811, column: 3, scope: !16201)
!16205 = !DILocation(line: 0, scope: !14932, inlinedAt: !16206)
!16206 = distinct !DILocation(line: 1814, column: 9, scope: !16201)
!16207 = !DILocation(line: 196, column: 9, scope: !14932, inlinedAt: !16206)
!16208 = !DILocation(line: 1817, column: 3, scope: !16201)
!16209 = !DILocation(line: 0, scope: !16185)
!16210 = !DILocation(line: 0, scope: !14348, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 1822, column: 2, scope: !16170)
!16212 = !DILocation(line: 0, scope: !14356, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !16211)
!16214 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !16213)
!16215 = !DILocation(line: 1823, column: 2, scope: !16170)
!16216 = !DILocation(line: 1824, column: 1, scope: !16170)
!16217 = distinct !DISubprogram(name: "z_sched_wake", scope: !2440, file: !2440, line: 1882, type: !16218, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16220)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{!157, !2366, !103, !102}
!16220 = !{!16221, !16222, !16223, !16224, !16225, !16226, !16228}
!16221 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16217, file: !2440, line: 1882, type: !2366)
!16222 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16217, file: !2440, line: 1882, type: !103)
!16223 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16217, file: !2440, line: 1882, type: !102)
!16224 = !DILocalVariable(name: "thread", scope: !16217, file: !2440, line: 1884, type: !2335)
!16225 = !DILocalVariable(name: "ret", scope: !16217, file: !2440, line: 1885, type: !157)
!16226 = !DILocalVariable(name: "__i", scope: !16227, file: !2440, line: 1887, type: !14313)
!16227 = distinct !DILexicalBlock(scope: !16217, file: !2440, line: 1887, column: 2)
!16228 = !DILocalVariable(name: "__key", scope: !16227, file: !2440, line: 1887, type: !14313)
!16229 = !DILocation(line: 0, scope: !16217)
!16230 = !DILocation(line: 0, scope: !16227)
!16231 = !DILocation(line: 0, scope: !14321, inlinedAt: !16232)
!16232 = distinct !DILocation(line: 1887, column: 2, scope: !16227)
!16233 = !DILocation(line: 55, column: 2, scope: !14330, inlinedAt: !16234)
!16234 = distinct !DILocation(line: 145, column: 10, scope: !14321, inlinedAt: !16232)
!16235 = !DILocation(line: 0, scope: !14330, inlinedAt: !16234)
!16236 = !DILocation(line: 1888, column: 12, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16238, file: !2440, line: 1887, column: 26)
!16238 = distinct !DILexicalBlock(scope: !16227, file: !2440, line: 1887, column: 2)
!16239 = !DILocation(line: 1890, column: 14, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16237, file: !2440, line: 1890, column: 7)
!16241 = !DILocation(line: 1890, column: 7, scope: !16237)
!16242 = !DILocalVariable(name: "thread", arg: 1, scope: !16243, file: !13719, line: 134, type: !2335)
!16243 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13719, file: !13719, line: 134, type: !16244, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16246)
!16244 = !DISubroutineType(types: !16245)
!16245 = !{null, !2335, !32, !102}
!16246 = !{!16242, !16247, !16248}
!16247 = !DILocalVariable(name: "value", arg: 2, scope: !16243, file: !13719, line: 135, type: !32)
!16248 = !DILocalVariable(name: "data", arg: 3, scope: !16243, file: !13719, line: 136, type: !102)
!16249 = !DILocation(line: 0, scope: !16243, inlinedAt: !16250)
!16250 = distinct !DILocation(line: 1891, column: 4, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16240, file: !2440, line: 1890, column: 23)
!16252 = !DILocation(line: 0, scope: !16157, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 138, column: 2, scope: !16243, inlinedAt: !16250)
!16254 = !DILocation(line: 67, column: 15, scope: !16157, inlinedAt: !16253)
!16255 = !DILocation(line: 67, column: 33, scope: !16157, inlinedAt: !16253)
!16256 = !DILocation(line: 139, column: 15, scope: !16243, inlinedAt: !16250)
!16257 = !DILocation(line: 139, column: 25, scope: !16243, inlinedAt: !16250)
!16258 = !DILocation(line: 1894, column: 4, scope: !16251)
!16259 = !DILocation(line: 1895, column: 10, scope: !16251)
!16260 = !DILocation(line: 1896, column: 4, scope: !16251)
!16261 = !DILocation(line: 1898, column: 3, scope: !16251)
!16262 = !DILocation(line: 0, scope: !14348, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 1887, column: 2, scope: !16238)
!16264 = !DILocation(line: 0, scope: !14356, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 215, column: 2, scope: !14348, inlinedAt: !16263)
!16266 = !DILocation(line: 95, column: 2, scope: !14356, inlinedAt: !16265)
!16267 = !DILocation(line: 1901, column: 2, scope: !16217)
!16268 = distinct !DISubprogram(name: "z_sched_wait", scope: !2440, file: !2440, line: 1904, type: !16269, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2332, retainedNodes: !16271)
!16269 = !DISubroutineType(types: !16270)
!16270 = !{!103, !14324, !14313, !2366, !15112, !3138}
!16271 = !{!16272, !16273, !16274, !16275, !16276, !16277}
!16272 = !DILocalVariable(name: "lock", arg: 1, scope: !16268, file: !2440, line: 1904, type: !14324)
!16273 = !DILocalVariable(name: "key", arg: 2, scope: !16268, file: !2440, line: 1904, type: !14313)
!16274 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16268, file: !2440, line: 1905, type: !2366)
!16275 = !DILocalVariable(name: "timeout", arg: 4, scope: !16268, file: !2440, line: 1905, type: !15112)
!16276 = !DILocalVariable(name: "data", arg: 5, scope: !16268, file: !2440, line: 1905, type: !3138)
!16277 = !DILocalVariable(name: "ret", scope: !16268, file: !2440, line: 1907, type: !103)
!16278 = !DILocation(line: 0, scope: !16268)
!16279 = !DILocation(line: 1907, column: 12, scope: !16268)
!16280 = !DILocation(line: 1909, column: 11, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16268, file: !2440, line: 1909, column: 6)
!16282 = !DILocation(line: 1909, column: 6, scope: !16268)
!16283 = !DILocation(line: 1910, column: 11, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16281, file: !2440, line: 1909, column: 20)
!16285 = !DILocation(line: 1910, column: 26, scope: !16284)
!16286 = !DILocation(line: 1910, column: 9, scope: !16284)
!16287 = !DILocation(line: 1911, column: 2, scope: !16284)
!16288 = !DILocation(line: 1912, column: 2, scope: !16268)
!16289 = distinct !DISubprogram(name: "z_data_copy", scope: !16290, file: !16290, line: 22, type: !3174, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3155, retainedNodes: !317)
!16290 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16291 = !DILocation(line: 24, column: 2, scope: !16289)
!16292 = !DILocation(line: 27, column: 2, scope: !16289)
!16293 = !DILocation(line: 71, column: 1, scope: !16289)
!16294 = distinct !DISubprogram(name: "z_add_timeout", scope: !2477, file: !2477, line: 88, type: !16295, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16301)
!16295 = !DISubroutineType(types: !16296)
!16296 = !{null, !2450, !2469, !16297}
!16297 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !16298)
!16298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !16299)
!16299 = !{!16300}
!16300 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16298, file: !201, line: 66, baseType: !200, size: 64)
!16301 = !{!16302, !16303, !16304, !16305, !16311, !16312, !16315, !16318}
!16302 = !DILocalVariable(name: "to", arg: 1, scope: !16294, file: !2477, line: 88, type: !2450)
!16303 = !DILocalVariable(name: "fn", arg: 2, scope: !16294, file: !2477, line: 88, type: !2469)
!16304 = !DILocalVariable(name: "timeout", arg: 3, scope: !16294, file: !2477, line: 89, type: !16297)
!16305 = !DILocalVariable(name: "__i", scope: !16306, file: !2477, line: 102, type: !16307)
!16306 = distinct !DILexicalBlock(scope: !16294, file: !2477, line: 102, column: 2)
!16307 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !16308)
!16308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !16309)
!16309 = !{!16310}
!16310 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16308, file: !316, line: 33, baseType: !103, size: 32)
!16311 = !DILocalVariable(name: "__key", scope: !16306, file: !2477, line: 102, type: !16307)
!16312 = !DILocalVariable(name: "t", scope: !16313, file: !2477, line: 103, type: !2450)
!16313 = distinct !DILexicalBlock(scope: !16314, file: !2477, line: 102, column: 24)
!16314 = distinct !DILexicalBlock(scope: !16306, file: !2477, line: 102, column: 2)
!16315 = !DILocalVariable(name: "ticks", scope: !16316, file: !2477, line: 107, type: !200)
!16316 = distinct !DILexicalBlock(scope: !16317, file: !2477, line: 106, column: 39)
!16317 = distinct !DILexicalBlock(scope: !16313, file: !2477, line: 105, column: 7)
!16318 = !DILocalVariable(name: "next_time", scope: !16319, file: !2477, line: 137, type: !745)
!16319 = distinct !DILexicalBlock(scope: !16320, file: !2477, line: 127, column: 22)
!16320 = distinct !DILexicalBlock(scope: !16313, file: !2477, line: 127, column: 7)
!16321 = !DILocation(line: 0, scope: !16294)
!16322 = !DILocation(line: 91, column: 6, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16294, file: !2477, line: 91, column: 6)
!16324 = !DILocation(line: 91, column: 6, scope: !16294)
!16325 = !DILocation(line: 100, column: 6, scope: !16294)
!16326 = !DILocation(line: 100, column: 9, scope: !16294)
!16327 = !DILocation(line: 0, scope: !16306)
!16328 = !DILocalVariable(name: "l", arg: 1, scope: !16329, file: !316, line: 136, type: !16332)
!16329 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !16330, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16333)
!16330 = !DISubroutineType(types: !16331)
!16331 = !{!16307, !16332}
!16332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!16333 = !{!16328, !16334}
!16334 = !DILocalVariable(name: "k", scope: !16329, file: !316, line: 139, type: !16307)
!16335 = !DILocation(line: 0, scope: !16329, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 102, column: 2, scope: !16306)
!16337 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16342)
!16338 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16339)
!16339 = !{!16340, !16341}
!16340 = !DILocalVariable(name: "key", scope: !16338, file: !5739, line: 44, type: !32)
!16341 = !DILocalVariable(name: "tmp", scope: !16338, file: !5739, line: 53, type: !32)
!16342 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16336)
!16343 = !{i64 2244761}
!16344 = !DILocation(line: 0, scope: !16338, inlinedAt: !16342)
!16345 = !DILocation(line: 106, column: 33, scope: !16317)
!16346 = !DILocation(line: 105, column: 7, scope: !16313)
!16347 = !DILocation(line: 107, column: 50, scope: !16316)
!16348 = !DILocation(line: 107, column: 48, scope: !16316)
!16349 = !DILocation(line: 0, scope: !16316)
!16350 = !DILocation(line: 109, column: 17, scope: !16316)
!16351 = !DILocation(line: 110, column: 3, scope: !16316)
!16352 = !DILocation(line: 111, column: 31, scope: !16353)
!16353 = distinct !DILexicalBlock(scope: !16317, file: !2477, line: 110, column: 10)
!16354 = !DILocation(line: 111, column: 37, scope: !16353)
!16355 = !DILocation(line: 111, column: 35, scope: !16353)
!16356 = !DILocation(line: 0, scope: !16317)
!16357 = !DILocation(line: 109, column: 8, scope: !16316)
!16358 = !DILocation(line: 109, column: 15, scope: !16316)
!16359 = !DILocation(line: 114, column: 12, scope: !16360)
!16360 = distinct !DILexicalBlock(scope: !16313, file: !2477, line: 114, column: 3)
!16361 = !DILocation(line: 0, scope: !16313)
!16362 = !DILocation(line: 114, column: 3, scope: !16360)
!16363 = !DILocation(line: 115, column: 24, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16365, file: !2477, line: 115, column: 8)
!16365 = distinct !DILexicalBlock(scope: !16366, file: !2477, line: 114, column: 45)
!16366 = distinct !DILexicalBlock(scope: !16360, file: !2477, line: 114, column: 3)
!16367 = !DILocation(line: 115, column: 11, scope: !16364)
!16368 = !DILocation(line: 115, column: 18, scope: !16364)
!16369 = !DILocation(line: 115, column: 8, scope: !16365)
!16370 = !DILocation(line: 116, column: 15, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16364, file: !2477, line: 115, column: 32)
!16372 = !DILocation(line: 117, column: 26, scope: !16371)
!16373 = !DILocation(line: 117, column: 37, scope: !16371)
!16374 = !DILocation(line: 117, column: 5, scope: !16371)
!16375 = !DILocation(line: 123, column: 7, scope: !16313)
!16376 = !DILocation(line: 120, column: 15, scope: !16365)
!16377 = !DILocation(line: 114, column: 36, scope: !16366)
!16378 = distinct !{!16378, !16362, !16379}
!16379 = !DILocation(line: 121, column: 3, scope: !16360)
!16380 = !DILocation(line: 124, column: 41, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16382, file: !2477, line: 123, column: 18)
!16382 = distinct !DILexicalBlock(scope: !16313, file: !2477, line: 123, column: 7)
!16383 = !DILocation(line: 124, column: 4, scope: !16381)
!16384 = !DILocation(line: 125, column: 3, scope: !16381)
!16385 = !DILocation(line: 127, column: 13, scope: !16320)
!16386 = !DILocation(line: 127, column: 10, scope: !16320)
!16387 = !DILocation(line: 127, column: 7, scope: !16313)
!16388 = !DILocation(line: 137, column: 24, scope: !16319)
!16389 = !DILocation(line: 0, scope: !16319)
!16390 = !DILocation(line: 139, column: 18, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16319, file: !2477, line: 139, column: 8)
!16392 = !DILocation(line: 139, column: 23, scope: !16391)
!16393 = !DILocation(line: 141, column: 5, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16391, file: !2477, line: 140, column: 48)
!16395 = !DILocation(line: 142, column: 4, scope: !16394)
!16396 = !DILocalVariable(name: "key", arg: 2, scope: !16397, file: !316, line: 190, type: !16307)
!16397 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !16398, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16400)
!16398 = !DISubroutineType(types: !16399)
!16399 = !{null, !16332, !16307}
!16400 = !{!16401, !16396}
!16401 = !DILocalVariable(name: "l", arg: 1, scope: !16397, file: !316, line: 189, type: !16332)
!16402 = !DILocation(line: 0, scope: !16397, inlinedAt: !16403)
!16403 = distinct !DILocation(line: 102, column: 2, scope: !16314)
!16404 = !DILocalVariable(name: "key", arg: 1, scope: !16405, file: !5739, line: 84, type: !32)
!16405 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16406)
!16406 = !{!16404}
!16407 = !DILocation(line: 0, scope: !16405, inlinedAt: !16408)
!16408 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16403)
!16409 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16408)
!16410 = !{i64 2245578}
!16411 = !DILocation(line: 148, column: 1, scope: !16294)
!16412 = distinct !DISubprogram(name: "elapsed", scope: !2477, file: !2477, line: 62, type: !16413, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !317)
!16413 = !DISubroutineType(types: !16414)
!16414 = !{!745}
!16415 = !DILocation(line: 64, column: 9, scope: !16412)
!16416 = !DILocation(line: 64, column: 28, scope: !16412)
!16417 = !DILocation(line: 64, column: 35, scope: !16412)
!16418 = !DILocation(line: 64, column: 2, scope: !16412)
!16419 = distinct !DISubprogram(name: "first", scope: !2477, file: !2477, line: 39, type: !16420, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16422)
!16420 = !DISubroutineType(types: !16421)
!16421 = !{!2450}
!16422 = !{!16423}
!16423 = !DILocalVariable(name: "t", scope: !16419, file: !2477, line: 41, type: !16424)
!16424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 32)
!16425 = !DILocation(line: 41, column: 19, scope: !16419)
!16426 = !DILocation(line: 0, scope: !16419)
!16427 = !DILocation(line: 43, column: 9, scope: !16419)
!16428 = !DILocation(line: 43, column: 2, scope: !16419)
!16429 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !325, file: !325, line: 443, type: !16430, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16432)
!16430 = !DISubroutineType(types: !16431)
!16431 = !{null, !16424, !16424}
!16432 = !{!16433, !16434, !16435}
!16433 = !DILocalVariable(name: "successor", arg: 1, scope: !16429, file: !325, line: 443, type: !16424)
!16434 = !DILocalVariable(name: "node", arg: 2, scope: !16429, file: !325, line: 443, type: !16424)
!16435 = !DILocalVariable(name: "prev", scope: !16429, file: !325, line: 445, type: !16436)
!16436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16424)
!16437 = !DILocation(line: 0, scope: !16429)
!16438 = !DILocation(line: 445, column: 39, scope: !16429)
!16439 = !DILocation(line: 447, column: 8, scope: !16429)
!16440 = !DILocation(line: 447, column: 13, scope: !16429)
!16441 = !DILocation(line: 448, column: 8, scope: !16429)
!16442 = !DILocation(line: 448, column: 13, scope: !16429)
!16443 = !DILocation(line: 449, column: 8, scope: !16429)
!16444 = !DILocation(line: 449, column: 13, scope: !16429)
!16445 = !DILocation(line: 450, column: 18, scope: !16429)
!16446 = !DILocation(line: 451, column: 1, scope: !16429)
!16447 = distinct !DISubprogram(name: "next", scope: !2477, file: !2477, line: 46, type: !16448, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16450)
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!2450, !2450}
!16450 = !{!16451, !16452}
!16451 = !DILocalVariable(name: "t", arg: 1, scope: !16447, file: !2477, line: 46, type: !2450)
!16452 = !DILocalVariable(name: "n", scope: !16447, file: !2477, line: 48, type: !16424)
!16453 = !DILocation(line: 0, scope: !16447)
!16454 = !DILocation(line: 48, column: 58, scope: !16447)
!16455 = !DILocation(line: 48, column: 19, scope: !16447)
!16456 = !DILocation(line: 50, column: 9, scope: !16447)
!16457 = !DILocation(line: 50, column: 2, scope: !16447)
!16458 = distinct !DISubprogram(name: "sys_dlist_append", scope: !325, file: !325, line: 404, type: !16459, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16462)
!16459 = !DISubroutineType(types: !16460)
!16460 = !{null, !16461, !16424}
!16461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!16462 = !{!16463, !16464, !16465}
!16463 = !DILocalVariable(name: "list", arg: 1, scope: !16458, file: !325, line: 404, type: !16461)
!16464 = !DILocalVariable(name: "node", arg: 2, scope: !16458, file: !325, line: 404, type: !16424)
!16465 = !DILocalVariable(name: "tail", scope: !16458, file: !325, line: 406, type: !16436)
!16466 = !DILocation(line: 0, scope: !16458)
!16467 = !DILocation(line: 406, column: 34, scope: !16458)
!16468 = !DILocation(line: 408, column: 8, scope: !16458)
!16469 = !DILocation(line: 408, column: 13, scope: !16458)
!16470 = !DILocation(line: 409, column: 8, scope: !16458)
!16471 = !DILocation(line: 409, column: 13, scope: !16458)
!16472 = !DILocation(line: 411, column: 8, scope: !16458)
!16473 = !DILocation(line: 411, column: 13, scope: !16458)
!16474 = !DILocation(line: 412, column: 13, scope: !16458)
!16475 = !DILocation(line: 413, column: 1, scope: !16458)
!16476 = distinct !DISubprogram(name: "next_timeout", scope: !2477, file: !2477, line: 67, type: !16413, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16477)
!16477 = !{!16478, !16479, !16480}
!16478 = !DILocalVariable(name: "to", scope: !16476, file: !2477, line: 69, type: !2450)
!16479 = !DILocalVariable(name: "ticks_elapsed", scope: !16476, file: !2477, line: 70, type: !745)
!16480 = !DILocalVariable(name: "ret", scope: !16476, file: !2477, line: 71, type: !745)
!16481 = !DILocation(line: 69, column: 24, scope: !16476)
!16482 = !DILocation(line: 0, scope: !16476)
!16483 = !DILocation(line: 70, column: 26, scope: !16476)
!16484 = !DILocation(line: 73, column: 10, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16476, file: !2477, line: 73, column: 6)
!16486 = !DILocation(line: 73, column: 19, scope: !16485)
!16487 = !DILocation(line: 74, column: 21, scope: !16485)
!16488 = !DILocation(line: 74, column: 30, scope: !16485)
!16489 = !DILocation(line: 74, column: 28, scope: !16485)
!16490 = !DILocation(line: 74, column: 45, scope: !16485)
!16491 = !DILocation(line: 73, column: 6, scope: !16476)
!16492 = !DILocation(line: 77, column: 9, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16485, file: !2477, line: 76, column: 9)
!16494 = !DILocation(line: 0, scope: !16485)
!16495 = !DILocation(line: 81, column: 20, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16476, file: !2477, line: 81, column: 6)
!16497 = !DILocation(line: 81, column: 6, scope: !16496)
!16498 = !DILocation(line: 81, column: 32, scope: !16496)
!16499 = !DILocation(line: 85, column: 2, scope: !16476)
!16500 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !325, file: !325, line: 341, type: !16501, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16503)
!16501 = !DISubroutineType(types: !16502)
!16502 = !{!16424, !16461, !16424}
!16503 = !{!16504, !16505}
!16504 = !DILocalVariable(name: "list", arg: 1, scope: !16500, file: !325, line: 341, type: !16461)
!16505 = !DILocalVariable(name: "node", arg: 2, scope: !16500, file: !325, line: 342, type: !16424)
!16506 = !DILocation(line: 0, scope: !16500)
!16507 = !DILocation(line: 344, column: 15, scope: !16500)
!16508 = !DILocation(line: 344, column: 9, scope: !16500)
!16509 = !DILocation(line: 344, column: 26, scope: !16500)
!16510 = !DILocation(line: 344, column: 2, scope: !16500)
!16511 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !325, file: !325, line: 325, type: !16501, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16512)
!16512 = !{!16513, !16514}
!16513 = !DILocalVariable(name: "list", arg: 1, scope: !16511, file: !325, line: 325, type: !16461)
!16514 = !DILocalVariable(name: "node", arg: 2, scope: !16511, file: !325, line: 326, type: !16424)
!16515 = !DILocation(line: 0, scope: !16511)
!16516 = !DILocation(line: 328, column: 24, scope: !16511)
!16517 = !DILocation(line: 328, column: 15, scope: !16511)
!16518 = !DILocation(line: 328, column: 9, scope: !16511)
!16519 = !DILocation(line: 328, column: 45, scope: !16511)
!16520 = !DILocation(line: 328, column: 2, scope: !16511)
!16521 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !325, file: !325, line: 294, type: !16522, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16524)
!16522 = !DISubroutineType(types: !16523)
!16523 = !{!16424, !16461}
!16524 = !{!16525}
!16525 = !DILocalVariable(name: "list", arg: 1, scope: !16521, file: !325, line: 294, type: !16461)
!16526 = !DILocation(line: 0, scope: !16521)
!16527 = !DILocation(line: 296, column: 9, scope: !16521)
!16528 = !DILocation(line: 296, column: 2, scope: !16521)
!16529 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !325, file: !325, line: 266, type: !16530, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16532)
!16530 = !DISubroutineType(types: !16531)
!16531 = !{!157, !16461}
!16532 = !{!16533}
!16533 = !DILocalVariable(name: "list", arg: 1, scope: !16529, file: !325, line: 266, type: !16461)
!16534 = !DILocation(line: 0, scope: !16529)
!16535 = !DILocation(line: 268, column: 15, scope: !16529)
!16536 = !DILocation(line: 268, column: 20, scope: !16529)
!16537 = !DILocation(line: 268, column: 2, scope: !16529)
!16538 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2477, file: !2477, line: 150, type: !16539, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16541)
!16539 = !DISubroutineType(types: !16540)
!16540 = !{!103, !2450}
!16541 = !{!16542, !16543, !16544, !16546}
!16542 = !DILocalVariable(name: "to", arg: 1, scope: !16538, file: !2477, line: 150, type: !2450)
!16543 = !DILocalVariable(name: "ret", scope: !16538, file: !2477, line: 152, type: !103)
!16544 = !DILocalVariable(name: "__i", scope: !16545, file: !2477, line: 154, type: !16307)
!16545 = distinct !DILexicalBlock(scope: !16538, file: !2477, line: 154, column: 2)
!16546 = !DILocalVariable(name: "__key", scope: !16545, file: !2477, line: 154, type: !16307)
!16547 = !DILocation(line: 0, scope: !16538)
!16548 = !DILocation(line: 0, scope: !16545)
!16549 = !DILocation(line: 0, scope: !16329, inlinedAt: !16550)
!16550 = distinct !DILocation(line: 154, column: 2, scope: !16545)
!16551 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16550)
!16553 = !DILocation(line: 0, scope: !16338, inlinedAt: !16552)
!16554 = !DILocation(line: 155, column: 7, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16556, file: !2477, line: 155, column: 7)
!16556 = distinct !DILexicalBlock(scope: !16557, file: !2477, line: 154, column: 24)
!16557 = distinct !DILexicalBlock(scope: !16545, file: !2477, line: 154, column: 2)
!16558 = !DILocation(line: 155, column: 7, scope: !16556)
!16559 = !DILocation(line: 156, column: 4, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16555, file: !2477, line: 155, column: 39)
!16561 = !DILocation(line: 158, column: 3, scope: !16560)
!16562 = !DILocation(line: 0, scope: !16397, inlinedAt: !16563)
!16563 = distinct !DILocation(line: 154, column: 2, scope: !16557)
!16564 = !DILocation(line: 0, scope: !16405, inlinedAt: !16565)
!16565 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16563)
!16566 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16565)
!16567 = !DILocation(line: 161, column: 2, scope: !16538)
!16568 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !325, file: !325, line: 225, type: !16569, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16573)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{!157, !16571}
!16571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16572, size: 32)
!16572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2454)
!16573 = !{!16574}
!16574 = !DILocalVariable(name: "node", arg: 1, scope: !16568, file: !325, line: 225, type: !16571)
!16575 = !DILocation(line: 0, scope: !16568)
!16576 = !DILocation(line: 227, column: 15, scope: !16568)
!16577 = !DILocation(line: 227, column: 20, scope: !16568)
!16578 = !DILocation(line: 227, column: 2, scope: !16568)
!16579 = distinct !DISubprogram(name: "remove_timeout", scope: !2477, file: !2477, line: 53, type: !2471, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16580)
!16580 = !{!16581}
!16581 = !DILocalVariable(name: "t", arg: 1, scope: !16579, file: !2477, line: 53, type: !2450)
!16582 = !DILocation(line: 0, scope: !16579)
!16583 = !DILocation(line: 55, column: 6, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16579, file: !2477, line: 55, column: 6)
!16585 = !DILocation(line: 55, column: 14, scope: !16584)
!16586 = !DILocation(line: 55, column: 6, scope: !16579)
!16587 = !DILocation(line: 56, column: 25, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16584, file: !2477, line: 55, column: 23)
!16589 = !DILocation(line: 56, column: 12, scope: !16588)
!16590 = !DILocation(line: 56, column: 19, scope: !16588)
!16591 = !DILocation(line: 57, column: 2, scope: !16588)
!16592 = !DILocation(line: 59, column: 23, scope: !16579)
!16593 = !DILocation(line: 59, column: 2, scope: !16579)
!16594 = !DILocation(line: 60, column: 1, scope: !16579)
!16595 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !325, file: !325, line: 496, type: !16596, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16598)
!16596 = !DISubroutineType(types: !16597)
!16597 = !{null, !16424}
!16598 = !{!16599, !16600, !16601}
!16599 = !DILocalVariable(name: "node", arg: 1, scope: !16595, file: !325, line: 496, type: !16424)
!16600 = !DILocalVariable(name: "prev", scope: !16595, file: !325, line: 498, type: !16436)
!16601 = !DILocalVariable(name: "next", scope: !16595, file: !325, line: 499, type: !16436)
!16602 = !DILocation(line: 0, scope: !16595)
!16603 = !DILocation(line: 498, column: 34, scope: !16595)
!16604 = !DILocation(line: 499, column: 34, scope: !16595)
!16605 = !DILocation(line: 501, column: 8, scope: !16595)
!16606 = !DILocation(line: 501, column: 13, scope: !16595)
!16607 = !DILocation(line: 502, column: 8, scope: !16595)
!16608 = !DILocation(line: 502, column: 13, scope: !16595)
!16609 = !DILocation(line: 503, column: 2, scope: !16595)
!16610 = !DILocation(line: 504, column: 1, scope: !16595)
!16611 = distinct !DISubprogram(name: "sys_dnode_init", scope: !325, file: !325, line: 211, type: !16596, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16612)
!16612 = !{!16613}
!16613 = !DILocalVariable(name: "node", arg: 1, scope: !16611, file: !325, line: 211, type: !16424)
!16614 = !DILocation(line: 0, scope: !16611)
!16615 = !DILocation(line: 213, column: 8, scope: !16611)
!16616 = !DILocation(line: 213, column: 13, scope: !16611)
!16617 = !DILocation(line: 214, column: 8, scope: !16611)
!16618 = !DILocation(line: 214, column: 13, scope: !16611)
!16619 = !DILocation(line: 215, column: 1, scope: !16611)
!16620 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2477, file: !2477, line: 183, type: !16621, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16625)
!16621 = !DISubroutineType(types: !16622)
!16622 = !{!200, !16623}
!16623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16624, size: 32)
!16624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!16625 = !{!16626, !16627, !16628, !16630}
!16626 = !DILocalVariable(name: "timeout", arg: 1, scope: !16620, file: !2477, line: 183, type: !16623)
!16627 = !DILocalVariable(name: "ticks", scope: !16620, file: !2477, line: 185, type: !200)
!16628 = !DILocalVariable(name: "__i", scope: !16629, file: !2477, line: 187, type: !16307)
!16629 = distinct !DILexicalBlock(scope: !16620, file: !2477, line: 187, column: 2)
!16630 = !DILocalVariable(name: "__key", scope: !16629, file: !2477, line: 187, type: !16307)
!16631 = !DILocation(line: 0, scope: !16620)
!16632 = !DILocation(line: 0, scope: !16629)
!16633 = !DILocation(line: 0, scope: !16329, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 187, column: 2, scope: !16629)
!16635 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16636)
!16636 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16634)
!16637 = !DILocation(line: 0, scope: !16338, inlinedAt: !16636)
!16638 = !DILocation(line: 188, column: 11, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16640, file: !2477, line: 187, column: 24)
!16640 = distinct !DILexicalBlock(scope: !16629, file: !2477, line: 187, column: 2)
!16641 = !DILocation(line: 0, scope: !16397, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 187, column: 2, scope: !16640)
!16643 = !DILocation(line: 0, scope: !16405, inlinedAt: !16644)
!16644 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16642)
!16645 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16644)
!16646 = !DILocation(line: 191, column: 2, scope: !16620)
!16647 = distinct !DISubprogram(name: "timeout_rem", scope: !2477, file: !2477, line: 165, type: !16621, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16648)
!16648 = !{!16649, !16650, !16651}
!16649 = !DILocalVariable(name: "timeout", arg: 1, scope: !16647, file: !2477, line: 165, type: !16623)
!16650 = !DILocalVariable(name: "ticks", scope: !16647, file: !2477, line: 167, type: !200)
!16651 = !DILocalVariable(name: "t", scope: !16652, file: !2477, line: 173, type: !2450)
!16652 = distinct !DILexicalBlock(scope: !16647, file: !2477, line: 173, column: 2)
!16653 = !DILocation(line: 0, scope: !16647)
!16654 = !DILocation(line: 169, column: 6, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16647, file: !2477, line: 169, column: 6)
!16656 = !DILocation(line: 169, column: 6, scope: !16647)
!16657 = !DILocation(line: 173, column: 28, scope: !16652)
!16658 = !DILocation(line: 0, scope: !16652)
!16659 = !DILocation(line: 173, column: 39, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16652, file: !2477, line: 173, column: 2)
!16661 = !DILocation(line: 173, column: 2, scope: !16652)
!16662 = !DILocation(line: 174, column: 15, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16660, file: !2477, line: 173, column: 61)
!16664 = !DILocation(line: 174, column: 9, scope: !16663)
!16665 = !DILocation(line: 175, column: 15, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16663, file: !2477, line: 175, column: 7)
!16667 = !DILocation(line: 175, column: 7, scope: !16663)
!16668 = !DILocation(line: 173, column: 52, scope: !16660)
!16669 = distinct !{!16669, !16661, !16670}
!16670 = !DILocation(line: 178, column: 2, scope: !16652)
!16671 = !DILocation(line: 180, column: 17, scope: !16647)
!16672 = !DILocation(line: 180, column: 15, scope: !16647)
!16673 = !DILocation(line: 180, column: 2, scope: !16647)
!16674 = !DILocation(line: 181, column: 1, scope: !16647)
!16675 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13218, file: !13218, line: 35, type: !16676, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16678)
!16676 = !DISubroutineType(types: !16677)
!16677 = !{!157, !16623}
!16678 = !{!16679}
!16679 = !DILocalVariable(name: "to", arg: 1, scope: !16675, file: !13218, line: 35, type: !16623)
!16680 = !DILocation(line: 0, scope: !16675)
!16681 = !DILocation(line: 37, column: 35, scope: !16675)
!16682 = !DILocation(line: 37, column: 10, scope: !16675)
!16683 = !DILocation(line: 37, column: 9, scope: !16675)
!16684 = !DILocation(line: 37, column: 2, scope: !16675)
!16685 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2477, file: !2477, line: 194, type: !16621, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16686)
!16686 = !{!16687, !16688, !16689, !16691}
!16687 = !DILocalVariable(name: "timeout", arg: 1, scope: !16685, file: !2477, line: 194, type: !16623)
!16688 = !DILocalVariable(name: "ticks", scope: !16685, file: !2477, line: 196, type: !200)
!16689 = !DILocalVariable(name: "__i", scope: !16690, file: !2477, line: 198, type: !16307)
!16690 = distinct !DILexicalBlock(scope: !16685, file: !2477, line: 198, column: 2)
!16691 = !DILocalVariable(name: "__key", scope: !16690, file: !2477, line: 198, type: !16307)
!16692 = !DILocation(line: 0, scope: !16685)
!16693 = !DILocation(line: 0, scope: !16690)
!16694 = !DILocation(line: 0, scope: !16329, inlinedAt: !16695)
!16695 = distinct !DILocation(line: 198, column: 2, scope: !16690)
!16696 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16695)
!16698 = !DILocation(line: 0, scope: !16338, inlinedAt: !16697)
!16699 = !DILocation(line: 199, column: 11, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16701, file: !2477, line: 198, column: 24)
!16701 = distinct !DILexicalBlock(scope: !16690, file: !2477, line: 198, column: 2)
!16702 = !DILocation(line: 199, column: 23, scope: !16700)
!16703 = !DILocation(line: 0, scope: !16397, inlinedAt: !16704)
!16704 = distinct !DILocation(line: 198, column: 2, scope: !16701)
!16705 = !DILocation(line: 0, scope: !16405, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16704)
!16707 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16706)
!16708 = !DILocation(line: 199, column: 21, scope: !16700)
!16709 = !DILocation(line: 202, column: 2, scope: !16685)
!16710 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2477, file: !2477, line: 205, type: !16413, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16711)
!16711 = !{!16712, !16713, !16715}
!16712 = !DILocalVariable(name: "ret", scope: !16710, file: !2477, line: 207, type: !745)
!16713 = !DILocalVariable(name: "__i", scope: !16714, file: !2477, line: 209, type: !16307)
!16714 = distinct !DILexicalBlock(scope: !16710, file: !2477, line: 209, column: 2)
!16715 = !DILocalVariable(name: "__key", scope: !16714, file: !2477, line: 209, type: !16307)
!16716 = !DILocation(line: 0, scope: !16710)
!16717 = !DILocation(line: 0, scope: !16714)
!16718 = !DILocation(line: 0, scope: !16329, inlinedAt: !16719)
!16719 = distinct !DILocation(line: 209, column: 2, scope: !16714)
!16720 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16721)
!16721 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16719)
!16722 = !DILocation(line: 0, scope: !16338, inlinedAt: !16721)
!16723 = !DILocation(line: 210, column: 9, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16725, file: !2477, line: 209, column: 24)
!16725 = distinct !DILexicalBlock(scope: !16714, file: !2477, line: 209, column: 2)
!16726 = !DILocation(line: 0, scope: !16397, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 209, column: 2, scope: !16725)
!16728 = !DILocation(line: 0, scope: !16405, inlinedAt: !16729)
!16729 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16727)
!16730 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16729)
!16731 = !DILocation(line: 212, column: 2, scope: !16710)
!16732 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2477, file: !2477, line: 215, type: !10858, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16733)
!16733 = !{!16734, !16735, !16736, !16738, !16739, !16742, !16743}
!16734 = !DILocalVariable(name: "ticks", arg: 1, scope: !16732, file: !2477, line: 215, type: !745)
!16735 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16732, file: !2477, line: 215, type: !157)
!16736 = !DILocalVariable(name: "__i", scope: !16737, file: !2477, line: 217, type: !16307)
!16737 = distinct !DILexicalBlock(scope: !16732, file: !2477, line: 217, column: 2)
!16738 = !DILocalVariable(name: "__key", scope: !16737, file: !2477, line: 217, type: !16307)
!16739 = !DILocalVariable(name: "next_to", scope: !16740, file: !2477, line: 218, type: !103)
!16740 = distinct !DILexicalBlock(scope: !16741, file: !2477, line: 217, column: 24)
!16741 = distinct !DILexicalBlock(scope: !16737, file: !2477, line: 217, column: 2)
!16742 = !DILocalVariable(name: "sooner", scope: !16740, file: !2477, line: 219, type: !157)
!16743 = !DILocalVariable(name: "imminent", scope: !16740, file: !2477, line: 221, type: !157)
!16744 = !DILocation(line: 0, scope: !16732)
!16745 = !DILocation(line: 0, scope: !16737)
!16746 = !DILocation(line: 0, scope: !16329, inlinedAt: !16747)
!16747 = distinct !DILocation(line: 217, column: 2, scope: !16737)
!16748 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16749)
!16749 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16747)
!16750 = !DILocation(line: 0, scope: !16338, inlinedAt: !16749)
!16751 = !DILocation(line: 218, column: 17, scope: !16740)
!16752 = !DILocation(line: 0, scope: !16740)
!16753 = !DILocation(line: 221, column: 27, scope: !16740)
!16754 = !DILocation(line: 233, column: 17, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16740, file: !2477, line: 233, column: 7)
!16756 = !DILocation(line: 234, column: 26, scope: !16757)
!16757 = distinct !DILexicalBlock(scope: !16755, file: !2477, line: 233, column: 56)
!16758 = !DILocation(line: 234, column: 4, scope: !16757)
!16759 = !DILocation(line: 235, column: 3, scope: !16757)
!16760 = !DILocation(line: 0, scope: !16397, inlinedAt: !16761)
!16761 = distinct !DILocation(line: 217, column: 2, scope: !16741)
!16762 = !DILocation(line: 0, scope: !16405, inlinedAt: !16763)
!16763 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16761)
!16764 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16763)
!16765 = !DILocation(line: 237, column: 1, scope: !16732)
!16766 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2477, file: !2477, line: 239, type: !16767, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16769)
!16767 = !DISubroutineType(types: !16768)
!16768 = !{null, !745}
!16769 = !{!16770, !16771, !16772, !16774}
!16770 = !DILocalVariable(name: "ticks", arg: 1, scope: !16766, file: !2477, line: 239, type: !745)
!16771 = !DILocalVariable(name: "key", scope: !16766, file: !2477, line: 245, type: !16307)
!16772 = !DILocalVariable(name: "t", scope: !16773, file: !2477, line: 262, type: !2450)
!16773 = distinct !DILexicalBlock(scope: !16766, file: !2477, line: 261, column: 67)
!16774 = !DILocalVariable(name: "dt", scope: !16773, file: !2477, line: 263, type: !103)
!16775 = !DILocation(line: 0, scope: !16766)
!16776 = !DILocation(line: 242, column: 2, scope: !16766)
!16777 = !DILocation(line: 0, scope: !16329, inlinedAt: !16778)
!16778 = distinct !DILocation(line: 245, column: 25, scope: !16766)
!16779 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16780)
!16780 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16778)
!16781 = !DILocation(line: 0, scope: !16338, inlinedAt: !16780)
!16782 = !DILocation(line: 261, column: 9, scope: !16766)
!16783 = !DILocation(line: 261, column: 17, scope: !16766)
!16784 = !DILocation(line: 261, column: 25, scope: !16766)
!16785 = !DILocation(line: 261, column: 37, scope: !16766)
!16786 = !DILocation(line: 261, column: 47, scope: !16766)
!16787 = !DILocation(line: 261, column: 44, scope: !16766)
!16788 = !DILocation(line: 261, column: 2, scope: !16766)
!16789 = !DILocation(line: 0, scope: !16773)
!16790 = !DILocation(line: 263, column: 12, scope: !16773)
!16791 = !DILocation(line: 265, column: 16, scope: !16773)
!16792 = !DILocation(line: 265, column: 13, scope: !16773)
!16793 = !DILocation(line: 266, column: 13, scope: !16773)
!16794 = !DILocation(line: 267, column: 3, scope: !16773)
!16795 = !DILocation(line: 0, scope: !16397, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 269, column: 3, scope: !16773)
!16797 = !DILocation(line: 0, scope: !16405, inlinedAt: !16798)
!16798 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16796)
!16799 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16798)
!16800 = !DILocation(line: 270, column: 6, scope: !16773)
!16801 = !DILocation(line: 270, column: 3, scope: !16773)
!16802 = !DILocation(line: 0, scope: !16329, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 271, column: 9, scope: !16773)
!16804 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16805)
!16805 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16803)
!16806 = !DILocation(line: 0, scope: !16338, inlinedAt: !16805)
!16807 = !DILocation(line: 272, column: 22, scope: !16773)
!16808 = distinct !{!16808, !16788, !16809}
!16809 = !DILocation(line: 273, column: 2, scope: !16766)
!16810 = !DILocation(line: 276, column: 19, scope: !16811)
!16811 = distinct !DILexicalBlock(scope: !16812, file: !2477, line: 275, column: 23)
!16812 = distinct !DILexicalBlock(scope: !16766, file: !2477, line: 275, column: 6)
!16813 = !DILocation(line: 277, column: 2, scope: !16811)
!16814 = !DILocation(line: 279, column: 15, scope: !16766)
!16815 = !DILocation(line: 279, column: 12, scope: !16766)
!16816 = !DILocation(line: 280, column: 21, scope: !16766)
!16817 = !DILocation(line: 282, column: 24, scope: !16766)
!16818 = !DILocation(line: 282, column: 2, scope: !16766)
!16819 = !DILocation(line: 0, scope: !16397, inlinedAt: !16820)
!16820 = distinct !DILocation(line: 284, column: 2, scope: !16766)
!16821 = !DILocation(line: 0, scope: !16405, inlinedAt: !16822)
!16822 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16820)
!16823 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16822)
!16824 = !DILocation(line: 285, column: 1, scope: !16766)
!16825 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2477, file: !2477, line: 287, type: !16826, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16828)
!16826 = !DISubroutineType(types: !16827)
!16827 = !{!202}
!16828 = !{!16829, !16830, !16832}
!16829 = !DILocalVariable(name: "t", scope: !16825, file: !2477, line: 289, type: !1595)
!16830 = !DILocalVariable(name: "__i", scope: !16831, file: !2477, line: 291, type: !16307)
!16831 = distinct !DILexicalBlock(scope: !16825, file: !2477, line: 291, column: 2)
!16832 = !DILocalVariable(name: "__key", scope: !16831, file: !2477, line: 291, type: !16307)
!16833 = !DILocation(line: 0, scope: !16825)
!16834 = !DILocation(line: 0, scope: !16831)
!16835 = !DILocation(line: 0, scope: !16329, inlinedAt: !16836)
!16836 = distinct !DILocation(line: 291, column: 2, scope: !16831)
!16837 = !DILocation(line: 55, column: 2, scope: !16338, inlinedAt: !16838)
!16838 = distinct !DILocation(line: 145, column: 10, scope: !16329, inlinedAt: !16836)
!16839 = !DILocation(line: 0, scope: !16338, inlinedAt: !16838)
!16840 = !DILocation(line: 292, column: 7, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16842, file: !2477, line: 291, column: 24)
!16842 = distinct !DILexicalBlock(scope: !16831, file: !2477, line: 291, column: 2)
!16843 = !DILocation(line: 292, column: 19, scope: !16841)
!16844 = !DILocation(line: 0, scope: !16397, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 291, column: 2, scope: !16842)
!16846 = !DILocation(line: 0, scope: !16405, inlinedAt: !16847)
!16847 = distinct !DILocation(line: 215, column: 2, scope: !16397, inlinedAt: !16845)
!16848 = !DILocation(line: 95, column: 2, scope: !16405, inlinedAt: !16847)
!16849 = !DILocation(line: 292, column: 17, scope: !16841)
!16850 = !DILocation(line: 294, column: 2, scope: !16825)
!16851 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2477, file: !2477, line: 297, type: !6035, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !317)
!16852 = !DILocation(line: 300, column: 19, scope: !16851)
!16853 = !DILocation(line: 300, column: 9, scope: !16851)
!16854 = !DILocation(line: 300, column: 2, scope: !16851)
!16855 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2477, file: !2477, line: 306, type: !16826, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !317)
!16856 = !DILocation(line: 308, column: 9, scope: !16855)
!16857 = !DILocation(line: 308, column: 2, scope: !16855)
!16858 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2477, file: !2477, line: 319, type: !6045, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16859)
!16859 = !{!16860, !16861, !16862, !16863}
!16860 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16858, file: !2477, line: 319, type: !121)
!16861 = !DILocalVariable(name: "start_cycles", scope: !16858, file: !2477, line: 328, type: !121)
!16862 = !DILocalVariable(name: "cycles_to_wait", scope: !16858, file: !2477, line: 331, type: !121)
!16863 = !DILocalVariable(name: "current_cycles", scope: !16864, file: !2477, line: 338, type: !121)
!16864 = distinct !DILexicalBlock(scope: !16865, file: !2477, line: 337, column: 11)
!16865 = distinct !DILexicalBlock(scope: !16866, file: !2477, line: 337, column: 2)
!16866 = distinct !DILexicalBlock(scope: !16858, file: !2477, line: 337, column: 2)
!16867 = !DILocation(line: 0, scope: !16858)
!16868 = !DILocation(line: 322, column: 19, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16858, file: !2477, line: 322, column: 6)
!16870 = !DILocation(line: 322, column: 6, scope: !16858)
!16871 = !DILocation(line: 328, column: 26, scope: !16858)
!16872 = !DILocation(line: 333, column: 43, scope: !16858)
!16873 = !DILocation(line: 337, column: 2, scope: !16858)
!16874 = !DILocation(line: 338, column: 29, scope: !16864)
!16875 = !DILocation(line: 0, scope: !16864)
!16876 = !DILocation(line: 341, column: 23, scope: !16877)
!16877 = distinct !DILexicalBlock(scope: !16864, file: !2477, line: 341, column: 7)
!16878 = !DILocation(line: 341, column: 39, scope: !16877)
!16879 = !DILocation(line: 349, column: 1, scope: !16858)
!16880 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !296, file: !296, line: 1675, type: !6035, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !317)
!16881 = !DILocation(line: 1677, column: 9, scope: !16880)
!16882 = !DILocation(line: 1677, column: 2, scope: !16880)
!16883 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16884, file: !16884, line: 24, type: !6035, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !317)
!16884 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16885 = !DILocation(line: 26, column: 9, scope: !16883)
!16886 = !DILocation(line: 26, column: 2, scope: !16883)
!16887 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2477, file: !2477, line: 364, type: !16888, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !16890)
!16888 = !DISubroutineType(types: !16889)
!16889 = !{!1595, !16297}
!16890 = !{!16891, !16892}
!16891 = !DILocalVariable(name: "timeout", arg: 1, scope: !16887, file: !2477, line: 364, type: !16297)
!16892 = !DILocalVariable(name: "dt", scope: !16887, file: !2477, line: 366, type: !200)
!16893 = !DILocation(line: 0, scope: !16887)
!16894 = !DILocation(line: 368, column: 6, scope: !16887)
!16895 = !DILocation(line: 371, column: 10, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !2477, line: 370, column: 47)
!16897 = distinct !DILexicalBlock(scope: !16898, file: !2477, line: 370, column: 13)
!16898 = distinct !DILexicalBlock(scope: !16887, file: !2477, line: 368, column: 6)
!16899 = !DILocation(line: 371, column: 3, scope: !16896)
!16900 = !DILocation(line: 376, column: 58, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2477, line: 376, column: 7)
!16902 = distinct !DILexicalBlock(scope: !16897, file: !2477, line: 372, column: 9)
!16903 = !DILocation(line: 376, column: 7, scope: !16902)
!16904 = !DILocation(line: 376, column: 43, scope: !16901)
!16905 = !DILocation(line: 377, column: 4, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16901, file: !2477, line: 376, column: 64)
!16907 = !DILocation(line: 379, column: 10, scope: !16902)
!16908 = !DILocation(line: 379, column: 33, scope: !16902)
!16909 = !DILocation(line: 379, column: 31, scope: !16902)
!16910 = !DILocation(line: 379, column: 3, scope: !16902)
!16911 = !DILocation(line: 0, scope: !16898)
!16912 = !DILocation(line: 381, column: 1, scope: !16887)
!16913 = distinct !DISubprogram(name: "k_free", scope: !16914, file: !16914, line: 43, type: !5891, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !16915)
!16914 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16915 = !{!16916, !16917}
!16916 = !DILocalVariable(name: "ptr", arg: 1, scope: !16913, file: !16914, line: 43, type: !102)
!16917 = !DILocalVariable(name: "heap_ref", scope: !16913, file: !16914, line: 45, type: !16918)
!16918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16919, size: 32)
!16919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16920, size: 32)
!16920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !16921)
!16921 = !{!16922, !16928, !16947}
!16922 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16920, file: !296, line: 5074, baseType: !16923, size: 96)
!16923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !16924)
!16924 = !{!16925, !16926, !16927}
!16925 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16923, file: !472, line: 57, baseType: !475, size: 32)
!16926 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16923, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!16927 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16923, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!16928 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16920, file: !296, line: 5075, baseType: !16929, size: 64, offset: 96)
!16929 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !16930)
!16930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !16931)
!16931 = !{!16932}
!16932 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16930, file: !320, line: 232, baseType: !16933, size: 64)
!16933 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !16934)
!16934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !325, line: 37, size: 64, elements: !16935)
!16935 = !{!16936, !16942}
!16936 = !DIDerivedType(tag: DW_TAG_member, scope: !16934, file: !325, line: 38, baseType: !16937, size: 32)
!16937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16934, file: !325, line: 38, size: 32, elements: !16938)
!16938 = !{!16939, !16941}
!16939 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !16937, file: !325, line: 39, baseType: !16940, size: 32)
!16940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16934, size: 32)
!16941 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !16937, file: !325, line: 40, baseType: !16940, size: 32)
!16942 = !DIDerivedType(tag: DW_TAG_member, scope: !16934, file: !325, line: 42, baseType: !16943, size: 32, offset: 32)
!16943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16934, file: !325, line: 42, size: 32, elements: !16944)
!16944 = !{!16945, !16946}
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !16943, file: !325, line: 43, baseType: !16940, size: 32)
!16946 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !16943, file: !325, line: 44, baseType: !16940, size: 32)
!16947 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16920, file: !296, line: 5076, baseType: !16948, offset: 160)
!16948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!16949 = !DILocation(line: 0, scope: !16913)
!16950 = !DILocation(line: 47, column: 10, scope: !16951)
!16951 = distinct !DILexicalBlock(scope: !16913, file: !16914, line: 47, column: 6)
!16952 = !DILocation(line: 47, column: 6, scope: !16913)
!16953 = !DILocation(line: 49, column: 9, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16951, file: !16914, line: 47, column: 19)
!16955 = !DILocation(line: 53, column: 15, scope: !16954)
!16956 = !DILocation(line: 53, column: 3, scope: !16954)
!16957 = !DILocation(line: 56, column: 2, scope: !16954)
!16958 = !DILocation(line: 57, column: 1, scope: !16913)
!16959 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !16914, file: !16914, line: 124, type: !16960, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !16962)
!16960 = !DISubroutineType(types: !16961)
!16961 = !{!102, !204, !204}
!16962 = !{!16963, !16964, !16965, !16966}
!16963 = !DILocalVariable(name: "align", arg: 1, scope: !16959, file: !16914, line: 124, type: !204)
!16964 = !DILocalVariable(name: "size", arg: 2, scope: !16959, file: !16914, line: 124, type: !204)
!16965 = !DILocalVariable(name: "ret", scope: !16959, file: !16914, line: 126, type: !102)
!16966 = !DILocalVariable(name: "heap", scope: !16959, file: !16914, line: 127, type: !16919)
!16967 = !DILocation(line: 0, scope: !16959)
!16968 = !DILocation(line: 129, column: 6, scope: !16969)
!16969 = distinct !DILexicalBlock(scope: !16959, file: !16914, line: 129, column: 6)
!16970 = !DILocation(line: 129, column: 6, scope: !16959)
!16971 = !DILocation(line: 132, column: 10, scope: !16972)
!16972 = distinct !DILexicalBlock(scope: !16969, file: !16914, line: 131, column: 9)
!16973 = !DILocation(line: 132, column: 20, scope: !16972)
!16974 = !DILocation(line: 135, column: 11, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16959, file: !16914, line: 135, column: 6)
!16976 = !DILocation(line: 135, column: 6, scope: !16959)
!16977 = !DILocation(line: 136, column: 9, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16975, file: !16914, line: 135, column: 20)
!16979 = !DILocation(line: 137, column: 2, scope: !16978)
!16980 = !DILocation(line: 0, scope: !16975)
!16981 = !DILocation(line: 141, column: 2, scope: !16959)
!16982 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !16914, file: !16914, line: 12, type: !16983, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !16985)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{!102, !16919, !204, !204}
!16985 = !{!16986, !16987, !16988, !16989, !16990, !16991}
!16986 = !DILocalVariable(name: "heap", arg: 1, scope: !16982, file: !16914, line: 12, type: !16919)
!16987 = !DILocalVariable(name: "align", arg: 2, scope: !16982, file: !16914, line: 12, type: !204)
!16988 = !DILocalVariable(name: "size", arg: 3, scope: !16982, file: !16914, line: 12, type: !204)
!16989 = !DILocalVariable(name: "mem", scope: !16982, file: !16914, line: 14, type: !102)
!16990 = !DILocalVariable(name: "heap_ref", scope: !16982, file: !16914, line: 15, type: !16918)
!16991 = !DILocalVariable(name: "__align", scope: !16982, file: !16914, line: 16, type: !204)
!16992 = !DILocation(line: 0, scope: !16982)
!16993 = !DILocation(line: 24, column: 6, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16982, file: !16914, line: 24, column: 6)
!16995 = !DILocation(line: 24, column: 6, scope: !16982)
!16996 = !DILocation(line: 27, column: 18, scope: !16982)
!16997 = !DILocation(line: 29, column: 44, scope: !16982)
!16998 = !DILocation(line: 29, column: 8, scope: !16982)
!16999 = !DILocation(line: 30, column: 10, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !16982, file: !16914, line: 30, column: 6)
!17001 = !DILocation(line: 30, column: 6, scope: !16982)
!17002 = !DILocation(line: 34, column: 13, scope: !16982)
!17003 = !DILocation(line: 35, column: 12, scope: !16982)
!17004 = !DILocation(line: 36, column: 8, scope: !16982)
!17005 = !DILocation(line: 40, column: 2, scope: !16982)
!17006 = !DILocation(line: 41, column: 1, scope: !16982)
!17007 = distinct !DISubprogram(name: "size_add_overflow", scope: !17008, file: !17008, line: 47, type: !17009, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3158, retainedNodes: !17011)
!17008 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17009 = !DISubroutineType(types: !17010)
!17010 = !{!157, !204, !204, !2590}
!17011 = !{!17012, !17013, !17014}
!17012 = !DILocalVariable(name: "a", arg: 1, scope: !17007, file: !17008, line: 47, type: !204)
!17013 = !DILocalVariable(name: "b", arg: 2, scope: !17007, file: !17008, line: 47, type: !204)
!17014 = !DILocalVariable(name: "result", arg: 3, scope: !17007, file: !17008, line: 47, type: !2590)
!17015 = !DILocation(line: 0, scope: !17007)
!17016 = !DILocation(line: 49, column: 9, scope: !17007)
!17017 = !DILocation(line: 49, column: 2, scope: !17007)
!17018 = distinct !DISubprogram(name: "boot_banner", scope: !17019, file: !17019, line: 26, type: !3174, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3160, retainedNodes: !317)
!17019 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17020 = !DILocation(line: 34, column: 2, scope: !17018)
!17021 = !DILocation(line: 36, column: 1, scope: !17018)
!17022 = distinct !DISubprogram(name: "statics_init", scope: !2505, file: !2505, line: 21, type: !2511, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17023)
!17023 = !{!17024, !17025}
!17024 = !DILocalVariable(name: "unused", arg: 1, scope: !17022, file: !2505, line: 21, type: !2513)
!17025 = !DILocalVariable(name: "h", scope: !17026, file: !2505, line: 24, type: !17027)
!17026 = distinct !DILexicalBlock(scope: !17022, file: !2505, line: 24, column: 2)
!17027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17028, size: 32)
!17028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !296, line: 5073, size: 160, elements: !17029)
!17029 = !{!17030, !17036, !17042}
!17030 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17028, file: !296, line: 5074, baseType: !17031, size: 96)
!17031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !472, line: 56, size: 96, elements: !17032)
!17032 = !{!17033, !17034, !17035}
!17033 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17031, file: !472, line: 57, baseType: !475, size: 32)
!17034 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17031, file: !472, line: 58, baseType: !102, size: 32, offset: 32)
!17035 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17031, file: !472, line: 59, baseType: !204, size: 32, offset: 64)
!17036 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17028, file: !296, line: 5075, baseType: !17037, size: 64, offset: 96)
!17037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !320, line: 233, baseType: !17038)
!17038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !320, line: 231, size: 64, elements: !17039)
!17039 = !{!17040}
!17040 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17038, file: !320, line: 232, baseType: !17041, size: 64)
!17041 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !325, line: 48, baseType: !2491)
!17042 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17028, file: !296, line: 5076, baseType: !17043, offset: 160)
!17043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !316, line: 43, elements: !317)
!17044 = !DILocation(line: 0, scope: !17022)
!17045 = !DILocation(line: 0, scope: !17026)
!17046 = !DILocation(line: 24, column: 2, scope: !17026)
!17047 = !DILocation(line: 52, column: 2, scope: !17022)
!17048 = !DILocation(line: 49, column: 27, scope: !17049)
!17049 = distinct !DILexicalBlock(scope: !17050, file: !2505, line: 48, column: 3)
!17050 = distinct !DILexicalBlock(scope: !17051, file: !2505, line: 24, column: 36)
!17051 = distinct !DILexicalBlock(scope: !17026, file: !2505, line: 24, column: 2)
!17052 = !DILocation(line: 49, column: 45, scope: !17049)
!17053 = !DILocation(line: 49, column: 4, scope: !17049)
!17054 = !DILocation(line: 24, column: 2, scope: !17051)
!17055 = !DILocation(line: 24, column: 2, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17051, file: !2505, line: 24, column: 2)
!17057 = distinct !{!17057, !17046, !17058}
!17058 = !DILocation(line: 51, column: 2, scope: !17026)
!17059 = distinct !DISubprogram(name: "k_heap_init", scope: !2505, file: !2505, line: 13, type: !17060, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17062)
!17060 = !DISubroutineType(types: !17061)
!17061 = !{null, !17027, !102, !204}
!17062 = !{!17063, !17064, !17065}
!17063 = !DILocalVariable(name: "h", arg: 1, scope: !17059, file: !2505, line: 13, type: !17027)
!17064 = !DILocalVariable(name: "mem", arg: 2, scope: !17059, file: !2505, line: 13, type: !102)
!17065 = !DILocalVariable(name: "bytes", arg: 3, scope: !17059, file: !2505, line: 13, type: !204)
!17066 = !DILocation(line: 0, scope: !17059)
!17067 = !DILocation(line: 15, column: 19, scope: !17059)
!17068 = !DILocation(line: 15, column: 2, scope: !17059)
!17069 = !DILocation(line: 16, column: 20, scope: !17059)
!17070 = !DILocation(line: 16, column: 2, scope: !17059)
!17071 = !DILocation(line: 19, column: 1, scope: !17059)
!17072 = distinct !DISubprogram(name: "z_waitq_init", scope: !13150, file: !13150, line: 47, type: !17073, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17076)
!17073 = !DISubroutineType(types: !17074)
!17074 = !{null, !17075}
!17075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17037, size: 32)
!17076 = !{!17077}
!17077 = !DILocalVariable(name: "w", arg: 1, scope: !17072, file: !13150, line: 47, type: !17075)
!17078 = !DILocation(line: 0, scope: !17072)
!17079 = !DILocation(line: 49, column: 21, scope: !17072)
!17080 = !DILocation(line: 49, column: 2, scope: !17072)
!17081 = !DILocation(line: 50, column: 1, scope: !17072)
!17082 = distinct !DISubprogram(name: "sys_dlist_init", scope: !325, file: !325, line: 197, type: !17083, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17086)
!17083 = !DISubroutineType(types: !17084)
!17084 = !{null, !17085}
!17085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17041, size: 32)
!17086 = !{!17087}
!17087 = !DILocalVariable(name: "list", arg: 1, scope: !17082, file: !325, line: 197, type: !17085)
!17088 = !DILocation(line: 0, scope: !17082)
!17089 = !DILocation(line: 199, column: 8, scope: !17082)
!17090 = !DILocation(line: 199, column: 13, scope: !17082)
!17091 = !DILocation(line: 200, column: 8, scope: !17082)
!17092 = !DILocation(line: 200, column: 13, scope: !17082)
!17093 = !DILocation(line: 201, column: 1, scope: !17082)
!17094 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2505, file: !2505, line: 64, type: !17095, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17101)
!17095 = !DISubroutineType(types: !17096)
!17096 = !{!102, !17027, !204, !204, !17097}
!17097 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !201, line: 67, baseType: !17098)
!17098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 65, size: 64, elements: !17099)
!17099 = !{!17100}
!17100 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17098, file: !201, line: 66, baseType: !200, size: 64)
!17101 = !{!17102, !17103, !17104, !17105, !17106, !17107, !17108, !17109, !17114}
!17102 = !DILocalVariable(name: "h", arg: 1, scope: !17094, file: !2505, line: 64, type: !17027)
!17103 = !DILocalVariable(name: "align", arg: 2, scope: !17094, file: !2505, line: 64, type: !204)
!17104 = !DILocalVariable(name: "bytes", arg: 3, scope: !17094, file: !2505, line: 64, type: !204)
!17105 = !DILocalVariable(name: "timeout", arg: 4, scope: !17094, file: !2505, line: 65, type: !17097)
!17106 = !DILocalVariable(name: "now", scope: !17094, file: !2505, line: 67, type: !202)
!17107 = !DILocalVariable(name: "end", scope: !17094, file: !2505, line: 67, type: !202)
!17108 = !DILocalVariable(name: "ret", scope: !17094, file: !2505, line: 68, type: !102)
!17109 = !DILocalVariable(name: "key", scope: !17094, file: !2505, line: 72, type: !17110)
!17110 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !316, line: 106, baseType: !17111)
!17111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !316, line: 32, size: 32, elements: !17112)
!17112 = !{!17113}
!17113 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17111, file: !316, line: 33, baseType: !103, size: 32)
!17114 = !DILocalVariable(name: "blocked_alloc", scope: !17094, file: !2505, line: 78, type: !157)
!17115 = !DILocation(line: 0, scope: !17094)
!17116 = !DILocation(line: 67, column: 21, scope: !17094)
!17117 = !DILocation(line: 70, column: 8, scope: !17094)
!17118 = !DILocation(line: 72, column: 41, scope: !17094)
!17119 = !DILocalVariable(name: "l", arg: 1, scope: !17120, file: !316, line: 136, type: !17123)
!17120 = distinct !DISubprogram(name: "k_spin_lock", scope: !316, file: !316, line: 136, type: !17121, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17124)
!17121 = !DISubroutineType(types: !17122)
!17122 = !{!17110, !17123}
!17123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17043, size: 32)
!17124 = !{!17119, !17125}
!17125 = !DILocalVariable(name: "k", scope: !17120, file: !316, line: 139, type: !17110)
!17126 = !DILocation(line: 0, scope: !17120, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 72, column: 25, scope: !17094)
!17128 = !DILocation(line: 55, column: 2, scope: !17129, inlinedAt: !17133)
!17129 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5739, file: !5739, line: 42, type: !5740, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17130)
!17130 = !{!17131, !17132}
!17131 = !DILocalVariable(name: "key", scope: !17129, file: !5739, line: 44, type: !32)
!17132 = !DILocalVariable(name: "tmp", scope: !17129, file: !5739, line: 53, type: !32)
!17133 = distinct !DILocation(line: 145, column: 10, scope: !17120, inlinedAt: !17127)
!17134 = !{i64 2239815}
!17135 = !DILocation(line: 0, scope: !17129, inlinedAt: !17133)
!17136 = !DILocation(line: 81, column: 9, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17094, file: !2505, line: 80, column: 22)
!17138 = !DILocation(line: 83, column: 9, scope: !17137)
!17139 = !DILocation(line: 85, column: 12, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17137, file: !2505, line: 84, column: 7)
!17141 = !DILocation(line: 85, column: 21, scope: !17140)
!17142 = !DILocation(line: 85, column: 30, scope: !17140)
!17143 = !DILocation(line: 85, column: 37, scope: !17140)
!17144 = !DILocation(line: 84, column: 7, scope: !17137)
!17145 = !DILocation(line: 99, column: 10, scope: !17137)
!17146 = !DILocation(line: 0, scope: !17120, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 101, column: 9, scope: !17137)
!17148 = !DILocation(line: 55, column: 2, scope: !17129, inlinedAt: !17149)
!17149 = distinct !DILocation(line: 145, column: 10, scope: !17120, inlinedAt: !17147)
!17150 = !DILocation(line: 0, scope: !17129, inlinedAt: !17149)
!17151 = distinct !{!17151, !17152, !17153}
!17152 = !DILocation(line: 80, column: 2, scope: !17094)
!17153 = !DILocation(line: 102, column: 2, scope: !17094)
!17154 = !DILocalVariable(name: "key", arg: 2, scope: !17155, file: !316, line: 190, type: !17110)
!17155 = distinct !DISubprogram(name: "k_spin_unlock", scope: !316, file: !316, line: 189, type: !17156, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17158)
!17156 = !DISubroutineType(types: !17157)
!17157 = !{null, !17123, !17110}
!17158 = !{!17159, !17154}
!17159 = !DILocalVariable(name: "l", arg: 1, scope: !17155, file: !316, line: 189, type: !17123)
!17160 = !DILocation(line: 0, scope: !17155, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 106, column: 2, scope: !17094)
!17162 = !DILocalVariable(name: "key", arg: 1, scope: !17163, file: !5739, line: 84, type: !32)
!17163 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5739, file: !5739, line: 84, type: !5750, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17164)
!17164 = !{!17162}
!17165 = !DILocation(line: 0, scope: !17163, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 215, column: 2, scope: !17155, inlinedAt: !17161)
!17167 = !DILocation(line: 95, column: 2, scope: !17163, inlinedAt: !17166)
!17168 = !{i64 2240632}
!17169 = !DILocation(line: 107, column: 2, scope: !17094)
!17170 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2505, file: !2505, line: 110, type: !17171, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17173)
!17171 = !DISubroutineType(types: !17172)
!17172 = !{!102, !17027, !204, !17097}
!17173 = !{!17174, !17175, !17176, !17177}
!17174 = !DILocalVariable(name: "h", arg: 1, scope: !17170, file: !2505, line: 110, type: !17027)
!17175 = !DILocalVariable(name: "bytes", arg: 2, scope: !17170, file: !2505, line: 110, type: !204)
!17176 = !DILocalVariable(name: "timeout", arg: 3, scope: !17170, file: !2505, line: 110, type: !17097)
!17177 = !DILocalVariable(name: "ret", scope: !17170, file: !2505, line: 114, type: !102)
!17178 = !DILocation(line: 0, scope: !17170)
!17179 = !DILocation(line: 114, column: 14, scope: !17170)
!17180 = !DILocation(line: 118, column: 2, scope: !17170)
!17181 = distinct !DISubprogram(name: "k_heap_free", scope: !2505, file: !2505, line: 121, type: !17182, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !17184)
!17182 = !DISubroutineType(types: !17183)
!17183 = !{null, !17027, !102}
!17184 = !{!17185, !17186, !17187}
!17185 = !DILocalVariable(name: "h", arg: 1, scope: !17181, file: !2505, line: 121, type: !17027)
!17186 = !DILocalVariable(name: "mem", arg: 2, scope: !17181, file: !2505, line: 121, type: !102)
!17187 = !DILocalVariable(name: "key", scope: !17181, file: !2505, line: 123, type: !17110)
!17188 = !DILocation(line: 0, scope: !17181)
!17189 = !DILocation(line: 0, scope: !17120, inlinedAt: !17190)
!17190 = distinct !DILocation(line: 123, column: 25, scope: !17181)
!17191 = !DILocation(line: 55, column: 2, scope: !17129, inlinedAt: !17192)
!17192 = distinct !DILocation(line: 145, column: 10, scope: !17120, inlinedAt: !17190)
!17193 = !DILocation(line: 0, scope: !17129, inlinedAt: !17192)
!17194 = !DILocation(line: 125, column: 20, scope: !17181)
!17195 = !DILocation(line: 125, column: 2, scope: !17181)
!17196 = !DILocation(line: 128, column: 60, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17181, file: !2505, line: 128, column: 6)
!17198 = !DILocation(line: 128, column: 43, scope: !17197)
!17199 = !DILocation(line: 128, column: 68, scope: !17197)
!17200 = !DILocation(line: 128, column: 6, scope: !17181)
!17201 = !DILocation(line: 123, column: 41, scope: !17181)
!17202 = !DILocation(line: 129, column: 3, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17197, file: !2505, line: 128, column: 74)
!17204 = !DILocation(line: 130, column: 2, scope: !17203)
!17205 = !DILocation(line: 0, scope: !17155, inlinedAt: !17206)
!17206 = distinct !DILocation(line: 131, column: 3, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17197, file: !2505, line: 130, column: 9)
!17208 = !DILocation(line: 0, scope: !17163, inlinedAt: !17209)
!17209 = distinct !DILocation(line: 215, column: 2, scope: !17155, inlinedAt: !17206)
!17210 = !DILocation(line: 95, column: 2, scope: !17163, inlinedAt: !17209)
!17211 = !DILocation(line: 133, column: 1, scope: !17181)
