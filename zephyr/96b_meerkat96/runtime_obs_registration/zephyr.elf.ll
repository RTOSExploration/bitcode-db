; ModuleID = 'build/96b_meerkat96/runtime_obs_registration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct._slist*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._snode = type { %struct._snode* }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.zbus_observer.19 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.18*)* }
%struct.zbus_channel.18 = type { i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct._slist*, %struct.zbus_observer.19** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.sensor_msg = type { i32, i32, i32 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_mem_slab = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i32 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.k_spinlock, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct.imx_gpio_data = type { %struct.k_spinlock, %struct._slist }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.60], [13808 x i8], [191 x %struct.anon.60], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.60 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.60] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.zbus_observer_node = type { %struct._snode, %struct.zbus_observer.19* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.60], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536858768 to i8*), void (i8*)* inttoptr (i32 536857961 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536858744 to i8*), void (i8*)* inttoptr (i32 536846049 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536858744 to i8*), void (i8*)* inttoptr (i32 536846049 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [30 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_consumer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_consumer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub, i32 0, i32 0), i8* bitcast (%struct.k_mutex* @_zbus_mutex_processed_data_chan to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_state_change_sub to i8*), i8* getelementptr inbounds (%struct.zbus_observer.19, %struct.zbus_observer.19* @filter_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel.18* @processed_data_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer.19, %struct.zbus_observer.19* @state_change_sub, i32 0, i32 0), i8* bitcast (%struct._static_thread_data* @_k_thread_data_produce_thread_id to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_raw_data_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_state_chan to i8*), i8* bitcast (%struct.zbus_channel.18* @raw_data_chan to i8*), i8* bitcast (%struct.zbus_channel.18* @state_chan to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.k_mem_slab* @_zbus_runtime_obs_pool to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_init_mem_slab_module to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_consumer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_consumer_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_consumer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.0", align 4, !dbg !336
@_k_thread_obj_consumer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !346
@_k_thread_stack_consumer_thread_id = dso_local global [512 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.1", align 8, !dbg !341
@.str = private unnamed_addr constant [19 x i8] c"consumer_thread_id\00", align 1
@_k_thread_data_consumer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_consumer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([512 x %struct.z_thread_stack_element], [512 x %struct.z_thread_stack_element]* @_k_thread_stack_consumer_thread_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @consumer_subscriber_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_consumer_thread_id", align 4, !dbg !299
@consumer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_consumer_thread_id, align 4, !dbg !332
@.str.1 = private unnamed_addr constant [47 x i8] c"%c:  --> Consuming data: Acc x=%d, y=%d, z=%d\0A\00", align 1
@_zbus_mutex_processed_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_processed_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_processed_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_processed_data_chan", align 4, !dbg !348
@_zbus_message_processed_data_chan = internal global %struct.sensor_msg zeroinitializer, align 4, !dbg !523
@_runtime_observers_processed_data_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !516
@_zbus_observers_processed_data_chan = internal constant [2 x %struct.zbus_observer.19*] [%struct.zbus_observer.19* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), %struct.zbus_observer.19* null], align 4, !dbg !531
@processed_data_chan = dso_local constant %struct.zbus_channel.18 { i16 12, i8* null, i8* bitcast (%struct.sensor_msg* @_zbus_message_processed_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_processed_data_chan, %struct._slist* @_runtime_observers_processed_data_chan, %struct.zbus_observer.19** getelementptr inbounds ([2 x %struct.zbus_observer.19*], [2 x %struct.zbus_observer.19*]* @_zbus_observers_processed_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.processed_data_chan", align 4, !dbg !354
@filter_lis = dso_local global %struct.zbus_observer.19 { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel.18*)* @filter_callback }, section "._zbus_observer.static.filter_lis", align 4, !dbg !510
@_zbus_observer_queue_state_change_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i64 1, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_k_fifo_buf__zbus_observer_queue_state_change_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_state_change_sub", align 4, !dbg !512
@_k_fifo_buf__zbus_observer_queue_state_change_sub = internal global [20 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !518
@.str.2 = private unnamed_addr constant [20 x i8] c"%c: System started\0A\00", align 1
@.str.1.3 = private unnamed_addr constant [23 x i8] c"%c: Activating filter\0A\00", align 1
@.str.2.4 = private unnamed_addr constant [25 x i8] c"%c: Deactivating filter\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"%c: Bypass filter\0A\00", align 1
@consumer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.consumer_sub", align 4, !dbg !112
@.str.4 = private unnamed_addr constant [27 x i8] c"%c: Disable bypass filter\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"%c:  -|- Filtering data\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@_zbus_mutex_raw_data_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_raw_data_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_raw_data_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_raw_data_chan", align 4, !dbg !534
@_zbus_message_raw_data_chan = internal global %struct.sensor_msg zeroinitializer, align 4, !dbg !733
@_runtime_observers_raw_data_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !724
@_zbus_observers_raw_data_chan = internal constant [1 x %struct.zbus_observer.19*] zeroinitializer, align 4, !dbg !740
@raw_data_chan = dso_local constant %struct.zbus_channel.18 { i16 12, i8* null, i8* bitcast (%struct.sensor_msg* @_zbus_message_raw_data_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_raw_data_chan, %struct._slist* @_runtime_observers_raw_data_chan, %struct.zbus_observer.19** getelementptr inbounds ([1 x %struct.zbus_observer.19*], [1 x %struct.zbus_observer.19*]* @_zbus_observers_raw_data_chan, i32 0, i32 0) }, section "._zbus_channel.static.raw_data_chan", align 4, !dbg !539
@_zbus_mutex_state_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_state_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_state_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_state_chan", align 4, !dbg !695
@_zbus_message_state_chan = internal global i8 0, align 1, !dbg !745
@_runtime_observers_state_chan = internal global %struct._slist zeroinitializer, align 4, !dbg !726
@_zbus_observers_state_chan = internal constant [2 x %struct.zbus_observer.19*] [%struct.zbus_observer.19* @state_change_sub, %struct.zbus_observer.19* null], align 4, !dbg !747
@state_chan = dso_local constant %struct.zbus_channel.18 { i16 1, i8* null, i8* @_zbus_message_state_chan, i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_state_chan, %struct._slist* @_runtime_observers_state_chan, %struct.zbus_observer.19** getelementptr inbounds ([2 x %struct.zbus_observer.19*], [2 x %struct.zbus_observer.19*]* @_zbus_observers_state_chan, i32 0, i32 0) }, section "._zbus_channel.static.state_chan", align 4, !dbg !697
@_k_thread_obj_produce_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !731
@_k_thread_stack_produce_thread_id = dso_local global [512 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.0", align 8, !dbg !728
@.str.10 = private unnamed_addr constant [18 x i8] c"produce_thread_id\00", align 1
@_k_thread_data_produce_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_produce_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([512 x %struct.z_thread_stack_element], [512 x %struct.z_thread_stack_element]* @_k_thread_stack_produce_thread_id, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 3, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_produce_thread_id", align 4, !dbg !699
@produce_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_produce_thread_id, align 4, !dbg !720
@state_change_sub = dso_local global %struct.zbus_observer.19 { i8 1, %struct.k_msgq* @_zbus_observer_queue_state_change_sub, void (%struct.zbus_channel.18*)* null }, section "._zbus_observer.static.state_change_sub", align 4, !dbg !514
@.str.1.11 = private unnamed_addr constant [27 x i8] c"%c:  >-- Raw data fetched\0A\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !750
@.str.1.15 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.16 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.17 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.18 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.19 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.20 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.21 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.22 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.23 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.24 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !774
@.str.25 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.26 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.27 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.28 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.29 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.30 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.31 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.32 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.33 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.34 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.35 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.36 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.37 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.38 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !784
@.str.49 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.51 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.52 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.50 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.54 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.55 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.53 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.56 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.57 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.58 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.59 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.60 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.61 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.62 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.63 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.66 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.67 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.68 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.69 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.80 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.72 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.73 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.74 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.75 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.76 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.77 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.78 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.79 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.71 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.70 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1213
@.str.92 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), i8 3 }, section ".log_const_zbus", align 4, !dbg !1223
@.str.1.96 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.97 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.98 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.99 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.100 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.101 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.102 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.103 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.112 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.113 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.104 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.105 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.106 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.17.107 = private unnamed_addr constant [63 x i8] c"\09could not deliver notification to observer %s. Error code %d\0A\00", align 1
@_zbus_runtime_obs_pool = internal global %struct.k_mem_slab { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @_zbus_runtime_obs_pool, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @_zbus_runtime_obs_pool, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 2, i32 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_mem_slab_buf__zbus_runtime_obs_pool, i32 0, i32 0), i8* null, i32 0 }, section "._k_mem_slab.static._zbus_runtime_obs_pool", align 4, !dbg !1393
@_k_mem_slab_buf__zbus_runtime_obs_pool = internal global [16 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/zbus/zbus_runtime_observers.c\22.k_mem_slab_buf__zbus_runtime_obs_pool", align 4, !dbg !1558
@.str.117 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.118 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.2.119 = private unnamed_addr constant [49 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus_runtime_observers.c\00", align 1
@.str.3.120 = private unnamed_addr constant [14 x i8] c"\09ISR blocked\0A\00", align 1
@.str.4.121 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.5.122 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.6.123 = private unnamed_addr constant [19 x i8] c"obs != ((void *)0)\00", align 1
@.str.7.124 = private unnamed_addr constant [18 x i8] c"\09obs is required\0A\00", align 1
@.str.8.129 = private unnamed_addr constant [58 x i8] c"%c: Could not allocate memory on runtime observers pool\0A\0A\00", align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1570
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !1675
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1857
@.str.135 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.k_spinlock { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1810
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1841
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1808
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1796
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.135, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1784
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1786
@.str.1.136 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.151 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25.152 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26.137 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27.138 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28.139 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29.140 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.141 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1843
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1854
@.str.31.154 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1862
@.str.157 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1868
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !2126
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !2124
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !2118
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.157, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2109
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2111
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !2128
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2130
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !2133
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !2136
@overflow_cyc = internal global i32 0, align 4, !dbg !2147
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2405
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2407
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2403
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2398
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2372
@.str.161 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.162 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.163 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.164 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.165 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.166 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !2409
@.str.172 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.173 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.174 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.175 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.176 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.179 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.180 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.181 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.184 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.185 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.186 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.193 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.194 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.195 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.196 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.203 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.204 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.205 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2439
@.str.212 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.216 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.217 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.218 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.219 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.220 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.221 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.222 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.226 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.227 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.228 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.229 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.230 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.225 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.224 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.226, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.227, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.228, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.229, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.230, i32 0, i32 0)], align 4
@.str.232 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.232, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2445
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2664
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2651
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2659
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2671
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2676
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.241 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@__init_init_mem_slab_module = internal constant %struct.init_entry { i32 (%struct.device*)* @init_mem_slab_module, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2704
@_k_mem_slab_list_start = external dso_local global [0 x %struct.k_mem_slab], align 4
@_k_mem_slab_list_end = external dso_local global [0 x %struct.k_mem_slab], align 4
@.str.243 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.244 = private unnamed_addr constant [29 x i8] c"slab <= _k_mem_slab_list_end\00", align 1
@.str.2.245 = private unnamed_addr constant [30 x i8] c"ZEPHYR_BASE/kernel/mem_slab.c\00", align 1
@.str.3.246 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.4.249 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.250 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.251 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.252 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.253 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.265, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.266, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.267, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.261, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.268, i32 0, i32 0)], align 4, !dbg !2732
@.str.262 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.263 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.264 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.265 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.266 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.267 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.261 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.268 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2840
@.str.8.260 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.271 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.272 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.273 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.274 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.277 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.278 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.281 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.282 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.292 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.293 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.294 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.299 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.300 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.301 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.302 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.303 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.304 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.305 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.306 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.307 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.314 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.315 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.316 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.317 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.318 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2854
@.str.4.329 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.319 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.320 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.321 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.322 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.323 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2958
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !3062
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !3065
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !3067
@.str.330 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.352 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.337 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.359 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.371 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.340 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.366 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.336 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.376 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.377 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.385 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.386 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.387 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.388 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.331 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.332 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.333 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.334 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.335 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.339 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.356 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.367 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.368 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2661
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2669
@.str.23.380 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.394 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.395 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.396 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.397 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !3069
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !3099
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !3104
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2532
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !3102
@.str.4.398 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.399 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.400 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.404 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.405 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !3110
@.str.428 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.437 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.430 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.438 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.429 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.431 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.434 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.435 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.436 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.439 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.440 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3894 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3896, !srcloc !3897
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3898, !srcloc !3899
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3900, !srcloc !3901
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3902, !srcloc !3903
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3904, !srcloc !3905
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3906, !srcloc !3907
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3908, !srcloc !3909
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3910, !srcloc !3911
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3912, !srcloc !3913
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3914, !srcloc !3915
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3916, !srcloc !3917
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3918, !srcloc !3919
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3920, !srcloc !3921
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3922, !srcloc !3923
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3924, !srcloc !3925
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3926, !srcloc !3927
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3928, !srcloc !3929
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #23, !dbg !3930, !srcloc !3931
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3932, !srcloc !3933
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #23, !dbg !3934, !srcloc !3935
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3936, !srcloc !3937
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3938, !srcloc !3939
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3940, !srcloc !3941
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3942, !srcloc !3943
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3944, !srcloc !3947
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3948, !srcloc !3949
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3950, !srcloc !3951
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3952, !srcloc !3953
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3954, !srcloc !3955
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3956, !srcloc !3957
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3958, !srcloc !3959
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3960, !srcloc !3961
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3962, !srcloc !3963
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3964, !srcloc !3965
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3966, !srcloc !3967
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3968, !srcloc !3969
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3970, !srcloc !3971
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3972, !srcloc !3973
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3974, !srcloc !3975
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3976, !srcloc !3977
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3978, !srcloc !3979
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3980, !srcloc !3981
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3982, !srcloc !3983
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3984, !srcloc !3985
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3986, !srcloc !3987
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3988, !srcloc !3989
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #23, !dbg !3990, !srcloc !3991
  ret void, !dbg !3992
}

; Function Attrs: noinline nounwind optsize
define internal void @consumer_subscriber_thread() #1 !dbg !3995 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.sensor_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !4005
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4005
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3997, metadata !DIExpression(DW_OP_deref)), !dbg !4006
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.19*, %struct.zbus_channel.18**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !4007
  %5 = icmp eq i32 %4, 0, !dbg !4008
  br i1 %5, label %6, label %19, !dbg !4009

6:                                                ; preds = %0
  %7 = bitcast %struct.sensor_msg* %2 to i8*
  %8 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 0
  %9 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 1
  %10 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 2
  br label %11, !dbg !4009

11:                                               ; preds = %6, %11
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #23, !dbg !4010
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %2, metadata !3998, metadata !DIExpression()), !dbg !4011
  %12 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !4012
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %12, metadata !3997, metadata !DIExpression()), !dbg !4006
  %13 = call i32 bitcast (i32 (%struct.zbus_channel.18*, i8*, [1 x i64])* @zbus_chan_read to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef %12, i8* noundef nonnull %7, [1 x i64] [i64 5000]) #24, !dbg !4013
  %14 = load i32, i32* %8, align 4, !dbg !4014
  %15 = load i32, i32* %9, align 4, !dbg !4014
  %16 = load i32, i32* %10, align 4, !dbg !4014
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i32 0, i32 0), i32 noundef 73, i32 noundef %14, i32 noundef %15, i32 noundef %16) #24, !dbg !4014
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #23, !dbg !4019
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3997, metadata !DIExpression(DW_OP_deref)), !dbg !4006
  %17 = call i32 bitcast (i32 (%struct.zbus_observer.19*, %struct.zbus_channel.18**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !4007
  %18 = icmp eq i32 %17, 0, !dbg !4008
  br i1 %18, label %11, label %19, !dbg !4009, !llvm.loop !4020

19:                                               ; preds = %11, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4021
  ret void, !dbg !4021
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define internal void @filter_callback(%struct.zbus_channel.18* noundef %0) #1 !dbg !4022 {
  %2 = alloca %struct.sensor_msg, align 4
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !4024, metadata !DIExpression()), !dbg !4029
  %3 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.18* noundef %0) #25, !dbg !4030
  call void @llvm.dbg.value(metadata i8* %3, metadata !4025, metadata !DIExpression()), !dbg !4029
  %4 = bitcast %struct.sensor_msg* %2 to i8*, !dbg !4031
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !4031
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %2, metadata !4028, metadata !DIExpression()), !dbg !4032
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %4, i8 0, i32 12, i1 false), !dbg !4032
  %5 = bitcast i8* %3 to i32*, !dbg !4033
  %6 = load i32, i32* %5, align 4, !dbg !4033
  %7 = and i32 %6, 1, !dbg !4035
  %8 = icmp eq i32 %7, 0, !dbg !4035
  br i1 %8, label %9, label %11, !dbg !4036

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 0, !dbg !4037
  store i32 %6, i32* %10, align 4, !dbg !4039
  br label %11, !dbg !4040

11:                                               ; preds = %9, %1
  %12 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4041
  %13 = bitcast i8* %12 to i32*, !dbg !4041
  %14 = load i32, i32* %13, align 4, !dbg !4041
  %15 = and i32 %14, 1, !dbg !4043
  %16 = icmp eq i32 %15, 0, !dbg !4043
  br i1 %16, label %17, label %19, !dbg !4044

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 1, !dbg !4045
  store i32 %14, i32* %18, align 4, !dbg !4047
  br label %19, !dbg !4048

19:                                               ; preds = %17, %11
  %20 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4049
  %21 = bitcast i8* %20 to i32*, !dbg !4049
  %22 = load i32, i32* %21, align 4, !dbg !4049
  %23 = and i32 %22, 1, !dbg !4051
  %24 = icmp eq i32 %23, 0, !dbg !4051
  br i1 %24, label %25, label %27, !dbg !4052

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %2, i32 0, i32 2, !dbg !4053
  store i32 %22, i32* %26, align 4, !dbg !4055
  br label %27, !dbg !4056

27:                                               ; preds = %25, %19
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i32 noundef 73) #24, !dbg !4057
  %28 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @processed_data_chan, i8* noundef nonnull %4, [1 x i64] [i64 2000]) #24, !dbg !4062
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !4063
  ret void, !dbg !4063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.18* noundef readonly %0) unnamed_addr #1 !dbg !4064 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !4068, metadata !DIExpression()), !dbg !4069
  %2 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !4070
  br i1 %2, label %3, label %4, !dbg !4073

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #24, !dbg !4074
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0)) #24, !dbg !4074
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #24, !dbg !4074
  unreachable, !dbg !4074

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !4076
  %6 = load i8*, i8** %5, align 4, !dbg !4076
  ret i8* %6, !dbg !4077
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #5 !dbg !4078 {
  %1 = alloca %struct.zbus_channel.18*, align 4
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0), i32 noundef 73) #24, !dbg !4081
  %2 = bitcast %struct.zbus_channel.18** %1 to i8*, !dbg !4086
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #23, !dbg !4086
  br label %3, !dbg !4087

3:                                                ; preds = %3, %0
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.3, i32 0, i32 0), i32 noundef 73) #24, !dbg !4088
  %4 = call i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull @filter_lis, [1 x i64] [i64 2000]) #24, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %1, metadata !4080, metadata !DIExpression(DW_OP_deref)), !dbg !4095
  %5 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !4096
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.4, i32 0, i32 0), i32 noundef 73) #24, !dbg !4097
  %6 = call i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull @filter_lis, [1 x i64] [i64 2000]) #24, !dbg !4102
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 noundef 73) #24, !dbg !4103
  %7 = call i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), [1 x i64] [i64 2000]) #24, !dbg !4108
  %8 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !4109
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i32 0, i32 0), i32 noundef 73) #24, !dbg !4110
  %9 = call i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, %struct.zbus_observer.19* noundef nonnull bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.19*), [1 x i64] [i64 2000]) #24, !dbg !4115
  %10 = call i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef nonnull @state_change_sub, %struct.zbus_channel.18** noundef nonnull %1, [1 x i64] [i64 -1]) #24, !dbg !4116
  br label %3, !dbg !4087, !llvm.loop !4117
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @producer_thread() #5 !dbg !4119 {
  %1 = alloca %struct.sensor_msg, align 4
  %2 = alloca i8, align 1
  %3 = bitcast %struct.sensor_msg* %1 to i8*, !dbg !4127
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #23, !dbg !4127
  call void @llvm.dbg.declare(metadata %struct.sensor_msg* %1, metadata !4121, metadata !DIExpression()), !dbg !4128
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(12) %3, i8 0, i32 12, i1 false), !dbg !4128
  call void @llvm.dbg.value(metadata i32 0, metadata !4122, metadata !DIExpression()), !dbg !4129
  %4 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 0
  %5 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 1
  %6 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 2
  br label %7, !dbg !4130

7:                                                ; preds = %14, %0
  %8 = phi i32 [ 0, %0 ], [ %25, %14 ], !dbg !4129
  call void @llvm.dbg.value(metadata i32 %8, metadata !4122, metadata !DIExpression()), !dbg !4129
  %9 = icmp eq i32 %8, 5, !dbg !4131
  br i1 %9, label %10, label %14, !dbg !4132

10:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !4133
  call void @llvm.dbg.value(metadata i8 1, metadata !4123, metadata !DIExpression()), !dbg !4134
  store i8 1, i8* %2, align 1, !dbg !4135
  %11 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #25, !dbg !4136
  %12 = insertvalue [1 x i64] poison, i64 %11, 0, !dbg !4137
  call void @llvm.dbg.value(metadata i8* %2, metadata !4123, metadata !DIExpression(DW_OP_deref)), !dbg !4134
  %13 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @state_chan, i8* noundef nonnull %2, [1 x i64] %12) #24, !dbg !4137
  call void @llvm.dbg.value(metadata i32 0, metadata !4122, metadata !DIExpression()), !dbg !4129
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !4138
  br label %14, !dbg !4139

14:                                               ; preds = %7, %10
  %15 = phi i32 [ 0, %10 ], [ %8, %7 ], !dbg !4129
  call void @llvm.dbg.value(metadata i32 %15, metadata !4122, metadata !DIExpression()), !dbg !4129
  %16 = load i32, i32* %4, align 4, !dbg !4140
  %17 = add nsw i32 %16, 1, !dbg !4140
  store i32 %17, i32* %4, align 4, !dbg !4140
  %18 = load i32, i32* %5, align 4, !dbg !4141
  %19 = add nsw i32 %18, 1, !dbg !4141
  store i32 %19, i32* %5, align 4, !dbg !4141
  %20 = load i32, i32* %6, align 4, !dbg !4142
  %21 = add nsw i32 %20, 1, !dbg !4142
  store i32 %21, i32* %6, align 4, !dbg !4142
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.11, i32 0, i32 0), i32 noundef 73) #24, !dbg !4143
  %22 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 200) #25, !dbg !4148
  %23 = insertvalue [1 x i64] poison, i64 %22, 0, !dbg !4149
  %24 = call i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef nonnull @raw_data_chan, i8* noundef nonnull %3, [1 x i64] %23) #24, !dbg !4149
  call fastcc void @k_msleep() #25, !dbg !4150
  %25 = add i32 %15, 1, !dbg !4151
  call void @llvm.dbg.value(metadata i32 %25, metadata !4122, metadata !DIExpression()), !dbg !4129
  br label %7, !dbg !4130, !llvm.loop !4152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !4154 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4159, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i64 %0, metadata !4161, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i32 1000, metadata !4166, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i32 10000, metadata !4167, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i8 1, metadata !4168, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i8 0, metadata !4169, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i8 1, metadata !4170, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i8 0, metadata !4171, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i8 1, metadata !4172, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i8 0, metadata !4173, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i64 0, metadata !4174, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.value(metadata i64 0, metadata !4174, metadata !DIExpression()), !dbg !4178
  %2 = mul i64 %0, 10, !dbg !4180
  ret i64 %2, !dbg !4186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !4187 {
  call void @llvm.dbg.value(metadata i32 500, metadata !4191, metadata !DIExpression()), !dbg !4192
  %1 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #25, !dbg !4193
  %2 = insertvalue [1 x i64] poison, i64 %1, 0, !dbg !4194
  tail call fastcc void @k_sleep([1 x i64] %2) #25, !dbg !4194
  ret void, !dbg !4195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !4196 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !4205, metadata !DIExpression()), !dbg !4206
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4207, !srcloc !4209
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !4210
  ret void, !dbg !4211
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4212 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4223, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %1, metadata !4224, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %2, metadata !4225, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %3, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4229, metadata !DIExpression()), !dbg !4290
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4291
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4291
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4232, metadata !DIExpression()), !dbg !4292
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4293
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4293
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4234, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i32 0, metadata !4235, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4237, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 -1, metadata !4238, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 0, metadata !4241, metadata !DIExpression()), !dbg !4290
  %12 = and i32 %2, 4, !dbg !4295
  %13 = icmp eq i32 %12, 0, !dbg !4296
  call void @llvm.dbg.value(metadata i1 %13, metadata !4242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4290
  %14 = lshr i32 %2, 3, !dbg !4297
  %15 = and i32 %14, 7, !dbg !4297
  %16 = add nuw nsw i32 %15, 1, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %16, metadata !4243, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 0, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4245, metadata !DIExpression()), !dbg !4290
  %17 = ptrtoint i8* %0 to i32, !dbg !4299
  %18 = and i32 %17, 3, !dbg !4301
  %19 = icmp eq i32 %18, 0, !dbg !4301
  br i1 %19, label %20, label %320, !dbg !4302

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4303
  call void @llvm.dbg.value(metadata i8* %21, metadata !4229, metadata !DIExpression()), !dbg !4290
  %22 = icmp eq i8* %0, null, !dbg !4304
  %23 = and i32 %1, 7, !dbg !4306
  %24 = sub nuw nsw i32 8, %23, !dbg !4306
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4306
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4306
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %27, metadata !4224, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %26, metadata !4229, metadata !DIExpression()), !dbg !4290
  br i1 %22, label %33, label %28, !dbg !4307

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4309
  %30 = sub i32 4, %17, !dbg !4309
  %31 = add i32 %30, %29, !dbg !4310
  %32 = icmp ugt i32 %31, %27, !dbg !4311
  br i1 %32, label %320, label %33, !dbg !4312

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %34, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %3, metadata !4240, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4230, metadata !DIExpression()), !dbg !4290
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4314

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %42, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %43, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %44, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %45, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %72, metadata !4238, metadata !DIExpression()), !dbg !4290
  br i1 %46, label %73, label %47, !dbg !4315

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4316
  %49 = zext i1 %48 to i32, !dbg !4320
  %50 = add nsw i32 %72, %49, !dbg !4320
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4320
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %52, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %51, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %50, metadata !4238, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4321

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %40, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %58, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %57, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %56, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %54, metadata !4238, metadata !DIExpression()), !dbg !4290
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4322
  call void @llvm.dbg.value(metadata i8* %60, metadata !4226, metadata !DIExpression()), !dbg !4290
  %61 = load i8, i8* %60, align 1, !dbg !4324
  %62 = icmp eq i8 %61, 0, !dbg !4325
  br i1 %62, label %226, label %63, !dbg !4326, !llvm.loop !4327

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4315

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4330

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4241, metadata !DIExpression()), !dbg !4290
  %75 = add nsw i32 %72, -1, !dbg !4331
  call void @llvm.dbg.value(metadata i32 %75, metadata !4238, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4332

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4333

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4230, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4334

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4230, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4335

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4336
  %81 = icmp eq i8 %80, 108, !dbg !4338
  br i1 %81, label %82, label %109, !dbg !4339

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4340
  %84 = load i8, i8* %83, align 1, !dbg !4340
  %85 = icmp eq i8 %84, 108, !dbg !4343
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4344
  %89 = add i32 %88, 7, !dbg !4344
  %90 = and i32 %89, -8, !dbg !4344
  %91 = inttoptr i32 %90 to i8*, !dbg !4344
  %92 = inttoptr i32 %90 to double*, !dbg !4344
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4344
  %94 = load double, double* %92, align 8, !dbg !4344
  call void @llvm.dbg.value(metadata i8* %93, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 8, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 8, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata double %94, metadata !4258, metadata !DIExpression()), !dbg !4346
  %95 = ptrtoint i8* %43 to i32, !dbg !4347
  %96 = add i32 %95, 7, !dbg !4347
  %97 = and i32 %96, -8, !dbg !4347
  %98 = inttoptr i32 %97 to i8*, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %98, metadata !4229, metadata !DIExpression()), !dbg !4290
  br i1 %22, label %104, label %99, !dbg !4349

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4350
  %101 = icmp ugt i32 %100, %196, !dbg !4354
  br i1 %101, label %320, label %102, !dbg !4355

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4356
  store double %94, double* %103, align 8, !dbg !4356
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4359
  call void @llvm.dbg.value(metadata i8* %105, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4241, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4360

107:                                              ; preds = %73, %73
  br label %109, !dbg !4361

108:                                              ; preds = %73
  br label %109, !dbg !4361

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4290
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4290
  call void @llvm.dbg.value(metadata i32 %113, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %112, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  %114 = ptrtoint i8* %43 to i32, !dbg !4361
  %115 = add i32 %114, -1, !dbg !4361
  %116 = add i32 %115, %112, !dbg !4361
  %117 = sub i32 0, %112, !dbg !4361
  %118 = and i32 %116, %117, !dbg !4361
  %119 = inttoptr i32 %118 to i8*, !dbg !4362
  call void @llvm.dbg.value(metadata i8* %119, metadata !4229, metadata !DIExpression()), !dbg !4290
  br i1 %22, label %124, label %120, !dbg !4363

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4365
  %122 = add i32 %121, %118, !dbg !4366
  %123 = icmp ugt i32 %122, %196, !dbg !4367
  br i1 %123, label %320, label %124, !dbg !4368

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4369

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4362
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4370
  call void @llvm.dbg.value(metadata i8* %127, metadata !4227, metadata !DIExpression()), !dbg !4290
  %128 = bitcast i8* %41 to i8**, !dbg !4370
  %129 = load i8*, i8** %128, align 4, !dbg !4370
  call void @llvm.dbg.value(metadata i8* %129, metadata !4240, metadata !DIExpression()), !dbg !4290
  br label %130, !dbg !4371

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4290
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4372
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4290
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4373
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4290
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4290
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4290
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4290
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4290
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4290
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4374
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %142, metadata !4224, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %141, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %140, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %139, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %138, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %137, metadata !4235, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %136, metadata !4243, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %135, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %133, metadata !4240, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %132, metadata !4238, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %131, metadata !4237, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.label(metadata !4289), !dbg !4376
  br i1 %22, label %146, label %144, !dbg !4377

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4378
  store i8* %133, i8** %145, align 4, !dbg !4381
  br label %146, !dbg !4382

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %147, metadata !4243, metadata !DIExpression()), !dbg !4290
  %148 = icmp sgt i32 %136, 0, !dbg !4384
  br i1 %148, label %152, label %149, !dbg !4385

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !4386
  %151 = zext i1 %150 to i32, !dbg !4386
  br label %152, !dbg !4385

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4385
  %154 = icmp eq i32 %153, 0, !dbg !4385
  call void @llvm.dbg.value(metadata i1 %154, metadata !4267, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4387
  call void @llvm.dbg.value(metadata i1 %36, metadata !4270, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4387
  %155 = or i1 %36, %154, !dbg !4388
  br i1 %155, label %156, label %192, !dbg !4388

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4389
  %158 = sub i32 %157, %17, !dbg !4389
  %159 = lshr i32 %158, 2, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %159, metadata !4271, metadata !DIExpression()), !dbg !4391
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4392
  br i1 %161, label %162, label %163, !dbg !4392

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 635) #24, !dbg !4394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.18, i32 0, i32 0)) #24, !dbg !4394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 635) #24, !dbg !4394
  unreachable, !dbg !4394

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4399
  br i1 %164, label %165, label %166, !dbg !4401

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 640) #24, !dbg !4402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.19, i32 0, i32 0)) #24, !dbg !4402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 640) #24, !dbg !4402
  unreachable, !dbg !4402

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4407

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4408
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4411
  store i8 %168, i8* %169, align 1, !dbg !4412
  %170 = trunc i32 %132 to i8, !dbg !4413
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4414
  store i8 %170, i8* %171, align 1, !dbg !4415
  br i1 %154, label %175, label %172, !dbg !4416

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4417
  store i8 %173, i8* %169, align 1, !dbg !4417
  %174 = add i32 %131, 1, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %174, metadata !4237, metadata !DIExpression()), !dbg !4290
  br label %187, !dbg !4421

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %176, metadata !4236, metadata !DIExpression()), !dbg !4290
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4424

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %179, metadata !4224, metadata !DIExpression()), !dbg !4290
  br label %187, !dbg !4428

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4429

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4430
  call void @llvm.dbg.value(metadata i32 %182, metadata !4224, metadata !DIExpression()), !dbg !4290
  br label %187, !dbg !4433

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !4434
  %185 = add i32 %142, 2, !dbg !4436
  %186 = add i32 %185, %184, !dbg !4437
  call void @llvm.dbg.value(metadata i32 %186, metadata !4224, metadata !DIExpression()), !dbg !4290
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4290
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4290
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4290
  call void @llvm.dbg.value(metadata i32 %190, metadata !4224, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %189, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %188, metadata !4237, metadata !DIExpression()), !dbg !4290
  %191 = add nuw nsw i32 %137, 1, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %191, metadata !4235, metadata !DIExpression()), !dbg !4290
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4290
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4373
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4290
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4374
  call void @llvm.dbg.value(metadata i32 %196, metadata !4224, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %195, metadata !4235, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %194, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %193, metadata !4237, metadata !DIExpression()), !dbg !4290
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4439
  call void @llvm.dbg.value(metadata i8* %197, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %143, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %141, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %139, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %138, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %132, metadata !4238, metadata !DIExpression()), !dbg !4290
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4322
  call void @llvm.dbg.value(metadata i8* %198, metadata !4226, metadata !DIExpression()), !dbg !4290
  %199 = load i8, i8* %198, align 1, !dbg !4324
  %200 = icmp eq i8 %199, 0, !dbg !4325
  br i1 %200, label %226, label %63, !dbg !4326

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4440

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4441
  call void @llvm.dbg.value(metadata i8* %203, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 undef, metadata !4274, metadata !DIExpression()), !dbg !4442
  br i1 %22, label %219, label %204, !dbg !4443

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4441
  %206 = load i32, i32* %205, align 4, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %206, metadata !4274, metadata !DIExpression()), !dbg !4442
  %207 = inttoptr i32 %118 to i32*, !dbg !4444
  store i32 %206, i32* %207, align 4, !dbg !4447
  br label %219, !dbg !4448

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4449
  %210 = add i32 %209, 7, !dbg !4449
  %211 = and i32 %210, -8, !dbg !4449
  %212 = inttoptr i32 %211 to i8*, !dbg !4449
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4449
  call void @llvm.dbg.value(metadata i8* %213, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i64 undef, metadata !4280, metadata !DIExpression()), !dbg !4450
  br i1 %22, label %219, label %214, !dbg !4451

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4449
  %216 = load i64, i64* %215, align 8, !dbg !4449
  call void @llvm.dbg.value(metadata i64 %216, metadata !4280, metadata !DIExpression()), !dbg !4450
  %217 = inttoptr i32 %118 to i64*, !dbg !4452
  store i64 %216, i64* %217, align 8, !dbg !4457
  br label %219, !dbg !4458

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 709) #24, !dbg !4459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.20, i32 0, i32 0), i32 noundef %113) #24, !dbg !4459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 709) #24, !dbg !4459
  unreachable, !dbg !4459

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4464
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4464
  call void @llvm.dbg.value(metadata i8* %221, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %40, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %222, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %113, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %112, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %72, metadata !4238, metadata !DIExpression()), !dbg !4290
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4322
  call void @llvm.dbg.value(metadata i8* %223, metadata !4226, metadata !DIExpression()), !dbg !4290
  %224 = load i8, i8* %223, align 1, !dbg !4324
  %225 = icmp eq i8 %224, 0, !dbg !4325
  br i1 %225, label %226, label %38, !dbg !4326

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4465
  %228 = ptrtoint i8* %227 to i32, !dbg !4466
  %229 = sub i32 %228, %17, !dbg !4466
  %230 = lshr i32 %229, 2, !dbg !4468
  %231 = icmp ugt i32 %229, 1023, !dbg !4469
  br i1 %231, label %232, label %233, !dbg !4470

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 721) #24, !dbg !4471
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.21, i32 0, i32 0)) #24, !dbg !4471
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 721) #24, !dbg !4471
  unreachable, !dbg !4471

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4476

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4477
  %236 = add i32 %235, %229, !dbg !4480
  br label %320, !dbg !4481

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4482
  store i8 %238, i8* %0, align 1, !dbg !4483
  %239 = trunc i32 %194 to i8, !dbg !4484
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4486
  store i8 %240, i8* %242, align 1, !dbg !4488
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4489
  store i8 %241, i8* %243, align 1, !dbg !4490
  %244 = trunc i32 %193 to i8, !dbg !4491
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4492
  store i8 %244, i8* %245, align 1, !dbg !4493
  %246 = icmp eq i32 %193, 0, !dbg !4494
  %247 = xor i1 %246, true, !dbg !4495
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4495
  call void @llvm.dbg.value(metadata i8* %227, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4239, metadata !DIExpression()), !dbg !4290
  br i1 %249, label %250, label %269, !dbg !4495

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4496

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %254, metadata !4239, metadata !DIExpression()), !dbg !4290
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4497
  %256 = load i8, i8* %255, align 1, !dbg !4497
  %257 = icmp sgt i8 %256, -1, !dbg !4499
  br i1 %257, label %265, label %258, !dbg !4500

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4283, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4501
  %259 = ptrtoint i8* %253 to i32, !dbg !4502
  %260 = add i32 %251, %259, !dbg !4504
  %261 = icmp ugt i32 %260, %196, !dbg !4505
  br i1 %261, label %320, label %262, !dbg !4506

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4507
  call void @llvm.dbg.value(metadata i8 %263, metadata !4283, metadata !DIExpression()), !dbg !4501
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4508
  call void @llvm.dbg.value(metadata i8* %264, metadata !4229, metadata !DIExpression()), !dbg !4290
  store i8 %263, i8* %253, align 1, !dbg !4509
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4439
  call void @llvm.dbg.value(metadata i8* %266, metadata !4229, metadata !DIExpression()), !dbg !4290
  %267 = add nuw i32 %254, 1, !dbg !4510
  call void @llvm.dbg.value(metadata i32 %267, metadata !4239, metadata !DIExpression()), !dbg !4290
  %268 = icmp eq i32 %267, %195, !dbg !4511
  br i1 %268, label %269, label %252, !dbg !4496, !llvm.loop !4512

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4439
  call void @llvm.dbg.value(metadata i8* %270, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4239, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %133, metadata !4240, metadata !DIExpression()), !dbg !4290
  %271 = icmp eq i32 %195, 0, !dbg !4514
  br i1 %271, label %316, label %272, !dbg !4517

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4517

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %276, metadata !4240, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %277, metadata !4239, metadata !DIExpression()), !dbg !4290
  br i1 %246, label %282, label %278, !dbg !4518

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4521
  %280 = load i8, i8* %279, align 1, !dbg !4521
  %281 = icmp sgt i8 %280, -1, !dbg !4522
  br i1 %281, label %282, label %311, !dbg !4523

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4524

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4230, metadata !DIExpression()), !dbg !4290
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4525
  %285 = load i8, i8* %284, align 1, !dbg !4525
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4528
  call void @llvm.dbg.value(metadata i8* %286, metadata !4229, metadata !DIExpression()), !dbg !4290
  store i8 %285, i8* %275, align 1, !dbg !4529
  br label %297, !dbg !4530

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4531
  %289 = load i8, i8* %288, align 1, !dbg !4531
  %290 = zext i8 %289 to i32, !dbg !4531
  %291 = shl nuw nsw i32 %290, 2, !dbg !4533
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4534
  %293 = bitcast i8* %292 to i8**, !dbg !4535
  %294 = load i8*, i8** %293, align 4, !dbg !4535
  call void @llvm.dbg.value(metadata i8* %294, metadata !4240, metadata !DIExpression()), !dbg !4290
  store i8* null, i8** %293, align 4, !dbg !4536
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !4537
  %296 = add i32 %295, 1, !dbg !4538
  call void @llvm.dbg.value(metadata i32 %296, metadata !4230, metadata !DIExpression()), !dbg !4290
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4290
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4539
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4290
  call void @llvm.dbg.value(metadata i8* %300, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %299, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %298, metadata !4240, metadata !DIExpression()), !dbg !4290
  %301 = ptrtoint i8* %300 to i32, !dbg !4540
  %302 = add i32 %273, %299, !dbg !4542
  %303 = add i32 %302, %301, !dbg !4543
  %304 = icmp ugt i32 %303, %196, !dbg !4544
  br i1 %304, label %320, label %305, !dbg !4545

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4546
  %307 = load i8, i8* %306, align 1, !dbg !4546
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4547
  call void @llvm.dbg.value(metadata i8* %308, metadata !4229, metadata !DIExpression()), !dbg !4290
  store i8 %307, i8* %300, align 1, !dbg !4548
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !4549
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4550
  call void @llvm.dbg.value(metadata i8* %310, metadata !4229, metadata !DIExpression()), !dbg !4290
  br label %311, !dbg !4551

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4552
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4290
  call void @llvm.dbg.value(metadata i8* %313, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %312, metadata !4240, metadata !DIExpression()), !dbg !4290
  %314 = add nuw i32 %277, 1, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %314, metadata !4239, metadata !DIExpression()), !dbg !4290
  %315 = icmp eq i32 %314, %195, !dbg !4514
  br i1 %315, label %316, label %274, !dbg !4517, !llvm.loop !4554

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4439
  %318 = ptrtoint i8* %317 to i32, !dbg !4556
  %319 = sub i32 %318, %17, !dbg !4556
  br label %320, !dbg !4557

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !4558
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !4558
  ret i32 %321, !dbg !4558
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4563, metadata !DIExpression()), !dbg !4564
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !4565
  ret i1 %2, !dbg !4566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !4567 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4572, metadata !DIExpression()), !dbg !4573
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4574
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4575
  %4 = and i1 %2, %3, !dbg !4575
  ret i1 %4, !dbg !4576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4577 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4581, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 %1, metadata !4582, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 %2, metadata !4583, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* %3, metadata !4584, metadata !DIExpression()), !dbg !4587
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4588
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4588
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4585, metadata !DIExpression()), !dbg !4589
  call void @llvm.va_start(i8* nonnull %6), !dbg !4590
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4591
  %8 = load i32, i32* %7, align 4, !dbg !4591
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4591
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %10, metadata !4586, metadata !DIExpression()), !dbg !4587
  call void @llvm.va_end(i8* nonnull %6), !dbg !4592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !4593
  ret i32 %10, !dbg !4594
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4595 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4607, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4608, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %2, metadata !4609, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %3, metadata !4610, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %3, metadata !4611, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8* %3, metadata !4612, metadata !DIExpression()), !dbg !4626
  %5 = icmp eq i8* %3, null, !dbg !4627
  br i1 %5, label %45, label %6, !dbg !4629

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4621, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4626
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4630
  %8 = load i8, i8* %7, align 1, !dbg !4630
  %9 = zext i8 %8 to i32, !dbg !4631
  call void @llvm.dbg.value(metadata i32 %9, metadata !4622, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i8 undef, metadata !4623, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4626
  call void @llvm.dbg.value(metadata i8 undef, metadata !4624, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  call void @llvm.dbg.value(metadata i32 0, metadata !4620, metadata !DIExpression()), !dbg !4626
  %10 = icmp eq i8 %8, 0, !dbg !4632
  br i1 %10, label %39, label %11, !dbg !4635

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4636
  call void @llvm.dbg.value(metadata i8 %12, metadata !4621, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %13 = zext i8 %12 to i32, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %13, metadata !4621, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %14 = shl nuw nsw i32 %13, 2, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %14, metadata !4621, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4639
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4640
  %17 = load i8, i8* %16, align 1, !dbg !4640
  call void @llvm.dbg.value(metadata i8 %17, metadata !4623, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %18 = zext i8 %17 to i32, !dbg !4641
  call void @llvm.dbg.value(metadata i32 %18, metadata !4623, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4642
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4643
  %21 = load i8, i8* %20, align 1, !dbg !4643
  call void @llvm.dbg.value(metadata i8 %21, metadata !4624, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %22 = zext i8 %21 to i32, !dbg !4644
  call void @llvm.dbg.value(metadata i32 %22, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %23 = shl nuw nsw i32 %22, 1, !dbg !4645
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4618, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4626
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4646
  call void @llvm.dbg.value(metadata i8* %24, metadata !4618, metadata !DIExpression()), !dbg !4626
  br label %25, !dbg !4635

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4618, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata i32 %27, metadata !4620, metadata !DIExpression()), !dbg !4626
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4647
  call void @llvm.dbg.value(metadata i8* %28, metadata !4618, metadata !DIExpression()), !dbg !4626
  %29 = load i8, i8* %26, align 1, !dbg !4649
  %30 = zext i8 %29 to i32, !dbg !4649
  call void @llvm.dbg.value(metadata i32 %30, metadata !4625, metadata !DIExpression()), !dbg !4626
  %31 = shl nuw nsw i32 %30, 2, !dbg !4650
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4651
  %33 = bitcast i8* %32 to i8**, !dbg !4652
  call void @llvm.dbg.value(metadata i8** %33, metadata !4619, metadata !DIExpression()), !dbg !4626
  store i8* %28, i8** %33, align 4, !dbg !4653
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !4654
  %35 = add i32 %34, 1, !dbg !4655
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %36, metadata !4618, metadata !DIExpression()), !dbg !4626
  %37 = add nuw nsw i32 %27, 1, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %37, metadata !4620, metadata !DIExpression()), !dbg !4626
  %38 = icmp eq i32 %37, %9, !dbg !4632
  br i1 %38, label %39, label %25, !dbg !4635, !llvm.loop !4658

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4660
  call void @llvm.dbg.value(metadata i8* %40, metadata !4611, metadata !DIExpression()), !dbg !4626
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4661
  %42 = bitcast i8* %41 to i8**, !dbg !4661
  %43 = load i8*, i8** %42, align 1, !dbg !4661
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !4662
  br label %45, !dbg !4663

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4626
  ret i32 %46, !dbg !4664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4665 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4669, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4670, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata i8* %2, metadata !4671, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata i8* %3, metadata !4672, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata i8* %4, metadata !4673, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata i8* %4, metadata !4674, metadata !DIExpression()), !dbg !4679
  %6 = ptrtoint i8* %4 to i32, !dbg !4680
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4680
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !4680
  ret i32 %8, !dbg !4681
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4682 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4686, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %1, metadata !4687, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 0, metadata !4689, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 0, metadata !4690, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 poison, metadata !4689, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %0, metadata !4686, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4691
  %3 = load i8, i8* %0, align 1, !dbg !4692
  call void @llvm.dbg.value(metadata i8 %3, metadata !4688, metadata !DIExpression()), !dbg !4691
  %4 = icmp eq i8 %3, 0, !dbg !4693
  br i1 %4, label %29, label %5, !dbg !4694

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %8, metadata !4690, metadata !DIExpression()), !dbg !4691
  br i1 %9, label %11, label %22, !dbg !4696

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4698
  br i1 %12, label %13, label %17, !dbg !4702

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4703
  br i1 %14, label %29, label %15, !dbg !4706

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4707
  br i1 %16, label %29, label %22, !dbg !4709

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !4710
  %19 = xor i1 %18, true, !dbg !4712
  %20 = zext i1 %18 to i32, !dbg !4712
  %21 = add nsw i32 %8, %20, !dbg !4712
  br label %22, !dbg !4712

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4691
  call void @llvm.dbg.value(metadata i32 %24, metadata !4690, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 poison, metadata !4689, metadata !DIExpression()), !dbg !4691
  %25 = icmp eq i8 %6, 37, !dbg !4713
  %26 = xor i1 %25, %23, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %10, metadata !4686, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %10, metadata !4686, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4691
  %27 = load i8, i8* %10, align 1, !dbg !4692
  call void @llvm.dbg.value(metadata i8 %27, metadata !4688, metadata !DIExpression()), !dbg !4691
  %28 = icmp eq i8 %27, 0, !dbg !4693
  br i1 %28, label %29, label %5, !dbg !4694, !llvm.loop !4716

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4691
  ret i1 %30, !dbg !4718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !4719 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4723, metadata !DIExpression()), !dbg !4724
  %2 = add i8 %0, -64, !dbg !4725
  %3 = icmp ult i8 %2, 59, !dbg !4725
  ret i1 %3, !dbg !4726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4727 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4735, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %1, metadata !4736, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4737, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8* %3, metadata !4738, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %4, metadata !4739, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i16* %5, metadata !4740, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %6, metadata !4741, metadata !DIExpression()), !dbg !4804
  %11 = icmp eq i8* %0, null, !dbg !4805
  br i1 %11, label %12, label %13, !dbg !4808

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 916) #24, !dbg !4809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 916) #24, !dbg !4809
  unreachable, !dbg !4809

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4742, metadata !DIExpression()), !dbg !4804
  %14 = bitcast i8* %0 to i32*, !dbg !4811
  call void @llvm.dbg.value(metadata i32* %14, metadata !4743, metadata !DIExpression()), !dbg !4804
  %15 = and i32 %4, 8, !dbg !4812
  %16 = icmp eq i32 %15, 0, !dbg !4813
  call void @llvm.dbg.value(metadata i1 %16, metadata !4747, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4804
  call void @llvm.dbg.value(metadata i8* %0, metadata !4750, metadata !DIExpression()), !dbg !4804
  %17 = icmp eq i32 %1, 0, !dbg !4814
  br i1 %17, label %18, label %20, !dbg !4815

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !4816
  br label %20, !dbg !4815

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4815
  call void @llvm.dbg.value(metadata i32 %21, metadata !4736, metadata !DIExpression()), !dbg !4804
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4817
  %23 = load i8, i8* %22, align 1, !dbg !4817
  %24 = zext i8 %23 to i32, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %24, metadata !4745, metadata !DIExpression()), !dbg !4804
  %25 = icmp ne i8 %23, 0, !dbg !4819
  %26 = and i32 %4, 1, !dbg !4820
  %27 = icmp ne i32 %26, 0, !dbg !4820
  %28 = and i1 %27, %25, !dbg !4820
  call void @llvm.dbg.value(metadata i1 %28, metadata !4749, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4804
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4821
  %30 = load i8, i8* %29, align 1, !dbg !4821
  %31 = zext i8 %30 to i32, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %31, metadata !4746, metadata !DIExpression()), !dbg !4804
  %32 = icmp ne i8 %30, 0, !dbg !4823
  %33 = and i32 %4, 2, !dbg !4824
  %34 = icmp ne i32 %33, 0, !dbg !4824
  %35 = and i1 %34, %32, !dbg !4824
  call void @llvm.dbg.value(metadata i1 %35, metadata !4748, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4804
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4825
  br i1 %36, label %41, label %37, !dbg !4825

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4827
  br i1 %38, label %287, label %39, !dbg !4830

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !4831
  br label %287, !dbg !4833

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4834
  %43 = zext i8 %42 to i32, !dbg !4835
  %44 = shl nuw nsw i32 %43, 2, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %44, metadata !4744, metadata !DIExpression()), !dbg !4804
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4837
  %46 = bitcast i8* %45 to i8**, !dbg !4838
  %47 = load i8*, i8** %46, align 4, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %47, metadata !4753, metadata !DIExpression()), !dbg !4804
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %48, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 0, metadata !4755, metadata !DIExpression()), !dbg !4804
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4840
  br i1 %49, label %50, label %135, !dbg !4841

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4752, metadata !DIExpression()), !dbg !4804
  br i1 %28, label %51, label %76, !dbg !4842

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8* %48, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 0, metadata !4755, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 0, metadata !4756, metadata !DIExpression()), !dbg !4843
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4844

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8* %55, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %56, metadata !4755, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %57, metadata !4756, metadata !DIExpression()), !dbg !4843
  %58 = load i8, i8* %55, align 1, !dbg !4845
  %59 = zext i8 %58 to i32, !dbg !4846
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4846
  %61 = bitcast i32* %60 to i8**, !dbg !4847
  %62 = load i8*, i8** %61, align 4, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %62, metadata !4762, metadata !DIExpression()), !dbg !4848
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %63, metadata !4765, metadata !DIExpression()), !dbg !4848
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4850
  br i1 %65, label %66, label %70, !dbg !4850

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4852
  %68 = add nuw i32 %56, 1, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %68, metadata !4755, metadata !DIExpression()), !dbg !4804
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4855
  store i16 %67, i16* %69, align 2, !dbg !4856
  br label %70, !dbg !4857

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4804
  call void @llvm.dbg.value(metadata i32 %71, metadata !4755, metadata !DIExpression()), !dbg !4804
  %72 = add nsw i32 %63, %54, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %72, metadata !4752, metadata !DIExpression()), !dbg !4804
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %73, metadata !4754, metadata !DIExpression()), !dbg !4804
  %74 = add nuw nsw i32 %57, 1, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %74, metadata !4756, metadata !DIExpression()), !dbg !4843
  %75 = icmp eq i32 %74, %24, !dbg !4861
  br i1 %75, label %82, label %53, !dbg !4844, !llvm.loop !4862

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4864
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4864
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4864
  br label %82, !dbg !4864

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4867
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4804
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4868
  call void @llvm.dbg.value(metadata i1 undef, metadata !4766, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4869
  call void @llvm.dbg.value(metadata i32 0, metadata !4767, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.value(metadata i32 %85, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8* %84, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %83, metadata !4755, metadata !DIExpression()), !dbg !4804
  %86 = icmp eq i8 %30, 0, !dbg !4871
  br i1 %86, label %287, label %87, !dbg !4872

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4873
  %89 = icmp eq i32 %88, 0, !dbg !4874
  call void @llvm.dbg.value(metadata i1 %89, metadata !4766, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4869
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4872

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8* %96, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %97, metadata !4755, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %98, metadata !4767, metadata !DIExpression()), !dbg !4870
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4875
  call void @llvm.dbg.value(metadata i8* %99, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8 undef, metadata !4769, metadata !DIExpression()), !dbg !4876
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %100, metadata !4754, metadata !DIExpression()), !dbg !4804
  %101 = load i8, i8* %99, align 1, !dbg !4878
  call void @llvm.dbg.value(metadata i8 %101, metadata !4772, metadata !DIExpression()), !dbg !4876
  %102 = zext i8 %101 to i32, !dbg !4879
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4879
  %104 = bitcast i32* %103 to i8**, !dbg !4880
  %105 = load i8*, i8** %104, align 4, !dbg !4880
  call void @llvm.dbg.value(metadata i8* %105, metadata !4773, metadata !DIExpression()), !dbg !4876
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !4881
  call void @llvm.dbg.value(metadata i1 %106, metadata !4774, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4876
  br i1 %16, label %113, label %107, !dbg !4882

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4884
  call void @llvm.dbg.value(metadata i8 %108, metadata !4769, metadata !DIExpression()), !dbg !4876
  %109 = zext i8 %108 to i32, !dbg !4885
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !4886
  br i1 %110, label %111, label %113, !dbg !4887

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.23, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !4888
  %112 = add nsw i32 %95, -2, !dbg !4894
  call void @llvm.dbg.value(metadata i32 %112, metadata !4752, metadata !DIExpression()), !dbg !4804
  br label %130, !dbg !4895

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4896

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4897

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %116, metadata !4752, metadata !DIExpression()), !dbg !4804
  br label %130, !dbg !4902

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4903

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4800), !dbg !4904
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %119, metadata !4775, metadata !DIExpression()), !dbg !4876
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4906
  br i1 %121, label %122, label %126, !dbg !4906

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4908
  %124 = add nuw i32 %97, 1, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %124, metadata !4755, metadata !DIExpression()), !dbg !4804
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4911
  store i16 %123, i16* %125, align 2, !dbg !4912
  br label %126, !dbg !4913

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4804
  call void @llvm.dbg.value(metadata i32 %127, metadata !4755, metadata !DIExpression()), !dbg !4804
  %128 = add i32 %95, -1, !dbg !4914
  %129 = add i32 %128, %119, !dbg !4915
  call void @llvm.dbg.value(metadata i32 %129, metadata !4752, metadata !DIExpression()), !dbg !4804
  br label %130, !dbg !4916

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4804
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4876
  call void @llvm.dbg.value(metadata i32 %132, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %131, metadata !4755, metadata !DIExpression()), !dbg !4804
  %133 = add nuw nsw i32 %98, 1, !dbg !4917
  call void @llvm.dbg.value(metadata i8* %100, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %133, metadata !4767, metadata !DIExpression()), !dbg !4870
  %134 = icmp eq i32 %133, %31, !dbg !4871
  br i1 %134, label %287, label %94, !dbg !4872, !llvm.loop !4918

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4777, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4778, metadata !DIExpression()), !dbg !4921
  br i1 %28, label %136, label %138, !dbg !4922

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4779, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8 0, metadata !4780, metadata !DIExpression()), !dbg !4804
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %137, metadata !4781, metadata !DIExpression()), !dbg !4804
  br label %143, !dbg !4926

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4927
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4927

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4781, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8 undef, metadata !4780, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8 0, metadata !4779, metadata !DIExpression()), !dbg !4804
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !4929
  br label %148, !dbg !4932

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4933
  call void @llvm.dbg.value(metadata i8* %151, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 0, metadata !4783, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8 %149, metadata !4780, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8 %150, metadata !4779, metadata !DIExpression()), !dbg !4804
  %152 = icmp eq i8 %30, 0, !dbg !4935
  br i1 %152, label %153, label %155, !dbg !4936

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4937
  br label %160, !dbg !4936

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4936

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4937
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4938
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4939
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4804
  call void @llvm.dbg.value(metadata i8 undef, metadata !4776, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4804
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4940
  %166 = load i8, i8* %165, align 1, !dbg !4940
  %167 = zext i8 %162 to i32, !dbg !4941
  %168 = add i8 %166, %162, !dbg !4942
  call void @llvm.dbg.value(metadata i8 %168, metadata !4776, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4804
  %169 = icmp eq i32 %33, 0, !dbg !4943
  %170 = lshr i8 %163, 1, !dbg !4944
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4944
  call void @llvm.dbg.value(metadata i8 %171, metadata !4776, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4804
  %172 = icmp eq i32 %26, 0, !dbg !4945
  %173 = icmp eq i32 %161, 0, !dbg !4937
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4937
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4937
  call void @llvm.dbg.value(metadata i8 %175, metadata !4776, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4804
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4791, metadata !DIExpression()), !dbg !4946
  %176 = load i32, i32* %14, align 1, !dbg !4947
  store i8 %168, i8* %165, align 1, !dbg !4948
  store i8 %175, i8* %22, align 1, !dbg !4948
  store i8 %171, i8* %29, align 1, !dbg !4948
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %177, metadata !4782, metadata !DIExpression()), !dbg !4804
  %178 = icmp slt i32 %177, 0, !dbg !4950
  br i1 %178, label %287, label %240, !dbg !4952

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %181, metadata !4783, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8 %182, metadata !4780, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8 %183, metadata !4779, metadata !DIExpression()), !dbg !4804
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4953
  call void @llvm.dbg.value(metadata i8* %184, metadata !4754, metadata !DIExpression()), !dbg !4804
  %185 = load i8, i8* %180, align 1, !dbg !4954
  call void @llvm.dbg.value(metadata i8 %185, metadata !4785, metadata !DIExpression()), !dbg !4955
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4956
  call void @llvm.dbg.value(metadata i8* %186, metadata !4754, metadata !DIExpression()), !dbg !4804
  %187 = load i8, i8* %184, align 1, !dbg !4957
  call void @llvm.dbg.value(metadata i8 %187, metadata !4788, metadata !DIExpression()), !dbg !4955
  %188 = zext i8 %187 to i32, !dbg !4958
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4958
  %190 = bitcast i32* %189 to i8**, !dbg !4959
  %191 = load i8*, i8** %190, align 4, !dbg !4959
  call void @llvm.dbg.value(metadata i8* %191, metadata !4789, metadata !DIExpression()), !dbg !4955
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4960
  call void @llvm.dbg.value(metadata i1 %192, metadata !4790, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4955
  br i1 %16, label %196, label %193, !dbg !4961

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4963
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4964
  br i1 %195, label %235, label %196, !dbg !4965

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4966

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4967

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4970
  br i1 %199, label %201, label %200, !dbg !4975

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4976
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4976
  unreachable, !dbg !4976

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4970
  %203 = add nuw nsw i8 %183, 1, !dbg !4978
  call void @llvm.dbg.value(metadata i8 %203, metadata !4779, metadata !DIExpression()), !dbg !4804
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4979
  br label %231, !dbg !4980

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4981

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4982
  br i1 %207, label %209, label %208, !dbg !4987

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4988
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4988
  unreachable, !dbg !4988

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4982
  %211 = add nuw nsw i8 %182, 1, !dbg !4990
  call void @llvm.dbg.value(metadata i8 %211, metadata !4780, metadata !DIExpression()), !dbg !4804
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4991
  br label %231, !dbg !4992

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4993

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4995
  br i1 %215, label %217, label %216, !dbg !5000

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1096) #24, !dbg !5001
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1096) #24, !dbg !5001
  unreachable, !dbg !5001

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4995
  %219 = add nuw nsw i8 %183, 1, !dbg !5003
  call void @llvm.dbg.value(metadata i8 %219, metadata !4779, metadata !DIExpression()), !dbg !4804
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !5004
  br label %231, !dbg !5005

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !5006
  br i1 %222, label %224, label %223, !dbg !5010

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1099) #24, !dbg !5011
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 1099) #24, !dbg !5011
  unreachable, !dbg !5011

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !5006
  %226 = add nuw nsw i8 %182, 1, !dbg !5013
  call void @llvm.dbg.value(metadata i8 %226, metadata !4780, metadata !DIExpression()), !dbg !4804
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !5014
  store i8 %185, i8* %227, align 1, !dbg !5015
  %228 = add nuw nsw i8 %182, 2, !dbg !5016
  call void @llvm.dbg.value(metadata i8 %228, metadata !4780, metadata !DIExpression()), !dbg !4804
  %229 = zext i8 %226 to i32, !dbg !5017
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !5017
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !5018
  br label %235, !dbg !5019

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4804
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4939
  call void @llvm.dbg.value(metadata i8 %237, metadata !4780, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i8 %236, metadata !4779, metadata !DIExpression()), !dbg !4804
  %238 = add nuw nsw i32 %181, 1, !dbg !5019
  call void @llvm.dbg.value(metadata i8* %186, metadata !4754, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %238, metadata !4783, metadata !DIExpression()), !dbg !4934
  %239 = icmp eq i32 %238, %31, !dbg !4935
  br i1 %239, label %160, label %179, !dbg !4936, !llvm.loop !5020

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %177, metadata !4752, metadata !DIExpression()), !dbg !4804
  store i32 %176, i32* %14, align 1, !dbg !5022
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !5023
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %243, metadata !4782, metadata !DIExpression()), !dbg !4804
  %244 = icmp slt i32 %243, 0, !dbg !5025
  br i1 %244, label %287, label %245, !dbg !5027

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4752, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4804
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !5028
  %248 = add nuw nsw i32 %44, %24, !dbg !5028
  %249 = sub i32 %247, %248, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %249, metadata !4792, metadata !DIExpression()), !dbg !4804
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %250, metadata !4782, metadata !DIExpression()), !dbg !4804
  %251 = icmp slt i32 %250, 0, !dbg !5030
  br i1 %251, label %287, label %252, !dbg !5032

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !5033
  call void @llvm.dbg.value(metadata i32 %253, metadata !4752, metadata !DIExpression()), !dbg !4804
  %254 = add nuw nsw i32 %253, %250, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %254, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 0, metadata !4793, metadata !DIExpression()), !dbg !5035
  %255 = icmp eq i8 %162, 0, !dbg !5036
  br i1 %255, label %284, label %256, !dbg !5037

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !5037

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4793, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 %260, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5038
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !5039
  %262 = load i8, i8* %261, align 1, !dbg !5039
  call void @llvm.dbg.value(metadata i8 %262, metadata !4795, metadata !DIExpression()), !dbg !5040
  store i8 %262, i8* %10, align 1, !dbg !5041
  %263 = zext i8 %262 to i32, !dbg !5042
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !5042
  %265 = bitcast i32* %264 to i8**, !dbg !5043
  %266 = load i8*, i8** %265, align 4, !dbg !5043
  call void @llvm.dbg.value(metadata i8* %266, metadata !4798, metadata !DIExpression()), !dbg !5040
  br i1 %257, label %270, label %267, !dbg !5044

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !5045
  %269 = load i16, i16* %268, align 2, !dbg !5045
  br label %270, !dbg !5044

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !5044
  call void @llvm.dbg.value(metadata i32 undef, metadata !4799, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5040
  call void @llvm.dbg.value(metadata i8* %10, metadata !4795, metadata !DIExpression(DW_OP_deref)), !dbg !5040
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %272, metadata !4782, metadata !DIExpression()), !dbg !4804
  %273 = icmp slt i32 %272, 0, !dbg !5047
  br i1 %273, label %277, label %274, !dbg !5049

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4799, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4752, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4804
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %275, metadata !4782, metadata !DIExpression()), !dbg !4804
  %276 = icmp slt i32 %275, 0, !dbg !5051
  br i1 %276, label %277, label %279, !dbg !5053

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5054
  call void @llvm.dbg.value(metadata i32 undef, metadata !4752, metadata !DIExpression()), !dbg !4804
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %280, metadata !4752, metadata !DIExpression()), !dbg !4804
  %281 = add nsw i32 %280, %275, !dbg !5056
  call void @llvm.dbg.value(metadata i32 %281, metadata !4752, metadata !DIExpression()), !dbg !4804
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5054
  %282 = add nuw nsw i32 %259, 1, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %282, metadata !4793, metadata !DIExpression()), !dbg !5035
  %283 = icmp eq i32 %282, %167, !dbg !5036
  br i1 %283, label %284, label %258, !dbg !5037, !llvm.loop !5058

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !5034
  call void @llvm.dbg.value(metadata i32 %285, metadata !4752, metadata !DIExpression()), !dbg !4804
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !5060
  br label %287, !dbg !5061

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4804
  ret i32 %288, !dbg !5062
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5063 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5067, metadata !DIExpression()), !dbg !5075
  %2 = icmp eq i8* %0, null, !dbg !5076
  br i1 %2, label %3, label %4, !dbg !5079

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 198) #24, !dbg !5080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.17, i32 0, i32 0), i32 noundef 198) #24, !dbg !5080
  unreachable, !dbg !5080

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5068, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i8* %0, metadata !5069, metadata !DIExpression()), !dbg !5075
  %5 = load i8, i8* %0, align 1, !dbg !5082
  %6 = zext i8 %5 to i32, !dbg !5082
  %7 = shl nuw nsw i32 %6, 2, !dbg !5083
  call void @llvm.dbg.value(metadata i32 %7, metadata !5070, metadata !DIExpression()), !dbg !5075
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5084
  %9 = load i8, i8* %8, align 1, !dbg !5084
  %10 = zext i8 %9 to i32, !dbg !5084
  call void @llvm.dbg.value(metadata i32 %10, metadata !5071, metadata !DIExpression()), !dbg !5075
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5085
  %12 = load i8, i8* %11, align 1, !dbg !5085
  %13 = zext i8 %12 to i32, !dbg !5085
  call void @llvm.dbg.value(metadata i32 %13, metadata !5072, metadata !DIExpression()), !dbg !5075
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !5086
  call void @llvm.dbg.value(metadata i8* %14, metadata !5068, metadata !DIExpression()), !dbg !5075
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !5087
  call void @llvm.dbg.value(metadata i8* %15, metadata !5068, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 0, metadata !5073, metadata !DIExpression()), !dbg !5088
  %16 = icmp eq i8 %9, 0, !dbg !5089
  br i1 %16, label %17, label %22, !dbg !5091

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !5075
  %19 = ptrtoint i8* %18 to i32, !dbg !5092
  %20 = ptrtoint i8* %0 to i32, !dbg !5092
  %21 = sub i32 %19, %20, !dbg !5092
  ret i32 %21, !dbg !5093

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !5073, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.value(metadata i8* %24, metadata !5068, metadata !DIExpression()), !dbg !5075
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !5094
  call void @llvm.dbg.value(metadata i8* %25, metadata !5068, metadata !DIExpression()), !dbg !5075
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !5096
  %27 = add i32 %26, 1, !dbg !5097
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %28, metadata !5068, metadata !DIExpression()), !dbg !5075
  %29 = add nuw nsw i32 %23, 1, !dbg !5099
  call void @llvm.dbg.value(metadata i32 %29, metadata !5073, metadata !DIExpression()), !dbg !5088
  %30 = icmp eq i32 %29, %10, !dbg !5089
  br i1 %30, label %17, label %22, !dbg !5091, !llvm.loop !5100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5102 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5106, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %1, metadata !5107, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %2, metadata !5108, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i16 %3, metadata !5109, metadata !DIExpression()), !dbg !5110
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5111
  br i1 %5, label %6, label %9, !dbg !5113

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !5114
  %8 = add i32 %7, 1, !dbg !5116
  br label %20, !dbg !5117

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5118
  br i1 %10, label %13, label %11, !dbg !5119

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5119
  br label %16, !dbg !5119

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !5120
  %15 = add i32 %14, 1, !dbg !5121
  br label %16, !dbg !5119

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5119
  %18 = and i32 %17, 65535, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %17, metadata !5109, metadata !DIExpression()), !dbg !5110
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !5123
  br label %20, !dbg !5124

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5110
  ret i32 %21, !dbg !5125
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5128, metadata !DIExpression()), !dbg !5129
  ret i32 0, !dbg !5130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5131 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5135, metadata !DIExpression()), !dbg !5136
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5137
  ret void, !dbg !5138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5139 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5142
  ret i8* %1, !dbg !5143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5144 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5155, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i8* %0, metadata !5154, metadata !DIExpression()), !dbg !5164
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !5165
  ret void, !dbg !5167
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5172, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i8* %1, metadata !5173, metadata !DIExpression()), !dbg !5174
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5175
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !5175
  ret i32 %4, !dbg !5176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5177 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5184, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5181, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i8* %1, metadata !5182, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i8* %2, metadata !5183, metadata !DIExpression()), !dbg !5185
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !5186
  ret void, !dbg !5187
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5188 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5192, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i32 %1, metadata !5193, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i32 0, metadata !5194, metadata !DIExpression()), !dbg !5195
  %3 = icmp eq i32 %1, 0, !dbg !5196
  br i1 %3, label %13, label %4, !dbg !5199

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5194, metadata !DIExpression()), !dbg !5195
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5200
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5202
  %8 = load i8, i8* %7, align 1, !dbg !5202
  %9 = zext i8 %8 to i32, !dbg !5202
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !5200
  %11 = add nuw i32 %5, 1, !dbg !5203
  call void @llvm.dbg.value(metadata i32 %11, metadata !5194, metadata !DIExpression()), !dbg !5195
  %12 = icmp eq i32 %11, %1, !dbg !5196
  br i1 %12, label %13, label %4, !dbg !5199, !llvm.loop !5204

13:                                               ; preds = %4, %2
  ret void, !dbg !5206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5207 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5211, metadata !DIExpression()), !dbg !5213
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5214
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5214
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5212, metadata !DIExpression()), !dbg !5215
  call void @llvm.va_start(i8* nonnull %3), !dbg !5216
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5217
  %5 = load i32, i32* %4, align 4, !dbg !5217
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5217
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5217
  call void @llvm.va_end(i8* nonnull %3), !dbg !5218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5219
  ret void, !dbg !5219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5220 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5224, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i32 %1, metadata !5225, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i8* %2, metadata !5226, metadata !DIExpression()), !dbg !5229
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5230
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5230
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5227, metadata !DIExpression()), !dbg !5231
  call void @llvm.va_start(i8* nonnull %5), !dbg !5232
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5233
  %7 = load i32, i32* %6, align 4, !dbg !5233
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5233
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %9, metadata !5228, metadata !DIExpression()), !dbg !5229
  call void @llvm.va_end(i8* nonnull %5), !dbg !5234
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !5235
  ret i32 %9, !dbg !5236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5237 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5244, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i8* %0, metadata !5241, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i32 %1, metadata !5242, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i8* %2, metadata !5243, metadata !DIExpression()), !dbg !5251
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5252
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5252
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5245, metadata !DIExpression()), !dbg !5253
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5254
  store i8* %0, i8** %7, align 4, !dbg !5254
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5254
  store i32 %1, i32* %8, align 4, !dbg !5254
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5254
  store i32 0, i32* %9, align 4, !dbg !5254
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !5255
  %10 = load i32, i32* %9, align 4, !dbg !5256
  %11 = load i32, i32* %8, align 4, !dbg !5258
  %12 = icmp slt i32 %10, %11, !dbg !5259
  br i1 %12, label %13, label %15, !dbg !5260

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5261
  store i8 0, i8* %14, align 1, !dbg !5263
  br label %15, !dbg !5264

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !5265
  ret i32 %10, !dbg !5266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5272, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5273, metadata !DIExpression()), !dbg !5274
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5275
  %4 = load i8*, i8** %3, align 4, !dbg !5275
  %5 = icmp eq i8* %4, null, !dbg !5277
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5278
  br i1 %5, label %12, label %8, !dbg !5279

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5280
  %10 = load i32, i32* %9, align 4, !dbg !5280
  %11 = icmp slt i32 %7, %10, !dbg !5281
  br i1 %11, label %15, label %12, !dbg !5282

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5283
  %14 = add nsw i32 %7, 1, !dbg !5285
  store i32 %14, i32* %13, align 4, !dbg !5285
  br label %25, !dbg !5286

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5287
  %17 = icmp eq i32 %7, %16, !dbg !5289
  br i1 %17, label %18, label %21, !dbg !5290

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5291
  store i32 %19, i32* %6, align 4, !dbg !5291
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5293
  store i8 0, i8* %20, align 1, !dbg !5294
  br label %25, !dbg !5295

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5296
  %23 = add nsw i32 %7, 1, !dbg !5298
  store i32 %23, i32* %6, align 4, !dbg !5298
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5299
  store i8 %22, i8* %24, align 1, !dbg !5300
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5301
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !5302 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5307, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.value(metadata i8* %1, metadata !5308, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.value(metadata i8* %2, metadata !5309, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.value(metadata i8* %3, metadata !5310, metadata !DIExpression()), !dbg !5311
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !5312
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !5313
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !5314
  unreachable, !dbg !5315
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #12 !dbg !5316 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !5416
  ret %struct.k_thread* %1, !dbg !5417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5422, metadata !DIExpression()), !dbg !5423
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5424, !srcloc !5426
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5427
  ret void, !dbg !5428
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #12 !dbg !5429 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5430, !srcloc !5432
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !5433
  ret %struct.k_thread* %1, !dbg !5434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5435 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5446, metadata !DIExpression()), !dbg !5450
  call void @llvm.dbg.value(metadata i8* %1, metadata !5447, metadata !DIExpression()), !dbg !5450
  %3 = icmp eq i8* %1, null, !dbg !5451
  br i1 %3, label %16, label %4, !dbg !5453

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5454
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5454
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5448, metadata !DIExpression()), !dbg !5450
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !5455, !range !5456
  call void @llvm.dbg.value(metadata i32 %7, metadata !5449, metadata !DIExpression()), !dbg !5450
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5457
  br i1 %8, label %10, label %9, !dbg !5460

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 176) #24, !dbg !5461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.28, i32 0, i32 0), i8* noundef nonnull %1) #24, !dbg !5461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 176) #24, !dbg !5461
  unreachable, !dbg !5461

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5463
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #25, !dbg !5463
  %13 = icmp eq i32 %12, %7, !dbg !5463
  br i1 %13, label %15, label %14, !dbg !5466

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 185) #24, !dbg !5467
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.30, i32 0, i32 0), i8* noundef nonnull %1) #24, !dbg !5467
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 185) #24, !dbg !5467
  unreachable, !dbg !5467

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #25, !dbg !5469
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !5470
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #6 !dbg !5472 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5476, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata i8* %1, metadata !5477, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.value(metadata i8* %1, metadata !5478, metadata !DIExpression()), !dbg !5480
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5481
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5479, metadata !DIExpression()), !dbg !5480
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5482
  %5 = ptrtoint i8* %4 to i32, !dbg !5483
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5483
  %7 = sub i32 %5, %6, !dbg !5483
  %8 = lshr i32 %7, 3, !dbg !5484
  ret i32 %8, !dbg !5485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5486 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5490, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i32 %1, metadata !5491, metadata !DIExpression()), !dbg !5492
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5493
  %4 = and i32 %3, 1, !dbg !5494
  %5 = icmp ne i32 %4, 0, !dbg !5493
  ret i1 %5, !dbg !5495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5496 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5500, metadata !DIExpression()), !dbg !5502
  call void @llvm.dbg.value(metadata i32 %1, metadata !5501, metadata !DIExpression()), !dbg !5502
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5503
  %4 = add i32 %3, %1, !dbg !5504
  ret i32 %4, !dbg !5505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5506 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5508, metadata !DIExpression()), !dbg !5510
  call void @llvm.dbg.value(metadata i32 %1, metadata !5509, metadata !DIExpression()), !dbg !5510
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !5511
  %4 = sub i32 %1, %3, !dbg !5512
  ret i32 %4, !dbg !5513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !5514 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5518, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata i32 %1, metadata !5519, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata i1 %2, metadata !5520, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5523
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5524
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5521, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5522, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5523
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5525
  %6 = bitcast i8* %5 to i16*, !dbg !5525
  %7 = load i16, i16* %6, align 2, !dbg !5525
  %8 = and i16 %7, -2, !dbg !5529
  %9 = zext i1 %2 to i16, !dbg !5529
  %10 = or i16 %8, %9, !dbg !5529
  store i16 %10, i16* %6, align 2, !dbg !5525
  ret void, !dbg !5530
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5531 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5535, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.value(metadata i32 %1, metadata !5536, metadata !DIExpression()), !dbg !5537
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5538
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5540
  br i1 %4, label %7, label %5, !dbg !5541

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5542
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5544
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5545
  br label %7, !dbg !5546

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5547
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5549
  br i1 %9, label %13, label %10, !dbg !5550

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !5551
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5553
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #25, !dbg !5554
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5555
  call void @llvm.dbg.value(metadata i32 %12, metadata !5536, metadata !DIExpression()), !dbg !5537
  br label %13, !dbg !5556

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5536, metadata !DIExpression()), !dbg !5537
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #25, !dbg !5557
  ret void, !dbg !5558
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5559 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5561, metadata !DIExpression()), !dbg !5566
  call void @llvm.dbg.value(metadata i32 %1, metadata !5562, metadata !DIExpression()), !dbg !5566
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5567, !range !5568
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5569
  call void @llvm.dbg.value(metadata i32 %4, metadata !5563, metadata !DIExpression()), !dbg !5570
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5571
  ret void, !dbg !5572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5573 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5577, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.value(metadata i32 %1, metadata !5578, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.value(metadata i32 %2, metadata !5579, metadata !DIExpression()), !dbg !5582
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5583
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5584
  %6 = add i32 %5, %4, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %6, metadata !5580, metadata !DIExpression()), !dbg !5582
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !5586
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5587
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5588
  ret void, !dbg !5589
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5590 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5592, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata i32 %1, metadata !5593, metadata !DIExpression()), !dbg !5597
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5598, !range !5568
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !5599
  call void @llvm.dbg.value(metadata i32 %4, metadata !5594, metadata !DIExpression()), !dbg !5600
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !5601
  ret void, !dbg !5602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5603 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5607, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32 %1, metadata !5608, metadata !DIExpression()), !dbg !5609
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !5610
  %4 = lshr i32 %3, 1, !dbg !5611
  ret i32 %4, !dbg !5612
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #12 !dbg !5613 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5617, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.value(metadata i32 %1, metadata !5618, metadata !DIExpression()), !dbg !5620
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #25, !dbg !5621
  %4 = add i32 %1, 1, !dbg !5622
  %5 = sub i32 %4, %3, !dbg !5623
  call void @llvm.dbg.value(metadata i32 %5, metadata !5619, metadata !DIExpression()), !dbg !5620
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5624, !range !5625
  %7 = sub nsw i32 31, %6, !dbg !5626
  ret i32 %7, !dbg !5627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5628 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5632, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.value(metadata i32 %1, metadata !5633, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.value(metadata i32 %2, metadata !5634, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5635, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5641
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5642
  %5 = load i32, i32* %4, align 4, !dbg !5642
  %6 = icmp eq i32 %5, 0, !dbg !5643
  br i1 %6, label %7, label %12, !dbg !5644

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5645
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5647
  %10 = load i32, i32* %9, align 4, !dbg !5648
  %11 = or i32 %10, %8, !dbg !5648
  store i32 %11, i32* %9, align 4, !dbg !5648
  store i32 %1, i32* %4, align 4, !dbg !5649
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5650
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !5651
  br label %14, !dbg !5652

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5637, metadata !DIExpression()), !dbg !5653
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #25, !dbg !5654, !range !5655
  call void @llvm.dbg.value(metadata i32 %13, metadata !5640, metadata !DIExpression()), !dbg !5653
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #25, !dbg !5656
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5657
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #25, !dbg !5658
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #25, !dbg !5659
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5661 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5663, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %1, metadata !5664, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %2, metadata !5665, metadata !DIExpression()), !dbg !5666
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #25, !dbg !5667
  ret void, !dbg !5668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5669 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5671, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i32 %1, metadata !5672, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i32 %2, metadata !5673, metadata !DIExpression()), !dbg !5674
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #25, !dbg !5675
  ret void, !dbg !5676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !5677 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5679, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.value(metadata i32 %1, metadata !5680, metadata !DIExpression()), !dbg !5681
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !5682
  ret i32 %3, !dbg !5683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #10 !dbg !5684 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5688, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %1, metadata !5689, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %2, metadata !5690, metadata !DIExpression()), !dbg !5693
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5694
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5691, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5692, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5693
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5692, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5693
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5695
  call void @llvm.dbg.value(metadata i8* %5, metadata !5692, metadata !DIExpression()), !dbg !5693
  %6 = bitcast i8* %5 to i16*, !dbg !5696
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5699
  %8 = load i16, i16* %7, align 2, !dbg !5699
  %9 = zext i16 %8 to i32, !dbg !5699
  ret i32 %9, !dbg !5700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #6 !dbg !5701 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5705, metadata !DIExpression()), !dbg !5706
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5707
  ret %struct.chunk_unit_t* %2, !dbg !5708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #9 !dbg !5709 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5713, metadata !DIExpression()), !dbg !5719
  call void @llvm.dbg.value(metadata i32 %1, metadata !5714, metadata !DIExpression()), !dbg !5719
  call void @llvm.dbg.value(metadata i32 %2, metadata !5715, metadata !DIExpression()), !dbg !5719
  call void @llvm.dbg.value(metadata i32 %3, metadata !5716, metadata !DIExpression()), !dbg !5719
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5720
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5717, metadata !DIExpression()), !dbg !5719
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5718, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5719
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5721
  call void @llvm.dbg.value(metadata i8* %6, metadata !5718, metadata !DIExpression()), !dbg !5719
  %7 = trunc i32 %3 to i16, !dbg !5722
  %8 = bitcast i8* %6 to i16*, !dbg !5725
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5726
  store i16 %7, i16* %9, align 2, !dbg !5727
  ret void, !dbg !5728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #6 !dbg !5729 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5733, metadata !DIExpression()), !dbg !5734
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #25, !dbg !5735
  ret i32 %2, !dbg !5736
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5737 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5741, metadata !DIExpression()), !dbg !5743
  call void @llvm.dbg.value(metadata i32 %1, metadata !5742, metadata !DIExpression()), !dbg !5743
  %3 = add i32 %1, 4, !dbg !5744
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #25, !dbg !5745
  ret i32 %4, !dbg !5746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #6 !dbg !5747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5751, metadata !DIExpression()), !dbg !5752
  %2 = add i32 %0, 7, !dbg !5753
  %3 = lshr i32 %2, 3, !dbg !5754
  ret i32 %3, !dbg !5755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5756 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5760, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata i32 %1, metadata !5761, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata i32 %2, metadata !5762, metadata !DIExpression()), !dbg !5763
  %4 = shl i32 %2, 1, !dbg !5764
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #25, !dbg !5765
  ret void, !dbg !5766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5767 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5769, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata i32 %1, metadata !5770, metadata !DIExpression()), !dbg !5772
  call void @llvm.dbg.value(metadata i32 %2, metadata !5771, metadata !DIExpression()), !dbg !5772
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #25, !dbg !5773
  ret void, !dbg !5774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5775 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5777, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %1, metadata !5778, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.value(metadata i32 %2, metadata !5779, metadata !DIExpression()), !dbg !5785
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5786
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5780, metadata !DIExpression()), !dbg !5785
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5787
  %6 = icmp eq i32 %5, %1, !dbg !5788
  br i1 %6, label %7, label %14, !dbg !5789

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5790
  %9 = xor i32 %8, -1, !dbg !5792
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5793
  %11 = load i32, i32* %10, align 4, !dbg !5794
  %12 = and i32 %11, %9, !dbg !5794
  store i32 %12, i32* %10, align 4, !dbg !5794
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5795
  store i32 0, i32* %13, align 4, !dbg !5796
  br label %17, !dbg !5797

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %15, metadata !5781, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.value(metadata i32 %5, metadata !5784, metadata !DIExpression()), !dbg !5799
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5800
  store i32 %5, i32* %16, align 4, !dbg !5801
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #25, !dbg !5802
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #25, !dbg !5803
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !5805 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5807, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 %1, metadata !5808, metadata !DIExpression()), !dbg !5809
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !5810
  ret i32 %3, !dbg !5811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !5812 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5816, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i8* %1, metadata !5817, metadata !DIExpression()), !dbg !5823
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5824
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5824
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5818, metadata !DIExpression()), !dbg !5823
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #25, !dbg !5825
  call void @llvm.dbg.value(metadata i32 %5, metadata !5819, metadata !DIExpression()), !dbg !5823
  %6 = ptrtoint i8* %1 to i32, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %6, metadata !5820, metadata !DIExpression()), !dbg !5823
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #25, !dbg !5827
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5827
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %9, metadata !5821, metadata !DIExpression()), !dbg !5823
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #25, !dbg !5829
  %11 = shl i32 %10, 3, !dbg !5830
  call void @llvm.dbg.value(metadata i32 %11, metadata !5822, metadata !DIExpression()), !dbg !5823
  %12 = sub i32 %9, %6, !dbg !5831
  %13 = add i32 %12, %11, !dbg !5832
  ret i32 %13, !dbg !5833
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #14 !dbg !5834 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5838, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 %1, metadata !5839, metadata !DIExpression()), !dbg !5844
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5845
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5845
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5840, metadata !DIExpression()), !dbg !5844
  %5 = icmp eq i32 %1, 0, !dbg !5846
  br i1 %5, label %19, label %6, !dbg !5848

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5849
  br i1 %7, label %19, label %8, !dbg !5850

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !5851, !range !5456
  call void @llvm.dbg.value(metadata i32 %9, metadata !5842, metadata !DIExpression()), !dbg !5844
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #25, !dbg !5852
  call void @llvm.dbg.value(metadata i32 %10, metadata !5843, metadata !DIExpression()), !dbg !5844
  %11 = icmp eq i32 %10, 0, !dbg !5853
  br i1 %11, label %19, label %12, !dbg !5855

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5856
  %14 = icmp ugt i32 %13, %9, !dbg !5858
  br i1 %14, label %15, label %17, !dbg !5859

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5860
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #25, !dbg !5862
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #25, !dbg !5863
  br label %17, !dbg !5864

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #25, !dbg !5865
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !5866
  call void @llvm.dbg.value(metadata i8* %18, metadata !5841, metadata !DIExpression()), !dbg !5844
  br label %19, !dbg !5867

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5844
  ret i8* %20, !dbg !5868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !5869 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5873, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.value(metadata i32 %1, metadata !5874, metadata !DIExpression()), !dbg !5875
  %3 = lshr i32 %1, 3, !dbg !5876
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5877
  %5 = load i32, i32* %4, align 4, !dbg !5877
  %6 = icmp uge i32 %3, %5, !dbg !5878
  ret i1 %6, !dbg !5879
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5880 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5884, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata i32 %1, metadata !5885, metadata !DIExpression()), !dbg !5899
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %3, metadata !5886, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5887, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5899
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5901
  %5 = load i32, i32* %4, align 4, !dbg !5901
  %6 = icmp eq i32 %5, 0, !dbg !5902
  br i1 %6, label %19, label %7, !dbg !5903

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5904
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5905
  call void @llvm.dbg.value(metadata i32 %9, metadata !5891, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.value(metadata i32 %8, metadata !5892, metadata !DIExpression()), !dbg !5906
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5907
  %11 = icmp ult i32 %10, %1, !dbg !5909
  br i1 %11, label %13, label %12, !dbg !5910

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #25, !dbg !5911
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !5913
  store i32 %14, i32* %4, align 4, !dbg !5914
  %15 = add nsw i32 %9, -1, !dbg !5915
  call void @llvm.dbg.value(metadata i32 %15, metadata !5891, metadata !DIExpression()), !dbg !5905
  %16 = icmp eq i32 %15, 0, !dbg !5915
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5916
  br i1 %18, label %19, label %7, !dbg !5916, !llvm.loop !5917

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5920
  %21 = load i32, i32* %20, align 4, !dbg !5920
  %22 = add nsw i32 %3, 1, !dbg !5921
  %23 = shl nsw i32 -1, %22, !dbg !5921
  %24 = and i32 %21, %23, !dbg !5922
  call void @llvm.dbg.value(metadata i32 %24, metadata !5894, metadata !DIExpression()), !dbg !5899
  %25 = icmp eq i32 %24, 0, !dbg !5923
  br i1 %25, label %30, label %26, !dbg !5924

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5925, !range !5625
  call void @llvm.dbg.value(metadata i32 %27, metadata !5895, metadata !DIExpression()), !dbg !5926
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5927
  %29 = load i32, i32* %28, align 4, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %29, metadata !5898, metadata !DIExpression()), !dbg !5926
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #25, !dbg !5928
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5899
  ret i32 %31, !dbg !5929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #11 !dbg !5930 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5932, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %1, metadata !5933, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.value(metadata i32 %2, metadata !5934, metadata !DIExpression()), !dbg !5938
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !5939
  call void @llvm.dbg.value(metadata i32 %4, metadata !5935, metadata !DIExpression()), !dbg !5938
  %5 = sub i32 %2, %1, !dbg !5940
  call void @llvm.dbg.value(metadata i32 %5, metadata !5936, metadata !DIExpression()), !dbg !5938
  %6 = sub i32 %4, %5, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %6, metadata !5937, metadata !DIExpression()), !dbg !5938
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #25, !dbg !5942
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #25, !dbg !5943
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #25, !dbg !5944
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !5945
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !5946
  ret void, !dbg !5947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5948 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5952, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i32 %1, metadata !5953, metadata !DIExpression()), !dbg !5956
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !5957
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5954, metadata !DIExpression()), !dbg !5956
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5958
  call void @llvm.dbg.value(metadata i8* %4, metadata !5955, metadata !DIExpression()), !dbg !5956
  ret i8* %4, !dbg !5959
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5960 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5964, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i32 %1, metadata !5965, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i32 %2, metadata !5966, metadata !DIExpression()), !dbg !5976
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5977
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5977
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5967, metadata !DIExpression()), !dbg !5976
  %6 = sub i32 0, %1, !dbg !5978
  %7 = and i32 %6, %1, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %7, metadata !5969, metadata !DIExpression()), !dbg !5976
  %8 = icmp eq i32 %7, %1, !dbg !5980
  br i1 %8, label %13, label %9, !dbg !5982

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5983
  call void @llvm.dbg.value(metadata i32 %10, metadata !5965, metadata !DIExpression()), !dbg !5976
  %11 = icmp ult i32 %7, 4, !dbg !5985
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5985
  br label %17, !dbg !5985

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5986
  br i1 %14, label %15, label %17, !dbg !5989

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #25, !dbg !5990
  br label %61, !dbg !5992

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5976
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5993
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5965, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i32 %19, metadata !5968, metadata !DIExpression()), !dbg !5976
  call void @llvm.dbg.value(metadata i32 %18, metadata !5969, metadata !DIExpression()), !dbg !5976
  %21 = add i32 %20, -1, !dbg !5994
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5994, !range !5625
  %23 = icmp ult i32 %22, 2, !dbg !5994
  br i1 %23, label %25, label %24, !dbg !5997

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 324) #24, !dbg !5998
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.32, i32 0, i32 0)) #24, !dbg !5998
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 324) #24, !dbg !5998
  unreachable, !dbg !5998

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !6000
  br i1 %26, label %61, label %27, !dbg !6002

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #25, !dbg !6003
  br i1 %28, label %61, label %29, !dbg !6004

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !6005
  %31 = add i32 %30, %20, !dbg !6006
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #25, !dbg !6007, !range !5456
  call void @llvm.dbg.value(metadata i32 %32, metadata !5970, metadata !DIExpression()), !dbg !5976
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #25, !dbg !6008
  call void @llvm.dbg.value(metadata i32 %33, metadata !5971, metadata !DIExpression()), !dbg !5976
  %34 = icmp eq i32 %33, 0, !dbg !6009
  br i1 %34, label %61, label %35, !dbg !6011

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #25, !dbg !6012
  call void @llvm.dbg.value(metadata i8* %36, metadata !5972, metadata !DIExpression()), !dbg !5976
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !6013
  %38 = ptrtoint i8* %37 to i32, !dbg !6013
  %39 = add i32 %21, %38, !dbg !6013
  %40 = sub i32 0, %20, !dbg !6013
  %41 = and i32 %39, %40, !dbg !6013
  %42 = inttoptr i32 %41 to i8*, !dbg !6014
  %43 = sub i32 0, %18, !dbg !6015
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !6015
  call void @llvm.dbg.value(metadata i8* %44, metadata !5972, metadata !DIExpression()), !dbg !5976
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !6016
  %46 = ptrtoint i8* %45 to i32, !dbg !6016
  %47 = add i32 %46, 7, !dbg !6016
  %48 = and i32 %47, -8, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %48, metadata !5973, metadata !DIExpression()), !dbg !5976
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #25, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %49, metadata !5974, metadata !DIExpression()), !dbg !5976
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #25, !dbg !6018
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !6019
  %52 = sub i32 %48, %51, !dbg !6019
  %53 = ashr exact i32 %52, 3, !dbg !6019
  call void @llvm.dbg.value(metadata i32 %53, metadata !5975, metadata !DIExpression()), !dbg !5976
  %54 = icmp ugt i32 %49, %33, !dbg !6020
  br i1 %54, label %55, label %56, !dbg !6022

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #25, !dbg !6023
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #25, !dbg !6025
  br label %56, !dbg !6026

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #25, !dbg !6027
  %58 = icmp ugt i32 %57, %53, !dbg !6029
  br i1 %58, label %59, label %60, !dbg !6030

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #25, !dbg !6031
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #25, !dbg !6033
  br label %60, !dbg !6034

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #25, !dbg !6035
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5976
  ret i8* %62, !dbg !6036
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6037 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6041, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i8* %1, metadata !6042, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %2, metadata !6043, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i32 %3, metadata !6044, metadata !DIExpression()), !dbg !6060
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6061
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !6061
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !6045, metadata !DIExpression()), !dbg !6060
  %7 = icmp eq i8* %1, null, !dbg !6062
  br i1 %7, label %8, label %10, !dbg !6064

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !6065
  br label %63, !dbg !6067

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !6068
  br i1 %11, label %12, label %13, !dbg !6070

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !6071
  br label %63, !dbg !6073

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !6074
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !6074, !range !5625
  %16 = icmp ult i32 %15, 2, !dbg !6074
  br i1 %16, label %18, label %17, !dbg !6077

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 393) #24, !dbg !6078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.32, i32 0, i32 0)) #24, !dbg !6078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 393) #24, !dbg !6078
  unreachable, !dbg !6078

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #25, !dbg !6080
  br i1 %19, label %63, label %20, !dbg !6082

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !6083, !range !5456
  call void @llvm.dbg.value(metadata i32 %21, metadata !6046, metadata !DIExpression()), !dbg !6060
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !6084
  call void @llvm.dbg.value(metadata i32 %22, metadata !6047, metadata !DIExpression()), !dbg !6060
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !6085
  %24 = ptrtoint i8* %1 to i32, !dbg !6086
  %25 = ptrtoint i8* %23 to i32, !dbg !6086
  %26 = sub i32 %24, %25, !dbg !6086
  call void @llvm.dbg.value(metadata i32 %26, metadata !6048, metadata !DIExpression()), !dbg !6060
  %27 = add i32 %26, %3, !dbg !6087
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #25, !dbg !6088
  call void @llvm.dbg.value(metadata i32 %28, metadata !6049, metadata !DIExpression()), !dbg !6060
  %29 = icmp eq i32 %2, 0, !dbg !6089
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !6090
  br i1 %32, label %33, label %53, !dbg !6090

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !6091
  %35 = icmp eq i32 %28, %34, !dbg !6092
  br i1 %35, label %63, label %36, !dbg !6093

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !6094
  br i1 %37, label %38, label %40, !dbg !6095

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !6096
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #25, !dbg !6098
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #25, !dbg !6099
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #25, !dbg !6100
  br label %63, !dbg !6101

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !6102
  br i1 %41, label %53, label %42, !dbg !6103

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !6104
  %44 = add i32 %43, %34, !dbg !6105
  %45 = icmp ult i32 %44, %28, !dbg !6106
  br i1 %45, label %53, label %46, !dbg !6107

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !6108
  call void @llvm.dbg.value(metadata i32 %47, metadata !6050, metadata !DIExpression()), !dbg !6109
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !6110
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !6111
  %49 = icmp ult i32 %47, %48, !dbg !6113
  br i1 %49, label %50, label %52, !dbg !6114

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !6115
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #25, !dbg !6117
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #25, !dbg !6118
  br label %52, !dbg !6119

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #25, !dbg !6120
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #25, !dbg !6121
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !6122
  call void @llvm.dbg.value(metadata i8* %54, metadata !6056, metadata !DIExpression()), !dbg !6060
  %55 = icmp eq i8* %54, null, !dbg !6123
  br i1 %55, label %63, label %56, !dbg !6124

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #25, !dbg !6125, !range !5568
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #25, !dbg !6126
  %59 = sub i32 %58, %26, !dbg !6127
  call void @llvm.dbg.value(metadata i32 %59, metadata !6057, metadata !DIExpression()), !dbg !6128
  %60 = icmp ult i32 %59, %3, !dbg !6129
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !6129
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #24, !dbg !6130
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !6131
  br label %63, !dbg !6132

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !6060
  ret i8* %64, !dbg !6133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !6134 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !6138, metadata !DIExpression()), !dbg !6140
  call void @llvm.dbg.value(metadata i32 %1, metadata !6139, metadata !DIExpression()), !dbg !6140
  %3 = shl i32 %1, 3, !dbg !6141
  %4 = add i32 %3, -4, !dbg !6142
  ret i32 %4, !dbg !6143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6144 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !6148, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.value(metadata i8* %1, metadata !6149, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.value(metadata i32 %2, metadata !6150, metadata !DIExpression()), !dbg !6159
  %4 = icmp ult i32 %2, 262144, !dbg !6160
  br i1 %4, label %6, label %5, !dbg !6165

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 491) #24, !dbg !6166
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.34, i32 0, i32 0)) #24, !dbg !6166
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 491) #24, !dbg !6166
  unreachable, !dbg !6166

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !6168
  br i1 %7, label %9, label %8, !dbg !6171

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.35, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 498) #24, !dbg !6172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #24, !dbg !6172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 498) #24, !dbg !6172
  unreachable, !dbg !6172

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !6174
  call void @llvm.dbg.value(metadata i32 %10, metadata !6150, metadata !DIExpression()), !dbg !6159
  %11 = ptrtoint i8* %1 to i32, !dbg !6175
  %12 = add i32 %11, 7, !dbg !6175
  %13 = and i32 %12, -8, !dbg !6175
  call void @llvm.dbg.value(metadata i32 %13, metadata !6151, metadata !DIExpression()), !dbg !6159
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6176
  %15 = ptrtoint i8* %14 to i32, !dbg !6176
  %16 = and i32 %15, -8, !dbg !6176
  call void @llvm.dbg.value(metadata i32 %16, metadata !6152, metadata !DIExpression()), !dbg !6159
  %17 = sub i32 %16, %13, !dbg !6177
  %18 = lshr exact i32 %17, 3, !dbg !6178
  call void @llvm.dbg.value(metadata i32 %18, metadata !6153, metadata !DIExpression()), !dbg !6159
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #25, !dbg !6179
  %20 = icmp ugt i32 %18, %19, !dbg !6179
  br i1 %20, label %22, label %21, !dbg !6182

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 507) #24, !dbg !6183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #24, !dbg !6183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 507) #24, !dbg !6183
  unreachable, !dbg !6183

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6185
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !6154, metadata !DIExpression()), !dbg !6159
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6186
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6187
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6188
  store i32 %18, i32* %25, align 8, !dbg !6189
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6190
  store i32 0, i32* %26, align 4, !dbg !6191
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #25, !dbg !6192
  call void @llvm.dbg.value(metadata i32 %27, metadata !6155, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6159
  %28 = shl i32 %27, 2, !dbg !6193
  %29 = add i32 %28, 20, !dbg !6194
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #25, !dbg !6195
  call void @llvm.dbg.value(metadata i32 %30, metadata !6156, metadata !DIExpression()), !dbg !6159
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #25, !dbg !6196
  %32 = add i32 %31, %30, !dbg !6196
  %33 = icmp ugt i32 %32, %18, !dbg !6196
  br i1 %33, label %36, label %34, !dbg !6199

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !6157, metadata !DIExpression()), !dbg !6200
  %35 = icmp slt i32 %27, 0, !dbg !6201
  br i1 %35, label %37, label %39, !dbg !6203

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 524) #24, !dbg !6204
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.36, i32 0, i32 0)) #24, !dbg !6204
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.27, i32 0, i32 0), i32 noundef 524) #24, !dbg !6204
  unreachable, !dbg !6204

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #25, !dbg !6206
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #25, !dbg !6207
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #25, !dbg !6208
  %38 = sub i32 %18, %30, !dbg !6209
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #25, !dbg !6210
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #25, !dbg !6211
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #25, !dbg !6212
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #25, !dbg !6213
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #25, !dbg !6214
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #25, !dbg !6215
  ret void, !dbg !6216

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !6157, metadata !DIExpression()), !dbg !6200
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6217
  store i32 0, i32* %41, align 4, !dbg !6219
  %42 = add nuw i32 %40, 1, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %42, metadata !6157, metadata !DIExpression()), !dbg !6200
  %43 = icmp eq i32 %40, %27, !dbg !6201
  br i1 %43, label %37, label %39, !dbg !6203, !llvm.loop !6221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6223 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6236, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6233, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %1, metadata !6234, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %2, metadata !6235, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %4, metadata !6237, metadata !DIExpression()), !dbg !6362
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6363
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !6363
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6238, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i32 0, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i1 undef, metadata !6244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6362
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6365

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6365

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6366
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6236, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %30, metadata !6235, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %29, metadata !6242, metadata !DIExpression()), !dbg !6362
  %31 = load i8, i8* %30, align 1, !dbg !6367
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6365

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6367
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6368
  call void @llvm.dbg.value(metadata i8* %34, metadata !6235, metadata !DIExpression()), !dbg !6362
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !6368
  call void @llvm.dbg.value(metadata i32 %35, metadata !6246, metadata !DIExpression()), !dbg !6369
  %36 = icmp slt i32 %35, 0, !dbg !6370
  %37 = add i32 %29, 1, !dbg !6368
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %36, label %365, label %28, !llvm.loop !6372

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6374
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6251, metadata !DIExpression()), !dbg !6375
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6375
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6294, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6297, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8* %30, metadata !6300, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i32 -1, metadata !6301, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i32 -1, metadata !6302, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8* null, metadata !6303, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8* %14, metadata !6304, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8 0, metadata !6305, metadata !DIExpression()), !dbg !6376
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !6377
  call void @llvm.dbg.value(metadata i8* %39, metadata !6235, metadata !DIExpression()), !dbg !6362
  %40 = load i24, i24* %15, align 8, !dbg !6378
  %41 = and i24 %40, 256, !dbg !6378
  %42 = icmp eq i24 %41, 0, !dbg !6378
  br i1 %42, label %51, label %43, !dbg !6380

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6381
  call void @llvm.dbg.value(metadata i8* %44, metadata !6236, metadata !DIExpression()), !dbg !6362
  %45 = bitcast i8* %27 to i32*, !dbg !6381
  %46 = load i32, i32* %45, align 4, !dbg !6381
  call void @llvm.dbg.value(metadata i32 %46, metadata !6301, metadata !DIExpression()), !dbg !6376
  %47 = icmp slt i32 %46, 0, !dbg !6383
  br i1 %47, label %48, label %56, !dbg !6385

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6386
  store i24 %49, i24* %15, align 8, !dbg !6386
  %50 = sub nsw i32 0, %46, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %50, metadata !6301, metadata !DIExpression()), !dbg !6376
  br label %56, !dbg !6389

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6390
  %53 = icmp eq i24 %52, 0, !dbg !6390
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6392
  br label %56, !dbg !6392

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6393
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6376
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6236, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %58, metadata !6301, metadata !DIExpression()), !dbg !6376
  %60 = and i24 %57, 1024, !dbg !6393
  %61 = icmp eq i24 %60, 0, !dbg !6393
  br i1 %61, label %69, label %62, !dbg !6394

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6395
  call void @llvm.dbg.value(metadata i8* %63, metadata !6236, metadata !DIExpression()), !dbg !6362
  %64 = bitcast i8* %59 to i32*, !dbg !6395
  %65 = load i32, i32* %64, align 4, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %65, metadata !6306, metadata !DIExpression()), !dbg !6396
  %66 = icmp slt i32 %65, 0, !dbg !6397
  br i1 %66, label %67, label %74, !dbg !6399

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6400
  store i24 %68, i24* %15, align 8, !dbg !6400
  br label %74, !dbg !6402

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6403
  %71 = icmp eq i24 %70, 0, !dbg !6403
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6405
  br label %74, !dbg !6405

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6406
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6376
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6376
  call void @llvm.dbg.value(metadata i8* %77, metadata !6236, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %76, metadata !6302, metadata !DIExpression()), !dbg !6376
  store i32 0, i32* %16, align 4, !dbg !6407
  store i32 0, i32* %17, align 8, !dbg !6408
  %78 = lshr i24 %75, 16, !dbg !6406
  call void @llvm.dbg.value(metadata i24 %78, metadata !6309, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6376
  %79 = lshr i24 %75, 11, !dbg !6409
  %80 = and i24 %79, 15, !dbg !6409
  %81 = zext i24 %80 to i32, !dbg !6409
  call void @llvm.dbg.value(metadata i32 %81, metadata !6310, metadata !DIExpression()), !dbg !6376
  %82 = trunc i24 %78 to i3, !dbg !6410
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6410

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6411

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6414
  call void @llvm.dbg.value(metadata i8* %85, metadata !6236, metadata !DIExpression()), !dbg !6362
  %86 = bitcast i8* %77 to i32*, !dbg !6414
  %87 = load i32, i32* %86, align 4, !dbg !6414
  %88 = sext i32 %87 to i64, !dbg !6414
  store i64 %88, i64* %20, align 8, !dbg !6416
  br label %115, !dbg !6417

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6418
  call void @llvm.dbg.value(metadata i8* %90, metadata !6236, metadata !DIExpression()), !dbg !6362
  %91 = bitcast i8* %77 to i32*, !dbg !6418
  %92 = load i32, i32* %91, align 4, !dbg !6418
  %93 = sext i32 %92 to i64, !dbg !6418
  store i64 %93, i64* %20, align 8, !dbg !6421
  br label %115, !dbg !6422

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6423
  %96 = add i32 %95, 7, !dbg !6423
  %97 = and i32 %96, -8, !dbg !6423
  %98 = inttoptr i32 %97 to i8*, !dbg !6423
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6423
  call void @llvm.dbg.value(metadata i8* %99, metadata !6236, metadata !DIExpression()), !dbg !6362
  %100 = inttoptr i32 %97 to i64*, !dbg !6423
  %101 = load i64, i64* %100, align 8, !dbg !6423
  store i64 %101, i64* %20, align 8, !dbg !6424
  br label %115, !dbg !6425

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6426
  %104 = add i32 %103, 7, !dbg !6426
  %105 = and i32 %104, -8, !dbg !6426
  %106 = inttoptr i32 %105 to i8*, !dbg !6426
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6426
  call void @llvm.dbg.value(metadata i8* %107, metadata !6236, metadata !DIExpression()), !dbg !6362
  %108 = inttoptr i32 %105 to i64*, !dbg !6426
  %109 = load i64, i64* %108, align 8, !dbg !6426
  store i64 %109, i64* %20, align 8, !dbg !6427
  br label %115, !dbg !6428

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6429
  call void @llvm.dbg.value(metadata i8* %111, metadata !6236, metadata !DIExpression()), !dbg !6362
  %112 = bitcast i8* %77 to i32*, !dbg !6429
  %113 = load i32, i32* %112, align 4, !dbg !6429
  %114 = sext i32 %113 to i64, !dbg !6430
  store i64 %114, i64* %20, align 8, !dbg !6431
  br label %115, !dbg !6432

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6433
  call void @llvm.dbg.value(metadata i8* %117, metadata !6236, metadata !DIExpression()), !dbg !6362
  %118 = trunc i24 %79 to i4, !dbg !6434
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6434

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6435
  %121 = ashr exact i64 %120, 56, !dbg !6435
  store i64 %121, i64* %20, align 8, !dbg !6438
  br label %177, !dbg !6439

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6440
  %124 = ashr exact i64 %123, 48, !dbg !6440
  store i64 %124, i64* %20, align 8, !dbg !6443
  br label %177, !dbg !6444

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6445

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6448
  call void @llvm.dbg.value(metadata i8* %127, metadata !6236, metadata !DIExpression()), !dbg !6362
  %128 = bitcast i8* %77 to i32*, !dbg !6448
  %129 = load i32, i32* %128, align 4, !dbg !6448
  %130 = zext i32 %129 to i64, !dbg !6448
  store i64 %130, i64* %20, align 8, !dbg !6450
  br label %157, !dbg !6451

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6452
  call void @llvm.dbg.value(metadata i8* %132, metadata !6236, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %132, metadata !6236, metadata !DIExpression()), !dbg !6362
  %133 = bitcast i8* %77 to i32*, !dbg !6452
  %134 = load i32, i32* %133, align 4, !dbg !6452
  %135 = zext i32 %134 to i64, !dbg !6452
  store i64 %135, i64* %20, align 8, !dbg !6452
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6454
  %138 = add i32 %137, 7, !dbg !6454
  %139 = and i32 %138, -8, !dbg !6454
  %140 = inttoptr i32 %139 to i8*, !dbg !6454
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6454
  call void @llvm.dbg.value(metadata i8* %141, metadata !6236, metadata !DIExpression()), !dbg !6362
  %142 = inttoptr i32 %139 to i64*, !dbg !6454
  %143 = load i64, i64* %142, align 8, !dbg !6454
  store i64 %143, i64* %20, align 8, !dbg !6455
  br label %157, !dbg !6456

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6457
  %146 = add i32 %145, 7, !dbg !6457
  %147 = and i32 %146, -8, !dbg !6457
  %148 = inttoptr i32 %147 to i8*, !dbg !6457
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6457
  call void @llvm.dbg.value(metadata i8* %149, metadata !6236, metadata !DIExpression()), !dbg !6362
  %150 = inttoptr i32 %147 to i64*, !dbg !6457
  %151 = load i64, i64* %150, align 8, !dbg !6457
  store i64 %151, i64* %20, align 8, !dbg !6458
  br label %157, !dbg !6459

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6460
  call void @llvm.dbg.value(metadata i8* %153, metadata !6236, metadata !DIExpression()), !dbg !6362
  %154 = bitcast i8* %77 to i32*, !dbg !6460
  %155 = load i32, i32* %154, align 4, !dbg !6460
  %156 = zext i32 %155 to i64, !dbg !6461
  store i64 %156, i64* %20, align 8, !dbg !6462
  br label %157, !dbg !6463

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6464
  call void @llvm.dbg.value(metadata i8* %159, metadata !6236, metadata !DIExpression()), !dbg !6362
  %160 = trunc i24 %79 to i4, !dbg !6465
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6465

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6466
  store i64 %162, i64* %20, align 8, !dbg !6469
  br label %177, !dbg !6470

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6471
  store i64 %164, i64* %20, align 8, !dbg !6474
  br label %177, !dbg !6475

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6476
  %167 = add i32 %166, 7, !dbg !6476
  %168 = and i32 %167, -8, !dbg !6476
  %169 = inttoptr i32 %168 to i8*, !dbg !6476
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6476
  call void @llvm.dbg.value(metadata i8* %170, metadata !6236, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %170, metadata !6236, metadata !DIExpression()), !dbg !6362
  %171 = inttoptr i32 %168 to double*, !dbg !6476
  %172 = load double, double* %171, align 8, !dbg !6476
  store double %172, double* %19, align 8, !dbg !6476
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6480
  call void @llvm.dbg.value(metadata i8* %174, metadata !6236, metadata !DIExpression()), !dbg !6362
  %175 = bitcast i8* %77 to i8**, !dbg !6480
  %176 = load i8*, i8** %175, align 4, !dbg !6480
  store i8* %176, i8** %18, align 8, !dbg !6483
  br label %177, !dbg !6484

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6376
  call void @llvm.dbg.value(metadata i8* %178, metadata !6236, metadata !DIExpression()), !dbg !6362
  %179 = and i24 %75, 3, !dbg !6485
  %180 = icmp eq i24 %179, 0, !dbg !6485
  br i1 %180, label %185, label %181, !dbg !6485

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !6486
  call void @llvm.dbg.value(metadata i32 %182, metadata !6311, metadata !DIExpression()), !dbg !6487
  %183 = icmp slt i32 %182, 0, !dbg !6488
  %184 = add i32 %182, %29, !dbg !6486
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6490
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6491

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !6492
  call void @llvm.dbg.value(metadata i32 %188, metadata !6315, metadata !DIExpression()), !dbg !6493
  %189 = icmp slt i32 %188, 0, !dbg !6494
  %190 = add i32 %29, 1, !dbg !6492
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6496
  call void @llvm.dbg.value(metadata i8* %192, metadata !6303, metadata !DIExpression()), !dbg !6376
  %193 = icmp sgt i32 %76, -1, !dbg !6497
  br i1 %193, label %194, label %196, !dbg !6499

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !6500
  call void @llvm.dbg.value(metadata i32 %195, metadata !6318, metadata !DIExpression()), !dbg !6502
  br label %241, !dbg !6503

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !6504
  call void @llvm.dbg.value(metadata i32 %197, metadata !6318, metadata !DIExpression()), !dbg !6502
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6303, metadata !DIExpression()), !dbg !6376
  %199 = load i64, i64* %20, align 8, !dbg !6506
  %200 = trunc i64 %199 to i8, !dbg !6507
  store i8 %200, i8* %10, align 1, !dbg !6508
  call void @llvm.dbg.value(metadata i8* %23, metadata !6304, metadata !DIExpression()), !dbg !6376
  br label %245, !dbg !6509

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6510
  %203 = icmp eq i24 %202, 0, !dbg !6510
  %204 = trunc i24 %75 to i8, !dbg !6512
  %205 = shl i8 %204, 1, !dbg !6512
  %206 = and i8 %205, 32, !dbg !6512
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6512
  call void @llvm.dbg.value(metadata i8 %207, metadata !6305, metadata !DIExpression()), !dbg !6376
  %208 = load i64, i64* %20, align 8, !dbg !6513
  call void @llvm.dbg.value(metadata i64 %208, metadata !6243, metadata !DIExpression()), !dbg !6362
  %209 = icmp slt i64 %208, 0, !dbg !6514
  br i1 %209, label %210, label %212, !dbg !6516

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6305, metadata !DIExpression()), !dbg !6376
  %211 = sub nsw i64 0, %208, !dbg !6517
  store i64 %211, i64* %20, align 8, !dbg !6519
  br label %212, !dbg !6520

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6376
  call void @llvm.dbg.value(metadata i8 %213, metadata !6305, metadata !DIExpression()), !dbg !6376
  %214 = load i64, i64* %20, align 8, !dbg !6521
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6522
  call void @llvm.dbg.value(metadata i8* %215, metadata !6303, metadata !DIExpression()), !dbg !6376
  br label %216, !dbg !6523

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6524
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6525
  call void @llvm.dbg.value(metadata i8* %218, metadata !6303, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8 %217, metadata !6305, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.label(metadata !6361), !dbg !6526
  %219 = icmp sgt i32 %76, -1, !dbg !6527
  br i1 %219, label %222, label %220, !dbg !6528

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6529
  br label %245, !dbg !6528

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6531
  %224 = sub i32 %22, %223, !dbg !6531
  call void @llvm.dbg.value(metadata i32 %224, metadata !6320, metadata !DIExpression()), !dbg !6532
  %225 = load i24, i24* %15, align 8, !dbg !6533
  %226 = and i24 %225, -65, !dbg !6533
  store i24 %226, i24* %15, align 8, !dbg !6533
  %227 = icmp ugt i32 %76, %224, !dbg !6534
  br i1 %227, label %228, label %245, !dbg !6536

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6537
  store i32 %229, i32* %16, align 4, !dbg !6539
  br label %245, !dbg !6540

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6541
  %232 = icmp eq i8* %231, null, !dbg !6543
  br i1 %232, label %245, label %233, !dbg !6544

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6545
  %235 = zext i32 %234 to i64, !dbg !6545
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !6547
  call void @llvm.dbg.value(metadata i8* %236, metadata !6303, metadata !DIExpression()), !dbg !6376
  %237 = load i24, i24* %15, align 8, !dbg !6548
  %238 = or i24 %237, 1048576, !dbg !6548
  store i24 %238, i24* %15, align 8, !dbg !6548
  store i8 120, i8* %21, align 1, !dbg !6549
  br label %216, !dbg !6550

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6551
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !6554
  br label %363, !dbg !6555

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6556
  call void @llvm.dbg.value(metadata i32 %242, metadata !6318, metadata !DIExpression()), !dbg !6502
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6557
  call void @llvm.dbg.value(metadata i32 -1, metadata !6302, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i32 %29, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %192, metadata !6303, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8* %243, metadata !6304, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8 0, metadata !6305, metadata !DIExpression()), !dbg !6376
  %244 = icmp eq i8* %192, null, !dbg !6558
  br i1 %244, label %363, label %245, !dbg !6560, !llvm.loop !6372

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6529
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6376
  call void @llvm.dbg.value(metadata i32 0, metadata !6324, metadata !DIExpression()), !dbg !6376
  %250 = zext i8 %249 to i32, !dbg !6561
  %251 = icmp eq i8 %249, 0, !dbg !6563
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  call void @llvm.dbg.value(metadata i32 undef, metadata !6323, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  call void @llvm.dbg.value(metadata i32 undef, metadata !6323, metadata !DIExpression()), !dbg !6376
  %252 = icmp sgt i32 %58, 0, !dbg !6564
  br i1 %252, label %253, label %302, !dbg !6565

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6529
  %255 = icmp eq i24 %254, 0, !dbg !6529
  %256 = ptrtoint i8* %248 to i32, !dbg !6566
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  %257 = ptrtoint i8* %247 to i32, !dbg !6566
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  %258 = xor i1 %251, true, !dbg !6567
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  %259 = sext i1 %258 to i32, !dbg !6567
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  %260 = lshr i24 %246, 19, !dbg !6568
  %261 = and i24 %260, 1, !dbg !6568
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6568
  %263 = zext i24 %262 to i32, !dbg !6568
  %264 = add i32 %257, %259, !dbg !6568
  %265 = add i32 %256, %263, !dbg !6568
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  %266 = and i24 %246, 4194304, !dbg !6569
  %267 = icmp eq i24 %266, 0, !dbg !6569
  %268 = load i32, i32* %16, align 4, !dbg !6571
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6376
  call void @llvm.dbg.value(metadata i32 undef, metadata !6323, metadata !DIExpression()), !dbg !6376
  %269 = load i32, i32* %17, align 8, !dbg !6572
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6572
  call void @llvm.dbg.value(metadata i32 undef, metadata !6323, metadata !DIExpression()), !dbg !6376
  %271 = add i32 %264, %58, !dbg !6572
  %272 = add i32 %265, %268, !dbg !6572
  %273 = add i32 %272, %270, !dbg !6573
  %274 = sub i32 %271, %273, !dbg !6573
  call void @llvm.dbg.value(metadata i32 %274, metadata !6301, metadata !DIExpression()), !dbg !6376
  %275 = and i24 %246, 4, !dbg !6574
  %276 = icmp eq i24 %275, 0, !dbg !6574
  br i1 %276, label %277, label %302, !dbg !6575

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6325, metadata !DIExpression()), !dbg !6576
  %278 = and i24 %246, 64, !dbg !6577
  %279 = icmp eq i24 %278, 0, !dbg !6577
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6578
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6578
  %282 = select i1 %279, i32 32, i32 48, !dbg !6578
  br i1 %280, label %287, label %283, !dbg !6578

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !6579
  call void @llvm.dbg.value(metadata i32 %284, metadata !6330, metadata !DIExpression()), !dbg !6580
  %285 = icmp slt i32 %284, 0, !dbg !6581
  %286 = add i32 %29, 1, !dbg !6579
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6376
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %290, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8 undef, metadata !6325, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.value(metadata i8 %288, metadata !6305, metadata !DIExpression()), !dbg !6376
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6583
  %292 = add i32 %291, -1, !dbg !6583
  br label %293, !dbg !6583

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6584
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %295, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %294, metadata !6301, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i32 %294, metadata !6301, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6376
  %296 = icmp sgt i32 %294, 0, !dbg !6585
  br i1 %296, label %297, label %302, !dbg !6583

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6586
  call void @llvm.dbg.value(metadata i32 %298, metadata !6301, metadata !DIExpression()), !dbg !6376
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !6587
  call void @llvm.dbg.value(metadata i32 %299, metadata !6336, metadata !DIExpression()), !dbg !6588
  %300 = icmp slt i32 %299, 0, !dbg !6589
  %301 = add i32 %295, 1, !dbg !6587
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %300, label %361, label %293, !llvm.loop !6591

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6376
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6376
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %305, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %304, metadata !6301, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8 %303, metadata !6305, metadata !DIExpression()), !dbg !6376
  %306 = icmp eq i8 %303, 0, !dbg !6593
  br i1 %306, label %312, label %307, !dbg !6594

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6595
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !6596
  call void @llvm.dbg.value(metadata i32 %309, metadata !6339, metadata !DIExpression()), !dbg !6597
  %310 = icmp slt i32 %309, 0, !dbg !6598
  %311 = add i32 %305, 1, !dbg !6596
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %313, metadata !6242, metadata !DIExpression()), !dbg !6362
  %314 = lshr i24 %246, 20, !dbg !6600
  %315 = lshr i24 %246, 19, !dbg !6601
  %316 = or i24 %314, %315, !dbg !6602
  %317 = and i24 %316, 1, !dbg !6602
  %318 = icmp eq i24 %317, 0, !dbg !6602
  br i1 %318, label %323, label %319, !dbg !6603

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6604
  call void @llvm.dbg.value(metadata i32 %320, metadata !6343, metadata !DIExpression()), !dbg !6605
  %321 = icmp slt i32 %320, 0, !dbg !6606
  %322 = add i32 %313, 1, !dbg !6604
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %324, metadata !6242, metadata !DIExpression()), !dbg !6362
  %325 = and i24 %246, 1048576, !dbg !6608
  %326 = icmp eq i24 %325, 0, !dbg !6608
  br i1 %326, label %333, label %327, !dbg !6609

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6610
  %329 = zext i8 %328 to i32, !dbg !6610
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !6610
  call void @llvm.dbg.value(metadata i32 %330, metadata !6349, metadata !DIExpression()), !dbg !6611
  %331 = icmp slt i32 %330, 0, !dbg !6612
  %332 = add i32 %324, 1, !dbg !6610
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %334, metadata !6242, metadata !DIExpression()), !dbg !6362
  %335 = load i32, i32* %16, align 4, !dbg !6614
  call void @llvm.dbg.value(metadata i32 %335, metadata !6324, metadata !DIExpression()), !dbg !6376
  br label %336, !dbg !6615

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6616
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %338, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %337, metadata !6324, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6376
  %339 = icmp sgt i32 %337, 0, !dbg !6617
  br i1 %339, label %340, label %345, !dbg !6615

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6618
  call void @llvm.dbg.value(metadata i32 %341, metadata !6324, metadata !DIExpression()), !dbg !6376
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !6619
  call void @llvm.dbg.value(metadata i32 %342, metadata !6353, metadata !DIExpression()), !dbg !6620
  %343 = icmp slt i32 %342, 0, !dbg !6621
  %344 = add i32 %338, 1, !dbg !6619
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %343, label %361, label %336, !llvm.loop !6623

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !6625
  call void @llvm.dbg.value(metadata i32 %346, metadata !6356, metadata !DIExpression()), !dbg !6626
  %347 = icmp slt i32 %346, 0, !dbg !6627
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6625
  call void @llvm.dbg.value(metadata i32 %349, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %304, metadata !6301, metadata !DIExpression()), !dbg !6376
  %350 = icmp sgt i32 %304, 0, !dbg !6629
  br i1 %350, label %351, label %363, !dbg !6630

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6630
  %353 = add i32 %352, %338, !dbg !6630
  br label %354, !dbg !6630

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %355, metadata !6301, metadata !DIExpression()), !dbg !6376
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !6631
  call void @llvm.dbg.value(metadata i32 %356, metadata !6358, metadata !DIExpression()), !dbg !6632
  %357 = icmp slt i32 %356, 0, !dbg !6633
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6635
  call void @llvm.dbg.value(metadata i32 undef, metadata !6242, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6362
  call void @llvm.dbg.value(metadata i32 %359, metadata !6301, metadata !DIExpression()), !dbg !6376
  %360 = icmp sgt i32 %355, 1, !dbg !6629
  br i1 %360, label %354, label %363, !dbg !6630, !llvm.loop !6636

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6373
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6366
  call void @llvm.dbg.value(metadata i32 %364, metadata !6242, metadata !DIExpression()), !dbg !6362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !6373
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6362
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !6638
  ret i32 %366, !dbg !6638
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6639 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6643, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.value(metadata i8* %1, metadata !6644, metadata !DIExpression()), !dbg !6645
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6646
  store i24 0, i24* %3, align 4, !dbg !6646
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6646
  store i8 0, i8* %4, align 1, !dbg !6646
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6646
  store i32 0, i32* %5, align 4, !dbg !6646
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6646
  store i32 0, i32* %6, align 4, !dbg !6646
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6647
  call void @llvm.dbg.value(metadata i8* %7, metadata !6644, metadata !DIExpression()), !dbg !6645
  %8 = load i8, i8* %7, align 1, !dbg !6648
  %9 = icmp eq i8 %8, 37, !dbg !6650
  br i1 %9, label %10, label %12, !dbg !6651

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6652
  call void @llvm.dbg.value(metadata i8* %11, metadata !6644, metadata !DIExpression()), !dbg !6645
  store i8 37, i8* %4, align 1, !dbg !6654
  br label %18, !dbg !6655

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !6656
  call void @llvm.dbg.value(metadata i8* %13, metadata !6644, metadata !DIExpression()), !dbg !6645
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !6657
  call void @llvm.dbg.value(metadata i8* %14, metadata !6644, metadata !DIExpression()), !dbg !6645
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !6658
  call void @llvm.dbg.value(metadata i8* %15, metadata !6644, metadata !DIExpression()), !dbg !6645
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !6659
  call void @llvm.dbg.value(metadata i8* %16, metadata !6644, metadata !DIExpression()), !dbg !6645
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !6660
  call void @llvm.dbg.value(metadata i8* %17, metadata !6644, metadata !DIExpression()), !dbg !6645
  br label %18, !dbg !6661

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6645
  ret i8* %19, !dbg !6662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6663 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6667, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.value(metadata i8* %1, metadata !6668, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.value(metadata i8* %2, metadata !6669, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.value(metadata i8* %3, metadata !6670, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.value(metadata i32 0, metadata !6671, metadata !DIExpression()), !dbg !6674
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6675

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6676
  call void @llvm.dbg.value(metadata i32 %9, metadata !6671, metadata !DIExpression()), !dbg !6674
  call void @llvm.dbg.value(metadata i8* %8, metadata !6669, metadata !DIExpression()), !dbg !6674
  %10 = icmp ult i8* %8, %3, !dbg !6677
  br i1 %10, label %11, label %13, !dbg !6678

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6679
  br label %17, !dbg !6678

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6680

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6681
  %16 = icmp eq i8 %15, 0, !dbg !6680
  br i1 %16, label %24, label %17, !dbg !6675

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6679
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6682
  call void @llvm.dbg.value(metadata i8* %19, metadata !6669, metadata !DIExpression()), !dbg !6674
  %20 = zext i8 %18 to i32, !dbg !6683
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !6684
  call void @llvm.dbg.value(metadata i32 %21, metadata !6672, metadata !DIExpression()), !dbg !6685
  %22 = icmp slt i32 %21, 0, !dbg !6686
  %23 = add i32 %9, 1, !dbg !6688
  call void @llvm.dbg.value(metadata i32 undef, metadata !6671, metadata !DIExpression()), !dbg !6674
  br i1 %22, label %24, label %7, !llvm.loop !6689

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6674
  ret i32 %25, !dbg !6691
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6692 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6696, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6697, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata i8* %2, metadata !6698, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata i8* %3, metadata !6699, metadata !DIExpression()), !dbg !6706
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6707
  %6 = load i8, i8* %5, align 1, !dbg !6707
  %7 = zext i8 %6 to i32, !dbg !6708
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !6709
  %9 = icmp eq i32 %8, 0, !dbg !6709
  call void @llvm.dbg.value(metadata i1 %9, metadata !6700, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6706
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !6710
  call void @llvm.dbg.value(metadata i32 %10, metadata !6701, metadata !DIExpression()), !dbg !6706
  %11 = ptrtoint i8* %3 to i32, !dbg !6711
  %12 = ptrtoint i8* %2 to i32, !dbg !6711
  %13 = sub i32 %11, %12, !dbg !6711
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6712
  call void @llvm.dbg.value(metadata i8* %14, metadata !6703, metadata !DIExpression()), !dbg !6706
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6713

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6706
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6696, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata i8* %18, metadata !6703, metadata !DIExpression()), !dbg !6706
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6714
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %25, metadata !6704, metadata !DIExpression()), !dbg !6716
  %26 = icmp ult i32 %25, 10, !dbg !6717
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6718
  %28 = add i32 %27, %25, !dbg !6716
  %29 = trunc i32 %28 to i8, !dbg !6718
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6719
  call void @llvm.dbg.value(metadata i8* %30, metadata !6703, metadata !DIExpression()), !dbg !6706
  store i8 %29, i8* %30, align 1, !dbg !6720
  call void @llvm.dbg.value(metadata i64 %22, metadata !6696, metadata !DIExpression()), !dbg !6706
  %31 = icmp uge i64 %19, %15, !dbg !6721
  %32 = icmp ugt i8* %30, %2, !dbg !6722
  %33 = and i1 %31, %32, !dbg !6722
  br i1 %33, label %17, label %34, !dbg !6723, !llvm.loop !6724

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6726
  %36 = load i24, i24* %35, align 4, !dbg !6726
  %37 = and i24 %36, 32, !dbg !6726
  %38 = icmp eq i24 %37, 0, !dbg !6726
  br i1 %38, label %44, label %39, !dbg !6728

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6729

40:                                               ; preds = %39
  br label %41, !dbg !6731

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6735
  store i24 %43, i24* %35, align 4, !dbg !6735
  br label %44, !dbg !6736

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !6737 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6743, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i8* %1, metadata !6744, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 %2, metadata !6745, metadata !DIExpression()), !dbg !6746
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6747
  %5 = load i24, i24* %4, align 4, !dbg !6747
  %6 = lshr i24 %5, 11, !dbg !6747
  %7 = and i24 %6, 15, !dbg !6747
  %8 = zext i24 %7 to i32, !dbg !6747
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6748

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6749
  store i32 %2, i32* %10, align 4, !dbg !6751
  br label %28, !dbg !6752

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6753
  store i8 %12, i8* %1, align 1, !dbg !6754
  br label %28, !dbg !6755

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6756
  %15 = bitcast i8* %1 to i16*, !dbg !6757
  store i16 %14, i16* %15, align 2, !dbg !6758
  br label %28, !dbg !6759

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6760
  store i32 %2, i32* %17, align 4, !dbg !6761
  br label %28, !dbg !6762

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6763
  %20 = bitcast i8* %1 to i64*, !dbg !6764
  store i64 %19, i64* %20, align 8, !dbg !6765
  br label %28, !dbg !6766

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6767
  %23 = bitcast i8* %1 to i64*, !dbg !6768
  store i64 %22, i64* %23, align 8, !dbg !6769
  br label %28, !dbg !6770

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6771
  store i32 %2, i32* %25, align 4, !dbg !6772
  br label %28, !dbg !6773

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6774
  store i32 %2, i32* %27, align 4, !dbg !6775
  br label %28, !dbg !6776

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6777
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !6778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6781, metadata !DIExpression()), !dbg !6782
  %2 = add i32 %0, -65, !dbg !6783
  %3 = icmp ult i32 %2, 26, !dbg !6784
  %4 = zext i1 %3 to i32, !dbg !6784
  ret i32 %4, !dbg !6785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !6786 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6790, metadata !DIExpression()), !dbg !6791
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6792

2:                                                ; preds = %1
  br label %4, !dbg !6793

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6795

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6796
  ret i32 %5, !dbg !6797
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6798 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6800, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i8* %1, metadata !6801, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i8 1, metadata !6802, metadata !DIExpression()), !dbg !6803
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6804

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6802, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i8* %5, metadata !6801, metadata !DIExpression()), !dbg !6803
  %6 = load i8, i8* %5, align 1, !dbg !6805
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6807

7:                                                ; preds = %4
  br label %11, !dbg !6808

8:                                                ; preds = %4
  br label %11, !dbg !6810

9:                                                ; preds = %4
  br label %11, !dbg !6811

10:                                               ; preds = %4
  br label %11, !dbg !6812

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6813
  %14 = or i24 %13, %12, !dbg !6813
  store i24 %14, i24* %3, align 4, !dbg !6813
  call void @llvm.dbg.value(metadata i8 poison, metadata !6802, metadata !DIExpression()), !dbg !6803
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6801, metadata !DIExpression()), !dbg !6803
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6802, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i8* %15, metadata !6801, metadata !DIExpression()), !dbg !6803
  %17 = load i24, i24* %3, align 4, !dbg !6814
  %18 = and i24 %17, 68, !dbg !6816
  %19 = icmp eq i24 %18, 68, !dbg !6816
  br i1 %19, label %20, label %22, !dbg !6816

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6817
  store i24 %21, i24* %3, align 4, !dbg !6817
  br label %22, !dbg !6819

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6820
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6821 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6823, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i8* %1, metadata !6824, metadata !DIExpression()), !dbg !6827
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6828
  %5 = load i24, i24* %4, align 4, !dbg !6829
  %6 = or i24 %5, 128, !dbg !6829
  store i24 %6, i24* %4, align 4, !dbg !6829
  call void @llvm.dbg.value(metadata i8* %1, metadata !6824, metadata !DIExpression()), !dbg !6827
  %7 = load i8, i8* %1, align 1, !dbg !6830
  %8 = icmp eq i8 %7, 42, !dbg !6832
  br i1 %8, label %9, label %12, !dbg !6833

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6834
  store i24 %10, i24* %4, align 4, !dbg !6834
  call void @llvm.dbg.value(metadata i8* %1, metadata !6824, metadata !DIExpression()), !dbg !6827
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6836
  call void @llvm.dbg.value(metadata i8* %11, metadata !6824, metadata !DIExpression()), !dbg !6827
  store i8* %11, i8** %3, align 4, !dbg !6836
  br label %29, !dbg !6837

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6825, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i8** %3, metadata !6824, metadata !DIExpression(DW_OP_deref)), !dbg !6827
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %13, metadata !6826, metadata !DIExpression()), !dbg !6827
  %14 = load i8*, i8** %3, align 4, !dbg !6839
  call void @llvm.dbg.value(metadata i8* %14, metadata !6824, metadata !DIExpression()), !dbg !6827
  %15 = icmp eq i8* %14, %1, !dbg !6841
  br i1 %15, label %29, label %16, !dbg !6842

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6843
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6845
  store i32 %13, i32* %18, align 4, !dbg !6846
  %19 = lshr i32 %13, 31, !dbg !6847
  %20 = lshr i24 %17, 1, !dbg !6848
  %21 = and i24 %20, 1, !dbg !6848
  %22 = zext i24 %21 to i32, !dbg !6848
  %23 = or i32 %19, %22, !dbg !6848
  %24 = trunc i32 %23 to i24, !dbg !6848
  %25 = shl nuw nsw i24 %24, 1, !dbg !6848
  %26 = and i24 %17, -131, !dbg !6848
  %27 = or i24 %26, 128, !dbg !6848
  %28 = or i24 %25, %27, !dbg !6848
  store i24 %28, i24* %4, align 4, !dbg !6848
  br label %29, !dbg !6849

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6827
  ret i8* %30, !dbg !6850
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6851 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6853, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i8* %1, metadata !6854, metadata !DIExpression()), !dbg !6856
  %4 = load i8, i8* %1, align 1, !dbg !6857
  %5 = icmp eq i8 %4, 46, !dbg !6858
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6859
  %7 = load i24, i24* %6, align 4, !dbg !6860
  %8 = select i1 %5, i24 512, i24 0, !dbg !6860
  %9 = and i24 %7, -513, !dbg !6860
  %10 = or i24 %9, %8, !dbg !6860
  store i24 %10, i24* %6, align 4, !dbg !6860
  br i1 %5, label %11, label %32, !dbg !6861

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6854, metadata !DIExpression()), !dbg !6856
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6862
  call void @llvm.dbg.value(metadata i8* %12, metadata !6854, metadata !DIExpression()), !dbg !6856
  store i8* %12, i8** %3, align 4, !dbg !6862
  %13 = load i8, i8* %12, align 1, !dbg !6863
  %14 = icmp eq i8 %13, 42, !dbg !6865
  br i1 %14, label %15, label %18, !dbg !6866

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6867
  store i24 %16, i24* %6, align 4, !dbg !6867
  call void @llvm.dbg.value(metadata i8* %12, metadata !6854, metadata !DIExpression()), !dbg !6856
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6869
  call void @llvm.dbg.value(metadata i8* %17, metadata !6854, metadata !DIExpression()), !dbg !6856
  store i8* %17, i8** %3, align 4, !dbg !6869
  br label %32, !dbg !6870

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6854, metadata !DIExpression(DW_OP_deref)), !dbg !6856
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !6871
  call void @llvm.dbg.value(metadata i32 %19, metadata !6855, metadata !DIExpression()), !dbg !6856
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6872
  store i32 %19, i32* %20, align 4, !dbg !6873
  %21 = lshr i32 %19, 31, !dbg !6874
  %22 = load i24, i24* %6, align 4, !dbg !6875
  %23 = lshr i24 %22, 1, !dbg !6875
  %24 = and i24 %23, 1, !dbg !6875
  %25 = zext i24 %24 to i32, !dbg !6875
  %26 = or i32 %21, %25, !dbg !6875
  %27 = trunc i32 %26 to i24, !dbg !6875
  %28 = shl nuw nsw i24 %27, 1, !dbg !6875
  %29 = and i24 %22, -3, !dbg !6875
  %30 = or i24 %28, %29, !dbg !6875
  store i24 %30, i24* %6, align 4, !dbg !6875
  %31 = load i8*, i8** %3, align 4, !dbg !6876
  call void @llvm.dbg.value(metadata i8* %31, metadata !6854, metadata !DIExpression()), !dbg !6856
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6856
  ret i8* %33, !dbg !6877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6878 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6880, metadata !DIExpression()), !dbg !6882
  call void @llvm.dbg.value(metadata i8* %1, metadata !6881, metadata !DIExpression()), !dbg !6882
  %3 = load i8, i8* %1, align 1, !dbg !6883
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6884

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6885
  call void @llvm.dbg.value(metadata i8* %5, metadata !6881, metadata !DIExpression()), !dbg !6882
  %6 = load i8, i8* %5, align 1, !dbg !6888
  %7 = icmp eq i8 %6, 104, !dbg !6889
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6890
  %9 = load i24, i24* %8, align 4, !dbg !6890
  %10 = and i24 %9, -30721, !dbg !6890
  br i1 %7, label %11, label %14, !dbg !6891

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6892
  store i24 %12, i24* %8, align 4, !dbg !6892
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6894
  call void @llvm.dbg.value(metadata i8* %13, metadata !6881, metadata !DIExpression()), !dbg !6882
  br label %56, !dbg !6895

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6896
  store i24 %15, i24* %8, align 4, !dbg !6896
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6898
  call void @llvm.dbg.value(metadata i8* %17, metadata !6881, metadata !DIExpression()), !dbg !6882
  %18 = load i8, i8* %17, align 1, !dbg !6900
  %19 = icmp eq i8 %18, 108, !dbg !6901
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6902
  %21 = load i24, i24* %20, align 4, !dbg !6902
  %22 = and i24 %21, -30721, !dbg !6902
  br i1 %19, label %23, label %26, !dbg !6903

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6904
  store i24 %24, i24* %20, align 4, !dbg !6904
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6906
  call void @llvm.dbg.value(metadata i8* %25, metadata !6881, metadata !DIExpression()), !dbg !6882
  br label %56, !dbg !6907

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6908
  store i24 %27, i24* %20, align 4, !dbg !6908
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6910
  %30 = load i24, i24* %29, align 4, !dbg !6911
  %31 = and i24 %30, -30721, !dbg !6911
  %32 = or i24 %31, 10240, !dbg !6911
  store i24 %32, i24* %29, align 4, !dbg !6911
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6912
  call void @llvm.dbg.value(metadata i8* %33, metadata !6881, metadata !DIExpression()), !dbg !6882
  br label %56, !dbg !6913

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6914
  %36 = load i24, i24* %35, align 4, !dbg !6915
  %37 = and i24 %36, -30721, !dbg !6915
  %38 = or i24 %37, 12288, !dbg !6915
  store i24 %38, i24* %35, align 4, !dbg !6915
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6916
  call void @llvm.dbg.value(metadata i8* %39, metadata !6881, metadata !DIExpression()), !dbg !6882
  br label %56, !dbg !6917

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6918
  %42 = load i24, i24* %41, align 4, !dbg !6919
  %43 = and i24 %42, -30721, !dbg !6919
  %44 = or i24 %43, 14336, !dbg !6919
  store i24 %44, i24* %41, align 4, !dbg !6919
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6920
  call void @llvm.dbg.value(metadata i8* %45, metadata !6881, metadata !DIExpression()), !dbg !6882
  br label %56, !dbg !6921

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6922
  %48 = load i24, i24* %47, align 4, !dbg !6923
  %49 = and i24 %48, -30723, !dbg !6923
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6924
  call void @llvm.dbg.value(metadata i8* %50, metadata !6881, metadata !DIExpression()), !dbg !6882
  %51 = or i24 %49, 16386, !dbg !6925
  store i24 %51, i24* %47, align 4, !dbg !6925
  br label %56, !dbg !6926

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6927
  %54 = load i24, i24* %53, align 4, !dbg !6928
  %55 = and i24 %54, -30721, !dbg !6928
  store i24 %55, i24* %53, align 4, !dbg !6928
  br label %56, !dbg !6929

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6881, metadata !DIExpression()), !dbg !6882
  ret i8* %57, !dbg !6930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6931 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6933, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8* %1, metadata !6934, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8 0, metadata !6935, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8* %1, metadata !6934, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6938
  %3 = load i8, i8* %1, align 1, !dbg !6939
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6940
  store i8 %3, i8* %4, align 1, !dbg !6941
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6942

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6943

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6944
  %9 = load i24, i24* %8, align 4, !dbg !6944
  %10 = and i24 %9, -458753, !dbg !6944
  %11 = or i24 %10, %7, !dbg !6944
  call void @llvm.dbg.label(metadata !6936), !dbg !6945
  %12 = and i24 %9, 30720, !dbg !6946
  %13 = icmp eq i24 %12, 16384, !dbg !6946
  %14 = zext i1 %13 to i24, !dbg !6948
  %15 = or i24 %11, %14, !dbg !6948
  %16 = icmp eq i8 %3, 99, !dbg !6949
  br i1 %16, label %17, label %43, !dbg !6951

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6952
  %19 = icmp ne i24 %18, 0, !dbg !6952
  call void @llvm.dbg.value(metadata i1 %19, metadata !6935, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6938
  br label %43, !dbg !6954

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6955
  %22 = load i24, i24* %21, align 4, !dbg !6956
  %23 = and i24 %22, -458753, !dbg !6956
  %24 = or i24 %23, 262144, !dbg !6956
  call void @llvm.dbg.value(metadata i8 1, metadata !6935, metadata !DIExpression()), !dbg !6938
  br label %43, !dbg !6957

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6960
  %27 = load i24, i24* %26, align 4, !dbg !6961
  %28 = and i24 %27, -458753, !dbg !6961
  %29 = or i24 %28, 196608, !dbg !6961
  %30 = and i24 %27, 30720, !dbg !6962
  %31 = icmp eq i24 %30, 16384, !dbg !6962
  br label %43, !dbg !6964

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6965
  %34 = load i24, i24* %33, align 4, !dbg !6966
  %35 = and i24 %34, -458753, !dbg !6966
  %36 = or i24 %35, 196608, !dbg !6966
  %37 = and i24 %34, 30720, !dbg !6967
  %38 = icmp ne i24 %37, 0, !dbg !6967
  br label %43, !dbg !6969

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6970
  %41 = load i24, i24* %40, align 4, !dbg !6971
  %42 = or i24 %41, 1, !dbg !6971
  br label %43, !dbg !6972

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6973
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6974
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6975
  call void @llvm.dbg.value(metadata i8* %48, metadata !6934, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8 poison, metadata !6935, metadata !DIExpression()), !dbg !6938
  %49 = lshr i24 %44, 1, !dbg !6973
  %50 = and i24 %49, 1, !dbg !6973
  %51 = zext i24 %50 to i32, !dbg !6973
  %52 = or i32 %51, %47, !dbg !6973
  %53 = trunc i32 %52 to i24, !dbg !6973
  %54 = shl nuw nsw i24 %53, 1, !dbg !6973
  %55 = and i24 %44, -3, !dbg !6973
  %56 = or i24 %54, %55, !dbg !6973
  store i24 %56, i24* %46, align 4, !dbg !6973
  ret i8* %48, !dbg !6976
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6977 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6981, metadata !DIExpression()), !dbg !6984
  %2 = load i8*, i8** %0, align 4, !dbg !6985
  call void @llvm.dbg.value(metadata i8* %2, metadata !6982, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i32 0, metadata !6983, metadata !DIExpression()), !dbg !6984
  %3 = load i8, i8* %2, align 1, !dbg !6986
  %4 = zext i8 %3 to i32, !dbg !6987
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !6988
  %6 = icmp eq i32 %5, 0, !dbg !6989
  br i1 %6, label %19, label %7, !dbg !6989

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6983, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i8* %10, metadata !6982, metadata !DIExpression()), !dbg !6984
  %11 = mul i32 %9, 10, !dbg !6990
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6992
  call void @llvm.dbg.value(metadata i8* %12, metadata !6982, metadata !DIExpression()), !dbg !6984
  %13 = add i32 %11, -48, !dbg !6993
  %14 = add i32 %13, %8, !dbg !6994
  call void @llvm.dbg.value(metadata i32 %14, metadata !6983, metadata !DIExpression()), !dbg !6984
  %15 = load i8, i8* %12, align 1, !dbg !6986
  %16 = zext i8 %15 to i32, !dbg !6987
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !6988
  %18 = icmp eq i32 %17, 0, !dbg !6989
  br i1 %18, label %19, label %7, !dbg !6989, !llvm.loop !6995

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6984
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6984
  store i8* %20, i8** %0, align 4, !dbg !6997
  ret i32 %21, !dbg !6998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !6999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7001, metadata !DIExpression()), !dbg !7002
  %2 = add i32 %0, -48, !dbg !7003
  %3 = icmp ult i32 %2, 10, !dbg !7004
  %4 = zext i1 %3 to i32, !dbg !7004
  ret i32 %4, !dbg !7005
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !7006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7011, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %1, metadata !7012, metadata !DIExpression()), !dbg !7013
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !7014, !srcloc !7016
  ret void, !dbg !7017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7018 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7020, metadata !DIExpression()), !dbg !7028
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7029
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7029
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7021, metadata !DIExpression()), !dbg !7030
  call void @llvm.va_start(i8* nonnull %3), !dbg !7031
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7032
  %5 = load i32, i32* %4, align 4, !dbg !7032
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7032
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !7032
  call void @llvm.va_end(i8* nonnull %3), !dbg !7033
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7034
  ret void, !dbg !7034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !7035 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #23, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #23, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #23, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #23, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #23, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #23, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #23, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #23, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #23, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #23, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #23, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #23, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #23, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #23, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #23, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #23, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #23, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #23, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #23, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #23, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !7205, !srcloc !7206
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !7207, !srcloc !7208
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !7209, !srcloc !7210
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !7211, !srcloc !7212
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !7213, !srcloc !7214
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !7215, !srcloc !7216
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !7217, !srcloc !7218
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !7219, !srcloc !7220
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !7221, !srcloc !7222
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !7223, !srcloc !7224
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !7225, !srcloc !7226
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !7227, !srcloc !7228
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !7229, !srcloc !7230
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !7231, !srcloc !7232
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !7233, !srcloc !7234
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !7235, !srcloc !7236
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !7237, !srcloc !7238
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !7239, !srcloc !7240
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !7241, !srcloc !7242
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !7243, !srcloc !7244
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !7245, !srcloc !7246
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !7247, !srcloc !7248
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !7249, !srcloc !7250
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !7251, !srcloc !7252
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !7253, !srcloc !7254
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !7255, !srcloc !7256
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !7257, !srcloc !7258
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !7259, !srcloc !7260
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !7261, !srcloc !7262
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !7263, !srcloc !7264
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !7265, !srcloc !7266
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !7267, !srcloc !7268
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !7269, !srcloc !7270
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !7271, !srcloc !7272
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !7273, !srcloc !7274
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !7275, !srcloc !7276
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !7277, !srcloc !7278
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !7279, !srcloc !7280
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !7281, !srcloc !7282
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !7283, !srcloc !7284
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !7285, !srcloc !7286
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7287, !srcloc !7288
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !7289, !srcloc !7290
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !7291, !srcloc !7292
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !7293, !srcloc !7294
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !7295, !srcloc !7296
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7299, !srcloc !7300
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !7301, !srcloc !7302
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !7303, !srcloc !7304
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !7305, !srcloc !7306
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !7307, !srcloc !7308
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !7309, !srcloc !7310
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !7311, !srcloc !7312
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !7313, !srcloc !7314
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !7315, !srcloc !7316
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !7317, !srcloc !7318
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !7319, !srcloc !7320
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !7321, !srcloc !7322
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !7323, !srcloc !7324
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !7325, !srcloc !7326
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !7327, !srcloc !7328
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !7329, !srcloc !7330
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #23, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !7411, !srcloc !7412
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !7413, !srcloc !7414
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !7415, !srcloc !7416
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !7417, !srcloc !7418
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !7419, !srcloc !7420
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #23, !dbg !7421, !srcloc !7422
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !7423, !srcloc !7424
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !7425, !srcloc !7426
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7427, !srcloc !7428
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !7429, !srcloc !7430
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !7431, !srcloc !7432
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !7433, !srcloc !7434
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !7435, !srcloc !7436
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !7437, !srcloc !7438
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !7439, !srcloc !7440
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !7441, !srcloc !7442
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !7443, !srcloc !7444
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !7445, !srcloc !7446
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !7447, !srcloc !7448
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !7449, !srcloc !7450
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !7451, !srcloc !7452
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !7453, !srcloc !7454
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !7455, !srcloc !7456
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !7457, !srcloc !7458
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !7459, !srcloc !7460
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !7461, !srcloc !7462
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !7463, !srcloc !7464
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !7465, !srcloc !7466
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !7467, !srcloc !7468
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !7469, !srcloc !7470
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !7471, !srcloc !7472
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !7473, !srcloc !7474
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !7475, !srcloc !7476
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !7477, !srcloc !7478
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !7479, !srcloc !7480
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !7481, !srcloc !7482
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !7483, !srcloc !7484
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !7485, !srcloc !7486
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !7487, !srcloc !7488
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !7489, !srcloc !7490
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !7491, !srcloc !7492
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !7493, !srcloc !7494
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !7495, !srcloc !7496
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !7497, !srcloc !7498
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !7499, !srcloc !7500
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !7501, !srcloc !7502
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !7503, !srcloc !7504
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !7505, !srcloc !7506
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !7507, !srcloc !7508
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #23, !dbg !7509, !srcloc !7510
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #23, !dbg !7511, !srcloc !7512
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,2\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #23, !dbg !7513, !srcloc !7514
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_INF,%object", ""() #23, !dbg !7515, !srcloc !7516
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,3\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #23, !dbg !7517, !srcloc !7518
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !7519, !srcloc !7520
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !7521, !srcloc !7522
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !7523, !srcloc !7524
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7525, !srcloc !7526
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !7527, !srcloc !7528
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !7529, !srcloc !7530
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !7531, !srcloc !7532
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !7533, !srcloc !7534
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !7535, !srcloc !7536
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !7537, !srcloc !7538
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !7539, !srcloc !7540
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !7541, !srcloc !7542
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !7543, !srcloc !7544
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !7545, !srcloc !7546
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !7547, !srcloc !7548
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !7549, !srcloc !7550
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !7551, !srcloc !7552
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !7553, !srcloc !7554
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !7555, !srcloc !7556
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !7557, !srcloc !7558
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !7559, !srcloc !7560
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !7561, !srcloc !7562
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !7563, !srcloc !7564
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !7565, !srcloc !7566
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !7567, !srcloc !7568
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !7569, !srcloc !7570
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !7571, !srcloc !7572
  ret void, !dbg !7573
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7574 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7576, metadata !DIExpression()), !dbg !7577
  tail call void @SOC_RdcInit() #25, !dbg !7578
  tail call void @SOC_ClockInit() #25, !dbg !7579
  tail call fastcc void @nxp_mcimx7_gpio_config() #25, !dbg !7580
  ret i32 0, !dbg !7581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #16 !dbg !7582 {
  tail call fastcc void @RDC_SetDomainID() #25, !dbg !7583
  ret void, !dbg !7584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !7585 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #24, !dbg !7586
  tail call fastcc void @CCM_EnableRoot() #25, !dbg !7587
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #25, !dbg !7588
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #25, !dbg !7589
  tail call fastcc void @WDOG_DisablePowerdown() #25, !dbg !7590
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #25, !dbg !7591
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #25, !dbg !7592
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #25, !dbg !7593
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #25, !dbg !7594
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #25, !dbg !7595
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #25, !dbg !7596
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #25, !dbg !7597
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #25, !dbg !7598
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #25, !dbg !7599
  ret void, !dbg !7600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #16 !dbg !7601 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #25, !dbg !7602
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #25, !dbg !7603
  ret void, !dbg !7604
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7605 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7610, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i32 %0, metadata !7611, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8 %1, metadata !7612, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8 0, metadata !7613, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i8 0, metadata !7614, metadata !DIExpression()), !dbg !7615
  %3 = zext i8 %1 to i32, !dbg !7616
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !7617
  store volatile i32 %3, i32* %4, align 4, !dbg !7618
  ret void, !dbg !7619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7620 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7624, metadata !DIExpression()), !dbg !7627
  call void @llvm.dbg.value(metadata i32 %0, metadata !7625, metadata !DIExpression()), !dbg !7627
  call void @llvm.dbg.value(metadata i32 %1, metadata !7626, metadata !DIExpression()), !dbg !7627
  %3 = inttoptr i32 %0 to i32*, !dbg !7628
  store volatile i32 %1, i32* %3, align 4, !dbg !7629
  ret void, !dbg !7630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #16 !dbg !7631 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7635, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.value(metadata i32 809024384, metadata !7636, metadata !DIExpression()), !dbg !7637
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !7638
  ret void, !dbg !7639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #16 !dbg !7640 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !7645, metadata !DIExpression()), !dbg !7646
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7647
  %2 = and i16 %1, -2, !dbg !7647
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7647
  ret void, !dbg !7648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #16 !dbg !7649 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7653, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 1, metadata !7654, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 1, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i8 0, metadata !7656, metadata !DIExpression()), !dbg !7657
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !7658
  ret void, !dbg !7659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7660 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7663, metadata !DIExpression()), !dbg !7671
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7672
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7672
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7664, metadata !DIExpression()), !dbg !7673
  call void @llvm.va_start(i8* nonnull %3), !dbg !7674
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7675
  %5 = load i32, i32* %4, align 4, !dbg !7675
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7675
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !7675
  call void @llvm.va_end(i8* nonnull %3), !dbg !7676
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7677
  ret void, !dbg !7677
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7678 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7683, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i8* %0, metadata !7682, metadata !DIExpression()), !dbg !7684
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !7685
  ret void, !dbg !7686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7691, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i8* %1, metadata !7692, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i32 %2, metadata !7693, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i8* %1, metadata !7694, metadata !DIExpression()), !dbg !7695
  %4 = icmp eq i32 %2, 0, !dbg !7696
  br i1 %4, label %14, label %5, !dbg !7697

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !7695
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7697

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7694, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i32 %10, metadata !7693, metadata !DIExpression()), !dbg !7695
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i32 noundef %7) #24, !dbg !7698
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !7700
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7701
  call void @llvm.dbg.value(metadata i32 %11, metadata !7693, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i8* %12, metadata !7694, metadata !DIExpression()), !dbg !7695
  br i1 %13, label %14, label %8, !dbg !7701, !llvm.loop !7702

14:                                               ; preds = %8, %3
  ret void, !dbg !7704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !7705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7710, metadata !DIExpression()), !dbg !7711
  %2 = add i32 %0, -1, !dbg !7712
  %3 = icmp ult i32 %2, 4, !dbg !7712
  %4 = shl i32 %2, 3, !dbg !7712
  %5 = lshr i32 1145657157, %4, !dbg !7712
  %6 = trunc i32 %5 to i8, !dbg !7712
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7712
  ret i8 %7, !dbg !7713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7718, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %1, metadata !7719, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 0, metadata !7720, metadata !DIExpression()), !dbg !7730
  br label %4, !dbg !7731

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.50, i32 0, i32 0)) #24, !dbg !7732
  call void @llvm.dbg.value(metadata i32 0, metadata !7722, metadata !DIExpression()), !dbg !7733
  br label %16, !dbg !7734

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7720, metadata !DIExpression()), !dbg !7730
  %6 = icmp ult i32 %5, %1, !dbg !7735
  br i1 %6, label %7, label %11, !dbg !7739

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7740
  %9 = load i8, i8* %8, align 1, !dbg !7740
  %10 = zext i8 %9 to i32, !dbg !7742
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.51, i32 0, i32 0), i32 noundef %10) #24, !dbg !7743
  br label %12, !dbg !7744

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.52, i32 0, i32 0)) #24, !dbg !7745
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7747
  call void @llvm.dbg.value(metadata i32 %13, metadata !7720, metadata !DIExpression()), !dbg !7730
  %14 = icmp eq i32 %13, 8, !dbg !7748
  br i1 %14, label %3, label %4, !dbg !7731, !llvm.loop !7749

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.53, i32 0, i32 0)) #24, !dbg !7751
  ret void, !dbg !7752

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7722, metadata !DIExpression()), !dbg !7733
  %18 = icmp ult i32 %17, %1, !dbg !7753
  br i1 %18, label %19, label %26, !dbg !7754

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7755
  %21 = load i8, i8* %20, align 1, !dbg !7755
  call void @llvm.dbg.value(metadata i8 %21, metadata !7724, metadata !DIExpression()), !dbg !7756
  %22 = zext i8 %21 to i32, !dbg !7757
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !7758
  %24 = icmp eq i32 %23, 0, !dbg !7759
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7758
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.54, i32 0, i32 0), i32 noundef %25) #24, !dbg !7760
  br label %27, !dbg !7761

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.55, i32 0, i32 0)) #24, !dbg !7762
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7764
  call void @llvm.dbg.value(metadata i32 %28, metadata !7722, metadata !DIExpression()), !dbg !7733
  %29 = icmp eq i32 %28, 8, !dbg !7765
  br i1 %29, label %15, label %16, !dbg !7734, !llvm.loop !7766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !7768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7770, metadata !DIExpression()), !dbg !7771
  %2 = add i32 %0, -32, !dbg !7772
  %3 = icmp ult i32 %2, 95, !dbg !7772
  %4 = zext i1 %3 to i32, !dbg !7772
  ret i32 %4, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7823, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7824, metadata !DIExpression()), !dbg !7825
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7826
  br i1 %3, label %5, label %4, !dbg !7828

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !7829
  br label %5, !dbg !7831

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !7832
  ret void, !dbg !7833
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7834 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7838, metadata !DIExpression()), !dbg !7839
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7840
  %3 = load i32, i32* %2, align 4, !dbg !7840
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7840
  %5 = load i32, i32* %4, align 4, !dbg !7840
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7840
  %7 = load i32, i32* %6, align 4, !dbg !7840
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.56, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !7840
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7845
  %9 = load i32, i32* %8, align 4, !dbg !7845
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7845
  %11 = load i32, i32* %10, align 4, !dbg !7845
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7845
  %13 = load i32, i32* %12, align 4, !dbg !7845
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.57, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !7845
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7850
  %15 = load i32, i32* %14, align 4, !dbg !7850
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.58, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !7850
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7855
  %17 = load i32, i32* %16, align 4, !dbg !7855
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.59, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7855
  ret void, !dbg !7860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7861 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7878, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7879, metadata !DIExpression()), !dbg !7881
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7882
  %4 = load i32, i32* %3, align 4, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %4, metadata !7880, metadata !DIExpression()), !dbg !7881
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !7885 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata i8* %0, metadata !7890, metadata !DIExpression()), !dbg !7892
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7893
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !7893
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7891, metadata !DIExpression()), !dbg !7894
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7894
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7895
  %5 = bitcast i8* %4 to i32*, !dbg !7895
  %6 = load i32, i32* %5, align 4, !dbg !7895
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7896
  store i32 %6, i32* %7, align 4, !dbg !7897
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !7898
  unreachable, !dbg !7899
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7905, metadata !DIExpression()), !dbg !7906
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !7907
  ret void, !dbg !7908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7913, metadata !DIExpression()), !dbg !7914
  %2 = icmp sgt i32 %0, -1, !dbg !7915
  br i1 %2, label %3, label %8, !dbg !7917

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7918, !srcloc !7920
  %4 = and i32 %0, 31, !dbg !7921
  %5 = shl nuw i32 1, %4, !dbg !7922
  %6 = lshr i32 %0, 5, !dbg !7923
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7924
  store volatile i32 %5, i32* %7, align 4, !dbg !7925
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7926, !srcloc !7927
  br label %8, !dbg !7928

8:                                                ; preds = %3, %1
  ret void, !dbg !7929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7932, metadata !DIExpression()), !dbg !7933
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !7934
  ret void, !dbg !7935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7938, metadata !DIExpression()), !dbg !7939
  %2 = icmp sgt i32 %0, -1, !dbg !7940
  br i1 %2, label %3, label %8, !dbg !7942

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7943
  %5 = shl nuw i32 1, %4, !dbg !7945
  %6 = lshr i32 %0, 5, !dbg !7946
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7947
  store volatile i32 %5, i32* %7, align 4, !dbg !7948
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7949, !srcloc !7953
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7954, !srcloc !7957
  br label %8, !dbg !7958

8:                                                ; preds = %3, %1
  ret void, !dbg !7959
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !7960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7964, metadata !DIExpression()), !dbg !7965
  %2 = lshr i32 %0, 5, !dbg !7966
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7967
  %4 = load volatile i32, i32* %3, align 4, !dbg !7967
  %5 = and i32 %0, 31, !dbg !7968
  %6 = shl nuw i32 1, %5, !dbg !7968
  %7 = and i32 %4, %6, !dbg !7969
  ret i32 %7, !dbg !7970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %1, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %2, metadata !7977, metadata !DIExpression()), !dbg !7978
  %4 = add i32 %1, 1, !dbg !7979
  call void @llvm.dbg.value(metadata i32 %4, metadata !7976, metadata !DIExpression()), !dbg !7978
  %5 = icmp ult i32 %4, 16, !dbg !7982
  br i1 %5, label %7, label %6, !dbg !7985

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.61, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.62, i32 0, i32 0), i32 noundef 94) #24, !dbg !7986
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.63, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !7986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.62, i32 0, i32 0), i32 noundef 94) #24, !dbg !7986
  unreachable, !dbg !7986

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !7988
  ret void, !dbg !7989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !7990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7994, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.value(metadata i32 %1, metadata !7995, metadata !DIExpression()), !dbg !7996
  %3 = trunc i32 %1 to i8, !dbg !7997
  %4 = shl i8 %3, 4, !dbg !7997
  %5 = and i32 %0, 15, !dbg !7999
  %6 = add nsw i32 %5, -4, !dbg !7999
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7999
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7999
  %9 = icmp slt i32 %0, 0, !dbg !7999
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7999
  store volatile i8 %4, i8* %10, align 1, !dbg !7997
  ret void, !dbg !8000
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8001 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8003, metadata !DIExpression()), !dbg !8004
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !8005
  ret void, !dbg !8006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8007 {
  tail call void @z_SysNmiOnReset() #24, !dbg !8009
  tail call void @z_arm_int_exit() #24, !dbg !8010
  ret void, !dbg !8011
}

; Function Attrs: optsize
declare !dbg !8012 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8013 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !8015 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !8017
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !8018
  tail call void @z_bss_zero() #24, !dbg !8019
  tail call void @z_data_copy() #24, !dbg !8020
  tail call void @z_arm_interrupt_init() #24, !dbg !8021
  tail call void @z_cstart() #27, !dbg !8022
  unreachable, !dbg !8022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8023 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8024
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8025, !srcloc !8028
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8029, !srcloc !8032
  ret void, !dbg !8033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8034 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8035
  %2 = and i32 %1, -15728641, !dbg !8035
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8035
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !8036, !srcloc !8043
  call void @llvm.dbg.value(metadata i32 %3, metadata !8041, metadata !DIExpression()) #23, !dbg !8044
  %4 = and i32 %3, -5, !dbg !8045
  call void @llvm.dbg.value(metadata i32 %4, metadata !8046, metadata !DIExpression()) #23, !dbg !8051
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !8053, !srcloc !8054
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8055, !srcloc !8032
  ret void, !dbg !8057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8061, metadata !DIExpression()), !dbg !8062
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8063
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !8064
  store i32 %0, i32* %3, align 8, !dbg !8065
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8066
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !8067
  store i32 %4, i32* %5, align 4, !dbg !8068
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8069
  %7 = or i32 %6, 268435456, !dbg !8069
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8069
  call void @llvm.dbg.value(metadata i32 0, metadata !8070, metadata !DIExpression()) #23, !dbg !8074
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !8076, !srcloc !8077
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8078
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !8079
  %10 = load i32, i32* %9, align 4, !dbg !8079
  ret i32 %10, !dbg !8080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8187, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8188, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %2, metadata !8189, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8190, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %4, metadata !8191, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %5, metadata !8192, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %6, metadata !8193, metadata !DIExpression()), !dbg !8195
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8196
  call void @llvm.dbg.value(metadata i8* %8, metadata !8194, metadata !DIExpression()), !dbg !8195
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8197
  %10 = bitcast i8* %9 to i32*, !dbg !8197
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8198
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8199
  %12 = bitcast i8* %8 to i32*, !dbg !8200
  store i32 %11, i32* %12, align 4, !dbg !8201
  %13 = ptrtoint i8* %4 to i32, !dbg !8202
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8203
  %15 = bitcast i8* %14 to i32*, !dbg !8203
  store i32 %13, i32* %15, align 4, !dbg !8204
  %16 = ptrtoint i8* %5 to i32, !dbg !8205
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8206
  %18 = bitcast i8* %17 to i32*, !dbg !8206
  store i32 %16, i32* %18, align 4, !dbg !8207
  %19 = ptrtoint i8* %6 to i32, !dbg !8208
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8209
  %21 = bitcast i8* %20 to i32*, !dbg !8209
  store i32 %19, i32* %21, align 4, !dbg !8210
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8211
  %23 = bitcast i8* %22 to i32*, !dbg !8211
  store i32 16777216, i32* %23, align 4, !dbg !8212
  %24 = ptrtoint i8* %8 to i32, !dbg !8213
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8214
  store i32 %24, i32* %25, align 8, !dbg !8215
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !8216
  store i32 0, i32* %26, align 8, !dbg !8217
  ret void, !dbg !8218
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !8219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8223, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i8* %1, metadata !8224, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8225, metadata !DIExpression()), !dbg !8226
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8227
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !8228, !srcloc !8229
  unreachable, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8231 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8249, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata i32 %1, metadata !8250, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata i32 %2, metadata !8251, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8252, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata i32 0, metadata !8253, metadata !DIExpression()), !dbg !8259
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %8, metadata !8254, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8259
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !8261
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8261
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8262
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !8262
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8258, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata i32 0, metadata !8264, metadata !DIExpression()) #23, !dbg !8267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !8269, !srcloc !8270
  call void @llvm.dbg.value(metadata i8* %6, metadata !8256, metadata !DIExpression(DW_OP_deref)), !dbg !8259
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !8271
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8257, metadata !DIExpression()), !dbg !8259
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8272
  br i1 %11, label %12, label %13, !dbg !8275

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 1057) #24, !dbg !8276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.69, i32 0, i32 0)) #24, !dbg !8276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 1057) #24, !dbg !8276
  unreachable, !dbg !8276

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8278
  call void @llvm.dbg.value(metadata i32 %14, metadata !8254, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.value(metadata i8* %5, metadata !8255, metadata !DIExpression(DW_OP_deref)), !dbg !8259
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !8279
  call void @llvm.dbg.value(metadata i32 %15, metadata !8253, metadata !DIExpression()), !dbg !8259
  %16 = load i8, i8* %5, align 1, !dbg !8280, !range !8282
  call void @llvm.dbg.value(metadata i8 %16, metadata !8255, metadata !DIExpression()), !dbg !8259
  %17 = icmp eq i8 %16, 0, !dbg !8280
  br i1 %17, label %18, label %35, !dbg !8283

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8284
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !8285
  %21 = load i8, i8* %6, align 1, !dbg !8286, !range !8282
  call void @llvm.dbg.value(metadata i8 %21, metadata !8256, metadata !DIExpression()), !dbg !8259
  %22 = icmp eq i8 %21, 0, !dbg !8286
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8288
  %24 = load i32, i32* %23, align 4, !dbg !8288
  br i1 %22, label %30, label %25, !dbg !8289

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8290
  %27 = icmp eq i32 %26, 0, !dbg !8293
  br i1 %27, label %28, label %34, !dbg !8294

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8295
  br label %32, !dbg !8297

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8298
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8288
  br label %34, !dbg !8300

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !8300
  br label %35, !dbg !8301

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !8301
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8301
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !8301
  ret void, !dbg !8301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8307, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 %1, metadata !8308, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i32 %2, metadata !8309, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i8* %3, metadata !8310, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata i8 0, metadata !8311, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i8 0, i8* %3, align 1, !dbg !8314
  %5 = icmp ugt i32 %2, -16777217, !dbg !8315
  br i1 %5, label %6, label %17, !dbg !8317

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8318
  %8 = icmp eq i32 %7, 8, !dbg !8318
  br i1 %8, label %9, label %10, !dbg !8318

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.80, i32 0, i32 0), i32 noundef 69) #24, !dbg !8320
  br label %17, !dbg !8326

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8327
  %12 = icmp eq i32 %11, 0, !dbg !8327
  br i1 %12, label %13, label %14, !dbg !8328

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i8 1, i8* %3, align 1, !dbg !8331
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8313
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8312, metadata !DIExpression()), !dbg !8313
  br label %17, !dbg !8334

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8313
  ret %struct.__esf* %18, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8336 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8340, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 %1, metadata !8341, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i8* %2, metadata !8342, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8344
  store i8 0, i8* %2, align 1, !dbg !8345
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !8346

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !8347
  call void @llvm.dbg.value(metadata i32 %5, metadata !8343, metadata !DIExpression()), !dbg !8344
  br label %11, !dbg !8349

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !8350
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8344
  br label %11, !dbg !8351

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !8352
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8344
  br label %11, !dbg !8353

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !8354
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8344
  br label %11, !dbg !8355

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !8356
  br label %11, !dbg !8357

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !8358
  br label %11, !dbg !8359

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !8344
  call void @llvm.dbg.value(metadata i32 %12, metadata !8343, metadata !DIExpression()), !dbg !8344
  ret i32 %12, !dbg !8360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8361 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8365, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i8* %1, metadata !8366, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.value(metadata i32 0, metadata !8367, metadata !DIExpression()), !dbg !8368
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.72, i32 0, i32 0), i32 noundef 69) #24, !dbg !8369
  store i8 0, i8* %1, align 1, !dbg !8374
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8375
  %4 = and i32 %3, 2, !dbg !8377
  %5 = icmp eq i32 %4, 0, !dbg !8378
  br i1 %5, label %7, label %6, !dbg !8379

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.73, i32 0, i32 0), i32 noundef 69) #24, !dbg !8380
  br label %37, !dbg !8386

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8387
  %9 = icmp sgt i32 %8, -1, !dbg !8389
  br i1 %9, label %11, label %10, !dbg !8390

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.74, i32 0, i32 0), i32 noundef 69) #24, !dbg !8391
  br label %37, !dbg !8397

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8398
  %13 = and i32 %12, 1073741824, !dbg !8400
  %14 = icmp eq i32 %13, 0, !dbg !8401
  br i1 %14, label %36, label %15, !dbg !8402

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.75, i32 0, i32 0), i32 noundef 69) #24, !dbg !8403
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !8409
  br i1 %16, label %17, label %21, !dbg !8411

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8412
  %19 = load i32, i32* %18, align 4, !dbg !8412
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.76, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !8412
  %20 = load i32, i32* %18, align 4, !dbg !8418
  call void @llvm.dbg.value(metadata i32 %20, metadata !8367, metadata !DIExpression()), !dbg !8368
  br label %37, !dbg !8419

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8420
  %23 = and i32 %22, 255, !dbg !8422
  %24 = icmp eq i32 %23, 0, !dbg !8423
  br i1 %24, label %26, label %25, !dbg !8424

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8425
  call void @llvm.dbg.value(metadata i32 0, metadata !8367, metadata !DIExpression()), !dbg !8368
  br label %37, !dbg !8427

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8428
  %28 = and i32 %27, 65280, !dbg !8430
  %29 = icmp eq i32 %28, 0, !dbg !8431
  br i1 %29, label %31, label %30, !dbg !8432

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !8433
  call void @llvm.dbg.value(metadata i32 0, metadata !8367, metadata !DIExpression()), !dbg !8368
  br label %37, !dbg !8435

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8436
  %33 = icmp ult i32 %32, 65536, !dbg !8438
  br i1 %33, label %35, label %34, !dbg !8439

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #25, !dbg !8440
  call void @llvm.dbg.value(metadata i32 0, metadata !8367, metadata !DIExpression()), !dbg !8368
  br label %37

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 755) #24, !dbg !8442
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.78, i32 0, i32 0)) #24, !dbg !8442
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 755) #24, !dbg !8442
  unreachable, !dbg !8442

36:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 760) #24, !dbg !8447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.79, i32 0, i32 0)) #24, !dbg !8447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 760) #24, !dbg !8447
  unreachable, !dbg !8447

37:                                               ; preds = %10, %17, %30, %34, %25, %6
  %38 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], !dbg !8368
  call void @llvm.dbg.value(metadata i32 %38, metadata !8367, metadata !DIExpression()), !dbg !8368
  ret i32 %38, !dbg !8452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8453 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8455, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 %0, metadata !8456, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i8* %1, metadata !8457, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 0, metadata !8458, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 -22, metadata !8459, metadata !DIExpression()), !dbg !8463
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.71, i32 0, i32 0), i32 noundef 69) #24, !dbg !8464
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8469
  %4 = and i32 %3, 16, !dbg !8471
  %5 = icmp eq i32 %4, 0, !dbg !8472
  br i1 %5, label %7, label %6, !dbg !8473

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !8474
  br label %7, !dbg !8480

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8481
  %9 = and i32 %8, 8, !dbg !8483
  %10 = icmp eq i32 %9, 0, !dbg !8484
  br i1 %10, label %12, label %11, !dbg !8485

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !8486
  br label %12, !dbg !8492

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8493
  %14 = and i32 %13, 2, !dbg !8494
  %15 = icmp eq i32 %14, 0, !dbg !8495
  br i1 %15, label %26, label %16, !dbg !8496

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !8497
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8502
  call void @llvm.dbg.value(metadata i32 %17, metadata !8460, metadata !DIExpression()), !dbg !8503
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8504
  %19 = and i32 %18, 128, !dbg !8506
  %20 = icmp eq i32 %19, 0, !dbg !8507
  br i1 %20, label %26, label %21, !dbg !8508

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !8459, metadata !DIExpression()), !dbg !8463
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8509
  %22 = icmp eq i32 %0, 0, !dbg !8515
  br i1 %22, label %26, label %23, !dbg !8517

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8518
  %25 = and i32 %24, -129, !dbg !8518
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8518
  br label %26, !dbg !8520

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !8459, metadata !DIExpression()), !dbg !8463
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8521
  %28 = and i32 %27, 1, !dbg !8523
  %29 = icmp eq i32 %28, 0, !dbg !8524
  br i1 %29, label %31, label %30, !dbg !8525

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !8526
  br label %31, !dbg !8532

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8533
  %33 = and i32 %32, 32, !dbg !8535
  %34 = icmp eq i32 %33, 0, !dbg !8536
  br i1 %34, label %36, label %35, !dbg !8537

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !8538
  br label %36, !dbg !8544

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8545
  %38 = and i32 %37, 16, !dbg !8547
  %39 = icmp eq i32 %38, 0, !dbg !8547
  br i1 %39, label %40, label %44, !dbg !8548

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8549
  %42 = and i32 %41, 2, !dbg !8550
  %43 = icmp eq i32 %42, 0, !dbg !8550
  br i1 %43, label %49, label %44, !dbg !8551

44:                                               ; preds = %40, %36
  %45 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8552
  %46 = and i32 %45, 16, !dbg !8552
  %47 = icmp eq i32 %46, 0, !dbg !8552
  br i1 %47, label %49, label %48, !dbg !8556

48:                                               ; preds = %44
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 350) #24, !dbg !8557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !8557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.68, i32 0, i32 0), i32 noundef 350) #24, !dbg !8557
  unreachable, !dbg !8557

49:                                               ; preds = %44, %40
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8559
  %51 = and i32 %50, 32, !dbg !8561
  %52 = icmp eq i32 %51, 0, !dbg !8562
  br i1 %52, label %56, label %53, !dbg !8563

53:                                               ; preds = %49
  %54 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8564
  %55 = and i32 %54, -8193, !dbg !8564
  store volatile i32 %55, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8564
  br label %56, !dbg !8566

56:                                               ; preds = %53, %49
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8567
  %58 = or i32 %57, 255, !dbg !8567
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8567
  store i8 0, i8* %1, align 1, !dbg !8568
  ret void, !dbg !8569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8570 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8574, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i32 %0, metadata !8575, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i8* %1, metadata !8576, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i32 0, metadata !8577, metadata !DIExpression()), !dbg !8581
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #24, !dbg !8582
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8587
  %4 = and i32 %3, 4096, !dbg !8589
  %5 = icmp eq i32 %4, 0, !dbg !8589
  br i1 %5, label %7, label %6, !dbg !8590

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !8591
  br label %7, !dbg !8597

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8598
  %9 = and i32 %8, 2048, !dbg !8600
  %10 = icmp eq i32 %9, 0, !dbg !8600
  br i1 %10, label %12, label %11, !dbg !8601

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !8602
  br label %12, !dbg !8608

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8609
  %14 = and i32 %13, 512, !dbg !8610
  %15 = icmp eq i32 %14, 0, !dbg !8610
  br i1 %15, label %26, label %16, !dbg !8611

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !8612
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8617
  call void @llvm.dbg.value(metadata i32 %17, metadata !8578, metadata !DIExpression()), !dbg !8618
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8619
  %19 = and i32 %18, 32768, !dbg !8621
  %20 = icmp eq i32 %19, 0, !dbg !8622
  br i1 %20, label %26, label %21, !dbg !8623

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.70, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !8624
  %22 = icmp eq i32 %0, 0, !dbg !8630
  br i1 %22, label %26, label %23, !dbg !8632

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8633
  %25 = and i32 %24, -32769, !dbg !8633
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8633
  br label %26, !dbg !8635

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8636
  %28 = and i32 %27, 1024, !dbg !8638
  %29 = icmp eq i32 %28, 0, !dbg !8638
  br i1 %29, label %31, label %30, !dbg !8639

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !8640
  br label %31, !dbg !8646

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8647
  %33 = and i32 %32, 256, !dbg !8649
  %34 = icmp eq i32 %33, 0, !dbg !8650
  br i1 %34, label %35, label %39, !dbg !8651

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8652
  %37 = and i32 %36, 8192, !dbg !8654
  %38 = icmp eq i32 %37, 0, !dbg !8654
  br i1 %38, label %41, label %39, !dbg !8655

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !8656
  br label %41, !dbg !8657

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8657
  %43 = or i32 %42, 65280, !dbg !8657
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8657
  store i8 0, i8* %1, align 1, !dbg !8658
  ret void, !dbg !8659
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8660 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8666, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.value(metadata i32 0, metadata !8667, metadata !DIExpression()), !dbg !8668
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !8669
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8674
  %2 = and i32 %1, 33554432, !dbg !8676
  %3 = icmp eq i32 %2, 0, !dbg !8677
  br i1 %3, label %5, label %4, !dbg !8678

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #24, !dbg !8679
  br label %5, !dbg !8685

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8686
  %7 = and i32 %6, 16777216, !dbg !8688
  %8 = icmp eq i32 %7, 0, !dbg !8689
  br i1 %8, label %10, label %9, !dbg !8690

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !8691
  br label %10, !dbg !8697

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8698
  %12 = and i32 %11, 524288, !dbg !8700
  %13 = icmp eq i32 %12, 0, !dbg !8701
  br i1 %13, label %15, label %14, !dbg !8702

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !8703
  br label %15, !dbg !8709

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8710
  %17 = and i32 %16, 262144, !dbg !8712
  %18 = icmp eq i32 %17, 0, !dbg !8713
  br i1 %18, label %20, label %19, !dbg !8714

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !8715
  br label %20, !dbg !8721

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8722
  %22 = and i32 %21, 131072, !dbg !8724
  %23 = icmp eq i32 %22, 0, !dbg !8725
  br i1 %23, label %25, label %24, !dbg !8726

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #24, !dbg !8727
  br label %25, !dbg !8733

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8734
  %27 = and i32 %26, 65536, !dbg !8736
  %28 = icmp eq i32 %27, 0, !dbg !8737
  br i1 %28, label %30, label %29, !dbg !8738

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !8739
  br label %30, !dbg !8745

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8746
  %32 = or i32 %31, -65536, !dbg !8746
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8746
  ret void, !dbg !8747
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8748 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8752, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i8* %0, metadata !8753, metadata !DIExpression()), !dbg !8754
  store i8 0, i8* %0, align 1, !dbg !8755
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !8756
  ret void, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8766, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.value(metadata i32 %0, metadata !8767, metadata !DIExpression()), !dbg !8768
  %2 = icmp slt i32 %0, 16, !dbg !8769
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8769
  %4 = add nsw i32 %0, -16, !dbg !8769
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !8769
  ret void, !dbg !8774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8775 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8779, metadata !DIExpression()), !dbg !8782
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8783
  %3 = load i32, i32* %2, align 4, !dbg !8783
  %4 = inttoptr i32 %3 to i16*, !dbg !8784
  call void @llvm.dbg.value(metadata i16* %4, metadata !8780, metadata !DIExpression()), !dbg !8782
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8785
  %6 = or i32 %5, 256, !dbg !8785
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8785
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8786, !srcloc !8789
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8790, !srcloc !8793
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8794
  %8 = load i16, i16* %7, align 2, !dbg !8795
  call void @llvm.dbg.value(metadata i16 %8, metadata !8781, metadata !DIExpression()), !dbg !8782
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8796
  %10 = and i32 %9, -257, !dbg !8796
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8796
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !8797, !srcloc !8789
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !8799, !srcloc !8793
  %11 = icmp eq i16 %8, -8446, !dbg !8801
  ret i1 %11, !dbg !8803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !8804 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8805
  %2 = or i32 %1, 16, !dbg !8805
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8805
  ret void, !dbg !8806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !8807 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8810, metadata !DIExpression()), !dbg !8811
  br label %1, !dbg !8812

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8810, metadata !DIExpression()), !dbg !8811
  tail call fastcc void @__NVIC_SetPriority.83(i32 noundef %2) #25, !dbg !8814
  %3 = add nuw nsw i32 %2, 1, !dbg !8817
  call void @llvm.dbg.value(metadata i32 %3, metadata !8810, metadata !DIExpression()), !dbg !8811
  %4 = icmp eq i32 %3, 127, !dbg !8818
  br i1 %4, label %5, label %1, !dbg !8812, !llvm.loop !8819

5:                                                ; preds = %1
  ret void, !dbg !8821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.83(i32 noundef %0) unnamed_addr #16 !dbg !8822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8824, metadata !DIExpression()), !dbg !8826
  call void @llvm.dbg.value(metadata i32 1, metadata !8825, metadata !DIExpression()), !dbg !8826
  %2 = and i32 %0, 15, !dbg !8827
  %3 = add nsw i32 %2, -4, !dbg !8827
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8827
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8827
  %6 = icmp slt i32 %0, 0, !dbg !8827
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8827
  store volatile i8 16, i8* %7, align 1, !dbg !8828
  ret void, !dbg !8830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8831 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8933, metadata !DIExpression()), !dbg !8934
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8935
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8937
  br i1 %3, label %4, label %12, !dbg !8938

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8939, !srcloc !8951
  call void @llvm.dbg.value(metadata i32 %5, metadata !8942, metadata !DIExpression()) #23, !dbg !8952
  %6 = icmp eq i32 %5, 0, !dbg !8953
  br i1 %6, label %12, label %7, !dbg !8954

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8955
  %9 = or i32 %8, 268435456, !dbg !8955
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8955
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8957
  %11 = and i32 %10, -32769, !dbg !8957
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8957
  br label %12, !dbg !8958

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !8959
  ret void, !dbg !8960
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !8961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8968, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i8* %1, metadata !8969, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i8* %0, metadata !8970, metadata !DIExpression()), !dbg !8971
  %3 = load i8, i8* %1, align 1, !dbg !8972
  %4 = icmp eq i8 %3, 0, !dbg !8973
  br i1 %4, label %13, label %5, !dbg !8974

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8968, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i8* %8, metadata !8969, metadata !DIExpression()), !dbg !8971
  store i8 %6, i8* %7, align 1, !dbg !8975
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8977
  call void @llvm.dbg.value(metadata i8* %9, metadata !8968, metadata !DIExpression()), !dbg !8971
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8978
  call void @llvm.dbg.value(metadata i8* %10, metadata !8969, metadata !DIExpression()), !dbg !8971
  %11 = load i8, i8* %10, align 1, !dbg !8972
  %12 = icmp eq i8 %11, 0, !dbg !8973
  br i1 %12, label %13, label %5, !dbg !8974, !llvm.loop !8979

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8981
  ret i8* %0, !dbg !8982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8983 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8987, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8* %1, metadata !8988, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %2, metadata !8989, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8* %0, metadata !8990, metadata !DIExpression()), !dbg !8991
  %4 = icmp eq i32 %2, 0, !dbg !8992
  br i1 %4, label %22, label %5, !dbg !8993

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8987, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %7, metadata !8989, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i8* %8, metadata !8988, metadata !DIExpression()), !dbg !8991
  %9 = load i8, i8* %8, align 1, !dbg !8994
  %10 = icmp eq i8 %9, 0, !dbg !8995
  br i1 %10, label %16, label %11, !dbg !8996

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8997
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8999
  call void @llvm.dbg.value(metadata i8* %12, metadata !8988, metadata !DIExpression()), !dbg !8991
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9000
  call void @llvm.dbg.value(metadata i8* %13, metadata !8987, metadata !DIExpression()), !dbg !8991
  %14 = add i32 %7, -1, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %14, metadata !8989, metadata !DIExpression()), !dbg !8991
  %15 = icmp eq i32 %14, 0, !dbg !8992
  br i1 %15, label %22, label %5, !dbg !8993, !llvm.loop !9002

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8987, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %18, metadata !8989, metadata !DIExpression()), !dbg !8991
  store i8 0, i8* %17, align 1, !dbg !9004
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9006
  call void @llvm.dbg.value(metadata i8* %19, metadata !8987, metadata !DIExpression()), !dbg !8991
  %20 = add i32 %18, -1, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %20, metadata !8989, metadata !DIExpression()), !dbg !8991
  %21 = icmp eq i32 %20, 0, !dbg !9008
  br i1 %21, label %22, label %16, !dbg !9009, !llvm.loop !9010

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9012
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9017, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %1, metadata !9018, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %1, metadata !9019, metadata !DIExpression()), !dbg !9020
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9021

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9017, metadata !DIExpression()), !dbg !9020
  %6 = load i8, i8* %5, align 1, !dbg !9022
  %7 = icmp eq i8 %6, %3, !dbg !9023
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9024
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9025
  call void @llvm.dbg.value(metadata i8* %10, metadata !9017, metadata !DIExpression()), !dbg !9020
  br i1 %9, label %11, label %4, !dbg !9024, !llvm.loop !9027

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9029
  ret i8* %12, !dbg !9030
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9031 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9033, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata i32 %1, metadata !9034, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata i8* null, metadata !9035, metadata !DIExpression()), !dbg !9036
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9037

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9036
  call void @llvm.dbg.value(metadata i8* %6, metadata !9035, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata i8* %5, metadata !9033, metadata !DIExpression()), !dbg !9036
  %7 = load i8, i8* %5, align 1, !dbg !9038
  %8 = icmp eq i8 %7, %3, !dbg !9041
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9042
  call void @llvm.dbg.value(metadata i8* %9, metadata !9035, metadata !DIExpression()), !dbg !9036
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9043
  call void @llvm.dbg.value(metadata i8* %10, metadata !9033, metadata !DIExpression()), !dbg !9036
  %11 = icmp eq i8 %7, 0, !dbg !9044
  br i1 %11, label %12, label %4, !dbg !9044, !llvm.loop !9045

12:                                               ; preds = %4
  ret i8* %9, !dbg !9047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9052, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i32 0, metadata !9053, metadata !DIExpression()), !dbg !9054
  %2 = load i8, i8* %0, align 1, !dbg !9055
  %3 = icmp eq i8 %2, 0, !dbg !9056
  br i1 %3, label %11, label %4, !dbg !9057

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i8* %6, metadata !9052, metadata !DIExpression()), !dbg !9054
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9058
  call void @llvm.dbg.value(metadata i8* %7, metadata !9052, metadata !DIExpression()), !dbg !9054
  %8 = add i32 %5, 1, !dbg !9060
  call void @llvm.dbg.value(metadata i32 %8, metadata !9053, metadata !DIExpression()), !dbg !9054
  %9 = load i8, i8* %7, align 1, !dbg !9055
  %10 = icmp eq i8 %9, 0, !dbg !9056
  br i1 %10, label %11, label %4, !dbg !9057, !llvm.loop !9061

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9054
  ret i32 %12, !dbg !9063
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9064 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9068, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.value(metadata i32 0, metadata !9070, metadata !DIExpression()), !dbg !9071
  %3 = load i8, i8* %0, align 1, !dbg !9072
  %4 = icmp ne i8 %3, 0, !dbg !9073
  %5 = icmp ne i32 %1, 0, !dbg !9074
  %6 = and i1 %4, %5, !dbg !9074
  br i1 %6, label %7, label %16, !dbg !9075

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.value(metadata i8* %9, metadata !9068, metadata !DIExpression()), !dbg !9071
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9076
  call void @llvm.dbg.value(metadata i8* %10, metadata !9068, metadata !DIExpression()), !dbg !9071
  %11 = add nuw i32 %8, 1, !dbg !9078
  call void @llvm.dbg.value(metadata i32 %11, metadata !9070, metadata !DIExpression()), !dbg !9071
  %12 = load i8, i8* %10, align 1, !dbg !9072
  %13 = icmp ne i8 %12, 0, !dbg !9073
  %14 = icmp ult i32 %11, %1, !dbg !9074
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9074
  br i1 %15, label %7, label %16, !dbg !9075, !llvm.loop !9079

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9071
  ret i32 %17, !dbg !9081
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9086, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.value(metadata i8* %1, metadata !9087, metadata !DIExpression()), !dbg !9088
  %3 = load i8, i8* %0, align 1, !dbg !9089
  %4 = load i8, i8* %1, align 1, !dbg !9090
  %5 = icmp ne i8 %3, %4, !dbg !9091
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9092
  br i1 %7, label %18, label %8, !dbg !9092

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9087, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.value(metadata i8* %10, metadata !9086, metadata !DIExpression()), !dbg !9088
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9093
  call void @llvm.dbg.value(metadata i8* %11, metadata !9086, metadata !DIExpression()), !dbg !9088
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9095
  call void @llvm.dbg.value(metadata i8* %12, metadata !9087, metadata !DIExpression()), !dbg !9088
  %13 = load i8, i8* %11, align 1, !dbg !9089
  %14 = load i8, i8* %12, align 1, !dbg !9090
  %15 = icmp ne i8 %13, %14, !dbg !9091
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9092
  br i1 %17, label %18, label %8, !dbg !9092, !llvm.loop !9096

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9089
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9090
  %21 = zext i8 %19 to i32, !dbg !9099
  %22 = zext i8 %20 to i32, !dbg !9100
  %23 = sub nsw i32 %21, %22, !dbg !9101
  ret i32 %23, !dbg !9102
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9107, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i8* %1, metadata !9108, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i32 %2, metadata !9109, metadata !DIExpression()), !dbg !9110
  %4 = icmp eq i32 %2, 0, !dbg !9111
  br i1 %4, label %23, label %5, !dbg !9111

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9109, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i8* %7, metadata !9108, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.value(metadata i8* %8, metadata !9107, metadata !DIExpression()), !dbg !9110
  %9 = load i8, i8* %8, align 1, !dbg !9112
  %10 = load i8, i8* %7, align 1, !dbg !9113
  %11 = icmp ne i8 %9, %10, !dbg !9114
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9115
  br i1 %13, label %19, label %14, !dbg !9115

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9116
  call void @llvm.dbg.value(metadata i8* %15, metadata !9107, metadata !DIExpression()), !dbg !9110
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9118
  call void @llvm.dbg.value(metadata i8* %16, metadata !9108, metadata !DIExpression()), !dbg !9110
  %17 = add i32 %6, -1, !dbg !9119
  call void @llvm.dbg.value(metadata i32 %17, metadata !9109, metadata !DIExpression()), !dbg !9110
  %18 = icmp eq i32 %17, 0, !dbg !9111
  br i1 %18, label %23, label %5, !dbg !9111, !llvm.loop !9120

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9123
  %21 = zext i8 %10 to i32, !dbg !9124
  %22 = sub nsw i32 %20, %21, !dbg !9125
  br label %23, !dbg !9126

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9126
  ret i32 %24, !dbg !9127
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !9128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9132, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i8* %1, metadata !9133, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i8** %2, metadata !9134, metadata !DIExpression()), !dbg !9137
  %4 = icmp eq i8* %0, null, !dbg !9138
  br i1 %4, label %5, label %7, !dbg !9138

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9139
  br label %7, !dbg !9138

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9138
  call void @llvm.dbg.value(metadata i8* %8, metadata !9135, metadata !DIExpression()), !dbg !9137
  %9 = load i8, i8* %8, align 1, !dbg !9140
  %10 = icmp eq i8 %9, 0, !dbg !9140
  br i1 %10, label %33, label %11, !dbg !9141

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9135, metadata !DIExpression()), !dbg !9137
  %14 = zext i8 %12 to i32, !dbg !9140
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !9142
  %16 = icmp eq i8* %15, null, !dbg !9141
  br i1 %16, label %21, label %17, !dbg !9143

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9144
  call void @llvm.dbg.value(metadata i8* %18, metadata !9135, metadata !DIExpression()), !dbg !9137
  %19 = load i8, i8* %18, align 1, !dbg !9140
  %20 = icmp eq i8 %19, 0, !dbg !9140
  br i1 %20, label %33, label %11, !dbg !9141, !llvm.loop !9146

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9136, metadata !DIExpression()), !dbg !9137
  %24 = zext i8 %22 to i32, !dbg !9148
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !9149
  %26 = icmp eq i8* %25, null, !dbg !9150
  br i1 %26, label %27, label %31, !dbg !9151

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9152
  call void @llvm.dbg.value(metadata i8* %28, metadata !9136, metadata !DIExpression()), !dbg !9137
  %29 = load i8, i8* %28, align 1, !dbg !9148
  %30 = icmp eq i8 %29, 0, !dbg !9148
  br i1 %30, label %33, label %21, !dbg !9154, !llvm.loop !9155

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9157
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9160
  br label %33, !dbg !9161

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9137
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9137
  store i8* %34, i8** %2, align 4, !dbg !9137
  ret i8* %35, !dbg !9162
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9163 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9165, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.value(metadata i8* %1, metadata !9166, metadata !DIExpression()), !dbg !9167
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !9168
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9169
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !9170
  ret i8* %0, !dbg !9171
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9172 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9174, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8* %1, metadata !9175, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %2, metadata !9176, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8* %0, metadata !9177, metadata !DIExpression()), !dbg !9179
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %4, metadata !9178, metadata !DIExpression()), !dbg !9179
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9181
  call void @llvm.dbg.value(metadata i8* %5, metadata !9174, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8* %1, metadata !9175, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %2, metadata !9176, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %2, metadata !9176, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9179
  %6 = icmp eq i32 %2, 0, !dbg !9182
  br i1 %6, label %18, label %7, !dbg !9183

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9184
  call void @llvm.dbg.value(metadata i8* %9, metadata !9174, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8* %10, metadata !9175, metadata !DIExpression()), !dbg !9179
  %12 = load i8, i8* %10, align 1, !dbg !9185
  %13 = icmp eq i8 %12, 0, !dbg !9186
  br i1 %13, label %18, label %14, !dbg !9187

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9188
  call void @llvm.dbg.value(metadata i8* %15, metadata !9175, metadata !DIExpression()), !dbg !9179
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9190
  call void @llvm.dbg.value(metadata i8* %16, metadata !9174, metadata !DIExpression()), !dbg !9179
  store i8 %12, i8* %9, align 1, !dbg !9191
  call void @llvm.dbg.value(metadata i32 %11, metadata !9176, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %11, metadata !9176, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9179
  %17 = icmp eq i32 %11, 0, !dbg !9182
  br i1 %17, label %18, label %7, !dbg !9183, !llvm.loop !9192

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9179
  store i8 0, i8* %19, align 1, !dbg !9194
  ret i8* %0, !dbg !9195
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9196 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9200, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8* %1, metadata !9201, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %2, metadata !9202, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8* %0, metadata !9203, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8* %1, metadata !9204, metadata !DIExpression()), !dbg !9205
  %4 = icmp eq i32 %2, 0, !dbg !9206
  br i1 %4, label %31, label %5, !dbg !9208

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9204, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8* %0, metadata !9203, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %2, metadata !9202, metadata !DIExpression()), !dbg !9205
  %6 = add i32 %2, -1, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %6, metadata !9202, metadata !DIExpression()), !dbg !9205
  %7 = icmp eq i32 %6, 0, !dbg !9210
  br i1 %7, label %23, label %8, !dbg !9211

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9212
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9212
  br label %11, !dbg !9212

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9204, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8* %14, metadata !9203, metadata !DIExpression()), !dbg !9205
  %15 = load i8, i8* %14, align 1, !dbg !9213
  %16 = load i8, i8* %13, align 1, !dbg !9214
  %17 = icmp eq i8 %15, %16, !dbg !9215
  br i1 %17, label %18, label %23, !dbg !9212

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9216
  call void @llvm.dbg.value(metadata i8* %19, metadata !9203, metadata !DIExpression()), !dbg !9205
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9218
  call void @llvm.dbg.value(metadata i8* %20, metadata !9204, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 %12, metadata !9202, metadata !DIExpression()), !dbg !9205
  %21 = add i32 %12, -1, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %21, metadata !9202, metadata !DIExpression()), !dbg !9205
  %22 = icmp eq i32 %21, 0, !dbg !9210
  br i1 %22, label %23, label %11, !dbg !9211, !llvm.loop !9219

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9205
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9205
  %26 = load i8, i8* %24, align 1, !dbg !9221
  %27 = zext i8 %26 to i32, !dbg !9221
  %28 = load i8, i8* %25, align 1, !dbg !9222
  %29 = zext i8 %28 to i32, !dbg !9222
  %30 = sub nsw i32 %27, %29, !dbg !9223
  br label %31, !dbg !9224

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9205
  ret i32 %32, !dbg !9225
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9230, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8* %1, metadata !9231, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %2, metadata !9232, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8* %0, metadata !9233, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8* %1, metadata !9234, metadata !DIExpression()), !dbg !9235
  %4 = ptrtoint i8* %0 to i32, !dbg !9236
  %5 = ptrtoint i8* %1 to i32, !dbg !9236
  %6 = sub i32 %4, %5, !dbg !9236
  %7 = icmp ult i32 %6, %2, !dbg !9238
  br i1 %7, label %10, label %8, !dbg !9239

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9234, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8* %0, metadata !9233, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %2, metadata !9232, metadata !DIExpression()), !dbg !9235
  %9 = icmp eq i32 %2, 0, !dbg !9240
  br i1 %9, label %26, label %17, !dbg !9242

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9232, metadata !DIExpression()), !dbg !9235
  %12 = add i32 %11, -1, !dbg !9243
  call void @llvm.dbg.value(metadata i32 %12, metadata !9232, metadata !DIExpression()), !dbg !9235
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9246
  %14 = load i8, i8* %13, align 1, !dbg !9246
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9247
  store i8 %14, i8* %15, align 1, !dbg !9248
  %16 = icmp eq i32 %12, 0, !dbg !9249
  br i1 %16, label %26, label %10, !dbg !9250, !llvm.loop !9251

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9234, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i8* %19, metadata !9233, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %20, metadata !9232, metadata !DIExpression()), !dbg !9235
  %21 = load i8, i8* %18, align 1, !dbg !9253
  store i8 %21, i8* %19, align 1, !dbg !9255
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9256
  call void @llvm.dbg.value(metadata i8* %22, metadata !9233, metadata !DIExpression()), !dbg !9235
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9257
  call void @llvm.dbg.value(metadata i8* %23, metadata !9234, metadata !DIExpression()), !dbg !9235
  %24 = add i32 %20, -1, !dbg !9258
  call void @llvm.dbg.value(metadata i32 %24, metadata !9232, metadata !DIExpression()), !dbg !9235
  %25 = icmp eq i32 %24, 0, !dbg !9240
  br i1 %25, label %26, label %17, !dbg !9242, !llvm.loop !9259

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9261
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9262 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9268, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i8* %1, metadata !9269, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i32 %2, metadata !9270, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i8* %0, metadata !9271, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i8* %1, metadata !9272, metadata !DIExpression()), !dbg !9273
  %4 = icmp eq i32 %2, 0, !dbg !9274
  br i1 %4, label %14, label %5, !dbg !9275

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9272, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i8* %7, metadata !9271, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.value(metadata i32 %8, metadata !9270, metadata !DIExpression()), !dbg !9273
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9276
  call void @llvm.dbg.value(metadata i8* %9, metadata !9272, metadata !DIExpression()), !dbg !9273
  %10 = load i8, i8* %6, align 1, !dbg !9278
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9279
  call void @llvm.dbg.value(metadata i8* %11, metadata !9271, metadata !DIExpression()), !dbg !9273
  store i8 %10, i8* %7, align 1, !dbg !9280
  %12 = add i32 %8, -1, !dbg !9281
  call void @llvm.dbg.value(metadata i32 %12, metadata !9270, metadata !DIExpression()), !dbg !9273
  %13 = icmp eq i32 %12, 0, !dbg !9274
  br i1 %13, label %14, label %5, !dbg !9275, !llvm.loop !9282

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9284
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !9285 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9289, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i32 %1, metadata !9290, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i32 %2, metadata !9291, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i8* %0, metadata !9292, metadata !DIExpression()), !dbg !9294
  %4 = trunc i32 %1 to i8, !dbg !9295
  call void @llvm.dbg.value(metadata i8 %4, metadata !9293, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i32 %2, metadata !9291, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i8* %0, metadata !9292, metadata !DIExpression()), !dbg !9294
  %5 = icmp eq i32 %2, 0, !dbg !9296
  br i1 %5, label %12, label %6, !dbg !9297

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9291, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i8* %8, metadata !9292, metadata !DIExpression()), !dbg !9294
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9298
  call void @llvm.dbg.value(metadata i8* %9, metadata !9292, metadata !DIExpression()), !dbg !9294
  store i8 %4, i8* %8, align 1, !dbg !9300
  %10 = add i32 %7, -1, !dbg !9301
  call void @llvm.dbg.value(metadata i32 %10, metadata !9291, metadata !DIExpression()), !dbg !9294
  %11 = icmp eq i32 %10, 0, !dbg !9296
  br i1 %11, label %12, label %6, !dbg !9297, !llvm.loop !9302

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9304
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9305 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9309, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata i32 %1, metadata !9310, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata i32 %2, metadata !9311, metadata !DIExpression()), !dbg !9315
  %4 = icmp eq i32 %2, 0, !dbg !9316
  br i1 %4, label %17, label %5, !dbg !9317

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9318

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9319
  call void @llvm.dbg.value(metadata i8* %9, metadata !9312, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %8, metadata !9311, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata i8* %9, metadata !9312, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9319
  %10 = load i8, i8* %9, align 1, !dbg !9320
  %11 = icmp eq i8 %10, %6, !dbg !9323
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9324
  call void @llvm.dbg.value(metadata i8* %12, metadata !9312, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %13, metadata !9311, metadata !DIExpression()), !dbg !9315
  br i1 %15, label %16, label %7, !dbg !9324, !llvm.loop !9325

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9327

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9315
  ret i8* %19, !dbg !9328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !9329 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9331, metadata !DIExpression()), !dbg !9332
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9333
  ret void, !dbg !9334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !9335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9337, metadata !DIExpression()), !dbg !9338
  ret i32 -1, !dbg !9339
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9344, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i32* %1, metadata !9345, metadata !DIExpression()), !dbg !9346
  %3 = ptrtoint i32* %1 to i32, !dbg !9347
  %4 = and i32 %3, -2, !dbg !9347
  %5 = icmp eq i32 %4, 2, !dbg !9347
  br i1 %5, label %6, label %9, !dbg !9347

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9348
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !9348
  br label %9, !dbg !9349

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9349
  ret i32 %10, !dbg !9350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9353, metadata !DIExpression()), !dbg !9355
  call void @llvm.dbg.value(metadata i32* %1, metadata !9354, metadata !DIExpression()), !dbg !9355
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !9356
  ret i32 %3, !dbg !9357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9361, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i32* %1, metadata !9362, metadata !DIExpression()), !dbg !9363
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9364, !srcloc !9366
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !9367
  ret i32 %3, !dbg !9368
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9369 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9374, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.value(metadata i32* %1, metadata !9375, metadata !DIExpression()), !dbg !9378
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %3, metadata !9376, metadata !DIExpression()), !dbg !9378
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %4, metadata !9377, metadata !DIExpression()), !dbg !9378
  %5 = icmp ne i32 %3, %4, !dbg !9381
  %6 = sext i1 %5 to i32, !dbg !9382
  ret i32 %6, !dbg !9383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9388, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %1, metadata !9389, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %2, metadata !9390, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32* %3, metadata !9391, metadata !DIExpression()), !dbg !9392
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !9393
  ret i32 %5, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9395 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9397, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata i32 %1, metadata !9398, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata i32 %2, metadata !9399, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.value(metadata i32* %3, metadata !9400, metadata !DIExpression()), !dbg !9401
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9402, !srcloc !9404
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !9405
  ret i32 %5, !dbg !9406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9407 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9409, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %1, metadata !9410, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %2, metadata !9411, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32* %3, metadata !9412, metadata !DIExpression()), !dbg !9417
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9418
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9420
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9420
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9420
  br i1 %11, label %33, label %12, !dbg !9420

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9417
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9417
  call void @llvm.dbg.value(metadata i8* %14, metadata !9415, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %13, metadata !9413, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %1, metadata !9414, metadata !DIExpression()), !dbg !9417
  br label %15, !dbg !9421

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9423
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9417
  call void @llvm.dbg.value(metadata i8* %17, metadata !9415, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.value(metadata i32 %16, metadata !9414, metadata !DIExpression()), !dbg !9417
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9424
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9427
  call void @llvm.dbg.value(metadata i8* %19, metadata !9415, metadata !DIExpression()), !dbg !9417
  %20 = load i8, i8* %17, align 1, !dbg !9428
  %21 = zext i8 %20 to i32, !dbg !9429
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !9424
  %23 = icmp eq i32 %22, -1, !dbg !9430
  br i1 %23, label %30, label %24, !dbg !9431

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %25, metadata !9414, metadata !DIExpression()), !dbg !9417
  %26 = icmp eq i32 %25, 0, !dbg !9433
  br i1 %26, label %27, label %15, !dbg !9434, !llvm.loop !9435

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %28, metadata !9413, metadata !DIExpression()), !dbg !9417
  %29 = icmp eq i32 %28, 0, !dbg !9438
  br i1 %29, label %30, label %12, !dbg !9439, !llvm.loop !9440

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9417
  call void @llvm.dbg.value(metadata i32 %31, metadata !9413, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.label(metadata !9416), !dbg !9443
  %32 = sub i32 %2, %31, !dbg !9444
  br label %33, !dbg !9445

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9417
  ret i32 %34, !dbg !9446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9447 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9451, metadata !DIExpression()), !dbg !9452
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9453
  %3 = icmp eq i32 %2, -1, !dbg !9455
  br i1 %3, label %8, label %4, !dbg !9456

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !9457
  %6 = icmp eq i32 %5, -1, !dbg !9458
  %7 = sext i1 %6 to i32, !dbg !9457
  br label %8, !dbg !9459

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9452
  ret i32 %9, !dbg !9460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9461 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9469, metadata !DIExpression()), !dbg !9471
  %3 = tail call i64 @sys_clock_tick_get() #24, !dbg !9472
  call void @llvm.dbg.value(metadata i64 %3, metadata !9470, metadata !DIExpression()), !dbg !9471
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9473
  %5 = sub i64 %1, %3, !dbg !9473
  store i64 %5, i64* %4, align 8, !dbg !9473
  ret void, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.18* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9481, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9479, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i8* %1, metadata !9480, metadata !DIExpression()), !dbg !9484
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #24, !dbg !9485
  call void @llvm.dbg.value(metadata i64 %4, metadata !9483, metadata !DIExpression()), !dbg !9484
  %5 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9486
  br i1 %5, label %6, label %7, !dbg !9489

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 108) #24, !dbg !9490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.99, i32 0, i32 0)) #24, !dbg !9490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 108) #24, !dbg !9490
  unreachable, !dbg !9490

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9492
  br i1 %8, label %9, label %10, !dbg !9495

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 109) #24, !dbg !9496
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9496
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 109) #24, !dbg !9496
  unreachable, !dbg !9496

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !9498
  br i1 %11, label %12, label %13, !dbg !9501

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 110) #24, !dbg !9502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.103, i32 0, i32 0)) #24, !dbg !9502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 110) #24, !dbg !9502
  unreachable, !dbg !9502

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 3, !dbg !9504
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !9504
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !9506
  br i1 %16, label %22, label %17, !dbg !9507

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !9508
  %19 = load i16, i16* %18, align 4, !dbg !9508
  %20 = zext i16 %19 to i32, !dbg !9509
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #24, !dbg !9510
  br i1 %21, label %22, label %36, !dbg !9511

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !9512
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9512
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #25, !dbg !9513
  call void @llvm.dbg.value(metadata i32 %25, metadata !9482, metadata !DIExpression()), !dbg !9484
  %26 = icmp eq i32 %25, 0, !dbg !9514
  br i1 %26, label %27, label %36, !dbg !9516

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !9517
  %29 = load i8*, i8** %28, align 4, !dbg !9517
  %30 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !9518
  %31 = load i16, i16* %30, align 4, !dbg !9518
  %32 = zext i16 %31 to i32, !dbg !9519
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #24, !dbg !9520
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef nonnull %0, i64 noundef %4) #25, !dbg !9521
  call void @llvm.dbg.value(metadata i32 0, metadata !9482, metadata !DIExpression()), !dbg !9484
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !9522
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #25, !dbg !9523
  br label %36, !dbg !9524

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !9484
  ret i32 %37, !dbg !9525
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9526 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9531, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9530, metadata !DIExpression()), !dbg !9532
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9533, !srcloc !9535
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #24, !dbg !9536
  ret i32 %3, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9538 {
  %3 = alloca %struct.zbus_channel.18*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9542, metadata !DIExpression()), !dbg !9550
  store %struct.zbus_channel.18* %0, %struct.zbus_channel.18** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9543, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i32 0, metadata !9544, metadata !DIExpression()), !dbg !9550
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 6, !dbg !9551
  %6 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %5, align 4, !dbg !9551
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %6, metadata !9546, metadata !DIExpression()), !dbg !9552
  %7 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %6, align 4, !dbg !9553
  %8 = icmp eq %struct.zbus_observer.19* %7, null, !dbg !9555
  br i1 %8, label %9, label %16, !dbg !9556

9:                                                ; preds = %27, %2
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9542, metadata !DIExpression()), !dbg !9550
  tail call fastcc void @_zbus_notify_runtime_listeners(%struct.zbus_channel.18* noundef %0) #25, !dbg !9557
  %10 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %5, align 4, !dbg !9558
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %10, metadata !9548, metadata !DIExpression()), !dbg !9559
  call void @llvm.dbg.value(metadata i32 0, metadata !9544, metadata !DIExpression()), !dbg !9550
  %11 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %10, align 4, !dbg !9560
  %12 = icmp eq %struct.zbus_observer.19* %11, null, !dbg !9562
  br i1 %12, label %33, label %13, !dbg !9563

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.18** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %35, !dbg !9563

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.19* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.19** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %18, metadata !9546, metadata !DIExpression()), !dbg !9552
  %19 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %17, i32 0, i32 0, !dbg !9564
  %20 = load i8, i8* %19, align 4, !dbg !9564, !range !8282
  %21 = icmp eq i8 %20, 0, !dbg !9564
  br i1 %21, label %27, label %22, !dbg !9567

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %17, i32 0, i32 2, !dbg !9568
  %24 = load void (%struct.zbus_channel.18*)*, void (%struct.zbus_channel.18*)** %23, align 4, !dbg !9568
  %25 = icmp eq void (%struct.zbus_channel.18*)* %24, null, !dbg !9569
  br i1 %25, label %27, label %26, !dbg !9570

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9542, metadata !DIExpression()), !dbg !9550
  tail call void %24(%struct.zbus_channel.18* noundef %0) #24, !dbg !9571
  br label %27, !dbg !9573

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %18, i32 1, !dbg !9574
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !9546, metadata !DIExpression()), !dbg !9552
  %29 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %28, align 4, !dbg !9553
  %30 = icmp eq %struct.zbus_observer.19* %29, null, !dbg !9555
  br i1 %30, label %9, label %16, !dbg !9556, !llvm.loop !9575

31:                                               ; preds = %51
  %32 = load %struct.zbus_channel.18*, %struct.zbus_channel.18** %3, align 4, !dbg !9577
  br label %33, !dbg !9577

33:                                               ; preds = %31, %9
  %34 = phi %struct.zbus_channel.18* [ %32, %31 ], [ %0, %9 ], !dbg !9577
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %34, metadata !9542, metadata !DIExpression()), !dbg !9550
  call fastcc void @_zbus_notify_runtime_subscribers(%struct.zbus_channel.18* noundef %34, i64 noundef %1) #25, !dbg !9578
  call void @llvm.dbg.value(metadata i32 0, metadata !9545, metadata !DIExpression()), !dbg !9550
  call void @llvm.dbg.value(metadata i32 0, metadata !9544, metadata !DIExpression()), !dbg !9550
  ret void, !dbg !9579

35:                                               ; preds = %13, %51
  %36 = phi %struct.zbus_observer.19* [ %11, %13 ], [ %53, %51 ]
  %37 = phi %struct.zbus_observer.19** [ %10, %13 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %37, metadata !9548, metadata !DIExpression()), !dbg !9559
  %38 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %36, i32 0, i32 0, !dbg !9580
  %39 = load i8, i8* %38, align 4, !dbg !9580, !range !8282
  %40 = icmp eq i8 %39, 0, !dbg !9580
  br i1 %40, label %51, label %41, !dbg !9583

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %36, i32 0, i32 1, !dbg !9584
  %43 = load %struct.k_msgq*, %struct.k_msgq** %42, align 4, !dbg !9584
  %44 = icmp eq %struct.k_msgq* %43, null, !dbg !9585
  br i1 %44, label %51, label %45, !dbg !9586

45:                                               ; preds = %41
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #25, !dbg !9587
  %46 = load i64, i64* %15, align 8, !dbg !9589
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !9589
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %3, metadata !9542, metadata !DIExpression(DW_OP_deref)), !dbg !9550
  %48 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %43, i8* noundef nonnull %14, [1 x i64] %47) #25, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %48, metadata !9545, metadata !DIExpression()), !dbg !9550
  %49 = icmp eq i32 %48, 0, !dbg !9590
  br i1 %49, label %51, label %50, !dbg !9593

50:                                               ; preds = %45
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 85) #24, !dbg !9594
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.106, i32 0, i32 0)) #24, !dbg !9594
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 85) #24, !dbg !9594
  unreachable, !dbg !9594

51:                                               ; preds = %45, %35, %41
  call void @llvm.dbg.value(metadata i32 0, metadata !9544, metadata !DIExpression()), !dbg !9550
  %52 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %37, i32 1, !dbg !9596
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %52, metadata !9548, metadata !DIExpression()), !dbg !9559
  %53 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %52, align 4, !dbg !9560
  %54 = icmp eq %struct.zbus_observer.19* %53, null, !dbg !9562
  br i1 %54, label %31, label %35, !dbg !9563, !llvm.loop !9597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !9599 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9603, metadata !DIExpression()), !dbg !9604
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9605, !srcloc !9607
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #24, !dbg !9608
  ret i32 %2, !dbg !9609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_runtime_listeners(%struct.zbus_channel.18* noundef %0) unnamed_addr #1 !dbg !9610 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9612, metadata !DIExpression()), !dbg !9615
  %2 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9616
  br i1 %2, label %3, label %4, !dbg !9619

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 22) #24, !dbg !9620
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9620
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 22) #24, !dbg !9620
  unreachable, !dbg !9620

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !9622
  %6 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !9622
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %6) #25, !dbg !9622
  %8 = icmp eq %struct._snode* %7, null, !dbg !9622
  br i1 %8, label %25, label %9, !dbg !9622

9:                                                ; preds = %4, %23
  %10 = phi %struct._snode* [ %11, %23 ], [ %7, %4 ]
  %11 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %10) #25, !dbg !9624
  call void @llvm.dbg.value(metadata %struct._snode* %11, metadata !9614, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !9613, metadata !DIExpression()), !dbg !9615
  %12 = getelementptr inbounds %struct._snode, %struct._snode* %10, i32 1, !dbg !9625
  %13 = bitcast %struct._snode* %12 to %struct.zbus_observer.19**, !dbg !9625
  %14 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %13, align 4, !dbg !9625
  %15 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %14, i32 0, i32 0, !dbg !9629
  %16 = load i8, i8* %15, align 4, !dbg !9629, !range !8282
  %17 = icmp eq i8 %16, 0, !dbg !9629
  br i1 %17, label %23, label %18, !dbg !9630

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %14, i32 0, i32 2, !dbg !9631
  %20 = load void (%struct.zbus_channel.18*)*, void (%struct.zbus_channel.18*)** %19, align 4, !dbg !9631
  %21 = icmp eq void (%struct.zbus_channel.18*)* %20, null, !dbg !9632
  br i1 %21, label %23, label %22, !dbg !9633

22:                                               ; preds = %18
  tail call void %20(%struct.zbus_channel.18* noundef nonnull %0) #24, !dbg !9634
  br label %23, !dbg !9636

23:                                               ; preds = %9, %18, %22
  call void @llvm.dbg.value(metadata %struct._snode* %11, metadata !9613, metadata !DIExpression()), !dbg !9615
  %24 = icmp eq %struct._snode* %11, null, !dbg !9637
  br i1 %24, label %25, label %9, !dbg !9637

25:                                               ; preds = %23, %4
  ret void, !dbg !9638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_runtime_subscribers(%struct.zbus_channel.18* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !9639 {
  %3 = alloca %struct.zbus_channel.18*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9641, metadata !DIExpression()), !dbg !9647
  store %struct.zbus_channel.18* %0, %struct.zbus_channel.18** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !9642, metadata !DIExpression()), !dbg !9647
  %5 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9648
  br i1 %5, label %6, label %7, !dbg !9651

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 39) #24, !dbg !9652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 39) #24, !dbg !9652
  unreachable, !dbg !9652

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !9643, metadata !DIExpression()), !dbg !9647
  %8 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !9654
  %9 = load %struct._slist*, %struct._slist** %8, align 4, !dbg !9654
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %9) #25, !dbg !9654
  %11 = icmp eq %struct._snode* %10, null, !dbg !9654
  br i1 %11, label %39, label %12, !dbg !9654

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9641, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !9645, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !9645, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 0, metadata !9643, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* %10, metadata !9645, metadata !DIExpression()), !dbg !9647
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %10) #25, !dbg !9654
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9646, metadata !DIExpression()), !dbg !9647
  %14 = bitcast %struct.zbus_channel.18** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %16, !dbg !9654

16:                                               ; preds = %37, %12
  %17 = phi %struct._snode* [ %13, %12 ], [ %38, %37 ]
  %18 = phi %struct._snode* [ %10, %12 ], [ %17, %37 ]
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* %18, metadata !9645, metadata !DIExpression()), !dbg !9647
  %19 = getelementptr inbounds %struct._snode, %struct._snode* %18, i32 1, !dbg !9656
  %20 = bitcast %struct._snode* %19 to %struct.zbus_observer.19**, !dbg !9656
  %21 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %20, align 4, !dbg !9656
  %22 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %21, i32 0, i32 0, !dbg !9660
  %23 = load i8, i8* %22, align 4, !dbg !9660, !range !8282
  %24 = icmp eq i8 %23, 0, !dbg !9660
  br i1 %24, label %35, label %25, !dbg !9661

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %21, i32 0, i32 1, !dbg !9662
  %27 = load %struct.k_msgq*, %struct.k_msgq** %26, align 4, !dbg !9662
  %28 = icmp eq %struct.k_msgq* %27, null, !dbg !9663
  br i1 %28, label %35, label %29, !dbg !9664

29:                                               ; preds = %25
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #25, !dbg !9665
  %30 = load i64, i64* %15, align 8, !dbg !9667
  %31 = insertvalue [1 x i64] poison, i64 %30, 0, !dbg !9667
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %3, metadata !9641, metadata !DIExpression(DW_OP_deref)), !dbg !9647
  %32 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %27, i8* noundef nonnull %14, [1 x i64] %31) #25, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %32, metadata !9644, metadata !DIExpression()), !dbg !9647
  %33 = icmp eq i32 %32, 0, !dbg !9668
  br i1 %33, label %35, label %34, !dbg !9671

34:                                               ; preds = %29
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 54) #24, !dbg !9672
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.17.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.106, i32 0, i32 0), i32 noundef %32) #24, !dbg !9672
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 54) #24, !dbg !9672
  unreachable, !dbg !9672

35:                                               ; preds = %29, %16, %25
  call void @llvm.dbg.value(metadata i32 0, metadata !9643, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !9645, metadata !DIExpression()), !dbg !9647
  %36 = icmp eq %struct._snode* %17, null, !dbg !9674
  br i1 %36, label %39, label %37, !dbg !9674

37:                                               ; preds = %35
  %38 = call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %17) #25, !dbg !9674
  call void @llvm.dbg.value(metadata %struct._snode* %38, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata %struct._snode* %17, metadata !9645, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.value(metadata i32 0, metadata !9643, metadata !DIExpression()), !dbg !9647
  br label %16, !dbg !9654

39:                                               ; preds = %35, %7
  ret void, !dbg !9675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9676 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9682, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9680, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.value(metadata i8* %1, metadata !9681, metadata !DIExpression()), !dbg !9683
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9684, !srcloc !9686
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9687
  ret i32 %4, !dbg !9688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9689 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9693, metadata !DIExpression()), !dbg !9694
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9695
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9695
  ret %struct._snode* %3, !dbg !9696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9697 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9701, metadata !DIExpression()), !dbg !9702
  %2 = icmp eq %struct._snode* %0, null, !dbg !9703
  br i1 %2, label %5, label %3, !dbg !9703

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9703
  br label %5, !dbg !9703

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9703
  ret %struct._snode* %6, !dbg !9703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9706, metadata !DIExpression()), !dbg !9707
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9708
  ret %struct._snode* %2, !dbg !9708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9709 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9711, metadata !DIExpression()), !dbg !9712
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9713
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9713
  ret %struct._snode* %3, !dbg !9714
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.18* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9715 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9721, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9719, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i8* %1, metadata !9720, metadata !DIExpression()), !dbg !9723
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9724
  br i1 %4, label %5, label %6, !dbg !9727

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 134) #24, !dbg !9728
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.99, i32 0, i32 0)) #24, !dbg !9728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 134) #24, !dbg !9728
  unreachable, !dbg !9728

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9730
  br i1 %7, label %8, label %9, !dbg !9733

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 135) #24, !dbg !9734
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9734
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 135) #24, !dbg !9734
  unreachable, !dbg !9734

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !9736
  br i1 %10, label %11, label %12, !dbg !9739

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 136) #24, !dbg !9740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.103, i32 0, i32 0)) #24, !dbg !9740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 136) #24, !dbg !9740
  unreachable, !dbg !9740

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !9742
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !9742
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #25, !dbg !9743
  call void @llvm.dbg.value(metadata i32 %15, metadata !9722, metadata !DIExpression()), !dbg !9723
  %16 = icmp eq i32 %15, 0, !dbg !9744
  br i1 %16, label %17, label %26, !dbg !9746

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 2, !dbg !9747
  %19 = load i8*, i8** %18, align 4, !dbg !9747
  %20 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 0, !dbg !9748
  %21 = load i16, i16* %20, align 4, !dbg !9748
  %22 = zext i16 %21 to i32, !dbg !9749
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #24, !dbg !9750
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !9751
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #25, !dbg !9752
  br label %26, !dbg !9753

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !9723
  ret i32 %27, !dbg !9754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.18* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9755 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9760, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9759, metadata !DIExpression()), !dbg !9763
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #24, !dbg !9764
  call void @llvm.dbg.value(metadata i64 %3, metadata !9762, metadata !DIExpression()), !dbg !9763
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9765
  br i1 %4, label %5, label %6, !dbg !9768

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 153) #24, !dbg !9769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.99, i32 0, i32 0)) #24, !dbg !9769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 153) #24, !dbg !9769
  unreachable, !dbg !9769

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9771
  br i1 %7, label %8, label %9, !dbg !9774

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 154) #24, !dbg !9775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 154) #24, !dbg !9775
  unreachable, !dbg !9775

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !9777
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !9777
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #25, !dbg !9778
  call void @llvm.dbg.value(metadata i32 %12, metadata !9761, metadata !DIExpression()), !dbg !9763
  %13 = icmp eq i32 %12, 0, !dbg !9779
  br i1 %13, label %14, label %17, !dbg !9781

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.18* noundef nonnull %0, i64 noundef %3) #25, !dbg !9782
  call void @llvm.dbg.value(metadata i32 0, metadata !9761, metadata !DIExpression()), !dbg !9763
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !9783
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #25, !dbg !9784
  br label %17, !dbg !9785

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !9786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.18* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !9787 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9790, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9789, metadata !DIExpression()), !dbg !9792
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9793
  br i1 %3, label %4, label %5, !dbg !9796

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 170) #24, !dbg !9797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.99, i32 0, i32 0)) #24, !dbg !9797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 170) #24, !dbg !9797
  unreachable, !dbg !9797

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9799
  br i1 %6, label %7, label %8, !dbg !9802

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 171) #24, !dbg !9803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 171) #24, !dbg !9803
  unreachable, !dbg !9803

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !9805
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !9805
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #25, !dbg !9806
  call void @llvm.dbg.value(metadata i32 %11, metadata !9791, metadata !DIExpression()), !dbg !9792
  ret i32 %11, !dbg !9807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.18* noundef readonly %0) local_unnamed_addr #1 !dbg !9808 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9812, metadata !DIExpression()), !dbg !9814
  %2 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9815
  br i1 %2, label %3, label %4, !dbg !9818

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 184) #24, !dbg !9819
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.99, i32 0, i32 0)) #24, !dbg !9819
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 184) #24, !dbg !9819
  unreachable, !dbg !9819

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9821
  br i1 %5, label %6, label %7, !dbg !9824

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 185) #24, !dbg !9825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 185) #24, !dbg !9825
  unreachable, !dbg !9825

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !9827
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !9827
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #25, !dbg !9828
  call void @llvm.dbg.value(metadata i32 %10, metadata !9813, metadata !DIExpression()), !dbg !9814
  ret i32 %10, !dbg !9829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.19* noundef readonly %0, %struct.zbus_channel.18** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9830 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9837, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %0, metadata !9835, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18** %1, metadata !9836, metadata !DIExpression()), !dbg !9838
  %4 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9839
  br i1 %4, label %5, label %6, !dbg !9842

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 195) #24, !dbg !9843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.99, i32 0, i32 0)) #24, !dbg !9843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 195) #24, !dbg !9843
  unreachable, !dbg !9843

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer.19* %0, null, !dbg !9845
  br i1 %7, label %8, label %9, !dbg !9848

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.112, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 196) #24, !dbg !9849
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.113, i32 0, i32 0)) #24, !dbg !9849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 196) #24, !dbg !9849
  unreachable, !dbg !9849

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel.18** %1, null, !dbg !9851
  br i1 %10, label %11, label %12, !dbg !9854

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 197) #24, !dbg !9855
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.101, i32 0, i32 0)) #24, !dbg !9855
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.98, i32 0, i32 0), i32 noundef 197) #24, !dbg !9855
  unreachable, !dbg !9855

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer.19, %struct.zbus_observer.19* %0, i32 0, i32 1, !dbg !9857
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !9857
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !9859
  br i1 %15, label %19, label %16, !dbg !9860

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel.18** %1 to i8*, !dbg !9861
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #25, !dbg !9862
  br label %19, !dbg !9863

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !9838
  ret i32 %20, !dbg !9864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !9865 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9871, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !9869, metadata !DIExpression()), !dbg !9872
  call void @llvm.dbg.value(metadata i8* %1, metadata !9870, metadata !DIExpression()), !dbg !9872
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9873, !srcloc !9875
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #24, !dbg !9876
  ret i32 %4, !dbg !9877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.k_mem_slab* @zbus_runtime_obs_pool() local_unnamed_addr #6 !dbg !9878 {
  ret %struct.k_mem_slab* @_zbus_runtime_obs_pool, !dbg !9882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_add_obs(%struct.zbus_channel.18* noundef readonly %0, %struct.zbus_observer.19* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9883 {
  %4 = alloca %struct.zbus_observer_node*, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata i64 undef, metadata !9893, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !9891, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %1, metadata !9892, metadata !DIExpression()), !dbg !9900
  %6 = bitcast %struct.zbus_observer_node** %4 to i8*, !dbg !9901
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !9901
  %7 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #24, !dbg !9902
  call void @llvm.dbg.value(metadata i64 %7, metadata !9897, metadata !DIExpression()), !dbg !9900
  %8 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !9903
  br i1 %8, label %9, label %10, !dbg !9906

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 26) #24, !dbg !9907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.120, i32 0, i32 0)) #24, !dbg !9907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 26) #24, !dbg !9907
  unreachable, !dbg !9907

10:                                               ; preds = %3
  %11 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !9909
  br i1 %11, label %12, label %13, !dbg !9912

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 27) #24, !dbg !9913
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.122, i32 0, i32 0)) #24, !dbg !9913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 27) #24, !dbg !9913
  unreachable, !dbg !9913

13:                                               ; preds = %10
  %14 = icmp eq %struct.zbus_observer.19* %1, null, !dbg !9915
  br i1 %14, label %15, label %16, !dbg !9918

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 28) #24, !dbg !9919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.124, i32 0, i32 0)) #24, !dbg !9919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 28) #24, !dbg !9919
  unreachable, !dbg !9919

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 6, !dbg !9921
  %18 = load %struct.zbus_observer.19**, %struct.zbus_observer.19*** %17, align 4, !dbg !9921
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %18, metadata !9898, metadata !DIExpression()), !dbg !9922
  %19 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %18, align 4, !dbg !9923
  %20 = icmp eq %struct.zbus_observer.19* %19, null, !dbg !9925
  br i1 %20, label %29, label %24, !dbg !9926

21:                                               ; preds = %24
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !9898, metadata !DIExpression()), !dbg !9922
  %22 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %28, align 4, !dbg !9923
  %23 = icmp eq %struct.zbus_observer.19* %22, null, !dbg !9925
  br i1 %23, label %29, label %24, !dbg !9926, !llvm.loop !9927

24:                                               ; preds = %16, %21
  %25 = phi %struct.zbus_observer.19* [ %22, %21 ], [ %19, %16 ]
  %26 = phi %struct.zbus_observer.19** [ %28, %21 ], [ %18, %16 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %26, metadata !9898, metadata !DIExpression()), !dbg !9922
  %27 = icmp eq %struct.zbus_observer.19* %25, %1, !dbg !9929
  %28 = getelementptr inbounds %struct.zbus_observer.19*, %struct.zbus_observer.19** %26, i32 1, !dbg !9932
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19** %28, metadata !9898, metadata !DIExpression()), !dbg !9922
  br i1 %27, label %72, label %21, !dbg !9933

29:                                               ; preds = %21, %16
  %30 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !9934
  %31 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !9934
  %32 = tail call fastcc i32 @k_mutex_lock.125(%struct.k_mutex* noundef %31, [1 x i64] %2) #25, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %32, metadata !9894, metadata !DIExpression()), !dbg !9900
  %33 = icmp eq i32 %32, 0, !dbg !9936
  br i1 %33, label %34, label %72, !dbg !9938

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !9939
  %36 = load %struct._slist*, %struct._slist** %35, align 4, !dbg !9939
  %37 = tail call fastcc %struct._snode* @sys_slist_peek_head.126(%struct._slist* noundef %36) #25, !dbg !9939
  %38 = icmp eq %struct._snode* %37, null, !dbg !9939
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !9895, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !9895, metadata !DIExpression()), !dbg !9900
  br i1 %38, label %57, label %39, !dbg !9939

39:                                               ; preds = %34
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !9896, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata %struct._snode* %37, metadata !9895, metadata !DIExpression()), !dbg !9900
  %40 = getelementptr inbounds %struct._snode, %struct._snode* %37, i32 1, !dbg !9941
  %41 = bitcast %struct._snode* %40 to %struct.zbus_observer.19**, !dbg !9941
  %42 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %41, align 4, !dbg !9941
  %43 = icmp eq %struct.zbus_observer.19* %42, %1, !dbg !9945
  br i1 %43, label %46, label %44, !dbg !9946

44:                                               ; preds = %39
  %45 = tail call fastcc %struct._snode* @sys_slist_peek_next.127(%struct._snode* noundef nonnull %37) #25, !dbg !9939
  call void @llvm.dbg.value(metadata %struct._snode* %45, metadata !9896, metadata !DIExpression()), !dbg !9900
  br label %48, !dbg !9946

46:                                               ; preds = %51, %39
  %47 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !9947
  tail call fastcc void @k_mutex_unlock.128(%struct.k_mutex* noundef %47) #25, !dbg !9949
  br label %72, !dbg !9950

48:                                               ; preds = %44, %51
  %49 = phi %struct._snode* [ %45, %44 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !9896, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !9895, metadata !DIExpression()), !dbg !9900
  %50 = icmp eq %struct._snode* %49, null, !dbg !9951
  br i1 %50, label %57, label %51, !dbg !9951

51:                                               ; preds = %48
  %52 = tail call fastcc %struct._snode* @sys_slist_peek_next.127(%struct._snode* noundef nonnull %49) #25, !dbg !9951
  call void @llvm.dbg.value(metadata %struct._snode* %52, metadata !9896, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.value(metadata %struct._snode* %49, metadata !9895, metadata !DIExpression()), !dbg !9900
  %53 = getelementptr inbounds %struct._snode, %struct._snode* %49, i32 1, !dbg !9941
  %54 = bitcast %struct._snode* %53 to %struct.zbus_observer.19**, !dbg !9941
  %55 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %54, align 4, !dbg !9941
  %56 = icmp eq %struct.zbus_observer.19* %55, %1, !dbg !9945
  br i1 %56, label %46, label %48, !dbg !9946

57:                                               ; preds = %48, %34
  store %struct.zbus_observer_node* null, %struct.zbus_observer_node** %4, align 4, !dbg !9951
  %58 = bitcast %struct.zbus_observer_node** %4 to i8**, !dbg !9952
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %5, i64 noundef %7) #24, !dbg !9953
  %59 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !9954
  %60 = load i64, i64* %59, align 8, !dbg !9954
  %61 = insertvalue [1 x i64] poison, i64 %60, 0, !dbg !9954
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node** %4, metadata !9895, metadata !DIExpression(DW_OP_deref)), !dbg !9900
  %62 = call i32 @k_mem_slab_alloc(%struct.k_mem_slab* noundef nonnull @_zbus_runtime_obs_pool, i8** noundef nonnull %58, [1 x i64] %61) #24, !dbg !9954
  call void @llvm.dbg.value(metadata i32 %62, metadata !9894, metadata !DIExpression()), !dbg !9900
  %63 = icmp eq i32 %62, 0, !dbg !9955
  br i1 %63, label %66, label %64, !dbg !9957

64:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.8.129, i32 0, i32 0), i32 noundef 69) #24, !dbg !9958
  %65 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !9964
  call fastcc void @k_mutex_unlock.128(%struct.k_mutex* noundef %65) #25, !dbg !9965
  br label %72, !dbg !9966

66:                                               ; preds = %57
  %67 = load %struct.zbus_observer_node*, %struct.zbus_observer_node** %4, align 4, !dbg !9967
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* %67, metadata !9895, metadata !DIExpression()), !dbg !9900
  %68 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %67, i32 0, i32 1, !dbg !9968
  store %struct.zbus_observer.19* %1, %struct.zbus_observer.19** %68, align 4, !dbg !9969
  %69 = load %struct._slist*, %struct._slist** %35, align 4, !dbg !9970
  %70 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %67, i32 0, i32 0, !dbg !9971
  call fastcc void @sys_slist_append(%struct._slist* noundef %69, %struct._snode* noundef %70) #25, !dbg !9972
  %71 = load %struct.k_mutex*, %struct.k_mutex** %30, align 4, !dbg !9973
  call fastcc void @k_mutex_unlock.128(%struct.k_mutex* noundef %71) #25, !dbg !9974
  br label %72, !dbg !9975

72:                                               ; preds = %24, %29, %66, %64, %46
  %73 = phi i32 [ -120, %46 ], [ %62, %64 ], [ 0, %66 ], [ %32, %29 ], [ -17, %24 ], !dbg !9900
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !9976
  ret i32 %73, !dbg !9976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock.125(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9977 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9982, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !9981, metadata !DIExpression()), !dbg !9983
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9984, !srcloc !9986
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #24, !dbg !9987
  ret i32 %3, !dbg !9988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.126(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9989 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9993, metadata !DIExpression()), !dbg !9994
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9995
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9995
  ret %struct._snode* %3, !dbg !9996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next.127(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10001, metadata !DIExpression()), !dbg !10002
  %2 = icmp eq %struct._snode* %0, null, !dbg !10003
  br i1 %2, label %5, label %3, !dbg !10003

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check.130(%struct._snode* noundef nonnull %0) #25, !dbg !10003
  br label %5, !dbg !10003

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10003
  ret %struct._snode* %6, !dbg !10003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.128(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10008, metadata !DIExpression()), !dbg !10009
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10010, !srcloc !10012
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #24, !dbg !10013
  ret void, !dbg !10014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_append(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10015 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10020, metadata !DIExpression()), !dbg !10021
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef null) #25, !dbg !10022
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10023
  %4 = icmp eq %struct._snode* %3, null, !dbg !10023
  br i1 %4, label %5, label %6, !dbg !10022

5:                                                ; preds = %2
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !10025
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !10025
  br label %7, !dbg !10025

6:                                                ; preds = %2
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %3, %struct._snode* noundef %1) #25, !dbg !10027
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !10027
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10029 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10033, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10034, metadata !DIExpression()), !dbg !10035
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10036
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10037
  ret void, !dbg !10038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10039 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10041, metadata !DIExpression()), !dbg !10042
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10043
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10043
  ret %struct._snode* %3, !dbg !10044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10045 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10047, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10048, metadata !DIExpression()), !dbg !10049
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10050
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10051
  ret void, !dbg !10052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10053 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10055, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10056, metadata !DIExpression()), !dbg !10057
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10058
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10059
  ret void, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check.130(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10061 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10063, metadata !DIExpression()), !dbg !10064
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek.131(%struct._snode* noundef %0) #25, !dbg !10065
  ret %struct._snode* %2, !dbg !10065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek.131(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10066 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10068, metadata !DIExpression()), !dbg !10069
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10070
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10070
  ret %struct._snode* %3, !dbg !10071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_rm_obs(%struct.zbus_channel.18* noundef readonly %0, %struct.zbus_observer.19* noundef readnone %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10072 {
  %4 = alloca %struct.zbus_observer_node*, align 4
  call void @llvm.dbg.value(metadata i64 undef, metadata !10076, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct.zbus_channel.18* %0, metadata !10074, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct.zbus_observer.19* %1, metadata !10075, metadata !DIExpression()), !dbg !10081
  %5 = bitcast %struct.zbus_observer_node** %4 to i8*, !dbg !10082
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10082
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* null, metadata !10080, metadata !DIExpression()), !dbg !10081
  %6 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !10083
  br i1 %6, label %7, label %8, !dbg !10086

7:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 79) #24, !dbg !10087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.120, i32 0, i32 0)) #24, !dbg !10087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 79) #24, !dbg !10087
  unreachable, !dbg !10087

8:                                                ; preds = %3
  %9 = icmp eq %struct.zbus_channel.18* %0, null, !dbg !10089
  br i1 %9, label %10, label %11, !dbg !10092

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 80) #24, !dbg !10093
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.122, i32 0, i32 0)) #24, !dbg !10093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 80) #24, !dbg !10093
  unreachable, !dbg !10093

11:                                               ; preds = %8
  %12 = icmp eq %struct.zbus_observer.19* %1, null, !dbg !10095
  br i1 %12, label %13, label %14, !dbg !10098

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 81) #24, !dbg !10099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.124, i32 0, i32 0)) #24, !dbg !10099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2.119, i32 0, i32 0), i32 noundef 81) #24, !dbg !10099
  unreachable, !dbg !10099

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 4, !dbg !10101
  %16 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10101
  %17 = tail call fastcc i32 @k_mutex_lock.125(%struct.k_mutex* noundef %16, [1 x i64] %2) #25, !dbg !10102
  call void @llvm.dbg.value(metadata i32 %17, metadata !10077, metadata !DIExpression()), !dbg !10081
  %18 = icmp eq i32 %17, 0, !dbg !10103
  br i1 %18, label %19, label %52, !dbg !10105

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.zbus_channel.18, %struct.zbus_channel.18* %0, i32 0, i32 5, !dbg !10106
  %21 = load %struct._slist*, %struct._slist** %20, align 4, !dbg !10106
  %22 = tail call fastcc %struct._snode* @sys_slist_peek_head.126(%struct._slist* noundef %21) #25, !dbg !10106
  %23 = icmp eq %struct._snode* %22, null, !dbg !10106
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10078, metadata !DIExpression()), !dbg !10081
  br i1 %23, label %50, label %24, !dbg !10106

24:                                               ; preds = %19
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* null, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* undef, metadata !10079, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10078, metadata !DIExpression()), !dbg !10081
  %25 = getelementptr inbounds %struct._snode, %struct._snode* %22, i32 1, !dbg !10108
  %26 = bitcast %struct._snode* %25 to %struct.zbus_observer.19**, !dbg !10108
  %27 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %26, align 4, !dbg !10108
  %28 = icmp eq %struct.zbus_observer.19* %27, %1, !dbg !10112
  br i1 %28, label %33, label %29, !dbg !10113

29:                                               ; preds = %24
  call void @llvm.dbg.value(metadata %struct._snode* %22, metadata !10078, metadata !DIExpression()), !dbg !10081
  %30 = tail call fastcc %struct._snode* @sys_slist_peek_next.127(%struct._snode* noundef nonnull %22) #25, !dbg !10106
  call void @llvm.dbg.value(metadata %struct._snode* %30, metadata !10079, metadata !DIExpression()), !dbg !10081
  br label %40, !dbg !10113

31:                                               ; preds = %44
  %32 = bitcast %struct._snode* %41 to %struct.zbus_observer_node*
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node* %32, metadata !10080, metadata !DIExpression()), !dbg !10081
  br label %33, !dbg !10113

33:                                               ; preds = %31, %24
  %34 = phi %struct.zbus_observer_node* [ %32, %31 ], [ null, %24 ]
  %35 = phi %struct._snode* [ %42, %31 ], [ %22, %24 ]
  %36 = bitcast %struct.zbus_observer_node** %4 to %struct._snode**, !dbg !10114
  store %struct._snode* %35, %struct._snode** %36, align 4, !dbg !10114
  %37 = getelementptr inbounds %struct.zbus_observer_node, %struct.zbus_observer_node* %34, i32 0, i32 0, !dbg !10115
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %21, %struct._snode* noundef %37, %struct._snode* noundef nonnull %35) #25, !dbg !10117
  %38 = bitcast %struct.zbus_observer_node** %4 to i8**, !dbg !10118
  call void @llvm.dbg.value(metadata %struct.zbus_observer_node** %4, metadata !10078, metadata !DIExpression(DW_OP_deref)), !dbg !10081
  call void @k_mem_slab_free(%struct.k_mem_slab* noundef nonnull @_zbus_runtime_obs_pool, i8** noundef nonnull %38) #24, !dbg !10119
  %39 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10120
  call fastcc void @k_mutex_unlock.128(%struct.k_mutex* noundef %39) #25, !dbg !10121
  br label %52, !dbg !10122

40:                                               ; preds = %29, %44
  %41 = phi %struct._snode* [ %22, %29 ], [ %42, %44 ]
  %42 = phi %struct._snode* [ %30, %29 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10079, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10078, metadata !DIExpression()), !dbg !10081
  %43 = icmp eq %struct._snode* %42, null, !dbg !10114
  br i1 %43, label %50, label %44, !dbg !10114

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10080, metadata !DIExpression()), !dbg !10081
  %45 = tail call fastcc %struct._snode* @sys_slist_peek_next.127(%struct._snode* noundef nonnull %42) #25, !dbg !10114
  call void @llvm.dbg.value(metadata %struct._snode* %41, metadata !10080, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %45, metadata !10079, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._snode* %42, metadata !10078, metadata !DIExpression()), !dbg !10081
  %46 = getelementptr inbounds %struct._snode, %struct._snode* %42, i32 1, !dbg !10108
  %47 = bitcast %struct._snode* %46 to %struct.zbus_observer.19**, !dbg !10108
  %48 = load %struct.zbus_observer.19*, %struct.zbus_observer.19** %47, align 4, !dbg !10108
  %49 = icmp eq %struct.zbus_observer.19* %48, %1, !dbg !10112
  br i1 %49, label %31, label %40, !dbg !10113

50:                                               ; preds = %40, %19
  %51 = load %struct.k_mutex*, %struct.k_mutex** %15, align 4, !dbg !10123
  tail call fastcc void @k_mutex_unlock.128(%struct.k_mutex* noundef %51) #25, !dbg !10124
  br label %52, !dbg !10125

52:                                               ; preds = %14, %50, %33
  %53 = phi i32 [ 0, %33 ], [ -61, %50 ], [ %17, %14 ], !dbg !10081
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10126
  ret i32 %53, !dbg !10126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10127 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10131, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10132, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10133, metadata !DIExpression()), !dbg !10134
  %4 = icmp eq %struct._snode* %1, null, !dbg !10135
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek.131(%struct._snode* noundef %2) #25, !dbg !10137
  br i1 %4, label %6, label %11, !dbg !10138

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !10139
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10141
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10141
  br i1 %8, label %9, label %15, !dbg !10139

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head.126(%struct._slist* noundef %0) #25, !dbg !10143
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !10143
  br label %15, !dbg !10143

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !10145
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !10147
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10147
  br i1 %13, label %14, label %15, !dbg !10145

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !10149
  br label %15, !dbg !10149

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !10138
  ret void, !dbg !10138
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10153, metadata !DIExpression()), !dbg !10154
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !10155
  br i1 %2, label %3, label %4, !dbg !10157

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !10158
  br label %4, !dbg !10159

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10154
  ret i32 %5, !dbg !10160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10161 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !10166, metadata !DIExpression()), !dbg !10167
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10168, !srcloc !10170
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !10171
  ret i1 %1, !dbg !10172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10173 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !10174
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !10175
  ret void, !dbg !10176
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10179, metadata !DIExpression()), !dbg !10180
  %2 = icmp eq i32 %0, 10, !dbg !10181
  br i1 %2, label %3, label %4, !dbg !10183

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !10184
  br label %4, !dbg !10186

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10187
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !10188
  ret i32 %0, !dbg !10189
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !10193, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.value(metadata i8 %0, metadata !10194, metadata !DIExpression()), !dbg !10195
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10196, !srcloc !10198
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !10199
  ret void, !dbg !10200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10201 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !10203, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i8 %0, metadata !10204, metadata !DIExpression()), !dbg !10206
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10207
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10205, metadata !DIExpression()), !dbg !10206
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10208
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10208
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #24, !dbg !10209
  ret void, !dbg !10210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10211 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !10213, metadata !DIExpression()), !dbg !10214
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #24, !dbg !10215
  ret i1 %1, !dbg !10216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !10217 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10266, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10267, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10268, metadata !DIExpression()), !dbg !10269
  ret void, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10271 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10286
  call void @llvm.dbg.value(metadata i8 %1, metadata !10274, metadata !DIExpression()), !dbg !10286
  call void @llvm.dbg.value(metadata i32 %2, metadata !10275, metadata !DIExpression()), !dbg !10286
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10287
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !10287
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !10287
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !10276, metadata !DIExpression()), !dbg !10286
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !10288
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10288
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !10278, metadata !DIExpression()), !dbg !10286
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !10289
  %13 = icmp eq i32 %12, 196608, !dbg !10289
  br i1 %13, label %71, label %14, !dbg !10289

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !10291
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !10291
  %17 = load i8, i8* %16, align 4, !dbg !10291
  %18 = icmp ugt i8 %17, %1, !dbg !10291
  br i1 %18, label %20, label %19, !dbg !10294

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.152, i32 0, i32 0), i32 noundef 50) #24, !dbg !10295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.152, i32 0, i32 0), i32 noundef 50) #24, !dbg !10295
  unreachable, !dbg !10295

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !10297
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #23, !dbg !10297
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !10279, metadata !DIExpression()), !dbg !10298
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !10299
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !10299
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !10300
  %25 = load i32, i32* %24, align 4, !dbg !10300
  %26 = inttoptr i32 %25 to i32*, !dbg !10301
  call void @llvm.dbg.value(metadata i32* %26, metadata !10284, metadata !DIExpression()), !dbg !10286
  %27 = load volatile i32, i32* %26, align 4, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %27, metadata !10285, metadata !DIExpression()), !dbg !10286
  %28 = and i32 %2, 2, !dbg !10303
  %29 = icmp eq i32 %28, 0, !dbg !10305
  br i1 %29, label %30, label %69, !dbg !10306

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !10307
  %32 = icmp eq i32 %31, 0, !dbg !10307
  br i1 %32, label %41, label %33, !dbg !10307

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !10309
  %35 = icmp eq i32 %34, 0, !dbg !10310
  call void @llvm.dbg.value(metadata i32 %27, metadata !10285, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !10286
  br i1 %35, label %38, label %36, !dbg !10311

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %37, metadata !10285, metadata !DIExpression()), !dbg !10286
  br label %43, !dbg !10316

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !10285, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !10286
  %39 = and i32 %27, -49, !dbg !10317
  %40 = or i32 %39, 16, !dbg !10317
  call void @llvm.dbg.value(metadata i32 %40, metadata !10285, metadata !DIExpression()), !dbg !10286
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %42, metadata !10285, metadata !DIExpression()), !dbg !10286
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !10321
  call void @llvm.dbg.value(metadata i32 %44, metadata !10285, metadata !DIExpression()), !dbg !10286
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !10322
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !10323
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #24, !dbg !10324
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !10325
  store i32 %44, i32* %48, align 4, !dbg !10326
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #24, !dbg !10327
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #24, !dbg !10328
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #24, !dbg !10329
  br i1 %11, label %63, label %50, !dbg !10330

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !10331
  %52 = icmp eq i32 %51, 0, !dbg !10335
  br i1 %52, label %53, label %56, !dbg !10336

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !10337
  %55 = icmp eq i32 %54, 0, !dbg !10339
  br i1 %55, label %58, label %56, !dbg !10340

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #24, !dbg !10341
  br label %58, !dbg !10342

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !10342
  %60 = load volatile i32, i32* %59, align 4, !dbg !10342
  %61 = shl nuw i32 1, %15, !dbg !10342
  %62 = or i32 %60, %61, !dbg !10342
  store volatile i32 %62, i32* %59, align 4, !dbg !10342
  br label %69, !dbg !10343

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !10344
  %65 = load volatile i32, i32* %64, align 4, !dbg !10344
  %66 = shl nuw i32 1, %15, !dbg !10344
  %67 = xor i32 %66, -1, !dbg !10344
  %68 = and i32 %65, %67, !dbg !10344
  store volatile i32 %68, i32* %64, align 4, !dbg !10344
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !10286
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #23, !dbg !10346
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !10286
  ret i32 %72, !dbg !10346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !10347 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10351, metadata !DIExpression()), !dbg !10355
  call void @llvm.dbg.value(metadata i32* %1, metadata !10352, metadata !DIExpression()), !dbg !10355
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10356
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10356
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10356
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10353, metadata !DIExpression()), !dbg !10355
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10357
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10357
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10354, metadata !DIExpression()), !dbg !10355
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !10358
  store i32 %8, i32* %1, align 4, !dbg !10359
  ret i32 0, !dbg !10360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !10361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10363, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata i32 %1, metadata !10364, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata i32 %2, metadata !10365, metadata !DIExpression()), !dbg !10368
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10369
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !10369
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !10369
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !10366, metadata !DIExpression()), !dbg !10368
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !10370
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !10370
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !10367, metadata !DIExpression()), !dbg !10368
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #25, !dbg !10371
  %10 = xor i32 %1, -1, !dbg !10372
  %11 = and i32 %9, %10, !dbg !10373
  %12 = and i32 %2, %1, !dbg !10374
  %13 = or i32 %11, %12, !dbg !10375
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #25, !dbg !10376
  ret i32 0, !dbg !10377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10380, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.value(metadata i32 %1, metadata !10381, metadata !DIExpression()), !dbg !10384
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10385
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10385
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10385
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10382, metadata !DIExpression()), !dbg !10384
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10386
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10386
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10383, metadata !DIExpression()), !dbg !10384
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !10387
  %9 = or i32 %8, %1, !dbg !10388
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !10389
  ret i32 0, !dbg !10390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10393, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.value(metadata i32 %1, metadata !10394, metadata !DIExpression()), !dbg !10397
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10398
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10398
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10398
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10395, metadata !DIExpression()), !dbg !10397
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10399
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10399
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10396, metadata !DIExpression()), !dbg !10397
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !10400
  %9 = xor i32 %1, -1, !dbg !10401
  %10 = and i32 %8, %9, !dbg !10402
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #25, !dbg !10403
  ret i32 0, !dbg !10404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10407, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 %1, metadata !10408, metadata !DIExpression()), !dbg !10411
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10412
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !10412
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !10412
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !10409, metadata !DIExpression()), !dbg !10411
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !10413
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !10413
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !10410, metadata !DIExpression()), !dbg !10411
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #25, !dbg !10414
  %9 = xor i32 %8, %1, !dbg !10415
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #25, !dbg !10416
  ret i32 0, !dbg !10417
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10420, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i8 %1, metadata !10421, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %2, metadata !10422, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %3, metadata !10423, metadata !DIExpression()), !dbg !10430
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10431
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !10431
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !10431
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !10424, metadata !DIExpression()), !dbg !10430
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !10432
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10432
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !10425, metadata !DIExpression()), !dbg !10430
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !10433
  %11 = load volatile i32, i32* %10, align 4, !dbg !10433
  %12 = zext i8 %1 to i32, !dbg !10435
  %13 = shl nuw i32 1, %12, !dbg !10435
  %14 = and i32 %11, %13, !dbg !10436
  %15 = icmp ne i32 %14, 0, !dbg !10437
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !10438
  br i1 %17, label %77, label %18, !dbg !10438

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !10439
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !10441
  br i1 %21, label %29, label %22, !dbg !10441

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !10442
  br i1 %24, label %29, label %25, !dbg !10442

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !10444
  %27 = and i1 %26, %23, !dbg !10446
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !10447
  call void @llvm.dbg.value(metadata i32 %30, metadata !10428, metadata !DIExpression()), !dbg !10430
  %31 = icmp ult i8 %1, 16, !dbg !10448
  br i1 %31, label %32, label %35, !dbg !10450

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !10451
  call void @llvm.dbg.value(metadata i8 %33, metadata !10429, metadata !DIExpression()), !dbg !10430
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !10453
  call void @llvm.dbg.value(metadata i32* %34, metadata !10426, metadata !DIExpression()), !dbg !10430
  br label %41, !dbg !10454

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !10455
  br i1 %36, label %37, label %77, !dbg !10457

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !10458
  %39 = add nsw i8 %38, -32, !dbg !10458
  call void @llvm.dbg.value(metadata i8 %39, metadata !10429, metadata !DIExpression()), !dbg !10430
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !10460
  call void @llvm.dbg.value(metadata i32* %40, metadata !10426, metadata !DIExpression()), !dbg !10430
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !10461
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !10461
  call void @llvm.dbg.value(metadata i8 %43, metadata !10429, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32* %42, metadata !10426, metadata !DIExpression()), !dbg !10430
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10462, !srcloc !10470
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %45, metadata !10467, metadata !DIExpression()) #23, !dbg !10471
  call void @llvm.dbg.value(metadata i32 undef, metadata !10468, metadata !DIExpression()) #23, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %45, metadata !10427, metadata !DIExpression()), !dbg !10430
  %46 = load volatile i32, i32* %42, align 4, !dbg !10472
  %47 = zext i8 %43 to i32, !dbg !10473
  %48 = shl nuw i32 3, %47, !dbg !10474
  %49 = xor i32 %48, -1, !dbg !10475
  %50 = and i32 %46, %49, !dbg !10476
  %51 = shl nuw i32 %30, %47, !dbg !10477
  %52 = or i32 %50, %51, !dbg !10478
  store volatile i32 %52, i32* %42, align 4, !dbg !10479
  %53 = icmp eq i32 %3, 100663296, !dbg !10480
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !10480
  %55 = load volatile i32, i32* %54, align 4, !dbg !10480
  %56 = or i32 %55, %13, !dbg !10480
  %57 = xor i32 %13, -1, !dbg !10480
  %58 = and i32 %55, %57, !dbg !10480
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !10480
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !10480
  store volatile i32 %59, i32* %60, align 4, !dbg !10480
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !10481
  %62 = load volatile i32, i32* %61, align 4, !dbg !10481
  br i1 %16, label %63, label %68, !dbg !10481

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !10481
  store volatile i32 %64, i32* %61, align 4, !dbg !10481
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10482
  %66 = load volatile i32, i32* %65, align 4, !dbg !10482
  %67 = or i32 %66, %13, !dbg !10482
  br label %74, !dbg !10482

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !10481
  %70 = and i32 %62, %69, !dbg !10481
  store volatile i32 %70, i32* %61, align 4, !dbg !10481
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10482
  %72 = load volatile i32, i32* %71, align 4, !dbg !10482
  %73 = and i32 %72, %69, !dbg !10482
  br label %74, !dbg !10482

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !10482
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !10482
  store volatile i32 %75, i32* %76, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %45, metadata !10483, metadata !DIExpression()) #23, !dbg !10486
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #23, !dbg !10488, !srcloc !10489
  br label %77, !dbg !10490

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !10430
  ret i32 %78, !dbg !10491
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10492 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10494, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10495, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.value(metadata i1 %2, metadata !10496, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10499
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10500
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !10500
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !10500
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !10497, metadata !DIExpression()), !dbg !10499
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !10501
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !10502
  ret i32 %8, !dbg !10503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10504 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10510, metadata !DIExpression()), !dbg !10513
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10511, metadata !DIExpression()), !dbg !10513
  call void @llvm.dbg.value(metadata i1 %2, metadata !10512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10513
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10514
  br i1 %4, label %5, label %6, !dbg !10517

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.138, i32 0, i32 0), i32 noundef 42) #24, !dbg !10518
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.139, i32 0, i32 0)) #24, !dbg !10518
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.138, i32 0, i32 0), i32 noundef 42) #24, !dbg !10518
  unreachable, !dbg !10518

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10520
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10520
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10520
  br i1 %9, label %10, label %11, !dbg !10523

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.138, i32 0, i32 0), i32 noundef 43) #24, !dbg !10524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.141, i32 0, i32 0)) #24, !dbg !10524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.138, i32 0, i32 0), i32 noundef 43) #24, !dbg !10524
  unreachable, !dbg !10524

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !10526
  br i1 %12, label %18, label %13, !dbg !10528

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10529
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !10532
  %16 = or i1 %15, %2, !dbg !10533
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10533
  br i1 %2, label %19, label %21, !dbg !10533

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10534

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10535
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !10538
  br label %21, !dbg !10539

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10513
  ret i32 %22, !dbg !10540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10545, metadata !DIExpression()), !dbg !10546
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.142(%struct._slist* noundef %0) #25, !dbg !10547
  %3 = icmp eq %struct._snode* %2, null, !dbg !10547
  ret i1 %3, !dbg !10547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !10548 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10552, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10553, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10554, metadata !DIExpression()), !dbg !10556
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.142(%struct._slist* noundef %0) #25, !dbg !10557
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10555, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10554, metadata !DIExpression()), !dbg !10556
  %4 = icmp eq %struct._snode* %3, null, !dbg !10559
  br i1 %4, label %15, label %5, !dbg !10557

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10555, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10554, metadata !DIExpression()), !dbg !10556
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10561
  br i1 %6, label %9, label %11, !dbg !10564

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10555, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10554, metadata !DIExpression()), !dbg !10556
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10561
  br i1 %8, label %9, label %11, !dbg !10564, !llvm.loop !10565

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove.147(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !10566
  br label %15, !dbg !10566

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10555, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10554, metadata !DIExpression()), !dbg !10556
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next.148(%struct._snode* noundef nonnull %12) #25, !dbg !10559
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10555, metadata !DIExpression()), !dbg !10556
  %14 = icmp eq %struct._snode* %13, null, !dbg !10559
  br i1 %14, label %15, label %7, !dbg !10557, !llvm.loop !10565

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !10569 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10573, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10574, metadata !DIExpression()), !dbg !10575
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head.142(%struct._slist* noundef %0) #25, !dbg !10576
  tail call fastcc void @z_snode_next_set.143(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !10576
  tail call fastcc void @z_slist_head_set.144(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !10576
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail.145(%struct._slist* noundef %0) #25, !dbg !10577
  %5 = icmp eq %struct._snode* %4, null, !dbg !10577
  br i1 %5, label %6, label %8, !dbg !10576

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head.142(%struct._slist* noundef %0) #25, !dbg !10579
  tail call fastcc void @z_slist_tail_set.146(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !10579
  br label %8, !dbg !10579

8:                                                ; preds = %6, %2
  ret void, !dbg !10576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.142(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10581 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10585, metadata !DIExpression()), !dbg !10586
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10587
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10587
  ret %struct._snode* %3, !dbg !10588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set.143(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10589 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10593, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10594, metadata !DIExpression()), !dbg !10595
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10596
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10597
  ret void, !dbg !10598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set.144(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10599 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10601, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10602, metadata !DIExpression()), !dbg !10603
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10604
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10605
  ret void, !dbg !10606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail.145(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10607 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10609, metadata !DIExpression()), !dbg !10610
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10611
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10611
  ret %struct._snode* %3, !dbg !10612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set.146(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10613 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10615, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10616, metadata !DIExpression()), !dbg !10617
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10618
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10619
  ret void, !dbg !10620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove.147(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !10621 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10625, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10626, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10627, metadata !DIExpression()), !dbg !10628
  %4 = icmp eq %struct._snode* %1, null, !dbg !10629
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek.150(%struct._snode* noundef %2) #25, !dbg !10631
  br i1 %4, label %6, label %11, !dbg !10632

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set.144(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !10633
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail.145(%struct._slist* noundef %0) #25, !dbg !10635
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10635
  br i1 %8, label %9, label %15, !dbg !10633

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head.142(%struct._slist* noundef %0) #25, !dbg !10637
  tail call fastcc void @z_slist_tail_set.146(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !10637
  br label %15, !dbg !10637

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set.143(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !10639
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail.145(%struct._slist* noundef %0) #25, !dbg !10641
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10641
  br i1 %13, label %14, label %15, !dbg !10639

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set.146(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !10643
  br label %15, !dbg !10643

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set.143(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !10632
  ret void, !dbg !10632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next.148(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !10645 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10649, metadata !DIExpression()), !dbg !10650
  %2 = icmp eq %struct._snode* %0, null, !dbg !10651
  br i1 %2, label %5, label %3, !dbg !10651

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check.149(%struct._snode* noundef nonnull %0) #25, !dbg !10651
  br label %5, !dbg !10651

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10651
  ret %struct._snode* %6, !dbg !10651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check.149(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10652 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10654, metadata !DIExpression()), !dbg !10655
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek.150(%struct._snode* noundef %0) #25, !dbg !10656
  ret %struct._snode* %2, !dbg !10656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek.150(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10659, metadata !DIExpression()), !dbg !10660
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10661
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10661
  ret %struct._snode* %3, !dbg !10662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #17 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10667, metadata !DIExpression()), !dbg !10668
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10669
  %3 = load volatile i32, i32* %2, align 4, !dbg !10669
  ret i32 %3, !dbg !10670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10671 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10675, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata i32 %1, metadata !10676, metadata !DIExpression()), !dbg !10677
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10678
  store volatile i32 %1, i32* %3, align 4, !dbg !10679
  ret void, !dbg !10680
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !10681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10685, metadata !DIExpression()), !dbg !10689
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10690
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !10690
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !10690
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !10686, metadata !DIExpression()), !dbg !10689
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10691
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !10691
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !10687, metadata !DIExpression()), !dbg !10689
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !10692
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !10692
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !10693
  %11 = load volatile i32, i32* %10, align 4, !dbg !10693
  call void @llvm.dbg.value(metadata i32 %11, metadata !10688, metadata !DIExpression()), !dbg !10689
  store volatile i32 %11, i32* %10, align 4, !dbg !10694
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !10695
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #25, !dbg !10696
  ret void, !dbg !10697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10698 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10702, metadata !DIExpression()), !dbg !10707
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10703, metadata !DIExpression()), !dbg !10707
  call void @llvm.dbg.value(metadata i32 %2, metadata !10704, metadata !DIExpression()), !dbg !10707
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head.142(%struct._slist* noundef %0) #25, !dbg !10708
  %5 = icmp eq %struct._snode* %4, null, !dbg !10708
  br i1 %5, label %24, label %6, !dbg !10708

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next.148(%struct._snode* noundef nonnull %7) #25, !dbg !10710
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10706, metadata !DIExpression()), !dbg !10707
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10705, metadata !DIExpression()), !dbg !10707
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10711
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10711
  %12 = load i32, i32* %11, align 4, !dbg !10711
  %13 = and i32 %12, %2, !dbg !10715
  %14 = icmp eq i32 %13, 0, !dbg !10715
  br i1 %14, label %22, label %15, !dbg !10716

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10717
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10717
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10717
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10717
  br i1 %19, label %20, label %21, !dbg !10721

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.138, i32 0, i32 0), i32 noundef 77) #24, !dbg !10722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.141, i32 0, i32 0)) #24, !dbg !10722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.138, i32 0, i32 0), i32 noundef 77) #24, !dbg !10722
  unreachable, !dbg !10722

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !10724
  br label %22, !dbg !10725

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10705, metadata !DIExpression()), !dbg !10707
  %23 = icmp eq %struct._snode* %8, null, !dbg !10726
  br i1 %23, label %24, label %6, !dbg !10726

24:                                               ; preds = %22, %3
  ret void, !dbg !10727
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1847, metadata !DIExpression()), !dbg !10728
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #24, !dbg !10729
  tail call void @arch_irq_enable(i32 noundef 64) #24, !dbg !10731
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #24, !dbg !10732
  tail call void @arch_irq_enable(i32 noundef 65) #24, !dbg !10731
  ret i32 0, !dbg !10731
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !10734 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10736, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i8* %1, metadata !10737, metadata !DIExpression()), !dbg !10740
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10741
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10741
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10741
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10741
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10741
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10738, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i32 -1, metadata !10739, metadata !DIExpression()), !dbg !10740
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #25, !dbg !10742
  br i1 %8, label %9, label %13, !dbg !10744

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #25, !dbg !10745
  store i8 %10, i8* %1, align 1, !dbg !10747
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !10748
  br i1 %11, label %12, label %13, !dbg !10750

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #24, !dbg !10751
  br label %13, !dbg !10753

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !10740
  call void @llvm.dbg.value(metadata i32 %14, metadata !10739, metadata !DIExpression()), !dbg !10740
  ret i32 %14, !dbg !10754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #16 !dbg !10755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10757, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.value(metadata i8 %1, metadata !10758, metadata !DIExpression()), !dbg !10760
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10761
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10761
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10761
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10761
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10761
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10759, metadata !DIExpression()), !dbg !10760
  br label %8, !dbg !10762

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #25, !dbg !10763
  br i1 %9, label %10, label %8, !dbg !10762, !llvm.loop !10764

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #25, !dbg !10766
  ret void, !dbg !10767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #16 !dbg !10768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10770, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.value(metadata i8* %1, metadata !10771, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.value(metadata i32 %2, metadata !10772, metadata !DIExpression()), !dbg !10775
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10776
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10776
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10776
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10776
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10776
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10773, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.value(metadata i32 0, metadata !10774, metadata !DIExpression()), !dbg !10775
  %9 = icmp eq i32 %2, 0, !dbg !10777
  br i1 %9, label %18, label %10, !dbg !10778

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10774, metadata !DIExpression()), !dbg !10775
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #25, !dbg !10779
  br i1 %12, label %13, label %18, !dbg !10780

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10781
  %15 = load i8, i8* %14, align 1, !dbg !10781
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #25, !dbg !10783
  %16 = add nuw i32 %11, 1, !dbg !10784
  call void @llvm.dbg.value(metadata i32 %16, metadata !10774, metadata !DIExpression()), !dbg !10775
  %17 = icmp eq i32 %16, %2, !dbg !10777
  br i1 %17, label %18, label %10, !dbg !10778, !llvm.loop !10785

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10775
  ret i32 %19, !dbg !10787
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !10788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10790, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.value(metadata i8* %1, metadata !10791, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.value(metadata i32 %2, metadata !10792, metadata !DIExpression()), !dbg !10795
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10796
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !10796
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !10796
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !10796
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !10796
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !10793, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.value(metadata i32 0, metadata !10794, metadata !DIExpression()), !dbg !10795
  %9 = icmp eq i32 %2, 0, !dbg !10797
  br i1 %9, label %18, label %10, !dbg !10798

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10794, metadata !DIExpression()), !dbg !10795
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #25, !dbg !10799
  br i1 %12, label %13, label %18, !dbg !10800

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #25, !dbg !10801
  %15 = add nuw i32 %11, 1, !dbg !10803
  call void @llvm.dbg.value(metadata i32 %15, metadata !10794, metadata !DIExpression()), !dbg !10795
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !10804
  store i8 %14, i8* %16, align 1, !dbg !10805
  %17 = icmp eq i32 %15, %2, !dbg !10797
  br i1 %17, label %18, label %10, !dbg !10798, !llvm.loop !10806

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !10795
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !10808
  br i1 %20, label %21, label %22, !dbg !10810

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #24, !dbg !10811
  br label %22, !dbg !10813

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !10814
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10815 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10817, metadata !DIExpression()), !dbg !10819
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10820
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10820
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10820
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10820
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10820
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10818, metadata !DIExpression()), !dbg !10819
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #24, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10823 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10825, metadata !DIExpression()), !dbg !10827
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10828
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10828
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10828
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10828
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10828
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10826, metadata !DIExpression()), !dbg !10827
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #24, !dbg !10829
  ret void, !dbg !10830
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10833, metadata !DIExpression()), !dbg !10835
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10836
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10836
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10836
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10836
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10836
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10834, metadata !DIExpression()), !dbg !10835
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10837
  %8 = zext i1 %7 to i32, !dbg !10837
  ret i32 %8, !dbg !10838
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10839 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10841, metadata !DIExpression()), !dbg !10843
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10844
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10844
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10844
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10844
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10844
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10842, metadata !DIExpression()), !dbg !10843
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #24, !dbg !10845
  ret void, !dbg !10846
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10849, metadata !DIExpression()), !dbg !10851
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10852
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10852
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10852
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10852
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10852
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10850, metadata !DIExpression()), !dbg !10851
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #24, !dbg !10853
  ret void, !dbg !10854
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10855 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10857, metadata !DIExpression()), !dbg !10859
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10860
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10860
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10860
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10860
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10860
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10858, metadata !DIExpression()), !dbg !10859
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10861
  %8 = zext i1 %7 to i32, !dbg !10861
  ret i32 %8, !dbg !10862
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10863 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10865, metadata !DIExpression()), !dbg !10867
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10868
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10868
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10868
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10868
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10868
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10866, metadata !DIExpression()), !dbg !10867
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #24, !dbg !10869
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #24, !dbg !10870
  ret void, !dbg !10871
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !10872 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10874, metadata !DIExpression()), !dbg !10876
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10877
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10877
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10877
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10877
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10877
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10875, metadata !DIExpression()), !dbg !10876
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #24, !dbg !10878
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #24, !dbg !10879
  ret void, !dbg !10880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10883, metadata !DIExpression()), !dbg !10885
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10886
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !10886
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !10886
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !10886
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !10886
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !10884, metadata !DIExpression()), !dbg !10885
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #25, !dbg !10887
  br i1 %7, label %11, label %8, !dbg !10888

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #25, !dbg !10889
  %10 = zext i1 %9 to i32, !dbg !10888
  br label %11, !dbg !10888

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !10890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #6 !dbg !10891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10893, metadata !DIExpression()), !dbg !10894
  ret i32 1, !dbg !10895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #11 !dbg !10896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10898, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10899, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.value(metadata i8* %2, metadata !10900, metadata !DIExpression()), !dbg !10903
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10904
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !10904
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !10904
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !10901, metadata !DIExpression()), !dbg !10903
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !10905
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10906
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !10907
  store i8* %2, i8** %8, align 4, !dbg !10908
  ret void, !dbg !10909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !10910 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10914, metadata !DIExpression()), !dbg !10917
  call void @llvm.dbg.value(metadata i32 %1, metadata !10915, metadata !DIExpression()), !dbg !10917
  call void @llvm.dbg.value(metadata i32* null, metadata !10916, metadata !DIExpression()), !dbg !10917
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10918
  %4 = lshr i32 %1, 16, !dbg !10919
  %5 = add i32 %4, %3, !dbg !10920
  %6 = inttoptr i32 %5 to i32*, !dbg !10921
  call void @llvm.dbg.value(metadata i32* %6, metadata !10916, metadata !DIExpression()), !dbg !10917
  %7 = load volatile i32, i32* %6, align 4, !dbg !10922
  %8 = and i32 %1, 65535, !dbg !10923
  %9 = shl nuw i32 1, %8, !dbg !10924
  %10 = and i32 %7, %9, !dbg !10924
  %11 = icmp ne i32 %10, 0, !dbg !10924
  ret i1 %11, !dbg !10925
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #17 !dbg !10926 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10930, metadata !DIExpression()), !dbg !10931
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10932
  %3 = load volatile i32, i32* %2, align 4, !dbg !10932
  %4 = trunc i32 %3 to i8, !dbg !10933
  ret i8 %4, !dbg !10934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !10935 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10939, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.value(metadata i8 %1, metadata !10940, metadata !DIExpression()), !dbg !10941
  %3 = zext i8 %1 to i32, !dbg !10942
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10943
  store volatile i32 %3, i32* %4, align 4, !dbg !10944
  ret void, !dbg !10945
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !2138 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !2140, metadata !DIExpression()), !dbg !10946
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #24, !dbg !10947
  tail call void @arch_irq_enable(i32 noundef 26) #24, !dbg !10949
  ret void, !dbg !10949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !10950 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10952, metadata !DIExpression()), !dbg !10954
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10955
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !10955
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !10955
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !10953, metadata !DIExpression()), !dbg !10954
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !10956
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10956
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10958
  br i1 %7, label %11, label %8, !dbg !10959

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !10960
  %10 = load i8*, i8** %9, align 4, !dbg !10960
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #24, !dbg !10962
  br label %11, !dbg !10963

11:                                               ; preds = %8, %1
  ret void, !dbg !10964
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !10965 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10967, metadata !DIExpression()), !dbg !10982
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10983
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !10983
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !10983
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !10983
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !10983
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !10968, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !10969, metadata !DIExpression()), !dbg !10982
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10984, !srcloc !10990
  call void @llvm.dbg.value(metadata i32 undef, metadata !10987, metadata !DIExpression()) #23, !dbg !10991
  call void @llvm.dbg.value(metadata i32 undef, metadata !10988, metadata !DIExpression()) #23, !dbg !10991
  call void @llvm.dbg.value(metadata i32 undef, metadata !10970, metadata !DIExpression()), !dbg !10982
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !10992
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #23, !dbg !10992
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !10972, metadata !DIExpression()), !dbg !10993
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !10994
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !10995
  %12 = load i32, i32* %11, align 4, !dbg !10995
  store i32 %12, i32* %10, align 4, !dbg !10994
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !10994
  store i32 32, i32* %13, align 4, !dbg !10994
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !10994
  store i32 0, i32* %14, align 4, !dbg !10994
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !10994
  store i32 0, i32* %15, align 4, !dbg !10994
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !10994
  store i32 6, i32* %16, align 4, !dbg !10994
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !10996
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !10996
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #25, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %19, metadata !10971, metadata !DIExpression()), !dbg !10982
  %20 = icmp eq i32 %19, 0, !dbg !10998
  br i1 %20, label %21, label %30, !dbg !11000

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !10994
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !10984
  call void @llvm.dbg.value(metadata i32 %23, metadata !10987, metadata !DIExpression()) #23, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %23, metadata !10970, metadata !DIExpression()), !dbg !10982
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #24, !dbg !11001
  store i32 %24, i32* %22, align 4, !dbg !11002
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #24, !dbg !11003
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !11004
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #25, !dbg !11005
  call void @llvm.dbg.value(metadata i32 undef, metadata !11006, metadata !DIExpression()) #23, !dbg !11009
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !11011, !srcloc !11012
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !11013
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !11013
  call void %26(%struct.device* noundef nonnull %0) #24, !dbg !11014
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !11015
  %28 = load i8, i8* %27, align 4, !dbg !11015
  %29 = zext i8 %28 to i32, !dbg !11016
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #24, !dbg !11017
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #25, !dbg !11018
  br label %30, !dbg !11019

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #23, !dbg !11020
  ret i32 %19, !dbg !11020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11021 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11025, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i8 0, metadata !11026, metadata !DIExpression()), !dbg !11029
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11030
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11030
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11028, metadata !DIExpression(DW_OP_deref)), !dbg !11029
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !11031
  call void @llvm.dbg.value(metadata i32 %4, metadata !11027, metadata !DIExpression()), !dbg !11029
  %5 = icmp slt i32 %4, 0, !dbg !11032
  br i1 %5, label %9, label %6, !dbg !11034

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11035
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11028, metadata !DIExpression()), !dbg !11029
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !11036
  br label %9, !dbg !11037

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11029
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11038
  ret i32 %10, !dbg !11038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !11039 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11041, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i8 2, metadata !11042, metadata !DIExpression()), !dbg !11043
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11044
  %3 = load volatile i32, i32* %2, align 4, !dbg !11044
  %4 = and i32 %3, -64513, !dbg !11045
  %5 = or i32 %4, 2048, !dbg !11046
  store volatile i32 %5, i32* %2, align 4, !dbg !11047
  ret void, !dbg !11048
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11051, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i8 1, metadata !11052, metadata !DIExpression()), !dbg !11053
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11054
  %3 = load volatile i32, i32* %2, align 4, !dbg !11054
  %4 = and i32 %3, -64, !dbg !11055
  %5 = or i32 %4, 1, !dbg !11056
  store volatile i32 %5, i32* %2, align 4, !dbg !11057
  ret void, !dbg !11058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #16 !dbg !11059 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11063, metadata !DIExpression()), !dbg !11064
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11065
  %3 = load volatile i32, i32* %2, align 4, !dbg !11066
  %4 = or i32 %3, 1, !dbg !11066
  store volatile i32 %4, i32* %2, align 4, !dbg !11066
  ret void, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11072, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11073, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 0, metadata !11074, metadata !DIExpression()), !dbg !11075
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11076
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !11076
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11077
  %5 = load i8, i8* %4, align 4, !dbg !11077
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !11078
  ret i32 %6, !dbg !11079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11082, metadata !DIExpression()), !dbg !11083
  tail call fastcc void @__NVIC_SetPriority.160() #25, !dbg !11084
  store i32 19999, i32* @last_load, align 4, !dbg !11085
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11086
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11087
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11088
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11089
  %3 = or i32 %2, 7, !dbg !11089
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11089
  ret i32 0, !dbg !11090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.160() unnamed_addr #16 !dbg !11091 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11093, metadata !DIExpression()), !dbg !11095
  call void @llvm.dbg.value(metadata i32 1, metadata !11094, metadata !DIExpression()), !dbg !11095
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11096
  ret void, !dbg !11099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11102, metadata !DIExpression()), !dbg !11104
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !11105
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11106
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11107
  %5 = add i32 %4, %3, !dbg !11107
  store i32 %5, i32* @cycle_count, align 4, !dbg !11107
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11108
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11109
  %7 = sub i32 %5, %6, !dbg !11112
  %8 = udiv i32 %7, 20000, !dbg !11113
  call void @llvm.dbg.value(metadata i32 %8, metadata !11103, metadata !DIExpression()), !dbg !11104
  %9 = mul nuw i32 %8, 20000, !dbg !11114
  %10 = add i32 %9, %6, !dbg !11115
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11115
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !11116
  tail call void @z_arm_int_exit() #24, !dbg !11117
  ret void, !dbg !11118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11119 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11124
  call void @llvm.dbg.value(metadata i32 %1, metadata !11121, metadata !DIExpression()), !dbg !11125
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11126
  call void @llvm.dbg.value(metadata i32 %2, metadata !11122, metadata !DIExpression()), !dbg !11125
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11127
  call void @llvm.dbg.value(metadata i32 %3, metadata !11123, metadata !DIExpression()), !dbg !11125
  %4 = and i32 %2, 65536, !dbg !11128
  %5 = icmp ne i32 %4, 0, !dbg !11128
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11130
  %8 = load i32, i32* @last_load, align 4, !dbg !11125
  br i1 %7, label %9, label %13, !dbg !11130

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11131
  %11 = add i32 %10, %8, !dbg !11131
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11131
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11133
  br label %13, !dbg !11134

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11135
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11136
  %16 = add i32 %14, %15, !dbg !11137
  ret i32 %16, !dbg !11138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11143, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i1 %1, metadata !11144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11156
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11157
  br i1 %4, label %5, label %8, !dbg !11157

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11159
  %7 = and i32 %6, -2, !dbg !11159
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11159
  store i32 -16777216, i32* @last_load, align 4, !dbg !11161
  br label %60, !dbg !11162

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %9, metadata !11148, metadata !DIExpression()), !dbg !11156
  br i1 %3, label %18, label %10, !dbg !11164

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11164
  call void @llvm.dbg.value(metadata i32 undef, metadata !11143, metadata !DIExpression()), !dbg !11156
  %12 = icmp slt i32 %11, 1, !dbg !11165
  br i1 %12, label %18, label %13, !dbg !11165

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !11165
  %15 = select i1 %14, i32 %11, i32 837, !dbg !11165
  %16 = mul nuw nsw i32 %15, 20000, !dbg !11165
  %17 = add nuw nsw i32 %16, 19999, !dbg !11165
  br label %18, !dbg !11165

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11143, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11166, metadata !DIExpression()) #23, !dbg !11173
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11175, !srcloc !11181
  call void @llvm.dbg.value(metadata i32 undef, metadata !11178, metadata !DIExpression()) #23, !dbg !11182
  call void @llvm.dbg.value(metadata i32 undef, metadata !11179, metadata !DIExpression()) #23, !dbg !11182
  call void @llvm.dbg.value(metadata i32 undef, metadata !11172, metadata !DIExpression()) #23, !dbg !11173
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11183
  br i1 %21, label %23, label %22, !dbg !11186

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 148) #24, !dbg !11187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.164, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 148) #24, !dbg !11187
  unreachable, !dbg !11187

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11175
  call void @llvm.dbg.value(metadata i32 %24, metadata !11178, metadata !DIExpression()) #23, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %24, metadata !11172, metadata !DIExpression()) #23, !dbg !11173
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11189
  call void @llvm.dbg.value(metadata i32 %24, metadata !11149, metadata !DIExpression()), !dbg !11156
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !11190
  call void @llvm.dbg.value(metadata i32 %25, metadata !11154, metadata !DIExpression()), !dbg !11156
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11191
  call void @llvm.dbg.value(metadata i32 %26, metadata !11146, metadata !DIExpression()), !dbg !11156
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11192
  %28 = add i32 %27, %25, !dbg !11192
  store i32 %28, i32* @cycle_count, align 4, !dbg !11192
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11193
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11194
  %30 = sub i32 %28, %29, !dbg !11195
  call void @llvm.dbg.value(metadata i32 %30, metadata !11155, metadata !DIExpression()), !dbg !11156
  %31 = icmp slt i32 %30, 0, !dbg !11196
  br i1 %31, label %41, label %32, !dbg !11198

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11145, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 undef, metadata !11145, metadata !DIExpression()), !dbg !11156
  %33 = add nuw i32 %19, %30, !dbg !11199
  %34 = urem i32 %33, 20000, !dbg !11201
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11145, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11156
  %35 = sub nuw nsw i32 %19, %34, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %35, metadata !11145, metadata !DIExpression()), !dbg !11156
  %36 = icmp ugt i32 %35, 1250, !dbg !11203
  br i1 %36, label %37, label %39, !dbg !11203

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11145, metadata !DIExpression()), !dbg !11156
  %38 = icmp ugt i32 %35, 16740000, !dbg !11204
  br i1 %38, label %41, label %39, !dbg !11206

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11207
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11208
  call void @llvm.dbg.value(metadata i32 %43, metadata !11147, metadata !DIExpression()), !dbg !11156
  %44 = add nsw i32 %42, -1, !dbg !11209
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11210
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11211
  %45 = icmp ult i32 %26, %43, !dbg !11212
  br i1 %45, label %46, label %51, !dbg !11214

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11215
  %48 = add i32 %26, %9, !dbg !11217
  %49 = sub i32 %48, %43, !dbg !11218
  %50 = add i32 %49, %47, !dbg !11215
  br label %55, !dbg !11219

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11220
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11222
  %54 = add i32 %52, %53, !dbg !11222
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11223
  store i32 %56, i32* @cycle_count, align 4, !dbg !11223
  call void @llvm.dbg.value(metadata i32 undef, metadata !11224, metadata !DIExpression()) #23, !dbg !11230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11229, metadata !DIExpression()) #23, !dbg !11230
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11232
  br i1 %57, label %59, label %58, !dbg !11235

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 194) #24, !dbg !11236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.166, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 194) #24, !dbg !11236
  unreachable, !dbg !11236

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11224, metadata !DIExpression()) #23, !dbg !11230
  call void @llvm.dbg.value(metadata i32 %24, metadata !11238, metadata !DIExpression()) #23, !dbg !11241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11243, !srcloc !11244
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11245
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11246 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11166, metadata !DIExpression()) #23, !dbg !11250
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11252, !srcloc !11181
  call void @llvm.dbg.value(metadata i32 undef, metadata !11178, metadata !DIExpression()) #23, !dbg !11254
  call void @llvm.dbg.value(metadata i32 undef, metadata !11179, metadata !DIExpression()) #23, !dbg !11254
  call void @llvm.dbg.value(metadata i32 undef, metadata !11172, metadata !DIExpression()) #23, !dbg !11250
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11255
  br i1 %2, label %4, label %3, !dbg !11256

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 148) #24, !dbg !11257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.164, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 148) #24, !dbg !11257
  unreachable, !dbg !11257

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11178, metadata !DIExpression()) #23, !dbg !11254
  call void @llvm.dbg.value(metadata i32 undef, metadata !11172, metadata !DIExpression()) #23, !dbg !11250
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11258
  call void @llvm.dbg.value(metadata i32 undef, metadata !11248, metadata !DIExpression()), !dbg !11259
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !11260
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11261
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11262
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11259
  call void @llvm.dbg.value(metadata i32 undef, metadata !11224, metadata !DIExpression()) #23, !dbg !11263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11229, metadata !DIExpression()) #23, !dbg !11263
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11265
  br i1 %8, label %10, label %9, !dbg !11266

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 194) #24, !dbg !11267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.166, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 194) #24, !dbg !11267
  unreachable, !dbg !11267

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11268
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11259
  %12 = sub i32 %11, %7, !dbg !11269
  call void @llvm.dbg.value(metadata i32 %12, metadata !11249, metadata !DIExpression()), !dbg !11259
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %13, metadata !11178, metadata !DIExpression()) #23, !dbg !11254
  call void @llvm.dbg.value(metadata i32 %13, metadata !11172, metadata !DIExpression()) #23, !dbg !11250
  call void @llvm.dbg.value(metadata i32 %13, metadata !11248, metadata !DIExpression()), !dbg !11259
  call void @llvm.dbg.value(metadata i32 undef, metadata !11224, metadata !DIExpression()) #23, !dbg !11263
  call void @llvm.dbg.value(metadata i32 undef, metadata !11238, metadata !DIExpression()) #23, !dbg !11270
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11272, !srcloc !11244
  %14 = udiv i32 %12, 20000, !dbg !11273
  ret i32 %14, !dbg !11274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11275 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11166, metadata !DIExpression()) #23, !dbg !11279
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11281, !srcloc !11181
  call void @llvm.dbg.value(metadata i32 undef, metadata !11178, metadata !DIExpression()) #23, !dbg !11283
  call void @llvm.dbg.value(metadata i32 undef, metadata !11179, metadata !DIExpression()) #23, !dbg !11283
  call void @llvm.dbg.value(metadata i32 undef, metadata !11172, metadata !DIExpression()) #23, !dbg !11279
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11284
  br i1 %2, label %4, label %3, !dbg !11285

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 148) #24, !dbg !11286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.164, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 148) #24, !dbg !11286
  unreachable, !dbg !11286

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11178, metadata !DIExpression()) #23, !dbg !11283
  call void @llvm.dbg.value(metadata i32 undef, metadata !11172, metadata !DIExpression()) #23, !dbg !11279
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11287
  call void @llvm.dbg.value(metadata i32 undef, metadata !11277, metadata !DIExpression()), !dbg !11288
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !11289
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11290
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11278, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11288
  call void @llvm.dbg.value(metadata i32 undef, metadata !11224, metadata !DIExpression()) #23, !dbg !11291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11229, metadata !DIExpression()) #23, !dbg !11291
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11293
  br i1 %7, label %9, label %8, !dbg !11294

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 194) #24, !dbg !11295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.166, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.163, i32 0, i32 0), i32 noundef 194) #24, !dbg !11295
  unreachable, !dbg !11295

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11296
  call void @llvm.dbg.value(metadata i32 %10, metadata !11278, metadata !DIExpression()), !dbg !11288
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11281
  call void @llvm.dbg.value(metadata i32 %11, metadata !11178, metadata !DIExpression()) #23, !dbg !11283
  call void @llvm.dbg.value(metadata i32 %11, metadata !11172, metadata !DIExpression()) #23, !dbg !11279
  call void @llvm.dbg.value(metadata i32 %11, metadata !11277, metadata !DIExpression()), !dbg !11288
  call void @llvm.dbg.value(metadata i32 undef, metadata !11224, metadata !DIExpression()) #23, !dbg !11291
  call void @llvm.dbg.value(metadata i32 undef, metadata !11238, metadata !DIExpression()) #23, !dbg !11297
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11299, !srcloc !11244
  ret i32 %10, !dbg !11300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !11301 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11302
  %2 = icmp eq i32 %1, -16777216, !dbg !11304
  br i1 %2, label %3, label %6, !dbg !11305

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11306
  %5 = or i32 %4, 1, !dbg !11306
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11306
  br label %6, !dbg !11308

6:                                                ; preds = %3, %0
  ret void, !dbg !11309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !11310 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11311
  %2 = and i32 %1, -2, !dbg !11311
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11311
  ret void, !dbg !11312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !11313 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11346, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.value(metadata i8 %1, metadata !11347, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11348, metadata !DIExpression()), !dbg !11349
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11350
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11350
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11349
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11351
  %8 = load i8, i8* %6, align 4, !dbg !11352
  %9 = zext i8 %8 to i32, !dbg !11353
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11353
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11354
  br i1 %11, label %18, label %24, !dbg !11355

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11349
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11351
  %14 = load i8, i8* %6, align 4, !dbg !11352
  %15 = zext i8 %14 to i32, !dbg !11353
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11353
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11354
  br i1 %17, label %18, label %24, !dbg !11355, !llvm.loop !11356

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11358
  %21 = load i8, i8* %20, align 1, !dbg !11358
  %22 = icmp eq i8 %21, %1, !dbg !11361
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11362
  br i1 %22, label %24, label %12, !dbg !11363

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11349
  ret i32 %25, !dbg !11364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #6 !dbg !11365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11367, metadata !DIExpression()), !dbg !11368
  ret i32 0, !dbg !11369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #16 !dbg !11370 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !11388, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.value(metadata i8 %1, metadata !11389, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.value(metadata i32 %2, metadata !11390, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.value(metadata i8 0, metadata !11391, metadata !DIExpression()), !dbg !11402
  %4 = icmp eq i8 %1, 0, !dbg !11403
  br i1 %4, label %7, label %5, !dbg !11404

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11403
  br label %8, !dbg !11404

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !11405

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11391, metadata !DIExpression()), !dbg !11402
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !11406
  %11 = load i32, i32* %10, align 4, !dbg !11406
  call void @llvm.dbg.value(metadata i32 %11, metadata !11393, metadata !DIExpression()), !dbg !11407
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !11408
  %13 = load i8, i8* %12, align 4, !dbg !11408
  call void @llvm.dbg.value(metadata i8 %13, metadata !11396, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11407
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !11409
  %15 = load i32, i32* %14, align 4, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %15, metadata !11397, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8 %13, metadata !11398, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11407
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !11410
  %17 = load i32, i32* %16, align 4, !dbg !11410
  call void @llvm.dbg.value(metadata i32 %17, metadata !11399, metadata !DIExpression()), !dbg !11407
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !11411
  %19 = load i32, i32* %18, align 4, !dbg !11411
  call void @llvm.dbg.value(metadata i32 %19, metadata !11400, metadata !DIExpression()), !dbg !11407
  %20 = and i8 %13, 15, !dbg !11412
  %21 = zext i8 %20 to i32, !dbg !11412
  %22 = lshr i32 %19, 27, !dbg !11413
  %23 = and i32 %22, 16, !dbg !11413
  %24 = or i32 %23, %21, !dbg !11414
  %25 = inttoptr i32 %11 to i32*, !dbg !11415
  store volatile i32 %24, i32* %25, align 4, !dbg !11416
  %26 = icmp eq i32 %15, 0, !dbg !11417
  br i1 %26, label %32, label %27, !dbg !11419

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !11420
  call void @llvm.dbg.value(metadata i8 %28, metadata !11398, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11407
  %29 = and i8 %28, 7, !dbg !11421
  %30 = zext i8 %29 to i32, !dbg !11421
  %31 = inttoptr i32 %15 to i32*, !dbg !11423
  store volatile i32 %30, i32* %31, align 4, !dbg !11424
  br label %32, !dbg !11425

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !11426
  br i1 %33, label %37, label %34, !dbg !11428

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !11429
  %36 = inttoptr i32 %17 to i32*, !dbg !11431
  store volatile i32 %35, i32* %36, align 4, !dbg !11432
  br label %37, !dbg !11433

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !11434
  call void @llvm.dbg.value(metadata i32 %38, metadata !11391, metadata !DIExpression()), !dbg !11402
  %39 = icmp eq i32 %38, %6, !dbg !11403
  br i1 %39, label %7, label %8, !dbg !11404, !llvm.loop !11435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11437 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11494, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %1, metadata !11495, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %2, metadata !11496, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %3, metadata !11497, metadata !DIExpression()), !dbg !11498
  %5 = icmp ult i32 %2, 8, !dbg !11499
  br i1 %5, label %7, label %6, !dbg !11502

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 45) #24, !dbg !11503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 45) #24, !dbg !11503
  unreachable, !dbg !11503

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !11505
  br i1 %8, label %10, label %9, !dbg !11508

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 46) #24, !dbg !11509
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 46) #24, !dbg !11509
  unreachable, !dbg !11509

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !11511
  %12 = load volatile i32, i32* %11, align 4, !dbg !11511
  %13 = and i32 %12, -458816, !dbg !11512
  %14 = shl nuw nsw i32 %2, 16, !dbg !11513
  %15 = and i32 %14, 458752, !dbg !11513
  %16 = or i32 %15, %3, !dbg !11514
  %17 = or i32 %16, %13, !dbg !11515
  store volatile i32 %17, i32* %11, align 4, !dbg !11516
  ret void, !dbg !11517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !11518 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11522, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.value(metadata i32 %1, metadata !11523, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.value(metadata i32* %2, metadata !11524, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.value(metadata i32* %3, metadata !11525, metadata !DIExpression()), !dbg !11526
  %5 = icmp ne i32* %2, null, !dbg !11527
  %6 = icmp ne i32* %3, null, !dbg !11527
  %7 = and i1 %5, %6, !dbg !11527
  br i1 %7, label %9, label %8, !dbg !11527

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 61) #24, !dbg !11530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 61) #24, !dbg !11530
  unreachable, !dbg !11530

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !11532
  %11 = load volatile i32, i32* %10, align 4, !dbg !11532
  %12 = lshr i32 %11, 16, !dbg !11533
  %13 = and i32 %12, 7, !dbg !11533
  store i32 %13, i32* %2, align 4, !dbg !11534
  %14 = load volatile i32, i32* %10, align 4, !dbg !11535
  %15 = and i32 %14, 63, !dbg !11536
  store i32 %15, i32* %3, align 4, !dbg !11537
  ret void, !dbg !11538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !11539 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !11543, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 %1, metadata !11544, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 %2, metadata !11545, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 %3, metadata !11546, metadata !DIExpression()), !dbg !11548
  call void @llvm.dbg.value(metadata i32 %4, metadata !11547, metadata !DIExpression()), !dbg !11548
  %6 = icmp ult i32 %3, 8, !dbg !11549
  br i1 %6, label %8, label %7, !dbg !11552

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 75) #24, !dbg !11553
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 75) #24, !dbg !11553
  unreachable, !dbg !11553

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !11555
  br i1 %9, label %11, label %10, !dbg !11558

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 76) #24, !dbg !11559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.174, i32 0, i32 0), i32 noundef 76) #24, !dbg !11559
  unreachable, !dbg !11559

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !11561
  %13 = load volatile i32, i32* %12, align 4, !dbg !11561
  %14 = and i32 %13, -117899328, !dbg !11562
  %15 = shl i32 %2, 24, !dbg !11563
  %16 = and i32 %15, 117440512, !dbg !11563
  %17 = shl nuw nsw i32 %3, 16, !dbg !11564
  %18 = and i32 %17, 458752, !dbg !11564
  %19 = or i32 %16, %4, !dbg !11565
  %20 = or i32 %19, %18, !dbg !11566
  %21 = or i32 %20, %14, !dbg !11567
  store volatile i32 %21, i32* %12, align 4, !dbg !11568
  ret void, !dbg !11569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11570 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11575, metadata !DIExpression()), !dbg !11576
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #25, !dbg !11577
  br i1 %2, label %7, label %3, !dbg !11579

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !11580
  %5 = and i32 %4, 127, !dbg !11581
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !11582
  br label %7, !dbg !11583

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !11576
  ret i32 %8, !dbg !11584
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11585 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11589, metadata !DIExpression()), !dbg !11591
  call void @llvm.dbg.value(metadata i32 %1, metadata !11590, metadata !DIExpression()), !dbg !11591
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !11592
  %4 = and i32 %1, 65535, !dbg !11592
  %5 = add i32 %4, %3, !dbg !11592
  %6 = inttoptr i32 %5 to i32*, !dbg !11592
  %7 = load volatile i32, i32* %6, align 4, !dbg !11592
  %8 = and i32 %7, 65536, !dbg !11593
  %9 = icmp ne i32 %8, 0, !dbg !11594
  ret i1 %9, !dbg !11595
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11596 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11598, metadata !DIExpression()), !dbg !11599
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !11600
  br i1 %2, label %8, label %3, !dbg !11602

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !11603
  %5 = and i32 %4, 1, !dbg !11605
  %6 = icmp eq i32 %5, 0, !dbg !11605
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !11606
  br label %8, !dbg !11606

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !11599
  ret i32 %9, !dbg !11607
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11608 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11610, metadata !DIExpression()), !dbg !11614
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #25, !dbg !11615
  br i1 %2, label %40, label %3, !dbg !11617

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11618
  %5 = trunc i32 %4 to i8, !dbg !11618
  %6 = and i8 %5, 127, !dbg !11618
  call void @llvm.dbg.value(metadata i8 %6, metadata !11611, metadata !DIExpression()), !dbg !11614
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !11619
  %8 = lshr i32 %7, 21, !dbg !11620
  %9 = and i32 %8, 3, !dbg !11621
  call void @llvm.dbg.value(metadata i32 %9, metadata !11612, metadata !DIExpression()), !dbg !11614
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !11622
  %11 = load i32, i32* %10, align 4, !dbg !11622
  call void @llvm.dbg.value(metadata i8 undef, metadata !11612, metadata !DIExpression()), !dbg !11614
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !11623
  %13 = load volatile i32, i32* %12, align 4, !dbg !11623
  %14 = and i32 %13, 32768, !dbg !11625
  %15 = icmp eq i32 %14, 0, !dbg !11625
  br i1 %15, label %36, label %16, !dbg !11626

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !11627
  %18 = and i32 %17, 32767, !dbg !11629
  %19 = uitofp i32 %18 to float, !dbg !11630
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !11631
  %21 = load volatile i32, i32* %20, align 4, !dbg !11631
  %22 = and i32 %21, 1073741823, !dbg !11632
  %23 = uitofp i32 %22 to float, !dbg !11633
  %24 = fdiv float %19, %23, !dbg !11634
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !11635
  %26 = load volatile i32, i32* %25, align 4, !dbg !11635
  %27 = and i32 %26, 1073741823, !dbg !11636
  %28 = uitofp i32 %27 to float, !dbg !11637
  %29 = fmul float %24, %28, !dbg !11638
  call void @llvm.dbg.value(metadata float %29, metadata !11613, metadata !DIExpression()), !dbg !11614
  %30 = lshr i32 24000000, %11, !dbg !11639
  %31 = uitofp i32 %30 to float, !dbg !11640
  %32 = uitofp i8 %6 to float, !dbg !11641
  %33 = fadd float %29, %32, !dbg !11642
  %34 = fmul float %33, %31, !dbg !11643
  %35 = fptoui float %34 to i32, !dbg !11644
  br label %40, !dbg !11645

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !11646
  %38 = zext i8 %6 to i32, !dbg !11648
  %39 = mul nuw i32 %37, %38, !dbg !11649
  br label %40, !dbg !11650

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !11614
  ret i32 %41, !dbg !11651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11652 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11654, metadata !DIExpression()), !dbg !11655
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #25, !dbg !11656
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !11655
  ret i32 %3, !dbg !11658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11659 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11661, metadata !DIExpression()), !dbg !11666
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #25, !dbg !11667
  br i1 %2, label %47, label %3, !dbg !11669

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11670
  %5 = trunc i32 %4 to i8, !dbg !11670
  %6 = and i8 %5, 127, !dbg !11670
  call void @llvm.dbg.value(metadata i8 %6, metadata !11662, metadata !DIExpression()), !dbg !11666
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11671
  %8 = lshr i32 %7, 22, !dbg !11672
  %9 = and i32 %8, 3, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %8, metadata !11663, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11666
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !11674
  %11 = lshr i32 %10, 19, !dbg !11675
  %12 = and i32 %11, 3, !dbg !11676
  call void @llvm.dbg.value(metadata i32 %11, metadata !11664, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11666
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11677
  %14 = load i32, i32* %13, align 4, !dbg !11677
  call void @llvm.dbg.value(metadata i8 undef, metadata !11663, metadata !DIExpression()), !dbg !11666
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !11678
  %16 = load i32, i32* %15, align 4, !dbg !11678
  call void @llvm.dbg.value(metadata i8 undef, metadata !11664, metadata !DIExpression()), !dbg !11666
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !11679
  %18 = load volatile i32, i32* %17, align 4, !dbg !11679
  %19 = and i32 %18, 32768, !dbg !11681
  %20 = icmp eq i32 %19, 0, !dbg !11681
  br i1 %20, label %42, label %21, !dbg !11682

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11683
  %23 = and i32 %22, 32767, !dbg !11685
  %24 = uitofp i32 %23 to float, !dbg !11686
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !11687
  %26 = load volatile i32, i32* %25, align 4, !dbg !11687
  %27 = and i32 %26, 1073741823, !dbg !11688
  %28 = uitofp i32 %27 to float, !dbg !11689
  %29 = fdiv float %24, %28, !dbg !11690
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !11691
  %31 = load volatile i32, i32* %30, align 4, !dbg !11691
  %32 = and i32 %31, 1073741823, !dbg !11692
  %33 = uitofp i32 %32 to float, !dbg !11693
  %34 = fmul float %29, %33, !dbg !11694
  call void @llvm.dbg.value(metadata float %34, metadata !11665, metadata !DIExpression()), !dbg !11666
  %35 = lshr i32 24000000, %16, !dbg !11695
  %36 = lshr i32 %35, %14, !dbg !11696
  %37 = uitofp i32 %36 to float, !dbg !11697
  %38 = uitofp i8 %6 to float, !dbg !11698
  %39 = fadd float %34, %38, !dbg !11699
  %40 = fmul float %39, %37, !dbg !11700
  %41 = fptoui float %40 to i32, !dbg !11701
  br label %47, !dbg !11702

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11703
  %44 = lshr i32 %43, %14, !dbg !11705
  %45 = zext i8 %6 to i32, !dbg !11706
  %46 = mul nuw i32 %44, %45, !dbg !11707
  br label %47, !dbg !11708

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11666
  ret i32 %48, !dbg !11709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #17 !dbg !11710 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11712, metadata !DIExpression()), !dbg !11717
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #25, !dbg !11718
  br i1 %2, label %47, label %3, !dbg !11720

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11721
  %5 = trunc i32 %4 to i8, !dbg !11721
  %6 = and i8 %5, 127, !dbg !11721
  call void @llvm.dbg.value(metadata i8 %6, metadata !11713, metadata !DIExpression()), !dbg !11717
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11722
  %8 = lshr i32 %7, 22, !dbg !11723
  %9 = and i32 %8, 3, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %8, metadata !11714, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11717
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !11725
  %11 = lshr i32 %10, 19, !dbg !11726
  %12 = and i32 %11, 3, !dbg !11727
  call void @llvm.dbg.value(metadata i32 %11, metadata !11715, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !11717
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !11728
  %14 = load i32, i32* %13, align 4, !dbg !11728
  call void @llvm.dbg.value(metadata i8 undef, metadata !11714, metadata !DIExpression()), !dbg !11717
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !11729
  %16 = load i32, i32* %15, align 4, !dbg !11729
  call void @llvm.dbg.value(metadata i8 undef, metadata !11715, metadata !DIExpression()), !dbg !11717
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !11730
  %18 = load volatile i32, i32* %17, align 4, !dbg !11730
  %19 = and i32 %18, 32768, !dbg !11732
  %20 = icmp eq i32 %19, 0, !dbg !11732
  br i1 %20, label %42, label %21, !dbg !11733

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !11734
  %23 = and i32 %22, 32767, !dbg !11736
  %24 = uitofp i32 %23 to float, !dbg !11737
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !11738
  %26 = load volatile i32, i32* %25, align 4, !dbg !11738
  %27 = and i32 %26, 1073741823, !dbg !11739
  %28 = uitofp i32 %27 to float, !dbg !11740
  %29 = fdiv float %24, %28, !dbg !11741
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !11742
  %31 = load volatile i32, i32* %30, align 4, !dbg !11742
  %32 = and i32 %31, 1073741823, !dbg !11743
  %33 = uitofp i32 %32 to float, !dbg !11744
  %34 = fmul float %29, %33, !dbg !11745
  call void @llvm.dbg.value(metadata float %34, metadata !11716, metadata !DIExpression()), !dbg !11717
  %35 = lshr i32 24000000, %16, !dbg !11746
  %36 = lshr i32 %35, %14, !dbg !11747
  %37 = uitofp i32 %36 to float, !dbg !11748
  %38 = uitofp i8 %6 to float, !dbg !11749
  %39 = fadd float %34, %38, !dbg !11750
  %40 = fmul float %39, %37, !dbg !11751
  %41 = fptoui float %40 to i32, !dbg !11752
  br label %47, !dbg !11753

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !11754
  %44 = lshr i32 %43, %14, !dbg !11756
  %45 = zext i8 %6 to i32, !dbg !11757
  %46 = mul nuw i32 %44, %45, !dbg !11758
  br label %47, !dbg !11759

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !11717
  ret i32 %48, !dbg !11760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11761 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11765, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i32 %1, metadata !11766, metadata !DIExpression()), !dbg !11769
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #25, !dbg !11770
  br i1 %3, label %4, label %5, !dbg !11773

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 260) #24, !dbg !11774
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 260) #24, !dbg !11774
  unreachable, !dbg !11774

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #25, !dbg !11776
  call void @llvm.dbg.value(metadata i32 %6, metadata !11767, metadata !DIExpression()), !dbg !11769
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #25, !dbg !11777
  call void @llvm.dbg.value(metadata i32 %7, metadata !11768, metadata !DIExpression()), !dbg !11769
  %8 = udiv i32 %6, %7, !dbg !11778
  %9 = mul i32 %8, 18, !dbg !11779
  ret i32 %9, !dbg !11780
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11781 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !11783, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i32 %1, metadata !11784, metadata !DIExpression()), !dbg !11785
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !11786
  %4 = and i32 %1, 65535, !dbg !11786
  %5 = add i32 %4, %3, !dbg !11786
  %6 = inttoptr i32 %5 to i32*, !dbg !11786
  %7 = load volatile i32, i32* %6, align 4, !dbg !11786
  %8 = lshr i32 %1, 16, !dbg !11787
  %9 = and i32 %8, 31, !dbg !11787
  %10 = lshr i32 %7, %9, !dbg !11788
  %11 = and i32 %10, 63, !dbg !11789
  ret i32 %11, !dbg !11790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct.sensor_msg* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !11791 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11818, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata %struct.sensor_msg* %1, metadata !11819, metadata !DIExpression()), !dbg !11822
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11823
  store volatile i32 0, i32* %3, align 4, !dbg !11824
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11825
  store volatile i32 0, i32* %4, align 4, !dbg !11826
  %5 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 0, !dbg !11827
  %6 = load i32, i32* %5, align 4, !dbg !11827
  call void @llvm.dbg.value(metadata i32 %6, metadata !11820, metadata !DIExpression()), !dbg !11822
  %7 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 1, !dbg !11828
  %8 = load i32, i32* %7, align 4, !dbg !11828
  %9 = icmp eq i32 %8, 1, !dbg !11830
  %10 = shl nuw i32 1, %6, !dbg !11831
  br i1 %9, label %11, label %15, !dbg !11832

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11833
  %13 = load volatile i32, i32* %12, align 4, !dbg !11834
  %14 = or i32 %13, %10, !dbg !11834
  store volatile i32 %14, i32* %12, align 4, !dbg !11834
  br label %20, !dbg !11833

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !11835
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !11836
  %18 = load volatile i32, i32* %17, align 4, !dbg !11837
  %19 = and i32 %18, %16, !dbg !11837
  store volatile i32 %19, i32* %17, align 4, !dbg !11837
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !11838
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !11840
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !11840
  %24 = add i32 %6, -16, !dbg !11840
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !11840
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !11840
  call void @llvm.dbg.value(metadata i32* %26, metadata !11821, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.value(metadata i32 %25, metadata !11820, metadata !DIExpression()), !dbg !11822
  %27 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 2, !dbg !11841
  %28 = load i32, i32* %27, align 4, !dbg !11841
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !11842

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !11843
  %31 = shl i32 3, %30, !dbg !11846
  %32 = xor i32 %31, -1, !dbg !11847
  %33 = load volatile i32, i32* %26, align 4, !dbg !11848
  %34 = and i32 %33, %32, !dbg !11848
  br label %56, !dbg !11849

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !11850
  %37 = shl i32 %25, 1, !dbg !11852
  %38 = shl i32 3, %37, !dbg !11853
  %39 = xor i32 %38, -1, !dbg !11854
  %40 = and i32 %36, %39, !dbg !11855
  %41 = shl nuw i32 1, %37, !dbg !11856
  %42 = or i32 %40, %41, !dbg !11857
  br label %56, !dbg !11858

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !11859
  %45 = shl i32 %25, 1, !dbg !11861
  %46 = shl i32 3, %45, !dbg !11862
  %47 = xor i32 %46, -1, !dbg !11863
  %48 = and i32 %44, %47, !dbg !11864
  %49 = shl i32 2, %45, !dbg !11865
  %50 = or i32 %48, %49, !dbg !11866
  br label %56, !dbg !11867

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !11868
  %53 = shl i32 3, %52, !dbg !11870
  %54 = load volatile i32, i32* %26, align 4, !dbg !11871
  %55 = or i32 %54, %53, !dbg !11871
  br label %56, !dbg !11872

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !11873
  br label %58, !dbg !11874

58:                                               ; preds = %56, %20
  ret void, !dbg !11874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11875 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11880, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11881, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32 %2, metadata !11882, metadata !DIExpression()), !dbg !11883
  %4 = icmp ult i32 %1, 32, !dbg !11884
  br i1 %4, label %6, label %5, !dbg !11887

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 113) #24, !dbg !11888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 113) #24, !dbg !11888
  unreachable, !dbg !11888

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !11890
  %8 = shl nuw i32 1, %1, !dbg !11892
  br i1 %7, label %9, label %13, !dbg !11893

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11894
  %11 = load volatile i32, i32* %10, align 4, !dbg !11896
  %12 = or i32 %11, %8, !dbg !11896
  store volatile i32 %12, i32* %10, align 4, !dbg !11896
  br label %18, !dbg !11897

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !11898
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !11900
  %16 = load volatile i32, i32* %15, align 4, !dbg !11901
  %17 = and i32 %16, %14, !dbg !11901
  store volatile i32 %17, i32* %15, align 4, !dbg !11901
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !11902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11903 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11907, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.value(metadata i32 %1, metadata !11908, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.value(metadata i1 %2, metadata !11909, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11910
  %4 = icmp ult i32 %1, 32, !dbg !11911
  br i1 %4, label %6, label %5, !dbg !11914

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 135) #24, !dbg !11915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 135) #24, !dbg !11915
  unreachable, !dbg !11915

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !11917
  br i1 %2, label %8, label %12, !dbg !11919

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11920
  %10 = load volatile i32, i32* %9, align 4, !dbg !11921
  %11 = or i32 %10, %7, !dbg !11921
  store volatile i32 %11, i32* %9, align 4, !dbg !11921
  br label %17, !dbg !11920

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !11922
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !11923
  %15 = load volatile i32, i32* %14, align 4, !dbg !11924
  %16 = and i32 %15, %13, !dbg !11924
  store volatile i32 %16, i32* %14, align 4, !dbg !11924
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11925
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !11926 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !11928, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i32 %1, metadata !11929, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata i1 %2, metadata !11930, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11931
  %4 = icmp ult i32 %1, 32, !dbg !11932
  br i1 %4, label %6, label %5, !dbg !11935

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.185, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 152) #24, !dbg !11936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.186, i32 0, i32 0), i32 noundef 152) #24, !dbg !11936
  unreachable, !dbg !11936

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !11938
  br i1 %2, label %8, label %12, !dbg !11940

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11941
  %10 = load volatile i32, i32* %9, align 4, !dbg !11942
  %11 = or i32 %10, %7, !dbg !11942
  store volatile i32 %11, i32* %9, align 4, !dbg !11942
  br label %17, !dbg !11941

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !11943
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !11944
  %15 = load volatile i32, i32* %14, align 4, !dbg !11945
  %16 = and i32 %15, %13, !dbg !11945
  store volatile i32 %16, i32* %14, align 4, !dbg !11945
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !11946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !11947 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11986, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !11987, metadata !DIExpression()), !dbg !11988
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !11989
  br i1 %3, label %4, label %5, !dbg !11992

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 49) #24, !dbg !11993
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 49) #24, !dbg !11993
  unreachable, !dbg !11993

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11995
  %7 = load volatile i32, i32* %6, align 4, !dbg !11996
  %8 = and i32 %7, -2, !dbg !11996
  store volatile i32 %8, i32* %6, align 4, !dbg !11996
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #25, !dbg !11997
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !11998
  %10 = load i32, i32* %9, align 4, !dbg !11998
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !11999
  %12 = load i32, i32* %11, align 4, !dbg !11999
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !12000
  %14 = load i32, i32* %13, align 4, !dbg !12000
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !12001
  %16 = load i32, i32* %15, align 4, !dbg !12001
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12002
  %18 = load volatile i32, i32* %17, align 4, !dbg !12003
  %19 = or i32 %10, %12, !dbg !12004
  %20 = or i32 %19, %14, !dbg !12005
  %21 = or i32 %20, %16, !dbg !12006
  %22 = or i32 %21, %18, !dbg !12003
  %23 = or i32 %22, 16384, !dbg !12003
  store volatile i32 %23, i32* %17, align 4, !dbg !12003
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12007
  %25 = load volatile i32, i32* %24, align 4, !dbg !12008
  %26 = or i32 %25, 4, !dbg !12008
  store volatile i32 %26, i32* %24, align 4, !dbg !12008
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !12009
  %28 = load i32, i32* %27, align 4, !dbg !12009
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !12010
  %30 = load i32, i32* %29, align 4, !dbg !12010
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #25, !dbg !12011
  ret void, !dbg !12012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #16 !dbg !12013 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12017, metadata !DIExpression()), !dbg !12018
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12019
  %3 = load volatile i32, i32* %2, align 4, !dbg !12020
  %4 = and i32 %3, -2, !dbg !12020
  store volatile i32 %4, i32* %2, align 4, !dbg !12020
  store volatile i32 0, i32* %2, align 4, !dbg !12021
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12022
  store volatile i32 1, i32* %5, align 4, !dbg !12023
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12024
  store volatile i32 1792, i32* %6, align 4, !dbg !12025
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !12026
  store volatile i32 32768, i32* %7, align 4, !dbg !12027
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !12028
  store volatile i32 2049, i32* %8, align 4, !dbg !12029
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !12030
  store volatile i32 43, i32* %9, align 4, !dbg !12031
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !12032
  store volatile i32 0, i32* %10, align 4, !dbg !12033
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !12034
  store volatile i32 0, i32* %11, align 4, !dbg !12035
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !12036
  store volatile i32 96, i32* %12, align 4, !dbg !12037
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !12038
  store volatile i32 0, i32* %13, align 4, !dbg !12039
  %14 = load volatile i32, i32* %5, align 4, !dbg !12040
  %15 = and i32 %14, -2, !dbg !12040
  store volatile i32 %15, i32* %5, align 4, !dbg !12040
  br label %16, !dbg !12041

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !12042
  %18 = and i32 %17, 1, !dbg !12043
  %19 = icmp eq i32 %18, 0, !dbg !12044
  br i1 %19, label %16, label %20, !dbg !12041, !llvm.loop !12045

20:                                               ; preds = %16
  ret void, !dbg !12047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !12048 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12052, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %1, metadata !12053, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %2, metadata !12054, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 1, metadata !12059, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %1, metadata !12055, metadata !DIExpression()), !dbg !12065
  %4 = shl i32 %2, 4, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %4, metadata !12056, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 1, metadata !12057, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %1, metadata !12055, metadata !DIExpression()), !dbg !12065
  %5 = icmp eq i32 %4, 0, !dbg !12067
  br i1 %5, label %11, label %6, !dbg !12068

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12055, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %8, metadata !12056, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %8, metadata !12057, metadata !DIExpression()), !dbg !12065
  %9 = urem i32 %7, %8, !dbg !12069
  call void @llvm.dbg.value(metadata i32 %8, metadata !12055, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %9, metadata !12056, metadata !DIExpression()), !dbg !12065
  %10 = icmp eq i32 %9, 0, !dbg !12067
  br i1 %10, label %11, label %6, !dbg !12068, !llvm.loop !12071

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !12065
  %13 = udiv i32 %1, %12, !dbg !12073
  call void @llvm.dbg.value(metadata i32 %13, metadata !12055, metadata !DIExpression()), !dbg !12065
  %14 = udiv i32 %4, %12, !dbg !12074
  call void @llvm.dbg.value(metadata i32 %14, metadata !12056, metadata !DIExpression()), !dbg !12065
  %15 = icmp ugt i32 %13, 458745, !dbg !12075
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !12076
  br i1 %17, label %18, label %33, !dbg !12076

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !12077
  %20 = udiv i32 %19, 458745, !dbg !12078
  %21 = add nuw nsw i32 %20, 1, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %21, metadata !12060, metadata !DIExpression()), !dbg !12080
  %22 = add i32 %14, -1, !dbg !12081
  %23 = udiv i32 %22, 65535, !dbg !12082
  %24 = add nuw nsw i32 %23, 1, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %24, metadata !12063, metadata !DIExpression()), !dbg !12080
  %25 = icmp ugt i32 %21, %24, !dbg !12084
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !12085
  call void @llvm.dbg.value(metadata i32 %26, metadata !12064, metadata !DIExpression()), !dbg !12080
  %27 = udiv i32 %13, %26, !dbg !12086
  call void @llvm.dbg.value(metadata i32 %27, metadata !12055, metadata !DIExpression()), !dbg !12065
  %28 = udiv i32 %14, %26, !dbg !12087
  call void @llvm.dbg.value(metadata i32 %28, metadata !12056, metadata !DIExpression()), !dbg !12065
  %29 = icmp ugt i32 %26, %13, !dbg !12088
  %30 = select i1 %29, i32 1, i32 %27, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %30, metadata !12055, metadata !DIExpression()), !dbg !12065
  %31 = icmp ugt i32 %26, %14, !dbg !12091
  %32 = select i1 %31, i32 1, i32 %28, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %32, metadata !12056, metadata !DIExpression()), !dbg !12065
  br label %33, !dbg !12094

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !12065
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !12065
  call void @llvm.dbg.value(metadata i32 %35, metadata !12055, metadata !DIExpression()), !dbg !12065
  call void @llvm.dbg.value(metadata i32 %34, metadata !12056, metadata !DIExpression()), !dbg !12065
  %36 = add i32 %35, -1, !dbg !12095
  %37 = udiv i32 %36, 65535, !dbg !12096
  %38 = add nuw nsw i32 %37, 1, !dbg !12097
  call void @llvm.dbg.value(metadata i32 %38, metadata !12059, metadata !DIExpression()), !dbg !12065
  %39 = add nsw i32 %37, -1, !dbg !12098
  %40 = icmp ult i32 %39, 6, !dbg !12098
  br i1 %40, label %41, label %44, !dbg !12098

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !12098
  %43 = load i32, i32* %42, align 4, !dbg !12098
  br label %44, !dbg !12098

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !12099
  call void @llvm.dbg.value(metadata i32 %45, metadata !12058, metadata !DIExpression()), !dbg !12065
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !12101
  %47 = load volatile i32, i32* %46, align 4, !dbg !12102
  %48 = and i32 %47, -897, !dbg !12102
  store volatile i32 %48, i32* %46, align 4, !dbg !12102
  %49 = load volatile i32, i32* %46, align 4, !dbg !12103
  %50 = or i32 %49, %45, !dbg !12103
  store volatile i32 %50, i32* %46, align 4, !dbg !12103
  %51 = add i32 %34, 65535, !dbg !12104
  %52 = and i32 %51, 65535, !dbg !12104
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !12105
  store volatile i32 %52, i32* %53, align 4, !dbg !12106
  %54 = udiv i32 %35, %38, !dbg !12107
  %55 = add i32 %54, 65535, !dbg !12107
  %56 = and i32 %55, 65535, !dbg !12107
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !12108
  store volatile i32 %56, i32* %57, align 4, !dbg !12109
  %58 = mul nuw nsw i32 %38, 1000, !dbg !12110
  %59 = udiv i32 %1, %58, !dbg !12110
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !12111
  store volatile i32 %59, i32* %60, align 4, !dbg !12112
  ret void, !dbg !12113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !12114 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12118, metadata !DIExpression()), !dbg !12121
  call void @llvm.dbg.value(metadata i32 %1, metadata !12119, metadata !DIExpression()), !dbg !12121
  call void @llvm.dbg.value(metadata i1 %2, metadata !12120, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12121
  %4 = and i32 %1, 4, !dbg !12122
  %5 = icmp eq i32 %4, 0, !dbg !12122
  %6 = and i32 %1, 2, !dbg !12122
  %7 = icmp eq i32 %6, 0, !dbg !12122
  %8 = and i32 %1, 6, !dbg !12122
  %9 = icmp eq i32 %8, 0, !dbg !12122
  br i1 %9, label %10, label %11, !dbg !12122

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 196) #24, !dbg !12125
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 196) #24, !dbg !12125
  unreachable, !dbg !12125

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !12127

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !12128

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !12131
  %15 = load volatile i32, i32* %14, align 4, !dbg !12133
  %16 = or i32 %15, 512, !dbg !12133
  store volatile i32 %16, i32* %14, align 4, !dbg !12133
  br label %17, !dbg !12131

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !12134

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12135
  %20 = load volatile i32, i32* %19, align 4, !dbg !12137
  %21 = or i32 %20, 2, !dbg !12137
  store volatile i32 %21, i32* %19, align 4, !dbg !12137
  br label %32, !dbg !12135

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !12138

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !12140
  %25 = load volatile i32, i32* %24, align 4, !dbg !12142
  %26 = and i32 %25, -513, !dbg !12142
  store volatile i32 %26, i32* %24, align 4, !dbg !12142
  br label %27, !dbg !12140

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !12143

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12144
  %30 = load volatile i32, i32* %29, align 4, !dbg !12146
  %31 = and i32 %30, -3, !dbg !12146
  store volatile i32 %31, i32* %29, align 4, !dbg !12146
  br label %32, !dbg !12144

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !12147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12148 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12152, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i1 %1, metadata !12153, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12154
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12155
  %4 = load volatile i32, i32* %3, align 4, !dbg !12155
  %5 = and i32 %4, 2, !dbg !12157
  %6 = select i1 %1, i32 0, i32 -3, !dbg !12157
  %7 = or i32 %5, %6, !dbg !12157
  store volatile i32 %7, i32* %3, align 4, !dbg !12155
  ret void, !dbg !12158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12159 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12161, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i1 %1, metadata !12162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12163
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !12164
  %4 = load volatile i32, i32* %3, align 4, !dbg !12164
  %5 = and i32 %4, -17, !dbg !12166
  %6 = select i1 %1, i32 0, i32 16, !dbg !12166
  %7 = or i32 %5, %6, !dbg !12166
  store volatile i32 %7, i32* %3, align 4, !dbg !12164
  ret void, !dbg !12167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !12168 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12170, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i32 %1, metadata !12171, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i1 %2, metadata !12172, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12175
  call void @llvm.dbg.value(metadata i32* null, metadata !12173, metadata !DIExpression()), !dbg !12175
  call void @llvm.dbg.value(metadata i32 0, metadata !12174, metadata !DIExpression()), !dbg !12175
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !12176
  %5 = lshr i32 %1, 16, !dbg !12177
  %6 = add i32 %5, %4, !dbg !12178
  %7 = inttoptr i32 %6 to i32*, !dbg !12179
  call void @llvm.dbg.value(metadata i32* %7, metadata !12173, metadata !DIExpression()), !dbg !12175
  %8 = and i32 %1, 65535, !dbg !12180
  %9 = shl nuw i32 1, %8, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %9, metadata !12174, metadata !DIExpression()), !dbg !12175
  br i1 %2, label %10, label %13, !dbg !12182

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !12183
  %12 = or i32 %11, %9, !dbg !12183
  br label %17, !dbg !12185

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !12186
  %15 = load volatile i32, i32* %7, align 4, !dbg !12187
  %16 = and i32 %15, %14, !dbg !12187
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !12188
  ret void, !dbg !12189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !12190 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12194, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.value(metadata i32 %1, metadata !12195, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.value(metadata i32* null, metadata !12196, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.value(metadata i32 0, metadata !12197, metadata !DIExpression()), !dbg !12198
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !12199
  %4 = lshr i32 %1, 16, !dbg !12200
  %5 = add i32 %4, %3, !dbg !12201
  %6 = inttoptr i32 %5 to i32*, !dbg !12202
  call void @llvm.dbg.value(metadata i32* %6, metadata !12196, metadata !DIExpression()), !dbg !12198
  %7 = and i32 %1, 65535, !dbg !12203
  %8 = shl nuw i32 1, %7, !dbg !12204
  call void @llvm.dbg.value(metadata i32 %8, metadata !12197, metadata !DIExpression()), !dbg !12198
  store volatile i32 %8, i32* %6, align 4, !dbg !12205
  ret void, !dbg !12206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #16 !dbg !12207 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12209, metadata !DIExpression()), !dbg !12214
  call void @llvm.dbg.value(metadata i32 %1, metadata !12210, metadata !DIExpression()), !dbg !12214
  call void @llvm.dbg.value(metadata i1 %2, metadata !12211, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12214
  call void @llvm.dbg.value(metadata i32* null, metadata !12212, metadata !DIExpression()), !dbg !12214
  call void @llvm.dbg.value(metadata i32 0, metadata !12213, metadata !DIExpression()), !dbg !12214
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !12215
  %5 = lshr i32 %1, 16, !dbg !12216
  %6 = add i32 %5, %4, !dbg !12217
  %7 = inttoptr i32 %6 to i32*, !dbg !12218
  call void @llvm.dbg.value(metadata i32* %7, metadata !12212, metadata !DIExpression()), !dbg !12214
  %8 = and i32 %1, 65535, !dbg !12219
  %9 = shl nuw i32 1, %8, !dbg !12220
  call void @llvm.dbg.value(metadata i32 %9, metadata !12213, metadata !DIExpression()), !dbg !12214
  br i1 %2, label %10, label %13, !dbg !12221

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !12222
  %12 = or i32 %11, %9, !dbg !12222
  br label %17, !dbg !12224

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !12225
  %15 = load volatile i32, i32* %7, align 4, !dbg !12226
  %16 = and i32 %15, %14, !dbg !12226
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !12227
  ret void, !dbg !12228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12229 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12231, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.value(metadata i1 %1, metadata !12232, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12233
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12234
  %4 = load volatile i32, i32* %3, align 4, !dbg !12234
  %5 = and i32 %4, -16385, !dbg !12236
  %6 = select i1 %1, i32 0, i32 16384, !dbg !12236
  %7 = or i32 %5, %6, !dbg !12236
  store volatile i32 %7, i32* %3, align 4, !dbg !12234
  ret void, !dbg !12237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12238 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12240, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.value(metadata i1 %1, metadata !12241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12242
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12243
  %4 = load volatile i32, i32* %3, align 4, !dbg !12243
  %5 = and i32 %4, -8193, !dbg !12245
  %6 = select i1 %1, i32 8192, i32 0, !dbg !12245
  %7 = or i32 %5, %6, !dbg !12245
  store volatile i32 %7, i32* %3, align 4, !dbg !12243
  ret void, !dbg !12246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12247 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12249, metadata !DIExpression()), !dbg !12251
  call void @llvm.dbg.value(metadata i1 %1, metadata !12250, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12251
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12252
  %4 = load volatile i32, i32* %3, align 4, !dbg !12252
  %5 = and i32 %4, -4097, !dbg !12254
  %6 = select i1 %1, i32 4096, i32 0, !dbg !12254
  %7 = or i32 %5, %6, !dbg !12254
  store volatile i32 %7, i32* %3, align 4, !dbg !12252
  ret void, !dbg !12255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12258, metadata !DIExpression()), !dbg !12260
  call void @llvm.dbg.value(metadata i32 %1, metadata !12259, metadata !DIExpression()), !dbg !12260
  %3 = and i32 %1, -65, !dbg !12261
  %4 = icmp eq i32 %3, 0, !dbg !12261
  br i1 %4, label %6, label %5, !dbg !12261

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 396) #24, !dbg !12264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 396) #24, !dbg !12264
  unreachable, !dbg !12264

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !12261
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !12266
  %9 = load volatile i32, i32* %8, align 4, !dbg !12266
  %10 = and i32 %9, -65, !dbg !12268
  %11 = select i1 %7, i32 0, i32 64, !dbg !12268
  %12 = or i32 %10, %11, !dbg !12268
  store volatile i32 %12, i32* %8, align 4, !dbg !12266
  ret void, !dbg !12269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12270 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12272, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.value(metadata i1 %1, metadata !12273, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12274
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12275
  %4 = load volatile i32, i32* %3, align 4, !dbg !12275
  %5 = and i32 %4, -1025, !dbg !12277
  %6 = select i1 %1, i32 1024, i32 0, !dbg !12277
  %7 = or i32 %5, %6, !dbg !12277
  store volatile i32 %7, i32* %3, align 4, !dbg !12275
  ret void, !dbg !12278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12279 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12281, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.value(metadata i1 %1, metadata !12282, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12283
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12284
  %4 = load volatile i32, i32* %3, align 4, !dbg !12284
  %5 = and i32 %4, -513, !dbg !12286
  %6 = select i1 %1, i32 512, i32 0, !dbg !12286
  %7 = or i32 %5, %6, !dbg !12286
  store volatile i32 %7, i32* %3, align 4, !dbg !12284
  ret void, !dbg !12287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12288 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12290, metadata !DIExpression()), !dbg !12292
  call void @llvm.dbg.value(metadata i1 %1, metadata !12291, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12292
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !12293
  %4 = load volatile i32, i32* %3, align 4, !dbg !12293
  %5 = and i32 %4, -257, !dbg !12295
  %6 = select i1 %1, i32 256, i32 0, !dbg !12295
  %7 = or i32 %5, %6, !dbg !12295
  store volatile i32 %7, i32* %3, align 4, !dbg !12293
  ret void, !dbg !12296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !12297 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12301, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i16 %1, metadata !12302, metadata !DIExpression()), !dbg !12303
  %3 = zext i16 %1 to i32, !dbg !12304
  %4 = icmp ult i16 %1, 512, !dbg !12304
  br i1 %4, label %6, label %5, !dbg !12307

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.204, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 462) #24, !dbg !12308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 462) #24, !dbg !12308
  unreachable, !dbg !12308

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !12310
  %8 = load volatile i32, i32* %7, align 4, !dbg !12310
  %9 = and i32 %8, -5, !dbg !12312
  %10 = lshr i32 %3, 6, !dbg !12312
  %11 = and i32 %10, 4, !dbg !12312
  %12 = or i32 %9, %11, !dbg !12312
  store volatile i32 %12, i32* %7, align 4, !dbg !12310
  %13 = and i32 %3, 255, !dbg !12313
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !12314
  store volatile i32 %13, i32* %14, align 4, !dbg !12315
  ret void, !dbg !12316
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #17 !dbg !12317 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12321, metadata !DIExpression()), !dbg !12323
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !12324
  %3 = load volatile i32, i32* %2, align 4, !dbg !12324
  call void @llvm.dbg.value(metadata i32 %3, metadata !12322, metadata !DIExpression()), !dbg !12323
  %4 = trunc i32 %3 to i16, !dbg !12325
  %5 = and i16 %4, 255, !dbg !12325
  %6 = lshr i16 %4, 2, !dbg !12325
  %7 = and i16 %6, 256, !dbg !12325
  %8 = or i16 %7, %5, !dbg !12325
  call void @llvm.dbg.value(metadata i16 %8, metadata !12322, metadata !DIExpression()), !dbg !12323
  ret i16 %8, !dbg !12326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12327 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12329, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.value(metadata i1 %1, metadata !12330, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12331
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !12332
  %4 = load volatile i32, i32* %3, align 4, !dbg !12332
  %5 = and i32 %4, -2, !dbg !12334
  %6 = zext i1 %1 to i32, !dbg !12334
  %7 = or i32 %5, %6, !dbg !12334
  store volatile i32 %7, i32* %3, align 4, !dbg !12332
  ret void, !dbg !12335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12336 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12338, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.value(metadata i1 %1, metadata !12339, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12340
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !12341
  %4 = load volatile i32, i32* %3, align 4, !dbg !12341
  %5 = and i32 %4, -3, !dbg !12343
  %6 = select i1 %1, i32 2, i32 0, !dbg !12343
  %7 = or i32 %5, %6, !dbg !12343
  store volatile i32 %7, i32* %3, align 4, !dbg !12341
  ret void, !dbg !12344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12345 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12347, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.value(metadata i1 %1, metadata !12348, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12349
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12350
  %4 = load volatile i32, i32* %3, align 4, !dbg !12350
  %5 = and i32 %4, -129, !dbg !12352
  %6 = select i1 %1, i32 128, i32 0, !dbg !12352
  %7 = or i32 %5, %6, !dbg !12352
  store volatile i32 %7, i32* %3, align 4, !dbg !12350
  ret void, !dbg !12353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12354 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12356, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i32 %1, metadata !12357, metadata !DIExpression()), !dbg !12358
  %3 = and i32 %1, -33, !dbg !12359
  %4 = icmp eq i32 %3, 0, !dbg !12359
  br i1 %4, label %6, label %5, !dbg !12359

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 553) #24, !dbg !12362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.195, i32 0, i32 0), i32 noundef 553) #24, !dbg !12362
  unreachable, !dbg !12362

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !12359
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !12364
  %9 = load volatile i32, i32* %8, align 4, !dbg !12364
  %10 = and i32 %9, -33, !dbg !12366
  %11 = select i1 %7, i32 32, i32 0, !dbg !12366
  %12 = or i32 %10, %11, !dbg !12366
  store volatile i32 %12, i32* %8, align 4, !dbg !12364
  ret void, !dbg !12367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12368 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12370, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i1 %1, metadata !12371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12372
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12373
  %4 = load volatile i32, i32* %3, align 4, !dbg !12373
  %5 = and i32 %4, -16385, !dbg !12375
  %6 = select i1 %1, i32 16384, i32 0, !dbg !12375
  %7 = or i32 %5, %6, !dbg !12375
  store volatile i32 %7, i32* %3, align 4, !dbg !12373
  ret void, !dbg !12376
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12377 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12379, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.value(metadata i1 %1, metadata !12380, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12381
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !12382
  %4 = load volatile i32, i32* %3, align 4, !dbg !12382
  %5 = and i32 %4, -17, !dbg !12384
  %6 = select i1 %1, i32 16, i32 0, !dbg !12384
  %7 = or i32 %5, %6, !dbg !12384
  store volatile i32 %7, i32* %3, align 4, !dbg !12382
  ret void, !dbg !12385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #16 !dbg !12386 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12388, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.value(metadata i1 %1, metadata !12389, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12390
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !12391
  %4 = load volatile i32, i32* %3, align 4, !dbg !12391
  %5 = and i32 %4, -2049, !dbg !12393
  %6 = select i1 %1, i32 2048, i32 0, !dbg !12393
  %7 = or i32 %5, %6, !dbg !12393
  store volatile i32 %7, i32* %3, align 4, !dbg !12391
  ret void, !dbg !12394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !12395 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !12414, metadata !DIExpression()), !dbg !12419
  %4 = bitcast i32* %2 to i8*, !dbg !12420
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12420
  %5 = bitcast i32* %3 to i8*, !dbg !12420
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12420
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !12421
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !12422

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12415, metadata !DIExpression()), !dbg !12419
  call void @llvm.dbg.value(metadata i32* %2, metadata !12417, metadata !DIExpression(DW_OP_deref)), !dbg !12419
  call void @llvm.dbg.value(metadata i32* %3, metadata !12418, metadata !DIExpression(DW_OP_deref)), !dbg !12419
  br label %8, !dbg !12423

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !12425
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12425
  call void @llvm.dbg.value(metadata i32 %10, metadata !12415, metadata !DIExpression()), !dbg !12419
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !12426

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #24, !dbg !12427
  call void @llvm.dbg.value(metadata i32 %12, metadata !12416, metadata !DIExpression()), !dbg !12419
  br label %13, !dbg !12429

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !12430
  call void @llvm.dbg.value(metadata i32 %14, metadata !12416, metadata !DIExpression()), !dbg !12419
  %15 = load i32, i32* %2, align 4, !dbg !12431
  call void @llvm.dbg.value(metadata i32 %15, metadata !12417, metadata !DIExpression()), !dbg !12419
  %16 = add i32 %15, 1, !dbg !12432
  %17 = udiv i32 %14, %16, !dbg !12433
  %18 = load i32, i32* %3, align 4, !dbg !12434
  call void @llvm.dbg.value(metadata i32 %18, metadata !12418, metadata !DIExpression()), !dbg !12419
  %19 = add i32 %18, 1, !dbg !12435
  %20 = udiv i32 %17, %19, !dbg !12436
  br label %21, !dbg !12437

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !12419
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12438
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12438
  ret i32 %22, !dbg !12438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #17 !dbg !12439 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !12443, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i32 %0, metadata !12444, metadata !DIExpression()), !dbg !12445
  %2 = inttoptr i32 %0 to i32*, !dbg !12446
  %3 = load volatile i32, i32* %2, align 4, !dbg !12446
  %4 = lshr i32 %3, 24, !dbg !12447
  %5 = and i32 %4, 7, !dbg !12447
  ret i32 %5, !dbg !12448
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !12449 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !12471, metadata !DIExpression()), !dbg !12476
  %4 = bitcast i32* %2 to i8*, !dbg !12477
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12477
  %5 = bitcast i32* %3 to i8*, !dbg !12477
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12477
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !12478
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !12479

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12472, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.value(metadata i32* %2, metadata !12474, metadata !DIExpression(DW_OP_deref)), !dbg !12476
  call void @llvm.dbg.value(metadata i32* %3, metadata !12475, metadata !DIExpression(DW_OP_deref)), !dbg !12476
  br label %8, !dbg !12480

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !12482
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %10, metadata !12472, metadata !DIExpression()), !dbg !12476
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !12483

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #24, !dbg !12484
  call void @llvm.dbg.value(metadata i32 %12, metadata !12473, metadata !DIExpression()), !dbg !12476
  br label %13, !dbg !12486

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !12487
  call void @llvm.dbg.value(metadata i32 %14, metadata !12473, metadata !DIExpression()), !dbg !12476
  %15 = load i32, i32* %2, align 4, !dbg !12488
  call void @llvm.dbg.value(metadata i32 %15, metadata !12474, metadata !DIExpression()), !dbg !12476
  %16 = add i32 %15, 1, !dbg !12489
  %17 = udiv i32 %14, %16, !dbg !12490
  %18 = load i32, i32* %3, align 4, !dbg !12491
  call void @llvm.dbg.value(metadata i32 %18, metadata !12475, metadata !DIExpression()), !dbg !12476
  %19 = add i32 %18, 1, !dbg !12492
  %20 = udiv i32 %17, %19, !dbg !12493
  br label %21, !dbg !12494

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !12476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12495
  ret i32 %22, !dbg !12495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !12496 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !12542, metadata !DIExpression()), !dbg !12547
  %4 = bitcast i32* %2 to i8*, !dbg !12548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12548
  %5 = bitcast i32* %3 to i8*, !dbg !12548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12548
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !12549
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !12550

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !12543, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i32* %2, metadata !12545, metadata !DIExpression(DW_OP_deref)), !dbg !12547
  call void @llvm.dbg.value(metadata i32* %3, metadata !12546, metadata !DIExpression(DW_OP_deref)), !dbg !12547
  br label %8, !dbg !12551

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #25, !dbg !12553
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12553
  call void @llvm.dbg.value(metadata i32 %10, metadata !12543, metadata !DIExpression()), !dbg !12547
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !12554

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12555
  %13 = lshr i32 %12, 2, !dbg !12557
  call void @llvm.dbg.value(metadata i32 %13, metadata !12544, metadata !DIExpression()), !dbg !12547
  br label %16, !dbg !12558

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12559
  call void @llvm.dbg.value(metadata i32 %15, metadata !12544, metadata !DIExpression()), !dbg !12547
  br label %16, !dbg !12560

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !12561
  call void @llvm.dbg.value(metadata i32 %17, metadata !12544, metadata !DIExpression()), !dbg !12547
  %18 = load i32, i32* %2, align 4, !dbg !12562
  call void @llvm.dbg.value(metadata i32 %18, metadata !12545, metadata !DIExpression()), !dbg !12547
  %19 = add i32 %18, 1, !dbg !12563
  %20 = udiv i32 %17, %19, !dbg !12564
  %21 = load i32, i32* %3, align 4, !dbg !12565
  call void @llvm.dbg.value(metadata i32 %21, metadata !12546, metadata !DIExpression()), !dbg !12547
  %22 = add i32 %21, 1, !dbg !12566
  %23 = udiv i32 %20, %22, !dbg !12567
  br label %24, !dbg !12568

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !12547
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12569
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12569
  ret i32 %25, !dbg !12569
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !12570 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !12588, metadata !DIExpression()), !dbg !12593
  %4 = bitcast i32* %2 to i8*, !dbg !12594
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12594
  %5 = bitcast i32* %3 to i8*, !dbg !12594
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12594
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !12595
  %7 = add i32 %6, -815923200, !dbg !12596
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !12596
  %9 = icmp ult i32 %8, 4, !dbg !12596
  br i1 %9, label %10, label %25, !dbg !12596

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !12596
  %12 = add i32 %11, 809020800, !dbg !12596
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #25, !dbg !12597
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12597
  call void @llvm.dbg.value(metadata i32 %13, metadata !12589, metadata !DIExpression()), !dbg !12593
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !12599

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12600
  %16 = lshr i32 %15, 2, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %16, metadata !12590, metadata !DIExpression()), !dbg !12593
  br label %17, !dbg !12603

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !12604
  call void @llvm.dbg.value(metadata i32 %18, metadata !12590, metadata !DIExpression()), !dbg !12593
  %19 = load i32, i32* %2, align 4, !dbg !12605
  call void @llvm.dbg.value(metadata i32 %19, metadata !12591, metadata !DIExpression()), !dbg !12593
  %20 = add i32 %19, 1, !dbg !12606
  %21 = udiv i32 %18, %20, !dbg !12607
  %22 = load i32, i32* %3, align 4, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %22, metadata !12592, metadata !DIExpression()), !dbg !12593
  %23 = add i32 %22, 1, !dbg !12609
  %24 = udiv i32 %21, %23, !dbg !12610
  br label %25, !dbg !12611

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !12593
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12612
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12612
  ret i32 %26, !dbg !12612
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !12613 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !12640, metadata !DIExpression()), !dbg !12645
  %4 = bitcast i32* %2 to i8*, !dbg !12646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12646
  %5 = bitcast i32* %3 to i8*, !dbg !12646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12646
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !12647
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !12648

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12641, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %2, metadata !12643, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %3, metadata !12644, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  br label %13, !dbg !12649

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12641, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %2, metadata !12643, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %3, metadata !12644, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  br label %13, !dbg !12651

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12641, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %2, metadata !12643, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %3, metadata !12644, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  br label %13, !dbg !12652

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12641, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %2, metadata !12643, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %3, metadata !12644, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  br label %13, !dbg !12653

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12641, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %2, metadata !12643, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %3, metadata !12644, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  br label %13, !dbg !12654

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !12641, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %2, metadata !12643, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  call void @llvm.dbg.value(metadata i32* %3, metadata !12644, metadata !DIExpression(DW_OP_deref)), !dbg !12645
  br label %13, !dbg !12655

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #25, !dbg !12656
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #24, !dbg !12656
  call void @llvm.dbg.value(metadata i32 %15, metadata !12641, metadata !DIExpression()), !dbg !12645
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !12657

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12658
  %18 = lshr i32 %17, 1, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %18, metadata !12642, metadata !DIExpression()), !dbg !12645
  br label %21, !dbg !12661

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #24, !dbg !12662
  call void @llvm.dbg.value(metadata i32 %20, metadata !12642, metadata !DIExpression()), !dbg !12645
  br label %21, !dbg !12663

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !12664
  call void @llvm.dbg.value(metadata i32 %22, metadata !12642, metadata !DIExpression()), !dbg !12645
  %23 = load i32, i32* %2, align 4, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %23, metadata !12643, metadata !DIExpression()), !dbg !12645
  %24 = add i32 %23, 1, !dbg !12666
  %25 = udiv i32 %22, %24, !dbg !12667
  %26 = load i32, i32* %3, align 4, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %26, metadata !12644, metadata !DIExpression()), !dbg !12645
  %27 = add i32 %26, 1, !dbg !12669
  %28 = udiv i32 %25, %27, !dbg !12670
  br label %29, !dbg !12671

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !12645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12672
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !12672
  ret i32 %30, !dbg !12672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #19 !dbg !12673 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12676, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 undef, metadata !12676, metadata !DIExpression()), !dbg !12692
  call void @llvm.dbg.value(metadata i32 undef, metadata !12676, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12692
  ret void, !dbg !12693
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12694 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12698, metadata !DIExpression()), !dbg !12700
  %2 = icmp eq i8* %0, null, !dbg !12701
  br i1 %2, label %29, label %3, !dbg !12703

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12704
  %5 = icmp eq i8 %4, 0, !dbg !12705
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12706
  br i1 %6, label %29, label %8, !dbg !12706

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12699, metadata !DIExpression()), !dbg !12700
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12707

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12699, metadata !DIExpression()), !dbg !12700
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12709
  br i1 %10, label %11, label %15, !dbg !12714

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12715
  %13 = load i8*, i8** %12, align 4, !dbg !12715
  %14 = icmp eq i8* %13, %0, !dbg !12716
  br i1 %14, label %29, label %15, !dbg !12717

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12718
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12699, metadata !DIExpression()), !dbg !12700
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12719
  br i1 %17, label %7, label %8, !dbg !12720, !llvm.loop !12721

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12699, metadata !DIExpression()), !dbg !12700
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12723
  br i1 %20, label %21, label %26, !dbg !12727

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12728
  %23 = load i8*, i8** %22, align 4, !dbg !12728
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12729
  %25 = icmp eq i32 %24, 0, !dbg !12730
  br i1 %25, label %29, label %26, !dbg !12731

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12732
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12699, metadata !DIExpression()), !dbg !12700
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12733
  br i1 %28, label %29, label %18, !dbg !12707, !llvm.loop !12734

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12700
  ret %struct.device* %30, !dbg !12736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12741, metadata !DIExpression()), !dbg !12742
  %2 = icmp eq %struct.device* %0, null, !dbg !12743
  br i1 %2, label %14, label %3, !dbg !12745

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12746
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12746
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12747
  %7 = load i8, i8* %6, align 1, !dbg !12747
  %8 = and i8 %7, 1, !dbg !12747
  %9 = icmp eq i8 %8, 0, !dbg !12747
  br i1 %9, label %14, label %10, !dbg !12748

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12749
  %12 = load i8, i8* %11, align 1, !dbg !12749
  %13 = icmp eq i8 %12, 0, !dbg !12750
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12742
  ret i1 %15, !dbg !12751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12752 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12757, metadata !DIExpression()), !dbg !12758
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12759
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12761 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12769, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12770, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.value(metadata i8* %2, metadata !12771, metadata !DIExpression()), !dbg !12774
  %5 = bitcast i32* %4 to i8*, !dbg !12775
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12775
  call void @llvm.dbg.value(metadata i32 0, metadata !12772, metadata !DIExpression()), !dbg !12774
  store i32 0, i32* %4, align 4, !dbg !12776
  call void @llvm.dbg.value(metadata i32* %4, metadata !12772, metadata !DIExpression(DW_OP_deref)), !dbg !12774
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12777
  call void @llvm.dbg.value(metadata i16* %6, metadata !12773, metadata !DIExpression()), !dbg !12774
  %7 = load i32, i32* %4, align 4, !dbg !12778
  call void @llvm.dbg.value(metadata i32 %7, metadata !12772, metadata !DIExpression()), !dbg !12774
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12779
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12780
  ret i32 %8, !dbg !12781
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !12782 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12786, metadata !DIExpression()), !dbg !12792
  call void @llvm.dbg.value(metadata i32* %1, metadata !12787, metadata !DIExpression()), !dbg !12792
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12793
  %4 = load i16*, i16** %3, align 4, !dbg !12793
  call void @llvm.dbg.value(metadata i16* %4, metadata !12788, metadata !DIExpression()), !dbg !12792
  %5 = icmp eq i16* %4, null, !dbg !12794
  br i1 %5, label %14, label %6, !dbg !12795

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12796
  call void @llvm.dbg.value(metadata i32 %7, metadata !12789, metadata !DIExpression()), !dbg !12796
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12797
  %9 = load i16, i16* %8, align 2, !dbg !12797
  %10 = add i16 %9, -32767, !dbg !12798
  %11 = icmp ult i16 %10, 2, !dbg !12798
  %12 = add i32 %7, 1, !dbg !12799
  call void @llvm.dbg.value(metadata i32 %12, metadata !12789, metadata !DIExpression()), !dbg !12796
  br i1 %11, label %13, label %6, !dbg !12798, !llvm.loop !12801

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12804
  br label %14, !dbg !12805

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12807 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12811, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 %1, metadata !12812, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12813, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i8* %3, metadata !12814, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 0, metadata !12815, metadata !DIExpression()), !dbg !12823
  %5 = icmp eq i32 %1, 0, !dbg !12824
  br i1 %5, label %16, label %8, !dbg !12825

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12815, metadata !DIExpression()), !dbg !12823
  %7 = icmp eq i32 %15, %1, !dbg !12824
  br i1 %7, label %16, label %8, !dbg !12825, !llvm.loop !12826

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12815, metadata !DIExpression()), !dbg !12823
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12828
  %11 = load i16, i16* %10, align 2, !dbg !12828
  call void @llvm.dbg.value(metadata i16 %11, metadata !12817, metadata !DIExpression()), !dbg !12829
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12830
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12820, metadata !DIExpression()), !dbg !12829
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %13, metadata !12821, metadata !DIExpression()), !dbg !12829
  %14 = icmp slt i32 %13, 0, !dbg !12832
  %15 = add nuw i32 %9, 1, !dbg !12834
  call void @llvm.dbg.value(metadata i32 %15, metadata !12815, metadata !DIExpression()), !dbg !12823
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !12836 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12840, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12841, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12842, metadata !DIExpression()), !dbg !12843
  %2 = sext i16 %0 to i32, !dbg !12844
  %3 = icmp slt i16 %0, 1, !dbg !12846
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12847
  %6 = add nsw i32 %2, -1, !dbg !12847
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12847
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12847
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12841, metadata !DIExpression()), !dbg !12843
  ret %struct.device* %8, !dbg !12848
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12849 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12851, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12852, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i8* %2, metadata !12853, metadata !DIExpression()), !dbg !12856
  %5 = bitcast i32* %4 to i8*, !dbg !12857
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12857
  call void @llvm.dbg.value(metadata i32 0, metadata !12854, metadata !DIExpression()), !dbg !12856
  store i32 0, i32* %4, align 4, !dbg !12858
  call void @llvm.dbg.value(metadata i32* %4, metadata !12854, metadata !DIExpression(DW_OP_deref)), !dbg !12856
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12859
  call void @llvm.dbg.value(metadata i16* %6, metadata !12855, metadata !DIExpression()), !dbg !12856
  %7 = load i32, i32* %4, align 4, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %7, metadata !12854, metadata !DIExpression()), !dbg !12856
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12861
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12862
  ret i32 %8, !dbg !12863
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !12864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12866, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata i32* %1, metadata !12867, metadata !DIExpression()), !dbg !12871
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12872
  %4 = load i16*, i16** %3, align 4, !dbg !12872
  call void @llvm.dbg.value(metadata i16* %4, metadata !12868, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata i32 0, metadata !12869, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata i32 0, metadata !12870, metadata !DIExpression()), !dbg !12871
  %5 = icmp eq i16* %4, null, !dbg !12873
  br i1 %5, label %22, label %6, !dbg !12875

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12869, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.value(metadata i16* %8, metadata !12868, metadata !DIExpression()), !dbg !12871
  %9 = load i16, i16* %8, align 2, !dbg !12876
  %10 = icmp eq i16 %9, -32768, !dbg !12880
  call void @llvm.dbg.value(metadata i32 undef, metadata !12869, metadata !DIExpression()), !dbg !12871
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12881
  call void @llvm.dbg.value(metadata i16* %11, metadata !12868, metadata !DIExpression()), !dbg !12871
  %12 = zext i1 %10 to i32, !dbg !12882
  %13 = add i32 %7, %12, !dbg !12882
  call void @llvm.dbg.value(metadata i32 %13, metadata !12869, metadata !DIExpression()), !dbg !12871
  %14 = icmp eq i32 %13, 2, !dbg !12883
  br i1 %14, label %15, label %6, !dbg !12884

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12871
  call void @llvm.dbg.value(metadata i32 %16, metadata !12870, metadata !DIExpression()), !dbg !12871
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12885
  %18 = load i16, i16* %17, align 2, !dbg !12885
  %19 = icmp eq i16 %18, 32767, !dbg !12886
  %20 = add i32 %16, 1, !dbg !12887
  call void @llvm.dbg.value(metadata i32 %20, metadata !12870, metadata !DIExpression()), !dbg !12871
  br i1 %19, label %21, label %15, !dbg !12889, !llvm.loop !12890

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12892
  br label %22, !dbg !12893

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12894
  call void @llvm.dbg.value(metadata i16* %23, metadata !12868, metadata !DIExpression()), !dbg !12871
  ret i16* %23, !dbg !12895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !12896 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12899
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12900
  ret i32* %2, !dbg !12901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !12902 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13046, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13047, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13048, metadata !DIExpression()), !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13055, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 %1, metadata !13056, metadata !DIExpression()), !dbg !13057
  ret void, !dbg !13058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13059 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13063, metadata !DIExpression()), !dbg !13065
  call void @llvm.dbg.value(metadata i32 %1, metadata !13064, metadata !DIExpression()), !dbg !13065
  ret void, !dbg !13066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !13067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13071, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i8* %1, metadata !13072, metadata !DIExpression()), !dbg !13073
  ret i32 -134, !dbg !13074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !13075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13079, metadata !DIExpression()), !dbg !13081
  call void @llvm.dbg.value(metadata i8* %1, metadata !13080, metadata !DIExpression()), !dbg !13081
  ret i32 -134, !dbg !13082
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !13083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13086, metadata !DIExpression()), !dbg !13087
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13088, !srcloc !13094
  call void @llvm.dbg.value(metadata i32 undef, metadata !13091, metadata !DIExpression()) #23, !dbg !13095
  call void @llvm.dbg.value(metadata i32 undef, metadata !13092, metadata !DIExpression()) #23, !dbg !13095
  br label %3, !dbg !13096

3:                                                ; preds = %3, %1
  br label %3, !dbg !13097, !llvm.loop !13100
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13107, metadata !DIExpression()), !dbg !13109
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13108, metadata !DIExpression()), !dbg !13109
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.212, i32 0, i32 0), i32 noundef 69) #24, !dbg !13110
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !13115
  unreachable, !dbg !13115
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !13116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13118, metadata !DIExpression()), !dbg !13119
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !13120
  unreachable, !dbg !13120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13123, metadata !DIExpression()), !dbg !13127
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13124, metadata !DIExpression()), !dbg !13127
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13128, !srcloc !13094
  call void @llvm.dbg.value(metadata i32 undef, metadata !13091, metadata !DIExpression()) #23, !dbg !13130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13092, metadata !DIExpression()) #23, !dbg !13130
  call void @llvm.dbg.value(metadata i32 undef, metadata !13125, metadata !DIExpression()), !dbg !13127
  %4 = tail call fastcc %struct.k_thread* @k_current_get.215() #26, !dbg !13131
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13126, metadata !DIExpression()), !dbg !13127
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !13132
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.216, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #24, !dbg !13132
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13137
  br i1 %6, label %13, label %7, !dbg !13139

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13140, metadata !DIExpression()), !dbg !13145
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13147
  %9 = load i32, i32* %8, align 4, !dbg !13147
  %10 = and i32 %9, 511, !dbg !13148
  %11 = icmp eq i32 %10, 0, !dbg !13149
  br i1 %11, label %13, label %12, !dbg !13150

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.217, i32 0, i32 0), i32 noundef 69) #24, !dbg !13151
  br label %13, !dbg !13157

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #25, !dbg !13158
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.218, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #24, !dbg !13158
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !13163
  %15 = icmp eq i32 %0, 4, !dbg !13164
  br i1 %15, label %16, label %17, !dbg !13169

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.221, i32 0, i32 0), i32 noundef 148) #24, !dbg !13170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.222, i32 0, i32 0)) #24, !dbg !13170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.221, i32 0, i32 0), i32 noundef 148) #24, !dbg !13170
  unreachable, !dbg !13170

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %18, metadata !13091, metadata !DIExpression()) #23, !dbg !13130
  call void @llvm.dbg.value(metadata i32 %18, metadata !13125, metadata !DIExpression()), !dbg !13127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13172, metadata !DIExpression()) #23, !dbg !13175
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13177, !srcloc !13178
  tail call fastcc void @k_thread_abort.223(%struct.k_thread* noundef %4) #25, !dbg !13179
  ret void, !dbg !13182
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.215() unnamed_addr #12 !dbg !13183 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.231() #26, !dbg !13187
  ret %struct.k_thread* %1, !dbg !13188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !13189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13193, metadata !DIExpression()), !dbg !13194
  %2 = icmp ult i32 %0, 5, !dbg !13195
  br i1 %2, label %3, label %6, !dbg !13195

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13195
  %5 = load i8*, i8** %4, align 4, !dbg !13195
  br label %6, !dbg !13195

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.225, i32 0, i32 0), %1 ], !dbg !13196
  ret i8* %7, !dbg !13198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13199 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13203, metadata !DIExpression()), !dbg !13205
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13206
  br i1 %2, label %9, label %3, !dbg !13207

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !13208
  call void @llvm.dbg.value(metadata i8* %4, metadata !13204, metadata !DIExpression()), !dbg !13205
  %5 = icmp eq i8* %4, null, !dbg !13209
  br i1 %5, label %9, label %6, !dbg !13211

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13212
  %8 = icmp eq i8 %7, 0, !dbg !13213
  br i1 %8, label %9, label %10, !dbg !13214

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.224, i32 0, i32 0), metadata !13204, metadata !DIExpression()), !dbg !13205
  br label %10, !dbg !13215

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.224, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13205
  call void @llvm.dbg.value(metadata i8* %11, metadata !13204, metadata !DIExpression()), !dbg !13205
  ret i8* %11, !dbg !13217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.223(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13222, metadata !DIExpression()), !dbg !13223
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13224, !srcloc !13226
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !13227
  ret void, !dbg !13228
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.231() unnamed_addr #12 !dbg !13229 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13230, !srcloc !13232
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !13233
  ret %struct.k_thread* %1, !dbg !13234
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13235 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13239, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata i32 %1, metadata !13240, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.value(metadata i32 %2, metadata !13241, metadata !DIExpression()), !dbg !13242
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13245 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13249, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata i8* %1, metadata !13250, metadata !DIExpression()), !dbg !13252
  call void @llvm.dbg.value(metadata i32 %2, metadata !13251, metadata !DIExpression()), !dbg !13252
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !13253
  ret void, !dbg !13254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13255 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !13256
  ret void, !dbg !13257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13262, metadata !DIExpression()), !dbg !13263
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !13264
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13265
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13266
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13267
  %4 = trunc i32 %0 to i8, !dbg !13268
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13269
  store i8 %4, i8* %5, align 4, !dbg !13270
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13271
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !13272
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13273
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13274
  store i8* %8, i8** %9, align 4, !dbg !13275
  ret void, !dbg !13276
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13279, metadata !DIExpression()), !dbg !13285
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13286
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13280, metadata !DIExpression()), !dbg !13285
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13287
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13281, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.value(metadata i8* null, metadata !13284, metadata !DIExpression()), !dbg !13285
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13288
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13289
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !13290
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !13291
  ret void, !dbg !13292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13293 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13297, metadata !DIExpression()), !dbg !13298
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !13299
  ret i8* %2, !dbg !13300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !13301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13306, metadata !DIExpression()), !dbg !13307
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13308
  %3 = load i8, i8* %2, align 1, !dbg !13309
  %4 = and i8 %3, -5, !dbg !13309
  store i8 %4, i8* %2, align 1, !dbg !13309
  ret void, !dbg !13310
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !13311 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !13314
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !13315
  %3 = ptrtoint i8* %2 to i32, !dbg !13324
  %4 = add i32 %3, 2048, !dbg !13325
  call void @llvm.dbg.value(metadata i32 %4, metadata !13319, metadata !DIExpression()) #23, !dbg !13326
  call void @llvm.dbg.value(metadata i32 %4, metadata !13327, metadata !DIExpression()) #23, !dbg !13330
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13332, !srcloc !13333
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13334
  %6 = or i32 %5, 512, !dbg !13334
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13334
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -2, i32 noundef 255) #24, !dbg !13335
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -5, i32 noundef 0) #24, !dbg !13338
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -12, i32 noundef 0) #24, !dbg !13339
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -11, i32 noundef 0) #24, !dbg !13340
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -10, i32 noundef 0) #24, !dbg !13341
  tail call fastcc void @__NVIC_SetPriority.240(i32 noundef -4, i32 noundef 0) #24, !dbg !13342
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13343
  %8 = or i32 %7, 458752, !dbg !13343
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13343
  tail call void @z_arm_fault_init() #24, !dbg !13344
  tail call void @z_arm_cpu_idle_init() #24, !dbg !13345
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13346
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13349
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !13350
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #23, !dbg !13350
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13313, metadata !DIExpression()), !dbg !13351
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !13352
  call void @z_device_state_init() #24, !dbg !13353
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !13354
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !13355
  %10 = call fastcc i8* @prepare_multithreading() #25, !dbg !13356
  call fastcc void @switch_to_main_thread(i8* noundef %10) #28, !dbg !13357
  unreachable, !dbg !13357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2682, metadata !DIExpression()), !dbg !13358
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13359
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13359
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2683, metadata !DIExpression()), !dbg !13358
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2683, metadata !DIExpression()), !dbg !13358
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13360
  br i1 %7, label %8, label %35, !dbg !13361

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2683, metadata !DIExpression()), !dbg !13358
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13362
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13362
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2693, metadata !DIExpression()), !dbg !13363
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13364
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13364
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !13365
  call void @llvm.dbg.value(metadata i32 %14, metadata !2697, metadata !DIExpression()), !dbg !13363
  %15 = icmp eq %struct.device* %11, null, !dbg !13366
  br i1 %15, label %32, label %16, !dbg !13368

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13369
  br i1 %17, label %26, label %18, !dbg !13372

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13373
  call void @llvm.dbg.value(metadata i32 %19, metadata !2697, metadata !DIExpression()), !dbg !13363
  %20 = icmp ult i32 %19, 255, !dbg !13375
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13375
  call void @llvm.dbg.value(metadata i32 %21, metadata !2697, metadata !DIExpression()), !dbg !13363
  %22 = trunc i32 %21 to i8, !dbg !13376
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13377
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13377
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13378
  store i8 %22, i8* %25, align 1, !dbg !13379
  br label %26, !dbg !13380

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13381
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13381
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13382
  %30 = load i8, i8* %29, align 1, !dbg !13383
  %31 = or i8 %30, 1, !dbg !13383
  store i8 %31, i8* %29, align 1, !dbg !13383
  br label %32, !dbg !13384

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13385
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2683, metadata !DIExpression()), !dbg !13358
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13360
  br i1 %34, label %8, label %35, !dbg !13361, !llvm.loop !13386

35:                                               ; preds = %32, %1
  ret void, !dbg !13388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.240(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !13389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13391, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.value(metadata i32 %1, metadata !13392, metadata !DIExpression()), !dbg !13393
  %3 = trunc i32 %1 to i8, !dbg !13394
  %4 = shl i8 %3, 4, !dbg !13394
  %5 = and i32 %0, 15, !dbg !13397
  %6 = add nsw i32 %5, -4, !dbg !13398
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13399
  store volatile i8 %4, i8* %7, align 1, !dbg !13400
  ret void, !dbg !13401
}

; Function Attrs: optsize
declare !dbg !13402 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !13403 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13406, metadata !DIExpression()), !dbg !13407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13408
  store i8 1, i8* %2, align 1, !dbg !13409
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13410
  store i8 1, i8* %3, align 4, !dbg !13411
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !13412
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !13413
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13414
  ret void, !dbg !13415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13416 {
  tail call void @z_sched_init() #24, !dbg !13421
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13422
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.241, i32 0, i32 0)) #24, !dbg !13423
  call void @llvm.dbg.value(metadata i8* %1, metadata !13420, metadata !DIExpression()), !dbg !13424
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13425
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13426
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !13427
  ret i8* %1, !dbg !13428
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !13429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13433, metadata !DIExpression()), !dbg !13434
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !13435
  unreachable, !dbg !13436
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13439, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i8* %1, metadata !13440, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.value(metadata i8* %2, metadata !13441, metadata !DIExpression()), !dbg !13442
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13443
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !13444
  tail call void @boot_banner() #24, !dbg !13445
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !13446
  tail call void @z_init_static_threads() #24, !dbg !13447
  tail call void @main() #24, !dbg !13448
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13449
  %5 = and i8 %4, -2, !dbg !13449
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13449
  ret void, !dbg !13450
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define internal i32 @init_mem_slab_module(%struct.device* nocapture noundef readnone %0) #1 !dbg !13451 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13453, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.value(metadata i32 0, metadata !13454, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), metadata !13455, metadata !DIExpression()), !dbg !13477
  br i1 icmp ugt (%struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), %struct.k_mem_slab* getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0)), label %4, label %5, !dbg !13478

2:                                                ; preds = %8
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %11, metadata !13455, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.value(metadata i32 0, metadata !13454, metadata !DIExpression()), !dbg !13476
  %3 = icmp ugt %struct.k_mem_slab* %11, getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0), !dbg !13482
  br i1 %3, label %4, label %5, !dbg !13478, !llvm.loop !13484

4:                                                ; preds = %2, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.245, i32 0, i32 0), i32 noundef 61) #24, !dbg !13487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.246, i32 0, i32 0)) #24, !dbg !13487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.245, i32 0, i32 0), i32 noundef 61) #24, !dbg !13487
  unreachable, !dbg !13487

5:                                                ; preds = %1, %2
  %6 = phi %struct.k_mem_slab* [ %11, %2 ], [ getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %6, metadata !13455, metadata !DIExpression()), !dbg !13477
  %7 = icmp ult %struct.k_mem_slab* %6, getelementptr inbounds ([0 x %struct.k_mem_slab], [0 x %struct.k_mem_slab]* @_k_mem_slab_list_end, i32 0, i32 0), !dbg !13489
  br i1 %7, label %8, label %12, !dbg !13485

8:                                                ; preds = %5
  %9 = tail call fastcc i32 @create_free_list(%struct.k_mem_slab* noundef %6) #25, !dbg !13490
  call void @llvm.dbg.value(metadata i32 %9, metadata !13454, metadata !DIExpression()), !dbg !13476
  %10 = icmp slt i32 %9, 0, !dbg !13492
  %11 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %6, i32 1, !dbg !13494
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %11, metadata !13455, metadata !DIExpression()), !dbg !13477
  br i1 %10, label %12, label %2, !dbg !13495

12:                                               ; preds = %8, %5
  %13 = phi i32 [ 0, %5 ], [ %9, %8 ], !dbg !13476
  call void @llvm.dbg.value(metadata i32 %13, metadata !13454, metadata !DIExpression()), !dbg !13476
  ret i32 %13, !dbg !13496
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @create_free_list(%struct.k_mem_slab* nocapture noundef %0) unnamed_addr #15 !dbg !13497 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !13501, metadata !DIExpression()), !dbg !13504
  %2 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !13505
  %3 = load i32, i32* %2, align 4, !dbg !13505
  %4 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 4, !dbg !13505
  %5 = load i8*, i8** %4, align 4, !dbg !13505
  %6 = ptrtoint i8* %5 to i32, !dbg !13505
  %7 = or i32 %3, %6, !dbg !13505
  %8 = and i32 %7, 3, !dbg !13505
  %9 = icmp eq i32 %8, 0, !dbg !13505
  br i1 %9, label %10, label %25, !dbg !13507

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !13508
  store i8* null, i8** %11, align 4, !dbg !13509
  call void @llvm.dbg.value(metadata i8* %5, metadata !13503, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.value(metadata i32 0, metadata !13502, metadata !DIExpression()), !dbg !13504
  %12 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2
  call void @llvm.dbg.value(metadata i8* %5, metadata !13503, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.value(metadata i32 0, metadata !13502, metadata !DIExpression()), !dbg !13504
  %13 = load i32, i32* %12, align 4, !dbg !13510
  %14 = icmp eq i32 %13, 0, !dbg !13513
  br i1 %14, label %25, label %15, !dbg !13514

15:                                               ; preds = %10, %15
  %16 = phi i8* [ %17, %15 ], [ null, %10 ], !dbg !13515
  %17 = phi i8* [ %21, %15 ], [ %5, %10 ]
  %18 = phi i32 [ %22, %15 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !13503, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.value(metadata i32 %18, metadata !13502, metadata !DIExpression()), !dbg !13504
  %19 = bitcast i8* %17 to i8**, !dbg !13517
  store i8* %16, i8** %19, align 4, !dbg !13518
  store i8* %17, i8** %11, align 4, !dbg !13519
  %20 = load i32, i32* %2, align 4, !dbg !13520
  %21 = getelementptr inbounds i8, i8* %17, i32 %20, !dbg !13521
  call void @llvm.dbg.value(metadata i8* %21, metadata !13503, metadata !DIExpression()), !dbg !13504
  %22 = add nuw i32 %18, 1, !dbg !13522
  call void @llvm.dbg.value(metadata i32 %22, metadata !13502, metadata !DIExpression()), !dbg !13504
  %23 = load i32, i32* %12, align 4, !dbg !13510
  %24 = icmp ult i32 %22, %23, !dbg !13513
  br i1 %24, label %15, label %25, !dbg !13514, !llvm.loop !13523

25:                                               ; preds = %15, %10, %1
  %26 = phi i32 [ -22, %1 ], [ 0, %10 ], [ 0, %15 ], !dbg !13504
  ret i32 %26, !dbg !13525
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @k_mem_slab_init(%struct.k_mem_slab* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !13526 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !13530, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata i8* %1, metadata !13531, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata i32 %2, metadata !13532, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata i32 %3, metadata !13533, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata i32 0, metadata !13534, metadata !DIExpression()), !dbg !13536
  %5 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2, !dbg !13537
  store i32 %3, i32* %5, align 4, !dbg !13538
  %6 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !13539
  store i32 %2, i32* %6, align 4, !dbg !13540
  %7 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 4, !dbg !13541
  store i8* %1, i8** %7, align 4, !dbg !13542
  %8 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !13543
  store i32 0, i32* %8, align 4, !dbg !13544
  %9 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, i32 0, !dbg !13545
  store i32 0, i32* %9, align 4, !dbg !13545
  %10 = tail call fastcc i32 @create_free_list(%struct.k_mem_slab* noundef %0) #25, !dbg !13546
  call void @llvm.dbg.value(metadata i32 %10, metadata !13534, metadata !DIExpression()), !dbg !13536
  %11 = icmp slt i32 %10, 0, !dbg !13547
  br i1 %11, label %14, label %12, !dbg !13549

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !13550
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef %13) #25, !dbg !13551
  br label %14, !dbg !13552

14:                                               ; preds = %12, %4
  call void @llvm.dbg.label(metadata !13535), !dbg !13553
  ret i32 %10, !dbg !13554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !13555 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13561, metadata !DIExpression()), !dbg !13562
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13563
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13564
  ret void, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13566 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13571, metadata !DIExpression()), !dbg !13572
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13573
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13574
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13575
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13576
  ret void, !dbg !13577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_mem_slab_alloc(%struct.k_mem_slab* noundef %0, i8** nocapture noundef writeonly %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13578 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13588, metadata !DIExpression()), !dbg !13595
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !13586, metadata !DIExpression()), !dbg !13595
  call void @llvm.dbg.value(metadata i8** %1, metadata !13587, metadata !DIExpression()), !dbg !13595
  %4 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !13596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !13597, metadata !DIExpression()) #23, !dbg !13604
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13606, !srcloc !13612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13609, metadata !DIExpression()) #23, !dbg !13613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13610, metadata !DIExpression()) #23, !dbg !13613
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #23, !dbg !13604
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %4) #24, !dbg !13614
  br i1 %6, label %8, label %7, !dbg !13617

7:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %4) #24, !dbg !13618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13618
  unreachable, !dbg !13618

8:                                                ; preds = %3
  %9 = extractvalue { i32, i32 } %5, 0, !dbg !13606
  call void @llvm.dbg.value(metadata i32 %9, metadata !13609, metadata !DIExpression()) #23, !dbg !13613
  call void @llvm.dbg.value(metadata i32 %9, metadata !13603, metadata !DIExpression()) #23, !dbg !13604
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %4) #24, !dbg !13620
  call void @llvm.dbg.value(metadata i32 %9, metadata !13589, metadata !DIExpression()), !dbg !13595
  %10 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !13621
  %11 = load i8*, i8** %10, align 4, !dbg !13621
  %12 = icmp eq i8* %11, null, !dbg !13623
  br i1 %12, label %20, label %13, !dbg !13624

13:                                               ; preds = %8
  store i8* %11, i8** %1, align 4, !dbg !13625
  %14 = bitcast i8** %10 to i8***, !dbg !13627
  %15 = load i8**, i8*** %14, align 4, !dbg !13627
  %16 = load i8*, i8** %15, align 4, !dbg !13628
  store i8* %16, i8** %10, align 4, !dbg !13629
  %17 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !13630
  %18 = load i32, i32* %17, align 4, !dbg !13631
  %19 = add i32 %18, 1, !dbg !13631
  store i32 %19, i32* %17, align 4, !dbg !13631
  call void @llvm.dbg.value(metadata i32 0, metadata !13594, metadata !DIExpression()), !dbg !13595
  br label %33, !dbg !13632

20:                                               ; preds = %8
  %21 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %21, metadata !13588, metadata !DIExpression()), !dbg !13595
  %22 = icmp eq i64 %21, 0, !dbg !13633
  br i1 %22, label %23, label %24, !dbg !13635

23:                                               ; preds = %20
  store i8* null, i8** %1, align 4, !dbg !13636
  call void @llvm.dbg.value(metadata i32 -12, metadata !13594, metadata !DIExpression()), !dbg !13595
  br label %33

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !13638
  %26 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !13640
  %27 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %26, %struct._wait_q_t* noundef %25, [1 x i64] %2) #24, !dbg !13640
  call void @llvm.dbg.value(metadata i32 %27, metadata !13594, metadata !DIExpression()), !dbg !13595
  %28 = icmp eq i32 %27, 0, !dbg !13641
  br i1 %28, label %29, label %38, !dbg !13643

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13644
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !13646
  %32 = load i8*, i8** %31, align 4, !dbg !13646
  store i8* %32, i8** %1, align 4, !dbg !13647
  br label %38, !dbg !13648

33:                                               ; preds = %13, %23
  %34 = phi i32 [ 0, %13 ], [ -12, %23 ], !dbg !13649
  call void @llvm.dbg.value(metadata i32 %34, metadata !13594, metadata !DIExpression()), !dbg !13595
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #23, !dbg !13656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !13655, metadata !DIExpression()) #23, !dbg !13656
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %4) #24, !dbg !13658
  br i1 %35, label %37, label %36, !dbg !13661

36:                                               ; preds = %33
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13662
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %4) #24, !dbg !13662
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13662
  unreachable, !dbg !13662

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %9, metadata !13650, metadata !DIExpression()) #23, !dbg !13656
  call void @llvm.dbg.value(metadata i32 %9, metadata !13664, metadata !DIExpression()) #23, !dbg !13667
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13669, !srcloc !13670
  br label %38, !dbg !13671

38:                                               ; preds = %29, %24, %37
  %39 = phi i32 [ %34, %37 ], [ %27, %24 ], [ 0, %29 ], !dbg !13595
  ret i32 %39, !dbg !13672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_mem_slab_free(%struct.k_mem_slab* noundef %0, i8** nocapture noundef readonly %1) local_unnamed_addr #1 !dbg !13673 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !13677, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.value(metadata i8** %1, metadata !13678, metadata !DIExpression()), !dbg !13756
  %3 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !13757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13597, metadata !DIExpression()) #23, !dbg !13758
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13760, !srcloc !13612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13609, metadata !DIExpression()) #23, !dbg !13762
  call void @llvm.dbg.value(metadata i32 undef, metadata !13610, metadata !DIExpression()) #23, !dbg !13762
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #23, !dbg !13758
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !13763
  br i1 %5, label %7, label %6, !dbg !13764

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !13765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13765
  unreachable, !dbg !13765

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !13760
  call void @llvm.dbg.value(metadata i32 %8, metadata !13609, metadata !DIExpression()) #23, !dbg !13762
  call void @llvm.dbg.value(metadata i32 %8, metadata !13603, metadata !DIExpression()) #23, !dbg !13758
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !13766
  call void @llvm.dbg.value(metadata i32 %8, metadata !13679, metadata !DIExpression()), !dbg !13756
  %9 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 5, !dbg !13767
  %10 = load i8*, i8** %9, align 4, !dbg !13767
  %11 = icmp eq i8* %10, null, !dbg !13768
  br i1 %11, label %12, label %23, !dbg !13769

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 0, !dbg !13770
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #24, !dbg !13771
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13680, metadata !DIExpression()), !dbg !13772
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13773
  br i1 %15, label %16, label %18, !dbg !13775

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !13776
  br label %23, !dbg !13775

18:                                               ; preds = %12
  %19 = load i8*, i8** %1, align 4, !dbg !13777
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13779, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i32 0, metadata !13785, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata i8* %19, metadata !13786, metadata !DIExpression()), !dbg !13787
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13789, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 0, metadata !13794, metadata !DIExpression()), !dbg !13795
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 6, i32 1, !dbg !13797
  store i32 0, i32* %20, align 4, !dbg !13798
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13799
  store i8* %19, i8** %21, align 4, !dbg !13800
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #24, !dbg !13801
  %22 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13802
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %22) #24, !dbg !13802
  br label %34

23:                                               ; preds = %16, %7
  %24 = phi i8* [ %17, %16 ], [ %10, %7 ], !dbg !13776
  %25 = bitcast i8** %1 to i8***, !dbg !13803
  %26 = load i8**, i8*** %25, align 4, !dbg !13803
  store i8* %24, i8** %26, align 4, !dbg !13804
  %27 = load i8*, i8** %1, align 4, !dbg !13805
  store i8* %27, i8** %9, align 4, !dbg !13806
  %28 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !13807
  %29 = load i32, i32* %28, align 4, !dbg !13808
  %30 = add i32 %29, -1, !dbg !13808
  store i32 %30, i32* %28, align 4, !dbg !13808
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #23, !dbg !13809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13655, metadata !DIExpression()) #23, !dbg !13809
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !13811
  br i1 %31, label %33, label %32, !dbg !13812

32:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13813
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !13813
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13813
  unreachable, !dbg !13813

33:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 %8, metadata !13650, metadata !DIExpression()) #23, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %8, metadata !13664, metadata !DIExpression()) #23, !dbg !13814
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13816, !srcloc !13670
  br label %34, !dbg !13817

34:                                               ; preds = %18, %33
  ret void, !dbg !13817
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_mem_slab_runtime_stats_get(%struct.k_mem_slab* noundef %0, %struct.sensor_msg* noundef writeonly %1) local_unnamed_addr #1 !dbg !13818 {
  call void @llvm.dbg.value(metadata %struct.k_mem_slab* %0, metadata !13829, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata %struct.sensor_msg* %1, metadata !13830, metadata !DIExpression()), !dbg !13832
  %3 = icmp eq %struct.k_mem_slab* %0, null, !dbg !13833
  %4 = icmp eq %struct.sensor_msg* %1, null
  %5 = or i1 %3, %4, !dbg !13835
  br i1 %5, label %30, label %6, !dbg !13835

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 1, !dbg !13836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %7, metadata !13597, metadata !DIExpression()) #23, !dbg !13837
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13839, !srcloc !13612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13609, metadata !DIExpression()) #23, !dbg !13841
  call void @llvm.dbg.value(metadata i32 undef, metadata !13610, metadata !DIExpression()) #23, !dbg !13841
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #23, !dbg !13837
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %7) #24, !dbg !13842
  br i1 %9, label %11, label %10, !dbg !13843

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13844
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.251, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %7) #24, !dbg !13844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 148) #24, !dbg !13844
  unreachable, !dbg !13844

11:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !13609, metadata !DIExpression()) #23, !dbg !13841
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #23, !dbg !13837
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %7) #24, !dbg !13845
  call void @llvm.dbg.value(metadata i32 undef, metadata !13831, metadata !DIExpression()), !dbg !13832
  %12 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 6, !dbg !13846
  %13 = load i32, i32* %12, align 4, !dbg !13846
  %14 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 3, !dbg !13847
  %15 = load i32, i32* %14, align 4, !dbg !13847
  %16 = mul i32 %15, %13, !dbg !13848
  %17 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 1, !dbg !13849
  store i32 %16, i32* %17, align 4, !dbg !13850
  %18 = getelementptr inbounds %struct.k_mem_slab, %struct.k_mem_slab* %0, i32 0, i32 2, !dbg !13851
  %19 = load i32, i32* %18, align 4, !dbg !13851
  %20 = load i32, i32* %12, align 4, !dbg !13852
  %21 = sub i32 %19, %20, !dbg !13853
  %22 = load i32, i32* %14, align 4, !dbg !13854
  %23 = mul i32 %21, %22, !dbg !13855
  %24 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 0, !dbg !13856
  store i32 %23, i32* %24, align 4, !dbg !13857
  %25 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 2, !dbg !13858
  store i32 0, i32* %25, align 4, !dbg !13859
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #23, !dbg !13860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %7, metadata !13655, metadata !DIExpression()) #23, !dbg !13860
  %26 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %7) #24, !dbg !13862
  br i1 %26, label %28, label %27, !dbg !13863

27:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %7) #24, !dbg !13864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.250, i32 0, i32 0), i32 noundef 194) #24, !dbg !13864
  unreachable, !dbg !13864

28:                                               ; preds = %11
  %29 = extractvalue { i32, i32 } %8, 0, !dbg !13839
  call void @llvm.dbg.value(metadata i32 %29, metadata !13609, metadata !DIExpression()) #23, !dbg !13841
  call void @llvm.dbg.value(metadata i32 %29, metadata !13603, metadata !DIExpression()) #23, !dbg !13837
  call void @llvm.dbg.value(metadata i32 %29, metadata !13831, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata i32 undef, metadata !13650, metadata !DIExpression()) #23, !dbg !13860
  call void @llvm.dbg.value(metadata i32 undef, metadata !13664, metadata !DIExpression()) #23, !dbg !13865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13867, !srcloc !13670
  br label %30

30:                                               ; preds = %2, %28
  %31 = phi i32 [ 0, %28 ], [ -22, %2 ], !dbg !13832
  ret i32 %31, !dbg !13868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13869 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13879, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i8* %1, metadata !13880, metadata !DIExpression()), !dbg !13881
  ret void, !dbg !13882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13883 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13885, metadata !DIExpression()), !dbg !13887
  call void @llvm.dbg.value(metadata i8* %1, metadata !13886, metadata !DIExpression()), !dbg !13887
  ret void, !dbg !13888
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13889 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13890, !srcloc !13897
  call void @llvm.dbg.value(metadata i32 %1, metadata !13893, metadata !DIExpression()) #23, !dbg !13898
  %2 = icmp ne i32 %1, 0, !dbg !13899
  ret i1 %2, !dbg !13900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13901 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13902
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13903
  %3 = load i8, i8* %2, align 4, !dbg !13904
  %4 = or i8 %3, 1, !dbg !13904
  store i8 %4, i8* %2, align 4, !dbg !13904
  ret void, !dbg !13905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13906 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13907
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13908
  %3 = load i8, i8* %2, align 4, !dbg !13909
  %4 = and i8 %3, -2, !dbg !13909
  store i8 %4, i8* %2, align 4, !dbg !13909
  ret void, !dbg !13910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13911 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13912
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13913
  %3 = load i8, i8* %2, align 4, !dbg !13913
  %4 = and i8 %3, 1, !dbg !13914
  %5 = icmp ne i8 %4, 0, !dbg !13915
  ret i1 %5, !dbg !13916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !13917 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13921, metadata !DIExpression()), !dbg !13923
  call void @llvm.dbg.value(metadata i8* %1, metadata !13922, metadata !DIExpression()), !dbg !13923
  ret i32 -88, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !13925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13929, metadata !DIExpression()), !dbg !13930
  ret i8* null, !dbg !13931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #6 !dbg !13932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13936, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i8* %1, metadata !13937, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 %2, metadata !13938, metadata !DIExpression()), !dbg !13939
  ret i32 -88, !dbg !13940
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2734 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2845, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i8* %1, metadata !2846, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 %2, metadata !2847, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 0, metadata !2848, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i8 undef, metadata !2850, metadata !DIExpression()), !dbg !13941
  %4 = icmp eq i8* %1, null, !dbg !13942
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13944
  br i1 %6, label %46, label %7, !dbg !13944

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13945
  %9 = load i8, i8* %8, align 1, !dbg !13945
  call void @llvm.dbg.value(metadata i8 %9, metadata !2850, metadata !DIExpression()), !dbg !13941
  %10 = add i32 %2, -1, !dbg !13946
  call void @llvm.dbg.value(metadata i32 %10, metadata !2847, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i8 0, metadata !2851, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i8 %9, metadata !2850, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 0, metadata !2848, metadata !DIExpression()), !dbg !13941
  %11 = icmp eq i8 %9, 0, !dbg !13948
  br i1 %11, label %12, label %15, !dbg !13950

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13951
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13952
  store i8 0, i8* %14, align 1, !dbg !13953
  br label %46, !dbg !13954

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2851, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i8 %17, metadata !2850, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 %18, metadata !2848, metadata !DIExpression()), !dbg !13941
  %19 = zext i8 %17 to i32, !dbg !13955
  %20 = zext i8 %16 to i32, !dbg !13956
  %21 = shl nuw i32 1, %20, !dbg !13956
  call void @llvm.dbg.value(metadata i32 %21, metadata !2849, metadata !DIExpression()), !dbg !13941
  %22 = and i32 %21, %19, !dbg !13958
  %23 = icmp eq i32 %22, 0, !dbg !13960
  br i1 %23, label %42, label %24, !dbg !13961

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13962
  %26 = sub i32 %10, %18, !dbg !13963
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13964
  %28 = load i8*, i8** %27, align 4, !dbg !13964
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13965
  %30 = load i32, i32* %29, align 4, !dbg !13965
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13966
  %32 = add i32 %31, %18, !dbg !13967
  call void @llvm.dbg.value(metadata i32 %32, metadata !2848, metadata !DIExpression()), !dbg !13941
  %33 = trunc i32 %21 to i8, !dbg !13968
  %34 = xor i8 %33, -1, !dbg !13968
  %35 = and i8 %17, %34, !dbg !13968
  call void @llvm.dbg.value(metadata i8 %35, metadata !2850, metadata !DIExpression()), !dbg !13941
  %36 = icmp eq i8 %35, 0, !dbg !13969
  br i1 %36, label %12, label %37, !dbg !13971

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13972
  %39 = sub i32 %10, %32, !dbg !13974
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.260, i32 0, i32 0), i32 noundef 1) #25, !dbg !13975
  %41 = add i32 %40, %32, !dbg !13976
  call void @llvm.dbg.value(metadata i32 %41, metadata !2848, metadata !DIExpression()), !dbg !13941
  br label %42, !dbg !13977

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13941
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13941
  call void @llvm.dbg.value(metadata i8 %44, metadata !2850, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 %43, metadata !2848, metadata !DIExpression()), !dbg !13941
  %45 = add i8 %16, 1, !dbg !13978
  call void @llvm.dbg.value(metadata i8 %45, metadata !2851, metadata !DIExpression()), !dbg !13947
  br label %15, !dbg !13950

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.261, i32 0, i32 0), %3 ], !dbg !13941
  ret i8* %47, !dbg !13979
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13984, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i32 %1, metadata !13985, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i8* %2, metadata !13986, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.value(metadata i32 %3, metadata !13987, metadata !DIExpression()), !dbg !13989
  %5 = icmp ult i32 %1, %3, !dbg !13990
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13990
  call void @llvm.dbg.value(metadata i32 %6, metadata !13988, metadata !DIExpression()), !dbg !13989
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13991
  ret i32 %6, !dbg !13992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13997, metadata !DIExpression()), !dbg !13998
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13999
  ret void, !dbg !14000
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14010, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14011, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %2, metadata !14012, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14013, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %4, metadata !14014, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %5, metadata !14015, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %6, metadata !14016, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %7, metadata !14017, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %8, metadata !14018, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* undef, metadata !14019, metadata !DIExpression()), !dbg !14021
  %11 = icmp eq i32 %7, 15, !dbg !14022
  br i1 %11, label %12, label %15, !dbg !14022

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14022
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !14022
  br i1 %14, label %19, label %18, !dbg !14022

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14022
  %17 = icmp ult i32 %16, 31, !dbg !14022
  br i1 %17, label %19, label %18, !dbg !14022

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 536) #24, !dbg !14026
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.274, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !14026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 536) #24, !dbg !14026
  unreachable, !dbg !14026

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14028
  tail call fastcc void @z_waitq_init.275(%struct._wait_q_t* noundef nonnull %20) #25, !dbg !14029
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14030
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !14031
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !14032
  call void @llvm.dbg.value(metadata i8* %22, metadata !14020, metadata !DIExpression()), !dbg !14021
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !14033
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14034
  store i8* null, i8** %23, align 4, !dbg !14035
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14036
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !14036
  br i1 %25, label %29, label %26, !dbg !14038

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 5, !dbg !14039
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 4, !dbg !14039
  br label %29, !dbg !14040

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !14021
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !14041
  store %struct.k_heap* %30, %struct.k_heap** %31, align 4, !dbg !14043
  ret i8* %22, !dbg !14044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !14045 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14049, metadata !DIExpression()), !dbg !14050
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14051
  ret i1 %2, !dbg !14052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.275(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !14053 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14057, metadata !DIExpression()), !dbg !14058
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14059
  tail call fastcc void @sys_dlist_init.276(%struct._dnode* noundef %2) #25, !dbg !14060
  ret void, !dbg !14061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !14062 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14067, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %1, metadata !14068, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %2, metadata !14069, metadata !DIExpression()), !dbg !14071
  call void @llvm.dbg.value(metadata i32 %3, metadata !14070, metadata !DIExpression()), !dbg !14071
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14072
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !14073
  %6 = trunc i32 %3 to i8, !dbg !14074
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14075
  store i8 %6, i8* %7, align 4, !dbg !14076
  %8 = trunc i32 %2 to i8, !dbg !14077
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14078
  store i8 %8, i8* %9, align 1, !dbg !14079
  %10 = trunc i32 %1 to i8, !dbg !14080
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14081
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14081
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14081
  store i8 %10, i8* %13, align 2, !dbg !14082
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14083
  store i8 0, i8* %14, align 1, !dbg !14084
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !14085
  ret void, !dbg !14086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !14087 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14091, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14092, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 %1, metadata !14093, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 0, metadata !14098, metadata !DIExpression()), !dbg !14099
  %3 = add i32 %1, 7, !dbg !14100
  %4 = and i32 %3, -8, !dbg !14100
  call void @llvm.dbg.value(metadata i32 %4, metadata !14094, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i8* undef, metadata !14097, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 %4, metadata !14095, metadata !DIExpression()), !dbg !14099
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !14102
  call void @llvm.dbg.value(metadata i8* %5, metadata !14096, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 0, metadata !14098, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i8* %5, metadata !14096, metadata !DIExpression()), !dbg !14099
  ret i8* %5, !dbg !14103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14104 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14109, metadata !DIExpression()), !dbg !14110
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14111
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14112
  ret void, !dbg !14113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14114 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14116, metadata !DIExpression()), !dbg !14117
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14118
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !14119
  ret void, !dbg !14120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14121 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14125, metadata !DIExpression()), !dbg !14126
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14127
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14128
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14129
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14130
  ret void, !dbg !14131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.276(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14132 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14137, metadata !DIExpression()), !dbg !14138
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14139
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14140
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14141
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14142
  ret void, !dbg !14143
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14144 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14161, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14152, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14153, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i32 %2, metadata !14154, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14155, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i8* %4, metadata !14156, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i8* %5, metadata !14157, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i8* %6, metadata !14158, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i32 %7, metadata !14159, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i32 %8, metadata !14160, metadata !DIExpression()), !dbg !14162
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14163, !srcloc !13897
  call void @llvm.dbg.value(metadata i32 %11, metadata !13893, metadata !DIExpression()) #23, !dbg !14168
  %12 = icmp eq i32 %11, 0, !dbg !14169
  br i1 %12, label %14, label %13, !dbg !14170

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 647) #24, !dbg !14171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.278, i32 0, i32 0)) #24, !dbg !14171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 647) #24, !dbg !14171
  unreachable, !dbg !14171

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14161, metadata !DIExpression()), !dbg !14162
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !14173
  %17 = icmp eq i64 %15, -1, !dbg !14174
  br i1 %17, label %19, label %18, !dbg !14176

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !14177
  br label %19, !dbg !14179

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14181 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14186, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14185, metadata !DIExpression()), !dbg !14187
  %4 = icmp eq i64 %3, 0, !dbg !14188
  br i1 %4, label %5, label %6, !dbg !14190

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !14191
  br label %7, !dbg !14193

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14194
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14201, metadata !DIExpression()), !dbg !14202
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14203, !srcloc !14205
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14208 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14211, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()), !dbg !14212
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14213
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14214
  ret void, !dbg !14215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14216 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14218, metadata !DIExpression()), !dbg !14237
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14238

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 750) #24, !dbg !14242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.282, i32 0, i32 0)) #24, !dbg !14242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 750) #24, !dbg !14242
  unreachable, !dbg !14242

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14218, metadata !DIExpression()), !dbg !14237
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14245
  br i1 %4, label %6, label %5, !dbg !14246

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !14247
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14235, metadata !DIExpression()), !dbg !14248
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !14249

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14253
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14253
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14255
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14255
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14256
  %12 = load i32, i32* %11, align 4, !dbg !14256
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14257
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14257
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14258
  %16 = load i8*, i8** %15, align 4, !dbg !14258
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14259
  %18 = load i8*, i8** %17, align 4, !dbg !14259
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14260
  %20 = load i8*, i8** %19, align 4, !dbg !14260
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14261
  %22 = load i32, i32* %21, align 4, !dbg !14261
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14262
  %24 = load i32, i32* %23, align 4, !dbg !14262
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #25, !dbg !14263
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14264
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !14265
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !14266
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !14266
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14267
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !14218, metadata !DIExpression()), !dbg !14237
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14268
  br i1 %30, label %1, label %2, !dbg !14238, !llvm.loop !14269

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 781) #24, !dbg !14271
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.282, i32 0, i32 0)) #24, !dbg !14271
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.273, i32 0, i32 0), i32 noundef 781) #24, !dbg !14271
  unreachable, !dbg !14271

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !14235, metadata !DIExpression()), !dbg !14248
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14274
  br i1 %34, label %36, label %35, !dbg !14275

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #24, !dbg !14276
  ret void, !dbg !14277

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !14278
  %38 = load i32, i32* %37, align 4, !dbg !14278
  %39 = icmp eq i32 %38, -1, !dbg !14281
  br i1 %39, label %48, label %40, !dbg !14282

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !14283
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !14283
  %43 = icmp sgt i32 %38, 0, !dbg !14285
  %44 = select i1 %43, i32 %38, i32 0, !dbg !14285
  %45 = zext i32 %44 to i64, !dbg !14285
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.283(i64 noundef %45) #25, !dbg !14285
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !14286
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #25, !dbg !14286
  br label %48, !dbg !14287

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !14288
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !14235, metadata !DIExpression()), !dbg !14248
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14289
  br i1 %50, label %31, label %32, !dbg !14249, !llvm.loop !14290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.283(i64 noundef %0) unnamed_addr #6 !dbg !14292 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14294, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.value(metadata i64 %0, metadata !14296, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i32 1000, metadata !14299, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i32 10000, metadata !14300, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i8 1, metadata !14301, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i8 0, metadata !14302, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i8 1, metadata !14303, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i8 0, metadata !14304, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i8 1, metadata !14305, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i8 0, metadata !14306, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i64 0, metadata !14307, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata i64 0, metadata !14307, metadata !DIExpression()), !dbg !14311
  %2 = mul i64 %0, 10, !dbg !14313
  ret i64 %2, !dbg !14319
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !14320 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14322, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata i8* %1, metadata !14323, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata i8* %2, metadata !14324, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata i8* %3, metadata !14325, metadata !DIExpression()), !dbg !14326
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14327
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14328
  %7 = load i8, i8* %6, align 4, !dbg !14329
  %8 = or i8 %7, 4, !dbg !14329
  store i8 %8, i8* %6, align 4, !dbg !14329
  tail call void @z_thread_essential_clear() #25, !dbg !14330
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14331
  unreachable, !dbg !14331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !14332 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14337, metadata !DIExpression()), !dbg !14339
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14340
  %3 = load i32, i32* %2, align 4, !dbg !14340
  call void @llvm.dbg.value(metadata i32 %3, metadata !14338, metadata !DIExpression()), !dbg !14339
  %4 = icmp eq i32 %3, 0, !dbg !14341
  br i1 %4, label %10, label %5, !dbg !14343

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14344
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14347
  %8 = zext i8 %7 to i32, !dbg !14348
  %9 = icmp eq i32 %6, %8, !dbg !14349
  br i1 %9, label %11, label %10, !dbg !14350

10:                                               ; preds = %5, %1
  br label %11, !dbg !14351

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14339
  ret i1 %12, !dbg !14352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !14353 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14355, metadata !DIExpression()), !dbg !14356
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14357
  %3 = load i32, i32* %2, align 4, !dbg !14357
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14359
  %5 = zext i8 %4 to i32, !dbg !14360
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14361
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14362
  %8 = or i32 %7, %5, !dbg !14363
  %9 = icmp eq i32 %3, %8, !dbg !14364
  br i1 %9, label %10, label %11, !dbg !14365

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14366
  br label %11, !dbg !14367

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !14369 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14373, metadata !DIExpression()), !dbg !14374
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14375
  %3 = zext i8 %2 to i32, !dbg !14376
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14377
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14378
  %6 = or i32 %5, %3, !dbg !14379
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14380
  store i32 %6, i32* %7, align 4, !dbg !14381
  ret void, !dbg !14382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !14383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14387, metadata !DIExpression()), !dbg !14388
  ret i32 -134, !dbg !14389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !14390 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14394, metadata !DIExpression()), !dbg !14396
  call void @llvm.dbg.value(metadata i32 %1, metadata !14395, metadata !DIExpression()), !dbg !14396
  ret i32 -134, !dbg !14397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !14398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14405, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14406, metadata !DIExpression()), !dbg !14407
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14408
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14410
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14407
  ret i32 %6, !dbg !14411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !14412 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14416, metadata !DIExpression()), !dbg !14417
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14418
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14417
  ret i32 %3, !dbg !14420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14421 {
  tail call void @sys_clock_idle_exit() #24, !dbg !14423
  ret void, !dbg !14424
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !14425 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14427, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i8* %1, metadata !14428, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.value(metadata i8* %2, metadata !14429, metadata !DIExpression()), !dbg !14430
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14431
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14431
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14431
  %7 = load i8, i8* %6, align 2, !dbg !14431
  %8 = icmp sgt i8 %7, -1, !dbg !14431
  br i1 %8, label %10, label %9, !dbg !14434

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 39) #24, !dbg !14435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.294, i32 0, i32 0), i32 noundef 39) #24, !dbg !14435
  unreachable, !dbg !14435

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14437, !srcloc !14444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14440, metadata !DIExpression()) #23, !dbg !14445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14441, metadata !DIExpression()) #23, !dbg !14445
  tail call fastcc void @k_cpu_idle() #25, !dbg !14446
  br label %10, !dbg !14447, !llvm.loop !14448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14450 {
  tail call void @arch_cpu_idle() #24, !dbg !14451
  ret void, !dbg !14452
}

; Function Attrs: optsize
declare !dbg !14453 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !14454 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14472, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i8* %1, metadata !14473, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %2, metadata !14474, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata i32 %3, metadata !14475, metadata !DIExpression()), !dbg !14476
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14477
  store i32 %2, i32* %5, align 4, !dbg !14478
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14479
  store i32 %3, i32* %6, align 4, !dbg !14480
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14481
  store i8* %1, i8** %7, align 4, !dbg !14482
  %8 = mul i32 %3, %2, !dbg !14483
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14484
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14485
  store i8* %9, i8** %10, align 4, !dbg !14486
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14487
  store i8* %1, i8** %11, align 4, !dbg !14488
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14489
  store i8* %1, i8** %12, align 4, !dbg !14490
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14491
  store i32 0, i32* %13, align 4, !dbg !14492
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14493
  store i8 0, i8* %14, align 4, !dbg !14494
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14495
  tail call fastcc void @z_waitq_init.295(%struct._wait_q_t* noundef %15) #25, !dbg !14496
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !14497
  store i32 0, i32* %16, align 4, !dbg !14497
  ret void, !dbg !14498
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.295(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !14499 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14503, metadata !DIExpression()), !dbg !14504
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14505
  tail call fastcc void @sys_dlist_init.296(%struct._dnode* noundef %2) #25, !dbg !14506
  ret void, !dbg !14507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.296(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14508 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14513, metadata !DIExpression()), !dbg !14514
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14515
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14516
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14517
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14518
  ret void, !dbg !14519
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14520 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14524, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %1, metadata !14525, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %2, metadata !14526, metadata !DIExpression()), !dbg !14530
  %5 = bitcast i32* %4 to i8*, !dbg !14531
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !14531
  call void @llvm.dbg.value(metadata i32* %4, metadata !14529, metadata !DIExpression(DW_OP_deref)), !dbg !14530
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !14532
  br i1 %6, label %13, label %7, !dbg !14534

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14535
  call void @llvm.dbg.value(metadata i32 %8, metadata !14529, metadata !DIExpression()), !dbg !14530
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #25, !dbg !14537
  call void @llvm.dbg.value(metadata i8* %9, metadata !14527, metadata !DIExpression()), !dbg !14530
  %10 = icmp eq i8* %9, null, !dbg !14538
  br i1 %10, label %13, label %11, !dbg !14540

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #25, !dbg !14541
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14543
  store i8 1, i8* %12, align 4, !dbg !14544
  call void @llvm.dbg.value(metadata i32 0, metadata !14528, metadata !DIExpression()), !dbg !14530
  br label %13, !dbg !14545

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !14546
  call void @llvm.dbg.value(metadata i32 %14, metadata !14528, metadata !DIExpression()), !dbg !14530
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !14547
  ret i32 %14, !dbg !14548
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #20 !dbg !14549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14554, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata i32 %1, metadata !14555, metadata !DIExpression()), !dbg !14557
  call void @llvm.dbg.value(metadata i32* %2, metadata !14556, metadata !DIExpression()), !dbg !14557
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !14558
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !14558
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !14558
  store i32 %6, i32* %2, align 4, !dbg !14558
  ret i1 %5, !dbg !14559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !14560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14563, metadata !DIExpression()), !dbg !14564
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #24, !dbg !14565
  ret i8* %2, !dbg !14566
}

; Function Attrs: optsize
declare !dbg !14567 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14570 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14574, metadata !DIExpression()), !dbg !14575
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14576
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #25, !dbg !14576
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14576
  br i1 %4, label %5, label %15, !dbg !14578

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14579
  %7 = load i8, i8* %6, align 4, !dbg !14579
  %8 = and i8 %7, 1, !dbg !14581
  %9 = icmp eq i8 %8, 0, !dbg !14582
  br i1 %9, label %15, label %10, !dbg !14583

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14584
  %12 = load i8*, i8** %11, align 4, !dbg !14584
  tail call void @k_free(i8* noundef %12) #24, !dbg !14586
  %13 = load i8, i8* %6, align 4, !dbg !14587
  %14 = and i8 %13, -2, !dbg !14587
  store i8 %14, i8* %6, align 4, !dbg !14587
  br label %15, !dbg !14588

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !14575
  ret i32 %16, !dbg !14589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !14590 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14594, metadata !DIExpression()), !dbg !14595
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14596
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !14597
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14598
  ret %struct.k_thread* %4, !dbg !14599
}

; Function Attrs: optsize
declare !dbg !14600 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14601 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14605, metadata !DIExpression()), !dbg !14606
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !14607
  br i1 %2, label %6, label %3, !dbg !14607

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14608
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14608
  br label %6, !dbg !14607

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14607
  ret %struct._dnode* %7, !dbg !14609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14610 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14614, metadata !DIExpression()), !dbg !14615
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14616
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14616
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14617
  ret i1 %4, !dbg !14618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14619 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14629, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14627, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i8* %1, metadata !14628, metadata !DIExpression()), !dbg !14637
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14638, !srcloc !14647
  call void @llvm.dbg.value(metadata i32 %5, metadata !14641, metadata !DIExpression()) #23, !dbg !14648
  %6 = icmp eq i32 %5, 0, !dbg !14649
  %7 = icmp eq i64 %4, 0, !dbg !14650
  %8 = select i1 %6, i1 true, i1 %7, !dbg !14650
  br i1 %8, label %10, label %9, !dbg !14650

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 118) #24, !dbg !14651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.302, i32 0, i32 0)) #24, !dbg !14651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 118) #24, !dbg !14651
  unreachable, !dbg !14651

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !14654, metadata !DIExpression()) #23, !dbg !14661
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14663, !srcloc !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata i32 undef, metadata !14667, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata i32 undef, metadata !14660, metadata !DIExpression()) #23, !dbg !14661
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14671
  br i1 %13, label %15, label %14, !dbg !14674

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14675
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !14675
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14675
  unreachable, !dbg !14675

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !14663
  call void @llvm.dbg.value(metadata i32 %16, metadata !14666, metadata !DIExpression()) #23, !dbg !14670
  call void @llvm.dbg.value(metadata i32 %16, metadata !14660, metadata !DIExpression()) #23, !dbg !14661
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14677
  call void @llvm.dbg.value(metadata i32 %16, metadata !14631, metadata !DIExpression()), !dbg !14637
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14678
  %18 = load i32, i32* %17, align 4, !dbg !14678
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14680
  %20 = load i32, i32* %19, align 4, !dbg !14680
  %21 = icmp ult i32 %18, %20, !dbg !14681
  br i1 %21, label %22, label %52, !dbg !14682

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14683
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #24, !dbg !14685
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14630, metadata !DIExpression()), !dbg !14637
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !14686
  br i1 %25, label %34, label %26, !dbg !14688

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !14689
  %28 = load i8*, i8** %27, align 4, !dbg !14689
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14691
  %30 = load i32, i32* %29, align 4, !dbg !14691
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #24, !dbg !14692
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14693, metadata !DIExpression()), !dbg !14699
  call void @llvm.dbg.value(metadata i32 0, metadata !14698, metadata !DIExpression()), !dbg !14699
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, i32 1, !dbg !14701
  store i32 0, i32* %32, align 4, !dbg !14702
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #24, !dbg !14703
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14704
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #24, !dbg !14704
  br label %64, !dbg !14705

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14706
  %36 = load i8*, i8** %35, align 4, !dbg !14706
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14708
  %38 = load i32, i32* %37, align 4, !dbg !14708
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #24, !dbg !14709
  %40 = load i32, i32* %37, align 4, !dbg !14710
  %41 = load i8*, i8** %35, align 4, !dbg !14711
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !14711
  store i8* %42, i8** %35, align 4, !dbg !14711
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14712
  %44 = load i8*, i8** %43, align 4, !dbg !14712
  %45 = icmp eq i8* %42, %44, !dbg !14714
  br i1 %45, label %46, label %49, !dbg !14715

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14716
  %48 = load i8*, i8** %47, align 4, !dbg !14716
  store i8* %48, i8** %35, align 4, !dbg !14718
  br label %49, !dbg !14719

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !14720
  %51 = add i32 %50, 1, !dbg !14720
  store i32 %51, i32* %17, align 4, !dbg !14720
  call void @llvm.dbg.value(metadata i32 0, metadata !14636, metadata !DIExpression()), !dbg !14637
  br label %59, !dbg !14721

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !14722

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14723
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !14726
  store i8* %1, i8** %55, align 4, !dbg !14727
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14728
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14729
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #24, !dbg !14729
  call void @llvm.dbg.value(metadata i32 %58, metadata !14636, metadata !DIExpression()), !dbg !14637
  br label %64, !dbg !14730

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !14731
  call void @llvm.dbg.value(metadata i32 %60, metadata !14636, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()) #23, !dbg !14738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !14737, metadata !DIExpression()) #23, !dbg !14738
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14740
  br i1 %61, label %63, label %62, !dbg !14743

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !14744
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !14744
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !14744
  unreachable, !dbg !14744

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !14732, metadata !DIExpression()) #23, !dbg !14738
  call void @llvm.dbg.value(metadata i32 %16, metadata !14746, metadata !DIExpression()) #23, !dbg !14749
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !14751, !srcloc !14752
  br label %64, !dbg !14753

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !14637
  ret i32 %65, !dbg !14754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct.sensor_msg* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !14755 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14765, metadata !DIExpression()), !dbg !14767
  call void @llvm.dbg.value(metadata %struct.sensor_msg* %1, metadata !14766, metadata !DIExpression()), !dbg !14767
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14768
  %4 = load i32, i32* %3, align 4, !dbg !14768
  %5 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 0, !dbg !14769
  store i32 %4, i32* %5, align 4, !dbg !14770
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14771
  %7 = load i32, i32* %6, align 4, !dbg !14771
  %8 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 1, !dbg !14772
  store i32 %7, i32* %8, align 4, !dbg !14773
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14774
  %10 = load i32, i32* %9, align 4, !dbg !14774
  %11 = getelementptr inbounds %struct.sensor_msg, %struct.sensor_msg* %1, i32 0, i32 2, !dbg !14775
  store i32 %10, i32* %11, align 4, !dbg !14776
  ret void, !dbg !14777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14778 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14784, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14782, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i8* %1, metadata !14783, metadata !DIExpression()), !dbg !14788
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14789, !srcloc !14647
  call void @llvm.dbg.value(metadata i32 %5, metadata !14641, metadata !DIExpression()) #23, !dbg !14794
  %6 = icmp eq i32 %5, 0, !dbg !14795
  %7 = icmp eq i64 %4, 0, !dbg !14796
  %8 = select i1 %6, i1 true, i1 %7, !dbg !14796
  br i1 %8, label %10, label %9, !dbg !14796

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 208) #24, !dbg !14797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.302, i32 0, i32 0)) #24, !dbg !14797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.301, i32 0, i32 0), i32 noundef 208) #24, !dbg !14797
  unreachable, !dbg !14797

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !14654, metadata !DIExpression()) #23, !dbg !14800
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14802, !srcloc !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14667, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14660, metadata !DIExpression()) #23, !dbg !14800
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14805
  br i1 %13, label %15, label %14, !dbg !14806

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !14807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14807
  unreachable, !dbg !14807

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !14802
  call void @llvm.dbg.value(metadata i32 %16, metadata !14666, metadata !DIExpression()) #23, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %16, metadata !14660, metadata !DIExpression()) #23, !dbg !14800
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14808
  call void @llvm.dbg.value(metadata i32 %16, metadata !14785, metadata !DIExpression()), !dbg !14788
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14809
  %18 = load i32, i32* %17, align 4, !dbg !14809
  %19 = icmp eq i32 %18, 0, !dbg !14811
  br i1 %19, label %61, label %20, !dbg !14812

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14813
  %22 = load i8*, i8** %21, align 4, !dbg !14813
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14815
  %24 = load i32, i32* %23, align 4, !dbg !14815
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #24, !dbg !14816
  %26 = load i32, i32* %23, align 4, !dbg !14817
  %27 = load i8*, i8** %21, align 4, !dbg !14818
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !14818
  store i8* %28, i8** %21, align 4, !dbg !14818
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14819
  %30 = load i8*, i8** %29, align 4, !dbg !14819
  %31 = icmp eq i8* %28, %30, !dbg !14821
  br i1 %31, label %32, label %35, !dbg !14822

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14823
  %34 = load i8*, i8** %33, align 4, !dbg !14823
  store i8* %34, i8** %21, align 4, !dbg !14825
  br label %35, !dbg !14826

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !14827
  %37 = add i32 %36, -1, !dbg !14827
  store i32 %37, i32* %17, align 4, !dbg !14827
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14828
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #24, !dbg !14829
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !14786, metadata !DIExpression()), !dbg !14788
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !14830
  br i1 %40, label %68, label %41, !dbg !14832

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14833
  %43 = load i8*, i8** %42, align 4, !dbg !14833
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !14835
  %45 = load i8*, i8** %44, align 4, !dbg !14835
  %46 = load i32, i32* %23, align 4, !dbg !14836
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #24, !dbg !14837
  %48 = load i32, i32* %23, align 4, !dbg !14838
  %49 = load i8*, i8** %42, align 4, !dbg !14839
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !14839
  store i8* %50, i8** %42, align 4, !dbg !14839
  %51 = load i8*, i8** %29, align 4, !dbg !14840
  %52 = icmp eq i8* %50, %51, !dbg !14842
  br i1 %52, label %53, label %56, !dbg !14843

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14844
  %55 = load i8*, i8** %54, align 4, !dbg !14844
  store i8* %55, i8** %42, align 4, !dbg !14846
  br label %56, !dbg !14847

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !14848
  %58 = add i32 %57, 1, !dbg !14848
  store i32 %58, i32* %17, align 4, !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !14693, metadata !DIExpression()), !dbg !14849
  call void @llvm.dbg.value(metadata i32 0, metadata !14698, metadata !DIExpression()), !dbg !14849
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 6, i32 1, !dbg !14851
  store i32 0, i32* %59, align 4, !dbg !14852
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #24, !dbg !14853
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14854
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #24, !dbg !14854
  br label %73, !dbg !14855

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !14856

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14857
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !14860
  store i8* %1, i8** %64, align 4, !dbg !14861
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14862
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14863
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #24, !dbg !14863
  call void @llvm.dbg.value(metadata i32 %67, metadata !14787, metadata !DIExpression()), !dbg !14788
  br label %73, !dbg !14864

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !14865
  call void @llvm.dbg.value(metadata i32 %69, metadata !14787, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()) #23, !dbg !14866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !14737, metadata !DIExpression()) #23, !dbg !14866
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #24, !dbg !14868
  br i1 %70, label %72, label %71, !dbg !14869

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !14870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #24, !dbg !14870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !14870
  unreachable, !dbg !14870

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !14732, metadata !DIExpression()) #23, !dbg !14866
  call void @llvm.dbg.value(metadata i32 %16, metadata !14746, metadata !DIExpression()) #23, !dbg !14871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !14873, !srcloc !14752
  br label %73, !dbg !14874

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !14788
  ret i32 %74, !dbg !14875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14876 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14880, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata i8* %1, metadata !14881, metadata !DIExpression()), !dbg !14884
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !14654, metadata !DIExpression()) #23, !dbg !14886
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14888, !srcloc !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14667, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14660, metadata !DIExpression()) #23, !dbg !14886
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !14891
  br i1 %5, label %7, label %6, !dbg !14892

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14893
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !14893
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14893
  unreachable, !dbg !14893

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14660, metadata !DIExpression()) #23, !dbg !14886
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !14894
  call void @llvm.dbg.value(metadata i32 undef, metadata !14882, metadata !DIExpression()), !dbg !14884
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14895
  %9 = load i32, i32* %8, align 4, !dbg !14895
  %10 = icmp eq i32 %9, 0, !dbg !14897
  br i1 %10, label %17, label %11, !dbg !14898

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14899
  %13 = load i8*, i8** %12, align 4, !dbg !14899
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14901
  %15 = load i32, i32* %14, align 4, !dbg !14901
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #24, !dbg !14902
  call void @llvm.dbg.value(metadata i32 0, metadata !14883, metadata !DIExpression()), !dbg !14884
  br label %17, !dbg !14903

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !14904
  call void @llvm.dbg.value(metadata i32 %18, metadata !14883, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()) #23, !dbg !14905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !14737, metadata !DIExpression()) #23, !dbg !14905
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !14907
  br i1 %19, label %21, label %20, !dbg !14908

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !14909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !14909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 194) #24, !dbg !14909
  unreachable, !dbg !14909

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !14888
  call void @llvm.dbg.value(metadata i32 %22, metadata !14666, metadata !DIExpression()) #23, !dbg !14890
  call void @llvm.dbg.value(metadata i32 %22, metadata !14660, metadata !DIExpression()) #23, !dbg !14886
  call void @llvm.dbg.value(metadata i32 %22, metadata !14882, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()) #23, !dbg !14905
  call void @llvm.dbg.value(metadata i32 undef, metadata !14746, metadata !DIExpression()) #23, !dbg !14910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !14912, !srcloc !14752
  ret i32 %18, !dbg !14913
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14914 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14918, metadata !DIExpression()), !dbg !14921
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !14654, metadata !DIExpression()) #23, !dbg !14923
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14925, !srcloc !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 undef, metadata !14667, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 undef, metadata !14660, metadata !DIExpression()) #23, !dbg !14923
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #24, !dbg !14928
  br i1 %4, label %6, label %5, !dbg !14929

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.305, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #24, !dbg !14930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.304, i32 0, i32 0), i32 noundef 148) #24, !dbg !14930
  unreachable, !dbg !14930

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14666, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 undef, metadata !14660, metadata !DIExpression()) #23, !dbg !14923
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #24, !dbg !14931
  call void @llvm.dbg.value(metadata i32 undef, metadata !14919, metadata !DIExpression()), !dbg !14921
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #24, !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14920, metadata !DIExpression()), !dbg !14921
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14933
  br i1 %9, label %15, label %10, !dbg !14934

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14693, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata i32 -35, metadata !14698, metadata !DIExpression()), !dbg !14935
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 6, i32 1, !dbg !14938
  store i32 -35, i32* %12, align 4, !dbg !14939
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #24, !dbg !14940
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #24, !dbg !14932
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14920, metadata !DIExpression()), !dbg !14921
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !14933
  br i1 %14, label %15, label %10, !dbg !14934, !llvm.loop !14941

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !14925
  call void @llvm.dbg.value(metadata i32 %16, metadata !14666, metadata !DIExpression()) #23, !dbg !14927
  call void @llvm.dbg.value(metadata i32 %16, metadata !14660, metadata !DIExpression()) #23, !dbg !14923
  call void @llvm.dbg.value(metadata i32 %16, metadata !14919, metadata !DIExpression()), !dbg !14921
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14943
  store i32 0, i32* %17, align 4, !dbg !14944
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14945
  %19 = load i8*, i8** %18, align 4, !dbg !14945
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14946
  store i8* %19, i8** %20, align 4, !dbg !14947
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !14948
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #24, !dbg !14948
  ret void, !dbg !14949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #9 !dbg !14950 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14961, metadata !DIExpression()), !dbg !14962
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14963
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !14964
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14965
  store i32 0, i32* %3, align 4, !dbg !14966
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14967
  tail call fastcc void @z_waitq_init.310(%struct._wait_q_t* noundef %4) #25, !dbg !14968
  ret i32 0, !dbg !14969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.310(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !14970 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14974, metadata !DIExpression()), !dbg !14975
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14976
  tail call fastcc void @sys_dlist_init.311(%struct._dnode* noundef %2) #25, !dbg !14977
  ret void, !dbg !14978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.311(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !14979 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14984, metadata !DIExpression()), !dbg !14985
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14986
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14987
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14988
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14989
  ret void, !dbg !14990
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14991 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15000, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14999, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.value(metadata i8 0, metadata !15007, metadata !DIExpression()), !dbg !15012
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15013, !srcloc !15022
  call void @llvm.dbg.value(metadata i32 %4, metadata !15016, metadata !DIExpression()) #23, !dbg !15023
  %5 = icmp eq i32 %4, 0, !dbg !15024
  br i1 %5, label %7, label %6, !dbg !15025

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 101) #24, !dbg !15026
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.317, i32 0, i32 0)) #24, !dbg !15026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 101) #24, !dbg !15026
  unreachable, !dbg !15026

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.318, metadata !15028, metadata !DIExpression()) #23, !dbg !15035
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15037, !srcloc !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15040, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 undef, metadata !15034, metadata !DIExpression()) #23, !dbg !15035
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15045
  br i1 %9, label %11, label %10, !dbg !15048

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 148) #24, !dbg !15049
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.321, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 148) #24, !dbg !15049
  unreachable, !dbg !15049

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !15037
  call void @llvm.dbg.value(metadata i32 %12, metadata !15040, metadata !DIExpression()) #23, !dbg !15044
  call void @llvm.dbg.value(metadata i32 %12, metadata !15034, metadata !DIExpression()) #23, !dbg !15035
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15051
  call void @llvm.dbg.value(metadata i32 %12, metadata !15002, metadata !DIExpression()), !dbg !15012
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15052
  %14 = load i32, i32* %13, align 4, !dbg !15052
  %15 = icmp eq i32 %14, 0, !dbg !15052
  br i1 %15, label %21, label %16, !dbg !15052

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15052
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !15052
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15052
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !15052
  br i1 %20, label %27, label %39, !dbg !15054, !prof !15055

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15056
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !15058
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !15058
  %25 = load i8, i8* %24, align 2, !dbg !15058
  %26 = sext i8 %25 to i32, !dbg !15056
  br label %30, !dbg !15059

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15060
  %29 = load i32, i32* %28, align 4, !dbg !15060
  br label %30, !dbg !15059

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !15061
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !15059
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15062
  store i32 %32, i32* %33, align 4, !dbg !15063
  %34 = add i32 %14, 1, !dbg !15064
  store i32 %34, i32* %13, align 4, !dbg !15064
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15065
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !15066
  call void @llvm.dbg.value(metadata i32 undef, metadata !15067, metadata !DIExpression()) #23, !dbg !15073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.318, metadata !15072, metadata !DIExpression()) #23, !dbg !15073
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15075
  br i1 %36, label %38, label %37, !dbg !15078

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15079
  unreachable, !dbg !15079

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !15067, metadata !DIExpression()) #23, !dbg !15073
  call void @llvm.dbg.value(metadata i32 %12, metadata !15081, metadata !DIExpression()) #23, !dbg !15084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !15086, !srcloc !15087
  br label %97, !dbg !15088

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !15089
  br i1 %40, label %41, label %45, !dbg !15091, !prof !15092

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !15067, metadata !DIExpression()) #23, !dbg !15093
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.318, metadata !15072, metadata !DIExpression()) #23, !dbg !15093
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15096
  br i1 %42, label %44, label %43, !dbg !15097

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15098
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15098
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15098
  unreachable, !dbg !15098

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !15067, metadata !DIExpression()) #23, !dbg !15093
  call void @llvm.dbg.value(metadata i32 %12, metadata !15081, metadata !DIExpression()) #23, !dbg !15099
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !15101, !srcloc !15087
  br label %97, !dbg !15102

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !15103
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !15103
  %48 = load i8, i8* %47, align 2, !dbg !15103
  %49 = sext i8 %48 to i32, !dbg !15104
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !15105
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !15105
  %52 = load i8, i8* %51, align 2, !dbg !15105
  %53 = sext i8 %52 to i32, !dbg !15106
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #25, !dbg !15107
  call void @llvm.dbg.value(metadata i32 %54, metadata !15001, metadata !DIExpression()), !dbg !15012
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #25, !dbg !15108
  br i1 %55, label %56, label %58, !dbg !15110

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #25, !dbg !15111
  call void @llvm.dbg.value(metadata i1 %57, metadata !15007, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15012
  br label %58, !dbg !15113

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !15007, metadata !DIExpression()), !dbg !15012
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15114
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !15115
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.318, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #24, !dbg !15115
  call void @llvm.dbg.value(metadata i32 %62, metadata !15008, metadata !DIExpression()), !dbg !15012
  %63 = icmp eq i32 %62, 0, !dbg !15116
  br i1 %63, label %97, label %64, !dbg !15118

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.318, metadata !15028, metadata !DIExpression()) #23, !dbg !15119
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15121, !srcloc !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15040, metadata !DIExpression()) #23, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !15034, metadata !DIExpression()) #23, !dbg !15119
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15124
  br i1 %66, label %68, label %67, !dbg !15125

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 148) #24, !dbg !15126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.321, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 148) #24, !dbg !15126
  unreachable, !dbg !15126

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %69, metadata !15040, metadata !DIExpression()) #23, !dbg !15123
  call void @llvm.dbg.value(metadata i32 %69, metadata !15034, metadata !DIExpression()) #23, !dbg !15119
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15127
  call void @llvm.dbg.value(metadata i32 %69, metadata !15002, metadata !DIExpression()), !dbg !15012
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !15128
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !15128
  br i1 %71, label %90, label %72, !dbg !15129, !prof !15092

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.324(%struct._wait_q_t* noundef nonnull %60) #25, !dbg !15130
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !15009, metadata !DIExpression()), !dbg !15131
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !15132
  br i1 %74, label %83, label %75, !dbg !15133

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !15134
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !15134
  %78 = load i8, i8* %77, align 2, !dbg !15134
  %79 = sext i8 %78 to i32, !dbg !15135
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15136
  %81 = load i32, i32* %80, align 4, !dbg !15136
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #25, !dbg !15137
  br label %86, !dbg !15133

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15138
  %85 = load i32, i32* %84, align 4, !dbg !15138
  br label %86, !dbg !15133

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !15133
  call void @llvm.dbg.value(metadata i32 %87, metadata !15001, metadata !DIExpression()), !dbg !15012
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #25, !dbg !15139
  %89 = select i1 %88, i1 true, i1 %59, !dbg !15140
  call void @llvm.dbg.value(metadata i1 %89, metadata !15007, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15012
  call void @llvm.dbg.value(metadata i8 poison, metadata !15007, metadata !DIExpression()), !dbg !15012
  br i1 %89, label %91, label %93, !dbg !15141

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !15007, metadata !DIExpression()), !dbg !15012
  br i1 %59, label %91, label %93, !dbg !15141

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !15142
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.318, [1 x i32] %92) #24, !dbg !15142
  br label %97, !dbg !15145

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !15067, metadata !DIExpression()) #23, !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.318, metadata !15072, metadata !DIExpression()) #23, !dbg !15146
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15149
  br i1 %94, label %96, label %95, !dbg !15150

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15151
  unreachable, !dbg !15151

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !15067, metadata !DIExpression()) #23, !dbg !15146
  call void @llvm.dbg.value(metadata i32 %69, metadata !15081, metadata !DIExpression()) #23, !dbg !15152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !15154, !srcloc !15087
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !15012
  ret i32 %98, !dbg !15155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !15156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15160, metadata !DIExpression()), !dbg !15163
  call void @llvm.dbg.value(metadata i32 %1, metadata !15161, metadata !DIExpression()), !dbg !15163
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #25, !dbg !15164
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !15164
  call void @llvm.dbg.value(metadata i32 %4, metadata !15162, metadata !DIExpression()), !dbg !15163
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #25, !dbg !15165
  call void @llvm.dbg.value(metadata i32 %5, metadata !15162, metadata !DIExpression()), !dbg !15163
  ret i32 %5, !dbg !15166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !15167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15171, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.value(metadata i32 %1, metadata !15172, metadata !DIExpression()), !dbg !15173
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !15174
  ret i1 %3, !dbg !15175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !15176 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15180, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.value(metadata i32 %1, metadata !15181, metadata !DIExpression()), !dbg !15182
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15183
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !15183
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15185
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15185
  %7 = load i8, i8* %6, align 2, !dbg !15185
  %8 = sext i8 %7 to i32, !dbg !15186
  %9 = icmp eq i32 %8, %1, !dbg !15187
  br i1 %9, label %12, label %10, !dbg !15188

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #24, !dbg !15189
  br label %12, !dbg !15191

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !15182
  ret i1 %13, !dbg !15192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.324(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !15193 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15197, metadata !DIExpression()), !dbg !15198
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15199
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.325(%struct._dnode* noundef %2) #25, !dbg !15200
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15201
  ret %struct.k_thread* %4, !dbg !15202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.325(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15203 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15207, metadata !DIExpression()), !dbg !15208
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.326(%struct._dnode* noundef %0) #25, !dbg !15209
  br i1 %2, label %6, label %3, !dbg !15209

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15210
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15210
  br label %6, !dbg !15209

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15209
  ret %struct._dnode* %7, !dbg !15211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.326(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15212 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15216, metadata !DIExpression()), !dbg !15217
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15218
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15218
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15219
  ret i1 %4, !dbg !15220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !15221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15223, metadata !DIExpression()), !dbg !15225
  call void @llvm.dbg.value(metadata i32 %1, metadata !15224, metadata !DIExpression()), !dbg !15225
  %3 = icmp slt i32 %0, %1, !dbg !15226
  ret i1 %3, !dbg !15227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !15228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15230, metadata !DIExpression()), !dbg !15231
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #25, !dbg !15232
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !15232
  ret i32 %3, !dbg !15233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #6 !dbg !15234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15238, metadata !DIExpression()), !dbg !15239
  %2 = icmp sgt i32 %0, -128, !dbg !15240
  ret i1 %2, !dbg !15241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !15242 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !15244, metadata !DIExpression()), !dbg !15248
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15249, !srcloc !15022
  call void @llvm.dbg.value(metadata i32 %2, metadata !15016, metadata !DIExpression()) #23, !dbg !15254
  %3 = icmp eq i32 %2, 0, !dbg !15255
  br i1 %3, label %5, label %4, !dbg !15256

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 205) #24, !dbg !15257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.317, i32 0, i32 0)) #24, !dbg !15257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 205) #24, !dbg !15257
  unreachable, !dbg !15257

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !15259
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !15259
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15259
  br i1 %8, label %41, label %9, !dbg !15261

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15262
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !15262
  br i1 %11, label %12, label %41, !dbg !15264

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !15265
  %14 = load i32, i32* %13, align 4, !dbg !15265
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !15268

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 229) #24, !dbg !15269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 229) #24, !dbg !15269
  unreachable, !dbg !15269

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !15271
  store i32 %17, i32* %13, align 4, !dbg !15271
  br label %41, !dbg !15274

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.318, metadata !15028, metadata !DIExpression()) #23, !dbg !15275
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15277, !srcloc !15043
  call void @llvm.dbg.value(metadata i32 undef, metadata !15040, metadata !DIExpression()) #23, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15041, metadata !DIExpression()) #23, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15034, metadata !DIExpression()) #23, !dbg !15275
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15280
  br i1 %20, label %22, label %21, !dbg !15281

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 148) #24, !dbg !15282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.321, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 148) #24, !dbg !15282
  unreachable, !dbg !15282

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %23, metadata !15040, metadata !DIExpression()) #23, !dbg !15279
  call void @llvm.dbg.value(metadata i32 %23, metadata !15034, metadata !DIExpression()) #23, !dbg !15275
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15283
  call void @llvm.dbg.value(metadata i32 %23, metadata !15246, metadata !DIExpression()), !dbg !15248
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !15284
  %25 = load i32, i32* %24, align 4, !dbg !15284
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #25, !dbg !15285
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !15286
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #24, !dbg !15287
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !15245, metadata !DIExpression()), !dbg !15248
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !15288
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !15289
  br i1 %29, label %37, label %30, !dbg !15291

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !15292
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !15292
  %33 = load i8, i8* %32, align 2, !dbg !15292
  %34 = sext i8 %33 to i32, !dbg !15294
  store i32 %34, i32* %24, align 4, !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !15296, metadata !DIExpression()), !dbg !15302
  call void @llvm.dbg.value(metadata i32 0, metadata !15301, metadata !DIExpression()), !dbg !15302
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 6, i32 1, !dbg !15304
  store i32 0, i32* %35, align 4, !dbg !15305
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #24, !dbg !15306
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !15307
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.318, [1 x i32] %36) #24, !dbg !15307
  br label %41, !dbg !15308

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !15067, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.318, metadata !15072, metadata !DIExpression()) #23, !dbg !15311
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15313
  br i1 %38, label %40, label %39, !dbg !15314

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.318) #24, !dbg !15315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.320, i32 0, i32 0), i32 noundef 194) #24, !dbg !15315
  unreachable, !dbg !15315

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !15067, metadata !DIExpression()) #23, !dbg !15311
  call void @llvm.dbg.value(metadata i32 %23, metadata !15081, metadata !DIExpression()) #23, !dbg !15316
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !15318, !srcloc !15087
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !15248
  ret i32 %42, !dbg !15319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15325, metadata !DIExpression()), !dbg !15328
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15329
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15329
  %5 = load i8, i8* %4, align 2, !dbg !15329
  call void @llvm.dbg.value(metadata i8 %5, metadata !15326, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15328
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15330
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15330
  %8 = load i8, i8* %7, align 2, !dbg !15330
  call void @llvm.dbg.value(metadata i8 %8, metadata !15327, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15328
  %9 = icmp eq i8 %8, %5, !dbg !15331
  %10 = sext i8 %5 to i32, !dbg !15333
  %11 = sext i8 %8 to i32, !dbg !15333
  %12 = sub nsw i32 %11, %10, !dbg !15333
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15333
  ret i32 %13, !dbg !15334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15335 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15339, metadata !DIExpression()), !dbg !15340
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !15341
  %3 = icmp eq i32 %2, 0, !dbg !15343
  br i1 %3, label %8, label %4, !dbg !15344

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !15345
  %6 = add i32 %5, %2, !dbg !15347
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15348
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !15349
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !15350
  br label %8, !dbg !15351

8:                                                ; preds = %4, %1
  ret void, !dbg !15352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15357, metadata !DIExpression()), !dbg !15359
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15360
  call void @llvm.dbg.value(metadata i32 %1, metadata !15358, metadata !DIExpression()), !dbg !15359
  ret i32 %1, !dbg !15361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15366, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 %1, metadata !15367, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 0, metadata !15368, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !15384
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15386, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !15384
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15394
  br i1 %4, label %6, label %5, !dbg !15397

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15398
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15398
  unreachable, !dbg !15398

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !15384
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15400
  call void @llvm.dbg.value(metadata i32 undef, metadata !15374, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !15368, metadata !DIExpression()), !dbg !15376
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15401
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !15404
  %8 = icmp sgt i32 %0, 0, !dbg !15405
  %9 = icmp sgt i32 %7, 2, !dbg !15407
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15407
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15407
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15408
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15409
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !15417
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15419
  br i1 %12, label %14, label %13, !dbg !15422

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15423
  unreachable, !dbg !15423

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15386
  call void @llvm.dbg.value(metadata i32 %15, metadata !15389, metadata !DIExpression()) #23, !dbg !15393
  call void @llvm.dbg.value(metadata i32 %15, metadata !15383, metadata !DIExpression()) #23, !dbg !15384
  call void @llvm.dbg.value(metadata i32 %15, metadata !15374, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15417
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !15428
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15430, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !15368, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.value(metadata i32 undef, metadata !15368, metadata !DIExpression()), !dbg !15376
  ret void, !dbg !15432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !15433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15437, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 %0, metadata !15439, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15454
  call void @llvm.dbg.value(metadata i32 1000, metadata !15442, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i32 10000, metadata !15443, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i8 1, metadata !15444, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i1 true, metadata !15445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15454
  call void @llvm.dbg.value(metadata i1 true, metadata !15446, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15454
  call void @llvm.dbg.value(metadata i8 0, metadata !15447, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i1 true, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15454
  call void @llvm.dbg.value(metadata i1 false, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15454
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !15454
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !15454
  %2 = mul i32 %0, 10, !dbg !15456
  ret i32 %2, !dbg !15462
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15465, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !15468
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15470, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !15468
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15473
  br i1 %3, label %5, label %4, !dbg !15474

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15475
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15475
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15475
  unreachable, !dbg !15475

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15470
  call void @llvm.dbg.value(metadata i32 %6, metadata !15389, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 %6, metadata !15383, metadata !DIExpression()) #23, !dbg !15468
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15476
  call void @llvm.dbg.value(metadata i32 %6, metadata !15466, metadata !DIExpression()), !dbg !15467
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15477
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15479
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !15480
  br i1 %9, label %10, label %14, !dbg !15481

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !15482
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15484
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !15484
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15486
  br i1 %11, label %13, label %12, !dbg !15487

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15488
  unreachable, !dbg !15488

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15411, metadata !DIExpression()) #23, !dbg !15484
  call void @llvm.dbg.value(metadata i32 %6, metadata !15425, metadata !DIExpression()) #23, !dbg !15489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15491, !srcloc !15431
  br label %33, !dbg !15492

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15493
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !15494
  %16 = icmp eq i32 %15, 0, !dbg !15494
  br i1 %16, label %27, label %17, !dbg !15496

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !15497
  br i1 %18, label %19, label %27, !dbg !15498

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15499
  %21 = icmp sgt i32 %20, %0, !dbg !15502
  br i1 %21, label %25, label %22, !dbg !15503

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15504
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !15504
  call void @llvm.dbg.value(metadata i32 %24, metadata !15466, metadata !DIExpression()), !dbg !15467
  br label %28, !dbg !15506

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !15507
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15507
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15509
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !15467
  call void @llvm.dbg.value(metadata i32 %29, metadata !15466, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !15511
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15513
  br i1 %30, label %32, label %31, !dbg !15514

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15515
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15515
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15515
  unreachable, !dbg !15515

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15411, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 %29, metadata !15425, metadata !DIExpression()) #23, !dbg !15516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !15518, !srcloc !15431
  br label %33, !dbg !15519

33:                                               ; preds = %32, %13
  ret void, !dbg !15519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15524, metadata !DIExpression()), !dbg !15526
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !15527
  %3 = icmp eq i32 %2, 0, !dbg !15527
  br i1 %3, label %16, label %4, !dbg !15528

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !15529
  br i1 %5, label %16, label %6, !dbg !15530

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15531
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15531
  %9 = load i8, i8* %8, align 2, !dbg !15531
  %10 = sext i8 %9 to i32, !dbg !15532
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15533
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.343(i32 noundef %10, i32 noundef %11) #25, !dbg !15534
  br i1 %12, label %16, label %13, !dbg !15535

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !15536
  %15 = xor i1 %14, true, !dbg !15537
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15526
  call void @llvm.dbg.value(metadata i1 %17, metadata !15525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15526
  ret i1 %17, !dbg !15538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15539 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15543, metadata !DIExpression()), !dbg !15545
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15546
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15544, metadata !DIExpression()), !dbg !15545
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !15547
  br i1 %3, label %5, label %4, !dbg !15549

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !15550
  br label %5, !dbg !15552

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15543, metadata !DIExpression()), !dbg !15545
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !15553
  ret i32 %6, !dbg !15554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15555 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15557, metadata !DIExpression()), !dbg !15559
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15560
  %3 = load i8, i8* %2, align 1, !dbg !15560
  call void @llvm.dbg.value(metadata i8 %3, metadata !15558, metadata !DIExpression()), !dbg !15559
  %4 = and i8 %3, 31, !dbg !15561
  %5 = icmp ne i8 %4, 0, !dbg !15562
  ret i1 %5, !dbg !15563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15566, metadata !DIExpression()), !dbg !15567
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !15568
  br i1 %2, label %3, label %7, !dbg !15570

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()) #23, !dbg !15574
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15577
  %5 = load i8, i8* %4, align 1, !dbg !15578
  %6 = and i8 %5, 127, !dbg !15578
  store i8 %6, i8* %4, align 1, !dbg !15578
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15579, metadata !DIExpression()) #23, !dbg !15582
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15586
  br label %7, !dbg !15587

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()) #23, !dbg !15591
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15593
  %9 = load i8, i8* %8, align 1, !dbg !15594
  %10 = or i8 %9, -128, !dbg !15594
  store i8 %10, i8* %8, align 1, !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15595, metadata !DIExpression()) #23, !dbg !15598
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15602, metadata !DIExpression()) #23, !dbg !15610
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()) #23, !dbg !15610
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15612
  br i1 %11, label %12, label %13, !dbg !15615

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !15616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !15616
  unreachable, !dbg !15616

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15618
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15609, metadata !DIExpression()) #23, !dbg !15610
  %15 = icmp eq %struct._dnode* %14, null, !dbg !15620
  br i1 %15, label %26, label %16, !dbg !15618

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15609, metadata !DIExpression()) #23, !dbg !15610
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !15622
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !15609, metadata !DIExpression()) #23, !dbg !15610
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !15623
  %20 = icmp sgt i32 %19, 0, !dbg !15626
  br i1 %20, label %21, label %23, !dbg !15627

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15628
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !15630
  br label %28, !dbg !15631

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !15620
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15609, metadata !DIExpression()) #23, !dbg !15610
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15620
  br i1 %25, label %26, label %16, !dbg !15618, !llvm.loop !15632

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15634
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !15635
  br label %28, !dbg !15636

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15637
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !15638
  %31 = zext i1 %30 to i32, !dbg !15638
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !15639
  ret void, !dbg !15640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15643, metadata !DIExpression()), !dbg !15644
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !15645
  ret i1 %2, !dbg !15646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15647 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15649, metadata !DIExpression()), !dbg !15651
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15650, metadata !DIExpression()), !dbg !15651
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15652
  br i1 %3, label %4, label %5, !dbg !15655

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1139) #24, !dbg !15656
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1139) #24, !dbg !15656
  unreachable, !dbg !15656

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15658
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !15659
  ret void, !dbg !15660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !15661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15663, metadata !DIExpression()), !dbg !15664
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15665
  ret i1 %2, !dbg !15666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15667 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15671, metadata !DIExpression()), !dbg !15672
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.341(%struct._dnode* noundef %0) #25, !dbg !15673
  br i1 %2, label %6, label %3, !dbg !15673

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15674
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15674
  br label %6, !dbg !15673

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15673
  ret %struct._dnode* %7, !dbg !15675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15676 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15680, metadata !DIExpression()), !dbg !15684
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15681, metadata !DIExpression()), !dbg !15684
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15685
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15685
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15682, metadata !DIExpression()), !dbg !15684
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15686
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15687
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15688
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15689
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15690
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15691
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15692
  ret void, !dbg !15693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15698, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15699, metadata !DIExpression()), !dbg !15700
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15701
  br i1 %3, label %6, label %4, !dbg !15702

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !15703
  br label %6, !dbg !15702

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15702
  ret %struct._dnode* %7, !dbg !15704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15705 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15709, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15710, metadata !DIExpression()), !dbg !15712
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15713
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15713
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15711, metadata !DIExpression()), !dbg !15712
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15714
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15715
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15716
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15717
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15718
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15719
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15720
  ret void, !dbg !15721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15724, metadata !DIExpression()), !dbg !15726
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15727
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15734, metadata !DIExpression()) #23, !dbg !15736
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15737
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15738
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15738
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15725, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15739, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 %0, metadata !15744, metadata !DIExpression()) #23, !dbg !15745
  %6 = icmp eq i32 %0, 0, !dbg !15748
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15750
  br i1 %6, label %8, label %18, !dbg !15751

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !15752
  br i1 %9, label %10, label %11, !dbg !15755

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 137) #24, !dbg !15756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !15756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 137) #24, !dbg !15756
  unreachable, !dbg !15756

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !15758
  br i1 %12, label %18, label %13, !dbg !15760

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !15761
  br i1 %14, label %18, label %15, !dbg !15763

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !15764
  %17 = icmp eq i32 %16, 0, !dbg !15764
  br i1 %17, label %21, label %18, !dbg !15766

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15767
  br i1 %19, label %21, label %20, !dbg !15770

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !15771
  br label %21, !dbg !15773

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !15750
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15750
  ret void, !dbg !15774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !15775 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15779, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15780, metadata !DIExpression()), !dbg !15782
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef %0) #25, !dbg !15783
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15781, metadata !DIExpression()), !dbg !15782
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15780, metadata !DIExpression()), !dbg !15782
  ret %struct.k_thread* %3, !dbg !15784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15785 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15787, metadata !DIExpression()), !dbg !15788
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15789
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15790
  %4 = xor i1 %3, true, !dbg !15791
  ret i1 %4, !dbg !15792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15795, metadata !DIExpression()), !dbg !15796
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15797
  %3 = load i16, i16* %2, align 2, !dbg !15797
  %4 = icmp ult i16 %3, 128, !dbg !15798
  %5 = zext i1 %4 to i32, !dbg !15798
  ret i32 %5, !dbg !15799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15800 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15806, metadata !DIExpression()), !dbg !15807
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15808
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !15809
  %4 = xor i1 %3, true, !dbg !15810
  ret i1 %4, !dbg !15811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15812 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15818, metadata !DIExpression()), !dbg !15819
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15820
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15820
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15821
  ret i1 %4, !dbg !15822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !15823 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15825, metadata !DIExpression()), !dbg !15827
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15826, metadata !DIExpression()), !dbg !15827
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15828
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15828
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15829
  br i1 %5, label %9, label %6, !dbg !15830

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15831
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15831
  br label %9, !dbg !15830

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15830
  ret %struct._dnode* %10, !dbg !15832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.341(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !15833 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15837, metadata !DIExpression()), !dbg !15838
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15839
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15839
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15840
  ret i1 %4, !dbg !15841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !15842 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15846, metadata !DIExpression()), !dbg !15849
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15850
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15850
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15847, metadata !DIExpression()), !dbg !15849
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15851
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15851
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15848, metadata !DIExpression()), !dbg !15849
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15852
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15853
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15854
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15855
  tail call fastcc void @sys_dnode_init.342(%struct._dnode* noundef %0) #25, !dbg !15856
  ret void, !dbg !15857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.342(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15858 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15860, metadata !DIExpression()), !dbg !15861
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15862
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15863
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15864
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15865
  ret void, !dbg !15866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !15867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15871, metadata !DIExpression()), !dbg !15873
  call void @llvm.dbg.value(metadata i32 %1, metadata !15872, metadata !DIExpression()), !dbg !15873
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15874
  %4 = load i8, i8* %3, align 1, !dbg !15874
  %5 = zext i8 %4 to i32, !dbg !15875
  %6 = and i32 %5, %1, !dbg !15876
  %7 = icmp ne i32 %6, 0, !dbg !15877
  ret i1 %7, !dbg !15878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.343(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !15879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15881, metadata !DIExpression()), !dbg !15883
  call void @llvm.dbg.value(metadata i32 %1, metadata !15882, metadata !DIExpression()), !dbg !15883
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.344(i32 noundef %0, i32 noundef %1) #25, !dbg !15884
  ret i1 %3, !dbg !15885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.344(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !15886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15888, metadata !DIExpression()), !dbg !15890
  call void @llvm.dbg.value(metadata i32 %1, metadata !15889, metadata !DIExpression()), !dbg !15890
  %3 = icmp slt i32 %0, %1, !dbg !15891
  ret i1 %3, !dbg !15892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15893 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15895, metadata !DIExpression()), !dbg !15899
  call void @llvm.dbg.value(metadata i32 0, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !15901
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15903, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !15901
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15906
  br i1 %3, label %5, label %4, !dbg !15907

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15908
  unreachable, !dbg !15908

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !15901
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15909
  call void @llvm.dbg.value(metadata i32 undef, metadata !15898, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15900
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15910
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !15915
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15917
  br i1 %6, label %8, label %7, !dbg !15918

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15919
  unreachable, !dbg !15919

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15903
  call void @llvm.dbg.value(metadata i32 %9, metadata !15389, metadata !DIExpression()) #23, !dbg !15905
  call void @llvm.dbg.value(metadata i32 %9, metadata !15383, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %9, metadata !15898, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15915
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !15920
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15922, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15900
  ret void, !dbg !15923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15926, metadata !DIExpression()), !dbg !15927
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !15928
  br i1 %2, label %27, label %3, !dbg !15930

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15931
  br i1 %4, label %5, label %27, !dbg !15932

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()) #23, !dbg !15933
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15936
  %7 = load i8, i8* %6, align 1, !dbg !15937
  %8 = or i8 %7, -128, !dbg !15937
  store i8 %8, i8* %6, align 1, !dbg !15937
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15595, metadata !DIExpression()) #23, !dbg !15938
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15602, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()) #23, !dbg !15940
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15942
  br i1 %9, label %10, label %11, !dbg !15943

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !15944
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !15944
  unreachable, !dbg !15944

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15945
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15609, metadata !DIExpression()) #23, !dbg !15940
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15946
  br i1 %13, label %24, label %14, !dbg !15945

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15609, metadata !DIExpression()) #23, !dbg !15940
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15947
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !15609, metadata !DIExpression()) #23, !dbg !15940
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !15948
  %18 = icmp sgt i32 %17, 0, !dbg !15949
  br i1 %18, label %19, label %21, !dbg !15950

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15951
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !15952
  br label %26, !dbg !15953

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !15946
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !15609, metadata !DIExpression()) #23, !dbg !15940
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15946
  br i1 %23, label %24, label %14, !dbg !15945, !llvm.loop !15954

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15956
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !15957
  br label %26, !dbg !15958

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15959
  br label %27, !dbg !15960

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15964, metadata !DIExpression()), !dbg !15965
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !15966
  br i1 %2, label %6, label %3, !dbg !15967

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !15968
  %5 = xor i1 %4, true, !dbg !15967
  br label %6, !dbg !15967

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15970 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15972, metadata !DIExpression()), !dbg !15976
  call void @llvm.dbg.value(metadata i32 0, metadata !15973, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !15978
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15980, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !15978
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15983
  br i1 %3, label %5, label %4, !dbg !15984

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !15985
  unreachable, !dbg !15985

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !15978
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15986
  call void @llvm.dbg.value(metadata i32 undef, metadata !15975, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 undef, metadata !15973, metadata !DIExpression()), !dbg !15977
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !15987
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !15990
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15992
  br i1 %6, label %8, label %7, !dbg !15993

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15994
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15994
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !15994
  unreachable, !dbg !15994

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %9, metadata !15389, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata i32 %9, metadata !15383, metadata !DIExpression()) #23, !dbg !15978
  call void @llvm.dbg.value(metadata i32 %9, metadata !15975, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !15990
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !15995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15997, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !15973, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 undef, metadata !15973, metadata !DIExpression()), !dbg !15977
  ret void, !dbg !15998
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16001, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16004
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16006, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16004
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16009
  br i1 %3, label %5, label %4, !dbg !16010

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16011
  unreachable, !dbg !16011

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %6, metadata !15389, metadata !DIExpression()) #23, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %6, metadata !15383, metadata !DIExpression()) #23, !dbg !16004
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16012
  call void @llvm.dbg.value(metadata i32 %6, metadata !16002, metadata !DIExpression()), !dbg !16003
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !16013
  br i1 %7, label %8, label %12, !dbg !16015

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16016
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16016
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16019
  br i1 %9, label %11, label %10, !dbg !16020

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16021
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16021
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16021
  unreachable, !dbg !16021

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15411, metadata !DIExpression()) #23, !dbg !16016
  call void @llvm.dbg.value(metadata i32 %6, metadata !15425, metadata !DIExpression()) #23, !dbg !16022
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16024, !srcloc !15431
  br label %14, !dbg !16025

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.349(%struct.k_thread* noundef %0) #25, !dbg !16026
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !16027
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16028
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !16028
  br label %14, !dbg !16029

14:                                               ; preds = %12, %11
  ret void, !dbg !16029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16030 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16032, metadata !DIExpression()), !dbg !16033
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16034
  %3 = load i8, i8* %2, align 1, !dbg !16034
  %4 = and i8 %3, 4, !dbg !16035
  %5 = icmp eq i8 %4, 0, !dbg !16036
  ret i1 %5, !dbg !16037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.349(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16038 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16040, metadata !DIExpression()), !dbg !16041
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16042
  %3 = load i8, i8* %2, align 1, !dbg !16043
  %4 = and i8 %3, -5, !dbg !16043
  store i8 %4, i8* %2, align 1, !dbg !16043
  ret void, !dbg !16044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16045 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16048, metadata !DIExpression()), !dbg !16049
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16047, metadata !DIExpression()), !dbg !16049
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !16050
  br i1 %4, label %5, label %12, !dbg !16052

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !16053
  br i1 %6, label %7, label %12, !dbg !16054

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16060, metadata !DIExpression()) #23, !dbg !16061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16064, metadata !DIExpression()) #23, !dbg !16069
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !16071
  br i1 %8, label %10, label %9, !dbg !16074

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !16075
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !16075
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !16075
  unreachable, !dbg !16075

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !16055, metadata !DIExpression()) #23, !dbg !16061
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !16077
  br label %16, !dbg !16078

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15416, metadata !DIExpression()) #23, !dbg !16079
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !16082
  br i1 %13, label %15, label %14, !dbg !16083

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !16084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16084
  unreachable, !dbg !16084

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15411, metadata !DIExpression()) #23, !dbg !16079
  call void @llvm.dbg.value(metadata i32 %3, metadata !15425, metadata !DIExpression()) #23, !dbg !16085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !16087, !srcloc !15431
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !16088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16093, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata i32 %0, metadata !16095, metadata !DIExpression()), !dbg !16100
  %2 = icmp eq i32 %0, 0, !dbg !16102
  br i1 %2, label %3, label %6, !dbg !16103

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16104, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %4, metadata !16107, metadata !DIExpression()) #23, !dbg !16112
  %5 = icmp eq i32 %4, 0, !dbg !16113
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16094
  ret i1 %7, !dbg !16114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16115 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16118
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16117, metadata !DIExpression()), !dbg !16119
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16120
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16121
  ret i1 %3, !dbg !16122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16125, metadata !DIExpression()), !dbg !16127
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !16128
  call void @llvm.dbg.value(metadata i32 %2, metadata !16126, metadata !DIExpression()), !dbg !16127
  ret i32 %2, !dbg !16129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16132, metadata !DIExpression()), !dbg !16136
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !16137
  call void @llvm.dbg.value(metadata i32 0, metadata !16133, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16139
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16141, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16143
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16143
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16139
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16144
  br i1 %4, label %6, label %5, !dbg !16145

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16146
  unreachable, !dbg !16146

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16141
  call void @llvm.dbg.value(metadata i32 %7, metadata !15389, metadata !DIExpression()) #23, !dbg !16143
  call void @llvm.dbg.value(metadata i32 %7, metadata !15383, metadata !DIExpression()) #23, !dbg !16139
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16147
  call void @llvm.dbg.value(metadata i32 %7, metadata !16135, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16133, metadata !DIExpression()), !dbg !16138
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !16148
  br i1 %8, label %9, label %13, !dbg !16152

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()) #23, !dbg !16153
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16156
  %11 = load i8, i8* %10, align 1, !dbg !16157
  %12 = and i8 %11, 127, !dbg !16157
  store i8 %12, i8* %10, align 1, !dbg !16157
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15579, metadata !DIExpression()) #23, !dbg !16158
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !16160
  br label %13, !dbg !16161

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !16162
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16163
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16164
  %16 = zext i1 %15 to i32, !dbg !16164
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !16165
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16166
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16168
  br i1 %17, label %19, label %18, !dbg !16169

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16170
  unreachable, !dbg !16170

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15411, metadata !DIExpression()) #23, !dbg !16166
  call void @llvm.dbg.value(metadata i32 %7, metadata !15425, metadata !DIExpression()) #23, !dbg !16171
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16173, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16133, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16133, metadata !DIExpression()), !dbg !16138
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16174
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !16176
  br i1 %21, label %22, label %23, !dbg !16177

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !16178
  br label %23, !dbg !16180

23:                                               ; preds = %22, %19
  ret void, !dbg !16181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16182 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16184, metadata !DIExpression()), !dbg !16185
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16186
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !16187
  ret i32 %3, !dbg !16188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16191, metadata !DIExpression()), !dbg !16192
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16193
  %3 = load i8, i8* %2, align 1, !dbg !16194
  %4 = or i8 %3, 16, !dbg !16194
  store i8 %4, i8* %2, align 1, !dbg !16194
  ret void, !dbg !16195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16196 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16197, !srcloc !15392
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16197
  call void @llvm.dbg.value(metadata i32 %2, metadata !15389, metadata !DIExpression()) #23, !dbg !16199
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16199
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !16200
  ret void, !dbg !16201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16204, metadata !DIExpression()), !dbg !16205
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !16206
  br i1 %2, label %3, label %5, !dbg !16208

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !16209
  br label %6, !dbg !16211

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15425, metadata !DIExpression()) #23, !dbg !16212
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !16215, !srcloc !15431
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16217 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16219, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16222
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16224, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16226
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16222
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16227
  br i1 %3, label %5, label %4, !dbg !16228

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16229
  unreachable, !dbg !16229

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16224
  call void @llvm.dbg.value(metadata i32 %6, metadata !15389, metadata !DIExpression()) #23, !dbg !16226
  call void @llvm.dbg.value(metadata i32 %6, metadata !15383, metadata !DIExpression()) #23, !dbg !16222
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16230
  call void @llvm.dbg.value(metadata i32 %6, metadata !16220, metadata !DIExpression()), !dbg !16221
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !16231
  br i1 %7, label %12, label %8, !dbg !16233

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16234
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16237
  br i1 %9, label %11, label %10, !dbg !16238

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16239
  unreachable, !dbg !16239

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15411, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 %6, metadata !15425, metadata !DIExpression()) #23, !dbg !16240
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16242, !srcloc !15431
  br label %14, !dbg !16243

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !16244
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !16245
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16246
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !16246
  br label %14, !dbg !16247

14:                                               ; preds = %12, %11
  ret void, !dbg !16247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16250, metadata !DIExpression()), !dbg !16251
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16252
  %3 = load i8, i8* %2, align 1, !dbg !16252
  %4 = and i8 %3, 16, !dbg !16253
  %5 = icmp ne i8 %4, 0, !dbg !16254
  ret i1 %5, !dbg !16255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16256 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16258, metadata !DIExpression()), !dbg !16259
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16260
  %3 = load i8, i8* %2, align 1, !dbg !16261
  %4 = and i8 %3, -17, !dbg !16261
  store i8 %4, i8* %2, align 1, !dbg !16261
  ret void, !dbg !16262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16263 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16273, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16271, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16272, metadata !DIExpression()), !dbg !16277
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16278
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16278
  br i1 %5, label %9, label %6, !dbg !16278

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !16278
  br i1 %7, label %9, label %8, !dbg !16281

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 773) #24, !dbg !16282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 773) #24, !dbg !16282
  unreachable, !dbg !16282

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16274, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16285
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16287, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16285
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16290
  br i1 %11, label %13, label %12, !dbg !16291

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16292
  unreachable, !dbg !16292

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16285
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16276, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16274, metadata !DIExpression()), !dbg !16284
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !16294
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16297
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16297
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16299
  br i1 %14, label %16, label %15, !dbg !16300

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16301
  unreachable, !dbg !16301

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16287
  call void @llvm.dbg.value(metadata i32 %17, metadata !15389, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %17, metadata !15383, metadata !DIExpression()) #23, !dbg !16285
  call void @llvm.dbg.value(metadata i32 %17, metadata !16276, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16297
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16302
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !16304, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16274, metadata !DIExpression()), !dbg !16284
  call void @llvm.dbg.value(metadata i32 undef, metadata !16274, metadata !DIExpression()), !dbg !16284
  ret void, !dbg !16305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16308, metadata !DIExpression()), !dbg !16309
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16310
  %3 = load i8, i8* %2, align 1, !dbg !16310
  %4 = and i8 %3, 1, !dbg !16311
  %5 = icmp ne i8 %4, 0, !dbg !16312
  ret i1 %5, !dbg !16313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16314 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16318, metadata !DIExpression()), !dbg !16319
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16316, metadata !DIExpression()), !dbg !16319
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16317, metadata !DIExpression()), !dbg !16319
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #25, !dbg !16320
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !16321
  ret void, !dbg !16322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !16323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16327, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16328, metadata !DIExpression()), !dbg !16329
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !16330
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !16331
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !16332
  br i1 %3, label %24, label %4, !dbg !16334

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16335
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !16337
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !16338
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15602, metadata !DIExpression()) #23, !dbg !16339
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()) #23, !dbg !16339
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !16341
  br i1 %7, label %8, label %9, !dbg !16342

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !16343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !16343
  unreachable, !dbg !16343

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef nonnull %6) #24, !dbg !16344
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15609, metadata !DIExpression()) #23, !dbg !16339
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16345
  br i1 %11, label %22, label %12, !dbg !16344

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15609, metadata !DIExpression()) #23, !dbg !16339
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15609, metadata !DIExpression()) #23, !dbg !16339
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !16347
  %16 = icmp sgt i32 %15, 0, !dbg !16348
  br i1 %16, label %17, label %19, !dbg !16349

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16350
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !16351
  br label %24, !dbg !16352

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !16345
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15609, metadata !DIExpression()) #23, !dbg !16339
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16345
  br i1 %21, label %22, label %12, !dbg !16344, !llvm.loop !16353

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16355
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !16356
  br label %24, !dbg !16357

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16359 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16364, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16363, metadata !DIExpression()), !dbg !16365
  %4 = icmp eq i64 %3, -1, !dbg !16366
  br i1 %4, label %6, label %5, !dbg !16368

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.353(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !16369
  br label %6, !dbg !16371

6:                                                ; preds = %5, %2
  ret void, !dbg !16372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.353(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16373 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16376, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16375, metadata !DIExpression()), !dbg !16377
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16378
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !16379
  ret void, !dbg !16380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16381 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16383, metadata !DIExpression()), !dbg !16391
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16392
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16392
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16384, metadata !DIExpression()), !dbg !16391
  call void @llvm.dbg.value(metadata i32 0, metadata !16385, metadata !DIExpression()), !dbg !16393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16394
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16396, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16394
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16399
  br i1 %5, label %7, label %6, !dbg !16400

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16401
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16401
  unreachable, !dbg !16401

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16394
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16402
  call void @llvm.dbg.value(metadata i32 undef, metadata !16387, metadata !DIExpression()), !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !16385, metadata !DIExpression()), !dbg !16393
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16403
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !16404
  %10 = load i8, i8* %9, align 1, !dbg !16404
  %11 = and i8 %10, 40, !dbg !16405
  %12 = icmp eq i8 %11, 0, !dbg !16405
  call void @llvm.dbg.value(metadata i1 %12, metadata !16388, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  br i1 %12, label %13, label %20, !dbg !16407

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16408
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !16408
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !16408
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !16412
  br i1 %17, label %19, label %18, !dbg !16413

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !16414
  br label %19, !dbg !16416

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.349(%struct.k_thread* noundef nonnull %3) #25, !dbg !16417
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !16418
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !16419
  br label %20, !dbg !16420

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16421
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16423
  br i1 %21, label %23, label %22, !dbg !16424

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16425
  unreachable, !dbg !16425

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !16396
  call void @llvm.dbg.value(metadata i32 %24, metadata !15389, metadata !DIExpression()) #23, !dbg !16398
  call void @llvm.dbg.value(metadata i32 %24, metadata !15383, metadata !DIExpression()) #23, !dbg !16394
  call void @llvm.dbg.value(metadata i32 %24, metadata !16387, metadata !DIExpression()), !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !16428, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16385, metadata !DIExpression()), !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !16385, metadata !DIExpression()), !dbg !16393
  ret void, !dbg !16429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16432, metadata !DIExpression()), !dbg !16433
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !16434
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16435
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !16436
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16437
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !16438
  ret void, !dbg !16439
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !16440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16444, metadata !DIExpression()), !dbg !16445
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16446
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !16446
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !16446
  br i1 %4, label %5, label %6, !dbg !16449

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.356, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 726) #24, !dbg !16450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 726) #24, !dbg !16450
  unreachable, !dbg !16450

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !16452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16453 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16455, metadata !DIExpression()), !dbg !16456
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16457
  %3 = load i8, i8* %2, align 1, !dbg !16458
  %4 = and i8 %3, -3, !dbg !16458
  store i8 %4, i8* %2, align 1, !dbg !16458
  ret void, !dbg !16459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16460 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16462, metadata !DIExpression()), !dbg !16463
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !16464
  br i1 %2, label %3, label %7, !dbg !16466

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()) #23, !dbg !16467
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16470
  %5 = load i8, i8* %4, align 1, !dbg !16471
  %6 = and i8 %5, 127, !dbg !16471
  store i8 %6, i8* %4, align 1, !dbg !16471
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15579, metadata !DIExpression()) #23, !dbg !16472
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !16474
  br label %7, !dbg !16475

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16476
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16477
  %10 = zext i1 %9 to i32, !dbg !16477
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !16478
  ret void, !dbg !16479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16480 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16482, metadata !DIExpression()), !dbg !16483
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16484
  %3 = load i8, i8* %2, align 1, !dbg !16485
  %4 = or i8 %3, 2, !dbg !16485
  store i8 %4, i8* %2, align 1, !dbg !16485
  ret void, !dbg !16486
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #21 !dbg !16487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16489, metadata !DIExpression()), !dbg !16493
  call void @llvm.dbg.value(metadata i32 0, metadata !16490, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16495
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16497, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16495
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16500
  br i1 %3, label %5, label %4, !dbg !16501

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16502
  unreachable, !dbg !16502

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16495
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16503
  call void @llvm.dbg.value(metadata i32 undef, metadata !16492, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16490, metadata !DIExpression()), !dbg !16494
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16504
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16507
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16509
  br i1 %6, label %8, label %7, !dbg !16510

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16511
  unreachable, !dbg !16511

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16497
  call void @llvm.dbg.value(metadata i32 %9, metadata !15389, metadata !DIExpression()) #23, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %9, metadata !15383, metadata !DIExpression()) #23, !dbg !16495
  call void @llvm.dbg.value(metadata i32 %9, metadata !16492, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16507
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16512
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16514, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16490, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16490, metadata !DIExpression()), !dbg !16494
  ret void, !dbg !16515
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16516 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16522, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 %0, metadata !16520, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !16521, metadata !DIExpression()), !dbg !16527
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16528
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #25, !dbg !16529
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16530
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16531
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %6, metadata !16523, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.value(metadata i32 0, metadata !16524, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16534
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16536, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16534
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16539
  br i1 %8, label %10, label %9, !dbg !16540

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16541
  unreachable, !dbg !16541

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16534
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !16526, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16533
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16543
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16547
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !16548
  br i1 %13, label %14, label %15, !dbg !16549

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16550
  br label %15, !dbg !16552

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16553
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16555
  br i1 %16, label %18, label %17, !dbg !16556

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16557
  unreachable, !dbg !16557

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %19, metadata !15389, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %19, metadata !15383, metadata !DIExpression()) #23, !dbg !16534
  call void @llvm.dbg.value(metadata i32 %19, metadata !16526, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16553
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16558
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !16560, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16524, metadata !DIExpression()), !dbg !16533
  call void @llvm.dbg.value(metadata i32 undef, metadata !16524, metadata !DIExpression()), !dbg !16533
  ret i32 %6, !dbg !16561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16562 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16567, metadata !DIExpression()), !dbg !16570
  call void @llvm.dbg.value(metadata i64 undef, metadata !16569, metadata !DIExpression()), !dbg !16570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16566, metadata !DIExpression()), !dbg !16570
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16568, metadata !DIExpression()), !dbg !16570
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16571
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16572
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !16573
  br i1 %6, label %7, label %8, !dbg !16576

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.359, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 846) #24, !dbg !16577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 846) #24, !dbg !16577
  unreachable, !dbg !16577

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16579
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16581, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16579
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16584
  br i1 %10, label %12, label %11, !dbg !16585

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16586
  unreachable, !dbg !16586

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16579
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16587
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16588
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !16589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16064, metadata !DIExpression()) #23, !dbg !16590
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !16592
  br i1 %14, label %16, label %15, !dbg !16593

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !16594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !16594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !16594
  unreachable, !dbg !16594

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16060, metadata !DIExpression()) #23, !dbg !16595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16064, metadata !DIExpression()) #23, !dbg !16597
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16599
  br i1 %17, label %19, label %18, !dbg !16600

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !16601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !16601
  unreachable, !dbg !16601

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !16055, metadata !DIExpression()) #23, !dbg !16595
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !16602
  ret i32 %21, !dbg !16603
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16604 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16608, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16609, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata i32 0, metadata !16610, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16615
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16617, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16615
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16620
  br i1 %3, label %5, label %4, !dbg !16621

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16622
  unreachable, !dbg !16622

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16619
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16615
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16612, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16609, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !16610, metadata !DIExpression()), !dbg !16614
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !16624
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16609, metadata !DIExpression()), !dbg !16613
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16627
  br i1 %8, label %10, label %9, !dbg !16629

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !16630
  br label %10, !dbg !16632

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16633
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16635
  br i1 %11, label %13, label %12, !dbg !16636

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16637
  unreachable, !dbg !16637

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16617
  call void @llvm.dbg.value(metadata i32 %14, metadata !15389, metadata !DIExpression()) #23, !dbg !16619
  call void @llvm.dbg.value(metadata i32 %14, metadata !15383, metadata !DIExpression()) #23, !dbg !16615
  call void @llvm.dbg.value(metadata i32 %14, metadata !16612, metadata !DIExpression()), !dbg !16614
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16640, !srcloc !15431
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16609, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.value(metadata i32 undef, metadata !16610, metadata !DIExpression()), !dbg !16614
  ret %struct.k_thread* %7, !dbg !16641
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16642 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16644, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16645, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 0, metadata !16646, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16651
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16653, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16651
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16656
  br i1 %3, label %5, label %4, !dbg !16657

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16658
  unreachable, !dbg !16658

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16651
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16659
  call void @llvm.dbg.value(metadata i32 undef, metadata !16648, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16645, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16646, metadata !DIExpression()), !dbg !16650
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !16660
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16645, metadata !DIExpression()), !dbg !16649
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16663
  br i1 %8, label %11, label %9, !dbg !16665

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !16666
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !16668
  br label %11, !dbg !16669

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16670
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16672
  br i1 %12, label %14, label %13, !dbg !16673

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16674
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16674
  unreachable, !dbg !16674

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !16653
  call void @llvm.dbg.value(metadata i32 %15, metadata !15389, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata i32 %15, metadata !15383, metadata !DIExpression()) #23, !dbg !16651
  call void @llvm.dbg.value(metadata i32 %15, metadata !16648, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16670
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16675
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !16677, !srcloc !15431
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16645, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !16646, metadata !DIExpression()), !dbg !16650
  ret %struct.k_thread* %7, !dbg !16678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16681, metadata !DIExpression()), !dbg !16682
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16489, metadata !DIExpression()) #23, !dbg !16683
  call void @llvm.dbg.value(metadata i32 0, metadata !16490, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16686
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16688, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16690
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16690
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16686
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16691
  br i1 %3, label %5, label %4, !dbg !16692

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16693
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16693
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16693
  unreachable, !dbg !16693

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16690
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16686
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16694
  call void @llvm.dbg.value(metadata i32 undef, metadata !16492, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata i32 undef, metadata !16490, metadata !DIExpression()) #23, !dbg !16685
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16696
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16698
  br i1 %6, label %8, label %7, !dbg !16699

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16700
  unreachable, !dbg !16700

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16688
  call void @llvm.dbg.value(metadata i32 %9, metadata !15389, metadata !DIExpression()) #23, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %9, metadata !15383, metadata !DIExpression()) #23, !dbg !16686
  call void @llvm.dbg.value(metadata i32 %9, metadata !16492, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16703, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16490, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata i32 undef, metadata !16490, metadata !DIExpression()) #23, !dbg !16685
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !16704
  ret void, !dbg !16705
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16708, metadata !DIExpression()), !dbg !16714
  call void @llvm.dbg.value(metadata i32 %1, metadata !16709, metadata !DIExpression()), !dbg !16714
  call void @llvm.dbg.value(metadata i8 0, metadata !16710, metadata !DIExpression()), !dbg !16714
  call void @llvm.dbg.value(metadata i32 0, metadata !16711, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16716
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16718, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16716
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16721
  br i1 %4, label %6, label %5, !dbg !16722

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16723
  unreachable, !dbg !16723

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16716
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16724
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata i8 poison, metadata !16710, metadata !DIExpression()), !dbg !16714
  call void @llvm.dbg.value(metadata i32 undef, metadata !16711, metadata !DIExpression()), !dbg !16715
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !16725
  call void @llvm.dbg.value(metadata i1 %9, metadata !16710, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16714
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !16728

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()) #23, !dbg !16729
  %14 = load i8, i8* %7, align 1, !dbg !16735
  %15 = and i8 %14, 127, !dbg !16735
  store i8 %15, i8* %7, align 1, !dbg !16735
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15579, metadata !DIExpression()) #23, !dbg !16736
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !16738
  store i8 %12, i8* %11, align 2, !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()) #23, !dbg !16740
  %16 = load i8, i8* %7, align 1, !dbg !16742
  %17 = or i8 %16, -128, !dbg !16742
  store i8 %17, i8* %7, align 1, !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15595, metadata !DIExpression()) #23, !dbg !16743
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15602, metadata !DIExpression()) #23, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15608, metadata !DIExpression()) #23, !dbg !16745
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !16747
  br i1 %18, label %19, label %20, !dbg !16748

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !16749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !16749
  unreachable, !dbg !16749

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !16750
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15609, metadata !DIExpression()) #23, !dbg !16745
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16751
  br i1 %22, label %32, label %23, !dbg !16750

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15609, metadata !DIExpression()) #23, !dbg !16745
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !16752
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !15609, metadata !DIExpression()) #23, !dbg !16745
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !16753
  %27 = icmp sgt i32 %26, 0, !dbg !16754
  br i1 %27, label %28, label %29, !dbg !16755

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !16756
  br label %33, !dbg !16757

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !16751
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !15609, metadata !DIExpression()) #23, !dbg !16745
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16751
  br i1 %31, label %32, label %23, !dbg !16750, !llvm.loop !16758

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !16760
  br label %33, !dbg !16761

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !16762
  br label %35, !dbg !16763

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16764
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16766
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16768
  br i1 %36, label %38, label %37, !dbg !16769

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16770
  unreachable, !dbg !16770

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %39, metadata !15389, metadata !DIExpression()) #23, !dbg !16720
  call void @llvm.dbg.value(metadata i32 %39, metadata !15383, metadata !DIExpression()) #23, !dbg !16716
  call void @llvm.dbg.value(metadata i32 %39, metadata !16713, metadata !DIExpression()), !dbg !16715
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16766
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16771
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16773, !srcloc !15431
  call void @llvm.dbg.value(metadata i8 poison, metadata !16710, metadata !DIExpression()), !dbg !16714
  call void @llvm.dbg.value(metadata i32 undef, metadata !16711, metadata !DIExpression()), !dbg !16715
  ret i1 %9, !dbg !16774
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16779, metadata !DIExpression()), !dbg !16782
  call void @llvm.dbg.value(metadata i32 %1, metadata !16780, metadata !DIExpression()), !dbg !16782
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !16783
  call void @llvm.dbg.value(metadata i1 %3, metadata !16781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16782
  br i1 %3, label %4, label %12, !dbg !16784

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16786
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16787
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16787
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16787
  %9 = load i8, i8* %8, align 1, !dbg !16787
  %10 = icmp eq i8 %9, 0, !dbg !16788
  br i1 %10, label %11, label %12, !dbg !16789

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !16790
  br label %12, !dbg !16792

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16794 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16796, metadata !DIExpression()), !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16800
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16802, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16804
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16804
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16800
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16805
  br i1 %2, label %4, label %3, !dbg !16806

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16807
  unreachable, !dbg !16807

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16804
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16800
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16798, metadata !DIExpression()), !dbg !16799
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()), !dbg !16799
  tail call fastcc void @z_sched_lock() #25, !dbg !16809
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16812
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16812
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16814
  br i1 %5, label %7, label %6, !dbg !16815

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16816
  unreachable, !dbg !16816

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16802
  call void @llvm.dbg.value(metadata i32 %8, metadata !15389, metadata !DIExpression()) #23, !dbg !16804
  call void @llvm.dbg.value(metadata i32 %8, metadata !15383, metadata !DIExpression()) #23, !dbg !16800
  call void @llvm.dbg.value(metadata i32 %8, metadata !16798, metadata !DIExpression()), !dbg !16799
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16819, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16796, metadata !DIExpression()), !dbg !16799
  call void @llvm.dbg.value(metadata i32 undef, metadata !16796, metadata !DIExpression()), !dbg !16799
  ret void, !dbg !16820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16821 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16822, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %1, metadata !16107, metadata !DIExpression()) #23, !dbg !16827
  %2 = icmp eq i32 %1, 0, !dbg !16828
  br i1 %2, label %4, label %3, !dbg !16829

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.367, i32 0, i32 0), i32 noundef 253) #24, !dbg !16830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !16830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.367, i32 0, i32 0), i32 noundef 253) #24, !dbg !16830
  unreachable, !dbg !16830

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16832
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16832
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16832
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16832
  %9 = load i8, i8* %8, align 1, !dbg !16832
  %10 = icmp eq i8 %9, 1, !dbg !16832
  br i1 %10, label %11, label %12, !dbg !16835

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.367, i32 0, i32 0), i32 noundef 254) #24, !dbg !16836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !16836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.367, i32 0, i32 0), i32 noundef 254) #24, !dbg !16836
  unreachable, !dbg !16836

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16838
  store i8 %13, i8* %8, align 1, !dbg !16838
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16839, !srcloc !16841
  ret void, !dbg !16842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16843 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16845, metadata !DIExpression()), !dbg !16848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !16849
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16851, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16853
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !16853
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16849
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16854
  br i1 %2, label %4, label %3, !dbg !16855

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !16856
  unreachable, !dbg !16856

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !16853
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !16849
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16857
  call void @llvm.dbg.value(metadata i32 undef, metadata !16847, metadata !DIExpression()), !dbg !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !16845, metadata !DIExpression()), !dbg !16848
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16858
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16858
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16858
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16858
  %9 = load i8, i8* %8, align 1, !dbg !16858
  %10 = icmp eq i8 %9, 0, !dbg !16858
  br i1 %10, label %11, label %12, !dbg !16863

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.371, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 999) #24, !dbg !16864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !16864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 999) #24, !dbg !16864
  unreachable, !dbg !16864

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16866, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %13, metadata !16107, metadata !DIExpression()) #23, !dbg !16871
  %14 = icmp eq i32 %13, 0, !dbg !16872
  br i1 %14, label %16, label %15, !dbg !16873

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1000) #24, !dbg !16874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !16874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1000) #24, !dbg !16874
  unreachable, !dbg !16874

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16876
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16877
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16877
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16877
  %21 = load i8, i8* %20, align 1, !dbg !16878
  %22 = add i8 %21, 1, !dbg !16878
  store i8 %22, i8* %20, align 1, !dbg !16878
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !16879
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16880
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !16880
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16882
  br i1 %23, label %25, label %24, !dbg !16883

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !16884
  unreachable, !dbg !16884

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16851
  call void @llvm.dbg.value(metadata i32 %26, metadata !15389, metadata !DIExpression()) #23, !dbg !16853
  call void @llvm.dbg.value(metadata i32 %26, metadata !15383, metadata !DIExpression()) #23, !dbg !16849
  call void @llvm.dbg.value(metadata i32 %26, metadata !16847, metadata !DIExpression()), !dbg !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !16880
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !16885
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16887, !srcloc !15431
  call void @llvm.dbg.value(metadata i32 1, metadata !16845, metadata !DIExpression()), !dbg !16848
  call void @llvm.dbg.value(metadata i32 undef, metadata !16845, metadata !DIExpression()), !dbg !16848
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !16888
  ret void, !dbg !16889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16890 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16891
  ret %struct.k_thread* %1, !dbg !16892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16893 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16897, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16898, metadata !DIExpression()), !dbg !16902
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16903
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16899, metadata !DIExpression()), !dbg !16902
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16904
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16900, metadata !DIExpression()), !dbg !16902
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !16905
  call void @llvm.dbg.value(metadata i32 %5, metadata !16901, metadata !DIExpression()), !dbg !16902
  %6 = icmp sgt i32 %5, 0, !dbg !16906
  br i1 %6, label %17, label %7, !dbg !16908

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16909
  br i1 %8, label %17, label %9, !dbg !16911

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16912
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16912
  %12 = load i32, i32* %11, align 8, !dbg !16912
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16914
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16914
  %15 = load i32, i32* %14, align 8, !dbg !16914
  %16 = icmp ult i32 %12, %15, !dbg !16915
  br label %17, !dbg !16916

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16917
  ret i1 %18, !dbg !16918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16919 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16936, metadata !DIExpression()), !dbg !16951
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16937, metadata !DIExpression()), !dbg !16951
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !16952
  br i1 %4, label %5, label %6, !dbg !16955

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1179) #24, !dbg !16956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1179) #24, !dbg !16956
  unreachable, !dbg !16956

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16958
  %8 = load i32, i32* %7, align 4, !dbg !16959
  %9 = add nsw i32 %8, 1, !dbg !16959
  store i32 %9, i32* %7, align 4, !dbg !16959
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16960
  store i32 %8, i32* %10, align 8, !dbg !16961
  %11 = load i32, i32* %7, align 4, !dbg !16962
  %12 = icmp eq i32 %11, 0, !dbg !16963
  br i1 %12, label %13, label %35, !dbg !16964

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16965
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16965
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16939, metadata !DIExpression()), !dbg !16965
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16965
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16965
  %17 = load i32, i32* %16, align 4, !dbg !16965
  %18 = shl i32 %17, 2, !dbg !16965
  %19 = alloca i8, i32 %18, align 8, !dbg !16965
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16965
  store i8* %19, i8** %20, align 4, !dbg !16965
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16965
  %22 = alloca i8, i32 %17, align 8, !dbg !16965
  store i8* %22, i8** %21, align 4, !dbg !16965
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16965
  store i32 -1, i32* %23, align 4, !dbg !16965
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !16966
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16948, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16938, metadata !DIExpression()), !dbg !16951
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16968
  br i1 %25, label %26, label %27, !dbg !16965

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16968
  br label %35, !dbg !16969

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16938, metadata !DIExpression()), !dbg !16951
  %29 = load i32, i32* %7, align 4, !dbg !16970
  %30 = add nsw i32 %29, 1, !dbg !16970
  store i32 %30, i32* %7, align 4, !dbg !16970
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16972
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16972
  store i32 %29, i32* %32, align 8, !dbg !16973
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !16966
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16948, metadata !DIExpression()), !dbg !16967
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16938, metadata !DIExpression()), !dbg !16951
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16968
  br i1 %34, label %26, label %27, !dbg !16965, !llvm.loop !16974

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16976
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16977
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !16978
  ret void, !dbg !16979
}

; Function Attrs: optsize
declare !dbg !16980 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16985 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16988 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16990, metadata !DIExpression()), !dbg !16992
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16991, metadata !DIExpression()), !dbg !16992
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !16993
  br i1 %3, label %4, label %5, !dbg !16996

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1200) #24, !dbg !16997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1200) #24, !dbg !16997
  unreachable, !dbg !16997

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16999
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17000
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !17001
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17002
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !17002
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !17004
  br i1 %10, label %11, label %13, !dbg !17005

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17006
  store i32 0, i32* %12, align 4, !dbg !17008
  br label %13, !dbg !17009

13:                                               ; preds = %11, %5
  ret void, !dbg !17010
}

; Function Attrs: optsize
declare !dbg !17011 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17012 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17016, metadata !DIExpression()), !dbg !17019
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17017, metadata !DIExpression()), !dbg !17019
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17020
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !17021
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17018, metadata !DIExpression()), !dbg !17019
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17017, metadata !DIExpression()), !dbg !17019
  ret %struct.k_thread* %4, !dbg !17022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17023 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17027, metadata !DIExpression()), !dbg !17028
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !17029
  ret %struct.rbnode* %2, !dbg !17030
}

; Function Attrs: optsize
declare !dbg !17031 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #22 !dbg !17034 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17044, metadata !DIExpression()), !dbg !17048
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17049
  %3 = load i32, i32* %2, align 4, !dbg !17049
  %4 = icmp eq i32 %3, 0, !dbg !17051
  br i1 %4, label %10, label %5, !dbg !17052

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17045, metadata !DIExpression()), !dbg !17048
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17053, !range !5625
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17054
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17046, metadata !DIExpression()), !dbg !17048
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef %7) #25, !dbg !17055
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17047, metadata !DIExpression()), !dbg !17048
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17045, metadata !DIExpression()), !dbg !17048
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17048
  ret %struct.k_thread* %11, !dbg !17056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17057 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17061, metadata !DIExpression()), !dbg !17064
  call void @llvm.dbg.value(metadata i32 0, metadata !17062, metadata !DIExpression()), !dbg !17064
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.372(%struct._wait_q_t* noundef %0) #25, !dbg !17065
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17063, metadata !DIExpression()), !dbg !17064
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17066
  br i1 %3, label %8, label %4, !dbg !17067

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !17068
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !17070
  call void @llvm.dbg.value(metadata i32 1, metadata !17062, metadata !DIExpression()), !dbg !17064
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.372(%struct._wait_q_t* noundef %0) #25, !dbg !17065
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17063, metadata !DIExpression()), !dbg !17064
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17066
  br i1 %7, label %8, label %4, !dbg !17067, !llvm.loop !17071

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17064
  ret i32 %9, !dbg !17073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.372(%struct._wait_q_t* noundef readonly %0) unnamed_addr #10 !dbg !17074 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17076, metadata !DIExpression()), !dbg !17077
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17078
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef %2) #25, !dbg !17079
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17080
  ret %struct.k_thread* %4, !dbg !17081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17082 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17091, metadata !DIExpression()), !dbg !17092
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17093
  tail call fastcc void @sys_dlist_init.373(%struct._dnode* noundef nonnull %2) #25, !dbg !17094
  ret void, !dbg !17095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.373(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17096 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17100, metadata !DIExpression()), !dbg !17101
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17102
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17103
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17104
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17105
  ret void, !dbg !17106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17107 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !17108
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !17109
  ret void, !dbg !17110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17116, metadata !DIExpression()), !dbg !17117
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17118
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17118
  %4 = load i8, i8* %3, align 2, !dbg !17118
  %5 = sext i8 %4 to i32, !dbg !17119
  ret i32 %5, !dbg !17120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17121 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17125, metadata !DIExpression()), !dbg !17128
  call void @llvm.dbg.value(metadata i32 %1, metadata !17126, metadata !DIExpression()), !dbg !17128
  %3 = add i32 %1, 16, !dbg !17129
  %4 = icmp ult i32 %3, 31, !dbg !17129
  br i1 %4, label %6, label %5, !dbg !17129

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1331) #24, !dbg !17133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.377, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !17133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1331) #24, !dbg !17133
  unreachable, !dbg !17133

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17135, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %7, metadata !16107, metadata !DIExpression()) #23, !dbg !17140
  %8 = icmp eq i32 %7, 0, !dbg !17141
  br i1 %8, label %10, label %9, !dbg !17142

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1332) #24, !dbg !17143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !17143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1332) #24, !dbg !17143
  unreachable, !dbg !17143

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17127, metadata !DIExpression()), !dbg !17128
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !17145
  ret void, !dbg !17146
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17147 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !17148
  br i1 %1, label %8, label %2, !dbg !17149

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !17150
  br i1 %3, label %8, label %4, !dbg !17151

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17152
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !17153
  %7 = xor i1 %6, true, !dbg !17151
  br label %8, !dbg !17151

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17155 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17156, !range !8282
  %2 = icmp eq i8 %1, 0, !dbg !17156
  ret i1 %2, !dbg !17157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17158 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17161, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %1, metadata !16107, metadata !DIExpression()) #23, !dbg !17166
  %2 = icmp eq i32 %1, 0, !dbg !17167
  br i1 %2, label %4, label %3, !dbg !17168

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1392) #24, !dbg !17169
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !17169
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1392) #24, !dbg !17169
  unreachable, !dbg !17169

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !17171
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17173, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17171
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17176
  br i1 %6, label %8, label %7, !dbg !17177

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17178
  unreachable, !dbg !17178

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17175
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17171
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17160, metadata !DIExpression()), !dbg !17180
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17181
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15571, metadata !DIExpression()) #23, !dbg !17184
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !17186
  %11 = load i8, i8* %10, align 1, !dbg !17187
  %12 = and i8 %11, 127, !dbg !17187
  store i8 %12, i8* %10, align 1, !dbg !17187
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15579, metadata !DIExpression()) #23, !dbg !17188
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !17190
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17191
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15588, metadata !DIExpression()) #23, !dbg !17192
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !17194
  %15 = load i8, i8* %14, align 1, !dbg !17195
  %16 = or i8 %15, -128, !dbg !17195
  store i8 %16, i8* %14, align 1, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15595, metadata !DIExpression()) #23, !dbg !17196
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15602, metadata !DIExpression()) #23, !dbg !17198
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15608, metadata !DIExpression()) #23, !dbg !17198
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !17200
  br i1 %17, label %18, label %19, !dbg !17201

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !17202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 186) #24, !dbg !17202
  unreachable, !dbg !17202

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.338(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !17203
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15609, metadata !DIExpression()) #23, !dbg !17198
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17204
  br i1 %21, label %32, label %22, !dbg !17203

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !15609, metadata !DIExpression()) #23, !dbg !17198
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !17205
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15609, metadata !DIExpression()) #23, !dbg !17198
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !17206
  %26 = icmp sgt i32 %25, 0, !dbg !17207
  br i1 %26, label %27, label %29, !dbg !17208

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17209
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !17210
  br label %34, !dbg !17211

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !17204
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !15609, metadata !DIExpression()) #23, !dbg !17198
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17204
  br i1 %31, label %32, label %22, !dbg !17203, !llvm.loop !17212

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17214
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !17215
  br label %34, !dbg !17216

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !17217
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16060, metadata !DIExpression()) #23, !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16064, metadata !DIExpression()) #23, !dbg !17220
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17222
  br i1 %35, label %37, label %36, !dbg !17223

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17224
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17224
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17224
  unreachable, !dbg !17224

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !17173
  call void @llvm.dbg.value(metadata i32 %38, metadata !15389, metadata !DIExpression()) #23, !dbg !17175
  call void @llvm.dbg.value(metadata i32 %38, metadata !15383, metadata !DIExpression()) #23, !dbg !17171
  call void @llvm.dbg.value(metadata i32 %38, metadata !17160, metadata !DIExpression()), !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !17218
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !17225
  ret void, !dbg !17226
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17227 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17231, metadata !DIExpression()), !dbg !17234
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17235, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %3, metadata !16107, metadata !DIExpression()) #23, !dbg !17240
  %4 = icmp eq i32 %3, 0, !dbg !17241
  br i1 %4, label %6, label %5, !dbg !17242

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1463) #24, !dbg !17243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !17243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1463) #24, !dbg !17243
  unreachable, !dbg !17243

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17245
  br i1 %7, label %8, label %10, !dbg !17247

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17248
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !17250
  br label %15, !dbg !17251

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !17232, metadata !DIExpression()), !dbg !17234
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !17252
  %12 = sext i32 %11 to i64, !dbg !17252
  call void @llvm.dbg.value(metadata i64 %12, metadata !17232, metadata !DIExpression()), !dbg !17234
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !17253
  %14 = trunc i64 %13 to i32, !dbg !17253
  call void @llvm.dbg.value(metadata i32 %14, metadata !17233, metadata !DIExpression()), !dbg !17234
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !17234
  ret i32 %16, !dbg !17254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17259, metadata !DIExpression()), !dbg !17260
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17261, !srcloc !17263
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !17264
  ret void, !dbg !17265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17266 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17270, metadata !DIExpression()), !dbg !17274
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17275, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %2, metadata !16107, metadata !DIExpression()) #23, !dbg !17280
  %3 = icmp eq i32 %2, 0, !dbg !17281
  br i1 %3, label %5, label %4, !dbg !17282

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1420) #24, !dbg !17283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !17283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1420) #24, !dbg !17283
  unreachable, !dbg !17283

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17285
  br i1 %6, label %7, label %8, !dbg !17287

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !17288
  br label %43, !dbg !17290

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17272, metadata !DIExpression()), !dbg !17274
  %9 = icmp sgt i64 %0, -3, !dbg !17291
  br i1 %9, label %10, label %14, !dbg !17293

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !17294
  %12 = trunc i64 %0 to i32, !dbg !17296
  %13 = add i32 %11, %12, !dbg !17296
  call void @llvm.dbg.value(metadata i32 %13, metadata !17271, metadata !DIExpression()), !dbg !17274
  br label %17, !dbg !17297

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17298
  %16 = sub i32 -2, %15, !dbg !17298
  call void @llvm.dbg.value(metadata i32 %16, metadata !17271, metadata !DIExpression()), !dbg !17274
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17300
  call void @llvm.dbg.value(metadata i32 %18, metadata !17271, metadata !DIExpression()), !dbg !17274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !17301
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17303, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17301
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17306
  br i1 %20, label %22, label %21, !dbg !17307

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17308
  unreachable, !dbg !17308

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17301
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17309
  call void @llvm.dbg.value(metadata i32 undef, metadata !17273, metadata !DIExpression()), !dbg !17274
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17310
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17311
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !17312
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17313
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17314
  tail call fastcc void @z_add_thread_timeout.353(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !17314
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17315
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !17316
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !17317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16060, metadata !DIExpression()) #23, !dbg !17317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16064, metadata !DIExpression()) #23, !dbg !17319
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17321
  br i1 %27, label %29, label %28, !dbg !17322

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17323
  unreachable, !dbg !17323

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %30, metadata !15389, metadata !DIExpression()) #23, !dbg !17305
  call void @llvm.dbg.value(metadata i32 %30, metadata !15383, metadata !DIExpression()) #23, !dbg !17301
  call void @llvm.dbg.value(metadata i32 %30, metadata !17273, metadata !DIExpression()), !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !17317
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !17324
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17325
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !17325
  br i1 %33, label %34, label %35, !dbg !17328

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.380, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1448) #24, !dbg !17329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.340, i32 0, i32 0)) #24, !dbg !17329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1448) #24, !dbg !17329
  unreachable, !dbg !17329

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17331
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !17332
  %38 = zext i32 %37 to i64, !dbg !17332
  %39 = sub nsw i64 %36, %38, !dbg !17333
  call void @llvm.dbg.value(metadata i64 %39, metadata !17270, metadata !DIExpression()), !dbg !17274
  %40 = icmp sgt i64 %39, 0, !dbg !17334
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17334
  %42 = trunc i64 %41 to i32, !dbg !17334
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17274
  ret i32 %44, !dbg !17335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !17336 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17338, metadata !DIExpression()), !dbg !17339
  call void @llvm.dbg.value(metadata i64 %0, metadata !15439, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i32 10000, metadata !15442, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i32 1000, metadata !15443, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i8 1, metadata !15444, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i1 false, metadata !15445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17340
  call void @llvm.dbg.value(metadata i1 false, metadata !15446, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17340
  call void @llvm.dbg.value(metadata i8 0, metadata !15447, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i1 false, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17340
  call void @llvm.dbg.value(metadata i1 true, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17340
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.value(metadata i64 %0, metadata !15439, metadata !DIExpression()), !dbg !17340
  %2 = udiv i64 %0, 10, !dbg !17342
  ret i64 %2, !dbg !17346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17347 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17348, !srcloc !17350
  tail call void @z_impl_k_yield() #25, !dbg !17351
  ret void, !dbg !17352
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17357, metadata !DIExpression()), !dbg !17359
  %2 = sext i32 %0 to i64, !dbg !17360
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !17361
  call void @llvm.dbg.value(metadata i64 %3, metadata !17358, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17359
  %4 = shl i64 %3, 32, !dbg !17362
  %5 = ashr exact i64 %4, 32, !dbg !17362
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !17363
  call void @llvm.dbg.value(metadata i32 %6, metadata !17358, metadata !DIExpression()), !dbg !17359
  %7 = sext i32 %6 to i64, !dbg !17364
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !17365
  %9 = trunc i64 %8 to i32, !dbg !17365
  ret i32 %9, !dbg !17366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !17367 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17369, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i64 %0, metadata !15439, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15442, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.value(metadata i32 10000, metadata !15443, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.value(metadata i8 1, metadata !15444, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.value(metadata i1 false, metadata !15445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17371
  call void @llvm.dbg.value(metadata i1 true, metadata !15446, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17371
  call void @llvm.dbg.value(metadata i8 0, metadata !15447, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.value(metadata i1 false, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17371
  call void @llvm.dbg.value(metadata i1 true, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17371
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !17371
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !17371
  %2 = add i64 %0, 99, !dbg !17373
  call void @llvm.dbg.value(metadata i64 %2, metadata !15439, metadata !DIExpression()), !dbg !17371
  %3 = udiv i64 %2, 100, !dbg !17374
  ret i64 %3, !dbg !17375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !17376 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17378, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata i64 %0, metadata !15439, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i32 10000, metadata !15442, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15443, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i8 1, metadata !15444, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i1 false, metadata !15445, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17380
  call void @llvm.dbg.value(metadata i1 false, metadata !15446, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17380
  call void @llvm.dbg.value(metadata i8 0, metadata !15447, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i1 true, metadata !15448, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17380
  call void @llvm.dbg.value(metadata i1 false, metadata !15449, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17380
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i64 0, metadata !15450, metadata !DIExpression()), !dbg !17380
  %2 = mul i64 %0, 100, !dbg !17382
  ret i64 %2, !dbg !17384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17387, metadata !DIExpression()), !dbg !17388
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !17389
  br i1 %2, label %14, label %3, !dbg !17391

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !17392
  %5 = icmp slt i32 %4, 0, !dbg !17394
  br i1 %5, label %6, label %10, !dbg !17395

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17396
  %8 = load i8, i8* %7, align 1, !dbg !17396
  %9 = icmp eq i8 %8, 16, !dbg !17399
  br i1 %9, label %10, label %14, !dbg !17400

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !17401
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !17402
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17403, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %11, metadata !16107, metadata !DIExpression()) #23, !dbg !17407
  %12 = icmp eq i32 %11, 0, !dbg !17408
  br i1 %12, label %13, label %14, !dbg !17409

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !17410
  br label %14, !dbg !17412

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17416, metadata !DIExpression()), !dbg !17417
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17418
  %3 = load i8, i8* %2, align 1, !dbg !17418
  %4 = and i8 %3, 2, !dbg !17419
  %5 = icmp ne i8 %4, 0, !dbg !17420
  ret i1 %5, !dbg !17421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17422 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17427
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17426, metadata !DIExpression()), !dbg !17428
  ret %struct.k_thread* %1, !dbg !17429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17430 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17433, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %1, metadata !16107, metadata !DIExpression()) #23, !dbg !17436
  %2 = icmp eq i32 %1, 0, !dbg !17437
  br i1 %2, label %3, label %8, !dbg !17438

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17439
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !17440
  %6 = icmp ne i32 %5, 0, !dbg !17438
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17444, metadata !DIExpression()), !dbg !17446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !17447
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17449, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !17451
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17447
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17452
  br i1 %3, label %5, label %4, !dbg !17453

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17454
  unreachable, !dbg !17454

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17449
  call void @llvm.dbg.value(metadata i32 %6, metadata !15389, metadata !DIExpression()) #23, !dbg !17451
  call void @llvm.dbg.value(metadata i32 %6, metadata !15383, metadata !DIExpression()) #23, !dbg !17447
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17455
  call void @llvm.dbg.value(metadata i32 %6, metadata !17445, metadata !DIExpression()), !dbg !17446
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17456
  %8 = load i8, i8* %7, align 4, !dbg !17456
  %9 = and i8 %8, 1, !dbg !17458
  %10 = icmp eq i8 %9, 0, !dbg !17459
  br i1 %10, label %15, label %11, !dbg !17460

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !17461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !17461
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17464
  br i1 %12, label %14, label %13, !dbg !17465

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17466
  unreachable, !dbg !17466

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15411, metadata !DIExpression()) #23, !dbg !17461
  call void @llvm.dbg.value(metadata i32 %6, metadata !15425, metadata !DIExpression()) #23, !dbg !17467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17469, !srcloc !15431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1731) #24, !dbg !17470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.386, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !17470
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1731) #24, !dbg !17470
  unreachable, !dbg !17470

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17474
  %17 = load i8, i8* %16, align 1, !dbg !17474
  %18 = and i8 %17, 8, !dbg !17476
  %19 = icmp eq i8 %18, 0, !dbg !17477
  br i1 %19, label %24, label %20, !dbg !17478

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !17479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !17479
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17482
  br i1 %21, label %23, label %22, !dbg !17483

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17484
  unreachable, !dbg !17484

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15411, metadata !DIExpression()) #23, !dbg !17479
  call void @llvm.dbg.value(metadata i32 %6, metadata !15425, metadata !DIExpression()) #23, !dbg !17485
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17487, !srcloc !15431
  br label %39, !dbg !17488

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !17489
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17490
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !17492
  br i1 %26, label %27, label %35, !dbg !17493

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17494, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %28, metadata !16107, metadata !DIExpression()) #23, !dbg !17497
  %29 = icmp eq i32 %28, 0, !dbg !17498
  br i1 %29, label %30, label %35, !dbg !17499

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !17500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16060, metadata !DIExpression()) #23, !dbg !17500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16064, metadata !DIExpression()) #23, !dbg !17503
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17505
  br i1 %31, label %33, label %32, !dbg !17506

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17507
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17507
  unreachable, !dbg !17507

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !16055, metadata !DIExpression()) #23, !dbg !17500
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !17508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1778) #24, !dbg !17509
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.387, i32 0, i32 0)) #24, !dbg !17509
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1778) #24, !dbg !17509
  unreachable, !dbg !17509

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !17513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !17513
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17515
  br i1 %36, label %38, label %37, !dbg !17516

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17517
  unreachable, !dbg !17517

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15411, metadata !DIExpression()) #23, !dbg !17513
  call void @llvm.dbg.value(metadata i32 %6, metadata !15425, metadata !DIExpression()) #23, !dbg !17518
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17520, !srcloc !15431
  br label %39, !dbg !17521

39:                                               ; preds = %38, %23
  ret void, !dbg !17521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17524, metadata !DIExpression()), !dbg !17525
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17526
  %3 = load i8, i8* %2, align 1, !dbg !17526
  %4 = and i8 %3, 8, !dbg !17528
  %5 = icmp eq i8 %4, 0, !dbg !17529
  br i1 %5, label %6, label %20, !dbg !17530

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17531
  %8 = or i8 %7, 8, !dbg !17531
  store i8 %8, i8* %2, align 1, !dbg !17531
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !17533
  br i1 %9, label %10, label %12, !dbg !17535

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()) #23, !dbg !17536
  %11 = and i8 %8, 95, !dbg !17539
  store i8 %11, i8* %2, align 1, !dbg !17539
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15579, metadata !DIExpression()) #23, !dbg !17540
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !17542
  br label %12, !dbg !17543

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17544
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !17544
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !17546
  br i1 %15, label %17, label %16, !dbg !17547

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !17548
  br label %17, !dbg !17550

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !17551
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17552
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #25, !dbg !17553
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !17554
  br label %20, !dbg !17555

20:                                               ; preds = %17, %1
  ret void, !dbg !17556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !17557 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17561, metadata !DIExpression()), !dbg !17563
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.372(%struct._wait_q_t* noundef %0) #25, !dbg !17564
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17562, metadata !DIExpression()), !dbg !17563
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17565
  br i1 %3, label %10, label %4, !dbg !17566

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !17567
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !17569
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17570, metadata !DIExpression()), !dbg !17576
  call void @llvm.dbg.value(metadata i32 0, metadata !17575, metadata !DIExpression()), !dbg !17576
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !17578
  store i32 0, i32* %7, align 4, !dbg !17579
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !17580
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.372(%struct._wait_q_t* noundef %0) #25, !dbg !17564
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17562, metadata !DIExpression()), !dbg !17563
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17565
  br i1 %9, label %10, label %4, !dbg !17566, !llvm.loop !17581

10:                                               ; preds = %4, %1
  ret void, !dbg !17583
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17584 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17589, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17588, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !17593
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17595, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !17597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17593
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17598
  br i1 %4, label %6, label %5, !dbg !17599

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17600
  unreachable, !dbg !17600

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17595
  call void @llvm.dbg.value(metadata i32 %7, metadata !15389, metadata !DIExpression()) #23, !dbg !17597
  call void @llvm.dbg.value(metadata i32 %7, metadata !15383, metadata !DIExpression()) #23, !dbg !17593
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17601
  call void @llvm.dbg.value(metadata i32 %7, metadata !17590, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 0, metadata !17591, metadata !DIExpression()), !dbg !17592
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17602
  %9 = load i8, i8* %8, align 1, !dbg !17602
  %10 = and i8 %9, 8, !dbg !17604
  %11 = icmp eq i8 %10, 0, !dbg !17605
  br i1 %11, label %12, label %35, !dbg !17606

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !17589, metadata !DIExpression()), !dbg !17592
  %14 = icmp eq i64 %13, 0, !dbg !17607
  br i1 %14, label %35, label %15, !dbg !17609

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17610
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17612
  br i1 %17, label %35, label %18, !dbg !17613

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17614
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !17614
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !17615
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !17616
  br i1 %22, label %35, label %23, !dbg !17617

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !17618, !srcloc !16111
  call void @llvm.dbg.value(metadata i32 %24, metadata !16107, metadata !DIExpression()) #23, !dbg !17624
  %25 = icmp eq i32 %24, 0, !dbg !17625
  br i1 %25, label %27, label %26, !dbg !17626

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1809) #24, !dbg !17627
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.388, i32 0, i32 0)) #24, !dbg !17627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 1809) #24, !dbg !17627
  unreachable, !dbg !17627

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17629
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17630
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #25, !dbg !17631
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17632
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !17633
  call void @llvm.dbg.value(metadata i32 undef, metadata !16055, metadata !DIExpression()) #23, !dbg !17634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16060, metadata !DIExpression()) #23, !dbg !17634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16064, metadata !DIExpression()) #23, !dbg !17636
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17638
  br i1 %31, label %33, label %32, !dbg !17639

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 225) #24, !dbg !17640
  unreachable, !dbg !17640

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !16055, metadata !DIExpression()) #23, !dbg !17634
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !17641
  call void @llvm.dbg.value(metadata i32 %34, metadata !17591, metadata !DIExpression()), !dbg !17592
  br label %40, !dbg !17642

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !17643
  call void @llvm.dbg.value(metadata i32 %36, metadata !17591, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !17644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !17644
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17646
  br i1 %37, label %39, label %38, !dbg !17647

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17648
  unreachable, !dbg !17648

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15411, metadata !DIExpression()) #23, !dbg !17644
  call void @llvm.dbg.value(metadata i32 %7, metadata !15425, metadata !DIExpression()) #23, !dbg !17649
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !17651, !srcloc !15431
  br label %40, !dbg !17652

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !17592
  ret i32 %41, !dbg !17653
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17654 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17658, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i32 %1, metadata !17659, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i8* %2, metadata !17660, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i8 0, metadata !17662, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i32 0, metadata !17663, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15377, metadata !DIExpression()) #23, !dbg !17668
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17670, !srcloc !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17672
  call void @llvm.dbg.value(metadata i32 undef, metadata !15390, metadata !DIExpression()) #23, !dbg !17672
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17668
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17673
  br i1 %5, label %7, label %6, !dbg !17674

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17675
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.333, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17675
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 148) #24, !dbg !17675
  unreachable, !dbg !17675

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15389, metadata !DIExpression()) #23, !dbg !17672
  call void @llvm.dbg.value(metadata i32 undef, metadata !15383, metadata !DIExpression()) #23, !dbg !17668
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17676
  call void @llvm.dbg.value(metadata i32 undef, metadata !17665, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata i8 poison, metadata !17662, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i32 undef, metadata !17663, metadata !DIExpression()), !dbg !17667
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !17677
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17661, metadata !DIExpression()), !dbg !17666
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !17680
  br i1 %10, label %15, label %11, !dbg !17682

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17683, metadata !DIExpression()), !dbg !17690
  call void @llvm.dbg.value(metadata i32 %1, metadata !17688, metadata !DIExpression()), !dbg !17690
  call void @llvm.dbg.value(metadata i8* %2, metadata !17689, metadata !DIExpression()), !dbg !17690
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17570, metadata !DIExpression()), !dbg !17693
  call void @llvm.dbg.value(metadata i32 %1, metadata !17575, metadata !DIExpression()), !dbg !17693
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 6, i32 1, !dbg !17695
  store i32 %1, i32* %12, align 4, !dbg !17696
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17697
  store i8* %2, i8** %13, align 4, !dbg !17698
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !17699
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !17700
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !17701
  call void @llvm.dbg.value(metadata i8 1, metadata !17662, metadata !DIExpression()), !dbg !17666
  br label %15, !dbg !17702

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !17662, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !17703
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15416, metadata !DIExpression()) #23, !dbg !17703
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17705
  br i1 %16, label %18, label %17, !dbg !17706

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.335, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !17707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.332, i32 0, i32 0), i32 noundef 194) #24, !dbg !17707
  unreachable, !dbg !17707

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !17666
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !17670
  call void @llvm.dbg.value(metadata i32 %20, metadata !15389, metadata !DIExpression()) #23, !dbg !17672
  call void @llvm.dbg.value(metadata i32 %20, metadata !15383, metadata !DIExpression()) #23, !dbg !17668
  call void @llvm.dbg.value(metadata i32 %20, metadata !17665, metadata !DIExpression()), !dbg !17667
  call void @llvm.dbg.value(metadata i32 undef, metadata !15411, metadata !DIExpression()) #23, !dbg !17703
  call void @llvm.dbg.value(metadata i32 undef, metadata !15425, metadata !DIExpression()) #23, !dbg !17708
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !17710, !srcloc !15431
  call void @llvm.dbg.value(metadata i8 poison, metadata !17662, metadata !DIExpression()), !dbg !17666
  call void @llvm.dbg.value(metadata i32 undef, metadata !17663, metadata !DIExpression()), !dbg !17667
  ret i1 %19, !dbg !17711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17712 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17717, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata i64 undef, metadata !17719, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17716, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17718, metadata !DIExpression()), !dbg !17722
  call void @llvm.dbg.value(metadata i8** %4, metadata !17720, metadata !DIExpression()), !dbg !17722
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #25, !dbg !17723
  call void @llvm.dbg.value(metadata i32 %6, metadata !17721, metadata !DIExpression()), !dbg !17722
  %7 = icmp eq i8** %4, null, !dbg !17724
  br i1 %7, label %12, label %8, !dbg !17726

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17727
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17729
  %11 = load i8*, i8** %10, align 4, !dbg !17729
  store i8* %11, i8** %4, align 4, !dbg !17730
  br label %12, !dbg !17731

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17733 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !17735
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !17736
  ret void, !dbg !17737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17738 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17748, metadata !DIExpression()), !dbg !17765
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17746, metadata !DIExpression()), !dbg !17765
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17747, metadata !DIExpression()), !dbg !17765
  %5 = icmp eq i64 %4, -1, !dbg !17766
  br i1 %5, label %63, label %6, !dbg !17768

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17769
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.393(%struct._dnode* noundef %7) #25, !dbg !17769
  br i1 %8, label %9, label %10, !dbg !17772

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.396, i32 0, i32 0), i32 noundef 99) #24, !dbg !17773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.397, i32 0, i32 0)) #24, !dbg !17773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.396, i32 0, i32 0), i32 noundef 99) #24, !dbg !17773
  unreachable, !dbg !17773

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17775
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17776
  call void @llvm.dbg.value(metadata i32 0, metadata !17749, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !17785
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17787, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !17794
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !17794
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !17785
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17795
  br i1 %13, label %15, label %14, !dbg !17798

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !17799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !17799
  unreachable, !dbg !17799

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17787
  call void @llvm.dbg.value(metadata i32 %16, metadata !17790, metadata !DIExpression()) #23, !dbg !17794
  call void @llvm.dbg.value(metadata i32 %16, metadata !17784, metadata !DIExpression()) #23, !dbg !17785
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17801
  call void @llvm.dbg.value(metadata i32 %16, metadata !17755, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.value(metadata i32 undef, metadata !17749, metadata !DIExpression()), !dbg !17777
  %17 = icmp slt i64 %4, -1, !dbg !17802
  br i1 %17, label %18, label %24, !dbg !17803

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17804
  %20 = add i64 %4, %19, !dbg !17805
  %21 = sub i64 -2, %20, !dbg !17805
  call void @llvm.dbg.value(metadata i64 %21, metadata !17759, metadata !DIExpression()), !dbg !17806
  %22 = icmp sgt i64 %21, 1, !dbg !17807
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17807
  br label %29, !dbg !17808

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17809
  %26 = tail call fastcc i32 @elapsed.401() #25, !dbg !17811
  %27 = sext i32 %26 to i64, !dbg !17811
  %28 = add nsw i64 %25, %27, !dbg !17812
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17813
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17814
  store i64 %30, i64* %31, align 8, !dbg !17815
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !17816
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !17756, metadata !DIExpression()), !dbg !17818
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17819
  br i1 %33, label %48, label %34, !dbg !17819

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17820
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !17756, metadata !DIExpression()), !dbg !17818
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17824
  %38 = load i64, i64* %37, align 8, !dbg !17824
  %39 = icmp slt i64 %35, %38, !dbg !17825
  br i1 %39, label %40, label %44, !dbg !17826

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17824
  %42 = sub nsw i64 %38, %35, !dbg !17827
  store i64 %42, i64* %41, align 8, !dbg !17827
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17829
  tail call fastcc void @sys_dlist_insert.402(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !17830
  br label %49, !dbg !17831

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17832
  store i64 %45, i64* %31, align 8, !dbg !17832
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !17833
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !17756, metadata !DIExpression()), !dbg !17818
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17819
  br i1 %47, label %48, label %34, !dbg !17819, !llvm.loop !17834

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.403(%struct._dnode* noundef nonnull %7) #25, !dbg !17836
  br label %49, !dbg !17839

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !17840
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17841
  br i1 %51, label %52, label %59, !dbg !17842

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !17843
  call void @llvm.dbg.value(metadata i32 %53, metadata !17762, metadata !DIExpression()), !dbg !17844
  %54 = icmp ne i32 %53, 0, !dbg !17845
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17847
  br i1 %57, label %59, label %58, !dbg !17847

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !17848
  br label %59, !dbg !17850

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !17857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !17857
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17859
  br i1 %60, label %62, label %61, !dbg !17862

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !17863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !17863
  unreachable, !dbg !17863

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17851, metadata !DIExpression()) #23, !dbg !17857
  call void @llvm.dbg.value(metadata i32 %16, metadata !17865, metadata !DIExpression()) #23, !dbg !17868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17870, !srcloc !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !17749, metadata !DIExpression()), !dbg !17777
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.393(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17873 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17879, metadata !DIExpression()), !dbg !17880
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17881
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17881
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17882
  ret i1 %4, !dbg !17883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.401() unnamed_addr #1 !dbg !17884 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17887
  %2 = icmp eq i32 %1, 0, !dbg !17888
  br i1 %2, label %3, label %5, !dbg !17887

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !17889
  br label %5, !dbg !17887

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17887
  ret i32 %6, !dbg !17890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17891 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.408() #25, !dbg !17897
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17895, metadata !DIExpression()), !dbg !17898
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17899
  ret %struct._timeout* %2, !dbg !17900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.402(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17901 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17905, metadata !DIExpression()), !dbg !17909
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17906, metadata !DIExpression()), !dbg !17909
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17910
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17910
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17907, metadata !DIExpression()), !dbg !17909
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17911
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17912
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17913
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17914
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17915
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17916
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17917
  ret void, !dbg !17918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17919 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17923, metadata !DIExpression()), !dbg !17925
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17926
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.406(%struct._dnode* noundef %2) #25, !dbg !17927
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17924, metadata !DIExpression()), !dbg !17925
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17928
  ret %struct._timeout* %4, !dbg !17929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.403(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17930 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17935, metadata !DIExpression()), !dbg !17938
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17936, metadata !DIExpression()), !dbg !17938
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17939
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17937, metadata !DIExpression()), !dbg !17938
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17940
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17941
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17942
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17943
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17944
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17945
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17946
  ret void, !dbg !17947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17948 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !17953
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17950, metadata !DIExpression()), !dbg !17954
  %2 = tail call fastcc i32 @elapsed.401() #25, !dbg !17955
  call void @llvm.dbg.value(metadata i32 %2, metadata !17951, metadata !DIExpression()), !dbg !17954
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17956
  br i1 %3, label %14, label %4, !dbg !17958

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17959
  %6 = load i64, i64* %5, align 8, !dbg !17959
  %7 = sext i32 %2 to i64, !dbg !17960
  %8 = sub nsw i64 %6, %7, !dbg !17961
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17962
  br i1 %9, label %14, label %10, !dbg !17963

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17964
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17964
  %13 = trunc i64 %12 to i32, !dbg !17964
  call void @llvm.dbg.value(metadata i32 %13, metadata !17952, metadata !DIExpression()), !dbg !17954
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17966
  call void @llvm.dbg.value(metadata i32 %15, metadata !17952, metadata !DIExpression()), !dbg !17954
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17967
  %17 = icmp ne i32 %16, 0, !dbg !17969
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17970
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17970
  call void @llvm.dbg.value(metadata i32 %20, metadata !17952, metadata !DIExpression()), !dbg !17954
  ret i32 %20, !dbg !17971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.406(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17972 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17976, metadata !DIExpression()), !dbg !17978
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17977, metadata !DIExpression()), !dbg !17978
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17979
  br i1 %2, label %5, label %3, !dbg !17980

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.407(%struct._dnode* noundef nonnull %0) #25, !dbg !17981
  br label %5, !dbg !17980

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17980
  ret %struct._dnode* %6, !dbg !17982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.407(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17983 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17985, metadata !DIExpression()), !dbg !17987
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17986, metadata !DIExpression()), !dbg !17987
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17988
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17989
  br i1 %3, label %7, label %4, !dbg !17990

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17991
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17991
  br label %7, !dbg !17990

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17990
  ret %struct._dnode* %8, !dbg !17992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.408() unnamed_addr #10 !dbg !17993 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17997, metadata !DIExpression()), !dbg !17998
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.409() #25, !dbg !17999
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17999
  ret %struct._dnode* %3, !dbg !18000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.409() unnamed_addr #10 !dbg !18001 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18005, metadata !DIExpression()), !dbg !18006
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18007
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18008
  ret i1 %2, !dbg !18009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18010 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18014, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata i32 -22, metadata !18015, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata i32 0, metadata !18016, metadata !DIExpression()), !dbg !18020
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18021
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18023, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18025
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18025
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18021
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18026
  br i1 %3, label %5, label %4, !dbg !18027

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18028
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18028
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18028
  unreachable, !dbg !18028

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18025
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18021
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18029
  call void @llvm.dbg.value(metadata i32 undef, metadata !18018, metadata !DIExpression()), !dbg !18020
  call void @llvm.dbg.value(metadata i32 -22, metadata !18015, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata i32 undef, metadata !18016, metadata !DIExpression()), !dbg !18020
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18015, metadata !DIExpression()), !dbg !18019
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.393(%struct._dnode* noundef %6) #25, !dbg !18030
  br i1 %7, label %8, label %9, !dbg !18034

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !18035
  call void @llvm.dbg.value(metadata i32 0, metadata !18015, metadata !DIExpression()), !dbg !18019
  br label %9, !dbg !18037

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !18019
  call void @llvm.dbg.value(metadata i32 %10, metadata !18015, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18038
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18040
  br i1 %11, label %13, label %12, !dbg !18041

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18042
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18042
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18042
  unreachable, !dbg !18042

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18023
  call void @llvm.dbg.value(metadata i32 %14, metadata !17790, metadata !DIExpression()) #23, !dbg !18025
  call void @llvm.dbg.value(metadata i32 %14, metadata !17784, metadata !DIExpression()) #23, !dbg !18021
  call void @llvm.dbg.value(metadata i32 %14, metadata !18018, metadata !DIExpression()), !dbg !18020
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18038
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()) #23, !dbg !18043
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !18045, !srcloc !17871
  call void @llvm.dbg.value(metadata i32 %10, metadata !18015, metadata !DIExpression()), !dbg !18019
  call void @llvm.dbg.value(metadata i32 undef, metadata !18016, metadata !DIExpression()), !dbg !18020
  ret i32 %10, !dbg !18046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !18047 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18049, metadata !DIExpression()), !dbg !18050
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !18051
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18053
  br i1 %3, label %10, label %4, !dbg !18054

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18055
  %6 = load i64, i64* %5, align 8, !dbg !18055
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18057
  %8 = load i64, i64* %7, align 8, !dbg !18058
  %9 = add nsw i64 %8, %6, !dbg !18058
  store i64 %9, i64* %7, align 8, !dbg !18058
  br label %10, !dbg !18059

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18060
  tail call fastcc void @sys_dlist_remove.412(%struct._dnode* noundef %11) #25, !dbg !18061
  ret void, !dbg !18062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.412(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18063 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18067, metadata !DIExpression()), !dbg !18070
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18071
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18071
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18068, metadata !DIExpression()), !dbg !18070
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18072
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18072
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18069, metadata !DIExpression()), !dbg !18070
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18073
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18074
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18075
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18076
  tail call fastcc void @sys_dnode_init.413(%struct._dnode* noundef %0) #25, !dbg !18077
  ret void, !dbg !18078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.413(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18079 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18081, metadata !DIExpression()), !dbg !18082
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18083
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18084
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18085
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18086
  ret void, !dbg !18087
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18088 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18094, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata i64 0, metadata !18095, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata i32 0, metadata !18096, metadata !DIExpression()), !dbg !18100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18101
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18103, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18105
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18105
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18101
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18106
  br i1 %3, label %5, label %4, !dbg !18107

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18108
  unreachable, !dbg !18108

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18105
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18101
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18109
  call void @llvm.dbg.value(metadata i32 undef, metadata !18098, metadata !DIExpression()), !dbg !18100
  call void @llvm.dbg.value(metadata i64 0, metadata !18095, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()), !dbg !18100
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !18110
  call void @llvm.dbg.value(metadata i64 %6, metadata !18095, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18113
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18115
  br i1 %7, label %9, label %8, !dbg !18116

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18117
  unreachable, !dbg !18117

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !18103
  call void @llvm.dbg.value(metadata i32 %10, metadata !17790, metadata !DIExpression()) #23, !dbg !18105
  call void @llvm.dbg.value(metadata i32 %10, metadata !17784, metadata !DIExpression()) #23, !dbg !18101
  call void @llvm.dbg.value(metadata i32 %10, metadata !18098, metadata !DIExpression()), !dbg !18100
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18113
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()) #23, !dbg !18118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !18120, !srcloc !17871
  call void @llvm.dbg.value(metadata i64 %6, metadata !18095, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.value(metadata i32 undef, metadata !18096, metadata !DIExpression()), !dbg !18100
  ret i64 %6, !dbg !18121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18122 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18124, metadata !DIExpression()), !dbg !18128
  call void @llvm.dbg.value(metadata i64 0, metadata !18125, metadata !DIExpression()), !dbg !18128
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.414(%struct._timeout* noundef %0) #25, !dbg !18129
  br i1 %2, label %21, label %3, !dbg !18131

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !18132
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18126, metadata !DIExpression()), !dbg !18133
  call void @llvm.dbg.value(metadata i64 0, metadata !18125, metadata !DIExpression()), !dbg !18128
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18134
  br i1 %5, label %16, label %6, !dbg !18136

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18126, metadata !DIExpression()), !dbg !18133
  call void @llvm.dbg.value(metadata i64 %8, metadata !18125, metadata !DIExpression()), !dbg !18128
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18137
  %10 = load i64, i64* %9, align 8, !dbg !18137
  %11 = add nsw i64 %10, %8, !dbg !18139
  call void @llvm.dbg.value(metadata i64 %11, metadata !18125, metadata !DIExpression()), !dbg !18128
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18140
  br i1 %12, label %16, label %13, !dbg !18142

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !18143
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18126, metadata !DIExpression()), !dbg !18133
  call void @llvm.dbg.value(metadata i64 %11, metadata !18125, metadata !DIExpression()), !dbg !18128
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18134
  br i1 %15, label %16, label %6, !dbg !18136, !llvm.loop !18144

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18128
  call void @llvm.dbg.value(metadata i64 %17, metadata !18125, metadata !DIExpression()), !dbg !18128
  %18 = tail call fastcc i32 @elapsed.401() #25, !dbg !18146
  %19 = sext i32 %18 to i64, !dbg !18146
  %20 = sub nsw i64 %17, %19, !dbg !18147
  br label %21, !dbg !18148

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18128
  ret i64 %22, !dbg !18149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.414(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18150 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18154, metadata !DIExpression()), !dbg !18155
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18156
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.393(%struct._dnode* noundef %2) #25, !dbg !18157
  %4 = xor i1 %3, true, !dbg !18158
  ret i1 %4, !dbg !18159
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18160 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18162, metadata !DIExpression()), !dbg !18167
  call void @llvm.dbg.value(metadata i64 0, metadata !18163, metadata !DIExpression()), !dbg !18167
  call void @llvm.dbg.value(metadata i32 0, metadata !18164, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18169
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18171, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18173
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18173
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18169
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18174
  br i1 %3, label %5, label %4, !dbg !18175

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18176
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18176
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18176
  unreachable, !dbg !18176

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18173
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18169
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18177
  call void @llvm.dbg.value(metadata i32 undef, metadata !18166, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata i64 0, metadata !18163, metadata !DIExpression()), !dbg !18167
  call void @llvm.dbg.value(metadata i32 undef, metadata !18164, metadata !DIExpression()), !dbg !18168
  %6 = load i64, i64* @curr_tick, align 8, !dbg !18178
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !18181
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !18163, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18167
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18182
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18184
  br i1 %8, label %10, label %9, !dbg !18185

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18186
  unreachable, !dbg !18186

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !18171
  call void @llvm.dbg.value(metadata i32 %11, metadata !17790, metadata !DIExpression()) #23, !dbg !18173
  call void @llvm.dbg.value(metadata i32 %11, metadata !17784, metadata !DIExpression()) #23, !dbg !18169
  call void @llvm.dbg.value(metadata i32 %11, metadata !18166, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !18163, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18167
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18182
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()) #23, !dbg !18187
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !18189, !srcloc !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !18164, metadata !DIExpression()), !dbg !18168
  %12 = add i64 %7, %6, !dbg !18190
  ret i64 %12, !dbg !18191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18192 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18194, metadata !DIExpression()), !dbg !18198
  call void @llvm.dbg.value(metadata i32 0, metadata !18195, metadata !DIExpression()), !dbg !18199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18200
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18202, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18200
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18205
  br i1 %2, label %4, label %3, !dbg !18206

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18207
  unreachable, !dbg !18207

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18200
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18208
  call void @llvm.dbg.value(metadata i32 undef, metadata !18197, metadata !DIExpression()), !dbg !18199
  call void @llvm.dbg.value(metadata i32 -1, metadata !18194, metadata !DIExpression()), !dbg !18198
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18199
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !18209
  call void @llvm.dbg.value(metadata i32 %5, metadata !18194, metadata !DIExpression()), !dbg !18198
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18212
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18214
  br i1 %6, label %8, label %7, !dbg !18215

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18216
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18216
  unreachable, !dbg !18216

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !18202
  call void @llvm.dbg.value(metadata i32 %9, metadata !17790, metadata !DIExpression()) #23, !dbg !18204
  call void @llvm.dbg.value(metadata i32 %9, metadata !17784, metadata !DIExpression()) #23, !dbg !18200
  call void @llvm.dbg.value(metadata i32 %9, metadata !18197, metadata !DIExpression()), !dbg !18199
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18212
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()) #23, !dbg !18217
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !18219, !srcloc !17871
  call void @llvm.dbg.value(metadata i32 %5, metadata !18194, metadata !DIExpression()), !dbg !18198
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18199
  ret i32 %5, !dbg !18220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18223, metadata !DIExpression()), !dbg !18233
  call void @llvm.dbg.value(metadata i1 %1, metadata !18224, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18233
  call void @llvm.dbg.value(metadata i32 0, metadata !18225, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18235
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18237, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18235
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18240
  br i1 %4, label %6, label %5, !dbg !18241

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18242
  unreachable, !dbg !18242

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18235
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18243
  call void @llvm.dbg.value(metadata i32 undef, metadata !18227, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata i32 undef, metadata !18225, metadata !DIExpression()), !dbg !18234
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !18244
  call void @llvm.dbg.value(metadata i32 %7, metadata !18228, metadata !DIExpression()), !dbg !18245
  call void @llvm.dbg.value(metadata i1 undef, metadata !18231, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18245
  %8 = icmp slt i32 %7, 2, !dbg !18246
  call void @llvm.dbg.value(metadata i1 %8, metadata !18232, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18245
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18247
  call void @llvm.dbg.value(metadata i1 %9, metadata !18231, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18245
  br i1 %10, label %14, label %11, !dbg !18247

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18249
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18249
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !18251
  br label %14, !dbg !18252

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18253
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18255
  br i1 %15, label %17, label %16, !dbg !18256

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18257
  unreachable, !dbg !18257

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !18237
  call void @llvm.dbg.value(metadata i32 %18, metadata !17790, metadata !DIExpression()) #23, !dbg !18239
  call void @llvm.dbg.value(metadata i32 %18, metadata !17784, metadata !DIExpression()) #23, !dbg !18235
  call void @llvm.dbg.value(metadata i32 %18, metadata !18227, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18253
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()) #23, !dbg !18258
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !18260, !srcloc !17871
  call void @llvm.dbg.value(metadata i32 1, metadata !18225, metadata !DIExpression()), !dbg !18234
  call void @llvm.dbg.value(metadata i32 undef, metadata !18225, metadata !DIExpression()), !dbg !18234
  ret void, !dbg !18261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18266, metadata !DIExpression()), !dbg !18271
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !18272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18273
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18275, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18273
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18278
  br i1 %3, label %5, label %4, !dbg !18279

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18280
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18280
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18280
  unreachable, !dbg !18280

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18273
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18281
  call void @llvm.dbg.value(metadata i32 undef, metadata !18267, metadata !DIExpression()), !dbg !18271
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18271
  call void @llvm.dbg.value(metadata i32 undef, metadata !18267, metadata !DIExpression()), !dbg !18271
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !18282
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18283
  br i1 %7, label %37, label %8, !dbg !18284

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18271
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18285
  %14 = load i64, i64* %13, align 8, !dbg !18285
  %15 = sext i32 %11 to i64, !dbg !18286
  %16 = icmp sgt i64 %14, %15, !dbg !18287
  br i1 %16, label %35, label %17, !dbg !18288

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18268, metadata !DIExpression()), !dbg !18289
  %18 = trunc i64 %14 to i32, !dbg !18290
  call void @llvm.dbg.value(metadata i32 %18, metadata !18270, metadata !DIExpression()), !dbg !18289
  %19 = sext i32 %18 to i64, !dbg !18291
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18292
  %21 = add i64 %20, %19, !dbg !18292
  store i64 %21, i64* @curr_tick, align 8, !dbg !18292
  store i64 0, i64* %13, align 8, !dbg !18293
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !18294
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18295
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18297
  br i1 %22, label %24, label %23, !dbg !18298

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18299
  unreachable, !dbg !18299

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17851, metadata !DIExpression()) #23, !dbg !18295
  call void @llvm.dbg.value(metadata i32 %12, metadata !17865, metadata !DIExpression()) #23, !dbg !18300
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !18302, !srcloc !17871
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18303
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18303
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !18304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18305
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18307, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18309
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18309
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18305
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18310
  br i1 %28, label %30, label %29, !dbg !18311

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18312
  unreachable, !dbg !18312

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18309
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18305
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18313
  call void @llvm.dbg.value(metadata i32 undef, metadata !18267, metadata !DIExpression()), !dbg !18271
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18314
  %32 = sub nsw i32 %31, %18, !dbg !18314
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18271
  call void @llvm.dbg.value(metadata i32 undef, metadata !18267, metadata !DIExpression()), !dbg !18271
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !18282
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18283
  br i1 %34, label %37, label %8, !dbg !18284, !llvm.loop !18315

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18317
  store i64 %36, i64* %13, align 8, !dbg !18317
  br label %41, !dbg !18320

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18271
  %40 = sext i32 %39 to i64, !dbg !18321
  br label %41, !dbg !18321

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18321
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18322
  %45 = add i64 %44, %42, !dbg !18322
  store i64 %45, i64* @curr_tick, align 8, !dbg !18322
  store i32 0, i32* @announce_remaining, align 4, !dbg !18323
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !18324
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !18325
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18326
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18328
  br i1 %47, label %49, label %48, !dbg !18329

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18330
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18330
  unreachable, !dbg !18330

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18271
  call void @llvm.dbg.value(metadata i32 %50, metadata !17851, metadata !DIExpression()) #23, !dbg !18326
  call void @llvm.dbg.value(metadata i32 %50, metadata !17865, metadata !DIExpression()) #23, !dbg !18331
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !18333, !srcloc !17871
  ret void, !dbg !18334
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18335 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18339, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.value(metadata i32 0, metadata !18340, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17778, metadata !DIExpression()) #23, !dbg !18345
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18347, !srcloc !17793
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18349
  call void @llvm.dbg.value(metadata i32 undef, metadata !17791, metadata !DIExpression()) #23, !dbg !18349
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18345
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18350
  br i1 %2, label %4, label %3, !dbg !18351

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18352
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.400, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18352
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 148) #24, !dbg !18352
  unreachable, !dbg !18352

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17790, metadata !DIExpression()) #23, !dbg !18349
  call void @llvm.dbg.value(metadata i32 undef, metadata !17784, metadata !DIExpression()) #23, !dbg !18345
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18353
  call void @llvm.dbg.value(metadata i32 undef, metadata !18342, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata i64 0, metadata !18339, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.value(metadata i32 undef, metadata !18340, metadata !DIExpression()), !dbg !18344
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18354
  %6 = tail call fastcc i32 @elapsed.401() #25, !dbg !18357
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18339, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18343
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17856, metadata !DIExpression()) #23, !dbg !18358
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18360
  br i1 %7, label %9, label %8, !dbg !18361

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.394, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.404, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.405, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !18362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.399, i32 0, i32 0), i32 noundef 194) #24, !dbg !18362
  unreachable, !dbg !18362

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18347
  call void @llvm.dbg.value(metadata i32 %10, metadata !17790, metadata !DIExpression()) #23, !dbg !18349
  call void @llvm.dbg.value(metadata i32 %10, metadata !17784, metadata !DIExpression()) #23, !dbg !18345
  call void @llvm.dbg.value(metadata i32 %10, metadata !18342, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18339, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18343
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18339, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18343
  call void @llvm.dbg.value(metadata i32 undef, metadata !17851, metadata !DIExpression()) #23, !dbg !18358
  call void @llvm.dbg.value(metadata i32 undef, metadata !17865, metadata !DIExpression()) #23, !dbg !18363
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !18365, !srcloc !17871
  call void @llvm.dbg.value(metadata i32 undef, metadata !18340, metadata !DIExpression()), !dbg !18344
  %11 = sext i32 %6 to i64, !dbg !18357
  %12 = add i64 %5, %11, !dbg !18366
  ret i64 %12, !dbg !18367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18368 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !18369
  %2 = trunc i64 %1 to i32, !dbg !18370
  ret i32 %2, !dbg !18371
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18372 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !18373
  ret i64 %1, !dbg !18374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18377, metadata !DIExpression()), !dbg !18384
  %2 = icmp eq i32 %0, 0, !dbg !18385
  br i1 %2, label %10, label %3, !dbg !18387

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !18388
  call void @llvm.dbg.value(metadata i32 %4, metadata !18378, metadata !DIExpression()), !dbg !18384
  %5 = mul i32 %0, 200, !dbg !18389
  call void @llvm.dbg.value(metadata i32 %5, metadata !18379, metadata !DIExpression()), !dbg !18384
  br label %6, !dbg !18390

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !18391
  call void @llvm.dbg.value(metadata i32 %7, metadata !18380, metadata !DIExpression()), !dbg !18392
  %8 = sub i32 %7, %4, !dbg !18393
  %9 = icmp ult i32 %8, %5, !dbg !18395
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18397 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !18398
  ret i32 %1, !dbg !18399
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18400 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !18402
  ret i32 %1, !dbg !18403
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18404 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18408, metadata !DIExpression()), !dbg !18410
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18411

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !18412
  br label %14, !dbg !18416

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18409, metadata !DIExpression()), !dbg !18410
  %6 = icmp slt i64 %2, -1, !dbg !18417
  br i1 %6, label %7, label %9, !dbg !18420

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18421
  br label %14, !dbg !18422

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !18424
  %11 = icmp ugt i64 %2, 1, !dbg !18425
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18425
  %13 = add nsw i64 %10, %12, !dbg !18426
  br label %14, !dbg !18427

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18428
  ret i64 %15, !dbg !18429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #6 !dbg !18430 {
  ret void, !dbg !18432
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18433 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18435, metadata !DIExpression()), !dbg !18457
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18436, metadata !DIExpression()), !dbg !18458
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !18459

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.429, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.430, i32 0, i32 0), i32 noundef 24) #24, !dbg !18463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.431, i32 0, i32 0)) #24, !dbg !18463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.430, i32 0, i32 0), i32 noundef 24) #24, !dbg !18463
  unreachable, !dbg !18463

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18436, metadata !DIExpression()), !dbg !18458
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18466
  br i1 %5, label %7, label %6, !dbg !18467

6:                                                ; preds = %3
  ret i32 0, !dbg !18468

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18469
  %9 = load i8*, i8** %8, align 4, !dbg !18469
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18472
  %11 = load i32, i32* %10, align 4, !dbg !18472
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #25, !dbg !18473
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18474
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !18436, metadata !DIExpression()), !dbg !18458
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18475
  br i1 %13, label %2, label %3, !dbg !18459, !llvm.loop !18476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18478 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18482, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i8* %1, metadata !18483, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i32 %2, metadata !18484, metadata !DIExpression()), !dbg !18485
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18486
  tail call fastcc void @z_waitq_init.432(%struct._wait_q_t* noundef nonnull %4) #25, !dbg !18487
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18488
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #24, !dbg !18489
  ret void, !dbg !18490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.432(%struct._wait_q_t* noundef %0) unnamed_addr #9 !dbg !18491 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18496, metadata !DIExpression()), !dbg !18497
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18498
  tail call fastcc void @sys_dlist_init.433(%struct._dnode* noundef %2) #25, !dbg !18499
  ret void, !dbg !18500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.433(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !18501 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18506, metadata !DIExpression()), !dbg !18507
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18508
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18509
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18510
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18511
  ret void, !dbg !18512
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18513 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18524, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18521, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i32 %1, metadata !18522, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i32 %2, metadata !18523, metadata !DIExpression()), !dbg !18534
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #24, !dbg !18535
  call void @llvm.dbg.value(metadata i64 %6, metadata !18526, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i8* null, metadata !18527, metadata !DIExpression()), !dbg !18534
  %7 = icmp eq i64 %5, -1, !dbg !18536
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18536
  call void @llvm.dbg.value(metadata i64 %8, metadata !18526, metadata !DIExpression()), !dbg !18534
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !18538, metadata !DIExpression()) #23, !dbg !18545
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18547, !srcloc !18553
  call void @llvm.dbg.value(metadata i32 undef, metadata !18550, metadata !DIExpression()) #23, !dbg !18554
  call void @llvm.dbg.value(metadata i32 undef, metadata !18551, metadata !DIExpression()) #23, !dbg !18554
  call void @llvm.dbg.value(metadata i32 undef, metadata !18544, metadata !DIExpression()) #23, !dbg !18545
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !18555
  br i1 %11, label %13, label %12, !dbg !18558

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 148) #24, !dbg !18559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.436, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !18559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 148) #24, !dbg !18559
  unreachable, !dbg !18559

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18550, metadata !DIExpression()) #23, !dbg !18554
  call void @llvm.dbg.value(metadata i32 undef, metadata !18544, metadata !DIExpression()) #23, !dbg !18545
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !18561
  call void @llvm.dbg.value(metadata i32 undef, metadata !18528, metadata !DIExpression()), !dbg !18534
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !18562, !srcloc !18571
  call void @llvm.dbg.value(metadata i32 %14, metadata !18565, metadata !DIExpression()) #23, !dbg !18572
  %15 = icmp eq i32 %14, 0, !dbg !18573
  %16 = icmp eq i64 %5, 0, !dbg !18574
  %17 = select i1 %15, i1 true, i1 %16, !dbg !18574
  br i1 %17, label %18, label %25, !dbg !18574

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18527, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i8 0, metadata !18533, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i32 undef, metadata !18528, metadata !DIExpression()), !dbg !18534
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #24, !dbg !18575
  call void @llvm.dbg.value(metadata i8* %20, metadata !18527, metadata !DIExpression()), !dbg !18534
  %21 = tail call i64 @sys_clock_tick_get() #24, !dbg !18577
  call void @llvm.dbg.value(metadata i64 %21, metadata !18525, metadata !DIExpression()), !dbg !18534
  %22 = icmp eq i8* %20, null, !dbg !18578
  br i1 %22, label %23, label %43, !dbg !18580

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !18528, metadata !DIExpression()), !dbg !18534
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !18580

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.437, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.430, i32 0, i32 0), i32 noundef 76) #24, !dbg !18581
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.438, i32 0, i32 0)) #24, !dbg !18581
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.430, i32 0, i32 0), i32 noundef 76) #24, !dbg !18581
  unreachable, !dbg !18581

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18533, metadata !DIExpression()), !dbg !18534
  %29 = sub nsw i64 %8, %27, !dbg !18583
  %30 = icmp slt i64 %29, 1, !dbg !18584
  br i1 %30, label %43, label %31, !dbg !18585

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !18534
  call void @llvm.dbg.value(metadata i8 undef, metadata !18533, metadata !DIExpression()), !dbg !18534
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !18586
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !18586
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #24, !dbg !18586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !18538, metadata !DIExpression()) #23, !dbg !18587
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18589, !srcloc !18553
  call void @llvm.dbg.value(metadata i32 undef, metadata !18550, metadata !DIExpression()) #23, !dbg !18591
  call void @llvm.dbg.value(metadata i32 undef, metadata !18551, metadata !DIExpression()) #23, !dbg !18591
  call void @llvm.dbg.value(metadata i32 undef, metadata !18544, metadata !DIExpression()) #23, !dbg !18587
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !18592
  br i1 %37, label %39, label %38, !dbg !18593

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 148) #24, !dbg !18594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.436, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !18594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 148) #24, !dbg !18594
  unreachable, !dbg !18594

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !18533, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i32 undef, metadata !18550, metadata !DIExpression()) #23, !dbg !18591
  call void @llvm.dbg.value(metadata i32 undef, metadata !18544, metadata !DIExpression()) #23, !dbg !18587
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !18595
  call void @llvm.dbg.value(metadata i32 undef, metadata !18528, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i8* null, metadata !18527, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i32 undef, metadata !18528, metadata !DIExpression()), !dbg !18534
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #24, !dbg !18575
  call void @llvm.dbg.value(metadata i8* %40, metadata !18527, metadata !DIExpression()), !dbg !18534
  %41 = tail call i64 @sys_clock_tick_get() #24, !dbg !18577
  call void @llvm.dbg.value(metadata i64 %41, metadata !18525, metadata !DIExpression()), !dbg !18534
  %42 = icmp eq i8* %40, null, !dbg !18578
  br i1 %42, label %26, label %43, !dbg !18580, !llvm.loop !18596

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !18575
  call void @llvm.dbg.value(metadata i8* %45, metadata !18527, metadata !DIExpression()), !dbg !18534
  call void @llvm.dbg.value(metadata i32 undef, metadata !18599, metadata !DIExpression()) #23, !dbg !18605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !18604, metadata !DIExpression()) #23, !dbg !18605
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #24, !dbg !18607
  br i1 %46, label %48, label %47, !dbg !18610

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.439, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 194) #24, !dbg !18611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.440, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #24, !dbg !18611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 194) #24, !dbg !18611
  unreachable, !dbg !18611

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !18534
  call void @llvm.dbg.value(metadata i32 %49, metadata !18599, metadata !DIExpression()) #23, !dbg !18605
  call void @llvm.dbg.value(metadata i32 %49, metadata !18613, metadata !DIExpression()) #23, !dbg !18616
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #23, !dbg !18618, !srcloc !18619
  ret i8* %45, !dbg !18620
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18621 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18627, metadata !DIExpression()), !dbg !18629
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18625, metadata !DIExpression()), !dbg !18629
  call void @llvm.dbg.value(metadata i32 %1, metadata !18626, metadata !DIExpression()), !dbg !18629
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #25, !dbg !18630
  call void @llvm.dbg.value(metadata i8* %4, metadata !18628, metadata !DIExpression()), !dbg !18629
  ret i8* %4, !dbg !18631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !18632 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18636, metadata !DIExpression()), !dbg !18639
  call void @llvm.dbg.value(metadata i8* %1, metadata !18637, metadata !DIExpression()), !dbg !18639
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !18538, metadata !DIExpression()) #23, !dbg !18641
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !18643, !srcloc !18553
  call void @llvm.dbg.value(metadata i32 undef, metadata !18550, metadata !DIExpression()) #23, !dbg !18645
  call void @llvm.dbg.value(metadata i32 undef, metadata !18551, metadata !DIExpression()) #23, !dbg !18645
  call void @llvm.dbg.value(metadata i32 undef, metadata !18544, metadata !DIExpression()) #23, !dbg !18641
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !18646
  br i1 %5, label %7, label %6, !dbg !18647

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 148) #24, !dbg !18648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.436, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !18648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 148) #24, !dbg !18648
  unreachable, !dbg !18648

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !18643
  call void @llvm.dbg.value(metadata i32 %8, metadata !18550, metadata !DIExpression()) #23, !dbg !18645
  call void @llvm.dbg.value(metadata i32 %8, metadata !18544, metadata !DIExpression()) #23, !dbg !18641
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !18649
  call void @llvm.dbg.value(metadata i32 %8, metadata !18638, metadata !DIExpression()), !dbg !18639
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18650
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #24, !dbg !18651
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18652
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #24, !dbg !18654
  %12 = icmp eq i32 %11, 0, !dbg !18655
  br i1 %12, label %15, label %13, !dbg !18656

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !18657
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #24, !dbg !18657
  br label %19, !dbg !18659

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !18599, metadata !DIExpression()) #23, !dbg !18660
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !18604, metadata !DIExpression()) #23, !dbg !18660
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #24, !dbg !18663
  br i1 %16, label %18, label %17, !dbg !18664

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.439, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 194) #24, !dbg !18665
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.440, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #24, !dbg !18665
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.435, i32 0, i32 0), i32 noundef 194) #24, !dbg !18665
  unreachable, !dbg !18665

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !18599, metadata !DIExpression()) #23, !dbg !18660
  call void @llvm.dbg.value(metadata i32 %8, metadata !18613, metadata !DIExpression()) #23, !dbg !18666
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !18668, !srcloc !18619
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !18669
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1859, !2, !3137, !27, !350, !536, !752, !776, !3139, !3141, !3174, !3208, !3210, !786, !3212, !3215, !3226, !3273, !3275, !3303, !3331, !3374, !3445, !3490, !3518, !1215, !1225, !1395, !1572, !1677, !1870, !2149, !3523, !2411, !3525, !3528, !3605, !3619, !3631, !3756, !2441, !3759, !2447, !2706, !2835, !3777, !3779, !2856, !2960, !3879, !3071, !3882, !3112}
!llvm.ident = !{!3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884, !3884}
!llvm.module.flags = !{!3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_consumer_sub", scope: !27, file: !114, line: 11, type: !123, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !111, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !109}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !110)
!110 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!111 = !{!25, !112, !299, !332, !336, !341, !346}
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "consumer_sub", scope: !27, file: !114, line: 11, type: !115, isLocal: false, isDefinition: true, align: 32)
!114 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !117)
!116 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !{!118, !120, !166}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !115, file: !116, line: 91, baseType: !119, size: 8)
!119 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !115, file: !116, line: 93, baseType: !121, size: 32, offset: 32)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = !{!126, !147, !152, !155, !156, !159, !160, !161, !162, !163}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !123, file: !124, line: 4206, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !130)
!130 = !{!131}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !129, file: !128, line: 232, baseType: !132, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !134)
!133 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !135)
!135 = !{!136, !142}
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !133, line: 38, baseType: !137, size: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !133, line: 38, size: 32, elements: !138)
!138 = !{!139, !141}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !137, file: !133, line: 39, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !137, file: !133, line: 40, baseType: !140, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, scope: !134, file: !133, line: 42, baseType: !143, size: 32, offset: 32)
!143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !134, file: !133, line: 42, size: 32, elements: !144)
!144 = !{!145, !146}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !143, file: !133, line: 43, baseType: !140, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !143, file: !133, line: 44, baseType: !140, size: 32)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !123, file: !124, line: 4208, baseType: !148, size: 32, offset: 64)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !150)
!149 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!150 = !{!151}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !148, file: !149, line: 52, baseType: !22, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !123, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !154, line: 214, baseType: !32)
!154 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!155 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !123, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !123, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !123, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !123, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !123, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !123, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !123, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !165)
!165 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !115, file: !116, line: 96, baseType: !167, size: 32, offset: 64)
!167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{null, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !174)
!174 = !{!175, !179, !181, !182, !187, !280, !294}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !173, file: !116, line: 35, baseType: !176, size: 16)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !178)
!178 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !173, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !173, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !173, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DISubroutineType(types: !186)
!186 = !{!119, !13, !153}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !173, file: !116, line: 56, baseType: !188, size: 32, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !190)
!190 = !{!191, !192, !278, !279}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !189, file: !124, line: 2722, baseType: !127, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !189, file: !124, line: 2724, baseType: !193, size: 32, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !196)
!195 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!196 = !{!197, !242, !255, !256, !257, !258, !273}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !194, file: !195, line: 247, baseType: !198, size: 384)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !199)
!199 = !{!200, !214, !216, !217, !218, !229, !230, !231}
!200 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !195, line: 60, baseType: !201, size: 64)
!201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !198, file: !195, line: 60, size: 64, elements: !202)
!202 = !{!203, !205}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !201, file: !195, line: 61, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !134)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !201, file: !195, line: 62, baseType: !206, size: 64)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !208)
!207 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !206, file: !207, line: 50, baseType: !210, size: 64)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 64, elements: !212)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!212 = !{!213}
!213 = !DISubrange(count: 2)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !198, file: !195, line: 68, baseType: !215, size: 32, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !198, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !198, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!218 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !195, line: 90, baseType: !219, size: 16, offset: 112)
!219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !198, file: !195, line: 90, size: 16, elements: !220)
!220 = !{!221, !228}
!221 = !DIDerivedType(tag: DW_TAG_member, scope: !219, file: !195, line: 91, baseType: !222, size: 16)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !219, file: !195, line: 91, size: 16, elements: !223)
!223 = !{!224, !227}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !222, file: !195, line: 96, baseType: !225, size: 8)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !226)
!226 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !222, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !219, file: !195, line: 100, baseType: !177, size: 16)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !198, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !198, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !198, file: !195, line: 131, baseType: !232, size: 192, offset: 192)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !233)
!233 = !{!234, !235, !241}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !232, file: !128, line: 245, baseType: !204, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !232, file: !128, line: 246, baseType: !236, size: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 32)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !240}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !232, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !194, file: !195, line: 250, baseType: !243, size: 288, offset: 384)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !243, file: !244, line: 26, baseType: !108, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !243, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !243, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !243, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !243, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !243, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !243, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !243, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !243, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !194, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !194, file: !195, line: 256, baseType: !127, size: 64, offset: 704)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !194, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !194, file: !195, line: 325, baseType: !259, size: 32, offset: 800)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !261)
!261 = !{!262, !271, !272}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !260, file: !124, line: 5074, baseType: !263, size: 96)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !265)
!264 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!265 = !{!266, !269, !270}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !263, file: !264, line: 57, baseType: !267, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !264, line: 57, flags: DIFlagFwdDecl)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !263, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !263, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !260, file: !124, line: 5075, baseType: !127, size: 64, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !260, file: !124, line: 5076, baseType: !148, size: 32, offset: 160)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !194, file: !195, line: 343, baseType: !274, size: 64, offset: 832)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !275)
!275 = !{!276, !277}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !274, file: !244, line: 63, baseType: !108, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !274, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !189, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !189, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !173, file: !116, line: 61, baseType: !281, size: 32, offset: 160)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !283, line: 40, baseType: !284)
!283 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !283, line: 35, size: 64, elements: !285)
!285 = !{!286, !293}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !284, file: !283, line: 36, baseType: !287, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !283, line: 33, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !283, line: 29, size: 32, elements: !290)
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !289, file: !283, line: 30, baseType: !292, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !284, file: !283, line: 37, baseType: !287, size: 32, offset: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !173, file: !116, line: 67, baseType: !295, size: 32, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "_k_thread_data_consumer_thread_id", scope: !27, file: !114, line: 25, type: !301, isLocal: false, isDefinition: true, align: 32)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !302)
!302 = !{!303, !304, !312, !313, !318, !319, !320, !321, !322, !323, !325, !329}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !301, file: !124, line: 621, baseType: !193, size: 32)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !301, file: !124, line: 622, baseType: !305, size: 32, offset: 32)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !307, line: 44, baseType: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !309, line: 47, size: 8, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !308, file: !309, line: 48, baseType: !158, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !301, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !301, file: !124, line: 624, baseType: !314, size: 32, offset: 96)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !307, line: 46, baseType: !315)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !102, !102, !102}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !301, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !301, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !301, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !301, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !301, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !301, file: !124, line: 630, baseType: !324, size: 32, offset: 288)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !301, file: !124, line: 631, baseType: !326, size: 32, offset: 320)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DISubroutineType(types: !328)
!328 = !{null}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !301, file: !124, line: 632, baseType: !330, size: 32, offset: 352)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!332 = !DIGlobalVariableExpression(var: !333, expr: !DIExpression())
!333 = distinct !DIGlobalVariable(name: "consumer_thread_id", scope: !27, file: !114, line: 25, type: !334, isLocal: false, isDefinition: true)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !193)
!336 = !DIGlobalVariableExpression(var: !337, expr: !DIExpression())
!337 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_consumer_sub", scope: !27, file: !114, line: 11, type: !338, isLocal: true, isDefinition: true, align: 32)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 128, elements: !339)
!339 = !{!340}
!340 = !DISubrange(count: 16)
!341 = !DIGlobalVariableExpression(var: !342, expr: !DIExpression())
!342 = distinct !DIGlobalVariable(name: "_k_thread_stack_consumer_thread_id", scope: !27, file: !114, line: 25, type: !343, isLocal: false, isDefinition: true, align: 64)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 4096, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 512)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "_k_thread_obj_consumer_thread_id", scope: !27, file: !114, line: 25, type: !194, isLocal: false, isDefinition: true)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "_zbus_mutex_processed_data_chan", scope: !350, file: !356, line: 15, type: !366, isLocal: true, isDefinition: true, align: 32)
!350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !351, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !352, globals: !353, splitDebugInlining: false, nameTableKind: None)
!351 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!352 = !{!104, !102, !103, !108, !109}
!353 = !{!348, !354, !510, !512, !514, !516, !518, !523, !531}
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "processed_data_chan", scope: !350, file: !356, line: 15, type: !357, isLocal: false, isDefinition: true, align: 32)
!356 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !468, !481}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !358, file: !116, line: 35, baseType: !176, size: 16)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !358, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !358, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !358, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !358, file: !116, line: 56, baseType: !365, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !367)
!367 = !{!368, !387, !466, !467}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !366, file: !124, line: 2722, baseType: !369, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !371)
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !370, file: !128, line: 232, baseType: !373, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !375)
!375 = !{!376, !382}
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !374, file: !133, line: 38, baseType: !377, size: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !374, file: !133, line: 38, size: 32, elements: !378)
!378 = !{!379, !381}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !377, file: !133, line: 39, baseType: !380, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !377, file: !133, line: 40, baseType: !380, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, scope: !374, file: !133, line: 42, baseType: !383, size: 32, offset: 32)
!383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !374, file: !133, line: 42, size: 32, elements: !384)
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !383, file: !133, line: 43, baseType: !380, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !383, file: !133, line: 44, baseType: !380, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !366, file: !124, line: 2724, baseType: !388, size: 32, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !390)
!390 = !{!391, !431, !443, !444, !445, !446, !461}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !389, file: !195, line: 247, baseType: !392, size: 384)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !393)
!393 = !{!394, !405, !407, !408, !409, !418, !419, !420}
!394 = !DIDerivedType(tag: DW_TAG_member, scope: !392, file: !195, line: 60, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !392, file: !195, line: 60, size: 64, elements: !396)
!396 = !{!397, !399}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !395, file: !195, line: 61, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !374)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !395, file: !195, line: 62, baseType: !400, size: 64)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !400, file: !207, line: 50, baseType: !403, size: 64)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, size: 64, elements: !212)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !392, file: !195, line: 68, baseType: !406, size: 32, offset: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !392, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !392, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!409 = !DIDerivedType(tag: DW_TAG_member, scope: !392, file: !195, line: 90, baseType: !410, size: 16, offset: 112)
!410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !392, file: !195, line: 90, size: 16, elements: !411)
!411 = !{!412, !417}
!412 = !DIDerivedType(tag: DW_TAG_member, scope: !410, file: !195, line: 91, baseType: !413, size: 16)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !410, file: !195, line: 91, size: 16, elements: !414)
!414 = !{!415, !416}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !413, file: !195, line: 96, baseType: !225, size: 8)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !413, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !410, file: !195, line: 100, baseType: !177, size: 16)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !392, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !392, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !392, file: !195, line: 131, baseType: !421, size: 192, offset: 192)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !422)
!422 = !{!423, !424, !430}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !421, file: !128, line: 245, baseType: !398, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !421, file: !128, line: 246, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !426)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DISubroutineType(types: !428)
!428 = !{null, !429}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !421, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !389, file: !195, line: 250, baseType: !432, size: 288, offset: 384)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !433)
!433 = !{!434, !435, !436, !437, !438, !439, !440, !441, !442}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !432, file: !244, line: 26, baseType: !108, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !432, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !432, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !432, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !432, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !432, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !432, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !432, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !432, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !389, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !389, file: !195, line: 256, baseType: !369, size: 64, offset: 704)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !389, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !389, file: !195, line: 325, baseType: !447, size: 32, offset: 800)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !449)
!449 = !{!450, !456, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !448, file: !124, line: 5074, baseType: !451, size: 96)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !452)
!452 = !{!453, !454, !455}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !451, file: !264, line: 57, baseType: !267, size: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !451, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !451, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !448, file: !124, line: 5075, baseType: !369, size: 64, offset: 96)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !448, file: !124, line: 5076, baseType: !458, size: 32, offset: 160)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !459)
!459 = !{!460}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !458, file: !149, line: 52, baseType: !22, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !389, file: !195, line: 343, baseType: !462, size: 64, offset: 832)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !463)
!463 = !{!464, !465}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !462, file: !244, line: 63, baseType: !108, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !462, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !366, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !366, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !358, file: !116, line: 61, baseType: !469, size: 32, offset: 160)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !283, line: 40, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !283, line: 35, size: 64, elements: !472)
!472 = !{!473, !480}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !471, file: !283, line: 36, baseType: !474, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !283, line: 33, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !283, line: 29, size: 32, elements: !477)
!477 = !{!478}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !476, file: !283, line: 30, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !471, file: !283, line: 37, baseType: !474, size: 32, offset: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !358, file: !116, line: 67, baseType: !482, size: 32, offset: 192)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 32)
!485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !487)
!487 = !{!488, !489, !504}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !486, file: !116, line: 91, baseType: !119, size: 8)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !486, file: !116, line: 93, baseType: !490, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !493)
!493 = !{!494, !495, !496, !497, !498, !499, !500, !501, !502, !503}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !492, file: !124, line: 4206, baseType: !369, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !492, file: !124, line: 4208, baseType: !458, size: 32, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !492, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !492, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !492, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !492, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !492, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !492, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !492, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !492, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !486, file: !116, line: 96, baseType: !505, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = !DISubroutineType(types: !508)
!508 = !{null, !509}
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "filter_lis", scope: !350, file: !356, line: 38, type: !486, isLocal: false, isDefinition: true, align: 32)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_state_change_sub", scope: !350, file: !356, line: 40, type: !492, isLocal: false, isDefinition: true, align: 32)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "state_change_sub", scope: !350, file: !356, line: 40, type: !486, isLocal: false, isDefinition: true, align: 32)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "_runtime_observers_processed_data_chan", scope: !350, file: !356, line: 15, type: !470, isLocal: true, isDefinition: true)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_state_change_sub", scope: !350, file: !356, line: 40, type: !520, isLocal: true, isDefinition: true, align: 32)
!520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 160, elements: !521)
!521 = !{!522}
!522 = !DISubrange(count: 20)
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "_zbus_message_processed_data_chan", scope: !350, file: !356, line: 15, type: !525, isLocal: true, isDefinition: true)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !526, line: 11, size: 96, elements: !527)
!526 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !{!528, !529, !530}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !525, file: !526, line: 12, baseType: !103, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !525, file: !526, line: 13, baseType: !103, size: 32, offset: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !525, file: !526, line: 14, baseType: !103, size: 32, offset: 64)
!531 = !DIGlobalVariableExpression(var: !532, expr: !DIExpression())
!532 = distinct !DIGlobalVariable(name: "_zbus_observers_processed_data_chan", scope: !350, file: !356, line: 15, type: !533, isLocal: true, isDefinition: true)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 64, elements: !212)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "_zbus_mutex_raw_data_chan", scope: !536, file: !541, line: 11, type: !551, isLocal: true, isDefinition: true, align: 32)
!536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !538, splitDebugInlining: false, nameTableKind: None)
!537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/runtime_obs_registration/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!538 = !{!534, !539, !695, !697, !699, !720, !724, !726, !728, !731, !733, !740, !745, !747}
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "raw_data_chan", scope: !536, file: !541, line: 11, type: !542, isLocal: false, isDefinition: true, align: 32)
!541 = !DIFile(filename: "zephyr/samples/subsys/zbus/runtime_obs_registration/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !544)
!544 = !{!545, !546, !547, !548, !549, !653, !666}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !543, file: !116, line: 35, baseType: !176, size: 16)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !543, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !543, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !543, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !543, file: !116, line: 56, baseType: !550, size: 32, offset: 128)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !552)
!552 = !{!553, !572, !651, !652}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !551, file: !124, line: 2722, baseType: !554, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !555, file: !128, line: 232, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !560)
!560 = !{!561, !567}
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !559, file: !133, line: 38, baseType: !562, size: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !559, file: !133, line: 38, size: 32, elements: !563)
!563 = !{!564, !566}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !562, file: !133, line: 39, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !562, file: !133, line: 40, baseType: !565, size: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, scope: !559, file: !133, line: 42, baseType: !568, size: 32, offset: 32)
!568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !559, file: !133, line: 42, size: 32, elements: !569)
!569 = !{!570, !571}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !568, file: !133, line: 43, baseType: !565, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !568, file: !133, line: 44, baseType: !565, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !551, file: !124, line: 2724, baseType: !573, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !575)
!575 = !{!576, !616, !628, !629, !630, !631, !646}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !574, file: !195, line: 247, baseType: !577, size: 384)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !578)
!578 = !{!579, !590, !592, !593, !594, !603, !604, !605}
!579 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !195, line: 60, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !195, line: 60, size: 64, elements: !581)
!581 = !{!582, !584}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !580, file: !195, line: 61, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !559)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !580, file: !195, line: 62, baseType: !585, size: 64)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !586)
!586 = !{!587}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !585, file: !207, line: 50, baseType: !588, size: 64)
!588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !589, size: 64, elements: !212)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !577, file: !195, line: 68, baseType: !591, size: 32, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !577, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !577, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!594 = !DIDerivedType(tag: DW_TAG_member, scope: !577, file: !195, line: 90, baseType: !595, size: 16, offset: 112)
!595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !577, file: !195, line: 90, size: 16, elements: !596)
!596 = !{!597, !602}
!597 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !195, line: 91, baseType: !598, size: 16)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !595, file: !195, line: 91, size: 16, elements: !599)
!599 = !{!600, !601}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !598, file: !195, line: 96, baseType: !225, size: 8)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !598, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !595, file: !195, line: 100, baseType: !177, size: 16)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !577, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !577, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !577, file: !195, line: 131, baseType: !606, size: 192, offset: 192)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !607)
!607 = !{!608, !609, !615}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !606, file: !128, line: 245, baseType: !583, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !606, file: !128, line: 246, baseType: !610, size: 32, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !611)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 32)
!612 = !DISubroutineType(types: !613)
!613 = !{null, !614}
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !606, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !574, file: !195, line: 250, baseType: !617, size: 288, offset: 384)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !618)
!618 = !{!619, !620, !621, !622, !623, !624, !625, !626, !627}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !617, file: !244, line: 26, baseType: !108, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !617, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !617, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !617, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !617, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !617, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !617, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !617, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !617, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !574, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !574, file: !195, line: 256, baseType: !554, size: 64, offset: 704)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !574, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !574, file: !195, line: 325, baseType: !632, size: 32, offset: 800)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 32)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !634)
!634 = !{!635, !641, !642}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !633, file: !124, line: 5074, baseType: !636, size: 96)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !637)
!637 = !{!638, !639, !640}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !636, file: !264, line: 57, baseType: !267, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !636, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !636, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !633, file: !124, line: 5075, baseType: !554, size: 64, offset: 96)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !633, file: !124, line: 5076, baseType: !643, size: 32, offset: 160)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !644)
!644 = !{!645}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !643, file: !149, line: 52, baseType: !22, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !574, file: !195, line: 343, baseType: !647, size: 64, offset: 832)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !648)
!648 = !{!649, !650}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !647, file: !244, line: 63, baseType: !108, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !647, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !551, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !551, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !543, file: !116, line: 61, baseType: !654, size: 32, offset: 160)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !283, line: 40, baseType: !656)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !283, line: 35, size: 64, elements: !657)
!657 = !{!658, !665}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !656, file: !283, line: 36, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !283, line: 33, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !283, line: 29, size: 32, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !661, file: !283, line: 30, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !656, file: !283, line: 37, baseType: !659, size: 32, offset: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !543, file: !116, line: 67, baseType: !667, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !671)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !672)
!672 = !{!673, !674, !689}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !671, file: !116, line: 91, baseType: !119, size: 8)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !671, file: !116, line: 93, baseType: !675, size: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !678)
!678 = !{!679, !680, !681, !682, !683, !684, !685, !686, !687, !688}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !677, file: !124, line: 4206, baseType: !554, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !677, file: !124, line: 4208, baseType: !643, size: 32, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !677, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !677, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !677, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !677, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !677, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !677, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !677, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !677, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !671, file: !116, line: 96, baseType: !690, size: 32, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !694}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "_zbus_mutex_state_chan", scope: !536, file: !541, line: 14, type: !551, isLocal: true, isDefinition: true, align: 32)
!697 = !DIGlobalVariableExpression(var: !698, expr: !DIExpression())
!698 = distinct !DIGlobalVariable(name: "state_chan", scope: !536, file: !541, line: 14, type: !542, isLocal: false, isDefinition: true, align: 32)
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "_k_thread_data_produce_thread_id", scope: !536, file: !541, line: 43, type: !701, isLocal: false, isDefinition: true, align: 32)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !702)
!702 = !{!703, !704, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !701, file: !124, line: 621, baseType: !573, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !701, file: !124, line: 622, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !307, line: 44, baseType: !707)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !309, line: 47, size: 8, elements: !708)
!708 = !{!709}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !707, file: !309, line: 48, baseType: !158, size: 8)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !701, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !701, file: !124, line: 624, baseType: !314, size: 32, offset: 96)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !701, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !701, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !701, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !701, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !701, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !701, file: !124, line: 630, baseType: !324, size: 32, offset: 288)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !701, file: !124, line: 631, baseType: !326, size: 32, offset: 320)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !701, file: !124, line: 632, baseType: !330, size: 32, offset: 352)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "produce_thread_id", scope: !536, file: !541, line: 43, type: !722, isLocal: false, isDefinition: true)
!722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !723)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !573)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "_runtime_observers_raw_data_chan", scope: !536, file: !541, line: 11, type: !655, isLocal: true, isDefinition: true)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "_runtime_observers_state_chan", scope: !536, file: !541, line: 14, type: !655, isLocal: true, isDefinition: true)
!728 = !DIGlobalVariableExpression(var: !729, expr: !DIExpression())
!729 = distinct !DIGlobalVariable(name: "_k_thread_stack_produce_thread_id", scope: !536, file: !541, line: 43, type: !730, isLocal: false, isDefinition: true, align: 64)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 4096, elements: !344)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "_k_thread_obj_produce_thread_id", scope: !536, file: !541, line: 43, type: !574, isLocal: false, isDefinition: true)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "_zbus_message_raw_data_chan", scope: !536, file: !541, line: 11, type: !735, isLocal: true, isDefinition: true)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !526, line: 11, size: 96, elements: !736)
!736 = !{!737, !738, !739}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !735, file: !526, line: 12, baseType: !103, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !735, file: !526, line: 13, baseType: !103, size: 32, offset: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !735, file: !526, line: 14, baseType: !103, size: 32, offset: 64)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "_zbus_observers_raw_data_chan", scope: !536, file: !541, line: 11, type: !742, isLocal: true, isDefinition: true)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !668, size: 32, elements: !743)
!743 = !{!744}
!744 = !DISubrange(count: 1)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "_zbus_message_state_chan", scope: !536, file: !541, line: 14, type: !119, isLocal: true, isDefinition: true)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "_zbus_observers_state_chan", scope: !536, file: !541, line: 14, type: !749, isLocal: true, isDefinition: true)
!749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !668, size: 64, elements: !212)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !752, file: !767, line: 18, type: !768, isLocal: false, isDefinition: true)
!752 = distinct !DICompileUnit(language: DW_LANG_C99, file: !753, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !754, globals: !766, splitDebugInlining: false, nameTableKind: None)
!753 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!754 = !{!22, !102, !24, !755, !757, !759, !153, !103, !760, !761, !763, !764, !157, !765, !177, !330}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 32)
!756 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 32)
!758 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!762 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!766 = !{!750}
!767 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !770, line: 16, size: 64, elements: !771)
!770 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!771 = !{!772, !773}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !769, file: !770, line: 17, baseType: !330, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !769, file: !770, line: 18, baseType: !164, size: 8, offset: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "_char_out", scope: !776, file: !780, line: 54, type: !781, isLocal: false, isDefinition: true)
!776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !777, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, globals: !779, splitDebugInlining: false, nameTableKind: None)
!777 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!778 = !{!102, !103}
!779 = !{!774}
!780 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = !DISubroutineType(types: !783)
!783 = !{!103, !103}
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !786, file: !1200, line: 258, type: !1201, isLocal: true, isDefinition: true, align: 32)
!786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !788, retainedTypes: !1071, globals: !1199, splitDebugInlining: false, nameTableKind: None)
!787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!788 = !{!789, !821, !831, !880, !886, !1007, !1042}
!789 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !790, line: 54, baseType: !32, size: 32, elements: !791)
!790 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820}
!792 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!793 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!794 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!795 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!796 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!797 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!798 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!799 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!800 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!801 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!802 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!803 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!804 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!805 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!806 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!807 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!808 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!809 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!810 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!811 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!812 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!813 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!814 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!815 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!816 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!817 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!818 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!819 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!820 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!821 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !790, line: 224, baseType: !32, size: 32, elements: !822)
!822 = !{!823, !824, !825, !826, !827, !828, !829, !830}
!823 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!824 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!825 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!826 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!827 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!828 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!829 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!830 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!831 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !790, line: 275, baseType: !32, size: 32, elements: !832)
!832 = !{!833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879}
!833 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!834 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!835 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!836 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!837 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!838 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!839 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!840 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!841 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!842 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!843 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!844 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!845 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!846 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!847 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!848 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!849 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!850 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!851 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!852 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!853 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!854 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!855 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!856 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!857 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!858 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!859 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!860 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!861 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!862 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!863 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!864 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!865 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!866 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!867 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!868 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!869 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!870 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!871 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!872 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!873 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!874 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!875 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!876 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!877 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!878 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!879 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !790, line: 327, baseType: !32, size: 32, elements: !881)
!881 = !{!882, !883, !884, !885}
!882 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!883 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!884 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!885 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!886 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !887, line: 76, baseType: !32, size: 32, elements: !888)
!887 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!888 = !{!889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006}
!889 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!890 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!891 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!892 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!893 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!894 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!895 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!896 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!897 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!898 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!899 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!900 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!901 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!902 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!903 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!904 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!905 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!906 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!907 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!908 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!909 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!910 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!911 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!912 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!913 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!914 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!915 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!916 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!917 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!918 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!919 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!920 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!921 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!922 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!923 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!924 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!925 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!926 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!927 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!928 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!929 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!930 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!931 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!932 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!933 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!934 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!935 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!936 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!937 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!938 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!939 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!940 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!941 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!942 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!943 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!944 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!945 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!946 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!947 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!948 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!949 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!950 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!951 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!952 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!953 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!954 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!955 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!956 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!957 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!958 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!959 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!960 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!961 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!962 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!963 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!964 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!965 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!966 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!967 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!968 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!969 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!970 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!971 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!972 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!973 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!974 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!975 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!976 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!977 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!978 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!979 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!980 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!981 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!982 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!983 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!984 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!985 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!986 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!987 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!988 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!989 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!990 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!991 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!992 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!993 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!994 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!995 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!996 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!997 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!998 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!999 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!1000 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!1001 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!1002 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!1003 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!1004 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!1005 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!1006 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!1007 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !790, line: 237, baseType: !32, size: 32, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041}
!1009 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!1010 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!1011 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!1012 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!1013 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!1014 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!1015 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!1016 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!1017 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!1018 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!1019 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!1020 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!1021 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!1022 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!1023 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!1024 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!1025 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!1026 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!1027 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!1028 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!1029 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!1030 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!1031 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!1032 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!1033 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!1034 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!1035 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!1036 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!1037 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!1038 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!1039 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!1040 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!1041 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!1042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !887, line: 44, baseType: !32, size: 32, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070}
!1044 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!1045 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!1046 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!1047 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!1048 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!1049 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!1050 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!1051 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!1052 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!1053 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!1054 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!1055 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!1056 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!1057 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!1058 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!1059 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!1060 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!1061 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!1062 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!1063 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!1064 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!1065 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!1066 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!1067 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!1068 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!1069 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!1070 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!1071 = !{!1072, !1144, !1187, !1198, !108}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1074, line: 4575, baseType: !1075)
!1074 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 4532, size: 390144, elements: !1076)
!1076 = !{!1077, !1079, !1080, !1081, !1082, !1086, !1096, !1100, !1110, !1114}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !1075, file: !1074, line: 4533, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !1075, file: !1074, line: 4534, baseType: !1078, size: 32, offset: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !1075, file: !1074, line: 4535, baseType: !1078, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !1075, file: !1074, line: 4536, baseType: !1078, size: 32, offset: 96)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1075, file: !1074, line: 4537, baseType: !1083, size: 16256, offset: 128)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 16256, elements: !1084)
!1084 = !{!1085}
!1085 = !DISubrange(count: 2032)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !1075, file: !1074, line: 4543, baseType: !1087, size: 4224, offset: 16384)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 4224, elements: !1094)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1075, file: !1074, line: 4538, size: 128, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !1088, file: !1074, line: 4539, baseType: !1078, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !1088, file: !1074, line: 4540, baseType: !1078, size: 32, offset: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !1088, file: !1074, line: 4541, baseType: !1078, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !1088, file: !1074, line: 4542, baseType: !1078, size: 32, offset: 96)
!1094 = !{!1095}
!1095 = !DISubrange(count: 33)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1075, file: !1074, line: 4544, baseType: !1097, size: 110464, offset: 20608)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 110464, elements: !1098)
!1098 = !{!1099}
!1099 = !DISubrange(count: 13808)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !1075, file: !1074, line: 4550, baseType: !1101, size: 24448, offset: 131072)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1102, size: 24448, elements: !1108)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1075, file: !1074, line: 4545, size: 128, elements: !1103)
!1103 = !{!1104, !1105, !1106, !1107}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !1102, file: !1074, line: 4546, baseType: !1078, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !1102, file: !1074, line: 4547, baseType: !1078, size: 32, offset: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !1102, file: !1074, line: 4548, baseType: !1078, size: 32, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !1102, file: !1074, line: 4549, baseType: !1078, size: 32, offset: 96)
!1108 = !{!1109}
!1109 = !DISubrange(count: 191)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !1075, file: !1074, line: 4551, baseType: !1111, size: 106624, offset: 155520)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 106624, elements: !1112)
!1112 = !{!1113}
!1113 = !DISubrange(count: 13328)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !1075, file: !1074, line: 4574, baseType: !1115, size: 128000, offset: 262144)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1116, size: 128000, elements: !1142)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1075, file: !1074, line: 4552, size: 1024, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1138, !1139, !1140, !1141}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !1116, file: !1074, line: 4553, baseType: !1078, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !1116, file: !1074, line: 4554, baseType: !1078, size: 32, offset: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !1116, file: !1074, line: 4555, baseType: !1078, size: 32, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !1116, file: !1074, line: 4556, baseType: !1078, size: 32, offset: 96)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !1116, file: !1074, line: 4557, baseType: !1078, size: 32, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !1116, file: !1074, line: 4558, baseType: !1078, size: 32, offset: 160)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !1116, file: !1074, line: 4559, baseType: !1078, size: 32, offset: 192)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !1116, file: !1074, line: 4560, baseType: !1078, size: 32, offset: 224)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !1116, file: !1074, line: 4561, baseType: !1078, size: 32, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !1116, file: !1074, line: 4562, baseType: !1078, size: 32, offset: 288)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !1116, file: !1074, line: 4563, baseType: !1078, size: 32, offset: 320)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !1116, file: !1074, line: 4564, baseType: !1078, size: 32, offset: 352)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !1116, file: !1074, line: 4565, baseType: !1078, size: 32, offset: 384)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !1116, file: !1074, line: 4566, baseType: !1078, size: 32, offset: 416)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !1116, file: !1074, line: 4567, baseType: !1078, size: 32, offset: 448)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !1116, file: !1074, line: 4568, baseType: !1078, size: 32, offset: 480)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1116, file: !1074, line: 4569, baseType: !1135, size: 384, offset: 512)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 384, elements: !1136)
!1136 = !{!1137}
!1137 = !DISubrange(count: 48)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !1116, file: !1074, line: 4570, baseType: !1078, size: 32, offset: 896)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !1116, file: !1074, line: 4571, baseType: !1078, size: 32, offset: 928)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !1116, file: !1074, line: 4572, baseType: !1078, size: 32, offset: 960)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !1116, file: !1074, line: 4573, baseType: !1078, size: 32, offset: 992)
!1142 = !{!1143}
!1143 = !DISubrange(count: 125)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !1074, line: 38320, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 38303, size: 23040, elements: !1147)
!1147 = !{!1148, !1150, !1154, !1155, !1156, !1157, !1161, !1165, !1169, !1173, !1177}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !1146, file: !1074, line: 38304, baseType: !1149, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1078)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1146, file: !1074, line: 38305, baseType: !1151, size: 256, offset: 32)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 256, elements: !1152)
!1152 = !{!1153}
!1153 = !DISubrange(count: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !1146, file: !1074, line: 38306, baseType: !1078, size: 32, offset: 288)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !1146, file: !1074, line: 38307, baseType: !1078, size: 32, offset: 320)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !1146, file: !1074, line: 38308, baseType: !1078, size: 32, offset: 352)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1146, file: !1074, line: 38309, baseType: !1158, size: 3712, offset: 384)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 3712, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 464)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !1146, file: !1074, line: 38310, baseType: !1162, size: 864, offset: 4096)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 864, elements: !1163)
!1163 = !{!1164}
!1164 = !DISubrange(count: 27)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !1146, file: !1074, line: 38311, baseType: !1166, size: 3232, offset: 4960)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 3232, elements: !1167)
!1167 = !{!1168}
!1168 = !DISubrange(count: 404)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !1146, file: !1074, line: 38312, baseType: !1170, size: 3776, offset: 8192)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 3776, elements: !1171)
!1171 = !{!1172}
!1172 = !DISubrange(count: 118)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !1146, file: !1074, line: 38313, baseType: !1174, size: 4416, offset: 11968)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 4416, elements: !1175)
!1175 = !{!1176}
!1176 = !DISubrange(count: 552)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !1146, file: !1074, line: 38319, baseType: !1178, size: 6656, offset: 16384)
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1179, size: 6656, elements: !1185)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1146, file: !1074, line: 38314, size: 128, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !1179, file: !1074, line: 38315, baseType: !1078, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !1179, file: !1074, line: 38316, baseType: !1078, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !1179, file: !1074, line: 38317, baseType: !1078, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !1179, file: !1074, line: 38318, baseType: !1078, size: 32, offset: 96)
!1185 = !{!1186}
!1186 = !DISubrange(count: 52)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !1074, line: 43319, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 43313, size: 80, elements: !1190)
!1190 = !{!1191, !1193, !1194, !1196, !1197}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !1189, file: !1074, line: 43314, baseType: !1192, size: 16)
!1192 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !177)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !1189, file: !1074, line: 43315, baseType: !1192, size: 16, offset: 16)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !1189, file: !1074, line: 43316, baseType: !1195, size: 16, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !1189, file: !1074, line: 43317, baseType: !1192, size: 16, offset: 48)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !1189, file: !1074, line: 43318, baseType: !1192, size: 16, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1199 = !{!784}
!1200 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !1204)
!1203 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1204 = !{!1205, !1212}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1202, file: !1203, line: 60, baseType: !1206, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!103, !1209}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1203, line: 48, flags: DIFlagFwdDecl)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1202, file: !1203, line: 65, baseType: !1209, size: 32, offset: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1215, file: !1222, line: 21, type: !781, isLocal: true, isDefinition: true)
!1215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1216, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1217, globals: !1221, splitDebugInlining: false, nameTableKind: None)
!1216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1217 = !{!1218, !103, !102}
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1220, line: 22, baseType: !103)
!1220 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1221 = !{!1213}
!1222 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1225, file: !1387, line: 10, type: !1388, isLocal: false, isDefinition: true)
!1225 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1226, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1227, globals: !1386, splitDebugInlining: false, nameTableKind: None)
!1226 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1227 = !{!104, !102, !103, !1228, !157}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer_node", file: !116, line: 507, size: 64, elements: !1230)
!1230 = !{!1231, !1237}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1229, file: !116, line: 508, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !283, line: 33, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !283, line: 29, size: 32, elements: !1234)
!1234 = !{!1235}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1233, file: !283, line: 30, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "obs", scope: !1229, file: !116, line: 509, baseType: !1238, size: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1240)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !1241)
!1241 = !{!1242, !1243, !1279}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1240, file: !116, line: 91, baseType: !119, size: 8)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1240, file: !116, line: 93, baseType: !1244, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1245)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !1247)
!1247 = !{!1248, !1267, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1246, file: !124, line: 4206, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !1250)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !1251)
!1251 = !{!1252}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1250, file: !128, line: 232, baseType: !1253, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !1254)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !1255)
!1255 = !{!1256, !1262}
!1256 = !DIDerivedType(tag: DW_TAG_member, scope: !1254, file: !133, line: 38, baseType: !1257, size: 32)
!1257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1254, file: !133, line: 38, size: 32, elements: !1258)
!1258 = !{!1259, !1261}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1257, file: !133, line: 39, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1257, file: !133, line: 40, baseType: !1260, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_member, scope: !1254, file: !133, line: 42, baseType: !1263, size: 32, offset: 32)
!1263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1254, file: !133, line: 42, size: 32, elements: !1264)
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1263, file: !133, line: 43, baseType: !1260, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1263, file: !133, line: 44, baseType: !1260, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1246, file: !124, line: 4208, baseType: !1268, size: 32, offset: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !1269)
!1269 = !{!1270}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1268, file: !149, line: 52, baseType: !22, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1246, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1246, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1246, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1246, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1246, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1246, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1246, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1246, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1240, file: !116, line: 96, baseType: !1280, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{null, !1284}
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !1287)
!1287 = !{!1288, !1289, !1290, !1291, !1292, !1375, !1383}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !1286, file: !116, line: 35, baseType: !176, size: 16)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1286, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1286, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !1286, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1286, file: !116, line: 56, baseType: !1293, size: 32, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !1295)
!1295 = !{!1296, !1297, !1373, !1374}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1294, file: !124, line: 2722, baseType: !1249, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1294, file: !124, line: 2724, baseType: !1298, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !1300)
!1300 = !{!1301, !1341, !1353, !1354, !1355, !1356, !1368}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1299, file: !195, line: 247, baseType: !1302, size: 384)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !1303)
!1303 = !{!1304, !1315, !1317, !1318, !1319, !1328, !1329, !1330}
!1304 = !DIDerivedType(tag: DW_TAG_member, scope: !1302, file: !195, line: 60, baseType: !1305, size: 64)
!1305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1302, file: !195, line: 60, size: 64, elements: !1306)
!1306 = !{!1307, !1309}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1305, file: !195, line: 61, baseType: !1308, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !1254)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1305, file: !195, line: 62, baseType: !1310, size: 64)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !1311)
!1311 = !{!1312}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1310, file: !207, line: 50, baseType: !1313, size: 64)
!1313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1314, size: 64, elements: !212)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1302, file: !195, line: 68, baseType: !1316, size: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1302, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1302, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!1319 = !DIDerivedType(tag: DW_TAG_member, scope: !1302, file: !195, line: 90, baseType: !1320, size: 16, offset: 112)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1302, file: !195, line: 90, size: 16, elements: !1321)
!1321 = !{!1322, !1327}
!1322 = !DIDerivedType(tag: DW_TAG_member, scope: !1320, file: !195, line: 91, baseType: !1323, size: 16)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1320, file: !195, line: 91, size: 16, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1323, file: !195, line: 96, baseType: !225, size: 8)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1323, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1320, file: !195, line: 100, baseType: !177, size: 16)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1302, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1302, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1302, file: !195, line: 131, baseType: !1331, size: 192, offset: 192)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !1332)
!1332 = !{!1333, !1334, !1340}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1331, file: !128, line: 245, baseType: !1308, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1331, file: !128, line: 246, baseType: !1335, size: 32, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !1339}
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1331, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1299, file: !195, line: 250, baseType: !1342, size: 288, offset: 384)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !1343)
!1343 = !{!1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1342, file: !244, line: 26, baseType: !108, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1342, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1342, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1342, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1342, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1342, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1342, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1342, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1342, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1299, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1299, file: !195, line: 256, baseType: !1249, size: 64, offset: 704)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1299, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1299, file: !195, line: 325, baseType: !1357, size: 32, offset: 800)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !1359)
!1359 = !{!1360, !1366, !1367}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1358, file: !124, line: 5074, baseType: !1361, size: 96)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !1362)
!1362 = !{!1363, !1364, !1365}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1361, file: !264, line: 57, baseType: !267, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1361, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1361, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1358, file: !124, line: 5075, baseType: !1249, size: 64, offset: 96)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1358, file: !124, line: 5076, baseType: !1268, size: 32, offset: 160)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1299, file: !195, line: 343, baseType: !1369, size: 64, offset: 832)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !1370)
!1370 = !{!1371, !1372}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1369, file: !244, line: 63, baseType: !108, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1369, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !1294, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !1294, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !1286, file: !116, line: 61, baseType: !1376, size: 32, offset: 160)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !283, line: 40, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !283, line: 35, size: 64, elements: !1379)
!1379 = !{!1380, !1382}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1378, file: !283, line: 36, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1378, file: !283, line: 37, baseType: !1381, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !1286, file: !116, line: 67, baseType: !1384, size: 32, offset: 192)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1238)
!1386 = !{!1223}
!1387 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !770, line: 16, size: 64, elements: !1390)
!1390 = !{!1391, !1392}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !770, line: 17, baseType: !330, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1389, file: !770, line: 18, baseType: !164, size: 8, offset: 32)
!1393 = !DIGlobalVariableExpression(var: !1394, expr: !DIExpression())
!1394 = distinct !DIGlobalVariable(name: "_zbus_runtime_obs_pool", scope: !1395, file: !1560, line: 11, type: !1561, isLocal: true, isDefinition: true, align: 32)
!1395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1396, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1397, globals: !1557, splitDebugInlining: false, nameTableKind: None)
!1396 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus_runtime_observers.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1397 = !{!102, !1398, !157, !1556, !103}
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer_node", file: !116, line: 507, size: 64, elements: !1400)
!1400 = !{!1401, !1407}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1399, file: !116, line: 508, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !283, line: 33, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !283, line: 29, size: 32, elements: !1404)
!1404 = !{!1405}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1403, file: !283, line: 30, baseType: !1406, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "obs", scope: !1399, file: !116, line: 509, baseType: !1408, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !116, line: 85, size: 96, elements: !1411)
!1411 = !{!1412, !1413, !1449}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1410, file: !116, line: 91, baseType: !119, size: 8)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1410, file: !116, line: 93, baseType: !1414, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !1417)
!1417 = !{!1418, !1437, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1416, file: !124, line: 4206, baseType: !1419, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !1420)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !1421)
!1421 = !{!1422}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1420, file: !128, line: 232, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !1425)
!1425 = !{!1426, !1432}
!1426 = !DIDerivedType(tag: DW_TAG_member, scope: !1424, file: !133, line: 38, baseType: !1427, size: 32)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1424, file: !133, line: 38, size: 32, elements: !1428)
!1428 = !{!1429, !1431}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1427, file: !133, line: 39, baseType: !1430, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1427, file: !133, line: 40, baseType: !1430, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, scope: !1424, file: !133, line: 42, baseType: !1433, size: 32, offset: 32)
!1433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1424, file: !133, line: 42, size: 32, elements: !1434)
!1434 = !{!1435, !1436}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1433, file: !133, line: 43, baseType: !1430, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1433, file: !133, line: 44, baseType: !1430, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1416, file: !124, line: 4208, baseType: !1438, size: 32, offset: 64)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !1439)
!1439 = !{!1440}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1438, file: !149, line: 52, baseType: !22, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1416, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1416, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1416, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1416, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1416, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1416, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1416, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1416, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1410, file: !116, line: 96, baseType: !1450, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{null, !1454}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !116, line: 29, size: 224, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461, !1462, !1545, !1553}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !1456, file: !116, line: 35, baseType: !176, size: 16)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1456, file: !116, line: 40, baseType: !180, size: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1456, file: !116, line: 45, baseType: !180, size: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !1456, file: !116, line: 51, baseType: !183, size: 32, offset: 96)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1456, file: !116, line: 56, baseType: !1463, size: 32, offset: 128)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !1465)
!1465 = !{!1466, !1467, !1543, !1544}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1464, file: !124, line: 2722, baseType: !1419, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1464, file: !124, line: 2724, baseType: !1468, size: 32, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !1470)
!1470 = !{!1471, !1511, !1523, !1524, !1525, !1526, !1538}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1469, file: !195, line: 247, baseType: !1472, size: 384)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !1473)
!1473 = !{!1474, !1485, !1487, !1488, !1489, !1498, !1499, !1500}
!1474 = !DIDerivedType(tag: DW_TAG_member, scope: !1472, file: !195, line: 60, baseType: !1475, size: 64)
!1475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1472, file: !195, line: 60, size: 64, elements: !1476)
!1476 = !{!1477, !1479}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1475, file: !195, line: 61, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !1424)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1475, file: !195, line: 62, baseType: !1480, size: 64)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !1481)
!1481 = !{!1482}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1480, file: !207, line: 50, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1484, size: 64, elements: !212)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1472, file: !195, line: 68, baseType: !1486, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1472, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1472, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!1489 = !DIDerivedType(tag: DW_TAG_member, scope: !1472, file: !195, line: 90, baseType: !1490, size: 16, offset: 112)
!1490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1472, file: !195, line: 90, size: 16, elements: !1491)
!1491 = !{!1492, !1497}
!1492 = !DIDerivedType(tag: DW_TAG_member, scope: !1490, file: !195, line: 91, baseType: !1493, size: 16)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1490, file: !195, line: 91, size: 16, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1493, file: !195, line: 96, baseType: !225, size: 8)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1493, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1490, file: !195, line: 100, baseType: !177, size: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1472, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1472, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1472, file: !195, line: 131, baseType: !1501, size: 192, offset: 192)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !1502)
!1502 = !{!1503, !1504, !1510}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1501, file: !128, line: 245, baseType: !1478, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1501, file: !128, line: 246, baseType: !1505, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !1506)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{null, !1509}
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1501, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1469, file: !195, line: 250, baseType: !1512, size: 288, offset: 384)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1512, file: !244, line: 26, baseType: !108, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1512, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1512, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1512, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1512, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1512, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1512, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1512, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1512, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1469, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1469, file: !195, line: 256, baseType: !1419, size: 64, offset: 704)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1469, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1469, file: !195, line: 325, baseType: !1527, size: 32, offset: 800)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !1529)
!1529 = !{!1530, !1536, !1537}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1528, file: !124, line: 5074, baseType: !1531, size: 96)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !1532)
!1532 = !{!1533, !1534, !1535}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1531, file: !264, line: 57, baseType: !267, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1531, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1531, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1528, file: !124, line: 5075, baseType: !1419, size: 64, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1528, file: !124, line: 5076, baseType: !1438, size: 32, offset: 160)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1469, file: !195, line: 343, baseType: !1539, size: 64, offset: 832)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1539, file: !244, line: 63, baseType: !108, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1539, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !1464, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !1464, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_observers", scope: !1456, file: !116, line: 61, baseType: !1546, size: 32, offset: 160)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !283, line: 40, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !283, line: 35, size: 64, elements: !1549)
!1549 = !{!1550, !1552}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1548, file: !283, line: 36, baseType: !1551, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1548, file: !283, line: 37, baseType: !1551, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !1456, file: !116, line: 67, baseType: !1554, size: 32, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1408)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!1557 = !{!1393, !1558}
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "_k_mem_slab_buf__zbus_runtime_obs_pool", scope: !1395, file: !1560, line: 11, type: !338, isLocal: true, isDefinition: true, align: 32)
!1560 = !DIFile(filename: "zephyr/subsys/zbus/zbus_runtime_observers.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_slab", file: !124, line: 4836, size: 256, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566, !1567, !1568, !1569}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1561, file: !124, line: 4837, baseType: !1419, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1561, file: !124, line: 4838, baseType: !1438, size: 32, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !1561, file: !124, line: 4839, baseType: !108, size: 32, offset: 96)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1561, file: !124, line: 4840, baseType: !153, size: 32, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1561, file: !124, line: 4841, baseType: !157, size: 32, offset: 160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !1561, file: !124, line: 4842, baseType: !157, size: 32, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !1561, file: !124, line: 4843, baseType: !108, size: 32, offset: 224)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1572, file: !1668, line: 603, type: !1670, isLocal: true, isDefinition: true, align: 32)
!1572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1573, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1574, globals: !1665, splitDebugInlining: false, nameTableKind: None)
!1573 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1574 = !{!102, !103, !1575}
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1578, line: 336, size: 608, elements: !1579)
!1578 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1579 = !{!1580, !1606, !1610, !1614, !1627, !1632, !1638, !1643, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1577, file: !1578, line: 365, baseType: !1581, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!103, !1584, !1605}
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1586)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1587, line: 378, size: 192, elements: !1588)
!1587 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1588 = !{!1589, !1590, !1591, !1592, !1598, !1599}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1586, file: !1587, line: 380, baseType: !330, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1586, file: !1587, line: 382, baseType: !13, size: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1586, file: !1587, line: 384, baseType: !13, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1586, file: !1587, line: 386, baseType: !1593, size: 32, offset: 96)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1587, line: 351, size: 16, elements: !1595)
!1595 = !{!1596, !1597}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1594, file: !1587, line: 359, baseType: !164, size: 8)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1594, file: !1587, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1586, file: !1587, line: 388, baseType: !102, size: 32, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1586, file: !1587, line: 396, baseType: !1600, size: 32, offset: 160)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !1587, line: 43, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !1604)
!1604 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1577, file: !1578, line: 366, baseType: !1607, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1584, !165}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1577, file: !1578, line: 374, baseType: !1611, size: 32, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!103, !1584}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1577, file: !1578, line: 377, baseType: !1615, size: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!103, !1584, !1618}
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1578, line: 122, size: 64, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1620, file: !1578, line: 123, baseType: !108, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1620, file: !1578, line: 124, baseType: !164, size: 8, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1620, file: !1578, line: 125, baseType: !164, size: 8, offset: 40)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1620, file: !1578, line: 126, baseType: !164, size: 8, offset: 48)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1620, file: !1578, line: 127, baseType: !164, size: 8, offset: 56)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1577, file: !1578, line: 379, baseType: !1628, size: 32, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!103, !1584, !1631}
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1577, file: !1578, line: 384, baseType: !1633, size: 32, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!103, !1584, !1636, !103}
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1577, file: !1578, line: 393, baseType: !1639, size: 32, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!103, !1584, !765, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1577, file: !1578, line: 402, baseType: !1644, size: 32, offset: 224)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{null, !1584}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1577, file: !1578, line: 405, baseType: !1644, size: 32, offset: 256)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1577, file: !1578, line: 408, baseType: !1611, size: 32, offset: 288)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1577, file: !1578, line: 411, baseType: !1644, size: 32, offset: 320)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1577, file: !1578, line: 414, baseType: !1644, size: 32, offset: 352)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1577, file: !1578, line: 417, baseType: !1611, size: 32, offset: 384)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1577, file: !1578, line: 420, baseType: !1611, size: 32, offset: 416)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1577, file: !1578, line: 423, baseType: !1644, size: 32, offset: 448)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1577, file: !1578, line: 426, baseType: !1644, size: 32, offset: 480)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1577, file: !1578, line: 429, baseType: !1611, size: 32, offset: 512)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1577, file: !1578, line: 432, baseType: !1611, size: 32, offset: 544)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1577, file: !1578, line: 435, baseType: !1658, size: 32, offset: 576)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 32)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{null, !1584, !1661, !102}
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1578, line: 142, baseType: !1662)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{null, !1584, !102}
!1665 = !{!1570, !1666}
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1572, file: !1668, line: 38, type: !1669, isLocal: true, isDefinition: true)
!1668 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1671, file: !1203, line: 60, baseType: !1611, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1671, file: !1203, line: 65, baseType: !1584, size: 32, offset: 32)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !1677, file: !1780, line: 318, type: !1856, isLocal: false, isDefinition: true)
!1677 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1678, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1679, retainedTypes: !1696, globals: !1777, splitDebugInlining: false, nameTableKind: None)
!1678 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1679 = !{!1680, !1686, !1691}
!1680 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1681, line: 506, baseType: !32, size: 32, elements: !1682)
!1681 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1682 = !{!1683, !1684, !1685}
!1683 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1684 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1685 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1686 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1681, line: 512, baseType: !32, size: 32, elements: !1687)
!1687 = !{!1688, !1689, !1690}
!1688 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1689 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1690 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1691 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !1692, line: 66, baseType: !32, size: 32, elements: !1693)
!1692 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1693 = !{!1694, !1695}
!1694 = !DIEnumerator(name: "gpioPinClear", value: 0)
!1695 = !DIEnumerator(name: "gpioPinSet", value: 1)
!1696 = !{!1697, !1766, !1771, !1732, !1686, !1680, !1776, !102, !1198, !1747, !157}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1681, line: 523, size: 288, elements: !1700)
!1700 = !{!1701, !1722, !1728, !1733, !1737, !1738, !1739, !1743, !1762}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1699, file: !1681, line: 524, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!103, !1705, !1720, !1721}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1587, line: 378, size: 192, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1718, !1719}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1707, file: !1587, line: 380, baseType: !330, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1707, file: !1587, line: 382, baseType: !13, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1707, file: !1587, line: 384, baseType: !13, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1707, file: !1587, line: 386, baseType: !1713, size: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1587, line: 351, size: 16, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1714, file: !1587, line: 359, baseType: !164, size: 8)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1714, file: !1587, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1707, file: !1587, line: 388, baseType: !102, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1707, file: !1587, line: 396, baseType: !1600, size: 32, offset: 160)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1681, line: 237, baseType: !164)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1681, line: 257, baseType: !108)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1699, file: !1681, line: 530, baseType: !1723, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!103, !1705, !1726}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1681, line: 229, baseType: !108)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1699, file: !1681, line: 532, baseType: !1729, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!103, !1705, !1732, !1727}
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1681, line: 216, baseType: !108)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1699, file: !1681, line: 535, baseType: !1734, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{!103, !1705, !1732}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1699, file: !1681, line: 537, baseType: !1734, size: 32, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1699, file: !1681, line: 539, baseType: !1734, size: 32, offset: 160)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1699, file: !1681, line: 541, baseType: !1740, size: 32, offset: 192)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!103, !1705, !1720, !1680, !1686}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1699, file: !1681, line: 544, baseType: !1744, size: 32, offset: 224)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!103, !1705, !1747, !119}
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1681, line: 478, size: 96, elements: !1749)
!1749 = !{!1750, !1756, !1761}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1748, file: !1681, line: 482, baseType: !1751, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !283, line: 33, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !283, line: 29, size: 32, elements: !1753)
!1753 = !{!1754}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1752, file: !283, line: 30, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1748, file: !1681, line: 485, baseType: !1757, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1681, line: 464, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{null, !1705, !1747, !1732}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1748, file: !1681, line: 493, baseType: !1732, size: 32, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1699, file: !1681, line: 547, baseType: !1763, size: 32, offset: 256)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!108, !1705}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1681, line: 428, size: 32, elements: !1769)
!1769 = !{!1770}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1768, file: !1681, line: 434, baseType: !1732, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1681, line: 441, size: 32, elements: !1774)
!1774 = !{!1775}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1773, file: !1681, line: 447, baseType: !1732, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1777 = !{!1675, !1778, !1784, !1786, !1796, !1808, !1810, !1841, !1843, !1854}
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1677, file: !1780, line: 318, type: !1781, isLocal: false, isDefinition: true, align: 16)
!1780 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1601, size: 400, elements: !1782)
!1782 = !{!1783}
!1783 = !DISubrange(count: 25)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !1677, file: !1780, line: 318, type: !1706, isLocal: false, isDefinition: true, align: 32)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !1677, file: !1780, line: 318, type: !1788, isLocal: true, isDefinition: true, align: 32)
!1788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1789)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !1790)
!1790 = !{!1791, !1795}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1789, file: !1203, line: 60, baseType: !1792, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!103, !1705}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1789, file: !1203, line: 65, baseType: !1705, size: 32, offset: 32)
!1796 = !DIGlobalVariableExpression(var: !1797, expr: !DIExpression())
!1797 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !1677, file: !1780, line: 318, type: !1798, isLocal: true, isDefinition: true)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1780, line: 33, size: 96, elements: !1799)
!1799 = !{!1800, !1801}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1798, file: !1780, line: 35, baseType: !1773, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1798, file: !1780, line: 37, baseType: !1802, size: 64, offset: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !283, line: 40, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !283, line: 35, size: 64, elements: !1804)
!1804 = !{!1805, !1807}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1803, file: !283, line: 36, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1803, file: !283, line: 37, baseType: !1806, size: 32, offset: 32)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !1677, file: !1780, line: 318, type: !1714, isLocal: true, isDefinition: true, align: 8)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !1677, file: !1780, line: 318, type: !1812, isLocal: true, isDefinition: true)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1780, line: 23, size: 128, elements: !1814)
!1814 = !{!1815, !1816, !1829, !1840}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1813, file: !1780, line: 25, baseType: !1768, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1813, file: !1780, line: 26, baseType: !1817, size: 32, offset: 32)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !1074, line: 19729, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 19720, size: 256, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1819, file: !1074, line: 19721, baseType: !1078, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1819, file: !1074, line: 19722, baseType: !1078, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1819, file: !1074, line: 19723, baseType: !1149, size: 32, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1819, file: !1074, line: 19724, baseType: !1078, size: 32, offset: 96)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1819, file: !1074, line: 19725, baseType: !1078, size: 32, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1819, file: !1074, line: 19726, baseType: !1078, size: 32, offset: 160)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1819, file: !1074, line: 19727, baseType: !1078, size: 32, offset: 192)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1819, file: !1074, line: 19728, baseType: !1078, size: 32, offset: 224)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1813, file: !1780, line: 28, baseType: !1830, size: 32, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1833, line: 51, size: 128, elements: !1834)
!1833 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1834 = !{!1835, !1836, !1837, !1838, !1839}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1832, file: !1833, line: 52, baseType: !108, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1832, file: !1833, line: 53, baseType: !108, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1832, file: !1833, line: 54, baseType: !108, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1832, file: !1833, line: 55, baseType: !164, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1832, file: !1833, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1813, file: !1780, line: 29, baseType: !164, size: 8, offset: 96)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !1677, file: !1780, line: 249, type: !1698, isLocal: true, isDefinition: true)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1845, file: !1780, line: 318, type: !1848, isLocal: true, isDefinition: true, align: 32)
!1845 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1780, file: !1780, line: 318, type: !1793, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !1846)
!1846 = !{!1847}
!1847 = !DILocalVariable(name: "port", arg: 1, scope: !1845, file: !1780, line: 318, type: !1705)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1848, file: !10, line: 55, baseType: !324, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1848, file: !10, line: 57, baseType: !324, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1848, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1848, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1845, file: !1780, line: 318, type: !1848, isLocal: true, isDefinition: true, align: 32)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1831, size: 2048, elements: !339)
!1857 = !DIGlobalVariableExpression(var: !1858, expr: !DIExpression())
!1858 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1859, file: !1864, line: 7, type: !1865, isLocal: false, isDefinition: true, align: 16)
!1859 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1860, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1861, splitDebugInlining: false, nameTableKind: None)
!1860 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1861 = !{!1857, !1862}
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1859, file: !1864, line: 12, type: !1865, isLocal: false, isDefinition: true, align: 16)
!1864 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1601, size: 48, elements: !1866)
!1866 = !{!1867}
!1867 = !DISubrange(count: 3)
!1868 = !DIGlobalVariableExpression(var: !1869, expr: !DIExpression())
!1869 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1870, file: !2067, line: 339, type: !2065, isLocal: true, isDefinition: true)
!1870 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1871, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1872, retainedTypes: !1958, globals: !2103, splitDebugInlining: false, nameTableKind: None)
!1871 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!1872 = !{!30, !1873, !1911, !1939, !1943, !1947, !1952}
!1873 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1874, line: 122, baseType: !32, size: 32, elements: !1875)
!1874 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910}
!1876 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1877 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1878 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1879 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1880 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1881 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1882 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1883 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1884 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1885 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1886 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1887 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1888 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1889 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1890 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1891 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1892 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1893 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1894 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1895 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1896 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1897 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1898 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1899 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1900 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1901 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1902 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1903 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1904 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1905 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1906 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1907 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1908 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1909 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1910 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1911 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1874, line: 91, baseType: !32, size: 32, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938}
!1913 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1914 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1915 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1916 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1917 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1918 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1919 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1920 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1921 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1922 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1923 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1924 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1925 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1926 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1927 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1928 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1929 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1930 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1931 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1932 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1933 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1934 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1935 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1936 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1937 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1938 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1939 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1874, line: 60, baseType: !32, size: 32, elements: !1940)
!1940 = !{!1941, !1942}
!1941 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1942 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1874, line: 67, baseType: !32, size: 32, elements: !1944)
!1944 = !{!1945, !1946}
!1945 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1946 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1947 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1874, line: 74, baseType: !32, size: 32, elements: !1948)
!1948 = !{!1949, !1950, !1951}
!1949 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1950 = !DIEnumerator(name: "uartParityEven", value: 256)
!1951 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1952 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1874, line: 82, baseType: !32, size: 32, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957}
!1954 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1955 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1956 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1957 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1958 = !{!102, !103, !1959, !2038, !2064, !2102, !108, !119, !164}
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1578, line: 336, size: 608, elements: !1962)
!1962 = !{!1963, !1982, !1986, !1990, !2003, !2008, !2012, !2016, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1961, file: !1578, line: 365, baseType: !1964, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{!103, !1967, !1605}
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1587, line: 378, size: 192, elements: !1970)
!1970 = !{!1971, !1972, !1973, !1974, !1980, !1981}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1969, file: !1587, line: 380, baseType: !330, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1969, file: !1587, line: 382, baseType: !13, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1969, file: !1587, line: 384, baseType: !13, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1969, file: !1587, line: 386, baseType: !1975, size: 32, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1587, line: 351, size: 16, elements: !1977)
!1977 = !{!1978, !1979}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1976, file: !1587, line: 359, baseType: !164, size: 8)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1976, file: !1587, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1969, file: !1587, line: 388, baseType: !102, size: 32, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1969, file: !1587, line: 396, baseType: !1600, size: 32, offset: 160)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1961, file: !1578, line: 366, baseType: !1983, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1967, !165}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1961, file: !1578, line: 374, baseType: !1987, size: 32, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!103, !1967}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1961, file: !1578, line: 377, baseType: !1991, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!103, !1967, !1994}
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1996)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1578, line: 122, size: 64, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1996, file: !1578, line: 123, baseType: !108, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1996, file: !1578, line: 124, baseType: !164, size: 8, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1996, file: !1578, line: 125, baseType: !164, size: 8, offset: 40)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1996, file: !1578, line: 126, baseType: !164, size: 8, offset: 48)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1996, file: !1578, line: 127, baseType: !164, size: 8, offset: 56)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1961, file: !1578, line: 379, baseType: !2004, size: 32, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!103, !1967, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1961, file: !1578, line: 384, baseType: !2009, size: 32, offset: 160)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!103, !1967, !1636, !103}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1961, file: !1578, line: 393, baseType: !2013, size: 32, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!103, !1967, !765, !1642}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1961, file: !1578, line: 402, baseType: !2017, size: 32, offset: 224)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{null, !1967}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1961, file: !1578, line: 405, baseType: !2017, size: 32, offset: 256)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1961, file: !1578, line: 408, baseType: !1987, size: 32, offset: 288)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1961, file: !1578, line: 411, baseType: !2017, size: 32, offset: 320)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1961, file: !1578, line: 414, baseType: !2017, size: 32, offset: 352)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1961, file: !1578, line: 417, baseType: !1987, size: 32, offset: 384)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1961, file: !1578, line: 420, baseType: !1987, size: 32, offset: 416)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1961, file: !1578, line: 423, baseType: !2017, size: 32, offset: 448)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1961, file: !1578, line: 426, baseType: !2017, size: 32, offset: 480)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1961, file: !1578, line: 429, baseType: !1987, size: 32, offset: 512)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1961, file: !1578, line: 432, baseType: !1987, size: 32, offset: 544)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1961, file: !1578, line: 435, baseType: !2031, size: 32, offset: 576)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 32)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{null, !1967, !2034, !102}
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1578, line: 142, baseType: !2035)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{null, !1967, !102}
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1074, line: 41342, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 41322, size: 1504, elements: !2041)
!2041 = !{!2042, !2043, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !2040, file: !1074, line: 41323, baseType: !1149, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2040, file: !1074, line: 41324, baseType: !2044, size: 480, offset: 32)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 480, elements: !2045)
!2045 = !{!2046}
!2046 = !DISubrange(count: 60)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !2040, file: !1074, line: 41325, baseType: !1078, size: 32, offset: 512)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2040, file: !1074, line: 41326, baseType: !2044, size: 480, offset: 544)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !2040, file: !1074, line: 41327, baseType: !1078, size: 32, offset: 1024)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !2040, file: !1074, line: 41328, baseType: !1078, size: 32, offset: 1056)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !2040, file: !1074, line: 41329, baseType: !1078, size: 32, offset: 1088)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !2040, file: !1074, line: 41330, baseType: !1078, size: 32, offset: 1120)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !2040, file: !1074, line: 41331, baseType: !1078, size: 32, offset: 1152)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !2040, file: !1074, line: 41332, baseType: !1078, size: 32, offset: 1184)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !2040, file: !1074, line: 41333, baseType: !1078, size: 32, offset: 1216)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !2040, file: !1074, line: 41334, baseType: !1078, size: 32, offset: 1248)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !2040, file: !1074, line: 41335, baseType: !1078, size: 32, offset: 1280)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !2040, file: !1074, line: 41336, baseType: !1078, size: 32, offset: 1312)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !2040, file: !1074, line: 41337, baseType: !1078, size: 32, offset: 1344)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !2040, file: !1074, line: 41338, baseType: !1149, size: 32, offset: 1376)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !2040, file: !1074, line: 41339, baseType: !1078, size: 32, offset: 1408)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !2040, file: !1074, line: 41340, baseType: !1078, size: 32, offset: 1440)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !2040, file: !1074, line: 41341, baseType: !1078, size: 32, offset: 1472)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !2067, line: 29, size: 160, elements: !2068)
!2067 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2068 = !{!2069, !2070, !2071, !2072, !2101}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2066, file: !2067, line: 30, baseType: !2038, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !2066, file: !2067, line: 31, baseType: !108, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !2066, file: !2067, line: 32, baseType: !164, size: 8, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !2066, file: !2067, line: 33, baseType: !2073, size: 32, offset: 96)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2076, line: 60, size: 64, elements: !2077)
!2076 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2077 = !{!2078, !2100}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2075, file: !2076, line: 69, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2081)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2076, line: 50, size: 64, elements: !2082)
!2082 = !{!2083, !2098, !2099}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2081, file: !2076, line: 52, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2086)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1833, line: 64, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1833, line: 59, size: 160, elements: !2088)
!2088 = !{!2089, !2097}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !2087, file: !1833, line: 60, baseType: !2090, size: 128)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1833, line: 51, size: 128, elements: !2091)
!2091 = !{!2092, !2093, !2094, !2095, !2096}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !2090, file: !1833, line: 52, baseType: !108, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !2090, file: !1833, line: 53, baseType: !108, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !2090, file: !1833, line: 54, baseType: !108, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !2090, file: !1833, line: 55, baseType: !164, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !2090, file: !1833, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !2087, file: !1833, line: 61, baseType: !108, size: 32, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2081, file: !2076, line: 54, baseType: !164, size: 8, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2081, file: !2076, line: 56, baseType: !164, size: 8, offset: 40)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2075, file: !2076, line: 71, baseType: !164, size: 8, offset: 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !2066, file: !2067, line: 35, baseType: !2017, size: 32, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!2103 = !{!2104, !2109, !2111, !2118, !2124, !2126, !1868, !2128, !2130, !2133, !2136}
!2104 = !DIGlobalVariableExpression(var: !2105, expr: !DIExpression())
!2105 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1870, file: !2067, line: 339, type: !2106, isLocal: false, isDefinition: true, align: 16)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1601, size: 96, elements: !2107)
!2107 = !{!2108}
!2108 = !DISubrange(count: 6)
!2109 = !DIGlobalVariableExpression(var: !2110, expr: !DIExpression())
!2110 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1870, file: !2067, line: 339, type: !1968, isLocal: false, isDefinition: true, align: 32)
!2111 = !DIGlobalVariableExpression(var: !2112, expr: !DIExpression())
!2112 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1870, file: !2067, line: 339, type: !2113, isLocal: true, isDefinition: true, align: 32)
!2113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !2115)
!2115 = !{!2116, !2117}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2114, file: !1203, line: 60, baseType: !1987, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2114, file: !1203, line: 65, baseType: !1967, size: 32, offset: 32)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1870, file: !2067, line: 339, type: !2120, isLocal: true, isDefinition: true)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !2067, line: 39, size: 64, elements: !2121)
!2121 = !{!2122, !2123}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2120, file: !2067, line: 41, baseType: !2034, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !2120, file: !2067, line: 42, baseType: !102, size: 32, offset: 32)
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1870, file: !2067, line: 339, type: !1976, isLocal: true, isDefinition: true, align: 8)
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1870, file: !2067, line: 270, type: !1960, isLocal: true, isDefinition: true)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1870, file: !2067, line: 339, type: !2074, isLocal: true, isDefinition: true)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1870, file: !2067, line: 339, type: !2132, isLocal: true, isDefinition: true)
!2132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2080, size: 64, elements: !743)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1870, file: !2067, line: 339, type: !2135, isLocal: true, isDefinition: true)
!2135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2085, size: 320, elements: !212)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !2138, file: !2067, line: 339, type: !2141, isLocal: true, isDefinition: true, align: 32)
!2138 = distinct !DISubprogram(name: "irq_config_func_0", scope: !2067, file: !2067, line: 339, type: !2018, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !2139)
!2139 = !{!2140}
!2140 = !DILocalVariable(name: "dev", arg: 1, scope: !2138, file: !2067, line: 339, type: !1967)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !2142)
!2142 = !{!2143, !2144, !2145, !2146}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2141, file: !10, line: 55, baseType: !324, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2141, file: !10, line: 57, baseType: !324, size: 32, offset: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2141, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2141, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2149, file: !2374, line: 65, type: !1078, isLocal: true, isDefinition: true)
!2149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2150, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2151, retainedTypes: !2292, globals: !2371, splitDebugInlining: false, nameTableKind: None)
!2150 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2151 = !{!2152}
!2152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !1074, line: 103, baseType: !103, size: 32, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291}
!2154 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!2155 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!2156 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!2157 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!2158 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!2159 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!2160 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!2161 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!2162 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!2163 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!2164 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!2165 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!2166 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!2167 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!2168 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!2169 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!2170 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!2171 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!2172 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!2173 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!2174 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!2175 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!2176 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!2177 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!2178 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!2179 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!2180 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!2181 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!2182 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!2183 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!2184 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!2185 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!2186 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!2187 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!2188 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!2189 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!2190 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!2191 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!2192 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!2193 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!2194 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!2195 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!2196 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!2197 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!2198 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!2199 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!2200 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!2201 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!2202 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!2203 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!2204 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!2205 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!2206 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!2207 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!2208 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!2209 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!2210 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!2211 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!2212 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!2213 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!2214 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!2215 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!2216 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!2217 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!2218 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!2219 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!2220 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!2221 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!2222 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!2223 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!2224 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!2225 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!2226 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!2227 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!2228 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!2229 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!2230 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!2231 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!2232 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!2233 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!2234 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!2235 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!2236 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!2237 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!2238 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!2239 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!2240 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!2241 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!2242 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!2243 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!2244 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!2245 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!2246 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!2247 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!2248 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!2249 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!2250 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!2251 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!2252 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!2253 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!2254 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!2255 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!2256 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!2257 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!2258 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!2259 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!2260 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!2261 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!2262 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!2263 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!2264 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!2265 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!2266 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!2267 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!2268 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!2269 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!2270 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!2271 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!2272 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!2273 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!2274 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!2275 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!2276 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!2277 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!2278 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!2279 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!2280 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!2281 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!2282 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!2283 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!2284 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!2285 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!2286 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!2287 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!2288 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!2289 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!2290 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!2291 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!2292 = !{!104, !2293, !324, !164, !108, !2302, !2335}
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !2295, line: 770, baseType: !2296)
!2295 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 764, size: 128, elements: !2297)
!2297 = !{!2298, !2299, !2300, !2301}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2296, file: !2295, line: 766, baseType: !1078, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2296, file: !2295, line: 767, baseType: !1078, size: 32, offset: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2296, file: !2295, line: 768, baseType: !1078, size: 32, offset: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2296, file: !2295, line: 769, baseType: !1149, size: 32, offset: 96)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2295, line: 426, baseType: !2304)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 411, size: 28704, elements: !2305)
!2305 = !{!2306, !2310, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2325, !2330, !2334}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2304, file: !2295, line: 413, baseType: !2307, size: 256)
!2307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 256, elements: !2308)
!2308 = !{!2309}
!2309 = !DISubrange(count: 8)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2304, file: !2295, line: 414, baseType: !2311, size: 768, offset: 256)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 768, elements: !2312)
!2312 = !{!2313}
!2313 = !DISubrange(count: 24)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2304, file: !2295, line: 415, baseType: !2307, size: 256, offset: 1024)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2304, file: !2295, line: 416, baseType: !2311, size: 768, offset: 1280)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2304, file: !2295, line: 417, baseType: !2307, size: 256, offset: 2048)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2304, file: !2295, line: 418, baseType: !2311, size: 768, offset: 2304)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2304, file: !2295, line: 419, baseType: !2307, size: 256, offset: 3072)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2304, file: !2295, line: 420, baseType: !2311, size: 768, offset: 3328)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2304, file: !2295, line: 421, baseType: !2307, size: 256, offset: 4096)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2304, file: !2295, line: 422, baseType: !2322, size: 1792, offset: 4352)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 1792, elements: !2323)
!2323 = !{!2324}
!2324 = !DISubrange(count: 56)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2304, file: !2295, line: 423, baseType: !2326, size: 1920, offset: 6144)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2327, size: 1920, elements: !2328)
!2327 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !164)
!2328 = !{!2329}
!2329 = !DISubrange(count: 240)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2304, file: !2295, line: 424, baseType: !2331, size: 20608, offset: 8064)
!2331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 20608, elements: !2332)
!2332 = !{!2333}
!2333 = !DISubrange(count: 644)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2304, file: !2295, line: 425, baseType: !1078, size: 32, offset: 28672)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !2338)
!2338 = !{!2339, !2340, !2341, !2342, !2343, !2344, !2345, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2358, !2359, !2360, !2364, !2368, !2370}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2337, file: !2295, line: 447, baseType: !1149, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2337, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2337, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2337, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2337, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2337, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2337, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2327, size: 96, elements: !2347)
!2347 = !{!2348}
!2348 = !DISubrange(count: 12)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2337, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2337, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2337, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2337, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2337, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2337, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2337, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2337, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 64, elements: !212)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2337, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2337, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2337, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 128, elements: !2362)
!2362 = !{!2363}
!2363 = !DISubrange(count: 4)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2337, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 160, elements: !2366)
!2366 = !{!2367}
!2367 = !DISubrange(count: 5)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2337, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 160, elements: !2366)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2337, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!2371 = !{!2372, !2398, !2403, !2405, !2407, !2147}
!2372 = !DIGlobalVariableExpression(var: !2373, expr: !DIExpression())
!2373 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2149, file: !2374, line: 285, type: !2375, isLocal: true, isDefinition: true, align: 32)
!2374 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !2377)
!2377 = !{!2378, !2397}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2376, file: !1203, line: 60, baseType: !2379, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!103, !2382}
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2384)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1587, line: 378, size: 192, elements: !2385)
!2385 = !{!2386, !2387, !2388, !2389, !2395, !2396}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2384, file: !1587, line: 380, baseType: !330, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2384, file: !1587, line: 382, baseType: !13, size: 32, offset: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2384, file: !1587, line: 384, baseType: !13, size: 32, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2384, file: !1587, line: 386, baseType: !2390, size: 32, offset: 96)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1587, line: 351, size: 16, elements: !2392)
!2392 = !{!2393, !2394}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2391, file: !1587, line: 359, baseType: !164, size: 8)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2391, file: !1587, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2384, file: !1587, line: 388, baseType: !102, size: 32, offset: 128)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2384, file: !1587, line: 396, baseType: !1600, size: 32, offset: 160)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2376, file: !1203, line: 65, baseType: !2382, size: 32, offset: 32)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "lock", scope: !2149, file: !2374, line: 34, type: !2400, isLocal: true, isDefinition: true)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2401)
!2401 = !{!2402}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2400, file: !149, line: 52, baseType: !22, size: 32)
!2403 = !DIGlobalVariableExpression(var: !2404, expr: !DIExpression())
!2404 = distinct !DIGlobalVariable(name: "last_load", scope: !2149, file: !2374, line: 36, type: !108, isLocal: true, isDefinition: true)
!2405 = !DIGlobalVariableExpression(var: !2406, expr: !DIExpression())
!2406 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2149, file: !2374, line: 48, type: !108, isLocal: true, isDefinition: true)
!2407 = !DIGlobalVariableExpression(var: !2408, expr: !DIExpression())
!2408 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2149, file: !2374, line: 54, type: !108, isLocal: true, isDefinition: true)
!2409 = !DIGlobalVariableExpression(var: !2410, expr: !DIExpression())
!2410 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !2411, file: !2415, line: 69, type: !2416, isLocal: true, isDefinition: true, align: 32)
!2411 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2412, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2413, globals: !2414, splitDebugInlining: false, nameTableKind: None)
!2412 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2413 = !{!1198, !22}
!2414 = !{!2409}
!2415 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2417)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !2418)
!2418 = !{!2419, !2438}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2417, file: !1203, line: 60, baseType: !2420, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!103, !2423}
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2425)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1587, line: 378, size: 192, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2436, !2437}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2425, file: !1587, line: 380, baseType: !330, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2425, file: !1587, line: 382, baseType: !13, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2425, file: !1587, line: 384, baseType: !13, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2425, file: !1587, line: 386, baseType: !2431, size: 32, offset: 96)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1587, line: 351, size: 16, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2432, file: !1587, line: 359, baseType: !164, size: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2432, file: !1587, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2425, file: !1587, line: 388, baseType: !102, size: 32, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2425, file: !1587, line: 396, baseType: !1600, size: 32, offset: 160)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2417, file: !1203, line: 65, baseType: !2423, size: 32, offset: 32)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2441, file: !2444, line: 23, type: !1642, isLocal: false, isDefinition: true)
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, globals: !2443, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2443 = !{!2439}
!2444 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2447, file: !2451, line: 37, type: !2699, isLocal: false, isDefinition: true)
!2447 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2448, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2449, retainedTypes: !2458, globals: !2531, splitDebugInlining: false, nameTableKind: None)
!2448 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2449 = !{!2450, !30, !2152}
!2450 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2451, line: 63, baseType: !32, size: 32, elements: !2452)
!2451 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2452 = !{!2453, !2454, !2455, !2456, !2457}
!2453 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2454 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2455 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2456 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2457 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2458 = !{!153, !102, !103, !2459, !157, !108, !2489, !324, !164, !2514}
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2462, line: 51, size: 64, elements: !2463)
!2462 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2463 = !{!2464, !2484}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2461, file: !2462, line: 52, baseType: !2465, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2462, line: 38, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{!103, !2469, !765, !177}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2471)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1587, line: 378, size: 192, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2482, !2483}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2471, file: !1587, line: 380, baseType: !330, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2471, file: !1587, line: 382, baseType: !13, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2471, file: !1587, line: 384, baseType: !13, size: 32, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2471, file: !1587, line: 386, baseType: !2477, size: 32, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1587, line: 351, size: 16, elements: !2479)
!2479 = !{!2480, !2481}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2478, file: !1587, line: 359, baseType: !164, size: 8)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2478, file: !1587, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2471, file: !1587, line: 388, baseType: !102, size: 32, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2471, file: !1587, line: 396, baseType: !1600, size: 32, offset: 160)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2461, file: !2462, line: 53, baseType: !2485, size: 32, offset: 32)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2462, line: 47, baseType: !2486)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!103, !2469, !765, !177, !108}
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2491, file: !2295, line: 447, baseType: !1149, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2491, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2491, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2491, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2491, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2491, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2491, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2491, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2491, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2491, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2491, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2491, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2491, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2491, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2491, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2491, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2491, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2491, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2491, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2491, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2491, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2295, line: 426, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 411, size: 28704, elements: !2517)
!2517 = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2516, file: !2295, line: 413, baseType: !2307, size: 256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2516, file: !2295, line: 414, baseType: !2311, size: 768, offset: 256)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2516, file: !2295, line: 415, baseType: !2307, size: 256, offset: 1024)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2516, file: !2295, line: 416, baseType: !2311, size: 768, offset: 1280)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2516, file: !2295, line: 417, baseType: !2307, size: 256, offset: 2048)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2516, file: !2295, line: 418, baseType: !2311, size: 768, offset: 2304)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2516, file: !2295, line: 419, baseType: !2307, size: 256, offset: 3072)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2516, file: !2295, line: 420, baseType: !2311, size: 768, offset: 3328)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2516, file: !2295, line: 421, baseType: !2307, size: 256, offset: 4096)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2516, file: !2295, line: 422, baseType: !2322, size: 1792, offset: 4352)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2516, file: !2295, line: 423, baseType: !2326, size: 1920, offset: 6144)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2516, file: !2295, line: 424, baseType: !2331, size: 20608, offset: 8064)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2516, file: !2295, line: 425, baseType: !1078, size: 32, offset: 28672)
!2531 = !{!2445, !2532, !2651, !2659, !2661, !2664, !2669, !2671, !2676}
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(name: "_kernel", scope: !2447, file: !2451, line: 40, type: !2534, isLocal: false, isDefinition: true)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !128, line: 158, size: 288, elements: !2535)
!2535 = !{!2536, !2646}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2534, file: !128, line: 159, baseType: !2537, size: 192)
!2537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2538, size: 192, elements: !743)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !128, line: 100, size: 192, elements: !2539)
!2539 = !{!2540, !2541, !2542, !2639, !2640, !2641, !2642}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2538, file: !128, line: 102, baseType: !108, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2538, file: !128, line: 105, baseType: !157, size: 32, offset: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2538, file: !128, line: 108, baseType: !2543, size: 32, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !2545)
!2545 = !{!2546, !2604, !2616, !2617, !2618, !2619, !2634}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2544, file: !195, line: 247, baseType: !2547, size: 384)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !2548)
!2548 = !{!2549, !2573, !2580, !2581, !2582, !2591, !2592, !2593}
!2549 = !DIDerivedType(tag: DW_TAG_member, scope: !2547, file: !195, line: 60, baseType: !2550, size: 64)
!2550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2547, file: !195, line: 60, size: 64, elements: !2551)
!2551 = !{!2552, !2567}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2550, file: !195, line: 61, baseType: !2553, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2555)
!2555 = !{!2556, !2562}
!2556 = !DIDerivedType(tag: DW_TAG_member, scope: !2554, file: !133, line: 38, baseType: !2557, size: 32)
!2557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2554, file: !133, line: 38, size: 32, elements: !2558)
!2558 = !{!2559, !2561}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2557, file: !133, line: 39, baseType: !2560, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2557, file: !133, line: 40, baseType: !2560, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, scope: !2554, file: !133, line: 42, baseType: !2563, size: 32, offset: 32)
!2563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2554, file: !133, line: 42, size: 32, elements: !2564)
!2564 = !{!2565, !2566}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2563, file: !133, line: 43, baseType: !2560, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2563, file: !133, line: 44, baseType: !2560, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2550, file: !195, line: 62, baseType: !2568, size: 64)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !2569)
!2569 = !{!2570}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2568, file: !207, line: 50, baseType: !2571, size: 64)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2572, size: 64, elements: !212)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2547, file: !195, line: 68, baseType: !2574, size: 32, offset: 64)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !2576)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !2577)
!2577 = !{!2578}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2576, file: !128, line: 232, baseType: !2579, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2554)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2547, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2547, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!2582 = !DIDerivedType(tag: DW_TAG_member, scope: !2547, file: !195, line: 90, baseType: !2583, size: 16, offset: 112)
!2583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2547, file: !195, line: 90, size: 16, elements: !2584)
!2584 = !{!2585, !2590}
!2585 = !DIDerivedType(tag: DW_TAG_member, scope: !2583, file: !195, line: 91, baseType: !2586, size: 16)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2583, file: !195, line: 91, size: 16, elements: !2587)
!2587 = !{!2588, !2589}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2586, file: !195, line: 96, baseType: !225, size: 8)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2586, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2583, file: !195, line: 100, baseType: !177, size: 16)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2547, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2547, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2547, file: !195, line: 131, baseType: !2594, size: 192, offset: 192)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !2595)
!2595 = !{!2596, !2597, !2603}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2594, file: !128, line: 245, baseType: !2553, size: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2594, file: !128, line: 246, baseType: !2598, size: 32, offset: 64)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !2599)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!2600 = !DISubroutineType(types: !2601)
!2601 = !{null, !2602}
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2594, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2544, file: !195, line: 250, baseType: !2605, size: 288, offset: 384)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2605, file: !244, line: 26, baseType: !108, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2605, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2605, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2605, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2605, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2605, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2605, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2605, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2605, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2544, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2544, file: !195, line: 256, baseType: !2575, size: 64, offset: 704)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2544, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2544, file: !195, line: 325, baseType: !2620, size: 32, offset: 800)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 32)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !2622)
!2622 = !{!2623, !2629, !2630}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2621, file: !124, line: 5074, baseType: !2624, size: 96)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !2625)
!2625 = !{!2626, !2627, !2628}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2624, file: !264, line: 57, baseType: !267, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2624, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2624, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2621, file: !124, line: 5075, baseType: !2575, size: 64, offset: 96)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2621, file: !124, line: 5076, baseType: !2631, size: 32, offset: 160)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2632)
!2632 = !{!2633}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2631, file: !149, line: 52, baseType: !22, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2544, file: !195, line: 343, baseType: !2635, size: 64, offset: 832)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !2636)
!2636 = !{!2637, !2638}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2635, file: !244, line: 63, baseType: !108, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2635, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2538, file: !128, line: 111, baseType: !2543, size: 32, offset: 96)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2538, file: !128, line: 124, baseType: !103, size: 32, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2538, file: !128, line: 127, baseType: !164, size: 8, offset: 160)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2538, file: !128, line: 153, baseType: !2643, offset: 168)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2644, line: 33, elements: !2645)
!2644 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2645 = !{}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2534, file: !128, line: 170, baseType: !2647, size: 96, offset: 192)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !128, line: 83, size: 96, elements: !2648)
!2648 = !{!2649, !2650}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2647, file: !128, line: 86, baseType: !2543, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2647, file: !128, line: 90, baseType: !2579, size: 64, offset: 32)
!2651 = !DIGlobalVariableExpression(var: !2652, expr: !DIExpression())
!2652 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2447, file: !2451, line: 43, type: !2653, isLocal: false, isDefinition: true, align: 64)
!2653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2654, size: 8192, elements: !2657)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !309, line: 47, size: 8, elements: !2655)
!2655 = !{!2656}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2654, file: !309, line: 48, baseType: !158, size: 8)
!2657 = !{!2658}
!2658 = !DISubrange(count: 1024)
!2659 = !DIGlobalVariableExpression(var: !2660, expr: !DIExpression())
!2660 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2447, file: !2451, line: 44, type: !2544, isLocal: false, isDefinition: true)
!2661 = !DIGlobalVariableExpression(var: !2662, expr: !DIExpression())
!2662 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2447, file: !2451, line: 48, type: !2663, isLocal: false, isDefinition: true)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2544, size: 896, elements: !743)
!2664 = !DIGlobalVariableExpression(var: !2665, expr: !DIExpression())
!2665 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2447, file: !2451, line: 86, type: !2666, isLocal: false, isDefinition: true, align: 64)
!2666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2654, size: 16384, elements: !2667)
!2667 = !{!744, !2668}
!2668 = !DISubrange(count: 2048)
!2669 = !DIGlobalVariableExpression(var: !2670, expr: !DIExpression())
!2670 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2447, file: !2451, line: 217, type: !119, isLocal: false, isDefinition: true)
!2671 = !DIGlobalVariableExpression(var: !2672, expr: !DIExpression())
!2672 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2447, file: !2451, line: 50, type: !2673, isLocal: true, isDefinition: true, align: 64)
!2673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2654, size: 2560, elements: !2674)
!2674 = !{!744, !2675}
!2675 = !DISubrange(count: 320)
!2676 = !DIGlobalVariableExpression(var: !2677, expr: !DIExpression())
!2677 = distinct !DIGlobalVariable(name: "levels", scope: !2678, file: !2451, line: 232, type: !2698, isLocal: true, isDefinition: true)
!2678 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2451, file: !2451, line: 230, type: !2679, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !2681)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{null, !2450}
!2681 = !{!2682, !2683, !2693, !2697}
!2682 = !DILocalVariable(name: "level", arg: 1, scope: !2678, file: !2451, line: 230, type: !2450)
!2683 = !DILocalVariable(name: "entry", scope: !2678, file: !2451, line: 244, type: !2684)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !2687)
!2687 = !{!2688, !2692}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2686, file: !1203, line: 60, baseType: !2689, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 32)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!103, !2469}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2686, file: !1203, line: 65, baseType: !2469, size: 32, offset: 32)
!2693 = !DILocalVariable(name: "dev", scope: !2694, file: !2451, line: 247, type: !2469)
!2694 = distinct !DILexicalBlock(scope: !2695, file: !2451, line: 246, column: 64)
!2695 = distinct !DILexicalBlock(scope: !2696, file: !2451, line: 246, column: 2)
!2696 = distinct !DILexicalBlock(scope: !2678, file: !2451, line: 246, column: 2)
!2697 = !DILocalVariable(name: "rc", scope: !2694, file: !2451, line: 248, type: !103)
!2698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2684, size: 192, elements: !2107)
!2699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2700)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !770, line: 16, size: 64, elements: !2701)
!2701 = !{!2702, !2703}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2700, file: !770, line: 17, baseType: !330, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2700, file: !770, line: 18, baseType: !164, size: 8, offset: 32)
!2704 = !DIGlobalVariableExpression(var: !2705, expr: !DIExpression())
!2705 = distinct !DIGlobalVariable(name: "__init_init_mem_slab_module", scope: !2706, file: !2726, line: 73, type: !2727, isLocal: true, isDefinition: true, align: 32)
!2706 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2707, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2708, globals: !2725, splitDebugInlining: false, nameTableKind: None)
!2707 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mem_slab.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2708 = !{!102, !764, !2709, !103, !22, !2710}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2713)
!2713 = !{!2714, !2720}
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !133, line: 38, baseType: !2715, size: 32)
!2715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !133, line: 38, size: 32, elements: !2716)
!2716 = !{!2717, !2719}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2715, file: !133, line: 39, baseType: !2718, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2715, file: !133, line: 40, baseType: !2718, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !133, line: 42, baseType: !2721, size: 32, offset: 32)
!2721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !133, line: 42, size: 32, elements: !2722)
!2722 = !{!2723, !2724}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2721, file: !133, line: 43, baseType: !2718, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2721, file: !133, line: 44, baseType: !2718, size: 32)
!2725 = !{!2704}
!2726 = !DIFile(filename: "zephyr/kernel/mem_slab.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !2729)
!2729 = !{!2730, !2731}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2728, file: !1203, line: 60, baseType: !1206, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2728, file: !1203, line: 65, baseType: !1209, size: 32, offset: 32)
!2732 = !DIGlobalVariableExpression(var: !2733, expr: !DIExpression())
!2733 = distinct !DIGlobalVariable(name: "states_str", scope: !2734, file: !2735, line: 276, type: !2853, isLocal: true, isDefinition: true)
!2734 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2735, file: !2735, line: 271, type: !2736, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !2844)
!2735 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!330, !2738, !157, !153}
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !2739)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 32)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !2741)
!2741 = !{!2742, !2800, !2812, !2813, !2814, !2815, !2830}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2740, file: !195, line: 247, baseType: !2743, size: 384)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !2744)
!2744 = !{!2745, !2769, !2776, !2777, !2778, !2787, !2788, !2789}
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !195, line: 60, baseType: !2746, size: 64)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !195, line: 60, size: 64, elements: !2747)
!2747 = !{!2748, !2763}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2746, file: !195, line: 61, baseType: !2749, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2751)
!2751 = !{!2752, !2758}
!2752 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !133, line: 38, baseType: !2753, size: 32)
!2753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !133, line: 38, size: 32, elements: !2754)
!2754 = !{!2755, !2757}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2753, file: !133, line: 39, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2753, file: !133, line: 40, baseType: !2756, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2750, file: !133, line: 42, baseType: !2759, size: 32, offset: 32)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2750, file: !133, line: 42, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2759, file: !133, line: 43, baseType: !2756, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2759, file: !133, line: 44, baseType: !2756, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2746, file: !195, line: 62, baseType: !2764, size: 64)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !2765)
!2765 = !{!2766}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2764, file: !207, line: 50, baseType: !2767, size: 64)
!2767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2768, size: 64, elements: !212)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2743, file: !195, line: 68, baseType: !2770, size: 32, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !2772)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !2773)
!2773 = !{!2774}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2772, file: !128, line: 232, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2750)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2743, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2743, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !195, line: 90, baseType: !2779, size: 16, offset: 112)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !195, line: 90, size: 16, elements: !2780)
!2780 = !{!2781, !2786}
!2781 = !DIDerivedType(tag: DW_TAG_member, scope: !2779, file: !195, line: 91, baseType: !2782, size: 16)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2779, file: !195, line: 91, size: 16, elements: !2783)
!2783 = !{!2784, !2785}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2782, file: !195, line: 96, baseType: !225, size: 8)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2782, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2779, file: !195, line: 100, baseType: !177, size: 16)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2743, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2743, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2743, file: !195, line: 131, baseType: !2790, size: 192, offset: 192)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !2791)
!2791 = !{!2792, !2793, !2799}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2790, file: !128, line: 245, baseType: !2749, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2790, file: !128, line: 246, baseType: !2794, size: 32, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !2795)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{null, !2798}
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2790, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2740, file: !195, line: 250, baseType: !2801, size: 288, offset: 384)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !2802)
!2802 = !{!2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2801, file: !244, line: 26, baseType: !108, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2801, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2801, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2801, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2801, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2801, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2801, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2801, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2801, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2740, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2740, file: !195, line: 256, baseType: !2771, size: 64, offset: 704)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2740, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2740, file: !195, line: 325, baseType: !2816, size: 32, offset: 800)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 32)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !2818)
!2818 = !{!2819, !2825, !2826}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2817, file: !124, line: 5074, baseType: !2820, size: 96)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !2821)
!2821 = !{!2822, !2823, !2824}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2820, file: !264, line: 57, baseType: !267, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2820, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2820, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2817, file: !124, line: 5075, baseType: !2771, size: 64, offset: 96)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2817, file: !124, line: 5076, baseType: !2827, size: 32, offset: 160)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2828)
!2828 = !{!2829}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2827, file: !149, line: 52, baseType: !22, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2740, file: !195, line: 343, baseType: !2831, size: 64, offset: 832)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2831, file: !244, line: 63, baseType: !108, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2831, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!2835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2836, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2837, globals: !2839, splitDebugInlining: false, nameTableKind: None)
!2836 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2837 = !{!102, !330, !104, !164, !22, !103, !2838, !24, !153, !157, !108, !109}
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 32)
!2839 = !{!2732, !2840}
!2840 = !DIGlobalVariableExpression(var: !2841, expr: !DIExpression())
!2841 = distinct !DIGlobalVariable(name: "states_sz", scope: !2734, file: !2735, line: 279, type: !2842, isLocal: true, isDefinition: true)
!2842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2843, size: 256, elements: !2308)
!2843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!2844 = !{!2845, !2846, !2847, !2848, !2849, !2850, !2851}
!2845 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2734, file: !2735, line: 271, type: !2738)
!2846 = !DILocalVariable(name: "buf", arg: 2, scope: !2734, file: !2735, line: 271, type: !157)
!2847 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2734, file: !2735, line: 271, type: !153)
!2848 = !DILocalVariable(name: "off", scope: !2734, file: !2735, line: 273, type: !153)
!2849 = !DILocalVariable(name: "bit", scope: !2734, file: !2735, line: 274, type: !164)
!2850 = !DILocalVariable(name: "thread_state", scope: !2734, file: !2735, line: 275, type: !164)
!2851 = !DILocalVariable(name: "index", scope: !2852, file: !2735, line: 293, type: !164)
!2852 = distinct !DILexicalBlock(scope: !2734, file: !2735, line: 293, column: 2)
!2853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !330, size: 256, elements: !2308)
!2854 = !DIGlobalVariableExpression(var: !2855, expr: !DIExpression())
!2855 = distinct !DIGlobalVariable(name: "lock", scope: !2856, file: !2957, line: 47, type: !2948, isLocal: true, isDefinition: true)
!2856 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2857, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2858, globals: !2956, splitDebugInlining: false, nameTableKind: None)
!2857 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2858 = !{!119, !102, !103, !2859, !2874}
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2861)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2862)
!2862 = !{!2863, !2869}
!2863 = !DIDerivedType(tag: DW_TAG_member, scope: !2861, file: !133, line: 38, baseType: !2864, size: 32)
!2864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2861, file: !133, line: 38, size: 32, elements: !2865)
!2865 = !{!2866, !2868}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2864, file: !133, line: 39, baseType: !2867, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2864, file: !133, line: 40, baseType: !2867, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, scope: !2861, file: !133, line: 42, baseType: !2870, size: 32, offset: 32)
!2870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2861, file: !133, line: 42, size: 32, elements: !2871)
!2871 = !{!2872, !2873}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2870, file: !133, line: 43, baseType: !2867, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2870, file: !133, line: 44, baseType: !2867, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 32)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !2876)
!2876 = !{!2877, !2921, !2933, !2934, !2935, !2936, !2951}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2875, file: !195, line: 247, baseType: !2878, size: 384)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !2879)
!2879 = !{!2880, !2890, !2897, !2898, !2899, !2908, !2909, !2910}
!2880 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !195, line: 60, baseType: !2881, size: 64)
!2881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !195, line: 60, size: 64, elements: !2882)
!2882 = !{!2883, !2884}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2881, file: !195, line: 61, baseType: !2860, size: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2881, file: !195, line: 62, baseType: !2885, size: 64)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !2886)
!2886 = !{!2887}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2885, file: !207, line: 50, baseType: !2888, size: 64)
!2888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2889, size: 64, elements: !212)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2878, file: !195, line: 68, baseType: !2891, size: 32, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !2893)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !2894)
!2894 = !{!2895}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2893, file: !128, line: 232, baseType: !2896, size: 64)
!2896 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2861)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2878, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2878, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !195, line: 90, baseType: !2900, size: 16, offset: 112)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !195, line: 90, size: 16, elements: !2901)
!2901 = !{!2902, !2907}
!2902 = !DIDerivedType(tag: DW_TAG_member, scope: !2900, file: !195, line: 91, baseType: !2903, size: 16)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2900, file: !195, line: 91, size: 16, elements: !2904)
!2904 = !{!2905, !2906}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2903, file: !195, line: 96, baseType: !225, size: 8)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2903, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2900, file: !195, line: 100, baseType: !177, size: 16)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2878, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2878, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2878, file: !195, line: 131, baseType: !2911, size: 192, offset: 192)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !2912)
!2912 = !{!2913, !2914, !2920}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2911, file: !128, line: 245, baseType: !2860, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2911, file: !128, line: 246, baseType: !2915, size: 32, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !2916)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{null, !2919}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2911, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2875, file: !195, line: 250, baseType: !2922, size: 288, offset: 384)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !2923)
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2922, file: !244, line: 26, baseType: !108, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2922, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2922, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2922, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2922, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2922, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2922, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2922, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2922, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2875, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2875, file: !195, line: 256, baseType: !2892, size: 64, offset: 704)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2875, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2875, file: !195, line: 325, baseType: !2937, size: 32, offset: 800)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 32)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !2939)
!2939 = !{!2940, !2946, !2947}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2938, file: !124, line: 5074, baseType: !2941, size: 96)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !2942)
!2942 = !{!2943, !2944, !2945}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2941, file: !264, line: 57, baseType: !267, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2941, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2941, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2938, file: !124, line: 5075, baseType: !2892, size: 64, offset: 96)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2938, file: !124, line: 5076, baseType: !2948, size: 32, offset: 160)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !2949)
!2949 = !{!2950}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2948, file: !149, line: 52, baseType: !22, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2875, file: !195, line: 343, baseType: !2952, size: 64, offset: 832)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !2953)
!2953 = !{!2954, !2955}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2952, file: !244, line: 63, baseType: !108, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2952, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!2956 = !{!2854}
!2957 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2958 = !DIGlobalVariableExpression(var: !2959, expr: !DIExpression())
!2959 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2960, file: !3064, line: 56, type: !3051, isLocal: false, isDefinition: true)
!2960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2962, globals: !3061, splitDebugInlining: false, nameTableKind: None)
!2961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!2962 = !{!2963, !157, !102, !3059, !765, !104, !324, !103, !108, !109, !3060}
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 32)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !2965)
!2965 = !{!2966, !3024, !3036, !3037, !3038, !3039, !3054}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2964, file: !195, line: 247, baseType: !2967, size: 384)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !2968)
!2968 = !{!2969, !2993, !3000, !3001, !3002, !3011, !3012, !3013}
!2969 = !DIDerivedType(tag: DW_TAG_member, scope: !2967, file: !195, line: 60, baseType: !2970, size: 64)
!2970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2967, file: !195, line: 60, size: 64, elements: !2971)
!2971 = !{!2972, !2987}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2970, file: !195, line: 61, baseType: !2973, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !2975)
!2975 = !{!2976, !2982}
!2976 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !133, line: 38, baseType: !2977, size: 32)
!2977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !133, line: 38, size: 32, elements: !2978)
!2978 = !{!2979, !2981}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2977, file: !133, line: 39, baseType: !2980, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2977, file: !133, line: 40, baseType: !2980, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !133, line: 42, baseType: !2983, size: 32, offset: 32)
!2983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2974, file: !133, line: 42, size: 32, elements: !2984)
!2984 = !{!2985, !2986}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2983, file: !133, line: 43, baseType: !2980, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2983, file: !133, line: 44, baseType: !2980, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2970, file: !195, line: 62, baseType: !2988, size: 64)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !2989)
!2989 = !{!2990}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2988, file: !207, line: 50, baseType: !2991, size: 64)
!2991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2992, size: 64, elements: !212)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2967, file: !195, line: 68, baseType: !2994, size: 32, offset: 64)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !2996)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !2997)
!2997 = !{!2998}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2996, file: !128, line: 232, baseType: !2999, size: 64)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2974)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2967, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2967, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3002 = !DIDerivedType(tag: DW_TAG_member, scope: !2967, file: !195, line: 90, baseType: !3003, size: 16, offset: 112)
!3003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2967, file: !195, line: 90, size: 16, elements: !3004)
!3004 = !{!3005, !3010}
!3005 = !DIDerivedType(tag: DW_TAG_member, scope: !3003, file: !195, line: 91, baseType: !3006, size: 16)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3003, file: !195, line: 91, size: 16, elements: !3007)
!3007 = !{!3008, !3009}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3006, file: !195, line: 96, baseType: !225, size: 8)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3006, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3003, file: !195, line: 100, baseType: !177, size: 16)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2967, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2967, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2967, file: !195, line: 131, baseType: !3014, size: 192, offset: 192)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3015)
!3015 = !{!3016, !3017, !3023}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3014, file: !128, line: 245, baseType: !2973, size: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3014, file: !128, line: 246, baseType: !3018, size: 32, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3019)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 32)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{null, !3022}
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3014, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2964, file: !195, line: 250, baseType: !3025, size: 288, offset: 384)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3025, file: !244, line: 26, baseType: !108, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3025, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3025, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3025, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3025, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3025, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3025, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3025, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3025, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2964, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2964, file: !195, line: 256, baseType: !2995, size: 64, offset: 704)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2964, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2964, file: !195, line: 325, baseType: !3040, size: 32, offset: 800)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3042)
!3042 = !{!3043, !3049, !3050}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3041, file: !124, line: 5074, baseType: !3044, size: 96)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !3045)
!3045 = !{!3046, !3047, !3048}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3044, file: !264, line: 57, baseType: !267, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3044, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3044, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3041, file: !124, line: 5075, baseType: !2995, size: 64, offset: 96)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3041, file: !124, line: 5076, baseType: !3051, size: 32, offset: 160)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3052)
!3052 = !{!3053}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3051, file: !149, line: 52, baseType: !22, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2964, file: !195, line: 343, baseType: !3055, size: 64, offset: 832)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3055, file: !244, line: 63, baseType: !108, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3055, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!3061 = !{!2958, !3062, !3065, !3067}
!3062 = !DIGlobalVariableExpression(var: !3063, expr: !DIExpression())
!3063 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2960, file: !3064, line: 404, type: !103, isLocal: true, isDefinition: true)
!3064 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3065 = !DIGlobalVariableExpression(var: !3066, expr: !DIExpression())
!3066 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2960, file: !3064, line: 405, type: !103, isLocal: true, isDefinition: true)
!3067 = !DIGlobalVariableExpression(var: !3068, expr: !DIExpression())
!3068 = distinct !DIGlobalVariable(name: "pending_current", scope: !2960, file: !3064, line: 425, type: !2963, isLocal: true, isDefinition: true)
!3069 = !DIGlobalVariableExpression(var: !3070, expr: !DIExpression())
!3070 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3071, file: !3101, line: 19, type: !3107, isLocal: true, isDefinition: true)
!3071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3073, globals: !3098, splitDebugInlining: false, nameTableKind: None)
!3072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3073 = !{!104, !102, !324, !108, !109, !103, !3074, !157, !106}
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 32)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3076)
!3076 = !{!3077, !3092, !3097}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3075, file: !128, line: 245, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3080)
!3080 = !{!3081, !3087}
!3081 = !DIDerivedType(tag: DW_TAG_member, scope: !3079, file: !133, line: 38, baseType: !3082, size: 32)
!3082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3079, file: !133, line: 38, size: 32, elements: !3083)
!3083 = !{!3084, !3086}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3082, file: !133, line: 39, baseType: !3085, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3082, file: !133, line: 40, baseType: !3085, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, scope: !3079, file: !133, line: 42, baseType: !3088, size: 32, offset: 32)
!3088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3079, file: !133, line: 42, size: 32, elements: !3089)
!3089 = !{!3090, !3091}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3088, file: !133, line: 43, baseType: !3085, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3088, file: !133, line: 44, baseType: !3085, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3075, file: !128, line: 246, baseType: !3093, size: 32, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3094)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{null, !3074}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3075, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3098 = !{!3099, !3069, !3102, !3104}
!3099 = !DIGlobalVariableExpression(var: !3100, expr: !DIExpression())
!3100 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3071, file: !3101, line: 15, type: !109, isLocal: true, isDefinition: true)
!3101 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3102 = !DIGlobalVariableExpression(var: !3103, expr: !DIExpression())
!3103 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3071, file: !3101, line: 25, type: !103, isLocal: true, isDefinition: true)
!3104 = !DIGlobalVariableExpression(var: !3105, expr: !DIExpression())
!3105 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3071, file: !3101, line: 17, type: !3106, isLocal: true, isDefinition: true)
!3106 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3079)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3108)
!3108 = !{!3109}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3107, file: !149, line: 52, baseType: !22, size: 32)
!3110 = !DIGlobalVariableExpression(var: !3111, expr: !DIExpression())
!3111 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !3112, file: !3131, line: 55, type: !3132, isLocal: true, isDefinition: true, align: 32)
!3112 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3113, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3114, globals: !3130, splitDebugInlining: false, nameTableKind: None)
!3113 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3114 = !{!102, !104, !103, !3115}
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 32)
!3116 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3117)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3118)
!3118 = !{!3119, !3125}
!3119 = !DIDerivedType(tag: DW_TAG_member, scope: !3117, file: !133, line: 38, baseType: !3120, size: 32)
!3120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3117, file: !133, line: 38, size: 32, elements: !3121)
!3121 = !{!3122, !3124}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3120, file: !133, line: 39, baseType: !3123, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3120, file: !133, line: 40, baseType: !3123, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, scope: !3117, file: !133, line: 42, baseType: !3126, size: 32, offset: 32)
!3126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3117, file: !133, line: 42, size: 32, elements: !3127)
!3127 = !{!3128, !3129}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3126, file: !133, line: 43, baseType: !3123, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3126, file: !133, line: 44, baseType: !3123, size: 32)
!3130 = !{!3110}
!3131 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3133)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1203, line: 51, size: 64, elements: !3134)
!3134 = !{!3135, !3136}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3133, file: !1203, line: 60, baseType: !1206, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3133, file: !1203, line: 65, baseType: !1209, size: 32, offset: 32)
!3137 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3138, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3138 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3139 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3140, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3140 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3142, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3143, retainedTypes: !3151, splitDebugInlining: false, nameTableKind: None)
!3142 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3143 = !{!30, !3144}
!3144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !3145, line: 54, baseType: !32, size: 32, elements: !3146)
!3145 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3146 = !{!3147, !3148, !3149, !3150}
!3147 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!3148 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!3149 = !DIEnumerator(name: "FREE_PREV", value: 2)
!3150 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!3151 = !{!102, !153, !765, !24, !3152, !22, !3158, !103, !2102, !3173}
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !3145, line: 58, baseType: !3154)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3145, line: 58, size: 64, elements: !3155)
!3155 = !{!3156}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3154, file: !3145, line: 58, baseType: !3157, size: 64)
!3157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 64, elements: !2308)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 32)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !3145, line: 68, size: 128, elements: !3160)
!3160 = !{!3161, !3164, !3165, !3166}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3159, file: !3145, line: 69, baseType: !3162, size: 64)
!3162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3163, size: 64, elements: !212)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !3145, line: 61, baseType: !108)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3159, file: !3145, line: 70, baseType: !3163, size: 32, offset: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3159, file: !3145, line: 71, baseType: !108, size: 32, offset: 96)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3159, file: !3145, line: 77, baseType: !3167, offset: 128)
!3167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3168, elements: !3171)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !3145, line: 64, size: 32, elements: !3169)
!3169 = !{!3170}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3168, file: !3145, line: 65, baseType: !3163, size: 32)
!3171 = !{!3172}
!3172 = !DISubrange(count: 0)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!3174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3176, retainedTypes: !3196, splitDebugInlining: false, nameTableKind: None)
!3175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3176 = !{!3177, !3185}
!3177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3178, line: 69, baseType: !32, size: 32, elements: !3179)
!3178 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3179 = !{!3180, !3181, !3182, !3183, !3184}
!3180 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3181 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3182 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3183 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3184 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3178, line: 56, baseType: !32, size: 32, elements: !3186)
!3186 = !{!3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195}
!3187 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3188 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3189 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3190 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3191 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3192 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3193 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3194 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3195 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3196 = !{!103, !3177, !3185, !3197, !226, !1604, !3199, !3200, !165, !178, !330, !153, !102, !22, !32, !760, !3202, !3203, !762, !761, !107, !763, !3198, !3204, !3205, !3206, !3207}
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3178, line: 31, baseType: !3198)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!3199 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !154, line: 329, baseType: !32)
!3200 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3178, line: 32, baseType: !3201)
!3201 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !110)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !154, line: 145, baseType: !103)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3209, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3209 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3214, splitDebugInlining: false, nameTableKind: None)
!3213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3214 = !{!330, !165, !103, !32}
!3215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3216, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3217, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3217 = !{!3218, !30}
!3218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3219, line: 27, baseType: !32, size: 32, elements: !3220)
!3219 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3220 = !{!3221, !3222, !3223, !3224, !3225}
!3221 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3222 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3223 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3224 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3225 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3227, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3228, retainedTypes: !3229, splitDebugInlining: false, nameTableKind: None)
!3227 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3228 = !{!2152, !3218, !30}
!3229 = !{!3230, !3231, !102, !103, !324, !108, !164, !3248}
!3230 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !1074, line: 249, baseType: !2152)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 32)
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2295, line: 426, baseType: !3233)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 411, size: 28704, elements: !3234)
!3234 = !{!3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3233, file: !2295, line: 413, baseType: !2307, size: 256)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3233, file: !2295, line: 414, baseType: !2311, size: 768, offset: 256)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3233, file: !2295, line: 415, baseType: !2307, size: 256, offset: 1024)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3233, file: !2295, line: 416, baseType: !2311, size: 768, offset: 1280)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3233, file: !2295, line: 417, baseType: !2307, size: 256, offset: 2048)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3233, file: !2295, line: 418, baseType: !2311, size: 768, offset: 2304)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3233, file: !2295, line: 419, baseType: !2307, size: 256, offset: 3072)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3233, file: !2295, line: 420, baseType: !2311, size: 768, offset: 3328)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3233, file: !2295, line: 421, baseType: !2307, size: 256, offset: 4096)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3233, file: !2295, line: 422, baseType: !2322, size: 1792, offset: 4352)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3233, file: !2295, line: 423, baseType: !2326, size: 1920, offset: 6144)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3233, file: !2295, line: 424, baseType: !2331, size: 20608, offset: 8064)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3233, file: !2295, line: 425, baseType: !1078, size: 32, offset: 28672)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !3250)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !3251)
!3251 = !{!3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3250, file: !2295, line: 447, baseType: !1149, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3250, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3250, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3250, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3250, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3250, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3250, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3250, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3250, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3250, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3250, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3250, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3250, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3250, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3250, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3250, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3250, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3250, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3250, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3250, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3250, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!3273 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3274, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3274 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3275 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3276, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3277, splitDebugInlining: false, nameTableKind: None)
!3276 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3277 = !{!102, !103, !22, !3278}
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !3280)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !3281)
!3281 = !{!3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3280, file: !2295, line: 447, baseType: !1149, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3280, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3280, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3280, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3280, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3280, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3280, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3280, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3280, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3280, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3280, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3280, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3280, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3280, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3280, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3280, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3280, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3280, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3280, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3280, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3280, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!3303 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3304, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3305, splitDebugInlining: false, nameTableKind: None)
!3304 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3305 = !{!3306, !102, !103}
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !3308)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !3309)
!3309 = !{!3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3308, file: !2295, line: 447, baseType: !1149, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3308, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3308, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3308, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3308, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3308, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3308, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3308, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3308, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3308, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3308, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3308, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3308, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3308, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3308, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3308, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3308, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3308, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3308, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3308, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3308, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!3331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3333, splitDebugInlining: false, nameTableKind: None)
!3332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3333 = !{!3334, !108, !102, !103}
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 32)
!3335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3336, line: 98, size: 256, elements: !3337)
!3336 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3337 = !{!3338, !3343, !3348, !3353, !3358, !3363, !3368, !3373}
!3338 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !3336, line: 99, baseType: !3339, size: 32)
!3339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !3336, line: 99, size: 32, elements: !3340)
!3340 = !{!3341, !3342}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3339, file: !3336, line: 99, baseType: !108, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3339, file: !3336, line: 99, baseType: !108, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !3336, line: 100, baseType: !3344, size: 32, offset: 32)
!3344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !3336, line: 100, size: 32, elements: !3345)
!3345 = !{!3346, !3347}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3344, file: !3336, line: 100, baseType: !108, size: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3344, file: !3336, line: 100, baseType: !108, size: 32)
!3348 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !3336, line: 101, baseType: !3349, size: 32, offset: 64)
!3349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !3336, line: 101, size: 32, elements: !3350)
!3350 = !{!3351, !3352}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3349, file: !3336, line: 101, baseType: !108, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3349, file: !3336, line: 101, baseType: !108, size: 32)
!3353 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !3336, line: 102, baseType: !3354, size: 32, offset: 96)
!3354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !3336, line: 102, size: 32, elements: !3355)
!3355 = !{!3356, !3357}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3354, file: !3336, line: 102, baseType: !108, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3354, file: !3336, line: 102, baseType: !108, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !3336, line: 103, baseType: !3359, size: 32, offset: 128)
!3359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !3336, line: 103, size: 32, elements: !3360)
!3360 = !{!3361, !3362}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3359, file: !3336, line: 103, baseType: !108, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3359, file: !3336, line: 103, baseType: !108, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !3336, line: 104, baseType: !3364, size: 32, offset: 160)
!3364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !3336, line: 104, size: 32, elements: !3365)
!3365 = !{!3366, !3367}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3364, file: !3336, line: 104, baseType: !108, size: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3364, file: !3336, line: 104, baseType: !108, size: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !3336, line: 105, baseType: !3369, size: 32, offset: 192)
!3369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !3336, line: 105, size: 32, elements: !3370)
!3370 = !{!3371, !3372}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3369, file: !3336, line: 105, baseType: !108, size: 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3369, file: !3336, line: 105, baseType: !108, size: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3335, file: !3336, line: 106, baseType: !108, size: 32, offset: 224)
!3374 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3375, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3217, retainedTypes: !3376, splitDebugInlining: false, nameTableKind: None)
!3375 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3376 = !{!3377, !102, !103, !3402, !3173, !108}
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !3379)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !3380)
!3380 = !{!3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3379, file: !2295, line: 447, baseType: !1149, size: 32)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3379, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3379, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3379, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3379, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3379, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3379, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3379, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3379, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3379, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3379, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3379, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3379, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3379, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3379, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3379, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3379, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3379, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3379, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3379, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3379, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 32)
!3403 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3336, line: 141, baseType: !3404)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3336, line: 97, size: 256, elements: !3405)
!3405 = !{!3406}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3404, file: !3336, line: 107, baseType: !3407, size: 256)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3336, line: 98, size: 256, elements: !3408)
!3408 = !{!3409, !3414, !3419, !3424, !3429, !3434, !3439, !3444}
!3409 = !DIDerivedType(tag: DW_TAG_member, scope: !3407, file: !3336, line: 99, baseType: !3410, size: 32)
!3410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3407, file: !3336, line: 99, size: 32, elements: !3411)
!3411 = !{!3412, !3413}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3410, file: !3336, line: 99, baseType: !108, size: 32)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3410, file: !3336, line: 99, baseType: !108, size: 32)
!3414 = !DIDerivedType(tag: DW_TAG_member, scope: !3407, file: !3336, line: 100, baseType: !3415, size: 32, offset: 32)
!3415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3407, file: !3336, line: 100, size: 32, elements: !3416)
!3416 = !{!3417, !3418}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3415, file: !3336, line: 100, baseType: !108, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3415, file: !3336, line: 100, baseType: !108, size: 32)
!3419 = !DIDerivedType(tag: DW_TAG_member, scope: !3407, file: !3336, line: 101, baseType: !3420, size: 32, offset: 64)
!3420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3407, file: !3336, line: 101, size: 32, elements: !3421)
!3421 = !{!3422, !3423}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3420, file: !3336, line: 101, baseType: !108, size: 32)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3420, file: !3336, line: 101, baseType: !108, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, scope: !3407, file: !3336, line: 102, baseType: !3425, size: 32, offset: 96)
!3425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3407, file: !3336, line: 102, size: 32, elements: !3426)
!3426 = !{!3427, !3428}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3425, file: !3336, line: 102, baseType: !108, size: 32)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3425, file: !3336, line: 102, baseType: !108, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, scope: !3407, file: !3336, line: 103, baseType: !3430, size: 32, offset: 128)
!3430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3407, file: !3336, line: 103, size: 32, elements: !3431)
!3431 = !{!3432, !3433}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3430, file: !3336, line: 103, baseType: !108, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3430, file: !3336, line: 103, baseType: !108, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, scope: !3407, file: !3336, line: 104, baseType: !3435, size: 32, offset: 160)
!3435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3407, file: !3336, line: 104, size: 32, elements: !3436)
!3436 = !{!3437, !3438}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3435, file: !3336, line: 104, baseType: !108, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3435, file: !3336, line: 104, baseType: !108, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, scope: !3407, file: !3336, line: 105, baseType: !3440, size: 32, offset: 192)
!3440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3407, file: !3336, line: 105, size: 32, elements: !3441)
!3441 = !{!3442, !3443}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3440, file: !3336, line: 105, baseType: !108, size: 32)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3440, file: !3336, line: 105, baseType: !108, size: 32)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3407, file: !3336, line: 106, baseType: !108, size: 32, offset: 224)
!3445 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3446, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2151, retainedTypes: !3447, splitDebugInlining: false, nameTableKind: None)
!3446 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3447 = !{!3230, !324, !164, !108, !3448, !3465}
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2295, line: 426, baseType: !3450)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 411, size: 28704, elements: !3451)
!3451 = !{!3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3450, file: !2295, line: 413, baseType: !2307, size: 256)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3450, file: !2295, line: 414, baseType: !2311, size: 768, offset: 256)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3450, file: !2295, line: 415, baseType: !2307, size: 256, offset: 1024)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3450, file: !2295, line: 416, baseType: !2311, size: 768, offset: 1280)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3450, file: !2295, line: 417, baseType: !2307, size: 256, offset: 2048)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3450, file: !2295, line: 418, baseType: !2311, size: 768, offset: 2304)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3450, file: !2295, line: 419, baseType: !2307, size: 256, offset: 3072)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3450, file: !2295, line: 420, baseType: !2311, size: 768, offset: 3328)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3450, file: !2295, line: 421, baseType: !2307, size: 256, offset: 4096)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3450, file: !2295, line: 422, baseType: !2322, size: 1792, offset: 4352)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3450, file: !2295, line: 423, baseType: !2326, size: 1920, offset: 6144)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3450, file: !2295, line: 424, baseType: !2331, size: 20608, offset: 8064)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3450, file: !2295, line: 425, baseType: !1078, size: 32, offset: 28672)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 32)
!3466 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !3467)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !3468)
!3468 = !{!3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3467, file: !2295, line: 447, baseType: !1149, size: 32)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3467, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3467, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3467, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3467, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3467, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3467, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3467, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3467, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3467, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3467, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3467, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3467, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3467, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3467, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3467, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3467, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3467, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3467, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3467, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3467, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!3490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3492, splitDebugInlining: false, nameTableKind: None)
!3491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3492 = !{!3493, !102, !103}
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 32)
!3494 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2295, line: 468, baseType: !3495)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2295, line: 445, size: 1120, elements: !3496)
!3496 = !{!3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3495, file: !2295, line: 447, baseType: !1149, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3495, file: !2295, line: 448, baseType: !1078, size: 32, offset: 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3495, file: !2295, line: 449, baseType: !1078, size: 32, offset: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3495, file: !2295, line: 450, baseType: !1078, size: 32, offset: 96)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3495, file: !2295, line: 451, baseType: !1078, size: 32, offset: 128)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3495, file: !2295, line: 452, baseType: !1078, size: 32, offset: 160)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3495, file: !2295, line: 453, baseType: !2346, size: 96, offset: 192)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3495, file: !2295, line: 454, baseType: !1078, size: 32, offset: 288)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3495, file: !2295, line: 455, baseType: !1078, size: 32, offset: 320)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3495, file: !2295, line: 456, baseType: !1078, size: 32, offset: 352)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3495, file: !2295, line: 457, baseType: !1078, size: 32, offset: 384)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3495, file: !2295, line: 458, baseType: !1078, size: 32, offset: 416)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3495, file: !2295, line: 459, baseType: !1078, size: 32, offset: 448)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3495, file: !2295, line: 460, baseType: !1078, size: 32, offset: 480)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3495, file: !2295, line: 461, baseType: !2357, size: 64, offset: 512)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3495, file: !2295, line: 462, baseType: !1149, size: 32, offset: 576)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3495, file: !2295, line: 463, baseType: !1149, size: 32, offset: 608)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3495, file: !2295, line: 464, baseType: !2361, size: 128, offset: 640)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3495, file: !2295, line: 465, baseType: !2365, size: 160, offset: 768)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3495, file: !2295, line: 466, baseType: !2369, size: 160, offset: 928)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3495, file: !2295, line: 467, baseType: !1078, size: 32, offset: 1088)
!3518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3519, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3520, splitDebugInlining: false, nameTableKind: None)
!3519 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3520 = !{!158, !157, !153, !1605, !3521, !165, !102}
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 32)
!3522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!3523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3527, splitDebugInlining: false, nameTableKind: None)
!3526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3527 = !{!1198, !108}
!3528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3530, retainedTypes: !3540, splitDebugInlining: false, nameTableKind: None)
!3529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3530 = !{!3531}
!3531 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !3532, line: 62, baseType: !32, size: 32, elements: !3533)
!3532 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3533 = !{!3534, !3535, !3536, !3537, !3538, !3539}
!3534 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!3535 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!3536 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!3537 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!3538 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!3539 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!3540 = !{!3541, !3604, !108, !119, !1198}
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !1074, line: 8619, baseType: !3543)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 8563, size: 3072, elements: !3544)
!3544 = !{!3545, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3543, file: !1074, line: 8564, baseType: !3546, size: 768)
!3546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 768, elements: !3547)
!3547 = !{!3548}
!3548 = !DISubrange(count: 96)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3543, file: !1074, line: 8565, baseType: !1078, size: 32, offset: 768)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3543, file: !1074, line: 8566, baseType: !1078, size: 32, offset: 800)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3543, file: !1074, line: 8567, baseType: !1078, size: 32, offset: 832)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3543, file: !1074, line: 8568, baseType: !1078, size: 32, offset: 864)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3543, file: !1074, line: 8569, baseType: !1078, size: 32, offset: 896)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3543, file: !1074, line: 8570, baseType: !1078, size: 32, offset: 928)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3543, file: !1074, line: 8571, baseType: !1078, size: 32, offset: 960)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3543, file: !1074, line: 8572, baseType: !1078, size: 32, offset: 992)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3543, file: !1074, line: 8573, baseType: !1078, size: 32, offset: 1024)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3543, file: !1074, line: 8574, baseType: !3559, size: 96, offset: 1056)
!3559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 96, elements: !2347)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3543, file: !1074, line: 8575, baseType: !1078, size: 32, offset: 1152)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3543, file: !1074, line: 8576, baseType: !3559, size: 96, offset: 1184)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3543, file: !1074, line: 8577, baseType: !1078, size: 32, offset: 1280)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3543, file: !1074, line: 8578, baseType: !3559, size: 96, offset: 1312)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3543, file: !1074, line: 8579, baseType: !1078, size: 32, offset: 1408)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3543, file: !1074, line: 8580, baseType: !1078, size: 32, offset: 1440)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3543, file: !1074, line: 8581, baseType: !1078, size: 32, offset: 1472)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3543, file: !1074, line: 8582, baseType: !1078, size: 32, offset: 1504)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3543, file: !1074, line: 8583, baseType: !1078, size: 32, offset: 1536)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3543, file: !1074, line: 8584, baseType: !1078, size: 32, offset: 1568)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3543, file: !1074, line: 8585, baseType: !1078, size: 32, offset: 1600)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3543, file: !1074, line: 8586, baseType: !1078, size: 32, offset: 1632)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3543, file: !1074, line: 8587, baseType: !1078, size: 32, offset: 1664)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3543, file: !1074, line: 8588, baseType: !1078, size: 32, offset: 1696)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3543, file: !1074, line: 8589, baseType: !1078, size: 32, offset: 1728)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3543, file: !1074, line: 8590, baseType: !1078, size: 32, offset: 1760)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3543, file: !1074, line: 8591, baseType: !1078, size: 32, offset: 1792)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3543, file: !1074, line: 8592, baseType: !1078, size: 32, offset: 1824)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3543, file: !1074, line: 8593, baseType: !1078, size: 32, offset: 1856)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3543, file: !1074, line: 8594, baseType: !1078, size: 32, offset: 1888)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3543, file: !1074, line: 8595, baseType: !1078, size: 32, offset: 1920)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3543, file: !1074, line: 8596, baseType: !1078, size: 32, offset: 1952)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3543, file: !1074, line: 8597, baseType: !1078, size: 32, offset: 1984)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3543, file: !1074, line: 8598, baseType: !1078, size: 32, offset: 2016)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3543, file: !1074, line: 8599, baseType: !1078, size: 32, offset: 2048)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3543, file: !1074, line: 8600, baseType: !3559, size: 96, offset: 2080)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3543, file: !1074, line: 8601, baseType: !1078, size: 32, offset: 2176)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3543, file: !1074, line: 8602, baseType: !3559, size: 96, offset: 2208)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3543, file: !1074, line: 8603, baseType: !1078, size: 32, offset: 2304)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3543, file: !1074, line: 8604, baseType: !3559, size: 96, offset: 2336)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3543, file: !1074, line: 8605, baseType: !1078, size: 32, offset: 2432)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3543, file: !1074, line: 8606, baseType: !1078, size: 32, offset: 2464)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3543, file: !1074, line: 8607, baseType: !1078, size: 32, offset: 2496)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3543, file: !1074, line: 8608, baseType: !1078, size: 32, offset: 2528)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3543, file: !1074, line: 8609, baseType: !1078, size: 32, offset: 2560)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3543, file: !1074, line: 8610, baseType: !3559, size: 96, offset: 2592)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3543, file: !1074, line: 8611, baseType: !1078, size: 32, offset: 2688)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3543, file: !1074, line: 8612, baseType: !3559, size: 96, offset: 2720)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3543, file: !1074, line: 8613, baseType: !1078, size: 32, offset: 2816)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3543, file: !1074, line: 8614, baseType: !3559, size: 96, offset: 2848)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3543, file: !1074, line: 8615, baseType: !1078, size: 32, offset: 2944)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3543, file: !1074, line: 8616, baseType: !1078, size: 32, offset: 2976)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3543, file: !1074, line: 8617, baseType: !1078, size: 32, offset: 3008)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3543, file: !1074, line: 8618, baseType: !1078, size: 32, offset: 3040)
!3604 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!3605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3607, splitDebugInlining: false, nameTableKind: None)
!3606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3607 = !{!3608, !3612, !1691}
!3608 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !1692, line: 49, baseType: !32, size: 32, elements: !3609)
!3609 = !{!3610, !3611}
!3610 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!3611 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!3612 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !1692, line: 56, baseType: !32, size: 32, elements: !3613)
!3613 = !{!3614, !3615, !3616, !3617, !3618}
!3614 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!3615 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!3616 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!3617 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!3618 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!3619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3621, retainedTypes: !3630, splitDebugInlining: false, nameTableKind: None)
!3620 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3621 = !{!1952, !3622, !3626}
!3622 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1874, line: 179, baseType: !32, size: 32, elements: !3623)
!3623 = !{!3624, !3625}
!3624 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!3625 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!3626 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1874, line: 194, baseType: !32, size: 32, elements: !3627)
!3627 = !{!3628, !3629}
!3628 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!3629 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!3630 = !{!108, !2102}
!3631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3633, retainedTypes: !3644, splitDebugInlining: false, nameTableKind: None)
!3632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3633 = !{!789, !3634}
!3634 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !3532, line: 128, baseType: !32, size: 32, elements: !3635)
!3635 = !{!3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643}
!3636 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!3637 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!3638 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!3639 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!3640 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!3641 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!3642 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!3643 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!3644 = !{!108, !3645, !3697, !1198}
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 32)
!3646 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1074, line: 4575, baseType: !3647)
!3647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 4532, size: 390144, elements: !3648)
!3648 = !{!3649, !3650, !3651, !3652, !3653, !3654, !3662, !3663, !3671, !3672}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !3647, file: !1074, line: 4533, baseType: !1078, size: 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !3647, file: !1074, line: 4534, baseType: !1078, size: 32, offset: 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !3647, file: !1074, line: 4535, baseType: !1078, size: 32, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !3647, file: !1074, line: 4536, baseType: !1078, size: 32, offset: 96)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3647, file: !1074, line: 4537, baseType: !1083, size: 16256, offset: 128)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3647, file: !1074, line: 4543, baseType: !3655, size: 4224, offset: 16384)
!3655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3656, size: 4224, elements: !1094)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3647, file: !1074, line: 4538, size: 128, elements: !3657)
!3657 = !{!3658, !3659, !3660, !3661}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !3656, file: !1074, line: 4539, baseType: !1078, size: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !3656, file: !1074, line: 4540, baseType: !1078, size: 32, offset: 32)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !3656, file: !1074, line: 4541, baseType: !1078, size: 32, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !3656, file: !1074, line: 4542, baseType: !1078, size: 32, offset: 96)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3647, file: !1074, line: 4544, baseType: !1097, size: 110464, offset: 20608)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3647, file: !1074, line: 4550, baseType: !3664, size: 24448, offset: 131072)
!3664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3665, size: 24448, elements: !1108)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3647, file: !1074, line: 4545, size: 128, elements: !3666)
!3666 = !{!3667, !3668, !3669, !3670}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !3665, file: !1074, line: 4546, baseType: !1078, size: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !3665, file: !1074, line: 4547, baseType: !1078, size: 32, offset: 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !3665, file: !1074, line: 4548, baseType: !1078, size: 32, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !3665, file: !1074, line: 4549, baseType: !1078, size: 32, offset: 96)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3647, file: !1074, line: 4551, baseType: !1111, size: 106624, offset: 155520)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3647, file: !1074, line: 4574, baseType: !3673, size: 128000, offset: 262144)
!3673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3674, size: 128000, elements: !1142)
!3674 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3647, file: !1074, line: 4552, size: 1024, elements: !3675)
!3675 = !{!3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !3674, file: !1074, line: 4553, baseType: !1078, size: 32)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !3674, file: !1074, line: 4554, baseType: !1078, size: 32, offset: 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !3674, file: !1074, line: 4555, baseType: !1078, size: 32, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !3674, file: !1074, line: 4556, baseType: !1078, size: 32, offset: 96)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !3674, file: !1074, line: 4557, baseType: !1078, size: 32, offset: 128)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !3674, file: !1074, line: 4558, baseType: !1078, size: 32, offset: 160)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !3674, file: !1074, line: 4559, baseType: !1078, size: 32, offset: 192)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !3674, file: !1074, line: 4560, baseType: !1078, size: 32, offset: 224)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !3674, file: !1074, line: 4561, baseType: !1078, size: 32, offset: 256)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !3674, file: !1074, line: 4562, baseType: !1078, size: 32, offset: 288)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !3674, file: !1074, line: 4563, baseType: !1078, size: 32, offset: 320)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !3674, file: !1074, line: 4564, baseType: !1078, size: 32, offset: 352)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !3674, file: !1074, line: 4565, baseType: !1078, size: 32, offset: 384)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !3674, file: !1074, line: 4566, baseType: !1078, size: 32, offset: 416)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !3674, file: !1074, line: 4567, baseType: !1078, size: 32, offset: 448)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !3674, file: !1074, line: 4568, baseType: !1078, size: 32, offset: 480)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3674, file: !1074, line: 4569, baseType: !1135, size: 384, offset: 512)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !3674, file: !1074, line: 4570, baseType: !1078, size: 32, offset: 896)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !3674, file: !1074, line: 4571, baseType: !1078, size: 32, offset: 928)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !3674, file: !1074, line: 4572, baseType: !1078, size: 32, offset: 960)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !3674, file: !1074, line: 4573, baseType: !1078, size: 32, offset: 992)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 32)
!3698 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !1074, line: 8619, baseType: !3699)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 8563, size: 3072, elements: !3700)
!3700 = !{!3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !3699, file: !1074, line: 8564, baseType: !3546, size: 768)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !3699, file: !1074, line: 8565, baseType: !1078, size: 32, offset: 768)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !3699, file: !1074, line: 8566, baseType: !1078, size: 32, offset: 800)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !3699, file: !1074, line: 8567, baseType: !1078, size: 32, offset: 832)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !3699, file: !1074, line: 8568, baseType: !1078, size: 32, offset: 864)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !3699, file: !1074, line: 8569, baseType: !1078, size: 32, offset: 896)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !3699, file: !1074, line: 8570, baseType: !1078, size: 32, offset: 928)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !3699, file: !1074, line: 8571, baseType: !1078, size: 32, offset: 960)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !3699, file: !1074, line: 8572, baseType: !1078, size: 32, offset: 992)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !3699, file: !1074, line: 8573, baseType: !1078, size: 32, offset: 1024)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !3699, file: !1074, line: 8574, baseType: !3559, size: 96, offset: 1056)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !3699, file: !1074, line: 8575, baseType: !1078, size: 32, offset: 1152)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !3699, file: !1074, line: 8576, baseType: !3559, size: 96, offset: 1184)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !3699, file: !1074, line: 8577, baseType: !1078, size: 32, offset: 1280)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !3699, file: !1074, line: 8578, baseType: !3559, size: 96, offset: 1312)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !3699, file: !1074, line: 8579, baseType: !1078, size: 32, offset: 1408)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !3699, file: !1074, line: 8580, baseType: !1078, size: 32, offset: 1440)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !3699, file: !1074, line: 8581, baseType: !1078, size: 32, offset: 1472)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !3699, file: !1074, line: 8582, baseType: !1078, size: 32, offset: 1504)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !3699, file: !1074, line: 8583, baseType: !1078, size: 32, offset: 1536)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !3699, file: !1074, line: 8584, baseType: !1078, size: 32, offset: 1568)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !3699, file: !1074, line: 8585, baseType: !1078, size: 32, offset: 1600)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !3699, file: !1074, line: 8586, baseType: !1078, size: 32, offset: 1632)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !3699, file: !1074, line: 8587, baseType: !1078, size: 32, offset: 1664)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !3699, file: !1074, line: 8588, baseType: !1078, size: 32, offset: 1696)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !3699, file: !1074, line: 8589, baseType: !1078, size: 32, offset: 1728)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !3699, file: !1074, line: 8590, baseType: !1078, size: 32, offset: 1760)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !3699, file: !1074, line: 8591, baseType: !1078, size: 32, offset: 1792)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !3699, file: !1074, line: 8592, baseType: !1078, size: 32, offset: 1824)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !3699, file: !1074, line: 8593, baseType: !1078, size: 32, offset: 1856)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !3699, file: !1074, line: 8594, baseType: !1078, size: 32, offset: 1888)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !3699, file: !1074, line: 8595, baseType: !1078, size: 32, offset: 1920)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !3699, file: !1074, line: 8596, baseType: !1078, size: 32, offset: 1952)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !3699, file: !1074, line: 8597, baseType: !1078, size: 32, offset: 1984)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !3699, file: !1074, line: 8598, baseType: !1078, size: 32, offset: 2016)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !3699, file: !1074, line: 8599, baseType: !1078, size: 32, offset: 2048)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !3699, file: !1074, line: 8600, baseType: !3559, size: 96, offset: 2080)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !3699, file: !1074, line: 8601, baseType: !1078, size: 32, offset: 2176)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !3699, file: !1074, line: 8602, baseType: !3559, size: 96, offset: 2208)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !3699, file: !1074, line: 8603, baseType: !1078, size: 32, offset: 2304)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !3699, file: !1074, line: 8604, baseType: !3559, size: 96, offset: 2336)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !3699, file: !1074, line: 8605, baseType: !1078, size: 32, offset: 2432)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !3699, file: !1074, line: 8606, baseType: !1078, size: 32, offset: 2464)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !3699, file: !1074, line: 8607, baseType: !1078, size: 32, offset: 2496)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !3699, file: !1074, line: 8608, baseType: !1078, size: 32, offset: 2528)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !3699, file: !1074, line: 8609, baseType: !1078, size: 32, offset: 2560)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !3699, file: !1074, line: 8610, baseType: !3559, size: 96, offset: 2592)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !3699, file: !1074, line: 8611, baseType: !1078, size: 32, offset: 2688)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !3699, file: !1074, line: 8612, baseType: !3559, size: 96, offset: 2720)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !3699, file: !1074, line: 8613, baseType: !1078, size: 32, offset: 2816)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !3699, file: !1074, line: 8614, baseType: !3559, size: 96, offset: 2848)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !3699, file: !1074, line: 8615, baseType: !1078, size: 32, offset: 2944)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !3699, file: !1074, line: 8616, baseType: !1078, size: 32, offset: 2976)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !3699, file: !1074, line: 8617, baseType: !1078, size: 32, offset: 3008)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !3699, file: !1074, line: 8618, baseType: !1078, size: 32, offset: 3040)
!3756 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3757, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3758, splitDebugInlining: false, nameTableKind: None)
!3757 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3758 = !{!102, !153}
!3759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3761, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3761 = !{!3762, !3769, !3218, !30}
!3762 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3763, line: 14, baseType: !32, size: 32, elements: !3764)
!3763 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3764 = !{!3765, !3766, !3767, !3768}
!3765 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3766 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3767 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3768 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3763, line: 42, baseType: !32, size: 32, elements: !3770)
!3770 = !{!3771, !3772, !3773, !3774, !3775, !3776}
!3771 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3772 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3773 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3774 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3775 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3776 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3780, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3781, splitDebugInlining: false, nameTableKind: None)
!3780 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3781 = !{!102, !103, !3782, !3797}
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 32)
!3783 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !3784)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !3785)
!3785 = !{!3786, !3792}
!3786 = !DIDerivedType(tag: DW_TAG_member, scope: !3784, file: !133, line: 38, baseType: !3787, size: 32)
!3787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3784, file: !133, line: 38, size: 32, elements: !3788)
!3788 = !{!3789, !3791}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3787, file: !133, line: 39, baseType: !3790, size: 32)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 32)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3787, file: !133, line: 40, baseType: !3790, size: 32)
!3792 = !DIDerivedType(tag: DW_TAG_member, scope: !3784, file: !133, line: 42, baseType: !3793, size: 32, offset: 32)
!3793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3784, file: !133, line: 42, size: 32, elements: !3794)
!3794 = !{!3795, !3796}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3793, file: !133, line: 43, baseType: !3790, size: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3793, file: !133, line: 44, baseType: !3790, size: 32)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 32)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !3799)
!3799 = !{!3800, !3844, !3856, !3857, !3858, !3859, !3874}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3798, file: !195, line: 247, baseType: !3801, size: 384)
!3801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !3802)
!3802 = !{!3803, !3813, !3820, !3821, !3822, !3831, !3832, !3833}
!3803 = !DIDerivedType(tag: DW_TAG_member, scope: !3801, file: !195, line: 60, baseType: !3804, size: 64)
!3804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3801, file: !195, line: 60, size: 64, elements: !3805)
!3805 = !{!3806, !3807}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3804, file: !195, line: 61, baseType: !3783, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3804, file: !195, line: 62, baseType: !3808, size: 64)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !3809)
!3809 = !{!3810}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3808, file: !207, line: 50, baseType: !3811, size: 64)
!3811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3812, size: 64, elements: !212)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3801, file: !195, line: 68, baseType: !3814, size: 32, offset: 64)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 32)
!3815 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !3816)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !3817)
!3817 = !{!3818}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3816, file: !128, line: 232, baseType: !3819, size: 64)
!3819 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3784)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3801, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3801, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!3822 = !DIDerivedType(tag: DW_TAG_member, scope: !3801, file: !195, line: 90, baseType: !3823, size: 16, offset: 112)
!3823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3801, file: !195, line: 90, size: 16, elements: !3824)
!3824 = !{!3825, !3830}
!3825 = !DIDerivedType(tag: DW_TAG_member, scope: !3823, file: !195, line: 91, baseType: !3826, size: 16)
!3826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3823, file: !195, line: 91, size: 16, elements: !3827)
!3827 = !{!3828, !3829}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3826, file: !195, line: 96, baseType: !225, size: 8)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3826, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3823, file: !195, line: 100, baseType: !177, size: 16)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3801, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3801, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3801, file: !195, line: 131, baseType: !3834, size: 192, offset: 192)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !3835)
!3835 = !{!3836, !3837, !3843}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3834, file: !128, line: 245, baseType: !3783, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3834, file: !128, line: 246, baseType: !3838, size: 32, offset: 64)
!3838 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !3839)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 32)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{null, !3842}
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 32)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3834, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3798, file: !195, line: 250, baseType: !3845, size: 288, offset: 384)
!3845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !3846)
!3846 = !{!3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3845, file: !244, line: 26, baseType: !108, size: 32)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3845, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3845, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3845, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3845, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3845, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3845, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3845, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3845, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3798, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3798, file: !195, line: 256, baseType: !3815, size: 64, offset: 704)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3798, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3798, file: !195, line: 325, baseType: !3860, size: 32, offset: 800)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 32)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !3862)
!3862 = !{!3863, !3869, !3870}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3861, file: !124, line: 5074, baseType: !3864, size: 96)
!3864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !3865)
!3865 = !{!3866, !3867, !3868}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3864, file: !264, line: 57, baseType: !267, size: 32)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3864, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3864, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3861, file: !124, line: 5075, baseType: !3815, size: 64, offset: 96)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3861, file: !124, line: 5076, baseType: !3871, size: 32, offset: 160)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !3872)
!3872 = !{!3873}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3871, file: !149, line: 52, baseType: !22, size: 32)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3798, file: !195, line: 343, baseType: !3875, size: 64, offset: 832)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !3876)
!3876 = !{!3877, !3878}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3875, file: !244, line: 63, baseType: !108, size: 32)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3875, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!3879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3881, splitDebugInlining: false, nameTableKind: None)
!3880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3881 = !{!22, !102, !103}
!3882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !778, splitDebugInlining: false, nameTableKind: None)
!3883 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!3884 = !{!"Ubuntu clang version 14.0.6"}
!3885 = !{i32 7, !"Dwarf Version", i32 4}
!3886 = !{i32 2, !"Debug Info Version", i32 3}
!3887 = !{i32 1, !"wchar_size", i32 4}
!3888 = !{i32 1, !"min_enum_size", i32 4}
!3889 = !{i32 1, !"branch-target-enforcement", i32 0}
!3890 = !{i32 1, !"sign-return-address", i32 0}
!3891 = !{i32 1, !"sign-return-address-all", i32 0}
!3892 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3893 = !{i32 7, !"frame-pointer", i32 2}
!3894 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3895, file: !3895, line: 26, type: !327, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3137, retainedNodes: !2645)
!3895 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3896 = !DILocation(line: 28, column: 1, scope: !3894)
!3897 = !{i64 2155083551, i64 2155083571, i64 2155083634}
!3898 = !DILocation(line: 29, column: 1, scope: !3894)
!3899 = !{i64 2155083966, i64 2155083986, i64 2155084049}
!3900 = !DILocation(line: 30, column: 1, scope: !3894)
!3901 = !{i64 2155084385, i64 2155084405, i64 2155084468}
!3902 = !DILocation(line: 31, column: 1, scope: !3894)
!3903 = !{i64 2155088865, i64 2155088885, i64 2155088948}
!3904 = !DILocation(line: 33, column: 1, scope: !3894)
!3905 = !{i64 2155089157, i64 2155089177, i64 2155089240}
!3906 = !DILocation(line: 35, column: 1, scope: !3894)
!3907 = !{i64 2155089482, i64 2155089502, i64 2155089565}
!3908 = !DILocation(line: 50, column: 1, scope: !3894)
!3909 = !{i64 2155089909, i64 2155089929, i64 2155089992}
!3910 = !DILocation(line: 54, column: 1, scope: !3894)
!3911 = !{i64 2155090348, i64 2155090368, i64 2155090431}
!3912 = !DILocation(line: 61, column: 1, scope: !3894)
!3913 = !{i64 2155090665, i64 2155090685, i64 2155090748}
!3914 = !DILocation(line: 63, column: 1, scope: !3894)
!3915 = !{i64 2155091045, i64 2155091065, i64 2155091128}
!3916 = !DILocation(line: 64, column: 1, scope: !3894)
!3917 = !{i64 2155091567, i64 2155091587, i64 2155091650}
!3918 = !DILocation(line: 65, column: 1, scope: !3894)
!3919 = !{i64 2155092065, i64 2155092085, i64 2155092148}
!3920 = !DILocation(line: 66, column: 1, scope: !3894)
!3921 = !{i64 2155092547, i64 2155092567, i64 2155092630}
!3922 = !DILocation(line: 67, column: 1, scope: !3894)
!3923 = !{i64 2155093054, i64 2155093074, i64 2155093137}
!3924 = !DILocation(line: 68, column: 1, scope: !3894)
!3925 = !{i64 2155093542, i64 2155093562, i64 2155093625}
!3926 = !DILocation(line: 70, column: 1, scope: !3894)
!3927 = !{i64 2155094010, i64 2155094030, i64 2155094093}
!3928 = !DILocation(line: 71, column: 1, scope: !3894)
!3929 = !{i64 2155094452, i64 2155094472, i64 2155094535}
!3930 = !DILocation(line: 72, column: 1, scope: !3894)
!3931 = !{i64 2155094910, i64 2155094930, i64 2155094993}
!3932 = !DILocation(line: 97, column: 1, scope: !3894)
!3933 = !{i64 2155095217, i64 2155095237, i64 2155095300}
!3934 = !DILocation(line: 99, column: 1, scope: !3894)
!3935 = !{i64 2155095435, i64 2155095455, i64 2155095518}
!3936 = !DILocation(line: 102, column: 1, scope: !3894)
!3937 = !{i64 2155095692, i64 2155095712, i64 2155095775}
!3938 = !DILocation(line: 105, column: 1, scope: !3894)
!3939 = !{i64 2155095932, i64 2155095952, i64 2155096015}
!3940 = !DILocation(line: 115, column: 1, scope: !3894)
!3941 = !{i64 2155096271, i64 2155096291, i64 2155096354}
!3942 = !DILocation(line: 118, column: 1, scope: !3894)
!3943 = !{i64 2155096615, i64 2155096635, i64 2155096698}
!3944 = !DILocation(line: 32, column: 1, scope: !3945)
!3945 = !DILexicalBlockFile(scope: !3894, file: !3946, discriminator: 0)
!3946 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3947 = !{i64 2155096971, i64 2155096991, i64 2155097054}
!3948 = !DILocation(line: 33, column: 1, scope: !3945)
!3949 = !{i64 2155097483, i64 2155097503, i64 2155097566}
!3950 = !DILocation(line: 53, column: 1, scope: !3945)
!3951 = !{i64 2155097991, i64 2155098011, i64 2155098074}
!3952 = !DILocation(line: 54, column: 1, scope: !3945)
!3953 = !{i64 2155102470, i64 2155102490, i64 2155102553}
!3954 = !DILocation(line: 55, column: 1, scope: !3945)
!3955 = !{i64 2155102888, i64 2155102908, i64 2155102971}
!3956 = !DILocation(line: 56, column: 1, scope: !3945)
!3957 = !{i64 2155103306, i64 2155103326, i64 2155103389}
!3958 = !DILocation(line: 57, column: 1, scope: !3945)
!3959 = !{i64 2155103724, i64 2155103744, i64 2155103807}
!3960 = !DILocation(line: 58, column: 1, scope: !3945)
!3961 = !{i64 2155104142, i64 2155104162, i64 2155104225}
!3962 = !DILocation(line: 59, column: 1, scope: !3945)
!3963 = !{i64 2155104560, i64 2155104580, i64 2155104643}
!3964 = !DILocation(line: 60, column: 1, scope: !3945)
!3965 = !{i64 2155104984, i64 2155105004, i64 2155105067}
!3966 = !DILocation(line: 61, column: 1, scope: !3945)
!3967 = !{i64 2155105301, i64 2155105321, i64 2155105384}
!3968 = !DILocation(line: 70, column: 1, scope: !3945)
!3969 = !{i64 2155105530, i64 2155105550, i64 2155105613}
!3970 = !DILocation(line: 72, column: 1, scope: !3945)
!3971 = !{i64 2155105862, i64 2155105882, i64 2155105945}
!3972 = !DILocation(line: 73, column: 1, scope: !3945)
!3973 = !{i64 2155106312, i64 2155106332, i64 2155106395}
!3974 = !DILocation(line: 74, column: 1, scope: !3945)
!3975 = !{i64 2155106762, i64 2155106782, i64 2155106845}
!3976 = !DILocation(line: 75, column: 1, scope: !3945)
!3977 = !{i64 2155107212, i64 2155107232, i64 2155107295}
!3978 = !DILocation(line: 76, column: 1, scope: !3945)
!3979 = !{i64 2155107662, i64 2155107682, i64 2155107745}
!3980 = !DILocation(line: 77, column: 1, scope: !3945)
!3981 = !{i64 2155108112, i64 2155108132, i64 2155108195}
!3982 = !DILocation(line: 78, column: 1, scope: !3945)
!3983 = !{i64 2155108562, i64 2155108582, i64 2155108645}
!3984 = !DILocation(line: 79, column: 1, scope: !3945)
!3985 = !{i64 2155109012, i64 2155109032, i64 2155109095}
!3986 = !DILocation(line: 80, column: 1, scope: !3945)
!3987 = !{i64 2155109465, i64 2155109485, i64 2155109548}
!3988 = !DILocation(line: 84, column: 1, scope: !3945)
!3989 = !{i64 2155109797, i64 2155109817, i64 2155109880}
!3990 = !DILocation(line: 106, column: 1, scope: !3945)
!3991 = !{i64 2155110047, i64 2155110067, i64 2155110130}
!3992 = !DILocation(line: 11, column: 1, scope: !3993)
!3993 = !DILexicalBlockFile(scope: !3894, file: !3994, discriminator: 0)
!3994 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3995 = distinct !DISubprogram(name: "consumer_subscriber_thread", scope: !114, file: !114, line: 13, type: !327, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3996)
!3996 = !{!3997, !3998}
!3997 = !DILocalVariable(name: "chan", scope: !3995, file: !114, line: 15, type: !171)
!3998 = !DILocalVariable(name: "acc", scope: !3999, file: !114, line: 18, type: !4000)
!3999 = distinct !DILexicalBlock(scope: !3995, file: !114, line: 17, column: 58)
!4000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sensor_msg", file: !526, line: 11, size: 96, elements: !4001)
!4001 = !{!4002, !4003, !4004}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4000, file: !526, line: 12, baseType: !103, size: 32)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4000, file: !526, line: 13, baseType: !103, size: 32, offset: 32)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !4000, file: !526, line: 14, baseType: !103, size: 32, offset: 64)
!4005 = !DILocation(line: 15, column: 2, scope: !3995)
!4006 = !DILocation(line: 0, scope: !3995)
!4007 = !DILocation(line: 17, column: 10, scope: !3995)
!4008 = !DILocation(line: 17, column: 9, scope: !3995)
!4009 = !DILocation(line: 17, column: 2, scope: !3995)
!4010 = !DILocation(line: 18, column: 3, scope: !3999)
!4011 = !DILocation(line: 18, column: 21, scope: !3999)
!4012 = !DILocation(line: 20, column: 18, scope: !3999)
!4013 = !DILocation(line: 20, column: 3, scope: !3999)
!4014 = !DILocation(line: 21, column: 3, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !114, line: 21, column: 3)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !114, line: 21, column: 3)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !114, line: 21, column: 3)
!4018 = distinct !DILexicalBlock(scope: !3999, file: !114, line: 21, column: 3)
!4019 = !DILocation(line: 22, column: 2, scope: !3995)
!4020 = distinct !{!4020, !4009, !4019}
!4021 = !DILocation(line: 23, column: 1, scope: !3995)
!4022 = distinct !DISubprogram(name: "filter_callback", scope: !356, file: !356, line: 20, type: !507, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !350, retainedNodes: !4023)
!4023 = !{!4024, !4025, !4028}
!4024 = !DILocalVariable(name: "chan", arg: 1, scope: !4022, file: !356, line: 20, type: !509)
!4025 = !DILocalVariable(name: "msg", scope: !4022, file: !356, line: 22, type: !4026)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 32)
!4027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !525)
!4028 = !DILocalVariable(name: "proc_msg", scope: !4022, file: !356, line: 23, type: !525)
!4029 = !DILocation(line: 0, scope: !4022)
!4030 = !DILocation(line: 22, column: 33, scope: !4022)
!4031 = !DILocation(line: 23, column: 2, scope: !4022)
!4032 = !DILocation(line: 23, column: 20, scope: !4022)
!4033 = !DILocation(line: 25, column: 17, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4022, file: !356, line: 25, column: 6)
!4035 = !DILocation(line: 25, column: 8, scope: !4034)
!4036 = !DILocation(line: 25, column: 6, scope: !4022)
!4037 = !DILocation(line: 26, column: 12, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4034, file: !356, line: 25, column: 25)
!4039 = !DILocation(line: 26, column: 14, scope: !4038)
!4040 = !DILocation(line: 27, column: 2, scope: !4038)
!4041 = !DILocation(line: 28, column: 17, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4022, file: !356, line: 28, column: 6)
!4043 = !DILocation(line: 28, column: 8, scope: !4042)
!4044 = !DILocation(line: 28, column: 6, scope: !4022)
!4045 = !DILocation(line: 29, column: 12, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4042, file: !356, line: 28, column: 25)
!4047 = !DILocation(line: 29, column: 14, scope: !4046)
!4048 = !DILocation(line: 30, column: 2, scope: !4046)
!4049 = !DILocation(line: 31, column: 17, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4022, file: !356, line: 31, column: 6)
!4051 = !DILocation(line: 31, column: 8, scope: !4050)
!4052 = !DILocation(line: 31, column: 6, scope: !4022)
!4053 = !DILocation(line: 32, column: 12, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !356, line: 31, column: 25)
!4055 = !DILocation(line: 32, column: 14, scope: !4054)
!4056 = !DILocation(line: 33, column: 2, scope: !4054)
!4057 = !DILocation(line: 34, column: 2, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !356, line: 34, column: 2)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !356, line: 34, column: 2)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !356, line: 34, column: 2)
!4061 = distinct !DILexicalBlock(scope: !4022, file: !356, line: 34, column: 2)
!4062 = !DILocation(line: 35, column: 2, scope: !4022)
!4063 = !DILocation(line: 36, column: 1, scope: !4022)
!4064 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !116, file: !116, line: 416, type: !4065, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !350, retainedNodes: !4067)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!13, !509}
!4067 = !{!4068}
!4068 = !DILocalVariable(name: "chan", arg: 1, scope: !4064, file: !116, line: 416, type: !509)
!4069 = !DILocation(line: 0, scope: !4064)
!4070 = !DILocation(line: 418, column: 2, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !116, line: 418, column: 2)
!4072 = distinct !DILexicalBlock(scope: !4064, file: !116, line: 418, column: 2)
!4073 = !DILocation(line: 418, column: 2, scope: !4072)
!4074 = !DILocation(line: 418, column: 2, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4071, file: !116, line: 418, column: 2)
!4076 = !DILocation(line: 420, column: 15, scope: !4064)
!4077 = !DILocation(line: 420, column: 2, scope: !4064)
!4078 = distinct !DISubprogram(name: "main", scope: !356, file: !356, line: 42, type: !327, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !350, retainedNodes: !4079)
!4079 = !{!4080}
!4080 = !DILocalVariable(name: "chan", scope: !4078, file: !356, line: 46, type: !509)
!4081 = !DILocation(line: 44, column: 2, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4083, file: !356, line: 44, column: 2)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !356, line: 44, column: 2)
!4084 = distinct !DILexicalBlock(scope: !4085, file: !356, line: 44, column: 2)
!4085 = distinct !DILexicalBlock(scope: !4078, file: !356, line: 44, column: 2)
!4086 = !DILocation(line: 46, column: 2, scope: !4078)
!4087 = !DILocation(line: 48, column: 2, scope: !4078)
!4088 = !DILocation(line: 49, column: 3, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !356, line: 49, column: 3)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !356, line: 49, column: 3)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !356, line: 49, column: 3)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !356, line: 49, column: 3)
!4093 = distinct !DILexicalBlock(scope: !4078, file: !356, line: 48, column: 12)
!4094 = !DILocation(line: 50, column: 3, scope: !4093)
!4095 = !DILocation(line: 0, scope: !4078)
!4096 = !DILocation(line: 52, column: 3, scope: !4093)
!4097 = !DILocation(line: 54, column: 3, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !356, line: 54, column: 3)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !356, line: 54, column: 3)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !356, line: 54, column: 3)
!4101 = distinct !DILexicalBlock(scope: !4093, file: !356, line: 54, column: 3)
!4102 = !DILocation(line: 55, column: 3, scope: !4093)
!4103 = !DILocation(line: 57, column: 3, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !356, line: 57, column: 3)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !356, line: 57, column: 3)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !356, line: 57, column: 3)
!4107 = distinct !DILexicalBlock(scope: !4093, file: !356, line: 57, column: 3)
!4108 = !DILocation(line: 58, column: 3, scope: !4093)
!4109 = !DILocation(line: 60, column: 3, scope: !4093)
!4110 = !DILocation(line: 62, column: 3, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !356, line: 62, column: 3)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !356, line: 62, column: 3)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !356, line: 62, column: 3)
!4114 = distinct !DILexicalBlock(scope: !4093, file: !356, line: 62, column: 3)
!4115 = !DILocation(line: 63, column: 3, scope: !4093)
!4116 = !DILocation(line: 65, column: 3, scope: !4093)
!4117 = distinct !{!4117, !4087, !4118}
!4118 = !DILocation(line: 66, column: 2, scope: !4078)
!4119 = distinct !DISubprogram(name: "producer_thread", scope: !541, file: !541, line: 16, type: !327, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4120)
!4120 = !{!4121, !4122, !4123}
!4121 = !DILocalVariable(name: "acc", scope: !4119, file: !541, line: 18, type: !735)
!4122 = !DILocalVariable(name: "count", scope: !4119, file: !541, line: 19, type: !108)
!4123 = !DILocalVariable(name: "change_state", scope: !4124, file: !541, line: 23, type: !119)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !541, line: 22, column: 19)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !541, line: 22, column: 7)
!4126 = distinct !DILexicalBlock(scope: !4119, file: !541, line: 21, column: 12)
!4127 = !DILocation(line: 18, column: 2, scope: !4119)
!4128 = !DILocation(line: 18, column: 20, scope: !4119)
!4129 = !DILocation(line: 0, scope: !4119)
!4130 = !DILocation(line: 21, column: 2, scope: !4119)
!4131 = !DILocation(line: 22, column: 13, scope: !4125)
!4132 = !DILocation(line: 22, column: 7, scope: !4126)
!4133 = !DILocation(line: 23, column: 4, scope: !4124)
!4134 = !DILocation(line: 0, scope: !4124)
!4135 = !DILocation(line: 23, column: 9, scope: !4124)
!4136 = !DILocation(line: 25, column: 46, scope: !4124)
!4137 = !DILocation(line: 25, column: 4, scope: !4124)
!4138 = !DILocation(line: 27, column: 3, scope: !4125)
!4139 = !DILocation(line: 27, column: 3, scope: !4124)
!4140 = !DILocation(line: 29, column: 3, scope: !4126)
!4141 = !DILocation(line: 30, column: 3, scope: !4126)
!4142 = !DILocation(line: 31, column: 3, scope: !4126)
!4143 = !DILocation(line: 33, column: 3, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !541, line: 33, column: 3)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !541, line: 33, column: 3)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !541, line: 33, column: 3)
!4147 = distinct !DILexicalBlock(scope: !4126, file: !541, line: 33, column: 3)
!4148 = !DILocation(line: 35, column: 39, scope: !4126)
!4149 = !DILocation(line: 35, column: 3, scope: !4126)
!4150 = !DILocation(line: 37, column: 3, scope: !4126)
!4151 = !DILocation(line: 39, column: 3, scope: !4126)
!4152 = distinct !{!4152, !4130, !4153}
!4153 = !DILocation(line: 40, column: 2, scope: !4119)
!4154 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !4155, file: !4155, line: 403, type: !4156, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4158)
!4155 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!109, !109}
!4158 = !{!4159}
!4159 = !DILocalVariable(name: "t", arg: 1, scope: !4154, file: !4155, line: 403, type: !109)
!4160 = !DILocation(line: 0, scope: !4154)
!4161 = !DILocalVariable(name: "t", arg: 1, scope: !4162, file: !4155, line: 102, type: !109)
!4162 = distinct !DISubprogram(name: "z_tmcvt", scope: !4155, file: !4155, line: 102, type: !4163, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4165)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!109, !109, !108, !108, !119, !119, !119, !119}
!4165 = !{!4161, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175}
!4166 = !DILocalVariable(name: "from_hz", arg: 2, scope: !4162, file: !4155, line: 102, type: !108)
!4167 = !DILocalVariable(name: "to_hz", arg: 3, scope: !4162, file: !4155, line: 103, type: !108)
!4168 = !DILocalVariable(name: "const_hz", arg: 4, scope: !4162, file: !4155, line: 103, type: !119)
!4169 = !DILocalVariable(name: "result32", arg: 5, scope: !4162, file: !4155, line: 104, type: !119)
!4170 = !DILocalVariable(name: "round_up", arg: 6, scope: !4162, file: !4155, line: 104, type: !119)
!4171 = !DILocalVariable(name: "round_off", arg: 7, scope: !4162, file: !4155, line: 105, type: !119)
!4172 = !DILocalVariable(name: "mul_ratio", scope: !4162, file: !4155, line: 107, type: !119)
!4173 = !DILocalVariable(name: "div_ratio", scope: !4162, file: !4155, line: 109, type: !119)
!4174 = !DILocalVariable(name: "off", scope: !4162, file: !4155, line: 116, type: !109)
!4175 = !DILocalVariable(name: "rdivisor", scope: !4176, file: !4155, line: 119, type: !108)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !4155, line: 118, column: 18)
!4177 = distinct !DILexicalBlock(scope: !4162, file: !4155, line: 118, column: 6)
!4178 = !DILocation(line: 0, scope: !4162, inlinedAt: !4179)
!4179 = distinct !DILocation(line: 406, column: 9, scope: !4154)
!4180 = !DILocation(line: 145, column: 13, scope: !4181, inlinedAt: !4179)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !4155, line: 144, column: 10)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !4155, line: 142, column: 7)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !4155, line: 141, column: 24)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !4155, line: 141, column: 13)
!4185 = distinct !DILexicalBlock(scope: !4162, file: !4155, line: 134, column: 6)
!4186 = !DILocation(line: 406, column: 2, scope: !4154)
!4187 = distinct !DISubprogram(name: "k_msleep", scope: !124, file: !124, line: 439, type: !4188, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4190)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{!324, !324}
!4190 = !{!4191}
!4191 = !DILocalVariable(name: "ms", arg: 1, scope: !4187, file: !124, line: 439, type: !324)
!4192 = !DILocation(line: 0, scope: !4187)
!4193 = !DILocation(line: 441, column: 17, scope: !4187)
!4194 = !DILocation(line: 441, column: 9, scope: !4187)
!4195 = !DILocation(line: 441, column: 2, scope: !4187)
!4196 = distinct !DISubprogram(name: "k_sleep", scope: !4197, file: !4197, line: 91, type: !4198, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !536, retainedNodes: !4204)
!4197 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!324, !4200}
!4200 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !4201)
!4201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !4202)
!4202 = !{!4203}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !4201, file: !105, line: 66, baseType: !104, size: 64)
!4204 = !{!4205}
!4205 = !DILocalVariable(name: "timeout", arg: 1, scope: !4196, file: !4197, line: 91, type: !4200)
!4206 = !DILocation(line: 0, scope: !4196)
!4207 = !DILocation(line: 99, column: 2, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4196, file: !4197, line: 99, column: 2)
!4209 = !{i64 2151240814}
!4210 = !DILocation(line: 100, column: 9, scope: !4196)
!4211 = !DILocation(line: 100, column: 2, scope: !4196)
!4212 = distinct !DISubprogram(name: "cbvprintf_package", scope: !767, file: !767, line: 233, type: !4213, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4222)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!103, !102, !153, !108, !330, !4215}
!4215 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4216, line: 99, baseType: !4217)
!4216 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4216, line: 40, baseType: !4218)
!4218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !767, baseType: !4219)
!4219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4220)
!4220 = !{!4221}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4219, file: !767, line: 18, baseType: !102, size: 32)
!4222 = !{!4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4258, !4267, !4270, !4271, !4274, !4277, !4280, !4283, !4289}
!4223 = !DILocalVariable(name: "packaged", arg: 1, scope: !4212, file: !767, line: 233, type: !102)
!4224 = !DILocalVariable(name: "len", arg: 2, scope: !4212, file: !767, line: 233, type: !153)
!4225 = !DILocalVariable(name: "flags", arg: 3, scope: !4212, file: !767, line: 233, type: !108)
!4226 = !DILocalVariable(name: "fmt", arg: 4, scope: !4212, file: !767, line: 234, type: !330)
!4227 = !DILocalVariable(name: "ap", arg: 5, scope: !4212, file: !767, line: 234, type: !4215)
!4228 = !DILocalVariable(name: "buf0", scope: !4212, file: !767, line: 247, type: !765)
!4229 = !DILocalVariable(name: "buf", scope: !4212, file: !767, line: 248, type: !765)
!4230 = !DILocalVariable(name: "size", scope: !4212, file: !767, line: 249, type: !32)
!4231 = !DILocalVariable(name: "align", scope: !4212, file: !767, line: 250, type: !32)
!4232 = !DILocalVariable(name: "str_ptr_pos", scope: !4212, file: !767, line: 251, type: !4233)
!4233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 128, elements: !339)
!4234 = !DILocalVariable(name: "str_ptr_arg", scope: !4212, file: !767, line: 252, type: !4233)
!4235 = !DILocalVariable(name: "s_idx", scope: !4212, file: !767, line: 253, type: !32)
!4236 = !DILocalVariable(name: "s_rw_cnt", scope: !4212, file: !767, line: 254, type: !32)
!4237 = !DILocalVariable(name: "s_ro_cnt", scope: !4212, file: !767, line: 255, type: !32)
!4238 = !DILocalVariable(name: "arg_idx", scope: !4212, file: !767, line: 256, type: !103)
!4239 = !DILocalVariable(name: "i", scope: !4212, file: !767, line: 257, type: !32)
!4240 = !DILocalVariable(name: "s", scope: !4212, file: !767, line: 258, type: !330)
!4241 = !DILocalVariable(name: "parsing", scope: !4212, file: !767, line: 259, type: !119)
!4242 = !DILocalVariable(name: "rws_pos_en", scope: !4212, file: !767, line: 263, type: !119)
!4243 = !DILocalVariable(name: "fros_cnt", scope: !4212, file: !767, line: 268, type: !103)
!4244 = !DILocalVariable(name: "is_str_arg", scope: !4212, file: !767, line: 269, type: !119)
!4245 = !DILocalVariable(name: "pkg_hdr", scope: !4212, file: !767, line: 270, type: !4246)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 32)
!4247 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4248, line: 78, size: 32, elements: !4249)
!4248 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4249 = !{!4250, !4257}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4247, file: !4248, line: 80, baseType: !4251, size: 32)
!4251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4248, line: 45, size: 32, elements: !4252)
!4252 = !{!4253, !4254, !4255, !4256}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4251, file: !4248, line: 47, baseType: !164, size: 8)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4251, file: !4248, line: 50, baseType: !164, size: 8, offset: 8)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4251, file: !4248, line: 53, baseType: !164, size: 8, offset: 16)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4251, file: !4248, line: 56, baseType: !164, size: 8, offset: 24)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4247, file: !4248, line: 82, baseType: !102, size: 32)
!4258 = !DILocalVariable(name: "v", scope: !4259, file: !767, line: 567, type: !4263)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !767, line: 562, column: 14)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !767, line: 481, column: 18)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !767, line: 466, column: 3)
!4262 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 343, column: 15)
!4263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4212, file: !767, line: 567, size: 64, elements: !4264)
!4264 = !{!4265, !4266}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4263, file: !767, line: 567, baseType: !758, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4263, file: !767, line: 567, baseType: !756, size: 64)
!4267 = !DILocalVariable(name: "is_ro", scope: !4268, file: !767, line: 620, type: !119)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !767, line: 613, column: 19)
!4269 = distinct !DILexicalBlock(scope: !4262, file: !767, line: 613, column: 7)
!4270 = !DILocalVariable(name: "do_ro", scope: !4268, file: !767, line: 621, type: !119)
!4271 = !DILocalVariable(name: "s_ptr_idx", scope: !4272, file: !767, line: 626, type: !108)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !767, line: 625, column: 11)
!4273 = distinct !DILexicalBlock(scope: !4268, file: !767, line: 623, column: 8)
!4274 = !DILocalVariable(name: "v", scope: !4275, file: !767, line: 684, type: !103)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !767, line: 683, column: 35)
!4276 = distinct !DILexicalBlock(scope: !4269, file: !767, line: 683, column: 14)
!4277 = !DILocalVariable(name: "v", scope: !4278, file: !767, line: 691, type: !762)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !767, line: 690, column: 36)
!4279 = distinct !DILexicalBlock(scope: !4276, file: !767, line: 690, column: 14)
!4280 = !DILocalVariable(name: "v", scope: !4281, file: !767, line: 698, type: !107)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !767, line: 697, column: 41)
!4282 = distinct !DILexicalBlock(scope: !4279, file: !767, line: 697, column: 14)
!4283 = !DILocalVariable(name: "pos", scope: !4284, file: !767, line: 762, type: !164)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !767, line: 757, column: 31)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !767, line: 757, column: 3)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !767, line: 757, column: 3)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !767, line: 756, column: 16)
!4288 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 756, column: 6)
!4289 = !DILabel(scope: !4268, name: "process_string", file: !767, line: 615)
!4290 = !DILocation(line: 0, scope: !4212)
!4291 = !DILocation(line: 251, column: 2, scope: !4212)
!4292 = !DILocation(line: 251, column: 10, scope: !4212)
!4293 = !DILocation(line: 252, column: 2, scope: !4212)
!4294 = !DILocation(line: 252, column: 10, scope: !4212)
!4295 = !DILocation(line: 263, column: 29, scope: !4212)
!4296 = !DILocation(line: 263, column: 21, scope: !4212)
!4297 = !DILocation(line: 268, column: 21, scope: !4212)
!4298 = !DILocation(line: 268, column: 19, scope: !4212)
!4299 = !DILocation(line: 273, column: 6, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 273, column: 6)
!4301 = !DILocation(line: 273, column: 26, scope: !4300)
!4302 = !DILocation(line: 273, column: 6, scope: !4212)
!4303 = !DILocation(line: 297, column: 6, scope: !4212)
!4304 = !DILocation(line: 305, column: 11, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 305, column: 6)
!4306 = !DILocation(line: 305, column: 6, scope: !4212)
!4307 = !DILocation(line: 327, column: 19, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 327, column: 6)
!4309 = !DILocation(line: 327, column: 22, scope: !4308)
!4310 = !DILocation(line: 327, column: 33, scope: !4308)
!4311 = !DILocation(line: 327, column: 50, scope: !4308)
!4312 = !DILocation(line: 327, column: 6, scope: !4212)
!4313 = !DILocation(line: 338, column: 9, scope: !4212)
!4314 = !DILocation(line: 341, column: 2, scope: !4212)
!4315 = !DILocation(line: 472, column: 8, scope: !4261)
!4316 = !DILocation(line: 473, column: 14, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !767, line: 473, column: 9)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !767, line: 472, column: 18)
!4319 = distinct !DILexicalBlock(scope: !4261, file: !767, line: 472, column: 8)
!4320 = !DILocation(line: 473, column: 9, scope: !4318)
!4321 = !DILocation(line: 479, column: 5, scope: !4318)
!4322 = !DILocation(line: 468, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4261, file: !767, line: 468, column: 8)
!4324 = !DILocation(line: 468, column: 8, scope: !4323)
!4325 = !DILocation(line: 468, column: 15, scope: !4323)
!4326 = !DILocation(line: 468, column: 8, scope: !4261)
!4327 = distinct !{!4327, !4328, !4329}
!4328 = !DILocation(line: 343, column: 2, scope: !4212)
!4329 = !DILocation(line: 712, column: 2, scope: !4212)
!4330 = !DILocation(line: 481, column: 4, scope: !4261)
!4331 = !DILocation(line: 484, column: 12, scope: !4260)
!4332 = !DILocation(line: 485, column: 5, scope: !4260)
!4333 = !DILocation(line: 505, column: 5, scope: !4260)
!4334 = !DILocation(line: 518, column: 5, scope: !4260)
!4335 = !DILocation(line: 523, column: 5, scope: !4260)
!4336 = !DILocation(line: 532, column: 9, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4260, file: !767, line: 532, column: 9)
!4338 = !DILocation(line: 532, column: 17, scope: !4337)
!4339 = !DILocation(line: 532, column: 9, scope: !4260)
!4340 = !DILocation(line: 533, column: 10, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !767, line: 533, column: 10)
!4342 = distinct !DILexicalBlock(scope: !4337, file: !767, line: 532, column: 25)
!4343 = !DILocation(line: 533, column: 18, scope: !4341)
!4344 = !DILocation(line: 0, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4259, file: !767, line: 569, column: 9)
!4346 = !DILocation(line: 0, scope: !4259)
!4347 = !DILocation(line: 579, column: 20, scope: !4259)
!4348 = !DILocation(line: 579, column: 11, scope: !4259)
!4349 = !DILocation(line: 580, column: 9, scope: !4259)
!4350 = !DILocation(line: 582, column: 21, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !767, line: 582, column: 10)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !767, line: 580, column: 23)
!4353 = distinct !DILexicalBlock(scope: !4259, file: !767, line: 580, column: 9)
!4354 = !DILocation(line: 582, column: 28, scope: !4351)
!4355 = !DILocation(line: 582, column: 10, scope: !4352)
!4356 = !DILocation(line: 0, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !767, line: 587, column: 17)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !767, line: 585, column: 10)
!4359 = !DILocation(line: 593, column: 9, scope: !4259)
!4360 = !DILocation(line: 600, column: 5, scope: !4260)
!4361 = !DILocation(line: 605, column: 18, scope: !4262)
!4362 = !DILocation(line: 605, column: 9, scope: !4262)
!4363 = !DILocation(line: 608, column: 20, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4262, file: !767, line: 608, column: 7)
!4365 = !DILocation(line: 608, column: 23, scope: !4364)
!4366 = !DILocation(line: 608, column: 34, scope: !4364)
!4367 = !DILocation(line: 608, column: 41, scope: !4364)
!4368 = !DILocation(line: 608, column: 7, scope: !4262)
!4369 = !DILocation(line: 613, column: 7, scope: !4262)
!4370 = !DILocation(line: 614, column: 8, scope: !4268)
!4371 = !DILocation(line: 614, column: 4, scope: !4268)
!4372 = !DILocation(line: 256, column: 6, scope: !4212)
!4373 = !DILocation(line: 254, column: 15, scope: !4212)
!4374 = !DILocation(line: 320, column: 7, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4305, file: !767, line: 305, column: 20)
!4376 = !DILocation(line: 615, column: 1, scope: !4268)
!4377 = !DILocation(line: 616, column: 8, scope: !4268)
!4378 = !DILocation(line: 617, column: 5, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !767, line: 616, column: 22)
!4380 = distinct !DILexicalBlock(scope: !4268, file: !767, line: 616, column: 8)
!4381 = !DILocation(line: 617, column: 25, scope: !4379)
!4382 = !DILocation(line: 618, column: 4, scope: !4379)
!4383 = !DILocation(line: 620, column: 26, scope: !4268)
!4384 = !DILocation(line: 620, column: 29, scope: !4268)
!4385 = !DILocation(line: 620, column: 17, scope: !4268)
!4386 = !DILocation(line: 620, column: 43, scope: !4268)
!4387 = !DILocation(line: 0, scope: !4268)
!4388 = !DILocation(line: 623, column: 14, scope: !4273)
!4389 = !DILocation(line: 626, column: 26, scope: !4272)
!4390 = !DILocation(line: 626, column: 37, scope: !4272)
!4391 = !DILocation(line: 0, scope: !4272)
!4392 = !DILocation(line: 634, column: 15, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4272, file: !767, line: 634, column: 9)
!4394 = !DILocation(line: 635, column: 6, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !767, line: 635, column: 6)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !767, line: 635, column: 6)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !767, line: 635, column: 6)
!4398 = distinct !DILexicalBlock(scope: !4393, file: !767, line: 634, column: 44)
!4399 = !DILocation(line: 639, column: 15, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4272, file: !767, line: 639, column: 9)
!4401 = !DILocation(line: 639, column: 9, scope: !4272)
!4402 = !DILocation(line: 640, column: 6, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !767, line: 640, column: 6)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !767, line: 640, column: 6)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !767, line: 640, column: 6)
!4406 = distinct !DILexicalBlock(scope: !4400, file: !767, line: 639, column: 43)
!4407 = !DILocation(line: 644, column: 9, scope: !4272)
!4408 = !DILocation(line: 649, column: 27, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !767, line: 644, column: 23)
!4410 = distinct !DILexicalBlock(scope: !4272, file: !767, line: 644, column: 9)
!4411 = !DILocation(line: 649, column: 6, scope: !4409)
!4412 = !DILocation(line: 649, column: 25, scope: !4409)
!4413 = !DILocation(line: 650, column: 27, scope: !4409)
!4414 = !DILocation(line: 650, column: 6, scope: !4409)
!4415 = !DILocation(line: 650, column: 25, scope: !4409)
!4416 = !DILocation(line: 651, column: 10, scope: !4409)
!4417 = !DILocation(line: 653, column: 26, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4419, file: !767, line: 651, column: 17)
!4419 = distinct !DILexicalBlock(scope: !4409, file: !767, line: 651, column: 10)
!4420 = !DILocation(line: 654, column: 15, scope: !4418)
!4421 = !DILocation(line: 655, column: 6, scope: !4418)
!4422 = !DILocation(line: 656, column: 15, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4419, file: !767, line: 655, column: 13)
!4424 = !DILocation(line: 658, column: 16, scope: !4410)
!4425 = !DILocation(line: 663, column: 10, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4427, file: !767, line: 658, column: 23)
!4427 = distinct !DILexicalBlock(scope: !4410, file: !767, line: 658, column: 16)
!4428 = !DILocation(line: 664, column: 5, scope: !4426)
!4429 = !DILocation(line: 664, column: 16, scope: !4427)
!4430 = !DILocation(line: 669, column: 10, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !767, line: 664, column: 28)
!4432 = distinct !DILexicalBlock(scope: !4427, file: !767, line: 664, column: 16)
!4433 = !DILocation(line: 670, column: 5, scope: !4431)
!4434 = !DILocation(line: 675, column: 13, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4432, file: !767, line: 670, column: 12)
!4436 = !DILocation(line: 675, column: 27, scope: !4435)
!4437 = !DILocation(line: 675, column: 10, scope: !4435)
!4438 = !DILocation(line: 678, column: 10, scope: !4272)
!4439 = !DILocation(line: 680, column: 8, scope: !4268)
!4440 = !DILocation(line: 683, column: 14, scope: !4269)
!4441 = !DILocation(line: 684, column: 12, scope: !4275)
!4442 = !DILocation(line: 0, scope: !4275)
!4443 = !DILocation(line: 686, column: 8, scope: !4275)
!4444 = !DILocation(line: 687, column: 5, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4446, file: !767, line: 686, column: 22)
!4446 = distinct !DILexicalBlock(scope: !4275, file: !767, line: 686, column: 8)
!4447 = !DILocation(line: 687, column: 17, scope: !4445)
!4448 = !DILocation(line: 688, column: 4, scope: !4445)
!4449 = !DILocation(line: 698, column: 18, scope: !4281)
!4450 = !DILocation(line: 0, scope: !4281)
!4451 = !DILocation(line: 700, column: 8, scope: !4281)
!4452 = !DILocation(line: 704, column: 6, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !767, line: 703, column: 12)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !767, line: 701, column: 9)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !767, line: 700, column: 22)
!4456 = distinct !DILexicalBlock(scope: !4281, file: !767, line: 700, column: 8)
!4457 = !DILocation(line: 704, column: 24, scope: !4453)
!4458 = !DILocation(line: 706, column: 4, scope: !4455)
!4459 = !DILocation(line: 709, column: 4, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4461, file: !767, line: 709, column: 4)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !767, line: 709, column: 4)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !767, line: 709, column: 4)
!4463 = distinct !DILexicalBlock(scope: !4282, file: !767, line: 708, column: 10)
!4464 = !DILocation(line: 0, scope: !4276)
!4465 = !DILocation(line: 0, scope: !4262)
!4466 = !DILocation(line: 720, column: 6, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 720, column: 6)
!4468 = !DILocation(line: 720, column: 17, scope: !4467)
!4469 = !DILocation(line: 720, column: 31, scope: !4467)
!4470 = !DILocation(line: 720, column: 6, scope: !4212)
!4471 = !DILocation(line: 721, column: 3, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !767, line: 721, column: 3)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !767, line: 721, column: 3)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !767, line: 721, column: 3)
!4475 = distinct !DILexicalBlock(scope: !4467, file: !767, line: 720, column: 38)
!4476 = !DILocation(line: 729, column: 6, scope: !4212)
!4477 = !DILocation(line: 730, column: 21, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !767, line: 729, column: 20)
!4479 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 729, column: 6)
!4480 = !DILocation(line: 730, column: 27, scope: !4478)
!4481 = !DILocation(line: 730, column: 3, scope: !4478)
!4482 = !DILocation(line: 737, column: 22, scope: !4212)
!4483 = !DILocation(line: 737, column: 20, scope: !4212)
!4484 = !DILocation(line: 0, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 739, column: 6)
!4486 = !DILocation(line: 745, column: 17, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4485, file: !767, line: 743, column: 9)
!4488 = !DILocation(line: 745, column: 25, scope: !4487)
!4489 = !DILocation(line: 746, column: 17, scope: !4487)
!4490 = !DILocation(line: 746, column: 28, scope: !4487)
!4491 = !DILocation(line: 749, column: 29, scope: !4212)
!4492 = !DILocation(line: 749, column: 16, scope: !4212)
!4493 = !DILocation(line: 749, column: 27, scope: !4212)
!4494 = !DILocation(line: 756, column: 6, scope: !4288)
!4495 = !DILocation(line: 756, column: 6, scope: !4212)
!4496 = !DILocation(line: 757, column: 3, scope: !4286)
!4497 = !DILocation(line: 758, column: 10, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4284, file: !767, line: 758, column: 8)
!4499 = !DILocation(line: 758, column: 25, scope: !4498)
!4500 = !DILocation(line: 758, column: 8, scope: !4284)
!4501 = !DILocation(line: 0, scope: !4284)
!4502 = !DILocation(line: 765, column: 8, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4284, file: !767, line: 765, column: 8)
!4504 = !DILocation(line: 765, column: 19, scope: !4503)
!4505 = !DILocation(line: 765, column: 23, scope: !4503)
!4506 = !DILocation(line: 765, column: 8, scope: !4284)
!4507 = !DILocation(line: 762, column: 33, scope: !4284)
!4508 = !DILocation(line: 769, column: 8, scope: !4284)
!4509 = !DILocation(line: 769, column: 11, scope: !4284)
!4510 = !DILocation(line: 757, column: 27, scope: !4285)
!4511 = !DILocation(line: 757, column: 17, scope: !4285)
!4512 = distinct !{!4512, !4496, !4513}
!4513 = !DILocation(line: 770, column: 3, scope: !4286)
!4514 = !DILocation(line: 774, column: 16, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !767, line: 774, column: 2)
!4516 = distinct !DILexicalBlock(scope: !4212, file: !767, line: 774, column: 2)
!4517 = !DILocation(line: 774, column: 2, scope: !4516)
!4518 = !DILocation(line: 776, column: 16, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !767, line: 776, column: 7)
!4520 = distinct !DILexicalBlock(scope: !4515, file: !767, line: 774, column: 30)
!4521 = !DILocation(line: 776, column: 19, scope: !4519)
!4522 = !DILocation(line: 776, column: 34, scope: !4519)
!4523 = !DILocation(line: 776, column: 7, scope: !4520)
!4524 = !DILocation(line: 780, column: 7, scope: !4520)
!4525 = !DILocation(line: 782, column: 13, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !767, line: 780, column: 19)
!4527 = distinct !DILexicalBlock(scope: !4520, file: !767, line: 780, column: 7)
!4528 = !DILocation(line: 782, column: 8, scope: !4526)
!4529 = !DILocation(line: 782, column: 11, scope: !4526)
!4530 = !DILocation(line: 783, column: 3, scope: !4526)
!4531 = !DILocation(line: 785, column: 26, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !767, line: 783, column: 10)
!4533 = !DILocation(line: 785, column: 41, scope: !4532)
!4534 = !DILocation(line: 785, column: 24, scope: !4532)
!4535 = !DILocation(line: 785, column: 8, scope: !4532)
!4536 = !DILocation(line: 787, column: 52, scope: !4532)
!4537 = !DILocation(line: 789, column: 11, scope: !4532)
!4538 = !DILocation(line: 789, column: 21, scope: !4532)
!4539 = !DILocation(line: 0, scope: !4527)
!4540 = !DILocation(line: 793, column: 7, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4520, file: !767, line: 793, column: 7)
!4542 = !DILocation(line: 793, column: 18, scope: !4541)
!4543 = !DILocation(line: 793, column: 22, scope: !4541)
!4544 = !DILocation(line: 793, column: 29, scope: !4541)
!4545 = !DILocation(line: 793, column: 7, scope: !4520)
!4546 = !DILocation(line: 797, column: 12, scope: !4520)
!4547 = !DILocation(line: 797, column: 7, scope: !4520)
!4548 = !DILocation(line: 797, column: 10, scope: !4520)
!4549 = !DILocation(line: 799, column: 3, scope: !4520)
!4550 = !DILocation(line: 800, column: 7, scope: !4520)
!4551 = !DILocation(line: 801, column: 2, scope: !4520)
!4552 = !DILocation(line: 338, column: 4, scope: !4212)
!4553 = !DILocation(line: 774, column: 26, scope: !4515)
!4554 = distinct !{!4554, !4517, !4555}
!4555 = !DILocation(line: 801, column: 2, scope: !4516)
!4556 = !DILocation(line: 808, column: 9, scope: !4212)
!4557 = !DILocation(line: 808, column: 2, scope: !4212)
!4558 = !DILocation(line: 813, column: 1, scope: !4212)
!4559 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !767, file: !767, line: 33, type: !4560, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!119, !330}
!4562 = !{!4563}
!4563 = !DILocalVariable(name: "addr", arg: 1, scope: !4559, file: !767, line: 33, type: !330)
!4564 = !DILocation(line: 0, scope: !4559)
!4565 = !DILocation(line: 41, column: 9, scope: !4559)
!4566 = !DILocation(line: 41, column: 2, scope: !4559)
!4567 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4568, file: !4568, line: 24, type: !4569, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4571)
!4568 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4569 = !DISubroutineType(types: !4570)
!4570 = !{!119, !13}
!4571 = !{!4572}
!4572 = !DILocalVariable(name: "addr", arg: 1, scope: !4567, file: !4568, line: 24, type: !13)
!4573 = !DILocation(line: 0, scope: !4567)
!4574 = !DILocation(line: 49, column: 30, scope: !4567)
!4575 = !DILocation(line: 49, column: 57, scope: !4567)
!4576 = !DILocation(line: 49, column: 2, scope: !4567)
!4577 = distinct !DISubprogram(name: "cbprintf_package", scope: !767, file: !767, line: 815, type: !4578, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4580)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!103, !102, !153, !108, !330, null}
!4580 = !{!4581, !4582, !4583, !4584, !4585, !4586}
!4581 = !DILocalVariable(name: "packaged", arg: 1, scope: !4577, file: !767, line: 815, type: !102)
!4582 = !DILocalVariable(name: "len", arg: 2, scope: !4577, file: !767, line: 815, type: !153)
!4583 = !DILocalVariable(name: "flags", arg: 3, scope: !4577, file: !767, line: 815, type: !108)
!4584 = !DILocalVariable(name: "format", arg: 4, scope: !4577, file: !767, line: 816, type: !330)
!4585 = !DILocalVariable(name: "ap", scope: !4577, file: !767, line: 818, type: !4215)
!4586 = !DILocalVariable(name: "ret", scope: !4577, file: !767, line: 819, type: !103)
!4587 = !DILocation(line: 0, scope: !4577)
!4588 = !DILocation(line: 818, column: 2, scope: !4577)
!4589 = !DILocation(line: 818, column: 10, scope: !4577)
!4590 = !DILocation(line: 821, column: 2, scope: !4577)
!4591 = !DILocation(line: 822, column: 8, scope: !4577)
!4592 = !DILocation(line: 823, column: 2, scope: !4577)
!4593 = !DILocation(line: 825, column: 1, scope: !4577)
!4594 = !DILocation(line: 824, column: 2, scope: !4577)
!4595 = distinct !DISubprogram(name: "cbpprintf_external", scope: !767, file: !767, line: 827, type: !4596, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4606)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!103, !4598, !4602, !102, !102}
!4598 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4248, line: 297, baseType: !4599)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 32)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!103, null}
!4602 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4248, line: 328, baseType: !4603)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 32)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{!103, !4598, !102, !330, !4215}
!4606 = !{!4607, !4608, !4609, !4610, !4611, !4612, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625}
!4607 = !DILocalVariable(name: "out", arg: 1, scope: !4595, file: !767, line: 827, type: !4598)
!4608 = !DILocalVariable(name: "formatter", arg: 2, scope: !4595, file: !767, line: 828, type: !4602)
!4609 = !DILocalVariable(name: "ctx", arg: 3, scope: !4595, file: !767, line: 829, type: !102)
!4610 = !DILocalVariable(name: "packaged", arg: 4, scope: !4595, file: !767, line: 829, type: !102)
!4611 = !DILocalVariable(name: "buf", scope: !4595, file: !767, line: 831, type: !765)
!4612 = !DILocalVariable(name: "hdr", scope: !4595, file: !767, line: 832, type: !4613)
!4613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4614, size: 32)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4248, line: 96, size: 64, elements: !4615)
!4615 = !{!4616, !4617}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4614, file: !4248, line: 98, baseType: !4247, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4614, file: !4248, line: 101, baseType: !157, size: 32, offset: 32)
!4618 = !DILocalVariable(name: "s", scope: !4595, file: !767, line: 833, type: !157)
!4619 = !DILocalVariable(name: "ps", scope: !4595, file: !767, line: 833, type: !764)
!4620 = !DILocalVariable(name: "i", scope: !4595, file: !767, line: 834, type: !32)
!4621 = !DILocalVariable(name: "args_size", scope: !4595, file: !767, line: 834, type: !32)
!4622 = !DILocalVariable(name: "s_nbr", scope: !4595, file: !767, line: 834, type: !32)
!4623 = !DILocalVariable(name: "ros_nbr", scope: !4595, file: !767, line: 834, type: !32)
!4624 = !DILocalVariable(name: "rws_nbr", scope: !4595, file: !767, line: 834, type: !32)
!4625 = !DILocalVariable(name: "s_idx", scope: !4595, file: !767, line: 834, type: !32)
!4626 = !DILocation(line: 0, scope: !4595)
!4627 = !DILocation(line: 836, column: 10, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4595, file: !767, line: 836, column: 6)
!4629 = !DILocation(line: 836, column: 6, scope: !4595)
!4630 = !DILocation(line: 842, column: 28, scope: !4595)
!4631 = !DILocation(line: 842, column: 14, scope: !4595)
!4632 = !DILocation(line: 852, column: 16, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !767, line: 852, column: 2)
!4634 = distinct !DILexicalBlock(scope: !4595, file: !767, line: 852, column: 2)
!4635 = !DILocation(line: 852, column: 2, scope: !4634)
!4636 = !DILocation(line: 841, column: 28, scope: !4595)
!4637 = !DILocation(line: 841, column: 14, scope: !4595)
!4638 = !DILocation(line: 841, column: 32, scope: !4595)
!4639 = !DILocation(line: 847, column: 19, scope: !4595)
!4640 = !DILocation(line: 843, column: 28, scope: !4595)
!4641 = !DILocation(line: 843, column: 14, scope: !4595)
!4642 = !DILocation(line: 847, column: 31, scope: !4595)
!4643 = !DILocation(line: 844, column: 28, scope: !4595)
!4644 = !DILocation(line: 844, column: 14, scope: !4595)
!4645 = !DILocation(line: 847, column: 45, scope: !4595)
!4646 = !DILocation(line: 847, column: 41, scope: !4595)
!4647 = !DILocation(line: 854, column: 24, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4633, file: !767, line: 852, column: 30)
!4649 = !DILocation(line: 854, column: 11, scope: !4648)
!4650 = !DILocation(line: 855, column: 30, scope: !4648)
!4651 = !DILocation(line: 855, column: 22, scope: !4648)
!4652 = !DILocation(line: 855, column: 8, scope: !4648)
!4653 = !DILocation(line: 857, column: 7, scope: !4648)
!4654 = !DILocation(line: 859, column: 8, scope: !4648)
!4655 = !DILocation(line: 859, column: 18, scope: !4648)
!4656 = !DILocation(line: 859, column: 5, scope: !4648)
!4657 = !DILocation(line: 852, column: 26, scope: !4633)
!4658 = distinct !{!4658, !4635, !4659}
!4659 = !DILocation(line: 860, column: 2, scope: !4634)
!4660 = !DILocation(line: 863, column: 6, scope: !4595)
!4661 = !DILocation(line: 866, column: 56, scope: !4595)
!4662 = !DILocation(line: 866, column: 9, scope: !4595)
!4663 = !DILocation(line: 866, column: 2, scope: !4595)
!4664 = !DILocation(line: 867, column: 1, scope: !4595)
!4665 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !767, file: !767, line: 179, type: !4666, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4668)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!103, !4598, !4602, !102, !330, !102}
!4668 = !{!4669, !4670, !4671, !4672, !4673, !4674}
!4669 = !DILocalVariable(name: "out", arg: 1, scope: !4665, file: !767, line: 179, type: !4598)
!4670 = !DILocalVariable(name: "formatter", arg: 2, scope: !4665, file: !767, line: 180, type: !4602)
!4671 = !DILocalVariable(name: "ctx", arg: 3, scope: !4665, file: !767, line: 181, type: !102)
!4672 = !DILocalVariable(name: "fmt", arg: 4, scope: !4665, file: !767, line: 182, type: !330)
!4673 = !DILocalVariable(name: "buf", arg: 5, scope: !4665, file: !767, line: 182, type: !102)
!4674 = !DILocalVariable(name: "u", scope: !4665, file: !767, line: 187, type: !4675)
!4675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4665, file: !767, line: 184, size: 32, elements: !4676)
!4676 = !{!4677, !4678}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4675, file: !767, line: 185, baseType: !4215, size: 32)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4675, file: !767, line: 186, baseType: !102, size: 32)
!4679 = !DILocation(line: 0, scope: !4665)
!4680 = !DILocation(line: 191, column: 9, scope: !4665)
!4681 = !DILocation(line: 191, column: 2, scope: !4665)
!4682 = distinct !DISubprogram(name: "is_ptr", scope: !767, file: !767, line: 881, type: !4683, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4685)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!119, !330, !103}
!4685 = !{!4686, !4687, !4688, !4689, !4690}
!4686 = !DILocalVariable(name: "fmt", arg: 1, scope: !4682, file: !767, line: 881, type: !330)
!4687 = !DILocalVariable(name: "n", arg: 2, scope: !4682, file: !767, line: 881, type: !103)
!4688 = !DILocalVariable(name: "c", scope: !4682, file: !767, line: 883, type: !158)
!4689 = !DILocalVariable(name: "mod", scope: !4682, file: !767, line: 884, type: !119)
!4690 = !DILocalVariable(name: "cnt", scope: !4682, file: !767, line: 885, type: !103)
!4691 = !DILocation(line: 0, scope: !4682)
!4692 = !DILocation(line: 887, column: 14, scope: !4682)
!4693 = !DILocation(line: 887, column: 22, scope: !4682)
!4694 = !DILocation(line: 887, column: 2, scope: !4682)
!4695 = !DILocation(line: 887, column: 18, scope: !4682)
!4696 = !DILocation(line: 888, column: 7, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4682, file: !767, line: 887, column: 31)
!4698 = !DILocation(line: 889, column: 12, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !767, line: 889, column: 8)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !767, line: 888, column: 12)
!4701 = distinct !DILexicalBlock(scope: !4697, file: !767, line: 888, column: 7)
!4702 = !DILocation(line: 889, column: 8, scope: !4700)
!4703 = !DILocation(line: 890, column: 11, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !767, line: 890, column: 9)
!4705 = distinct !DILexicalBlock(scope: !4699, file: !767, line: 889, column: 18)
!4706 = !DILocation(line: 890, column: 9, scope: !4705)
!4707 = !DILocation(line: 892, column: 16, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4704, file: !767, line: 892, column: 16)
!4709 = !DILocation(line: 892, column: 16, scope: !4704)
!4710 = !DILocation(line: 895, column: 15, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4699, file: !767, line: 895, column: 15)
!4712 = !DILocation(line: 895, column: 15, scope: !4699)
!4713 = !DILocation(line: 900, column: 9, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4697, file: !767, line: 900, column: 7)
!4715 = !DILocation(line: 900, column: 7, scope: !4697)
!4716 = distinct !{!4716, !4694, !4717}
!4717 = !DILocation(line: 903, column: 2, scope: !4682)
!4718 = !DILocation(line: 906, column: 1, scope: !4682)
!4719 = distinct !DISubprogram(name: "is_fmt_spec", scope: !767, file: !767, line: 873, type: !4720, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4722)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{!119, !158}
!4722 = !{!4723}
!4723 = !DILocalVariable(name: "c", arg: 1, scope: !4719, file: !767, line: 873, type: !158)
!4724 = !DILocation(line: 0, scope: !4719)
!4725 = !DILocation(line: 875, column: 19, scope: !4719)
!4726 = !DILocation(line: 875, column: 2, scope: !4719)
!4727 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !767, file: !767, line: 908, type: !4728, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !4734)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!103, !102, !153, !4730, !102, !108, !3173, !153}
!4730 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4248, line: 308, baseType: !4731)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 32)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!103, !13, !153, !102}
!4734 = !{!4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4752, !4753, !4754, !4755, !4756, !4762, !4765, !4766, !4767, !4769, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4785, !4788, !4789, !4790, !4791, !4792, !4793, !4795, !4798, !4799, !4800}
!4735 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4727, file: !767, line: 908, type: !102)
!4736 = !DILocalVariable(name: "in_len", arg: 2, scope: !4727, file: !767, line: 909, type: !153)
!4737 = !DILocalVariable(name: "cb", arg: 3, scope: !4727, file: !767, line: 910, type: !4730)
!4738 = !DILocalVariable(name: "ctx", arg: 4, scope: !4727, file: !767, line: 911, type: !102)
!4739 = !DILocalVariable(name: "flags", arg: 5, scope: !4727, file: !767, line: 912, type: !108)
!4740 = !DILocalVariable(name: "strl", arg: 6, scope: !4727, file: !767, line: 913, type: !3173)
!4741 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4727, file: !767, line: 914, type: !153)
!4742 = !DILocalVariable(name: "buf", scope: !4727, file: !767, line: 918, type: !765)
!4743 = !DILocalVariable(name: "buf32", scope: !4727, file: !767, line: 919, type: !2102)
!4744 = !DILocalVariable(name: "args_size", scope: !4727, file: !767, line: 920, type: !32)
!4745 = !DILocalVariable(name: "ros_nbr", scope: !4727, file: !767, line: 920, type: !32)
!4746 = !DILocalVariable(name: "rws_nbr", scope: !4727, file: !767, line: 920, type: !32)
!4747 = !DILocalVariable(name: "fmt_present", scope: !4727, file: !767, line: 921, type: !119)
!4748 = !DILocalVariable(name: "rw_cpy", scope: !4727, file: !767, line: 922, type: !119)
!4749 = !DILocalVariable(name: "ro_cpy", scope: !4727, file: !767, line: 923, type: !119)
!4750 = !DILocalVariable(name: "in_desc", scope: !4727, file: !767, line: 924, type: !4751)
!4751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 32)
!4752 = !DILocalVariable(name: "out_len", scope: !4727, file: !767, line: 960, type: !103)
!4753 = !DILocalVariable(name: "fmt", scope: !4727, file: !767, line: 965, type: !330)
!4754 = !DILocalVariable(name: "str_pos", scope: !4727, file: !767, line: 966, type: !765)
!4755 = !DILocalVariable(name: "strl_cnt", scope: !4727, file: !767, line: 967, type: !153)
!4756 = !DILocalVariable(name: "i", scope: !4757, file: !767, line: 973, type: !103)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !767, line: 973, column: 4)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !767, line: 972, column: 15)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !767, line: 972, column: 7)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !767, line: 970, column: 18)
!4761 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 970, column: 6)
!4762 = !DILocalVariable(name: "str", scope: !4763, file: !767, line: 974, type: !330)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !767, line: 973, column: 38)
!4764 = distinct !DILexicalBlock(scope: !4757, file: !767, line: 973, column: 4)
!4765 = !DILocalVariable(name: "len", scope: !4763, file: !767, line: 975, type: !103)
!4766 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4760, file: !767, line: 990, type: !119)
!4767 = !DILocalVariable(name: "i", scope: !4768, file: !767, line: 995, type: !103)
!4768 = distinct !DILexicalBlock(scope: !4760, file: !767, line: 995, column: 3)
!4769 = !DILocalVariable(name: "arg_idx", scope: !4770, file: !767, line: 996, type: !164)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !767, line: 995, column: 37)
!4771 = distinct !DILexicalBlock(scope: !4768, file: !767, line: 995, column: 3)
!4772 = !DILocalVariable(name: "arg_pos", scope: !4770, file: !767, line: 997, type: !164)
!4773 = !DILocalVariable(name: "str", scope: !4770, file: !767, line: 998, type: !330)
!4774 = !DILocalVariable(name: "is_ro", scope: !4770, file: !767, line: 999, type: !119)
!4775 = !DILocalVariable(name: "len", scope: !4770, file: !767, line: 1000, type: !103)
!4776 = !DILocalVariable(name: "out_desc", scope: !4727, file: !767, line: 1038, type: !4251)
!4777 = !DILocalVariable(name: "cpy_str_pos", scope: !4727, file: !767, line: 1040, type: !4233)
!4778 = !DILocalVariable(name: "keep_str_pos", scope: !4727, file: !767, line: 1042, type: !4233)
!4779 = !DILocalVariable(name: "scpy_cnt", scope: !4727, file: !767, line: 1043, type: !164)
!4780 = !DILocalVariable(name: "keep_cnt", scope: !4727, file: !767, line: 1044, type: !164)
!4781 = !DILocalVariable(name: "dst", scope: !4727, file: !767, line: 1045, type: !765)
!4782 = !DILocalVariable(name: "rv", scope: !4727, file: !767, line: 1046, type: !103)
!4783 = !DILocalVariable(name: "i", scope: !4784, file: !767, line: 1074, type: !103)
!4784 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 1074, column: 2)
!4785 = !DILocalVariable(name: "arg_idx", scope: !4786, file: !767, line: 1075, type: !164)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !767, line: 1074, column: 36)
!4787 = distinct !DILexicalBlock(scope: !4784, file: !767, line: 1074, column: 2)
!4788 = !DILocalVariable(name: "arg_pos", scope: !4786, file: !767, line: 1076, type: !164)
!4789 = !DILocalVariable(name: "str", scope: !4786, file: !767, line: 1077, type: !330)
!4790 = !DILocalVariable(name: "is_ro", scope: !4786, file: !767, line: 1078, type: !119)
!4791 = !DILocalVariable(name: "in_desc_backup", scope: !4727, file: !767, line: 1114, type: !4251)
!4792 = !DILocalVariable(name: "strs_len", scope: !4727, file: !767, line: 1134, type: !153)
!4793 = !DILocalVariable(name: "i", scope: !4794, file: !767, line: 1143, type: !103)
!4794 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 1143, column: 2)
!4795 = !DILocalVariable(name: "loc", scope: !4796, file: !767, line: 1144, type: !164)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !767, line: 1143, column: 37)
!4797 = distinct !DILexicalBlock(scope: !4794, file: !767, line: 1143, column: 2)
!4798 = !DILocalVariable(name: "str", scope: !4796, file: !767, line: 1145, type: !330)
!4799 = !DILocalVariable(name: "str_len", scope: !4796, file: !767, line: 1146, type: !177)
!4800 = !DILabel(scope: !4801, name: "calculate_string_length", file: !767, line: 1021)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !767, line: 1020, column: 56)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !767, line: 1020, column: 15)
!4803 = distinct !DILexicalBlock(scope: !4770, file: !767, line: 1014, column: 8)
!4804 = !DILocation(line: 0, scope: !4727)
!4805 = !DILocation(line: 916, column: 2, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !767, line: 916, column: 2)
!4807 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 916, column: 2)
!4808 = !DILocation(line: 916, column: 2, scope: !4807)
!4809 = !DILocation(line: 916, column: 2, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4806, file: !767, line: 916, column: 2)
!4811 = !DILocation(line: 919, column: 20, scope: !4727)
!4812 = !DILocation(line: 921, column: 27, scope: !4727)
!4813 = !DILocation(line: 921, column: 21, scope: !4727)
!4814 = !DILocation(line: 926, column: 18, scope: !4727)
!4815 = !DILocation(line: 926, column: 11, scope: !4727)
!4816 = !DILocation(line: 926, column: 34, scope: !4727)
!4817 = !DILocation(line: 931, column: 21, scope: !4727)
!4818 = !DILocation(line: 931, column: 12, scope: !4727)
!4819 = !DILocation(line: 932, column: 11, scope: !4727)
!4820 = !DILocation(line: 932, column: 19, scope: !4727)
!4821 = !DILocation(line: 938, column: 21, scope: !4727)
!4822 = !DILocation(line: 938, column: 12, scope: !4727)
!4823 = !DILocation(line: 939, column: 19, scope: !4727)
!4824 = !DILocation(line: 939, column: 23, scope: !4727)
!4825 = !DILocation(line: 946, column: 14, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 946, column: 6)
!4827 = !DILocation(line: 947, column: 7, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !767, line: 947, column: 7)
!4829 = distinct !DILexicalBlock(scope: !4826, file: !767, line: 946, column: 26)
!4830 = !DILocation(line: 947, column: 7, scope: !4829)
!4831 = !DILocation(line: 948, column: 4, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4828, file: !767, line: 947, column: 11)
!4833 = !DILocation(line: 949, column: 3, scope: !4832)
!4834 = !DILocation(line: 958, column: 23, scope: !4727)
!4835 = !DILocation(line: 958, column: 14, scope: !4727)
!4836 = !DILocation(line: 958, column: 27, scope: !4727)
!4837 = !DILocation(line: 965, column: 41, scope: !4727)
!4838 = !DILocation(line: 965, column: 20, scope: !4727)
!4839 = !DILocation(line: 966, column: 22, scope: !4727)
!4840 = !DILocation(line: 970, column: 9, scope: !4761)
!4841 = !DILocation(line: 970, column: 6, scope: !4727)
!4842 = !DILocation(line: 972, column: 7, scope: !4760)
!4843 = !DILocation(line: 0, scope: !4757)
!4844 = !DILocation(line: 973, column: 4, scope: !4757)
!4845 = !DILocation(line: 974, column: 46, scope: !4763)
!4846 = !DILocation(line: 974, column: 40, scope: !4763)
!4847 = !DILocation(line: 974, column: 23, scope: !4763)
!4848 = !DILocation(line: 0, scope: !4763)
!4849 = !DILocation(line: 975, column: 15, scope: !4763)
!4850 = !DILocation(line: 978, column: 14, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4763, file: !767, line: 978, column: 9)
!4852 = !DILocation(line: 979, column: 25, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4851, file: !767, line: 978, column: 38)
!4854 = !DILocation(line: 979, column: 19, scope: !4853)
!4855 = !DILocation(line: 979, column: 6, scope: !4853)
!4856 = !DILocation(line: 979, column: 23, scope: !4853)
!4857 = !DILocation(line: 980, column: 5, scope: !4853)
!4858 = !DILocation(line: 981, column: 13, scope: !4763)
!4859 = !DILocation(line: 982, column: 12, scope: !4763)
!4860 = !DILocation(line: 973, column: 34, scope: !4764)
!4861 = !DILocation(line: 973, column: 22, scope: !4764)
!4862 = distinct !{!4862, !4844, !4863}
!4863 = !DILocation(line: 983, column: 4, scope: !4757)
!4864 = !DILocation(line: 985, column: 16, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !767, line: 985, column: 8)
!4866 = distinct !DILexicalBlock(scope: !4759, file: !767, line: 984, column: 10)
!4867 = !DILocation(line: 967, column: 9, scope: !4727)
!4868 = !DILocation(line: 971, column: 11, scope: !4760)
!4869 = !DILocation(line: 0, scope: !4760)
!4870 = !DILocation(line: 0, scope: !4768)
!4871 = !DILocation(line: 995, column: 21, scope: !4771)
!4872 = !DILocation(line: 995, column: 3, scope: !4768)
!4873 = !DILocation(line: 990, column: 34, scope: !4760)
!4874 = !DILocation(line: 990, column: 26, scope: !4760)
!4875 = !DILocation(line: 996, column: 30, scope: !4770)
!4876 = !DILocation(line: 0, scope: !4770)
!4877 = !DILocation(line: 997, column: 30, scope: !4770)
!4878 = !DILocation(line: 997, column: 22, scope: !4770)
!4879 = !DILocation(line: 998, column: 39, scope: !4770)
!4880 = !DILocation(line: 998, column: 22, scope: !4770)
!4881 = !DILocation(line: 999, column: 17, scope: !4770)
!4882 = !DILocation(line: 1002, column: 20, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4770, file: !767, line: 1002, column: 8)
!4884 = !DILocation(line: 996, column: 22, scope: !4770)
!4885 = !DILocation(line: 1002, column: 35, scope: !4883)
!4886 = !DILocation(line: 1002, column: 23, scope: !4883)
!4887 = !DILocation(line: 1002, column: 8, scope: !4770)
!4888 = !DILocation(line: 1003, column: 5, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !767, line: 1003, column: 5)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !767, line: 1003, column: 5)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !767, line: 1003, column: 5)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !767, line: 1003, column: 5)
!4893 = distinct !DILexicalBlock(scope: !4883, file: !767, line: 1002, column: 45)
!4894 = !DILocation(line: 1010, column: 13, scope: !4893)
!4895 = !DILocation(line: 1011, column: 5, scope: !4893)
!4896 = !DILocation(line: 1014, column: 8, scope: !4770)
!4897 = !DILocation(line: 1015, column: 9, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4803, file: !767, line: 1014, column: 15)
!4899 = !DILocation(line: 1018, column: 14, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !767, line: 1017, column: 12)
!4901 = distinct !DILexicalBlock(scope: !4898, file: !767, line: 1015, column: 9)
!4902 = !DILocation(line: 1020, column: 4, scope: !4898)
!4903 = !DILocation(line: 1020, column: 15, scope: !4803)
!4904 = !DILocation(line: 1021, column: 1, scope: !4801)
!4905 = !DILocation(line: 1022, column: 11, scope: !4801)
!4906 = !DILocation(line: 1025, column: 14, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4801, file: !767, line: 1025, column: 9)
!4908 = !DILocation(line: 1026, column: 25, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4907, file: !767, line: 1025, column: 38)
!4910 = !DILocation(line: 1026, column: 19, scope: !4909)
!4911 = !DILocation(line: 1026, column: 6, scope: !4909)
!4912 = !DILocation(line: 1026, column: 23, scope: !4909)
!4913 = !DILocation(line: 1027, column: 5, scope: !4909)
!4914 = !DILocation(line: 1031, column: 21, scope: !4801)
!4915 = !DILocation(line: 1031, column: 13, scope: !4801)
!4916 = !DILocation(line: 1032, column: 4, scope: !4801)
!4917 = !DILocation(line: 995, column: 33, scope: !4771)
!4918 = distinct !{!4918, !4872, !4919}
!4919 = !DILocation(line: 1033, column: 3, scope: !4768)
!4920 = !DILocation(line: 1040, column: 10, scope: !4727)
!4921 = !DILocation(line: 1042, column: 10, scope: !4727)
!4922 = !DILocation(line: 1052, column: 6, scope: !4727)
!4923 = !DILocation(line: 1055, column: 9, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !767, line: 1052, column: 14)
!4925 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 1052, column: 6)
!4926 = !DILocation(line: 1056, column: 2, scope: !4924)
!4927 = !DILocation(line: 1056, column: 21, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4925, file: !767, line: 1056, column: 13)
!4929 = !DILocation(line: 1066, column: 3, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !767, line: 1065, column: 11)
!4931 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 1065, column: 6)
!4932 = !DILocation(line: 1067, column: 2, scope: !4930)
!4933 = !DILocation(line: 1068, column: 10, scope: !4727)
!4934 = !DILocation(line: 0, scope: !4784)
!4935 = !DILocation(line: 1074, column: 20, scope: !4787)
!4936 = !DILocation(line: 1074, column: 2, scope: !4784)
!4937 = !DILocation(line: 1110, column: 24, scope: !4727)
!4938 = !DILocation(line: 1053, column: 12, scope: !4924)
!4939 = !DILocation(line: 1054, column: 12, scope: !4924)
!4940 = !DILocation(line: 1108, column: 30, scope: !4727)
!4941 = !DILocation(line: 1108, column: 40, scope: !4727)
!4942 = !DILocation(line: 1108, column: 38, scope: !4727)
!4943 = !DILocation(line: 1109, column: 31, scope: !4727)
!4944 = !DILocation(line: 1109, column: 24, scope: !4727)
!4945 = !DILocation(line: 1110, column: 31, scope: !4727)
!4946 = !DILocation(line: 1114, column: 31, scope: !4727)
!4947 = !DILocation(line: 1114, column: 48, scope: !4727)
!4948 = !DILocation(line: 1115, column: 13, scope: !4727)
!4949 = !DILocation(line: 1118, column: 7, scope: !4727)
!4950 = !DILocation(line: 1119, column: 9, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 1119, column: 6)
!4952 = !DILocation(line: 1119, column: 6, scope: !4727)
!4953 = !DILocation(line: 1075, column: 29, scope: !4786)
!4954 = !DILocation(line: 1075, column: 21, scope: !4786)
!4955 = !DILocation(line: 0, scope: !4786)
!4956 = !DILocation(line: 1076, column: 29, scope: !4786)
!4957 = !DILocation(line: 1076, column: 21, scope: !4786)
!4958 = !DILocation(line: 1077, column: 38, scope: !4786)
!4959 = !DILocation(line: 1077, column: 21, scope: !4786)
!4960 = !DILocation(line: 1078, column: 16, scope: !4786)
!4961 = !DILocation(line: 1080, column: 19, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4786, file: !767, line: 1080, column: 7)
!4963 = !DILocation(line: 1080, column: 34, scope: !4962)
!4964 = !DILocation(line: 1080, column: 22, scope: !4962)
!4965 = !DILocation(line: 1080, column: 7, scope: !4786)
!4966 = !DILocation(line: 1084, column: 7, scope: !4786)
!4967 = !DILocation(line: 1085, column: 8, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !767, line: 1084, column: 14)
!4969 = distinct !DILexicalBlock(scope: !4786, file: !767, line: 1084, column: 7)
!4970 = !DILocation(line: 1086, column: 5, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !767, line: 1086, column: 5)
!4972 = distinct !DILexicalBlock(scope: !4973, file: !767, line: 1086, column: 5)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !767, line: 1085, column: 49)
!4974 = distinct !DILexicalBlock(scope: !4968, file: !767, line: 1085, column: 8)
!4975 = !DILocation(line: 1086, column: 5, scope: !4972)
!4976 = !DILocation(line: 1086, column: 5, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4971, file: !767, line: 1086, column: 5)
!4978 = !DILocation(line: 1087, column: 25, scope: !4973)
!4979 = !DILocation(line: 1087, column: 5, scope: !4973)
!4980 = !DILocation(line: 1088, column: 4, scope: !4973)
!4981 = !DILocation(line: 1088, column: 15, scope: !4974)
!4982 = !DILocation(line: 1089, column: 5, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !767, line: 1089, column: 5)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !767, line: 1089, column: 5)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !767, line: 1088, column: 61)
!4986 = distinct !DILexicalBlock(scope: !4974, file: !767, line: 1088, column: 15)
!4987 = !DILocation(line: 1089, column: 5, scope: !4984)
!4988 = !DILocation(line: 1089, column: 5, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4983, file: !767, line: 1089, column: 5)
!4990 = !DILocation(line: 1090, column: 26, scope: !4985)
!4991 = !DILocation(line: 1090, column: 5, scope: !4985)
!4992 = !DILocation(line: 1091, column: 4, scope: !4985)
!4993 = !DILocation(line: 1095, column: 8, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4969, file: !767, line: 1094, column: 10)
!4995 = !DILocation(line: 1096, column: 5, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !767, line: 1096, column: 5)
!4997 = distinct !DILexicalBlock(scope: !4998, file: !767, line: 1096, column: 5)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !767, line: 1095, column: 49)
!4999 = distinct !DILexicalBlock(scope: !4994, file: !767, line: 1095, column: 8)
!5000 = !DILocation(line: 1096, column: 5, scope: !4997)
!5001 = !DILocation(line: 1096, column: 5, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !767, line: 1096, column: 5)
!5003 = !DILocation(line: 1097, column: 25, scope: !4998)
!5004 = !DILocation(line: 1097, column: 5, scope: !4998)
!5005 = !DILocation(line: 1098, column: 4, scope: !4998)
!5006 = !DILocation(line: 1099, column: 5, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !767, line: 1099, column: 5)
!5008 = distinct !DILexicalBlock(scope: !5009, file: !767, line: 1099, column: 5)
!5009 = distinct !DILexicalBlock(scope: !4999, file: !767, line: 1098, column: 11)
!5010 = !DILocation(line: 1099, column: 5, scope: !5008)
!5011 = !DILocation(line: 1099, column: 5, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5007, file: !767, line: 1099, column: 5)
!5013 = !DILocation(line: 1100, column: 26, scope: !5009)
!5014 = !DILocation(line: 1100, column: 5, scope: !5009)
!5015 = !DILocation(line: 1100, column: 30, scope: !5009)
!5016 = !DILocation(line: 1101, column: 26, scope: !5009)
!5017 = !DILocation(line: 1101, column: 5, scope: !5009)
!5018 = !DILocation(line: 0, scope: !4969)
!5019 = !DILocation(line: 1074, column: 32, scope: !4787)
!5020 = distinct !{!5020, !4936, !5021}
!5021 = !DILocation(line: 1104, column: 2, scope: !4784)
!5022 = !DILocation(line: 1124, column: 13, scope: !4727)
!5023 = !DILocation(line: 1127, column: 10, scope: !4727)
!5024 = !DILocation(line: 1127, column: 7, scope: !4727)
!5025 = !DILocation(line: 1128, column: 9, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 1128, column: 6)
!5027 = !DILocation(line: 1128, column: 6, scope: !4727)
!5028 = !DILocation(line: 1134, column: 27, scope: !4727)
!5029 = !DILocation(line: 1136, column: 7, scope: !4727)
!5030 = !DILocation(line: 1137, column: 9, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4727, file: !767, line: 1137, column: 6)
!5032 = !DILocation(line: 1137, column: 6, scope: !4727)
!5033 = !DILocation(line: 1131, column: 10, scope: !4727)
!5034 = !DILocation(line: 1140, column: 10, scope: !4727)
!5035 = !DILocation(line: 0, scope: !4794)
!5036 = !DILocation(line: 1143, column: 20, scope: !4797)
!5037 = !DILocation(line: 1143, column: 2, scope: !4794)
!5038 = !DILocation(line: 1144, column: 3, scope: !4796)
!5039 = !DILocation(line: 1144, column: 17, scope: !4796)
!5040 = !DILocation(line: 0, scope: !4796)
!5041 = !DILocation(line: 1144, column: 11, scope: !4796)
!5042 = !DILocation(line: 1145, column: 38, scope: !4796)
!5043 = !DILocation(line: 1145, column: 21, scope: !4796)
!5044 = !DILocation(line: 1146, column: 22, scope: !4796)
!5045 = !DILocation(line: 1146, column: 29, scope: !4796)
!5046 = !DILocation(line: 1148, column: 8, scope: !4796)
!5047 = !DILocation(line: 1149, column: 10, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4796, file: !767, line: 1149, column: 7)
!5049 = !DILocation(line: 1149, column: 7, scope: !4796)
!5050 = !DILocation(line: 1154, column: 8, scope: !4796)
!5051 = !DILocation(line: 1155, column: 10, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4796, file: !767, line: 1155, column: 7)
!5053 = !DILocation(line: 1155, column: 7, scope: !4796)
!5054 = !DILocation(line: 1159, column: 2, scope: !4797)
!5055 = !DILocation(line: 1152, column: 11, scope: !4796)
!5056 = !DILocation(line: 1158, column: 11, scope: !4796)
!5057 = !DILocation(line: 1143, column: 33, scope: !4797)
!5058 = distinct !{!5058, !5037, !5059}
!5059 = !DILocation(line: 1159, column: 2, scope: !4794)
!5060 = !DILocation(line: 1162, column: 8, scope: !4727)
!5061 = !DILocation(line: 1164, column: 2, scope: !4727)
!5062 = !DILocation(line: 1165, column: 1, scope: !4727)
!5063 = distinct !DISubprogram(name: "get_package_len", scope: !767, file: !767, line: 196, type: !5064, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!153, !102}
!5066 = !{!5067, !5068, !5069, !5070, !5071, !5072, !5073}
!5067 = !DILocalVariable(name: "packaged", arg: 1, scope: !5063, file: !767, line: 196, type: !102)
!5068 = !DILocalVariable(name: "buf", scope: !5063, file: !767, line: 200, type: !765)
!5069 = !DILocalVariable(name: "start", scope: !5063, file: !767, line: 201, type: !765)
!5070 = !DILocalVariable(name: "args_size", scope: !5063, file: !767, line: 202, type: !32)
!5071 = !DILocalVariable(name: "s_nbr", scope: !5063, file: !767, line: 202, type: !32)
!5072 = !DILocalVariable(name: "ros_nbr", scope: !5063, file: !767, line: 202, type: !32)
!5073 = !DILocalVariable(name: "i", scope: !5074, file: !767, line: 215, type: !103)
!5074 = distinct !DILexicalBlock(scope: !5063, file: !767, line: 215, column: 2)
!5075 = !DILocation(line: 0, scope: !5063)
!5076 = !DILocation(line: 198, column: 2, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !767, line: 198, column: 2)
!5078 = distinct !DILexicalBlock(scope: !5063, file: !767, line: 198, column: 2)
!5079 = !DILocation(line: 198, column: 2, scope: !5078)
!5080 = !DILocation(line: 198, column: 2, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5077, file: !767, line: 198, column: 2)
!5082 = !DILocation(line: 204, column: 14, scope: !5063)
!5083 = !DILocation(line: 204, column: 21, scope: !5063)
!5084 = !DILocation(line: 205, column: 14, scope: !5063)
!5085 = !DILocation(line: 206, column: 14, scope: !5063)
!5086 = !DILocation(line: 209, column: 6, scope: !5063)
!5087 = !DILocation(line: 212, column: 6, scope: !5063)
!5088 = !DILocation(line: 0, scope: !5074)
!5089 = !DILocation(line: 215, column: 20, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5074, file: !767, line: 215, column: 2)
!5091 = !DILocation(line: 215, column: 2, scope: !5074)
!5092 = !DILocation(line: 220, column: 33, scope: !5063)
!5093 = !DILocation(line: 220, column: 2, scope: !5063)
!5094 = !DILocation(line: 216, column: 6, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5090, file: !767, line: 215, column: 34)
!5096 = !DILocation(line: 217, column: 10, scope: !5095)
!5097 = !DILocation(line: 217, column: 36, scope: !5095)
!5098 = !DILocation(line: 217, column: 7, scope: !5095)
!5099 = !DILocation(line: 215, column: 30, scope: !5090)
!5100 = distinct !{!5100, !5091, !5101}
!5101 = !DILocation(line: 218, column: 2, scope: !5074)
!5102 = distinct !DISubprogram(name: "append_string", scope: !767, file: !767, line: 223, type: !5103, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !752, retainedNodes: !5105)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!103, !4730, !102, !330, !177}
!5105 = !{!5106, !5107, !5108, !5109}
!5106 = !DILocalVariable(name: "cb", arg: 1, scope: !5102, file: !767, line: 223, type: !4730)
!5107 = !DILocalVariable(name: "ctx", arg: 2, scope: !5102, file: !767, line: 223, type: !102)
!5108 = !DILocalVariable(name: "str", arg: 3, scope: !5102, file: !767, line: 223, type: !330)
!5109 = !DILocalVariable(name: "strl", arg: 4, scope: !5102, file: !767, line: 223, type: !177)
!5110 = !DILocation(line: 0, scope: !5102)
!5111 = !DILocation(line: 225, column: 9, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5102, file: !767, line: 225, column: 6)
!5113 = !DILocation(line: 225, column: 6, scope: !5102)
!5114 = !DILocation(line: 226, column: 14, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5112, file: !767, line: 225, column: 18)
!5116 = !DILocation(line: 226, column: 12, scope: !5115)
!5117 = !DILocation(line: 226, column: 3, scope: !5115)
!5118 = !DILocation(line: 229, column: 14, scope: !5102)
!5119 = !DILocation(line: 229, column: 9, scope: !5102)
!5120 = !DILocation(line: 229, column: 27, scope: !5102)
!5121 = !DILocation(line: 229, column: 39, scope: !5102)
!5122 = !DILocation(line: 230, column: 17, scope: !5102)
!5123 = !DILocation(line: 230, column: 9, scope: !5102)
!5124 = !DILocation(line: 230, column: 2, scope: !5102)
!5125 = !DILocation(line: 231, column: 1, scope: !5102)
!5126 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !780, file: !780, line: 45, type: !782, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5127)
!5127 = !{!5128}
!5128 = !DILocalVariable(name: "c", arg: 1, scope: !5126, file: !780, line: 45, type: !103)
!5129 = !DILocation(line: 0, scope: !5126)
!5130 = !DILocation(line: 50, column: 2, scope: !5126)
!5131 = distinct !DISubprogram(name: "__printk_hook_install", scope: !780, file: !780, line: 63, type: !5132, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5134)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{null, !781}
!5134 = !{!5135}
!5135 = !DILocalVariable(name: "fn", arg: 1, scope: !5131, file: !780, line: 63, type: !781)
!5136 = !DILocation(line: 0, scope: !5131)
!5137 = !DILocation(line: 65, column: 12, scope: !5131)
!5138 = !DILocation(line: 66, column: 1, scope: !5131)
!5139 = distinct !DISubprogram(name: "__printk_get_hook", scope: !780, file: !780, line: 76, type: !5140, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !2645)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!102}
!5142 = !DILocation(line: 78, column: 9, scope: !5139)
!5143 = !DILocation(line: 78, column: 2, scope: !5139)
!5144 = distinct !DISubprogram(name: "vprintk", scope: !780, file: !780, line: 113, type: !5145, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5153)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{null, !330, !5147}
!5147 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4216, line: 99, baseType: !5148)
!5148 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4216, line: 40, baseType: !5149)
!5149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !780, baseType: !5150)
!5150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5151)
!5151 = !{!5152}
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5150, file: !780, line: 79, baseType: !102, size: 32)
!5153 = !{!5154, !5155, !5156}
!5154 = !DILocalVariable(name: "fmt", arg: 1, scope: !5144, file: !780, line: 113, type: !330)
!5155 = !DILocalVariable(name: "ap", arg: 2, scope: !5144, file: !780, line: 113, type: !5147)
!5156 = !DILocalVariable(name: "ctx", scope: !5157, file: !780, line: 121, type: !5159)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !780, line: 120, column: 27)
!5158 = distinct !DILexicalBlock(scope: !5144, file: !780, line: 120, column: 6)
!5159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !780, line: 81, size: 32, elements: !5160)
!5160 = !{!5161, !5162}
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5159, file: !780, line: 85, baseType: !32, size: 32)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5159, file: !780, line: 86, baseType: !5163, offset: 32)
!5163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, elements: !3171)
!5164 = !DILocation(line: 0, scope: !5144)
!5165 = !DILocation(line: 148, column: 3, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5158, file: !780, line: 138, column: 9)
!5167 = !DILocation(line: 155, column: 1, scope: !5144)
!5168 = distinct !DISubprogram(name: "char_out", scope: !780, file: !780, line: 107, type: !5169, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5171)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{!103, !103, !102}
!5171 = !{!5172, !5173}
!5172 = !DILocalVariable(name: "c", arg: 1, scope: !5168, file: !780, line: 107, type: !103)
!5173 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5168, file: !780, line: 107, type: !102)
!5174 = !DILocation(line: 0, scope: !5168)
!5175 = !DILocation(line: 110, column: 9, scope: !5168)
!5176 = !DILocation(line: 110, column: 2, scope: !5168)
!5177 = distinct !DISubprogram(name: "cbvprintf", scope: !4248, file: !4248, line: 739, type: !5178, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5180)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!103, !4598, !102, !330, !5147}
!5180 = !{!5181, !5182, !5183, !5184}
!5181 = !DILocalVariable(name: "out", arg: 1, scope: !5177, file: !4248, line: 739, type: !4598)
!5182 = !DILocalVariable(name: "ctx", arg: 2, scope: !5177, file: !4248, line: 739, type: !102)
!5183 = !DILocalVariable(name: "format", arg: 3, scope: !5177, file: !4248, line: 739, type: !330)
!5184 = !DILocalVariable(name: "ap", arg: 4, scope: !5177, file: !4248, line: 739, type: !5147)
!5185 = !DILocation(line: 0, scope: !5177)
!5186 = !DILocation(line: 741, column: 9, scope: !5177)
!5187 = !DILocation(line: 741, column: 2, scope: !5177)
!5188 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !780, file: !780, line: 157, type: !5189, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5191)
!5189 = !DISubroutineType(types: !5190)
!5190 = !{null, !157, !153}
!5191 = !{!5192, !5193, !5194}
!5192 = !DILocalVariable(name: "c", arg: 1, scope: !5188, file: !780, line: 157, type: !157)
!5193 = !DILocalVariable(name: "n", arg: 2, scope: !5188, file: !780, line: 157, type: !153)
!5194 = !DILocalVariable(name: "i", scope: !5188, file: !780, line: 159, type: !153)
!5195 = !DILocation(line: 0, scope: !5188)
!5196 = !DILocation(line: 164, column: 16, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5198, file: !780, line: 164, column: 2)
!5198 = distinct !DILexicalBlock(scope: !5188, file: !780, line: 164, column: 2)
!5199 = !DILocation(line: 164, column: 2, scope: !5198)
!5200 = !DILocation(line: 165, column: 3, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !780, line: 164, column: 26)
!5202 = !DILocation(line: 165, column: 13, scope: !5201)
!5203 = !DILocation(line: 164, column: 22, scope: !5197)
!5204 = distinct !{!5204, !5199, !5205}
!5205 = !DILocation(line: 166, column: 2, scope: !5198)
!5206 = !DILocation(line: 171, column: 1, scope: !5188)
!5207 = distinct !DISubprogram(name: "printk", scope: !780, file: !780, line: 203, type: !5208, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5210)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{null, !330, null}
!5210 = !{!5211, !5212}
!5211 = !DILocalVariable(name: "fmt", arg: 1, scope: !5207, file: !780, line: 203, type: !330)
!5212 = !DILocalVariable(name: "ap", scope: !5207, file: !780, line: 205, type: !5147)
!5213 = !DILocation(line: 0, scope: !5207)
!5214 = !DILocation(line: 205, column: 2, scope: !5207)
!5215 = !DILocation(line: 205, column: 10, scope: !5207)
!5216 = !DILocation(line: 207, column: 2, scope: !5207)
!5217 = !DILocation(line: 209, column: 2, scope: !5207)
!5218 = !DILocation(line: 211, column: 2, scope: !5207)
!5219 = !DILocation(line: 212, column: 1, scope: !5207)
!5220 = distinct !DISubprogram(name: "snprintk", scope: !780, file: !780, line: 239, type: !5221, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5223)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{!103, !157, !153, !330, null}
!5223 = !{!5224, !5225, !5226, !5227, !5228}
!5224 = !DILocalVariable(name: "str", arg: 1, scope: !5220, file: !780, line: 239, type: !157)
!5225 = !DILocalVariable(name: "size", arg: 2, scope: !5220, file: !780, line: 239, type: !153)
!5226 = !DILocalVariable(name: "fmt", arg: 3, scope: !5220, file: !780, line: 239, type: !330)
!5227 = !DILocalVariable(name: "ap", scope: !5220, file: !780, line: 241, type: !5147)
!5228 = !DILocalVariable(name: "ret", scope: !5220, file: !780, line: 242, type: !103)
!5229 = !DILocation(line: 0, scope: !5220)
!5230 = !DILocation(line: 241, column: 2, scope: !5220)
!5231 = !DILocation(line: 241, column: 10, scope: !5220)
!5232 = !DILocation(line: 244, column: 2, scope: !5220)
!5233 = !DILocation(line: 245, column: 8, scope: !5220)
!5234 = !DILocation(line: 246, column: 2, scope: !5220)
!5235 = !DILocation(line: 249, column: 1, scope: !5220)
!5236 = !DILocation(line: 248, column: 2, scope: !5220)
!5237 = distinct !DISubprogram(name: "vsnprintk", scope: !780, file: !780, line: 251, type: !5238, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5240)
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!103, !157, !153, !330, !5147}
!5240 = !{!5241, !5242, !5243, !5244, !5245}
!5241 = !DILocalVariable(name: "str", arg: 1, scope: !5237, file: !780, line: 251, type: !157)
!5242 = !DILocalVariable(name: "size", arg: 2, scope: !5237, file: !780, line: 251, type: !153)
!5243 = !DILocalVariable(name: "fmt", arg: 3, scope: !5237, file: !780, line: 251, type: !330)
!5244 = !DILocalVariable(name: "ap", arg: 4, scope: !5237, file: !780, line: 251, type: !5147)
!5245 = !DILocalVariable(name: "ctx", scope: !5237, file: !780, line: 253, type: !5246)
!5246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !780, line: 217, size: 96, elements: !5247)
!5247 = !{!5248, !5249, !5250}
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5246, file: !780, line: 218, baseType: !157, size: 32)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5246, file: !780, line: 219, baseType: !103, size: 32, offset: 32)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5246, file: !780, line: 220, baseType: !103, size: 32, offset: 64)
!5251 = !DILocation(line: 0, scope: !5237)
!5252 = !DILocation(line: 253, column: 2, scope: !5237)
!5253 = !DILocation(line: 253, column: 21, scope: !5237)
!5254 = !DILocation(line: 253, column: 27, scope: !5237)
!5255 = !DILocation(line: 255, column: 2, scope: !5237)
!5256 = !DILocation(line: 257, column: 10, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5237, file: !780, line: 257, column: 6)
!5258 = !DILocation(line: 257, column: 22, scope: !5257)
!5259 = !DILocation(line: 257, column: 16, scope: !5257)
!5260 = !DILocation(line: 257, column: 6, scope: !5237)
!5261 = !DILocation(line: 258, column: 3, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5257, file: !780, line: 257, column: 27)
!5263 = !DILocation(line: 258, column: 18, scope: !5262)
!5264 = !DILocation(line: 259, column: 2, scope: !5262)
!5265 = !DILocation(line: 262, column: 1, scope: !5237)
!5266 = !DILocation(line: 261, column: 2, scope: !5237)
!5267 = distinct !DISubprogram(name: "str_out", scope: !780, file: !780, line: 223, type: !5268, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !776, retainedNodes: !5271)
!5268 = !DISubroutineType(types: !5269)
!5269 = !{!103, !103, !5270}
!5270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5246, size: 32)
!5271 = !{!5272, !5273}
!5272 = !DILocalVariable(name: "c", arg: 1, scope: !5267, file: !780, line: 223, type: !103)
!5273 = !DILocalVariable(name: "ctx", arg: 2, scope: !5267, file: !780, line: 223, type: !5270)
!5274 = !DILocation(line: 0, scope: !5267)
!5275 = !DILocation(line: 225, column: 11, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5267, file: !780, line: 225, column: 6)
!5277 = !DILocation(line: 225, column: 15, scope: !5276)
!5278 = !DILocation(line: 0, scope: !5276)
!5279 = !DILocation(line: 225, column: 23, scope: !5276)
!5280 = !DILocation(line: 225, column: 45, scope: !5276)
!5281 = !DILocation(line: 225, column: 37, scope: !5276)
!5282 = !DILocation(line: 225, column: 6, scope: !5267)
!5283 = !DILocation(line: 226, column: 8, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5276, file: !780, line: 225, column: 50)
!5285 = !DILocation(line: 226, column: 13, scope: !5284)
!5286 = !DILocation(line: 227, column: 3, scope: !5284)
!5287 = !DILocation(line: 230, column: 29, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5267, file: !780, line: 230, column: 6)
!5289 = !DILocation(line: 230, column: 17, scope: !5288)
!5290 = !DILocation(line: 230, column: 6, scope: !5267)
!5291 = !DILocation(line: 231, column: 22, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !780, line: 230, column: 34)
!5293 = !DILocation(line: 231, column: 3, scope: !5292)
!5294 = !DILocation(line: 231, column: 26, scope: !5292)
!5295 = !DILocation(line: 232, column: 2, scope: !5292)
!5296 = !DILocation(line: 233, column: 28, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5288, file: !780, line: 232, column: 9)
!5298 = !DILocation(line: 233, column: 22, scope: !5297)
!5299 = !DILocation(line: 233, column: 3, scope: !5297)
!5300 = !DILocation(line: 233, column: 26, scope: !5297)
!5301 = !DILocation(line: 237, column: 1, scope: !5267)
!5302 = distinct !DISubprogram(name: "z_thread_entry", scope: !5303, file: !5303, line: 30, type: !5304, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !5306)
!5303 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5304 = !DISubroutineType(types: !5305)
!5305 = !{null, !314, !102, !102, !102}
!5306 = !{!5307, !5308, !5309, !5310}
!5307 = !DILocalVariable(name: "entry", arg: 1, scope: !5302, file: !5303, line: 30, type: !314)
!5308 = !DILocalVariable(name: "p1", arg: 2, scope: !5302, file: !5303, line: 31, type: !102)
!5309 = !DILocalVariable(name: "p2", arg: 3, scope: !5302, file: !5303, line: 31, type: !102)
!5310 = !DILocalVariable(name: "p3", arg: 4, scope: !5302, file: !5303, line: 31, type: !102)
!5311 = !DILocation(line: 0, scope: !5302)
!5312 = !DILocation(line: 36, column: 2, scope: !5302)
!5313 = !DILocation(line: 38, column: 17, scope: !5302)
!5314 = !DILocation(line: 38, column: 2, scope: !5302)
!5315 = !DILocation(line: 45, column: 2, scope: !5302)
!5316 = distinct !DISubprogram(name: "k_current_get", scope: !124, file: !124, line: 530, type: !5317, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !2645)
!5317 = !DISubroutineType(types: !5318)
!5318 = !{!5319}
!5319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !5320)
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 32)
!5321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !5322)
!5322 = !{!5323, !5381, !5393, !5394, !5395, !5396, !5411}
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5321, file: !195, line: 247, baseType: !5324, size: 384)
!5324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !5325)
!5325 = !{!5326, !5350, !5357, !5358, !5359, !5368, !5369, !5370}
!5326 = !DIDerivedType(tag: DW_TAG_member, scope: !5324, file: !195, line: 60, baseType: !5327, size: 64)
!5327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5324, file: !195, line: 60, size: 64, elements: !5328)
!5328 = !{!5329, !5344}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5327, file: !195, line: 61, baseType: !5330, size: 64)
!5330 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !5331)
!5331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !5332)
!5332 = !{!5333, !5339}
!5333 = !DIDerivedType(tag: DW_TAG_member, scope: !5331, file: !133, line: 38, baseType: !5334, size: 32)
!5334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5331, file: !133, line: 38, size: 32, elements: !5335)
!5335 = !{!5336, !5338}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5334, file: !133, line: 39, baseType: !5337, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5334, file: !133, line: 40, baseType: !5337, size: 32)
!5339 = !DIDerivedType(tag: DW_TAG_member, scope: !5331, file: !133, line: 42, baseType: !5340, size: 32, offset: 32)
!5340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5331, file: !133, line: 42, size: 32, elements: !5341)
!5341 = !{!5342, !5343}
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5340, file: !133, line: 43, baseType: !5337, size: 32)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5340, file: !133, line: 44, baseType: !5337, size: 32)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5327, file: !195, line: 62, baseType: !5345, size: 64)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !5346)
!5346 = !{!5347}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5345, file: !207, line: 50, baseType: !5348, size: 64)
!5348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5349, size: 64, elements: !212)
!5349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 32)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5324, file: !195, line: 68, baseType: !5351, size: 32, offset: 64)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 32)
!5352 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !5353)
!5353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !5354)
!5354 = !{!5355}
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5353, file: !128, line: 232, baseType: !5356, size: 64)
!5356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !5331)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5324, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5324, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!5359 = !DIDerivedType(tag: DW_TAG_member, scope: !5324, file: !195, line: 90, baseType: !5360, size: 16, offset: 112)
!5360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5324, file: !195, line: 90, size: 16, elements: !5361)
!5361 = !{!5362, !5367}
!5362 = !DIDerivedType(tag: DW_TAG_member, scope: !5360, file: !195, line: 91, baseType: !5363, size: 16)
!5363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5360, file: !195, line: 91, size: 16, elements: !5364)
!5364 = !{!5365, !5366}
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5363, file: !195, line: 96, baseType: !225, size: 8)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5363, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5360, file: !195, line: 100, baseType: !177, size: 16)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5324, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5324, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5324, file: !195, line: 131, baseType: !5371, size: 192, offset: 192)
!5371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !5372)
!5372 = !{!5373, !5374, !5380}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5371, file: !128, line: 245, baseType: !5330, size: 64)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5371, file: !128, line: 246, baseType: !5375, size: 32, offset: 64)
!5375 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !5376)
!5376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5377, size: 32)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{null, !5379}
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 32)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5371, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5321, file: !195, line: 250, baseType: !5382, size: 288, offset: 384)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !5383)
!5383 = !{!5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5382, file: !244, line: 26, baseType: !108, size: 32)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5382, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5382, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5382, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5382, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5382, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5382, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5382, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5382, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5321, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5321, file: !195, line: 256, baseType: !5352, size: 64, offset: 704)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5321, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5321, file: !195, line: 325, baseType: !5397, size: 32, offset: 800)
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 32)
!5398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !5399)
!5399 = !{!5400, !5406, !5407}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5398, file: !124, line: 5074, baseType: !5401, size: 96)
!5401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !5402)
!5402 = !{!5403, !5404, !5405}
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5401, file: !264, line: 57, baseType: !267, size: 32)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5401, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5401, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5398, file: !124, line: 5075, baseType: !5352, size: 64, offset: 96)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5398, file: !124, line: 5076, baseType: !5408, size: 32, offset: 160)
!5408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !5409)
!5409 = !{!5410}
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5408, file: !149, line: 52, baseType: !22, size: 32)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5321, file: !195, line: 343, baseType: !5412, size: 64, offset: 832)
!5412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !5413)
!5413 = !{!5414, !5415}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5412, file: !244, line: 63, baseType: !108, size: 32)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5412, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!5416 = !DILocation(line: 535, column: 9, scope: !5316)
!5417 = !DILocation(line: 535, column: 2, scope: !5316)
!5418 = distinct !DISubprogram(name: "k_thread_abort", scope: !4197, file: !4197, line: 188, type: !5419, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !5421)
!5419 = !DISubroutineType(types: !5420)
!5420 = !{null, !5319}
!5421 = !{!5422}
!5422 = !DILocalVariable(name: "thread", arg: 1, scope: !5418, file: !4197, line: 188, type: !5319)
!5423 = !DILocation(line: 0, scope: !5418)
!5424 = !DILocation(line: 197, column: 2, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5418, file: !4197, line: 197, column: 2)
!5426 = !{i64 2151041773}
!5427 = !DILocation(line: 198, column: 2, scope: !5418)
!5428 = !DILocation(line: 199, column: 1, scope: !5418)
!5429 = distinct !DISubprogram(name: "z_current_get", scope: !4197, file: !4197, line: 173, type: !5317, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !2645)
!5430 = !DILocation(line: 180, column: 2, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5429, file: !4197, line: 180, column: 2)
!5432 = !{i64 2151041705}
!5433 = !DILocation(line: 181, column: 9, scope: !5429)
!5434 = !DILocation(line: 181, column: 2, scope: !5429)
!5435 = distinct !DISubprogram(name: "sys_heap_free", scope: !5436, file: !5436, line: 163, type: !5437, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5445)
!5436 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5437 = !DISubroutineType(types: !5438)
!5438 = !{null, !5439, !102}
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5440, size: 32)
!5440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !5441)
!5441 = !{!5442, !5443, !5444}
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5440, file: !264, line: 57, baseType: !3158, size: 32)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5440, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5440, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!5445 = !{!5446, !5447, !5448, !5449}
!5446 = !DILocalVariable(name: "heap", arg: 1, scope: !5435, file: !5436, line: 163, type: !5439)
!5447 = !DILocalVariable(name: "mem", arg: 2, scope: !5435, file: !5436, line: 163, type: !102)
!5448 = !DILocalVariable(name: "h", scope: !5435, file: !5436, line: 168, type: !3158)
!5449 = !DILocalVariable(name: "c", scope: !5435, file: !5436, line: 169, type: !3163)
!5450 = !DILocation(line: 0, scope: !5435)
!5451 = !DILocation(line: 165, column: 10, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5435, file: !5436, line: 165, column: 6)
!5453 = !DILocation(line: 165, column: 6, scope: !5435)
!5454 = !DILocation(line: 168, column: 27, scope: !5435)
!5455 = !DILocation(line: 169, column: 16, scope: !5435)
!5456 = !{i32 0, i32 536870912}
!5457 = !DILocation(line: 175, column: 2, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !5436, line: 175, column: 2)
!5459 = distinct !DILexicalBlock(scope: !5435, file: !5436, line: 175, column: 2)
!5460 = !DILocation(line: 175, column: 2, scope: !5459)
!5461 = !DILocation(line: 175, column: 2, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5458, file: !5436, line: 175, column: 2)
!5463 = !DILocation(line: 183, column: 2, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5465, file: !5436, line: 183, column: 2)
!5465 = distinct !DILexicalBlock(scope: !5435, file: !5436, line: 183, column: 2)
!5466 = !DILocation(line: 183, column: 2, scope: !5465)
!5467 = !DILocation(line: 183, column: 2, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !5436, line: 183, column: 2)
!5469 = !DILocation(line: 187, column: 2, scope: !5435)
!5470 = !DILocation(line: 197, column: 2, scope: !5435)
!5471 = !DILocation(line: 198, column: 1, scope: !5435)
!5472 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5436, file: !5436, line: 157, type: !5473, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5475)
!5473 = !DISubroutineType(types: !5474)
!5474 = !{!3163, !3158, !102}
!5475 = !{!5476, !5477, !5478, !5479}
!5476 = !DILocalVariable(name: "h", arg: 1, scope: !5472, file: !5436, line: 157, type: !3158)
!5477 = !DILocalVariable(name: "p", arg: 2, scope: !5472, file: !5436, line: 157, type: !102)
!5478 = !DILocalVariable(name: "mem", scope: !5472, file: !5436, line: 159, type: !765)
!5479 = !DILocalVariable(name: "base", scope: !5472, file: !5436, line: 159, type: !765)
!5480 = !DILocation(line: 0, scope: !5472)
!5481 = !DILocation(line: 159, column: 39, scope: !5472)
!5482 = !DILocation(line: 160, column: 14, scope: !5472)
!5483 = !DILocation(line: 160, column: 38, scope: !5472)
!5484 = !DILocation(line: 160, column: 46, scope: !5472)
!5485 = !DILocation(line: 160, column: 2, scope: !5472)
!5486 = distinct !DISubprogram(name: "chunk_used", scope: !3145, file: !3145, line: 137, type: !5487, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5489)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!119, !3158, !3163}
!5489 = !{!5490, !5491}
!5490 = !DILocalVariable(name: "h", arg: 1, scope: !5486, file: !3145, line: 137, type: !3158)
!5491 = !DILocalVariable(name: "c", arg: 2, scope: !5486, file: !3145, line: 137, type: !3163)
!5492 = !DILocation(line: 0, scope: !5486)
!5493 = !DILocation(line: 139, column: 9, scope: !5486)
!5494 = !DILocation(line: 139, column: 42, scope: !5486)
!5495 = !DILocation(line: 139, column: 2, scope: !5486)
!5496 = distinct !DISubprogram(name: "right_chunk", scope: !3145, file: !3145, line: 204, type: !5497, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5499)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!3163, !3158, !3163}
!5499 = !{!5500, !5501}
!5500 = !DILocalVariable(name: "h", arg: 1, scope: !5496, file: !3145, line: 204, type: !3158)
!5501 = !DILocalVariable(name: "c", arg: 2, scope: !5496, file: !3145, line: 204, type: !3163)
!5502 = !DILocation(line: 0, scope: !5496)
!5503 = !DILocation(line: 206, column: 13, scope: !5496)
!5504 = !DILocation(line: 206, column: 11, scope: !5496)
!5505 = !DILocation(line: 206, column: 2, scope: !5496)
!5506 = distinct !DISubprogram(name: "left_chunk", scope: !3145, file: !3145, line: 199, type: !5497, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5507)
!5507 = !{!5508, !5509}
!5508 = !DILocalVariable(name: "h", arg: 1, scope: !5506, file: !3145, line: 199, type: !3158)
!5509 = !DILocalVariable(name: "c", arg: 2, scope: !5506, file: !3145, line: 199, type: !3163)
!5510 = !DILocation(line: 0, scope: !5506)
!5511 = !DILocation(line: 201, column: 13, scope: !5506)
!5512 = !DILocation(line: 201, column: 11, scope: !5506)
!5513 = !DILocation(line: 201, column: 2, scope: !5506)
!5514 = distinct !DISubprogram(name: "set_chunk_used", scope: !3145, file: !3145, line: 147, type: !5515, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5517)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{null, !3158, !3163, !119}
!5517 = !{!5518, !5519, !5520, !5521, !5522}
!5518 = !DILocalVariable(name: "h", arg: 1, scope: !5514, file: !3145, line: 147, type: !3158)
!5519 = !DILocalVariable(name: "c", arg: 2, scope: !5514, file: !3145, line: 147, type: !3163)
!5520 = !DILocalVariable(name: "used", arg: 3, scope: !5514, file: !3145, line: 147, type: !119)
!5521 = !DILocalVariable(name: "buf", scope: !5514, file: !3145, line: 149, type: !3152)
!5522 = !DILocalVariable(name: "cmem", scope: !5514, file: !3145, line: 150, type: !102)
!5523 = !DILocation(line: 0, scope: !5514)
!5524 = !DILocation(line: 149, column: 22, scope: !5514)
!5525 = !DILocation(line: 0, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5527, file: !3145, line: 159, column: 7)
!5527 = distinct !DILexicalBlock(scope: !5528, file: !3145, line: 158, column: 9)
!5528 = distinct !DILexicalBlock(scope: !5514, file: !3145, line: 152, column: 6)
!5529 = !DILocation(line: 159, column: 7, scope: !5527)
!5530 = !DILocation(line: 165, column: 1, scope: !5514)
!5531 = distinct !DISubprogram(name: "free_chunk", scope: !5436, file: !5436, line: 133, type: !5532, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5534)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{null, !3158, !3163}
!5534 = !{!5535, !5536}
!5535 = !DILocalVariable(name: "h", arg: 1, scope: !5531, file: !5436, line: 133, type: !3158)
!5536 = !DILocalVariable(name: "c", arg: 2, scope: !5531, file: !5436, line: 133, type: !3163)
!5537 = !DILocation(line: 0, scope: !5531)
!5538 = !DILocation(line: 136, column: 21, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5531, file: !5436, line: 136, column: 6)
!5540 = !DILocation(line: 136, column: 7, scope: !5539)
!5541 = !DILocation(line: 136, column: 6, scope: !5531)
!5542 = !DILocation(line: 137, column: 3, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5539, file: !5436, line: 136, column: 41)
!5544 = !DILocation(line: 138, column: 22, scope: !5543)
!5545 = !DILocation(line: 138, column: 3, scope: !5543)
!5546 = !DILocation(line: 139, column: 2, scope: !5543)
!5547 = !DILocation(line: 142, column: 21, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5531, file: !5436, line: 142, column: 6)
!5549 = !DILocation(line: 142, column: 7, scope: !5548)
!5550 = !DILocation(line: 142, column: 6, scope: !5531)
!5551 = !DILocation(line: 143, column: 3, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5548, file: !5436, line: 142, column: 40)
!5553 = !DILocation(line: 144, column: 19, scope: !5552)
!5554 = !DILocation(line: 144, column: 3, scope: !5552)
!5555 = !DILocation(line: 145, column: 7, scope: !5552)
!5556 = !DILocation(line: 146, column: 2, scope: !5552)
!5557 = !DILocation(line: 148, column: 2, scope: !5531)
!5558 = !DILocation(line: 149, column: 1, scope: !5531)
!5559 = distinct !DISubprogram(name: "free_list_remove", scope: !5436, file: !5436, line: 60, type: !5532, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5560)
!5560 = !{!5561, !5562, !5563}
!5561 = !DILocalVariable(name: "h", arg: 1, scope: !5559, file: !5436, line: 60, type: !3158)
!5562 = !DILocalVariable(name: "c", arg: 2, scope: !5559, file: !5436, line: 60, type: !3163)
!5563 = !DILocalVariable(name: "bidx", scope: !5564, file: !5436, line: 63, type: !103)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !5436, line: 62, column: 31)
!5565 = distinct !DILexicalBlock(scope: !5559, file: !5436, line: 62, column: 6)
!5566 = !DILocation(line: 0, scope: !5559)
!5567 = !DILocation(line: 63, column: 28, scope: !5564)
!5568 = !{i32 0, i32 32768}
!5569 = !DILocation(line: 63, column: 14, scope: !5564)
!5570 = !DILocation(line: 0, scope: !5564)
!5571 = !DILocation(line: 64, column: 3, scope: !5564)
!5572 = !DILocation(line: 66, column: 1, scope: !5559)
!5573 = distinct !DISubprogram(name: "merge_chunks", scope: !5436, file: !5436, line: 125, type: !5574, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5576)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{null, !3158, !3163, !3163}
!5576 = !{!5577, !5578, !5579, !5580}
!5577 = !DILocalVariable(name: "h", arg: 1, scope: !5573, file: !5436, line: 125, type: !3158)
!5578 = !DILocalVariable(name: "lc", arg: 2, scope: !5573, file: !5436, line: 125, type: !3163)
!5579 = !DILocalVariable(name: "rc", arg: 3, scope: !5573, file: !5436, line: 125, type: !3163)
!5580 = !DILocalVariable(name: "newsz", scope: !5573, file: !5436, line: 127, type: !5581)
!5581 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !3145, line: 62, baseType: !108)
!5582 = !DILocation(line: 0, scope: !5573)
!5583 = !DILocation(line: 127, column: 20, scope: !5573)
!5584 = !DILocation(line: 127, column: 40, scope: !5573)
!5585 = !DILocation(line: 127, column: 38, scope: !5573)
!5586 = !DILocation(line: 129, column: 2, scope: !5573)
!5587 = !DILocation(line: 130, column: 25, scope: !5573)
!5588 = !DILocation(line: 130, column: 2, scope: !5573)
!5589 = !DILocation(line: 131, column: 1, scope: !5573)
!5590 = distinct !DISubprogram(name: "free_list_add", scope: !5436, file: !5436, line: 98, type: !5532, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5591)
!5591 = !{!5592, !5593, !5594}
!5592 = !DILocalVariable(name: "h", arg: 1, scope: !5590, file: !5436, line: 98, type: !3158)
!5593 = !DILocalVariable(name: "c", arg: 2, scope: !5590, file: !5436, line: 98, type: !3163)
!5594 = !DILocalVariable(name: "bidx", scope: !5595, file: !5436, line: 101, type: !103)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !5436, line: 100, column: 31)
!5596 = distinct !DILexicalBlock(scope: !5590, file: !5436, line: 100, column: 6)
!5597 = !DILocation(line: 0, scope: !5590)
!5598 = !DILocation(line: 101, column: 28, scope: !5595)
!5599 = !DILocation(line: 101, column: 14, scope: !5595)
!5600 = !DILocation(line: 0, scope: !5595)
!5601 = !DILocation(line: 102, column: 3, scope: !5595)
!5602 = !DILocation(line: 104, column: 1, scope: !5590)
!5603 = distinct !DISubprogram(name: "chunk_size", scope: !3145, file: !3145, line: 142, type: !5604, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5606)
!5604 = !DISubroutineType(types: !5605)
!5605 = !{!5581, !3158, !3163}
!5606 = !{!5607, !5608}
!5607 = !DILocalVariable(name: "h", arg: 1, scope: !5603, file: !3145, line: 142, type: !3158)
!5608 = !DILocalVariable(name: "c", arg: 2, scope: !5603, file: !3145, line: 142, type: !3163)
!5609 = !DILocation(line: 0, scope: !5603)
!5610 = !DILocation(line: 144, column: 9, scope: !5603)
!5611 = !DILocation(line: 144, column: 42, scope: !5603)
!5612 = !DILocation(line: 144, column: 2, scope: !5603)
!5613 = distinct !DISubprogram(name: "bucket_idx", scope: !3145, file: !3145, line: 250, type: !5614, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5616)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!103, !3158, !5581}
!5616 = !{!5617, !5618, !5619}
!5617 = !DILocalVariable(name: "h", arg: 1, scope: !5613, file: !3145, line: 250, type: !3158)
!5618 = !DILocalVariable(name: "sz", arg: 2, scope: !5613, file: !3145, line: 250, type: !5581)
!5619 = !DILocalVariable(name: "usable_sz", scope: !5613, file: !3145, line: 252, type: !32)
!5620 = !DILocation(line: 0, scope: !5613)
!5621 = !DILocation(line: 252, column: 32, scope: !5613)
!5622 = !DILocation(line: 252, column: 30, scope: !5613)
!5623 = !DILocation(line: 252, column: 50, scope: !5613)
!5624 = !DILocation(line: 253, column: 14, scope: !5613)
!5625 = !{i32 0, i32 33}
!5626 = !DILocation(line: 253, column: 12, scope: !5613)
!5627 = !DILocation(line: 253, column: 2, scope: !5613)
!5628 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5436, file: !5436, line: 68, type: !5629, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5631)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{null, !3158, !3163, !103}
!5631 = !{!5632, !5633, !5634, !5635, !5637, !5640}
!5632 = !DILocalVariable(name: "h", arg: 1, scope: !5628, file: !5436, line: 68, type: !3158)
!5633 = !DILocalVariable(name: "c", arg: 2, scope: !5628, file: !5436, line: 68, type: !3163)
!5634 = !DILocalVariable(name: "bidx", arg: 3, scope: !5628, file: !5436, line: 68, type: !103)
!5635 = !DILocalVariable(name: "b", scope: !5628, file: !5436, line: 70, type: !5636)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 32)
!5637 = !DILocalVariable(name: "second", scope: !5638, file: !5436, line: 84, type: !3163)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !5436, line: 80, column: 9)
!5639 = distinct !DILexicalBlock(scope: !5628, file: !5436, line: 72, column: 6)
!5640 = !DILocalVariable(name: "first", scope: !5638, file: !5436, line: 85, type: !3163)
!5641 = !DILocation(line: 0, scope: !5628)
!5642 = !DILocation(line: 72, column: 9, scope: !5639)
!5643 = !DILocation(line: 72, column: 14, scope: !5639)
!5644 = !DILocation(line: 72, column: 6, scope: !5628)
!5645 = !DILocation(line: 76, column: 23, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5639, file: !5436, line: 72, column: 21)
!5647 = !DILocation(line: 76, column: 6, scope: !5646)
!5648 = !DILocation(line: 76, column: 20, scope: !5646)
!5649 = !DILocation(line: 77, column: 11, scope: !5646)
!5650 = !DILocation(line: 78, column: 3, scope: !5646)
!5651 = !DILocation(line: 79, column: 3, scope: !5646)
!5652 = !DILocation(line: 80, column: 2, scope: !5646)
!5653 = !DILocation(line: 0, scope: !5638)
!5654 = !DILocation(line: 85, column: 21, scope: !5638)
!5655 = !{i32 0, i32 65536}
!5656 = !DILocation(line: 87, column: 3, scope: !5638)
!5657 = !DILocation(line: 88, column: 3, scope: !5638)
!5658 = !DILocation(line: 89, column: 3, scope: !5638)
!5659 = !DILocation(line: 90, column: 3, scope: !5638)
!5660 = !DILocation(line: 96, column: 1, scope: !5628)
!5661 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !3145, file: !3145, line: 187, type: !5574, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5662)
!5662 = !{!5663, !5664, !5665}
!5663 = !DILocalVariable(name: "h", arg: 1, scope: !5661, file: !3145, line: 187, type: !3158)
!5664 = !DILocalVariable(name: "c", arg: 2, scope: !5661, file: !3145, line: 187, type: !3163)
!5665 = !DILocalVariable(name: "prev", arg: 3, scope: !5661, file: !3145, line: 188, type: !3163)
!5666 = !DILocation(line: 0, scope: !5661)
!5667 = !DILocation(line: 190, column: 2, scope: !5661)
!5668 = !DILocation(line: 191, column: 1, scope: !5661)
!5669 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !3145, file: !3145, line: 193, type: !5574, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5670)
!5670 = !{!5671, !5672, !5673}
!5671 = !DILocalVariable(name: "h", arg: 1, scope: !5669, file: !3145, line: 193, type: !3158)
!5672 = !DILocalVariable(name: "c", arg: 2, scope: !5669, file: !3145, line: 193, type: !3163)
!5673 = !DILocalVariable(name: "next", arg: 3, scope: !5669, file: !3145, line: 194, type: !3163)
!5674 = !DILocation(line: 0, scope: !5669)
!5675 = !DILocation(line: 196, column: 2, scope: !5669)
!5676 = !DILocation(line: 197, column: 1, scope: !5669)
!5677 = distinct !DISubprogram(name: "prev_free_chunk", scope: !3145, file: !3145, line: 177, type: !5497, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5678)
!5678 = !{!5679, !5680}
!5679 = !DILocalVariable(name: "h", arg: 1, scope: !5677, file: !3145, line: 177, type: !3158)
!5680 = !DILocalVariable(name: "c", arg: 2, scope: !5677, file: !3145, line: 177, type: !3163)
!5681 = !DILocation(line: 0, scope: !5677)
!5682 = !DILocation(line: 179, column: 9, scope: !5677)
!5683 = !DILocation(line: 179, column: 2, scope: !5677)
!5684 = distinct !DISubprogram(name: "chunk_field", scope: !3145, file: !3145, line: 107, type: !5685, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5687)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!3163, !3158, !3163, !3144}
!5687 = !{!5688, !5689, !5690, !5691, !5692}
!5688 = !DILocalVariable(name: "h", arg: 1, scope: !5684, file: !3145, line: 107, type: !3158)
!5689 = !DILocalVariable(name: "c", arg: 2, scope: !5684, file: !3145, line: 107, type: !3163)
!5690 = !DILocalVariable(name: "f", arg: 3, scope: !5684, file: !3145, line: 108, type: !3144)
!5691 = !DILocalVariable(name: "buf", scope: !5684, file: !3145, line: 110, type: !3152)
!5692 = !DILocalVariable(name: "cmem", scope: !5684, file: !3145, line: 111, type: !102)
!5693 = !DILocation(line: 0, scope: !5684)
!5694 = !DILocation(line: 110, column: 22, scope: !5684)
!5695 = !DILocation(line: 111, column: 15, scope: !5684)
!5696 = !DILocation(line: 116, column: 11, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5698, file: !3145, line: 115, column: 9)
!5698 = distinct !DILexicalBlock(scope: !5684, file: !3145, line: 113, column: 6)
!5699 = !DILocation(line: 116, column: 10, scope: !5697)
!5700 = !DILocation(line: 118, column: 1, scope: !5684)
!5701 = distinct !DISubprogram(name: "chunk_buf", scope: !3145, file: !3145, line: 101, type: !5702, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5704)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!3152, !3158}
!5704 = !{!5705}
!5705 = !DILocalVariable(name: "h", arg: 1, scope: !5701, file: !3145, line: 101, type: !3158)
!5706 = !DILocation(line: 0, scope: !5701)
!5707 = !DILocation(line: 104, column: 9, scope: !5701)
!5708 = !DILocation(line: 104, column: 2, scope: !5701)
!5709 = distinct !DISubprogram(name: "chunk_set", scope: !3145, file: !3145, line: 120, type: !5710, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5712)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{null, !3158, !3163, !3144, !3163}
!5712 = !{!5713, !5714, !5715, !5716, !5717, !5718}
!5713 = !DILocalVariable(name: "h", arg: 1, scope: !5709, file: !3145, line: 120, type: !3158)
!5714 = !DILocalVariable(name: "c", arg: 2, scope: !5709, file: !3145, line: 120, type: !3163)
!5715 = !DILocalVariable(name: "f", arg: 3, scope: !5709, file: !3145, line: 121, type: !3144)
!5716 = !DILocalVariable(name: "val", arg: 4, scope: !5709, file: !3145, line: 121, type: !3163)
!5717 = !DILocalVariable(name: "buf", scope: !5709, file: !3145, line: 125, type: !3152)
!5718 = !DILocalVariable(name: "cmem", scope: !5709, file: !3145, line: 126, type: !102)
!5719 = !DILocation(line: 0, scope: !5709)
!5720 = !DILocation(line: 125, column: 22, scope: !5709)
!5721 = !DILocation(line: 126, column: 15, scope: !5709)
!5722 = !DILocation(line: 133, column: 27, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !3145, line: 131, column: 9)
!5724 = distinct !DILexicalBlock(scope: !5709, file: !3145, line: 128, column: 6)
!5725 = !DILocation(line: 133, column: 4, scope: !5723)
!5726 = !DILocation(line: 133, column: 3, scope: !5723)
!5727 = !DILocation(line: 133, column: 25, scope: !5723)
!5728 = !DILocation(line: 135, column: 1, scope: !5709)
!5729 = distinct !DISubprogram(name: "min_chunk_size", scope: !3145, file: !3145, line: 240, type: !5730, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5732)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!5581, !3158}
!5732 = !{!5733}
!5733 = !DILocalVariable(name: "h", arg: 1, scope: !5729, file: !3145, line: 240, type: !3158)
!5734 = !DILocation(line: 0, scope: !5729)
!5735 = !DILocation(line: 242, column: 9, scope: !5729)
!5736 = !DILocation(line: 242, column: 2, scope: !5729)
!5737 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !3145, file: !3145, line: 235, type: !5738, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5740)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!5581, !3158, !153}
!5740 = !{!5741, !5742}
!5741 = !DILocalVariable(name: "h", arg: 1, scope: !5737, file: !3145, line: 235, type: !3158)
!5742 = !DILocalVariable(name: "bytes", arg: 2, scope: !5737, file: !3145, line: 235, type: !153)
!5743 = !DILocation(line: 0, scope: !5737)
!5744 = !DILocation(line: 237, column: 39, scope: !5737)
!5745 = !DILocation(line: 237, column: 9, scope: !5737)
!5746 = !DILocation(line: 237, column: 2, scope: !5737)
!5747 = distinct !DISubprogram(name: "chunksz", scope: !3145, file: !3145, line: 230, type: !5748, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5750)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!5581, !153}
!5750 = !{!5751}
!5751 = !DILocalVariable(name: "bytes", arg: 1, scope: !5747, file: !3145, line: 230, type: !153)
!5752 = !DILocation(line: 0, scope: !5747)
!5753 = !DILocation(line: 232, column: 29, scope: !5747)
!5754 = !DILocation(line: 232, column: 35, scope: !5747)
!5755 = !DILocation(line: 232, column: 2, scope: !5747)
!5756 = distinct !DISubprogram(name: "set_chunk_size", scope: !3145, file: !3145, line: 172, type: !5757, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5759)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{null, !3158, !3163, !5581}
!5759 = !{!5760, !5761, !5762}
!5760 = !DILocalVariable(name: "h", arg: 1, scope: !5756, file: !3145, line: 172, type: !3158)
!5761 = !DILocalVariable(name: "c", arg: 2, scope: !5756, file: !3145, line: 172, type: !3163)
!5762 = !DILocalVariable(name: "size", arg: 3, scope: !5756, file: !3145, line: 172, type: !5581)
!5763 = !DILocation(line: 0, scope: !5756)
!5764 = !DILocation(line: 174, column: 38, scope: !5756)
!5765 = !DILocation(line: 174, column: 2, scope: !5756)
!5766 = !DILocation(line: 175, column: 1, scope: !5756)
!5767 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !3145, file: !3145, line: 209, type: !5757, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5768)
!5768 = !{!5769, !5770, !5771}
!5769 = !DILocalVariable(name: "h", arg: 1, scope: !5767, file: !3145, line: 209, type: !3158)
!5770 = !DILocalVariable(name: "c", arg: 2, scope: !5767, file: !3145, line: 209, type: !3163)
!5771 = !DILocalVariable(name: "size", arg: 3, scope: !5767, file: !3145, line: 210, type: !5581)
!5772 = !DILocation(line: 0, scope: !5767)
!5773 = !DILocation(line: 212, column: 2, scope: !5767)
!5774 = !DILocation(line: 213, column: 1, scope: !5767)
!5775 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5436, file: !5436, line: 34, type: !5629, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5776)
!5776 = !{!5777, !5778, !5779, !5780, !5781, !5784}
!5777 = !DILocalVariable(name: "h", arg: 1, scope: !5775, file: !5436, line: 34, type: !3158)
!5778 = !DILocalVariable(name: "c", arg: 2, scope: !5775, file: !5436, line: 34, type: !3163)
!5779 = !DILocalVariable(name: "bidx", arg: 3, scope: !5775, file: !5436, line: 34, type: !103)
!5780 = !DILocalVariable(name: "b", scope: !5775, file: !5436, line: 36, type: !5636)
!5781 = !DILocalVariable(name: "first", scope: !5782, file: !5436, line: 47, type: !3163)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !5436, line: 46, column: 9)
!5783 = distinct !DILexicalBlock(scope: !5775, file: !5436, line: 42, column: 6)
!5784 = !DILocalVariable(name: "second", scope: !5782, file: !5436, line: 48, type: !3163)
!5785 = !DILocation(line: 0, scope: !5775)
!5786 = !DILocation(line: 36, column: 29, scope: !5775)
!5787 = !DILocation(line: 42, column: 6, scope: !5783)
!5788 = !DILocation(line: 42, column: 28, scope: !5783)
!5789 = !DILocation(line: 42, column: 6, scope: !5775)
!5790 = !DILocation(line: 44, column: 24, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5783, file: !5436, line: 42, column: 34)
!5792 = !DILocation(line: 44, column: 23, scope: !5791)
!5793 = !DILocation(line: 44, column: 6, scope: !5791)
!5794 = !DILocation(line: 44, column: 20, scope: !5791)
!5795 = !DILocation(line: 45, column: 6, scope: !5791)
!5796 = !DILocation(line: 45, column: 11, scope: !5791)
!5797 = !DILocation(line: 46, column: 2, scope: !5791)
!5798 = !DILocation(line: 47, column: 21, scope: !5782)
!5799 = !DILocation(line: 0, scope: !5782)
!5800 = !DILocation(line: 50, column: 6, scope: !5782)
!5801 = !DILocation(line: 50, column: 11, scope: !5782)
!5802 = !DILocation(line: 51, column: 3, scope: !5782)
!5803 = !DILocation(line: 52, column: 3, scope: !5782)
!5804 = !DILocation(line: 58, column: 1, scope: !5775)
!5805 = distinct !DISubprogram(name: "next_free_chunk", scope: !3145, file: !3145, line: 182, type: !5497, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5806)
!5806 = !{!5807, !5808}
!5807 = !DILocalVariable(name: "h", arg: 1, scope: !5805, file: !3145, line: 182, type: !3158)
!5808 = !DILocalVariable(name: "c", arg: 2, scope: !5805, file: !3145, line: 182, type: !3163)
!5809 = !DILocation(line: 0, scope: !5805)
!5810 = !DILocation(line: 184, column: 9, scope: !5805)
!5811 = !DILocation(line: 184, column: 2, scope: !5805)
!5812 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5436, file: !5436, line: 200, type: !5813, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5815)
!5813 = !DISubroutineType(types: !5814)
!5814 = !{!153, !5439, !102}
!5815 = !{!5816, !5817, !5818, !5819, !5820, !5821, !5822}
!5816 = !DILocalVariable(name: "heap", arg: 1, scope: !5812, file: !5436, line: 200, type: !5439)
!5817 = !DILocalVariable(name: "mem", arg: 2, scope: !5812, file: !5436, line: 200, type: !102)
!5818 = !DILocalVariable(name: "h", scope: !5812, file: !5436, line: 202, type: !3158)
!5819 = !DILocalVariable(name: "c", scope: !5812, file: !5436, line: 203, type: !3163)
!5820 = !DILocalVariable(name: "addr", scope: !5812, file: !5436, line: 204, type: !153)
!5821 = !DILocalVariable(name: "chunk_base", scope: !5812, file: !5436, line: 205, type: !153)
!5822 = !DILocalVariable(name: "chunk_sz", scope: !5812, file: !5436, line: 206, type: !153)
!5823 = !DILocation(line: 0, scope: !5812)
!5824 = !DILocation(line: 202, column: 27, scope: !5812)
!5825 = !DILocation(line: 203, column: 16, scope: !5812)
!5826 = !DILocation(line: 204, column: 16, scope: !5812)
!5827 = !DILocation(line: 205, column: 31, scope: !5812)
!5828 = !DILocation(line: 205, column: 22, scope: !5812)
!5829 = !DILocation(line: 206, column: 20, scope: !5812)
!5830 = !DILocation(line: 206, column: 37, scope: !5812)
!5831 = !DILocation(line: 208, column: 26, scope: !5812)
!5832 = !DILocation(line: 208, column: 18, scope: !5812)
!5833 = !DILocation(line: 208, column: 2, scope: !5812)
!5834 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5436, file: !5436, line: 263, type: !5835, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5837)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!102, !5439, !153}
!5837 = !{!5838, !5839, !5840, !5841, !5842, !5843}
!5838 = !DILocalVariable(name: "heap", arg: 1, scope: !5834, file: !5436, line: 263, type: !5439)
!5839 = !DILocalVariable(name: "bytes", arg: 2, scope: !5834, file: !5436, line: 263, type: !153)
!5840 = !DILocalVariable(name: "h", scope: !5834, file: !5436, line: 265, type: !3158)
!5841 = !DILocalVariable(name: "mem", scope: !5834, file: !5436, line: 266, type: !102)
!5842 = !DILocalVariable(name: "chunk_sz", scope: !5834, file: !5436, line: 272, type: !5581)
!5843 = !DILocalVariable(name: "c", scope: !5834, file: !5436, line: 273, type: !3163)
!5844 = !DILocation(line: 0, scope: !5834)
!5845 = !DILocation(line: 265, column: 27, scope: !5834)
!5846 = !DILocation(line: 268, column: 12, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5834, file: !5436, line: 268, column: 6)
!5848 = !DILocation(line: 268, column: 18, scope: !5847)
!5849 = !DILocation(line: 268, column: 21, scope: !5847)
!5850 = !DILocation(line: 268, column: 6, scope: !5834)
!5851 = !DILocation(line: 272, column: 23, scope: !5834)
!5852 = !DILocation(line: 273, column: 16, scope: !5834)
!5853 = !DILocation(line: 274, column: 8, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5834, file: !5436, line: 274, column: 6)
!5855 = !DILocation(line: 274, column: 6, scope: !5834)
!5856 = !DILocation(line: 279, column: 6, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5834, file: !5436, line: 279, column: 6)
!5858 = !DILocation(line: 279, column: 23, scope: !5857)
!5859 = !DILocation(line: 279, column: 6, scope: !5834)
!5860 = !DILocation(line: 280, column: 24, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5857, file: !5436, line: 279, column: 35)
!5862 = !DILocation(line: 280, column: 3, scope: !5861)
!5863 = !DILocation(line: 281, column: 3, scope: !5861)
!5864 = !DILocation(line: 282, column: 2, scope: !5861)
!5865 = !DILocation(line: 284, column: 2, scope: !5834)
!5866 = !DILocation(line: 286, column: 8, scope: !5834)
!5867 = !DILocation(line: 298, column: 2, scope: !5834)
!5868 = !DILocation(line: 299, column: 1, scope: !5834)
!5869 = distinct !DISubprogram(name: "size_too_big", scope: !3145, file: !3145, line: 256, type: !5870, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5872)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!119, !3158, !153}
!5872 = !{!5873, !5874}
!5873 = !DILocalVariable(name: "h", arg: 1, scope: !5869, file: !3145, line: 256, type: !3158)
!5874 = !DILocalVariable(name: "bytes", arg: 2, scope: !5869, file: !3145, line: 256, type: !153)
!5875 = !DILocation(line: 0, scope: !5869)
!5876 = !DILocation(line: 262, column: 16, scope: !5869)
!5877 = !DILocation(line: 262, column: 36, scope: !5869)
!5878 = !DILocation(line: 262, column: 30, scope: !5869)
!5879 = !DILocation(line: 262, column: 2, scope: !5869)
!5880 = distinct !DISubprogram(name: "alloc_chunk", scope: !5436, file: !5436, line: 211, type: !5881, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5883)
!5881 = !DISubroutineType(types: !5882)
!5882 = !{!3163, !3158, !5581}
!5883 = !{!5884, !5885, !5886, !5887, !5888, !5891, !5892, !5894, !5895, !5898}
!5884 = !DILocalVariable(name: "h", arg: 1, scope: !5880, file: !5436, line: 211, type: !3158)
!5885 = !DILocalVariable(name: "sz", arg: 2, scope: !5880, file: !5436, line: 211, type: !5581)
!5886 = !DILocalVariable(name: "bi", scope: !5880, file: !5436, line: 213, type: !103)
!5887 = !DILocalVariable(name: "b", scope: !5880, file: !5436, line: 214, type: !5636)
!5888 = !DILocalVariable(name: "first", scope: !5889, file: !5436, line: 233, type: !3163)
!5889 = distinct !DILexicalBlock(scope: !5890, file: !5436, line: 232, column: 15)
!5890 = distinct !DILexicalBlock(scope: !5880, file: !5436, line: 232, column: 6)
!5891 = !DILocalVariable(name: "i", scope: !5889, file: !5436, line: 234, type: !103)
!5892 = !DILocalVariable(name: "c", scope: !5893, file: !5436, line: 236, type: !3163)
!5893 = distinct !DILexicalBlock(scope: !5889, file: !5436, line: 235, column: 6)
!5894 = !DILocalVariable(name: "bmask", scope: !5880, file: !5436, line: 249, type: !108)
!5895 = !DILocalVariable(name: "minbucket", scope: !5896, file: !5436, line: 252, type: !103)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !5436, line: 251, column: 19)
!5897 = distinct !DILexicalBlock(scope: !5880, file: !5436, line: 251, column: 6)
!5898 = !DILocalVariable(name: "c", scope: !5896, file: !5436, line: 253, type: !3163)
!5899 = !DILocation(line: 0, scope: !5880)
!5900 = !DILocation(line: 213, column: 11, scope: !5880)
!5901 = !DILocation(line: 232, column: 9, scope: !5890)
!5902 = !DILocation(line: 232, column: 6, scope: !5890)
!5903 = !DILocation(line: 232, column: 6, scope: !5880)
!5904 = !DILocation(line: 236, column: 21, scope: !5893)
!5905 = !DILocation(line: 0, scope: !5889)
!5906 = !DILocation(line: 0, scope: !5893)
!5907 = !DILocation(line: 237, column: 8, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5893, file: !5436, line: 237, column: 8)
!5909 = !DILocation(line: 237, column: 25, scope: !5908)
!5910 = !DILocation(line: 237, column: 8, scope: !5893)
!5911 = !DILocation(line: 238, column: 5, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5908, file: !5436, line: 237, column: 32)
!5913 = !DILocation(line: 241, column: 14, scope: !5893)
!5914 = !DILocation(line: 241, column: 12, scope: !5893)
!5915 = !DILocation(line: 243, column: 12, scope: !5889)
!5916 = !DILocation(line: 243, column: 16, scope: !5889)
!5917 = distinct !{!5917, !5918, !5919}
!5918 = !DILocation(line: 235, column: 3, scope: !5889)
!5919 = !DILocation(line: 243, column: 35, scope: !5889)
!5920 = !DILocation(line: 249, column: 22, scope: !5880)
!5921 = !DILocation(line: 249, column: 39, scope: !5880)
!5922 = !DILocation(line: 249, column: 36, scope: !5880)
!5923 = !DILocation(line: 251, column: 12, scope: !5897)
!5924 = !DILocation(line: 251, column: 6, scope: !5880)
!5925 = !DILocation(line: 252, column: 19, scope: !5896)
!5926 = !DILocation(line: 0, scope: !5896)
!5927 = !DILocation(line: 253, column: 39, scope: !5896)
!5928 = !DILocation(line: 255, column: 3, scope: !5896)
!5929 = !DILocation(line: 261, column: 1, scope: !5880)
!5930 = distinct !DISubprogram(name: "split_chunks", scope: !5436, file: !5436, line: 109, type: !5574, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5931)
!5931 = !{!5932, !5933, !5934, !5935, !5936, !5937}
!5932 = !DILocalVariable(name: "h", arg: 1, scope: !5930, file: !5436, line: 109, type: !3158)
!5933 = !DILocalVariable(name: "lc", arg: 2, scope: !5930, file: !5436, line: 109, type: !3163)
!5934 = !DILocalVariable(name: "rc", arg: 3, scope: !5930, file: !5436, line: 109, type: !3163)
!5935 = !DILocalVariable(name: "sz0", scope: !5930, file: !5436, line: 114, type: !5581)
!5936 = !DILocalVariable(name: "lsz", scope: !5930, file: !5436, line: 115, type: !5581)
!5937 = !DILocalVariable(name: "rsz", scope: !5930, file: !5436, line: 116, type: !5581)
!5938 = !DILocation(line: 0, scope: !5930)
!5939 = !DILocation(line: 114, column: 18, scope: !5930)
!5940 = !DILocation(line: 115, column: 21, scope: !5930)
!5941 = !DILocation(line: 116, column: 22, scope: !5930)
!5942 = !DILocation(line: 118, column: 2, scope: !5930)
!5943 = !DILocation(line: 119, column: 2, scope: !5930)
!5944 = !DILocation(line: 120, column: 2, scope: !5930)
!5945 = !DILocation(line: 121, column: 25, scope: !5930)
!5946 = !DILocation(line: 121, column: 2, scope: !5930)
!5947 = !DILocation(line: 122, column: 1, scope: !5930)
!5948 = distinct !DISubprogram(name: "chunk_mem", scope: !5436, file: !5436, line: 24, type: !5949, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5951)
!5949 = !DISubroutineType(types: !5950)
!5950 = !{!102, !3158, !3163}
!5951 = !{!5952, !5953, !5954, !5955}
!5952 = !DILocalVariable(name: "h", arg: 1, scope: !5948, file: !5436, line: 24, type: !3158)
!5953 = !DILocalVariable(name: "c", arg: 2, scope: !5948, file: !5436, line: 24, type: !3163)
!5954 = !DILocalVariable(name: "buf", scope: !5948, file: !5436, line: 26, type: !3152)
!5955 = !DILocalVariable(name: "ret", scope: !5948, file: !5436, line: 27, type: !765)
!5956 = !DILocation(line: 0, scope: !5948)
!5957 = !DILocation(line: 26, column: 22, scope: !5948)
!5958 = !DILocation(line: 27, column: 38, scope: !5948)
!5959 = !DILocation(line: 31, column: 2, scope: !5948)
!5960 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5436, file: !5436, line: 301, type: !5961, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !5963)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!102, !5439, !153, !153}
!5963 = !{!5964, !5965, !5966, !5967, !5968, !5969, !5970, !5971, !5972, !5973, !5974, !5975}
!5964 = !DILocalVariable(name: "heap", arg: 1, scope: !5960, file: !5436, line: 301, type: !5439)
!5965 = !DILocalVariable(name: "align", arg: 2, scope: !5960, file: !5436, line: 301, type: !153)
!5966 = !DILocalVariable(name: "bytes", arg: 3, scope: !5960, file: !5436, line: 301, type: !153)
!5967 = !DILocalVariable(name: "h", scope: !5960, file: !5436, line: 303, type: !3158)
!5968 = !DILocalVariable(name: "gap", scope: !5960, file: !5436, line: 304, type: !153)
!5969 = !DILocalVariable(name: "rew", scope: !5960, file: !5436, line: 304, type: !153)
!5970 = !DILocalVariable(name: "padded_sz", scope: !5960, file: !5436, line: 335, type: !5581)
!5971 = !DILocalVariable(name: "c0", scope: !5960, file: !5436, line: 336, type: !3163)
!5972 = !DILocalVariable(name: "mem", scope: !5960, file: !5436, line: 341, type: !765)
!5973 = !DILocalVariable(name: "end", scope: !5960, file: !5436, line: 345, type: !3152)
!5974 = !DILocalVariable(name: "c", scope: !5960, file: !5436, line: 348, type: !3163)
!5975 = !DILocalVariable(name: "c_end", scope: !5960, file: !5436, line: 349, type: !3163)
!5976 = !DILocation(line: 0, scope: !5960)
!5977 = !DILocation(line: 303, column: 27, scope: !5960)
!5978 = !DILocation(line: 313, column: 16, scope: !5960)
!5979 = !DILocation(line: 313, column: 14, scope: !5960)
!5980 = !DILocation(line: 314, column: 12, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5960, file: !5436, line: 314, column: 6)
!5982 = !DILocation(line: 314, column: 6, scope: !5960)
!5983 = !DILocation(line: 315, column: 9, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5981, file: !5436, line: 314, column: 20)
!5985 = !DILocation(line: 316, column: 9, scope: !5984)
!5986 = !DILocation(line: 318, column: 13, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !5436, line: 318, column: 7)
!5988 = distinct !DILexicalBlock(scope: !5981, file: !5436, line: 317, column: 9)
!5989 = !DILocation(line: 318, column: 7, scope: !5988)
!5990 = !DILocation(line: 319, column: 11, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !5436, line: 318, column: 39)
!5992 = !DILocation(line: 319, column: 4, scope: !5991)
!5993 = !DILocation(line: 0, scope: !5981)
!5994 = !DILocation(line: 324, column: 2, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !5436, line: 324, column: 2)
!5996 = distinct !DILexicalBlock(scope: !5960, file: !5436, line: 324, column: 2)
!5997 = !DILocation(line: 324, column: 2, scope: !5996)
!5998 = !DILocation(line: 324, column: 2, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5995, file: !5436, line: 324, column: 2)
!6000 = !DILocation(line: 326, column: 12, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5960, file: !5436, line: 326, column: 6)
!6002 = !DILocation(line: 326, column: 17, scope: !6001)
!6003 = !DILocation(line: 326, column: 20, scope: !6001)
!6004 = !DILocation(line: 326, column: 6, scope: !5960)
!6005 = !DILocation(line: 335, column: 50, scope: !5960)
!6006 = !DILocation(line: 335, column: 58, scope: !5960)
!6007 = !DILocation(line: 335, column: 24, scope: !5960)
!6008 = !DILocation(line: 336, column: 17, scope: !5960)
!6009 = !DILocation(line: 338, column: 9, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5960, file: !5436, line: 338, column: 6)
!6011 = !DILocation(line: 338, column: 6, scope: !5960)
!6012 = !DILocation(line: 341, column: 17, scope: !5960)
!6013 = !DILocation(line: 344, column: 20, scope: !5960)
!6014 = !DILocation(line: 344, column: 8, scope: !5960)
!6015 = !DILocation(line: 344, column: 47, scope: !5960)
!6016 = !DILocation(line: 345, column: 39, scope: !5960)
!6017 = !DILocation(line: 348, column: 16, scope: !5960)
!6018 = !DILocation(line: 349, column: 26, scope: !5960)
!6019 = !DILocation(line: 349, column: 24, scope: !5960)
!6020 = !DILocation(line: 353, column: 8, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5960, file: !5436, line: 353, column: 6)
!6022 = !DILocation(line: 353, column: 6, scope: !5960)
!6023 = !DILocation(line: 354, column: 3, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6021, file: !5436, line: 353, column: 14)
!6025 = !DILocation(line: 355, column: 3, scope: !6024)
!6026 = !DILocation(line: 356, column: 2, scope: !6024)
!6027 = !DILocation(line: 359, column: 6, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !5960, file: !5436, line: 359, column: 6)
!6029 = !DILocation(line: 359, column: 24, scope: !6028)
!6030 = !DILocation(line: 359, column: 6, scope: !5960)
!6031 = !DILocation(line: 360, column: 3, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6028, file: !5436, line: 359, column: 33)
!6033 = !DILocation(line: 361, column: 3, scope: !6032)
!6034 = !DILocation(line: 362, column: 2, scope: !6032)
!6035 = !DILocation(line: 364, column: 2, scope: !5960)
!6036 = !DILocation(line: 377, column: 1, scope: !5960)
!6037 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5436, file: !5436, line: 379, type: !6038, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !6040)
!6038 = !DISubroutineType(types: !6039)
!6039 = !{!102, !5439, !102, !153, !153}
!6040 = !{!6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6056, !6057}
!6041 = !DILocalVariable(name: "heap", arg: 1, scope: !6037, file: !5436, line: 379, type: !5439)
!6042 = !DILocalVariable(name: "ptr", arg: 2, scope: !6037, file: !5436, line: 379, type: !102)
!6043 = !DILocalVariable(name: "align", arg: 3, scope: !6037, file: !5436, line: 380, type: !153)
!6044 = !DILocalVariable(name: "bytes", arg: 4, scope: !6037, file: !5436, line: 380, type: !153)
!6045 = !DILocalVariable(name: "h", scope: !6037, file: !5436, line: 382, type: !3158)
!6046 = !DILocalVariable(name: "c", scope: !6037, file: !5436, line: 399, type: !3163)
!6047 = !DILocalVariable(name: "rc", scope: !6037, file: !5436, line: 400, type: !3163)
!6048 = !DILocalVariable(name: "align_gap", scope: !6037, file: !5436, line: 401, type: !153)
!6049 = !DILocalVariable(name: "chunks_need", scope: !6037, file: !5436, line: 402, type: !5581)
!6050 = !DILocalVariable(name: "split_size", scope: !6051, file: !5436, line: 435, type: !5581)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !5436, line: 433, column: 61)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !5436, line: 432, column: 13)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !5436, line: 409, column: 13)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !5436, line: 406, column: 13)
!6055 = distinct !DILexicalBlock(scope: !6037, file: !5436, line: 404, column: 6)
!6056 = !DILocalVariable(name: "ptr2", scope: !6037, file: !5436, line: 474, type: !102)
!6057 = !DILocalVariable(name: "prev_size", scope: !6058, file: !5436, line: 477, type: !153)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !5436, line: 476, column: 20)
!6059 = distinct !DILexicalBlock(scope: !6037, file: !5436, line: 476, column: 6)
!6060 = !DILocation(line: 0, scope: !6037)
!6061 = !DILocation(line: 382, column: 27, scope: !6037)
!6062 = !DILocation(line: 385, column: 10, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6037, file: !5436, line: 385, column: 6)
!6064 = !DILocation(line: 385, column: 6, scope: !6037)
!6065 = !DILocation(line: 386, column: 10, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6063, file: !5436, line: 385, column: 19)
!6067 = !DILocation(line: 386, column: 3, scope: !6066)
!6068 = !DILocation(line: 388, column: 12, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6037, file: !5436, line: 388, column: 6)
!6070 = !DILocation(line: 388, column: 6, scope: !6037)
!6071 = !DILocation(line: 389, column: 3, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6069, file: !5436, line: 388, column: 18)
!6073 = !DILocation(line: 390, column: 3, scope: !6072)
!6074 = !DILocation(line: 393, column: 2, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6076, file: !5436, line: 393, column: 2)
!6076 = distinct !DILexicalBlock(scope: !6037, file: !5436, line: 393, column: 2)
!6077 = !DILocation(line: 393, column: 2, scope: !6076)
!6078 = !DILocation(line: 393, column: 2, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6075, file: !5436, line: 393, column: 2)
!6080 = !DILocation(line: 395, column: 6, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6037, file: !5436, line: 395, column: 6)
!6082 = !DILocation(line: 395, column: 6, scope: !6037)
!6083 = !DILocation(line: 399, column: 16, scope: !6037)
!6084 = !DILocation(line: 400, column: 17, scope: !6037)
!6085 = !DILocation(line: 401, column: 49, scope: !6037)
!6086 = !DILocation(line: 401, column: 36, scope: !6037)
!6087 = !DILocation(line: 402, column: 52, scope: !6037)
!6088 = !DILocation(line: 402, column: 26, scope: !6037)
!6089 = !DILocation(line: 404, column: 6, scope: !6055)
!6090 = !DILocation(line: 404, column: 12, scope: !6055)
!6091 = !DILocation(line: 406, column: 13, scope: !6054)
!6092 = !DILocation(line: 406, column: 30, scope: !6054)
!6093 = !DILocation(line: 406, column: 13, scope: !6055)
!6094 = !DILocation(line: 409, column: 30, scope: !6053)
!6095 = !DILocation(line: 409, column: 13, scope: !6054)
!6096 = !DILocation(line: 420, column: 24, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6053, file: !5436, line: 409, column: 45)
!6098 = !DILocation(line: 420, column: 3, scope: !6097)
!6099 = !DILocation(line: 421, column: 3, scope: !6097)
!6100 = !DILocation(line: 422, column: 3, scope: !6097)
!6101 = !DILocation(line: 431, column: 3, scope: !6097)
!6102 = !DILocation(line: 432, column: 14, scope: !6052)
!6103 = !DILocation(line: 432, column: 32, scope: !6052)
!6104 = !DILocation(line: 433, column: 26, scope: !6052)
!6105 = !DILocation(line: 433, column: 24, scope: !6052)
!6106 = !DILocation(line: 433, column: 44, scope: !6052)
!6107 = !DILocation(line: 432, column: 13, scope: !6053)
!6108 = !DILocation(line: 435, column: 38, scope: !6051)
!6109 = !DILocation(line: 0, scope: !6051)
!6110 = !DILocation(line: 445, column: 3, scope: !6051)
!6111 = !DILocation(line: 447, column: 20, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6051, file: !5436, line: 447, column: 7)
!6113 = !DILocation(line: 447, column: 18, scope: !6112)
!6114 = !DILocation(line: 447, column: 7, scope: !6051)
!6115 = !DILocation(line: 448, column: 27, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6112, file: !5436, line: 447, column: 39)
!6117 = !DILocation(line: 448, column: 4, scope: !6116)
!6118 = !DILocation(line: 449, column: 4, scope: !6116)
!6119 = !DILocation(line: 450, column: 3, scope: !6116)
!6120 = !DILocation(line: 452, column: 3, scope: !6051)
!6121 = !DILocation(line: 453, column: 3, scope: !6051)
!6122 = !DILocation(line: 474, column: 15, scope: !6037)
!6123 = !DILocation(line: 476, column: 11, scope: !6059)
!6124 = !DILocation(line: 476, column: 6, scope: !6037)
!6125 = !DILocation(line: 477, column: 42, scope: !6058)
!6126 = !DILocation(line: 477, column: 22, scope: !6058)
!6127 = !DILocation(line: 477, column: 60, scope: !6058)
!6128 = !DILocation(line: 0, scope: !6058)
!6129 = !DILocation(line: 479, column: 21, scope: !6058)
!6130 = !DILocation(line: 479, column: 3, scope: !6058)
!6131 = !DILocation(line: 480, column: 3, scope: !6058)
!6132 = !DILocation(line: 481, column: 2, scope: !6058)
!6133 = !DILocation(line: 483, column: 1, scope: !6037)
!6134 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !3145, file: !3145, line: 245, type: !6135, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !6137)
!6135 = !DISubroutineType(types: !6136)
!6136 = !{!153, !3158, !5581}
!6137 = !{!6138, !6139}
!6138 = !DILocalVariable(name: "h", arg: 1, scope: !6134, file: !3145, line: 245, type: !3158)
!6139 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !6134, file: !3145, line: 245, type: !5581)
!6140 = !DILocation(line: 0, scope: !6134)
!6141 = !DILocation(line: 247, column: 20, scope: !6134)
!6142 = !DILocation(line: 247, column: 33, scope: !6134)
!6143 = !DILocation(line: 247, column: 2, scope: !6134)
!6144 = distinct !DISubprogram(name: "sys_heap_init", scope: !5436, file: !5436, line: 485, type: !6145, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !6147)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{null, !5439, !102, !153}
!6147 = !{!6148, !6149, !6150, !6151, !6152, !6153, !6154, !6155, !6156, !6157}
!6148 = !DILocalVariable(name: "heap", arg: 1, scope: !6144, file: !5436, line: 485, type: !5439)
!6149 = !DILocalVariable(name: "mem", arg: 2, scope: !6144, file: !5436, line: 485, type: !102)
!6150 = !DILocalVariable(name: "bytes", arg: 3, scope: !6144, file: !5436, line: 485, type: !153)
!6151 = !DILocalVariable(name: "addr", scope: !6144, file: !5436, line: 502, type: !22)
!6152 = !DILocalVariable(name: "end", scope: !6144, file: !5436, line: 503, type: !22)
!6153 = !DILocalVariable(name: "heap_sz", scope: !6144, file: !5436, line: 504, type: !5581)
!6154 = !DILocalVariable(name: "h", scope: !6144, file: !5436, line: 509, type: !3158)
!6155 = !DILocalVariable(name: "nb_buckets", scope: !6144, file: !5436, line: 520, type: !103)
!6156 = !DILocalVariable(name: "chunk0_size", scope: !6144, file: !5436, line: 521, type: !5581)
!6157 = !DILocalVariable(name: "i", scope: !6158, file: !5436, line: 526, type: !103)
!6158 = distinct !DILexicalBlock(scope: !6144, file: !5436, line: 526, column: 2)
!6159 = !DILocation(line: 0, scope: !6144)
!6160 = !DILocation(line: 491, column: 3, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !5436, line: 491, column: 3)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !5436, line: 491, column: 3)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !5436, line: 489, column: 46)
!6164 = distinct !DILexicalBlock(scope: !6144, file: !5436, line: 489, column: 6)
!6165 = !DILocation(line: 491, column: 3, scope: !6162)
!6166 = !DILocation(line: 491, column: 3, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6161, file: !5436, line: 491, column: 3)
!6168 = !DILocation(line: 498, column: 2, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !5436, line: 498, column: 2)
!6170 = distinct !DILexicalBlock(scope: !6144, file: !5436, line: 498, column: 2)
!6171 = !DILocation(line: 498, column: 2, scope: !6170)
!6172 = !DILocation(line: 498, column: 2, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6169, file: !5436, line: 498, column: 2)
!6174 = !DILocation(line: 499, column: 8, scope: !6144)
!6175 = !DILocation(line: 502, column: 19, scope: !6144)
!6176 = !DILocation(line: 503, column: 18, scope: !6144)
!6177 = !DILocation(line: 504, column: 27, scope: !6144)
!6178 = !DILocation(line: 504, column: 35, scope: !6144)
!6179 = !DILocation(line: 507, column: 2, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6181, file: !5436, line: 507, column: 2)
!6181 = distinct !DILexicalBlock(scope: !6144, file: !5436, line: 507, column: 2)
!6182 = !DILocation(line: 507, column: 2, scope: !6181)
!6183 = !DILocation(line: 507, column: 2, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6180, file: !5436, line: 507, column: 2)
!6185 = !DILocation(line: 509, column: 21, scope: !6144)
!6186 = !DILocation(line: 510, column: 8, scope: !6144)
!6187 = !DILocation(line: 510, column: 13, scope: !6144)
!6188 = !DILocation(line: 511, column: 5, scope: !6144)
!6189 = !DILocation(line: 511, column: 15, scope: !6144)
!6190 = !DILocation(line: 512, column: 5, scope: !6144)
!6191 = !DILocation(line: 512, column: 19, scope: !6144)
!6192 = !DILocation(line: 520, column: 19, scope: !6144)
!6193 = !DILocation(line: 522, column: 21, scope: !6144)
!6194 = !DILocation(line: 521, column: 56, scope: !6144)
!6195 = !DILocation(line: 521, column: 26, scope: !6144)
!6196 = !DILocation(line: 524, column: 2, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !5436, line: 524, column: 2)
!6198 = distinct !DILexicalBlock(scope: !6144, file: !5436, line: 524, column: 2)
!6199 = !DILocation(line: 524, column: 2, scope: !6198)
!6200 = !DILocation(line: 0, scope: !6158)
!6201 = !DILocation(line: 526, column: 20, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6158, file: !5436, line: 526, column: 2)
!6203 = !DILocation(line: 526, column: 2, scope: !6158)
!6204 = !DILocation(line: 524, column: 2, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6197, file: !5436, line: 524, column: 2)
!6206 = !DILocation(line: 531, column: 2, scope: !6144)
!6207 = !DILocation(line: 532, column: 2, scope: !6144)
!6208 = !DILocation(line: 533, column: 2, scope: !6144)
!6209 = !DILocation(line: 536, column: 41, scope: !6144)
!6210 = !DILocation(line: 536, column: 2, scope: !6144)
!6211 = !DILocation(line: 537, column: 2, scope: !6144)
!6212 = !DILocation(line: 540, column: 2, scope: !6144)
!6213 = !DILocation(line: 541, column: 2, scope: !6144)
!6214 = !DILocation(line: 542, column: 2, scope: !6144)
!6215 = !DILocation(line: 544, column: 2, scope: !6144)
!6216 = !DILocation(line: 545, column: 1, scope: !6144)
!6217 = !DILocation(line: 527, column: 17, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6202, file: !5436, line: 526, column: 39)
!6219 = !DILocation(line: 527, column: 22, scope: !6218)
!6220 = !DILocation(line: 526, column: 35, scope: !6202)
!6221 = distinct !{!6221, !6203, !6222}
!6222 = !DILocation(line: 528, column: 2, scope: !6158)
!6223 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3178, file: !3178, line: 1338, type: !6224, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6232)
!6224 = !DISubroutineType(types: !6225)
!6225 = !{!103, !4598, !102, !330, !6226, !108}
!6226 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4216, line: 99, baseType: !6227)
!6227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4216, line: 40, baseType: !6228)
!6228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3178, baseType: !6229)
!6229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6230)
!6230 = !{!6231}
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6229, file: !3178, baseType: !102, size: 32)
!6232 = !{!6233, !6234, !6235, !6236, !6237, !6238, !6242, !6243, !6244, !6246, !6251, !6294, !6297, !6300, !6301, !6302, !6303, !6304, !6305, !6306, !6309, !6310, !6311, !6315, !6318, !6320, !6323, !6324, !6325, !6330, !6336, !6339, !6343, !6349, !6353, !6356, !6358, !6361}
!6233 = !DILocalVariable(name: "out", arg: 1, scope: !6223, file: !3178, line: 1338, type: !4598)
!6234 = !DILocalVariable(name: "ctx", arg: 2, scope: !6223, file: !3178, line: 1338, type: !102)
!6235 = !DILocalVariable(name: "fp", arg: 3, scope: !6223, file: !3178, line: 1338, type: !330)
!6236 = !DILocalVariable(name: "ap", arg: 4, scope: !6223, file: !3178, line: 1339, type: !6226)
!6237 = !DILocalVariable(name: "flags", arg: 5, scope: !6223, file: !3178, line: 1339, type: !108)
!6238 = !DILocalVariable(name: "buf", scope: !6223, file: !3178, line: 1341, type: !6239)
!6239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 176, elements: !6240)
!6240 = !{!6241}
!6241 = !DISubrange(count: 22)
!6242 = !DILocalVariable(name: "count", scope: !6223, file: !3178, line: 1342, type: !153)
!6243 = !DILocalVariable(name: "sint", scope: !6223, file: !3178, line: 1343, type: !3197)
!6244 = !DILocalVariable(name: "tagged_ap", scope: !6223, file: !3178, line: 1345, type: !6245)
!6245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!6246 = !DILocalVariable(name: "rc", scope: !6247, file: !3178, line: 1377, type: !103)
!6247 = distinct !DILexicalBlock(scope: !6248, file: !3178, line: 1377, column: 4)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !3178, line: 1376, column: 19)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1376, column: 7)
!6250 = distinct !DILexicalBlock(scope: !6223, file: !3178, line: 1375, column: 19)
!6251 = !DILocalVariable(name: "state", scope: !6250, file: !3178, line: 1395, type: !6252)
!6252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6223, file: !3178, line: 1392, size: 192, elements: !6253)
!6253 = !{!6254, !6262}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6252, file: !3178, line: 1393, baseType: !6255, size: 64)
!6255 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3178, line: 166, size: 64, elements: !6256)
!6256 = !{!6257, !6258, !6259, !6260, !6261}
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6255, file: !3178, line: 168, baseType: !3197, size: 64)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6255, file: !3178, line: 171, baseType: !3200, size: 64)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6255, file: !3178, line: 174, baseType: !758, size: 64)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6255, file: !3178, line: 177, baseType: !756, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6255, file: !3178, line: 180, baseType: !102, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6252, file: !3178, line: 1394, baseType: !6263, size: 96, offset: 64)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3178, line: 189, size: 96, elements: !6264)
!6264 = !{!6265, !6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278, !6279, !6280, !6281, !6282, !6283, !6284, !6289}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6263, file: !3178, line: 191, baseType: !119, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6263, file: !3178, line: 194, baseType: !119, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6263, file: !3178, line: 197, baseType: !119, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6263, file: !3178, line: 200, baseType: !119, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6263, file: !3178, line: 203, baseType: !119, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6263, file: !3178, line: 206, baseType: !119, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6263, file: !3178, line: 209, baseType: !119, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6263, file: !3178, line: 212, baseType: !119, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6263, file: !3178, line: 219, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6263, file: !3178, line: 222, baseType: !119, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6263, file: !3178, line: 229, baseType: !119, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6263, file: !3178, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6263, file: !3178, line: 238, baseType: !119, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6263, file: !3178, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6263, file: !3178, line: 244, baseType: !119, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6263, file: !3178, line: 247, baseType: !119, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6263, file: !3178, line: 252, baseType: !119, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6263, file: !3178, line: 257, baseType: !119, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6263, file: !3178, line: 260, baseType: !165, size: 8, offset: 24)
!6284 = !DIDerivedType(tag: DW_TAG_member, scope: !6263, file: !3178, line: 262, baseType: !6285, size: 32, offset: 32)
!6285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6263, file: !3178, line: 262, size: 32, elements: !6286)
!6286 = !{!6287, !6288}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6285, file: !3178, line: 267, baseType: !103, size: 32)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6285, file: !3178, line: 289, baseType: !103, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_member, scope: !6263, file: !3178, line: 292, baseType: !6290, size: 32, offset: 64)
!6290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6263, file: !3178, line: 292, size: 32, elements: !6291)
!6291 = !{!6292, !6293}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6290, file: !3178, line: 297, baseType: !103, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6290, file: !3178, line: 306, baseType: !103, size: 32)
!6294 = !DILocalVariable(name: "conv", scope: !6250, file: !3178, line: 1400, type: !6295)
!6295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6296)
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 32)
!6297 = !DILocalVariable(name: "value", scope: !6250, file: !3178, line: 1401, type: !6298)
!6298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6299)
!6299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6255, size: 32)
!6300 = !DILocalVariable(name: "sp", scope: !6250, file: !3178, line: 1402, type: !330)
!6301 = !DILocalVariable(name: "width", scope: !6250, file: !3178, line: 1403, type: !103)
!6302 = !DILocalVariable(name: "precision", scope: !6250, file: !3178, line: 1404, type: !103)
!6303 = !DILocalVariable(name: "bps", scope: !6250, file: !3178, line: 1405, type: !330)
!6304 = !DILocalVariable(name: "bpe", scope: !6250, file: !3178, line: 1406, type: !330)
!6305 = !DILocalVariable(name: "sign", scope: !6250, file: !3178, line: 1407, type: !158)
!6306 = !DILocalVariable(name: "arg", scope: !6307, file: !3178, line: 1432, type: !103)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !3178, line: 1431, column: 24)
!6308 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1431, column: 7)
!6309 = !DILocalVariable(name: "specifier_cat", scope: !6250, file: !3178, line: 1468, type: !3177)
!6310 = !DILocalVariable(name: "length_mod", scope: !6250, file: !3178, line: 1470, type: !3185)
!6311 = !DILocalVariable(name: "rc", scope: !6312, file: !3178, line: 1575, type: !103)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !3178, line: 1575, column: 4)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3178, line: 1574, column: 43)
!6314 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1574, column: 7)
!6315 = !DILocalVariable(name: "rc", scope: !6316, file: !3178, line: 1584, type: !103)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !3178, line: 1584, column: 4)
!6317 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1582, column: 28)
!6318 = !DILocalVariable(name: "len", scope: !6319, file: !3178, line: 1589, type: !153)
!6319 = distinct !DILexicalBlock(scope: !6317, file: !3178, line: 1586, column: 13)
!6320 = !DILocalVariable(name: "len", scope: !6321, file: !3178, line: 1641, type: !153)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !3178, line: 1640, column: 24)
!6322 = distinct !DILexicalBlock(scope: !6317, file: !3178, line: 1640, column: 8)
!6323 = !DILocalVariable(name: "nj_len", scope: !6250, file: !3178, line: 1722, type: !153)
!6324 = !DILocalVariable(name: "pad_len", scope: !6250, file: !3178, line: 1723, type: !103)
!6325 = !DILocalVariable(name: "pad", scope: !6326, file: !3178, line: 1751, type: !158)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !3178, line: 1750, column: 26)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !3178, line: 1750, column: 8)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !3178, line: 1747, column: 18)
!6329 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1747, column: 7)
!6330 = !DILocalVariable(name: "rc", scope: !6331, file: !3178, line: 1758, type: !103)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !3178, line: 1758, column: 7)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !3178, line: 1757, column: 21)
!6333 = distinct !DILexicalBlock(scope: !6334, file: !3178, line: 1757, column: 10)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !3178, line: 1756, column: 26)
!6335 = distinct !DILexicalBlock(scope: !6326, file: !3178, line: 1756, column: 9)
!6336 = !DILocalVariable(name: "rc", scope: !6337, file: !3178, line: 1765, type: !103)
!6337 = distinct !DILexicalBlock(scope: !6338, file: !3178, line: 1765, column: 6)
!6338 = distinct !DILexicalBlock(scope: !6326, file: !3178, line: 1764, column: 25)
!6339 = !DILocalVariable(name: "rc", scope: !6340, file: !3178, line: 1774, type: !103)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !3178, line: 1774, column: 4)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !3178, line: 1773, column: 18)
!6342 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1773, column: 7)
!6343 = !DILocalVariable(name: "rc", scope: !6344, file: !3178, line: 1819, type: !103)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !3178, line: 1819, column: 5)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !3178, line: 1818, column: 44)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !3178, line: 1818, column: 8)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !3178, line: 1817, column: 10)
!6348 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1777, column: 7)
!6349 = !DILocalVariable(name: "rc", scope: !6350, file: !3178, line: 1823, type: !103)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !3178, line: 1823, column: 5)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !3178, line: 1822, column: 26)
!6352 = distinct !DILexicalBlock(scope: !6347, file: !3178, line: 1822, column: 8)
!6353 = !DILocalVariable(name: "rc", scope: !6354, file: !3178, line: 1828, type: !103)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !3178, line: 1828, column: 5)
!6355 = distinct !DILexicalBlock(scope: !6347, file: !3178, line: 1827, column: 26)
!6356 = !DILocalVariable(name: "rc", scope: !6357, file: !3178, line: 1831, type: !103)
!6357 = distinct !DILexicalBlock(scope: !6347, file: !3178, line: 1831, column: 4)
!6358 = !DILocalVariable(name: "rc", scope: !6359, file: !3178, line: 1836, type: !103)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !3178, line: 1836, column: 4)
!6360 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1835, column: 21)
!6361 = !DILabel(scope: !6317, name: "prec_int_pad0", file: !3178, line: 1634)
!6362 = !DILocation(line: 0, scope: !6223)
!6363 = !DILocation(line: 1341, column: 2, scope: !6223)
!6364 = !DILocation(line: 1341, column: 7, scope: !6223)
!6365 = !DILocation(line: 1375, column: 2, scope: !6223)
!6366 = !DILocation(line: 1342, column: 9, scope: !6223)
!6367 = !DILocation(line: 1375, column: 9, scope: !6223)
!6368 = !DILocation(line: 1377, column: 4, scope: !6247)
!6369 = !DILocation(line: 0, scope: !6247)
!6370 = !DILocation(line: 1377, column: 4, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6247, file: !3178, line: 1377, column: 4)
!6372 = distinct !{!6372, !6365, !6373}
!6373 = !DILocation(line: 1839, column: 2, scope: !6223)
!6374 = !DILocation(line: 1392, column: 3, scope: !6250)
!6375 = !DILocation(line: 1395, column: 5, scope: !6250)
!6376 = !DILocation(line: 0, scope: !6250)
!6377 = !DILocation(line: 1409, column: 8, scope: !6250)
!6378 = !DILocation(line: 1414, column: 13, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1414, column: 7)
!6380 = !DILocation(line: 1414, column: 7, scope: !6250)
!6381 = !DILocation(line: 1415, column: 12, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6379, file: !3178, line: 1414, column: 25)
!6383 = !DILocation(line: 1417, column: 14, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6382, file: !3178, line: 1417, column: 8)
!6385 = !DILocation(line: 1417, column: 8, scope: !6382)
!6386 = !DILocation(line: 1418, column: 21, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6384, file: !3178, line: 1417, column: 19)
!6388 = !DILocation(line: 1419, column: 13, scope: !6387)
!6389 = !DILocation(line: 1420, column: 4, scope: !6387)
!6390 = !DILocation(line: 1421, column: 20, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6379, file: !3178, line: 1421, column: 14)
!6392 = !DILocation(line: 1421, column: 14, scope: !6379)
!6393 = !DILocation(line: 1431, column: 13, scope: !6308)
!6394 = !DILocation(line: 1431, column: 7, scope: !6250)
!6395 = !DILocation(line: 1432, column: 14, scope: !6307)
!6396 = !DILocation(line: 0, scope: !6307)
!6397 = !DILocation(line: 1434, column: 12, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6307, file: !3178, line: 1434, column: 8)
!6399 = !DILocation(line: 1434, column: 8, scope: !6307)
!6400 = !DILocation(line: 1435, column: 24, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6398, file: !3178, line: 1434, column: 17)
!6402 = !DILocation(line: 1436, column: 4, scope: !6401)
!6403 = !DILocation(line: 1439, column: 20, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6308, file: !3178, line: 1439, column: 14)
!6405 = !DILocation(line: 1439, column: 14, scope: !6308)
!6406 = !DILocation(line: 1469, column: 37, scope: !6250)
!6407 = !DILocation(line: 1448, column: 20, scope: !6250)
!6408 = !DILocation(line: 1449, column: 22, scope: !6250)
!6409 = !DILocation(line: 1471, column: 34, scope: !6250)
!6410 = !DILocation(line: 1478, column: 7, scope: !6250)
!6411 = !DILocation(line: 1479, column: 4, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !3178, line: 1478, column: 40)
!6413 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1478, column: 7)
!6414 = !DILocation(line: 1484, column: 19, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6412, file: !3178, line: 1479, column: 24)
!6416 = !DILocation(line: 1484, column: 17, scope: !6415)
!6417 = !DILocation(line: 1485, column: 5, scope: !6415)
!6418 = !DILocation(line: 1492, column: 20, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !3178, line: 1491, column: 12)
!6420 = distinct !DILexicalBlock(scope: !6415, file: !3178, line: 1487, column: 9)
!6421 = !DILocation(line: 1492, column: 18, scope: !6419)
!6422 = !DILocation(line: 1494, column: 5, scope: !6415)
!6423 = !DILocation(line: 1497, column: 23, scope: !6415)
!6424 = !DILocation(line: 1496, column: 17, scope: !6415)
!6425 = !DILocation(line: 1498, column: 5, scope: !6415)
!6426 = !DILocation(line: 1501, column: 23, scope: !6415)
!6427 = !DILocation(line: 1500, column: 17, scope: !6415)
!6428 = !DILocation(line: 1502, column: 5, scope: !6415)
!6429 = !DILocation(line: 1513, column: 23, scope: !6415)
!6430 = !DILocation(line: 1513, column: 6, scope: !6415)
!6431 = !DILocation(line: 1512, column: 17, scope: !6415)
!6432 = !DILocation(line: 1514, column: 5, scope: !6415)
!6433 = !DILocation(line: 0, scope: !6415)
!6434 = !DILocation(line: 1516, column: 8, scope: !6412)
!6435 = !DILocation(line: 1517, column: 19, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !3178, line: 1516, column: 33)
!6437 = distinct !DILexicalBlock(scope: !6412, file: !3178, line: 1516, column: 8)
!6438 = !DILocation(line: 1517, column: 17, scope: !6436)
!6439 = !DILocation(line: 1518, column: 4, scope: !6436)
!6440 = !DILocation(line: 1519, column: 19, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6442, file: !3178, line: 1518, column: 39)
!6442 = distinct !DILexicalBlock(scope: !6437, file: !3178, line: 1518, column: 15)
!6443 = !DILocation(line: 1519, column: 17, scope: !6441)
!6444 = !DILocation(line: 1520, column: 4, scope: !6441)
!6445 = !DILocation(line: 1522, column: 4, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !3178, line: 1521, column: 47)
!6447 = distinct !DILexicalBlock(scope: !6413, file: !3178, line: 1521, column: 14)
!6448 = !DILocation(line: 1527, column: 19, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6446, file: !3178, line: 1522, column: 24)
!6450 = !DILocation(line: 1527, column: 17, scope: !6449)
!6451 = !DILocation(line: 1528, column: 5, scope: !6449)
!6452 = !DILocation(line: 0, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !3178, line: 1530, column: 9)
!6454 = !DILocation(line: 1540, column: 23, scope: !6449)
!6455 = !DILocation(line: 1539, column: 17, scope: !6449)
!6456 = !DILocation(line: 1542, column: 5, scope: !6449)
!6457 = !DILocation(line: 1545, column: 23, scope: !6449)
!6458 = !DILocation(line: 1544, column: 17, scope: !6449)
!6459 = !DILocation(line: 1547, column: 5, scope: !6449)
!6460 = !DILocation(line: 1551, column: 23, scope: !6449)
!6461 = !DILocation(line: 1551, column: 6, scope: !6449)
!6462 = !DILocation(line: 1550, column: 17, scope: !6449)
!6463 = !DILocation(line: 1552, column: 5, scope: !6449)
!6464 = !DILocation(line: 0, scope: !6449)
!6465 = !DILocation(line: 1554, column: 8, scope: !6446)
!6466 = !DILocation(line: 1555, column: 19, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !3178, line: 1554, column: 33)
!6468 = distinct !DILexicalBlock(scope: !6446, file: !3178, line: 1554, column: 8)
!6469 = !DILocation(line: 1555, column: 17, scope: !6467)
!6470 = !DILocation(line: 1556, column: 4, scope: !6467)
!6471 = !DILocation(line: 1557, column: 19, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !3178, line: 1556, column: 39)
!6473 = distinct !DILexicalBlock(scope: !6468, file: !3178, line: 1556, column: 15)
!6474 = !DILocation(line: 1557, column: 17, scope: !6472)
!6475 = !DILocation(line: 1558, column: 4, scope: !6472)
!6476 = !DILocation(line: 0, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !3178, line: 1560, column: 8)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !3178, line: 1559, column: 45)
!6479 = distinct !DILexicalBlock(scope: !6447, file: !3178, line: 1559, column: 14)
!6480 = !DILocation(line: 1566, column: 17, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6482, file: !3178, line: 1565, column: 46)
!6482 = distinct !DILexicalBlock(scope: !6479, file: !3178, line: 1565, column: 14)
!6483 = !DILocation(line: 1566, column: 15, scope: !6481)
!6484 = !DILocation(line: 1567, column: 3, scope: !6481)
!6485 = !DILocation(line: 1574, column: 21, scope: !6314)
!6486 = !DILocation(line: 1575, column: 4, scope: !6312)
!6487 = !DILocation(line: 0, scope: !6312)
!6488 = !DILocation(line: 1575, column: 4, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6312, file: !3178, line: 1575, column: 4)
!6490 = !DILocation(line: 1582, column: 17, scope: !6250)
!6491 = !DILocation(line: 1582, column: 3, scope: !6250)
!6492 = !DILocation(line: 1584, column: 4, scope: !6316)
!6493 = !DILocation(line: 0, scope: !6316)
!6494 = !DILocation(line: 1584, column: 4, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6316, file: !3178, line: 1584, column: 4)
!6496 = !DILocation(line: 1587, column: 31, scope: !6319)
!6497 = !DILocation(line: 1591, column: 18, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6319, file: !3178, line: 1591, column: 8)
!6499 = !DILocation(line: 1591, column: 8, scope: !6319)
!6500 = !DILocation(line: 1592, column: 11, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6498, file: !3178, line: 1591, column: 24)
!6502 = !DILocation(line: 0, scope: !6319)
!6503 = !DILocation(line: 1593, column: 4, scope: !6501)
!6504 = !DILocation(line: 1594, column: 11, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6498, file: !3178, line: 1593, column: 11)
!6506 = !DILocation(line: 1604, column: 51, scope: !6317)
!6507 = !DILocation(line: 1604, column: 13, scope: !6317)
!6508 = !DILocation(line: 1604, column: 11, scope: !6317)
!6509 = !DILocation(line: 1606, column: 4, scope: !6317)
!6510 = !DILocation(line: 1609, column: 14, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6317, file: !3178, line: 1609, column: 8)
!6512 = !DILocation(line: 1609, column: 8, scope: !6317)
!6513 = !DILocation(line: 1619, column: 18, scope: !6317)
!6514 = !DILocation(line: 1620, column: 13, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6317, file: !3178, line: 1620, column: 8)
!6516 = !DILocation(line: 1620, column: 8, scope: !6317)
!6517 = !DILocation(line: 1622, column: 36, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6515, file: !3178, line: 1620, column: 18)
!6519 = !DILocation(line: 1622, column: 17, scope: !6518)
!6520 = !DILocation(line: 1623, column: 4, scope: !6518)
!6521 = !DILocation(line: 1632, column: 29, scope: !6317)
!6522 = !DILocation(line: 1632, column: 10, scope: !6317)
!6523 = !DILocation(line: 1632, column: 4, scope: !6317)
!6524 = !DILocation(line: 1407, column: 8, scope: !6250)
!6525 = !DILocation(line: 0, scope: !6317)
!6526 = !DILocation(line: 1634, column: 3, scope: !6317)
!6527 = !DILocation(line: 1640, column: 18, scope: !6322)
!6528 = !DILocation(line: 1640, column: 8, scope: !6317)
!6529 = !DILocation(line: 1729, column: 13, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1729, column: 7)
!6531 = !DILocation(line: 1641, column: 22, scope: !6321)
!6532 = !DILocation(line: 0, scope: !6321)
!6533 = !DILocation(line: 1646, column: 21, scope: !6321)
!6534 = !DILocation(line: 1649, column: 13, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6321, file: !3178, line: 1649, column: 9)
!6536 = !DILocation(line: 1649, column: 9, scope: !6321)
!6537 = !DILocation(line: 1650, column: 35, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6535, file: !3178, line: 1649, column: 34)
!6539 = !DILocation(line: 1650, column: 23, scope: !6538)
!6540 = !DILocation(line: 1651, column: 5, scope: !6538)
!6541 = !DILocation(line: 1660, column: 15, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6317, file: !3178, line: 1660, column: 8)
!6543 = !DILocation(line: 1660, column: 19, scope: !6542)
!6544 = !DILocation(line: 1660, column: 8, scope: !6317)
!6545 = !DILocation(line: 1661, column: 23, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6542, file: !3178, line: 1660, column: 28)
!6547 = !DILocation(line: 1661, column: 11, scope: !6546)
!6548 = !DILocation(line: 1665, column: 22, scope: !6546)
!6549 = !DILocation(line: 1666, column: 21, scope: !6546)
!6550 = !DILocation(line: 1668, column: 5, scope: !6546)
!6551 = !DILocation(line: 1677, column: 30, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3178, line: 1676, column: 49)
!6553 = distinct !DILexicalBlock(scope: !6317, file: !3178, line: 1676, column: 8)
!6554 = !DILocation(line: 1677, column: 5, scope: !6552)
!6555 = !DILocation(line: 1680, column: 4, scope: !6317)
!6556 = !DILocation(line: 0, scope: !6498)
!6557 = !DILocation(line: 1597, column: 14, scope: !6319)
!6558 = !DILocation(line: 1699, column: 11, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1699, column: 7)
!6560 = !DILocation(line: 1699, column: 7, scope: !6250)
!6561 = !DILocation(line: 1725, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1725, column: 7)
!6563 = !DILocation(line: 1725, column: 12, scope: !6562)
!6564 = !DILocation(line: 1747, column: 13, scope: !6329)
!6565 = !DILocation(line: 1747, column: 7, scope: !6250)
!6566 = !DILocation(line: 1722, column: 24, scope: !6250)
!6567 = !DILocation(line: 1725, column: 7, scope: !6250)
!6568 = !DILocation(line: 1729, column: 7, scope: !6250)
!6569 = !DILocation(line: 1736, column: 13, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6250, file: !3178, line: 1736, column: 7)
!6571 = !DILocation(line: 1735, column: 19, scope: !6250)
!6572 = !DILocation(line: 1736, column: 7, scope: !6250)
!6573 = !DILocation(line: 1748, column: 10, scope: !6328)
!6574 = !DILocation(line: 1750, column: 15, scope: !6327)
!6575 = !DILocation(line: 1750, column: 8, scope: !6328)
!6576 = !DILocation(line: 0, scope: !6326)
!6577 = !DILocation(line: 1756, column: 15, scope: !6335)
!6578 = !DILocation(line: 1756, column: 9, scope: !6326)
!6579 = !DILocation(line: 1758, column: 7, scope: !6331)
!6580 = !DILocation(line: 0, scope: !6331)
!6581 = !DILocation(line: 1758, column: 7, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6331, file: !3178, line: 1758, column: 7)
!6583 = !DILocation(line: 1764, column: 5, scope: !6326)
!6584 = !DILocation(line: 0, scope: !6328)
!6585 = !DILocation(line: 1764, column: 20, scope: !6326)
!6586 = !DILocation(line: 1764, column: 17, scope: !6326)
!6587 = !DILocation(line: 1765, column: 6, scope: !6337)
!6588 = !DILocation(line: 0, scope: !6337)
!6589 = !DILocation(line: 1765, column: 6, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6337, file: !3178, line: 1765, column: 6)
!6591 = distinct !{!6591, !6583, !6592}
!6592 = !DILocation(line: 1766, column: 5, scope: !6326)
!6593 = !DILocation(line: 1773, column: 12, scope: !6342)
!6594 = !DILocation(line: 1773, column: 7, scope: !6250)
!6595 = !DILocation(line: 1773, column: 7, scope: !6342)
!6596 = !DILocation(line: 1774, column: 4, scope: !6340)
!6597 = !DILocation(line: 0, scope: !6340)
!6598 = !DILocation(line: 1774, column: 4, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6340, file: !3178, line: 1774, column: 4)
!6600 = !DILocation(line: 1818, column: 8, scope: !6346)
!6601 = !DILocation(line: 1818, column: 27, scope: !6346)
!6602 = !DILocation(line: 1818, column: 25, scope: !6346)
!6603 = !DILocation(line: 1818, column: 8, scope: !6347)
!6604 = !DILocation(line: 1819, column: 5, scope: !6344)
!6605 = !DILocation(line: 0, scope: !6344)
!6606 = !DILocation(line: 1819, column: 5, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6344, file: !3178, line: 1819, column: 5)
!6608 = !DILocation(line: 1822, column: 14, scope: !6352)
!6609 = !DILocation(line: 1822, column: 8, scope: !6347)
!6610 = !DILocation(line: 1823, column: 5, scope: !6350)
!6611 = !DILocation(line: 0, scope: !6350)
!6612 = !DILocation(line: 1823, column: 5, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6350, file: !3178, line: 1823, column: 5)
!6614 = !DILocation(line: 1826, column: 20, scope: !6347)
!6615 = !DILocation(line: 1827, column: 4, scope: !6347)
!6616 = !DILocation(line: 0, scope: !6347)
!6617 = !DILocation(line: 1827, column: 21, scope: !6347)
!6618 = !DILocation(line: 1827, column: 18, scope: !6347)
!6619 = !DILocation(line: 1828, column: 5, scope: !6354)
!6620 = !DILocation(line: 0, scope: !6354)
!6621 = !DILocation(line: 1828, column: 5, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6354, file: !3178, line: 1828, column: 5)
!6623 = distinct !{!6623, !6615, !6624}
!6624 = !DILocation(line: 1829, column: 4, scope: !6347)
!6625 = !DILocation(line: 1831, column: 4, scope: !6357)
!6626 = !DILocation(line: 0, scope: !6357)
!6627 = !DILocation(line: 1831, column: 4, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6357, file: !3178, line: 1831, column: 4)
!6629 = !DILocation(line: 1835, column: 16, scope: !6250)
!6630 = !DILocation(line: 1835, column: 3, scope: !6250)
!6631 = !DILocation(line: 1836, column: 4, scope: !6359)
!6632 = !DILocation(line: 0, scope: !6359)
!6633 = !DILocation(line: 1836, column: 4, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6359, file: !3178, line: 1836, column: 4)
!6635 = !DILocation(line: 1837, column: 4, scope: !6360)
!6636 = distinct !{!6636, !6630, !6637}
!6637 = !DILocation(line: 1838, column: 3, scope: !6250)
!6638 = !DILocation(line: 1844, column: 1, scope: !6223)
!6639 = distinct !DISubprogram(name: "extract_conversion", scope: !3178, file: !3178, line: 642, type: !6640, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6642)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{!330, !6296, !330}
!6642 = !{!6643, !6644}
!6643 = !DILocalVariable(name: "conv", arg: 1, scope: !6639, file: !3178, line: 642, type: !6296)
!6644 = !DILocalVariable(name: "sp", arg: 2, scope: !6639, file: !3178, line: 643, type: !330)
!6645 = !DILocation(line: 0, scope: !6639)
!6646 = !DILocation(line: 645, column: 10, scope: !6639)
!6647 = !DILocation(line: 653, column: 2, scope: !6639)
!6648 = !DILocation(line: 654, column: 6, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6639, file: !3178, line: 654, column: 6)
!6650 = !DILocation(line: 654, column: 10, scope: !6649)
!6651 = !DILocation(line: 654, column: 6, scope: !6639)
!6652 = !DILocation(line: 655, column: 24, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6649, file: !3178, line: 654, column: 18)
!6654 = !DILocation(line: 655, column: 19, scope: !6653)
!6655 = !DILocation(line: 656, column: 3, scope: !6653)
!6656 = !DILocation(line: 659, column: 7, scope: !6639)
!6657 = !DILocation(line: 660, column: 7, scope: !6639)
!6658 = !DILocation(line: 661, column: 7, scope: !6639)
!6659 = !DILocation(line: 662, column: 7, scope: !6639)
!6660 = !DILocation(line: 663, column: 7, scope: !6639)
!6661 = !DILocation(line: 665, column: 2, scope: !6639)
!6662 = !DILocation(line: 666, column: 1, scope: !6639)
!6663 = distinct !DISubprogram(name: "outs", scope: !3178, file: !3178, line: 1319, type: !6664, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6666)
!6664 = !DISubroutineType(types: !6665)
!6665 = !{!103, !4598, !102, !330, !330}
!6666 = !{!6667, !6668, !6669, !6670, !6671, !6672}
!6667 = !DILocalVariable(name: "out", arg: 1, scope: !6663, file: !3178, line: 1319, type: !4598)
!6668 = !DILocalVariable(name: "ctx", arg: 2, scope: !6663, file: !3178, line: 1320, type: !102)
!6669 = !DILocalVariable(name: "sp", arg: 3, scope: !6663, file: !3178, line: 1321, type: !330)
!6670 = !DILocalVariable(name: "ep", arg: 4, scope: !6663, file: !3178, line: 1322, type: !330)
!6671 = !DILocalVariable(name: "count", scope: !6663, file: !3178, line: 1324, type: !153)
!6672 = !DILocalVariable(name: "rc", scope: !6673, file: !3178, line: 1327, type: !103)
!6673 = distinct !DILexicalBlock(scope: !6663, file: !3178, line: 1326, column: 45)
!6674 = !DILocation(line: 0, scope: !6663)
!6675 = !DILocation(line: 1326, column: 2, scope: !6663)
!6676 = !DILocation(line: 1324, column: 9, scope: !6663)
!6677 = !DILocation(line: 1326, column: 13, scope: !6663)
!6678 = !DILocation(line: 1326, column: 19, scope: !6663)
!6679 = !DILocation(line: 1327, column: 21, scope: !6673)
!6680 = !DILocation(line: 1326, column: 36, scope: !6663)
!6681 = !DILocation(line: 1326, column: 39, scope: !6663)
!6682 = !DILocation(line: 1327, column: 24, scope: !6673)
!6683 = !DILocation(line: 1327, column: 16, scope: !6673)
!6684 = !DILocation(line: 1327, column: 12, scope: !6673)
!6685 = !DILocation(line: 0, scope: !6673)
!6686 = !DILocation(line: 1329, column: 10, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6673, file: !3178, line: 1329, column: 7)
!6688 = !DILocation(line: 1329, column: 7, scope: !6673)
!6689 = distinct !{!6689, !6675, !6690}
!6690 = !DILocation(line: 1333, column: 2, scope: !6663)
!6691 = !DILocation(line: 1336, column: 1, scope: !6663)
!6692 = distinct !DISubprogram(name: "encode_uint", scope: !3178, file: !3178, line: 788, type: !6693, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6695)
!6693 = !DISubroutineType(types: !6694)
!6694 = !{!157, !3200, !6296, !157, !330}
!6695 = !{!6696, !6697, !6698, !6699, !6700, !6701, !6703, !6704}
!6696 = !DILocalVariable(name: "value", arg: 1, scope: !6692, file: !3178, line: 788, type: !3200)
!6697 = !DILocalVariable(name: "conv", arg: 2, scope: !6692, file: !3178, line: 789, type: !6296)
!6698 = !DILocalVariable(name: "bps", arg: 3, scope: !6692, file: !3178, line: 790, type: !157)
!6699 = !DILocalVariable(name: "bpe", arg: 4, scope: !6692, file: !3178, line: 791, type: !330)
!6700 = !DILocalVariable(name: "upcase", scope: !6692, file: !3178, line: 793, type: !119)
!6701 = !DILocalVariable(name: "radix", scope: !6692, file: !3178, line: 794, type: !6702)
!6702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6703 = !DILocalVariable(name: "bp", scope: !6692, file: !3178, line: 795, type: !157)
!6704 = !DILocalVariable(name: "lsv", scope: !6705, file: !3178, line: 798, type: !32)
!6705 = distinct !DILexicalBlock(scope: !6692, file: !3178, line: 797, column: 5)
!6706 = !DILocation(line: 0, scope: !6692)
!6707 = !DILocation(line: 793, column: 35, scope: !6692)
!6708 = !DILocation(line: 793, column: 24, scope: !6692)
!6709 = !DILocation(line: 793, column: 16, scope: !6692)
!6710 = !DILocation(line: 794, column: 29, scope: !6692)
!6711 = !DILocation(line: 795, column: 24, scope: !6692)
!6712 = !DILocation(line: 795, column: 17, scope: !6692)
!6713 = !DILocation(line: 797, column: 2, scope: !6692)
!6714 = !DILocation(line: 802, column: 9, scope: !6705)
!6715 = !DILocation(line: 798, column: 22, scope: !6705)
!6716 = !DILocation(line: 0, scope: !6705)
!6717 = !DILocation(line: 800, column: 16, scope: !6705)
!6718 = !DILocation(line: 800, column: 11, scope: !6705)
!6719 = !DILocation(line: 800, column: 4, scope: !6705)
!6720 = !DILocation(line: 800, column: 9, scope: !6705)
!6721 = !DILocation(line: 803, column: 18, scope: !6692)
!6722 = !DILocation(line: 803, column: 24, scope: !6692)
!6723 = !DILocation(line: 803, column: 2, scope: !6705)
!6724 = distinct !{!6724, !6713, !6725}
!6725 = !DILocation(line: 803, column: 37, scope: !6692)
!6726 = !DILocation(line: 808, column: 12, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6692, file: !3178, line: 808, column: 6)
!6728 = !DILocation(line: 808, column: 6, scope: !6692)
!6729 = !DILocation(line: 809, column: 7, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6727, file: !3178, line: 808, column: 23)
!6731 = !DILocation(line: 813, column: 3, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !3178, line: 811, column: 27)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !3178, line: 811, column: 14)
!6734 = distinct !DILexicalBlock(scope: !6730, file: !3178, line: 809, column: 7)
!6735 = !DILocation(line: 0, scope: !6734)
!6736 = !DILocation(line: 818, column: 2, scope: !6692)
!6737 = distinct !DISubprogram(name: "store_count", scope: !3178, file: !3178, line: 1280, type: !6738, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6742)
!6738 = !DISubroutineType(types: !6739)
!6739 = !{null, !6740, !102, !103}
!6740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6741, size: 32)
!6741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6263)
!6742 = !{!6743, !6744, !6745}
!6743 = !DILocalVariable(name: "conv", arg: 1, scope: !6737, file: !3178, line: 1280, type: !6740)
!6744 = !DILocalVariable(name: "dp", arg: 2, scope: !6737, file: !3178, line: 1281, type: !102)
!6745 = !DILocalVariable(name: "count", arg: 3, scope: !6737, file: !3178, line: 1282, type: !103)
!6746 = !DILocation(line: 0, scope: !6737)
!6747 = !DILocation(line: 1284, column: 38, scope: !6737)
!6748 = !DILocation(line: 1284, column: 2, scope: !6737)
!6749 = !DILocation(line: 1286, column: 4, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6737, file: !3178, line: 1284, column: 50)
!6751 = !DILocation(line: 1286, column: 14, scope: !6750)
!6752 = !DILocation(line: 1287, column: 3, scope: !6750)
!6753 = !DILocation(line: 1289, column: 24, scope: !6750)
!6754 = !DILocation(line: 1289, column: 22, scope: !6750)
!6755 = !DILocation(line: 1290, column: 3, scope: !6750)
!6756 = !DILocation(line: 1292, column: 18, scope: !6750)
!6757 = !DILocation(line: 1292, column: 4, scope: !6750)
!6758 = !DILocation(line: 1292, column: 16, scope: !6750)
!6759 = !DILocation(line: 1293, column: 3, scope: !6750)
!6760 = !DILocation(line: 1295, column: 4, scope: !6750)
!6761 = !DILocation(line: 1295, column: 15, scope: !6750)
!6762 = !DILocation(line: 1296, column: 3, scope: !6750)
!6763 = !DILocation(line: 1298, column: 22, scope: !6750)
!6764 = !DILocation(line: 1298, column: 4, scope: !6750)
!6765 = !DILocation(line: 1298, column: 20, scope: !6750)
!6766 = !DILocation(line: 1299, column: 3, scope: !6750)
!6767 = !DILocation(line: 1301, column: 21, scope: !6750)
!6768 = !DILocation(line: 1301, column: 4, scope: !6750)
!6769 = !DILocation(line: 1301, column: 19, scope: !6750)
!6770 = !DILocation(line: 1302, column: 3, scope: !6750)
!6771 = !DILocation(line: 1304, column: 4, scope: !6750)
!6772 = !DILocation(line: 1304, column: 17, scope: !6750)
!6773 = !DILocation(line: 1305, column: 3, scope: !6750)
!6774 = !DILocation(line: 1307, column: 4, scope: !6750)
!6775 = !DILocation(line: 1307, column: 20, scope: !6750)
!6776 = !DILocation(line: 1308, column: 3, scope: !6750)
!6777 = !DILocation(line: 1316, column: 1, scope: !6737)
!6778 = distinct !DISubprogram(name: "isupper", scope: !6779, file: !6779, line: 16, type: !782, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6780)
!6779 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6780 = !{!6781}
!6781 = !DILocalVariable(name: "a", arg: 1, scope: !6778, file: !6779, line: 16, type: !103)
!6782 = !DILocation(line: 0, scope: !6778)
!6783 = !DILocation(line: 18, column: 29, scope: !6778)
!6784 = !DILocation(line: 18, column: 45, scope: !6778)
!6785 = !DILocation(line: 18, column: 2, scope: !6778)
!6786 = distinct !DISubprogram(name: "conversion_radix", scope: !3178, file: !3178, line: 761, type: !6787, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6789)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{!153, !158}
!6789 = !{!6790}
!6790 = !DILocalVariable(name: "specifier", arg: 1, scope: !6786, file: !3178, line: 761, type: !158)
!6791 = !DILocation(line: 0, scope: !6786)
!6792 = !DILocation(line: 763, column: 2, scope: !6786)
!6793 = !DILocation(line: 770, column: 3, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6786, file: !3178, line: 763, column: 21)
!6795 = !DILocation(line: 774, column: 3, scope: !6794)
!6796 = !DILocation(line: 0, scope: !6794)
!6797 = !DILocation(line: 776, column: 1, scope: !6786)
!6798 = distinct !DISubprogram(name: "extract_flags", scope: !3178, file: !3178, line: 339, type: !6640, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6799)
!6799 = !{!6800, !6801, !6802}
!6800 = !DILocalVariable(name: "conv", arg: 1, scope: !6798, file: !3178, line: 339, type: !6296)
!6801 = !DILocalVariable(name: "sp", arg: 2, scope: !6798, file: !3178, line: 340, type: !330)
!6802 = !DILocalVariable(name: "loop", scope: !6798, file: !3178, line: 342, type: !119)
!6803 = !DILocation(line: 0, scope: !6798)
!6804 = !DILocation(line: 344, column: 2, scope: !6798)
!6805 = !DILocation(line: 345, column: 11, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6798, file: !3178, line: 344, column: 5)
!6807 = !DILocation(line: 345, column: 3, scope: !6806)
!6808 = !DILocation(line: 351, column: 4, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6806, file: !3178, line: 345, column: 16)
!6810 = !DILocation(line: 354, column: 4, scope: !6809)
!6811 = !DILocation(line: 357, column: 4, scope: !6809)
!6812 = !DILocation(line: 360, column: 4, scope: !6809)
!6813 = !DILocation(line: 0, scope: !6809)
!6814 = !DILocation(line: 370, column: 12, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6798, file: !3178, line: 370, column: 6)
!6816 = !DILocation(line: 370, column: 22, scope: !6815)
!6817 = !DILocation(line: 371, column: 19, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6815, file: !3178, line: 370, column: 42)
!6819 = !DILocation(line: 372, column: 2, scope: !6818)
!6820 = !DILocation(line: 376, column: 2, scope: !6798)
!6821 = distinct !DISubprogram(name: "extract_width", scope: !3178, file: !3178, line: 388, type: !6640, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6822)
!6822 = !{!6823, !6824, !6825, !6826}
!6823 = !DILocalVariable(name: "conv", arg: 1, scope: !6821, file: !3178, line: 388, type: !6296)
!6824 = !DILocalVariable(name: "sp", arg: 2, scope: !6821, file: !3178, line: 389, type: !330)
!6825 = !DILocalVariable(name: "wp", scope: !6821, file: !3178, line: 398, type: !330)
!6826 = !DILocalVariable(name: "width", scope: !6821, file: !3178, line: 399, type: !153)
!6827 = !DILocation(line: 0, scope: !6821)
!6828 = !DILocation(line: 391, column: 8, scope: !6821)
!6829 = !DILocation(line: 391, column: 22, scope: !6821)
!6830 = !DILocation(line: 393, column: 6, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6821, file: !3178, line: 393, column: 6)
!6832 = !DILocation(line: 393, column: 10, scope: !6831)
!6833 = !DILocation(line: 393, column: 6, scope: !6821)
!6834 = !DILocation(line: 394, column: 20, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6831, file: !3178, line: 393, column: 18)
!6836 = !DILocation(line: 395, column: 10, scope: !6835)
!6837 = !DILocation(line: 395, column: 3, scope: !6835)
!6838 = !DILocation(line: 399, column: 17, scope: !6821)
!6839 = !DILocation(line: 401, column: 6, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6821, file: !3178, line: 401, column: 6)
!6841 = !DILocation(line: 401, column: 9, scope: !6840)
!6842 = !DILocation(line: 401, column: 6, scope: !6821)
!6843 = !DILocation(line: 402, column: 23, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6840, file: !3178, line: 401, column: 16)
!6845 = !DILocation(line: 403, column: 9, scope: !6844)
!6846 = !DILocation(line: 403, column: 21, scope: !6844)
!6847 = !DILocation(line: 405, column: 11, scope: !6844)
!6848 = !DILocation(line: 404, column: 21, scope: !6844)
!6849 = !DILocation(line: 406, column: 2, scope: !6844)
!6850 = !DILocation(line: 409, column: 1, scope: !6821)
!6851 = distinct !DISubprogram(name: "extract_prec", scope: !3178, file: !3178, line: 420, type: !6640, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6852)
!6852 = !{!6853, !6854, !6855}
!6853 = !DILocalVariable(name: "conv", arg: 1, scope: !6851, file: !3178, line: 420, type: !6296)
!6854 = !DILocalVariable(name: "sp", arg: 2, scope: !6851, file: !3178, line: 421, type: !330)
!6855 = !DILocalVariable(name: "prec", scope: !6851, file: !3178, line: 435, type: !153)
!6856 = !DILocation(line: 0, scope: !6851)
!6857 = !DILocation(line: 423, column: 24, scope: !6851)
!6858 = !DILocation(line: 423, column: 28, scope: !6851)
!6859 = !DILocation(line: 423, column: 8, scope: !6851)
!6860 = !DILocation(line: 423, column: 21, scope: !6851)
!6861 = !DILocation(line: 425, column: 6, scope: !6851)
!6862 = !DILocation(line: 428, column: 2, scope: !6851)
!6863 = !DILocation(line: 430, column: 6, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6851, file: !3178, line: 430, column: 6)
!6865 = !DILocation(line: 430, column: 10, scope: !6864)
!6866 = !DILocation(line: 430, column: 6, scope: !6851)
!6867 = !DILocation(line: 431, column: 19, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6864, file: !3178, line: 430, column: 18)
!6869 = !DILocation(line: 432, column: 10, scope: !6868)
!6870 = !DILocation(line: 432, column: 3, scope: !6868)
!6871 = !DILocation(line: 435, column: 16, scope: !6851)
!6872 = !DILocation(line: 437, column: 8, scope: !6851)
!6873 = !DILocation(line: 437, column: 19, scope: !6851)
!6874 = !DILocation(line: 439, column: 10, scope: !6851)
!6875 = !DILocation(line: 438, column: 20, scope: !6851)
!6876 = !DILocation(line: 441, column: 9, scope: !6851)
!6877 = !DILocation(line: 442, column: 1, scope: !6851)
!6878 = distinct !DISubprogram(name: "extract_length", scope: !3178, file: !3178, line: 453, type: !6640, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6879)
!6879 = !{!6880, !6881}
!6880 = !DILocalVariable(name: "conv", arg: 1, scope: !6878, file: !3178, line: 453, type: !6296)
!6881 = !DILocalVariable(name: "sp", arg: 2, scope: !6878, file: !3178, line: 454, type: !330)
!6882 = !DILocation(line: 0, scope: !6878)
!6883 = !DILocation(line: 456, column: 10, scope: !6878)
!6884 = !DILocation(line: 456, column: 2, scope: !6878)
!6885 = !DILocation(line: 458, column: 8, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !3178, line: 458, column: 7)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !3178, line: 456, column: 15)
!6888 = !DILocation(line: 458, column: 7, scope: !6886)
!6889 = !DILocation(line: 458, column: 13, scope: !6886)
!6890 = !DILocation(line: 0, scope: !6886)
!6891 = !DILocation(line: 458, column: 7, scope: !6887)
!6892 = !DILocation(line: 459, column: 21, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6886, file: !3178, line: 458, column: 21)
!6894 = !DILocation(line: 460, column: 4, scope: !6893)
!6895 = !DILocation(line: 461, column: 3, scope: !6893)
!6896 = !DILocation(line: 462, column: 21, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6886, file: !3178, line: 461, column: 10)
!6898 = !DILocation(line: 466, column: 8, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6887, file: !3178, line: 466, column: 7)
!6900 = !DILocation(line: 466, column: 7, scope: !6899)
!6901 = !DILocation(line: 466, column: 13, scope: !6899)
!6902 = !DILocation(line: 0, scope: !6899)
!6903 = !DILocation(line: 466, column: 7, scope: !6887)
!6904 = !DILocation(line: 467, column: 21, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6899, file: !3178, line: 466, column: 21)
!6906 = !DILocation(line: 468, column: 4, scope: !6905)
!6907 = !DILocation(line: 469, column: 3, scope: !6905)
!6908 = !DILocation(line: 470, column: 21, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6899, file: !3178, line: 469, column: 10)
!6910 = !DILocation(line: 474, column: 9, scope: !6887)
!6911 = !DILocation(line: 474, column: 20, scope: !6887)
!6912 = !DILocation(line: 475, column: 3, scope: !6887)
!6913 = !DILocation(line: 476, column: 3, scope: !6887)
!6914 = !DILocation(line: 478, column: 9, scope: !6887)
!6915 = !DILocation(line: 478, column: 20, scope: !6887)
!6916 = !DILocation(line: 479, column: 3, scope: !6887)
!6917 = !DILocation(line: 480, column: 3, scope: !6887)
!6918 = !DILocation(line: 482, column: 9, scope: !6887)
!6919 = !DILocation(line: 482, column: 20, scope: !6887)
!6920 = !DILocation(line: 483, column: 3, scope: !6887)
!6921 = !DILocation(line: 484, column: 3, scope: !6887)
!6922 = !DILocation(line: 486, column: 9, scope: !6887)
!6923 = !DILocation(line: 486, column: 20, scope: !6887)
!6924 = !DILocation(line: 487, column: 3, scope: !6887)
!6925 = !DILocation(line: 492, column: 21, scope: !6887)
!6926 = !DILocation(line: 493, column: 3, scope: !6887)
!6927 = !DILocation(line: 495, column: 9, scope: !6887)
!6928 = !DILocation(line: 495, column: 20, scope: !6887)
!6929 = !DILocation(line: 496, column: 3, scope: !6887)
!6930 = !DILocation(line: 498, column: 2, scope: !6878)
!6931 = distinct !DISubprogram(name: "extract_specifier", scope: !3178, file: !3178, line: 513, type: !6640, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6932)
!6932 = !{!6933, !6934, !6935, !6936}
!6933 = !DILocalVariable(name: "conv", arg: 1, scope: !6931, file: !3178, line: 513, type: !6296)
!6934 = !DILocalVariable(name: "sp", arg: 2, scope: !6931, file: !3178, line: 514, type: !330)
!6935 = !DILocalVariable(name: "unsupported", scope: !6931, file: !3178, line: 516, type: !119)
!6936 = !DILabel(scope: !6937, name: "int_conv", file: !3178, line: 526)
!6937 = distinct !DILexicalBlock(scope: !6931, file: !3178, line: 520, column: 27)
!6938 = !DILocation(line: 0, scope: !6931)
!6939 = !DILocation(line: 518, column: 20, scope: !6931)
!6940 = !DILocation(line: 518, column: 8, scope: !6931)
!6941 = !DILocation(line: 518, column: 18, scope: !6931)
!6942 = !DILocation(line: 520, column: 2, scope: !6931)
!6943 = !DILocation(line: 525, column: 3, scope: !6937)
!6944 = !DILocation(line: 0, scope: !6937)
!6945 = !DILocation(line: 526, column: 1, scope: !6937)
!6946 = !DILocation(line: 528, column: 24, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6937, file: !3178, line: 528, column: 7)
!6948 = !DILocation(line: 528, column: 7, scope: !6937)
!6949 = !DILocation(line: 535, column: 23, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6937, file: !3178, line: 535, column: 7)
!6951 = !DILocation(line: 535, column: 7, scope: !6937)
!6952 = !DILocation(line: 536, column: 36, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6950, file: !3178, line: 535, column: 31)
!6954 = !DILocation(line: 537, column: 3, scope: !6953)
!6955 = !DILocation(line: 570, column: 9, scope: !6937)
!6956 = !DILocation(line: 570, column: 23, scope: !6937)
!6957 = !DILocation(line: 575, column: 4, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !3178, line: 573, column: 48)
!6959 = distinct !DILexicalBlock(scope: !6937, file: !3178, line: 573, column: 7)
!6960 = !DILocation(line: 603, column: 9, scope: !6937)
!6961 = !DILocation(line: 603, column: 23, scope: !6937)
!6962 = !DILocation(line: 605, column: 24, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6937, file: !3178, line: 605, column: 7)
!6964 = !DILocation(line: 605, column: 7, scope: !6937)
!6965 = !DILocation(line: 612, column: 9, scope: !6937)
!6966 = !DILocation(line: 612, column: 23, scope: !6937)
!6967 = !DILocation(line: 619, column: 24, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6937, file: !3178, line: 619, column: 7)
!6969 = !DILocation(line: 619, column: 7, scope: !6937)
!6970 = !DILocation(line: 625, column: 9, scope: !6937)
!6971 = !DILocation(line: 625, column: 17, scope: !6937)
!6972 = !DILocation(line: 626, column: 3, scope: !6937)
!6973 = !DILocation(line: 629, column: 20, scope: !6931)
!6974 = !DILocation(line: 629, column: 8, scope: !6931)
!6975 = !DILocation(line: 518, column: 23, scope: !6931)
!6976 = !DILocation(line: 631, column: 2, scope: !6931)
!6977 = distinct !DISubprogram(name: "extract_decimal", scope: !3178, file: !3178, line: 318, type: !6978, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !6980)
!6978 = !DISubroutineType(types: !6979)
!6979 = !{!153, !759}
!6980 = !{!6981, !6982, !6983}
!6981 = !DILocalVariable(name: "str", arg: 1, scope: !6977, file: !3178, line: 318, type: !759)
!6982 = !DILocalVariable(name: "sp", scope: !6977, file: !3178, line: 320, type: !330)
!6983 = !DILocalVariable(name: "val", scope: !6977, file: !3178, line: 321, type: !153)
!6984 = !DILocation(line: 0, scope: !6977)
!6985 = !DILocation(line: 320, column: 19, scope: !6977)
!6986 = !DILocation(line: 323, column: 37, scope: !6977)
!6987 = !DILocation(line: 323, column: 17, scope: !6977)
!6988 = !DILocation(line: 323, column: 9, scope: !6977)
!6989 = !DILocation(line: 323, column: 2, scope: !6977)
!6990 = !DILocation(line: 324, column: 13, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6977, file: !3178, line: 323, column: 43)
!6992 = !DILocation(line: 324, column: 24, scope: !6991)
!6993 = !DILocation(line: 324, column: 19, scope: !6991)
!6994 = !DILocation(line: 324, column: 27, scope: !6991)
!6995 = distinct !{!6995, !6989, !6996}
!6996 = !DILocation(line: 325, column: 2, scope: !6977)
!6997 = !DILocation(line: 326, column: 7, scope: !6977)
!6998 = !DILocation(line: 327, column: 2, scope: !6977)
!6999 = distinct !DISubprogram(name: "isdigit", scope: !6779, file: !6779, line: 43, type: !782, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3174, retainedNodes: !7000)
!7000 = !{!7001}
!7001 = !DILocalVariable(name: "a", arg: 1, scope: !6999, file: !6779, line: 43, type: !103)
!7002 = !DILocation(line: 0, scope: !6999)
!7003 = !DILocation(line: 45, column: 29, scope: !6999)
!7004 = !DILocation(line: 45, column: 45, scope: !6999)
!7005 = !DILocation(line: 45, column: 2, scope: !6999)
!7006 = distinct !DISubprogram(name: "assert_post_action", scope: !7007, file: !7007, line: 26, type: !7008, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !7010)
!7007 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !330, !32}
!7010 = !{!7011, !7012}
!7011 = !DILocalVariable(name: "file", arg: 1, scope: !7006, file: !7007, line: 26, type: !330)
!7012 = !DILocalVariable(name: "line", arg: 2, scope: !7006, file: !7007, line: 26, type: !32)
!7013 = !DILocation(line: 0, scope: !7006)
!7014 = !DILocation(line: 43, column: 2, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7006, file: !7007, line: 43, column: 2)
!7016 = !{i64 2151047117, i64 2151047133, i64 2151047159, i64 2151047187, i64 2151047207}
!7017 = !DILocation(line: 44, column: 1, scope: !7006)
!7018 = distinct !DISubprogram(name: "assert_print", scope: !7007, file: !7007, line: 46, type: !5208, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !7019)
!7019 = !{!7020, !7021}
!7020 = !DILocalVariable(name: "fmt", arg: 1, scope: !7018, file: !7007, line: 46, type: !330)
!7021 = !DILocalVariable(name: "ap", scope: !7018, file: !7007, line: 48, type: !7022)
!7022 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4216, line: 99, baseType: !7023)
!7023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4216, line: 40, baseType: !7024)
!7024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7007, baseType: !7025)
!7025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7026)
!7026 = !{!7027}
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7025, file: !7007, line: 48, baseType: !102, size: 32)
!7028 = !DILocation(line: 0, scope: !7018)
!7029 = !DILocation(line: 48, column: 2, scope: !7018)
!7030 = !DILocation(line: 48, column: 10, scope: !7018)
!7031 = !DILocation(line: 50, column: 2, scope: !7018)
!7032 = !DILocation(line: 52, column: 2, scope: !7018)
!7033 = !DILocation(line: 54, column: 2, scope: !7018)
!7034 = !DILocation(line: 55, column: 1, scope: !7018)
!7035 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !7036, file: !7036, line: 9, type: !327, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !2645)
!7036 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!7037 = !DILocation(line: 11, column: 1, scope: !7035)
!7038 = !{i64 2147559399, i64 2147559442, i64 2147559482}
!7039 = !DILocation(line: 12, column: 1, scope: !7035)
!7040 = !{i64 2147563626, i64 2147563669, i64 2147563709}
!7041 = !DILocation(line: 13, column: 1, scope: !7035)
!7042 = !{i64 2147563835, i64 2147563878, i64 2147563918}
!7043 = !DILocation(line: 14, column: 1, scope: !7035)
!7044 = !{i64 2147564052, i64 2147564095, i64 2147564135}
!7045 = !DILocation(line: 15, column: 1, scope: !7035)
!7046 = !{i64 2147564221, i64 2147564264, i64 2147564304}
!7047 = !DILocation(line: 16, column: 1, scope: !7035)
!7048 = !{i64 2147564406, i64 2147564449, i64 2147564489}
!7049 = !DILocation(line: 17, column: 1, scope: !7035)
!7050 = !{i64 2147564623, i64 2147564666, i64 2147564706}
!7051 = !DILocation(line: 18, column: 1, scope: !7035)
!7052 = !{i64 2147564786, i64 2147564829, i64 2147564869}
!7053 = !DILocation(line: 19, column: 1, scope: !7035)
!7054 = !{i64 2147564970, i64 2147565013, i64 2147565053}
!7055 = !DILocation(line: 20, column: 1, scope: !7035)
!7056 = !{i64 2147565150, i64 2147565193, i64 2147565233}
!7057 = !DILocation(line: 21, column: 1, scope: !7035)
!7058 = !{i64 2147565393, i64 2147565436, i64 2147565476}
!7059 = !DILocation(line: 22, column: 1, scope: !7035)
!7060 = !{i64 2147565629, i64 2147565672, i64 2147565712}
!7061 = !DILocation(line: 23, column: 1, scope: !7035)
!7062 = !{i64 2147565832, i64 2147565875, i64 2147565915}
!7063 = !DILocation(line: 24, column: 1, scope: !7035)
!7064 = !{i64 2147566035, i64 2147566078, i64 2147566118}
!7065 = !DILocation(line: 25, column: 1, scope: !7035)
!7066 = !{i64 2147566234, i64 2147566277, i64 2147566317}
!7067 = !DILocation(line: 26, column: 1, scope: !7035)
!7068 = !{i64 2147566409, i64 2147566452, i64 2147566492}
!7069 = !DILocation(line: 27, column: 1, scope: !7035)
!7070 = !{i64 2147566617, i64 2147566660, i64 2147566700}
!7071 = !DILocation(line: 28, column: 1, scope: !7035)
!7072 = !{i64 2147566821, i64 2147566864, i64 2147566904}
!7073 = !DILocation(line: 29, column: 1, scope: !7035)
!7074 = !{i64 2147567014, i64 2147567057, i64 2147567097}
!7075 = !DILocation(line: 30, column: 1, scope: !7035)
!7076 = !{i64 2147567216, i64 2147567259, i64 2147567299}
!7077 = !DILocation(line: 31, column: 1, scope: !7035)
!7078 = !{i64 2147567415, i64 2147567458, i64 2147567498}
!7079 = !DILocation(line: 32, column: 1, scope: !7035)
!7080 = !{i64 2147567642, i64 2147567685, i64 2147567725}
!7081 = !DILocation(line: 33, column: 1, scope: !7035)
!7082 = !{i64 2147567857, i64 2147567900, i64 2147567940}
!7083 = !DILocation(line: 34, column: 1, scope: !7035)
!7084 = !{i64 2147568044, i64 2147568087, i64 2147568127}
!7085 = !DILocation(line: 35, column: 1, scope: !7035)
!7086 = !{i64 2147568216, i64 2147568259, i64 2147568299}
!7087 = !DILocation(line: 36, column: 1, scope: !7035)
!7088 = !{i64 2147568418, i64 2147568461, i64 2147568501}
!7089 = !DILocation(line: 37, column: 1, scope: !7035)
!7090 = !{i64 2147568617, i64 2147568660, i64 2147568700}
!7091 = !DILocation(line: 38, column: 1, scope: !7035)
!7092 = !{i64 2147568792, i64 2147568835, i64 2147568875}
!7093 = !DILocation(line: 39, column: 1, scope: !7035)
!7094 = !{i64 2147569045, i64 2147569088, i64 2147569128}
!7095 = !DILocation(line: 40, column: 1, scope: !7035)
!7096 = !{i64 2147569283, i64 2147569326, i64 2147569366}
!7097 = !DILocation(line: 41, column: 1, scope: !7035)
!7098 = !{i64 2147569518, i64 2147569561, i64 2147569601}
!7099 = !DILocation(line: 42, column: 1, scope: !7035)
!7100 = !{i64 2147569744, i64 2147569787, i64 2147569827}
!7101 = !DILocation(line: 43, column: 1, scope: !7035)
!7102 = !{i64 2147569979, i64 2147570022, i64 2147570062}
!7103 = !DILocation(line: 44, column: 1, scope: !7035)
!7104 = !{i64 2147570214, i64 2147570257, i64 2147570297}
!7105 = !DILocation(line: 45, column: 1, scope: !7035)
!7106 = !{i64 2147570455, i64 2147570498, i64 2147570538}
!7107 = !DILocation(line: 46, column: 1, scope: !7035)
!7108 = !{i64 2147570690, i64 2147570733, i64 2147570773}
!7109 = !DILocation(line: 47, column: 1, scope: !7035)
!7110 = !{i64 2147570919, i64 2147570962, i64 2147571002}
!7111 = !DILocation(line: 48, column: 1, scope: !7035)
!7112 = !{i64 2147571154, i64 2147571197, i64 2147571237}
!7113 = !DILocation(line: 49, column: 1, scope: !7035)
!7114 = !{i64 2147571404, i64 2147571447, i64 2147571487}
!7115 = !DILocation(line: 50, column: 1, scope: !7035)
!7116 = !{i64 2147571633, i64 2147571676, i64 2147571716}
!7117 = !DILocation(line: 51, column: 1, scope: !7035)
!7118 = !{i64 2147571841, i64 2147571884, i64 2147571924}
!7119 = !DILocation(line: 52, column: 1, scope: !7035)
!7120 = !{i64 2147572052, i64 2147572095, i64 2147572135}
!7121 = !DILocation(line: 53, column: 1, scope: !7035)
!7122 = !{i64 2147572287, i64 2147572330, i64 2147572370}
!7123 = !DILocation(line: 54, column: 1, scope: !7035)
!7124 = !{i64 2147576577, i64 2147576620, i64 2147576660}
!7125 = !DILocation(line: 55, column: 1, scope: !7035)
!7126 = !{i64 2147576794, i64 2147576837, i64 2147576877}
!7127 = !DILocation(line: 56, column: 1, scope: !7035)
!7128 = !{i64 2147577023, i64 2147577066, i64 2147577106}
!7129 = !DILocation(line: 57, column: 1, scope: !7035)
!7130 = !{i64 2147577261, i64 2147577304, i64 2147577344}
!7131 = !DILocation(line: 58, column: 1, scope: !7035)
!7132 = !{i64 2147577493, i64 2147577536, i64 2147577576}
!7133 = !DILocation(line: 59, column: 1, scope: !7035)
!7134 = !{i64 2147577719, i64 2147577762, i64 2147577802}
!7135 = !DILocation(line: 60, column: 1, scope: !7035)
!7136 = !{i64 2147577936, i64 2147577979, i64 2147578019}
!7137 = !DILocation(line: 61, column: 1, scope: !7035)
!7138 = !{i64 2147578168, i64 2147578211, i64 2147578251}
!7139 = !DILocation(line: 62, column: 1, scope: !7035)
!7140 = !{i64 2147578394, i64 2147578437, i64 2147578477}
!7141 = !DILocation(line: 63, column: 1, scope: !7035)
!7142 = !{i64 2147578608, i64 2147578651, i64 2147578691}
!7143 = !DILocation(line: 64, column: 1, scope: !7035)
!7144 = !{i64 2147578828, i64 2147578871, i64 2147578911}
!7145 = !DILocation(line: 65, column: 1, scope: !7035)
!7146 = !{i64 2147579060, i64 2147579103, i64 2147579143}
!7147 = !DILocation(line: 66, column: 1, scope: !7035)
!7148 = !{i64 2147579268, i64 2147579311, i64 2147579351}
!7149 = !DILocation(line: 67, column: 1, scope: !7035)
!7150 = !{i64 2147579473, i64 2147579516, i64 2147579556}
!7151 = !DILocation(line: 68, column: 1, scope: !7035)
!7152 = !{i64 2147579690, i64 2147579733, i64 2147579773}
!7153 = !DILocation(line: 69, column: 1, scope: !7035)
!7154 = !{i64 2147579904, i64 2147579947, i64 2147579987}
!7155 = !DILocation(line: 70, column: 1, scope: !7035)
!7156 = !{i64 2147580130, i64 2147580173, i64 2147580213}
!7157 = !DILocation(line: 71, column: 1, scope: !7035)
!7158 = !{i64 2147580350, i64 2147580393, i64 2147580433}
!7159 = !DILocation(line: 72, column: 1, scope: !7035)
!7160 = !{i64 2147580555, i64 2147580598, i64 2147580638}
!7161 = !DILocation(line: 73, column: 1, scope: !7035)
!7162 = !{i64 2147580787, i64 2147580830, i64 2147580870}
!7163 = !DILocation(line: 74, column: 1, scope: !7035)
!7164 = !{i64 2147581022, i64 2147581065, i64 2147581105}
!7165 = !DILocation(line: 75, column: 1, scope: !7035)
!7166 = !{i64 2147581272, i64 2147581315, i64 2147581355}
!7167 = !DILocation(line: 76, column: 1, scope: !7035)
!7168 = !{i64 2147581522, i64 2147581565, i64 2147581605}
!7169 = !DILocation(line: 77, column: 1, scope: !7035)
!7170 = !{i64 2147581760, i64 2147581803, i64 2147581843}
!7171 = !DILocation(line: 78, column: 1, scope: !7035)
!7172 = !{i64 2147581971, i64 2147582014, i64 2147582054}
!7173 = !DILocation(line: 79, column: 1, scope: !7035)
!7174 = !{i64 2147582188, i64 2147582231, i64 2147582271}
!7175 = !DILocation(line: 80, column: 1, scope: !7035)
!7176 = !{i64 2147582384, i64 2147582427, i64 2147582467}
!7177 = !DILocation(line: 81, column: 1, scope: !7035)
!7178 = !{i64 2147582586, i64 2147582629, i64 2147582669}
!7179 = !DILocation(line: 82, column: 1, scope: !7035)
!7180 = !{i64 2147582773, i64 2147582816, i64 2147582856}
!7181 = !DILocation(line: 83, column: 1, scope: !7035)
!7182 = !{i64 2147582963, i64 2147583006, i64 2147583046}
!7183 = !DILocation(line: 84, column: 1, scope: !7035)
!7184 = !{i64 2147583150, i64 2147583193, i64 2147583233}
!7185 = !DILocation(line: 85, column: 1, scope: !7035)
!7186 = !{i64 2147583346, i64 2147583389, i64 2147583429}
!7187 = !DILocation(line: 86, column: 1, scope: !7035)
!7188 = !{i64 2147583542, i64 2147583585, i64 2147583625}
!7189 = !DILocation(line: 87, column: 1, scope: !7035)
!7190 = !{i64 2147583753, i64 2147583796, i64 2147583836}
!7191 = !DILocation(line: 88, column: 1, scope: !7035)
!7192 = !{i64 2147583961, i64 2147584004, i64 2147584044}
!7193 = !DILocation(line: 89, column: 1, scope: !7035)
!7194 = !{i64 2147584145, i64 2147584188, i64 2147584228}
!7195 = !DILocation(line: 90, column: 1, scope: !7035)
!7196 = !{i64 2147584341, i64 2147584384, i64 2147584424}
!7197 = !DILocation(line: 91, column: 1, scope: !7035)
!7198 = !{i64 2147584534, i64 2147584577, i64 2147584617}
!7199 = !DILocation(line: 92, column: 1, scope: !7035)
!7200 = !{i64 2147584781, i64 2147584824, i64 2147584864}
!7201 = !DILocation(line: 93, column: 1, scope: !7035)
!7202 = !{i64 2147585004, i64 2147585047, i64 2147585087}
!7203 = !DILocation(line: 94, column: 1, scope: !7035)
!7204 = !{i64 2147585209, i64 2147585252, i64 2147585292}
!7205 = !DILocation(line: 95, column: 1, scope: !7035)
!7206 = !{i64 2147589463, i64 2147589506, i64 2147589546}
!7207 = !DILocation(line: 96, column: 1, scope: !7035)
!7208 = !{i64 2147589629, i64 2147589672, i64 2147589712}
!7209 = !DILocation(line: 97, column: 1, scope: !7035)
!7210 = !{i64 2147589813, i64 2147589856, i64 2147589896}
!7211 = !DILocation(line: 98, column: 1, scope: !7035)
!7212 = !{i64 2147590003, i64 2147590046, i64 2147590086}
!7213 = !DILocation(line: 99, column: 1, scope: !7035)
!7214 = !{i64 2147590187, i64 2147590230, i64 2147590270}
!7215 = !DILocation(line: 100, column: 1, scope: !7035)
!7216 = !{i64 2147590401, i64 2147590444, i64 2147590484}
!7217 = !DILocation(line: 101, column: 1, scope: !7035)
!7218 = !{i64 2147590612, i64 2147590655, i64 2147590695}
!7219 = !DILocation(line: 102, column: 1, scope: !7035)
!7220 = !{i64 2147590835, i64 2147590878, i64 2147590918}
!7221 = !DILocation(line: 103, column: 1, scope: !7035)
!7222 = !{i64 2147591019, i64 2147591062, i64 2147591102}
!7223 = !DILocation(line: 104, column: 1, scope: !7035)
!7224 = !{i64 2147591185, i64 2147591228, i64 2147591268}
!7225 = !DILocation(line: 105, column: 1, scope: !7035)
!7226 = !{i64 2147591366, i64 2147591409, i64 2147591449}
!7227 = !DILocation(line: 106, column: 1, scope: !7035)
!7228 = !{i64 2147591559, i64 2147591602, i64 2147591642}
!7229 = !DILocation(line: 107, column: 1, scope: !7035)
!7230 = !{i64 2147591785, i64 2147591828, i64 2147591868}
!7231 = !DILocation(line: 108, column: 1, scope: !7035)
!7232 = !{i64 2147591999, i64 2147592042, i64 2147592082}
!7233 = !DILocation(line: 109, column: 1, scope: !7035)
!7234 = !{i64 2147592225, i64 2147592268, i64 2147592308}
!7235 = !DILocation(line: 110, column: 1, scope: !7035)
!7236 = !{i64 2147592442, i64 2147592485, i64 2147592525}
!7237 = !DILocation(line: 111, column: 1, scope: !7035)
!7238 = !{i64 2147592719, i64 2147592762, i64 2147592802}
!7239 = !DILocation(line: 112, column: 1, scope: !7035)
!7240 = !{i64 2147592945, i64 2147592988, i64 2147593028}
!7241 = !DILocation(line: 113, column: 1, scope: !7035)
!7242 = !{i64 2147593153, i64 2147593196, i64 2147593236}
!7243 = !DILocation(line: 114, column: 1, scope: !7035)
!7244 = !{i64 2147593349, i64 2147593392, i64 2147593432}
!7245 = !DILocation(line: 115, column: 1, scope: !7035)
!7246 = !{i64 2147593614, i64 2147593657, i64 2147593697}
!7247 = !DILocation(line: 116, column: 1, scope: !7035)
!7248 = !{i64 2147593828, i64 2147593871, i64 2147593911}
!7249 = !DILocation(line: 117, column: 1, scope: !7035)
!7250 = !{i64 2147593991, i64 2147594034, i64 2147594074}
!7251 = !DILocation(line: 118, column: 1, scope: !7035)
!7252 = !{i64 2147594178, i64 2147594221, i64 2147594261}
!7253 = !DILocation(line: 119, column: 1, scope: !7035)
!7254 = !{i64 2147594386, i64 2147594429, i64 2147594469}
!7255 = !DILocation(line: 120, column: 1, scope: !7035)
!7256 = !{i64 2147594582, i64 2147594625, i64 2147594665}
!7257 = !DILocation(line: 121, column: 1, scope: !7035)
!7258 = !{i64 2147594775, i64 2147594818, i64 2147594858}
!7259 = !DILocation(line: 122, column: 1, scope: !7035)
!7260 = !{i64 2147594957, i64 2147595000, i64 2147595040}
!7261 = !DILocation(line: 123, column: 1, scope: !7035)
!7262 = !{i64 2147595171, i64 2147595214, i64 2147595254}
!7263 = !DILocation(line: 124, column: 1, scope: !7035)
!7264 = !{i64 2147595370, i64 2147595413, i64 2147595453}
!7265 = !DILocation(line: 125, column: 1, scope: !7035)
!7266 = !{i64 2147595605, i64 2147595648, i64 2147595688}
!7267 = !DILocation(line: 126, column: 1, scope: !7035)
!7268 = !{i64 2147595855, i64 2147595898, i64 2147595938}
!7269 = !DILocation(line: 127, column: 1, scope: !7035)
!7270 = !{i64 2147596057, i64 2147596100, i64 2147596140}
!7271 = !DILocation(line: 128, column: 1, scope: !7035)
!7272 = !{i64 2147596280, i64 2147596323, i64 2147596363}
!7273 = !DILocation(line: 129, column: 1, scope: !7035)
!7274 = !{i64 2147596494, i64 2147596537, i64 2147596577}
!7275 = !DILocation(line: 130, column: 1, scope: !7035)
!7276 = !{i64 2147596738, i64 2147596781, i64 2147596821}
!7277 = !DILocation(line: 131, column: 1, scope: !7035)
!7278 = !{i64 2147596967, i64 2147597010, i64 2147597050}
!7279 = !DILocation(line: 132, column: 1, scope: !7035)
!7280 = !{i64 2147597193, i64 2147597236, i64 2147597276}
!7281 = !DILocation(line: 133, column: 1, scope: !7035)
!7282 = !{i64 2147597452, i64 2147597495, i64 2147597535}
!7283 = !DILocation(line: 134, column: 1, scope: !7035)
!7284 = !{i64 2147597672, i64 2147597715, i64 2147597755}
!7285 = !DILocation(line: 135, column: 1, scope: !7035)
!7286 = !{i64 2147597904, i64 2147597947, i64 2147597987}
!7287 = !DILocation(line: 136, column: 1, scope: !7035)
!7288 = !{i64 2147598145, i64 2147598188, i64 2147598228}
!7289 = !DILocation(line: 137, column: 1, scope: !7035)
!7290 = !{i64 2147602447, i64 2147602490, i64 2147602530}
!7291 = !DILocation(line: 138, column: 1, scope: !7035)
!7292 = !{i64 2147602670, i64 2147602713, i64 2147602753}
!7293 = !DILocation(line: 139, column: 1, scope: !7035)
!7294 = !{i64 2147602887, i64 2147602930, i64 2147602970}
!7295 = !DILocation(line: 140, column: 1, scope: !7035)
!7296 = !{i64 2147603128, i64 2147603171, i64 2147603211}
!7297 = !DILocation(line: 141, column: 1, scope: !7035)
!7298 = !{i64 2147603315, i64 2147603358, i64 2147603398}
!7299 = !DILocation(line: 142, column: 1, scope: !7035)
!7300 = !{i64 2147603544, i64 2147603587, i64 2147603627}
!7301 = !DILocation(line: 143, column: 1, scope: !7035)
!7302 = !{i64 2147603758, i64 2147603801, i64 2147603841}
!7303 = !DILocation(line: 144, column: 1, scope: !7035)
!7304 = !{i64 2147603960, i64 2147604003, i64 2147604043}
!7305 = !DILocation(line: 145, column: 1, scope: !7035)
!7306 = !{i64 2147604156, i64 2147604199, i64 2147604239}
!7307 = !DILocation(line: 146, column: 1, scope: !7035)
!7308 = !{i64 2147604368, i64 2147604411, i64 2147604451}
!7309 = !DILocation(line: 147, column: 1, scope: !7035)
!7310 = !{i64 2147604589, i64 2147604632, i64 2147604672}
!7311 = !DILocation(line: 148, column: 1, scope: !7035)
!7312 = !{i64 2147604803, i64 2147604846, i64 2147604886}
!7313 = !DILocation(line: 149, column: 1, scope: !7035)
!7314 = !{i64 2147604993, i64 2147605036, i64 2147605076}
!7315 = !DILocation(line: 150, column: 1, scope: !7035)
!7316 = !{i64 2147605192, i64 2147605235, i64 2147605275}
!7317 = !DILocation(line: 151, column: 1, scope: !7035)
!7318 = !{i64 2147605397, i64 2147605440, i64 2147605480}
!7319 = !DILocation(line: 152, column: 1, scope: !7035)
!7320 = !{i64 2147605617, i64 2147605660, i64 2147605700}
!7321 = !DILocation(line: 153, column: 1, scope: !7035)
!7322 = !{i64 2147605818, i64 2147605861, i64 2147605901}
!7323 = !DILocation(line: 154, column: 1, scope: !7035)
!7324 = !{i64 2147606017, i64 2147606060, i64 2147606100}
!7325 = !DILocation(line: 155, column: 1, scope: !7035)
!7326 = !{i64 2147606186, i64 2147606229, i64 2147606269}
!7327 = !DILocation(line: 156, column: 1, scope: !7035)
!7328 = !{i64 2147606370, i64 2147606413, i64 2147606453}
!7329 = !DILocation(line: 157, column: 1, scope: !7035)
!7330 = !{i64 2147606554, i64 2147606597, i64 2147606637}
!7331 = !DILocation(line: 158, column: 1, scope: !7035)
!7332 = !{i64 2147606738, i64 2147606781, i64 2147606821}
!7333 = !DILocation(line: 159, column: 1, scope: !7035)
!7334 = !{i64 2147606976, i64 2147607019, i64 2147607059}
!7335 = !DILocation(line: 160, column: 1, scope: !7035)
!7336 = !{i64 2147607206, i64 2147607249, i64 2147607289}
!7337 = !DILocation(line: 161, column: 1, scope: !7035)
!7338 = !{i64 2147607435, i64 2147607478, i64 2147607518}
!7339 = !DILocation(line: 162, column: 1, scope: !7035)
!7340 = !{i64 2147607622, i64 2147607665, i64 2147607705}
!7341 = !DILocation(line: 163, column: 1, scope: !7035)
!7342 = !{i64 2147607818, i64 2147607861, i64 2147607901}
!7343 = !DILocation(line: 164, column: 1, scope: !7035)
!7344 = !{i64 2147608026, i64 2147608069, i64 2147608109}
!7345 = !DILocation(line: 165, column: 1, scope: !7035)
!7346 = !{i64 2147608238, i64 2147608281, i64 2147608321}
!7347 = !DILocation(line: 166, column: 1, scope: !7035)
!7348 = !{i64 2147608437, i64 2147608480, i64 2147608520}
!7349 = !DILocation(line: 167, column: 1, scope: !7035)
!7350 = !{i64 2147608675, i64 2147608718, i64 2147608758}
!7351 = !DILocation(line: 168, column: 1, scope: !7035)
!7352 = !{i64 2147608871, i64 2147608914, i64 2147608954}
!7353 = !DILocation(line: 169, column: 1, scope: !7035)
!7354 = !{i64 2147609073, i64 2147609116, i64 2147609156}
!7355 = !DILocation(line: 170, column: 1, scope: !7035)
!7356 = !{i64 2147609266, i64 2147609309, i64 2147609349}
!7357 = !DILocation(line: 171, column: 1, scope: !7035)
!7358 = !{i64 2147609500, i64 2147609543, i64 2147609583}
!7359 = !DILocation(line: 172, column: 1, scope: !7035)
!7360 = !{i64 2147609663, i64 2147609706, i64 2147609746}
!7361 = !DILocation(line: 173, column: 1, scope: !7035)
!7362 = !{i64 2147609902, i64 2147609945, i64 2147609985}
!7363 = !DILocation(line: 174, column: 1, scope: !7035)
!7364 = !{i64 2147610141, i64 2147610184, i64 2147610224}
!7365 = !DILocation(line: 175, column: 1, scope: !7035)
!7366 = !{i64 2147610377, i64 2147610420, i64 2147610460}
!7367 = !DILocation(line: 176, column: 1, scope: !7035)
!7368 = !{i64 2147610607, i64 2147610650, i64 2147610690}
!7369 = !DILocation(line: 177, column: 1, scope: !7035)
!7370 = !{i64 2147610794, i64 2147610837, i64 2147610877}
!7371 = !DILocation(line: 178, column: 1, scope: !7035)
!7372 = !{i64 2147610993, i64 2147611036, i64 2147611076}
!7373 = !DILocation(line: 179, column: 1, scope: !7035)
!7374 = !{i64 2147611264, i64 2147611307, i64 2147611347}
!7375 = !DILocation(line: 180, column: 1, scope: !7035)
!7376 = !{i64 2147611439, i64 2147611482, i64 2147611522}
!7377 = !DILocation(line: 181, column: 1, scope: !7035)
!7378 = !{i64 2147615734, i64 2147615777, i64 2147615817}
!7379 = !DILocation(line: 182, column: 1, scope: !7035)
!7380 = !{i64 2147615942, i64 2147615985, i64 2147616025}
!7381 = !DILocation(line: 183, column: 1, scope: !7035)
!7382 = !{i64 2147616160, i64 2147616203, i64 2147616243}
!7383 = !DILocation(line: 184, column: 1, scope: !7035)
!7384 = !{i64 2147616350, i64 2147616393, i64 2147616433}
!7385 = !DILocation(line: 185, column: 1, scope: !7035)
!7386 = !{i64 2147616582, i64 2147616625, i64 2147616665}
!7387 = !DILocation(line: 186, column: 1, scope: !7035)
!7388 = !{i64 2147616802, i64 2147616845, i64 2147616885}
!7389 = !DILocation(line: 187, column: 1, scope: !7035)
!7390 = !{i64 2147616998, i64 2147617041, i64 2147617081}
!7391 = !DILocation(line: 188, column: 1, scope: !7035)
!7392 = !{i64 2147617204, i64 2147617247, i64 2147617287}
!7393 = !DILocation(line: 189, column: 1, scope: !7035)
!7394 = !{i64 2147617409, i64 2147617452, i64 2147617492}
!7395 = !DILocation(line: 190, column: 1, scope: !7035)
!7396 = !{i64 2147617635, i64 2147617678, i64 2147617718}
!7397 = !DILocation(line: 191, column: 1, scope: !7035)
!7398 = !{i64 2147617843, i64 2147617886, i64 2147617926}
!7399 = !DILocation(line: 192, column: 1, scope: !7035)
!7400 = !{i64 2147618039, i64 2147618082, i64 2147618122}
!7401 = !DILocation(line: 193, column: 1, scope: !7035)
!7402 = !{i64 2147618271, i64 2147618314, i64 2147618354}
!7403 = !DILocation(line: 194, column: 1, scope: !7035)
!7404 = !{i64 2147618449, i64 2147618492, i64 2147618532}
!7405 = !DILocation(line: 195, column: 1, scope: !7035)
!7406 = !{i64 2147618658, i64 2147618701, i64 2147618741}
!7407 = !DILocation(line: 196, column: 1, scope: !7035)
!7408 = !{i64 2147618866, i64 2147618909, i64 2147618949}
!7409 = !DILocation(line: 197, column: 1, scope: !7035)
!7410 = !{i64 2147619062, i64 2147619105, i64 2147619145}
!7411 = !DILocation(line: 198, column: 1, scope: !7035)
!7412 = !{i64 2147619294, i64 2147619337, i64 2147619377}
!7413 = !DILocation(line: 199, column: 1, scope: !7035)
!7414 = !{i64 2147619496, i64 2147619539, i64 2147619579}
!7415 = !DILocation(line: 200, column: 1, scope: !7035)
!7416 = !{i64 2147619746, i64 2147619789, i64 2147619829}
!7417 = !DILocation(line: 201, column: 1, scope: !7035)
!7418 = !{i64 2147619984, i64 2147620027, i64 2147620067}
!7419 = !DILocation(line: 202, column: 1, scope: !7035)
!7420 = !{i64 2147620192, i64 2147620235, i64 2147620275}
!7421 = !DILocation(line: 203, column: 1, scope: !7035)
!7422 = !{i64 2147620388, i64 2147620431, i64 2147620471}
!7423 = !DILocation(line: 204, column: 1, scope: !7035)
!7424 = !{i64 2147620566, i64 2147620609, i64 2147620649}
!7425 = !DILocation(line: 205, column: 1, scope: !7035)
!7426 = !{i64 2147620783, i64 2147620826, i64 2147620866}
!7427 = !DILocation(line: 206, column: 1, scope: !7035)
!7428 = !{i64 2147620988, i64 2147621031, i64 2147621071}
!7429 = !DILocation(line: 207, column: 1, scope: !7035)
!7430 = !{i64 2147621223, i64 2147621266, i64 2147621306}
!7431 = !DILocation(line: 208, column: 1, scope: !7035)
!7432 = !{i64 2147621446, i64 2147621489, i64 2147621529}
!7433 = !DILocation(line: 209, column: 1, scope: !7035)
!7434 = !{i64 2147621663, i64 2147621706, i64 2147621746}
!7435 = !DILocation(line: 210, column: 1, scope: !7035)
!7436 = !{i64 2147621868, i64 2147621911, i64 2147621951}
!7437 = !DILocation(line: 211, column: 1, scope: !7035)
!7438 = !{i64 2147622076, i64 2147622119, i64 2147622159}
!7439 = !DILocation(line: 212, column: 1, scope: !7035)
!7440 = !{i64 2147622272, i64 2147622315, i64 2147622355}
!7441 = !DILocation(line: 213, column: 1, scope: !7035)
!7442 = !{i64 2147622486, i64 2147622529, i64 2147622569}
!7443 = !DILocation(line: 214, column: 1, scope: !7035)
!7444 = !{i64 2147622694, i64 2147622737, i64 2147622777}
!7445 = !DILocation(line: 215, column: 1, scope: !7035)
!7446 = !{i64 2147622884, i64 2147622927, i64 2147622967}
!7447 = !DILocation(line: 216, column: 1, scope: !7035)
!7448 = !{i64 2147623098, i64 2147623141, i64 2147623181}
!7449 = !DILocation(line: 217, column: 1, scope: !7035)
!7450 = !{i64 2147623360, i64 2147623403, i64 2147623443}
!7451 = !DILocation(line: 218, column: 1, scope: !7035)
!7452 = !{i64 2147623571, i64 2147623614, i64 2147623654}
!7453 = !DILocation(line: 219, column: 1, scope: !7035)
!7454 = !{i64 2147623815, i64 2147623858, i64 2147623898}
!7455 = !DILocation(line: 220, column: 1, scope: !7035)
!7456 = !{i64 2147624026, i64 2147624069, i64 2147624109}
!7457 = !DILocation(line: 221, column: 1, scope: !7035)
!7458 = !{i64 2147624255, i64 2147624298, i64 2147624338}
!7459 = !DILocation(line: 222, column: 1, scope: !7035)
!7460 = !{i64 2147628581, i64 2147628624, i64 2147628664}
!7461 = !DILocation(line: 223, column: 1, scope: !7035)
!7462 = !{i64 2147628786, i64 2147628829, i64 2147628869}
!7463 = !DILocation(line: 224, column: 1, scope: !7035)
!7464 = !{i64 2147628982, i64 2147629025, i64 2147629065}
!7465 = !DILocation(line: 225, column: 1, scope: !7035)
!7466 = !{i64 2147629205, i64 2147629248, i64 2147629288}
!7467 = !DILocation(line: 226, column: 1, scope: !7035)
!7468 = !{i64 2147629368, i64 2147629411, i64 2147629451}
!7469 = !DILocation(line: 227, column: 1, scope: !7035)
!7470 = !{i64 2147629573, i64 2147629616, i64 2147629656}
!7471 = !DILocation(line: 228, column: 1, scope: !7035)
!7472 = !{i64 2147629793, i64 2147629836, i64 2147629876}
!7473 = !DILocation(line: 229, column: 1, scope: !7035)
!7474 = !{i64 2147630007, i64 2147630050, i64 2147630090}
!7475 = !DILocation(line: 230, column: 1, scope: !7035)
!7476 = !{i64 2147630251, i64 2147630294, i64 2147630334}
!7477 = !DILocation(line: 231, column: 1, scope: !7035)
!7478 = !{i64 2147630483, i64 2147630526, i64 2147630566}
!7479 = !DILocation(line: 232, column: 1, scope: !7035)
!7480 = !{i64 2147630697, i64 2147630740, i64 2147630780}
!7481 = !DILocation(line: 233, column: 1, scope: !7035)
!7482 = !{i64 2147630908, i64 2147630951, i64 2147630991}
!7483 = !DILocation(line: 234, column: 1, scope: !7035)
!7484 = !{i64 2147631101, i64 2147631144, i64 2147631184}
!7485 = !DILocation(line: 235, column: 1, scope: !7035)
!7486 = !{i64 2147631300, i64 2147631343, i64 2147631383}
!7487 = !DILocation(line: 236, column: 1, scope: !7035)
!7488 = !{i64 2147631472, i64 2147631515, i64 2147631555}
!7489 = !DILocation(line: 237, column: 1, scope: !7035)
!7490 = !{i64 2147631644, i64 2147631687, i64 2147631727}
!7491 = !DILocation(line: 238, column: 1, scope: !7035)
!7492 = !{i64 2147631834, i64 2147631877, i64 2147631917}
!7493 = !DILocation(line: 239, column: 1, scope: !7035)
!7494 = !{i64 2147632027, i64 2147632070, i64 2147632110}
!7495 = !DILocation(line: 240, column: 1, scope: !7035)
!7496 = !{i64 2147632223, i64 2147632266, i64 2147632306}
!7497 = !DILocation(line: 241, column: 1, scope: !7035)
!7498 = !{i64 2147632386, i64 2147632429, i64 2147632469}
!7499 = !DILocation(line: 242, column: 1, scope: !7035)
!7500 = !{i64 2147632588, i64 2147632631, i64 2147632671}
!7501 = !DILocation(line: 243, column: 1, scope: !7035)
!7502 = !{i64 2147632793, i64 2147632836, i64 2147632876}
!7503 = !DILocation(line: 244, column: 1, scope: !7035)
!7504 = !{i64 2147633001, i64 2147633044, i64 2147633084}
!7505 = !DILocation(line: 245, column: 1, scope: !7035)
!7506 = !{i64 2147633194, i64 2147633237, i64 2147633277}
!7507 = !DILocation(line: 246, column: 1, scope: !7035)
!7508 = !{i64 2147633381, i64 2147633424, i64 2147633464}
!7509 = !DILocation(line: 247, column: 1, scope: !7035)
!7510 = !{i64 2147633608, i64 2147633651, i64 2147633691}
!7511 = !DILocation(line: 248, column: 1, scope: !7035)
!7512 = !{i64 2147633774, i64 2147633817, i64 2147633857}
!7513 = !DILocation(line: 249, column: 1, scope: !7035)
!7514 = !{i64 2147634012, i64 2147634055, i64 2147634095}
!7515 = !DILocation(line: 250, column: 1, scope: !7035)
!7516 = !{i64 2147634262, i64 2147634305, i64 2147634345}
!7517 = !DILocation(line: 251, column: 1, scope: !7035)
!7518 = !{i64 2147634470, i64 2147634513, i64 2147634553}
!7519 = !DILocation(line: 252, column: 1, scope: !7035)
!7520 = !{i64 2147634666, i64 2147634709, i64 2147634749}
!7521 = !DILocation(line: 253, column: 1, scope: !7035)
!7522 = !{i64 2147634883, i64 2147634926, i64 2147634966}
!7523 = !DILocation(line: 254, column: 1, scope: !7035)
!7524 = !{i64 2147635175, i64 2147635218, i64 2147635258}
!7525 = !DILocation(line: 255, column: 1, scope: !7035)
!7526 = !{i64 2147635407, i64 2147635450, i64 2147635490}
!7527 = !DILocation(line: 256, column: 1, scope: !7035)
!7528 = !{i64 2147635624, i64 2147635667, i64 2147635707}
!7529 = !DILocation(line: 257, column: 1, scope: !7035)
!7530 = !{i64 2147635831, i64 2147635874, i64 2147635914}
!7531 = !DILocation(line: 258, column: 1, scope: !7035)
!7532 = !{i64 2147636032, i64 2147636075, i64 2147636115}
!7533 = !DILocation(line: 259, column: 1, scope: !7035)
!7534 = !{i64 2147636264, i64 2147636307, i64 2147636347}
!7535 = !DILocation(line: 260, column: 1, scope: !7035)
!7536 = !{i64 2147636472, i64 2147636515, i64 2147636555}
!7537 = !DILocation(line: 261, column: 1, scope: !7035)
!7538 = !{i64 2147636662, i64 2147636705, i64 2147636745}
!7539 = !DILocation(line: 262, column: 1, scope: !7035)
!7540 = !{i64 2147636888, i64 2147636931, i64 2147636971}
!7541 = !DILocation(line: 263, column: 1, scope: !7035)
!7542 = !{i64 2147637077, i64 2147637120, i64 2147637160}
!7543 = !DILocation(line: 264, column: 1, scope: !7035)
!7544 = !{i64 2147637348, i64 2147637391, i64 2147637431}
!7545 = !DILocation(line: 265, column: 1, scope: !7035)
!7546 = !{i64 2147641629, i64 2147641672, i64 2147641712}
!7547 = !DILocation(line: 266, column: 1, scope: !7035)
!7548 = !{i64 2147641882, i64 2147641925, i64 2147641965}
!7549 = !DILocation(line: 267, column: 1, scope: !7035)
!7550 = !{i64 2147642090, i64 2147642133, i64 2147642173}
!7551 = !DILocation(line: 268, column: 1, scope: !7035)
!7552 = !{i64 2147642322, i64 2147642365, i64 2147642405}
!7553 = !DILocation(line: 269, column: 1, scope: !7035)
!7554 = !{i64 2147642533, i64 2147642576, i64 2147642616}
!7555 = !DILocation(line: 270, column: 1, scope: !7035)
!7556 = !{i64 2147642723, i64 2147642766, i64 2147642806}
!7557 = !DILocation(line: 271, column: 1, scope: !7035)
!7558 = !{i64 2147642937, i64 2147642980, i64 2147643020}
!7559 = !DILocation(line: 272, column: 1, scope: !7035)
!7560 = !{i64 2147643136, i64 2147643179, i64 2147643219}
!7561 = !DILocation(line: 273, column: 1, scope: !7035)
!7562 = !{i64 2147643323, i64 2147643366, i64 2147643406}
!7563 = !DILocation(line: 274, column: 1, scope: !7035)
!7564 = !{i64 2147643531, i64 2147643574, i64 2147643614}
!7565 = !DILocation(line: 275, column: 1, scope: !7035)
!7566 = !{i64 2147643760, i64 2147643803, i64 2147643843}
!7567 = !DILocation(line: 276, column: 1, scope: !7035)
!7568 = !{i64 2147643962, i64 2147644005, i64 2147644045}
!7569 = !DILocation(line: 277, column: 1, scope: !7035)
!7570 = !{i64 2147644161, i64 2147644204, i64 2147644244}
!7571 = !DILocation(line: 278, column: 1, scope: !7035)
!7572 = !{i64 2147644378, i64 2147644421, i64 2147644461}
!7573 = !DILocation(line: 280, column: 1, scope: !7035)
!7574 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !1200, file: !1200, line: 225, type: !1207, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7575)
!7575 = !{!7576}
!7576 = !DILocalVariable(name: "arg", arg: 1, scope: !7574, file: !1200, line: 225, type: !1209)
!7577 = !DILocation(line: 0, scope: !7574)
!7578 = !DILocation(line: 230, column: 2, scope: !7574)
!7579 = !DILocation(line: 233, column: 2, scope: !7574)
!7580 = !DILocation(line: 236, column: 2, scope: !7574)
!7581 = !DILocation(line: 255, column: 2, scope: !7574)
!7582 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !1200, file: !1200, line: 50, type: !327, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !2645)
!7583 = !DILocation(line: 53, column: 2, scope: !7582)
!7584 = !DILocation(line: 54, column: 1, scope: !7582)
!7585 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !1200, file: !1200, line: 14, type: !327, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !2645)
!7586 = !DILocation(line: 23, column: 2, scope: !7585)
!7587 = !DILocation(line: 24, column: 2, scope: !7585)
!7588 = !DILocation(line: 25, column: 2, scope: !7585)
!7589 = !DILocation(line: 27, column: 2, scope: !7585)
!7590 = !DILocation(line: 31, column: 2, scope: !7585)
!7591 = !DILocation(line: 33, column: 2, scope: !7585)
!7592 = !DILocation(line: 36, column: 2, scope: !7585)
!7593 = !DILocation(line: 37, column: 2, scope: !7585)
!7594 = !DILocation(line: 40, column: 2, scope: !7585)
!7595 = !DILocation(line: 41, column: 2, scope: !7585)
!7596 = !DILocation(line: 42, column: 2, scope: !7585)
!7597 = !DILocation(line: 43, column: 2, scope: !7585)
!7598 = !DILocation(line: 44, column: 2, scope: !7585)
!7599 = !DILocation(line: 47, column: 2, scope: !7585)
!7600 = !DILocation(line: 48, column: 1, scope: !7585)
!7601 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !1200, file: !1200, line: 57, type: !327, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !2645)
!7602 = !DILocation(line: 61, column: 2, scope: !7601)
!7603 = !DILocation(line: 63, column: 2, scope: !7601)
!7604 = !DILocation(line: 80, column: 1, scope: !7601)
!7605 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !7606, file: !7606, line: 164, type: !7607, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7609)
!7606 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7607 = !DISubroutineType(types: !7608)
!7608 = !{null, !1144, !108, !164, !119, !119}
!7609 = !{!7610, !7611, !7612, !7613, !7614}
!7610 = !DILocalVariable(name: "base", arg: 1, scope: !7605, file: !7606, line: 164, type: !1144)
!7611 = !DILocalVariable(name: "pdap", arg: 2, scope: !7605, file: !7606, line: 164, type: !108)
!7612 = !DILocalVariable(name: "perm", arg: 3, scope: !7605, file: !7606, line: 164, type: !164)
!7613 = !DILocalVariable(name: "sreq", arg: 4, scope: !7605, file: !7606, line: 164, type: !119)
!7614 = !DILocalVariable(name: "lock", arg: 5, scope: !7605, file: !7606, line: 164, type: !119)
!7615 = !DILocation(line: 0, scope: !7605)
!7616 = !DILocation(line: 166, column: 24, scope: !7605)
!7617 = !DILocation(line: 166, column: 5, scope: !7605)
!7618 = !DILocation(line: 166, column: 22, scope: !7605)
!7619 = !DILocation(line: 167, column: 1, scope: !7605)
!7620 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !790, file: !790, line: 454, type: !7621, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7623)
!7621 = !DISubroutineType(types: !7622)
!7622 = !{null, !1072, !108, !108}
!7623 = !{!7624, !7625, !7626}
!7624 = !DILocalVariable(name: "base", arg: 1, scope: !7620, file: !790, line: 454, type: !1072)
!7625 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !7620, file: !790, line: 454, type: !108)
!7626 = !DILocalVariable(name: "control", arg: 3, scope: !7620, file: !790, line: 454, type: !108)
!7627 = !DILocation(line: 0, scope: !7620)
!7628 = !DILocation(line: 456, column: 5, scope: !7620)
!7629 = !DILocation(line: 456, column: 22, scope: !7620)
!7630 = !DILocation(line: 457, column: 1, scope: !7620)
!7631 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !790, file: !790, line: 379, type: !7632, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7634)
!7632 = !DISubroutineType(types: !7633)
!7633 = !{null, !1072, !108}
!7634 = !{!7635, !7636}
!7635 = !DILocalVariable(name: "base", arg: 1, scope: !7631, file: !790, line: 379, type: !1072)
!7636 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !7631, file: !790, line: 379, type: !108)
!7637 = !DILocation(line: 0, scope: !7631)
!7638 = !DILocation(line: 381, column: 26, scope: !7631)
!7639 = !DILocation(line: 382, column: 1, scope: !7631)
!7640 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !7641, file: !7641, line: 136, type: !7642, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7644)
!7641 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7642 = !DISubroutineType(types: !7643)
!7643 = !{null, !1187}
!7644 = !{!7645}
!7645 = !DILocalVariable(name: "base", arg: 1, scope: !7640, file: !7641, line: 136, type: !1187)
!7646 = !DILocation(line: 0, scope: !7640)
!7647 = !DILocation(line: 138, column: 16, scope: !7640)
!7648 = !DILocation(line: 139, column: 1, scope: !7640)
!7649 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !7606, file: !7606, line: 136, type: !7650, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7652)
!7650 = !DISubroutineType(types: !7651)
!7651 = !{null, !1144, !108, !108, !119}
!7652 = !{!7653, !7654, !7655, !7656}
!7653 = !DILocalVariable(name: "base", arg: 1, scope: !7649, file: !7606, line: 136, type: !1144)
!7654 = !DILocalVariable(name: "mda", arg: 2, scope: !7649, file: !7606, line: 136, type: !108)
!7655 = !DILocalVariable(name: "domainId", arg: 3, scope: !7649, file: !7606, line: 136, type: !108)
!7656 = !DILocalVariable(name: "lock", arg: 4, scope: !7649, file: !7606, line: 136, type: !119)
!7657 = !DILocation(line: 0, scope: !7649)
!7658 = !DILocation(line: 140, column: 20, scope: !7649)
!7659 = !DILocation(line: 141, column: 1, scope: !7649)
!7660 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7661, file: !7661, line: 14, type: !5208, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !7662)
!7661 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7662 = !{!7663, !7664}
!7663 = !DILocalVariable(name: "fmt", arg: 1, scope: !7660, file: !7661, line: 14, type: !330)
!7664 = !DILocalVariable(name: "ap", scope: !7660, file: !7661, line: 16, type: !7665)
!7665 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4216, line: 99, baseType: !7666)
!7666 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4216, line: 40, baseType: !7667)
!7667 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7661, baseType: !7668)
!7668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7669)
!7669 = !{!7670}
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7668, file: !7661, line: 16, baseType: !102, size: 32)
!7671 = !DILocation(line: 0, scope: !7660)
!7672 = !DILocation(line: 16, column: 2, scope: !7660)
!7673 = !DILocation(line: 16, column: 10, scope: !7660)
!7674 = !DILocation(line: 18, column: 2, scope: !7660)
!7675 = !DILocation(line: 19, column: 2, scope: !7660)
!7676 = !DILocation(line: 20, column: 2, scope: !7660)
!7677 = !DILocation(line: 21, column: 1, scope: !7660)
!7678 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7661, file: !7661, line: 23, type: !7679, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !7681)
!7679 = !DISubroutineType(types: !7680)
!7680 = !{null, !330, !7665}
!7681 = !{!7682, !7683}
!7682 = !DILocalVariable(name: "fmt", arg: 1, scope: !7678, file: !7661, line: 23, type: !330)
!7683 = !DILocalVariable(name: "ap", arg: 2, scope: !7678, file: !7661, line: 23, type: !7665)
!7684 = !DILocation(line: 0, scope: !7678)
!7685 = !DILocation(line: 25, column: 2, scope: !7678)
!7686 = !DILocation(line: 26, column: 1, scope: !7678)
!7687 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7661, file: !7661, line: 52, type: !7688, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !7690)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{null, !103, !13, !153}
!7690 = !{!7691, !7692, !7693, !7694}
!7691 = !DILocalVariable(name: "level", arg: 1, scope: !7687, file: !7661, line: 52, type: !103)
!7692 = !DILocalVariable(name: "data", arg: 2, scope: !7687, file: !7661, line: 52, type: !13)
!7693 = !DILocalVariable(name: "size", arg: 3, scope: !7687, file: !7661, line: 52, type: !153)
!7694 = !DILocalVariable(name: "data_buffer", scope: !7687, file: !7661, line: 54, type: !330)
!7695 = !DILocation(line: 0, scope: !7687)
!7696 = !DILocation(line: 55, column: 14, scope: !7687)
!7697 = !DILocation(line: 55, column: 2, scope: !7687)
!7698 = !DILocation(line: 56, column: 3, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7687, file: !7661, line: 55, column: 20)
!7700 = !DILocation(line: 57, column: 3, scope: !7699)
!7701 = !DILocation(line: 59, column: 7, scope: !7699)
!7702 = distinct !{!7702, !7697, !7703}
!7703 = !DILocation(line: 65, column: 2, scope: !7687)
!7704 = !DILocation(line: 66, column: 1, scope: !7687)
!7705 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7706, file: !7706, line: 175, type: !7707, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !7709)
!7706 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7707 = !DISubroutineType(types: !7708)
!7708 = !{!158, !103}
!7709 = !{!7710}
!7710 = !DILocalVariable(name: "level", arg: 1, scope: !7705, file: !7706, line: 175, type: !103)
!7711 = !DILocation(line: 0, scope: !7705)
!7712 = !DILocation(line: 177, column: 2, scope: !7705)
!7713 = !DILocation(line: 189, column: 1, scope: !7705)
!7714 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7661, file: !7661, line: 28, type: !7715, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !7717)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{null, !330, !153}
!7717 = !{!7718, !7719, !7720, !7722, !7724}
!7718 = !DILocalVariable(name: "data", arg: 1, scope: !7714, file: !7661, line: 28, type: !330)
!7719 = !DILocalVariable(name: "length", arg: 2, scope: !7714, file: !7661, line: 28, type: !153)
!7720 = !DILocalVariable(name: "i", scope: !7721, file: !7661, line: 30, type: !153)
!7721 = distinct !DILexicalBlock(scope: !7714, file: !7661, line: 30, column: 2)
!7722 = !DILocalVariable(name: "i", scope: !7723, file: !7661, line: 40, type: !153)
!7723 = distinct !DILexicalBlock(scope: !7714, file: !7661, line: 40, column: 2)
!7724 = !DILocalVariable(name: "c", scope: !7725, file: !7661, line: 42, type: !165)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7661, line: 41, column: 19)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7661, line: 41, column: 7)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !7661, line: 40, column: 54)
!7728 = distinct !DILexicalBlock(scope: !7723, file: !7661, line: 40, column: 2)
!7729 = !DILocation(line: 0, scope: !7714)
!7730 = !DILocation(line: 0, scope: !7721)
!7731 = !DILocation(line: 30, column: 2, scope: !7721)
!7732 = !DILocation(line: 38, column: 2, scope: !7714)
!7733 = !DILocation(line: 0, scope: !7723)
!7734 = !DILocation(line: 40, column: 2, scope: !7723)
!7735 = !DILocation(line: 31, column: 9, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7661, line: 31, column: 7)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !7661, line: 30, column: 54)
!7738 = distinct !DILexicalBlock(scope: !7721, file: !7661, line: 30, column: 2)
!7739 = !DILocation(line: 31, column: 7, scope: !7737)
!7740 = !DILocation(line: 32, column: 35, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !7661, line: 31, column: 19)
!7742 = !DILocation(line: 32, column: 20, scope: !7741)
!7743 = !DILocation(line: 32, column: 4, scope: !7741)
!7744 = !DILocation(line: 33, column: 3, scope: !7741)
!7745 = !DILocation(line: 34, column: 4, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7736, file: !7661, line: 33, column: 10)
!7747 = !DILocation(line: 30, column: 50, scope: !7738)
!7748 = !DILocation(line: 30, column: 24, scope: !7738)
!7749 = distinct !{!7749, !7731, !7750}
!7750 = !DILocation(line: 36, column: 2, scope: !7721)
!7751 = !DILocation(line: 49, column: 2, scope: !7714)
!7752 = !DILocation(line: 50, column: 1, scope: !7714)
!7753 = !DILocation(line: 41, column: 9, scope: !7726)
!7754 = !DILocation(line: 41, column: 7, scope: !7727)
!7755 = !DILocation(line: 42, column: 22, scope: !7725)
!7756 = !DILocation(line: 0, scope: !7725)
!7757 = !DILocation(line: 44, column: 25, scope: !7725)
!7758 = !DILocation(line: 44, column: 17, scope: !7725)
!7759 = !DILocation(line: 44, column: 33, scope: !7725)
!7760 = !DILocation(line: 44, column: 4, scope: !7725)
!7761 = !DILocation(line: 45, column: 3, scope: !7725)
!7762 = !DILocation(line: 46, column: 4, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7726, file: !7661, line: 45, column: 10)
!7764 = !DILocation(line: 40, column: 50, scope: !7728)
!7765 = !DILocation(line: 40, column: 24, scope: !7728)
!7766 = distinct !{!7766, !7734, !7767}
!7767 = !DILocation(line: 48, column: 2, scope: !7723)
!7768 = distinct !DISubprogram(name: "isprint", scope: !6779, file: !6779, line: 37, type: !782, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3212, retainedNodes: !7769)
!7769 = !{!7770}
!7770 = !DILocalVariable(name: "c", arg: 1, scope: !7768, file: !6779, line: 37, type: !103)
!7771 = !DILocation(line: 0, scope: !7768)
!7772 = !DILocation(line: 39, column: 38, scope: !7768)
!7773 = !DILocation(line: 39, column: 2, scope: !7768)
!7774 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7775, file: !7775, line: 57, type: !7776, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !7822)
!7775 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7776 = !DISubroutineType(types: !7777)
!7777 = !{null, !32, !7778}
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7779, size: 32)
!7779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7780)
!7780 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3336, line: 141, baseType: !7781)
!7781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3336, line: 97, size: 256, elements: !7782)
!7782 = !{!7783}
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7781, file: !3336, line: 107, baseType: !7784, size: 256)
!7784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3336, line: 98, size: 256, elements: !7785)
!7785 = !{!7786, !7791, !7796, !7801, !7806, !7811, !7816, !7821}
!7786 = !DIDerivedType(tag: DW_TAG_member, scope: !7784, file: !3336, line: 99, baseType: !7787, size: 32)
!7787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7784, file: !3336, line: 99, size: 32, elements: !7788)
!7788 = !{!7789, !7790}
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7787, file: !3336, line: 99, baseType: !108, size: 32)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7787, file: !3336, line: 99, baseType: !108, size: 32)
!7791 = !DIDerivedType(tag: DW_TAG_member, scope: !7784, file: !3336, line: 100, baseType: !7792, size: 32, offset: 32)
!7792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7784, file: !3336, line: 100, size: 32, elements: !7793)
!7793 = !{!7794, !7795}
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7792, file: !3336, line: 100, baseType: !108, size: 32)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7792, file: !3336, line: 100, baseType: !108, size: 32)
!7796 = !DIDerivedType(tag: DW_TAG_member, scope: !7784, file: !3336, line: 101, baseType: !7797, size: 32, offset: 64)
!7797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7784, file: !3336, line: 101, size: 32, elements: !7798)
!7798 = !{!7799, !7800}
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7797, file: !3336, line: 101, baseType: !108, size: 32)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7797, file: !3336, line: 101, baseType: !108, size: 32)
!7801 = !DIDerivedType(tag: DW_TAG_member, scope: !7784, file: !3336, line: 102, baseType: !7802, size: 32, offset: 96)
!7802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7784, file: !3336, line: 102, size: 32, elements: !7803)
!7803 = !{!7804, !7805}
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7802, file: !3336, line: 102, baseType: !108, size: 32)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7802, file: !3336, line: 102, baseType: !108, size: 32)
!7806 = !DIDerivedType(tag: DW_TAG_member, scope: !7784, file: !3336, line: 103, baseType: !7807, size: 32, offset: 128)
!7807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7784, file: !3336, line: 103, size: 32, elements: !7808)
!7808 = !{!7809, !7810}
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7807, file: !3336, line: 103, baseType: !108, size: 32)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7807, file: !3336, line: 103, baseType: !108, size: 32)
!7811 = !DIDerivedType(tag: DW_TAG_member, scope: !7784, file: !3336, line: 104, baseType: !7812, size: 32, offset: 160)
!7812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7784, file: !3336, line: 104, size: 32, elements: !7813)
!7813 = !{!7814, !7815}
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7812, file: !3336, line: 104, baseType: !108, size: 32)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7812, file: !3336, line: 104, baseType: !108, size: 32)
!7816 = !DIDerivedType(tag: DW_TAG_member, scope: !7784, file: !3336, line: 105, baseType: !7817, size: 32, offset: 192)
!7817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7784, file: !3336, line: 105, size: 32, elements: !7818)
!7818 = !{!7819, !7820}
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7817, file: !3336, line: 105, baseType: !108, size: 32)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7817, file: !3336, line: 105, baseType: !108, size: 32)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7784, file: !3336, line: 106, baseType: !108, size: 32, offset: 224)
!7822 = !{!7823, !7824}
!7823 = !DILocalVariable(name: "reason", arg: 1, scope: !7774, file: !7775, line: 57, type: !32)
!7824 = !DILocalVariable(name: "esf", arg: 2, scope: !7774, file: !7775, line: 57, type: !7778)
!7825 = !DILocation(line: 0, scope: !7774)
!7826 = !DILocation(line: 60, column: 10, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7774, file: !7775, line: 60, column: 6)
!7828 = !DILocation(line: 60, column: 6, scope: !7774)
!7829 = !DILocation(line: 61, column: 3, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7827, file: !7775, line: 60, column: 19)
!7831 = !DILocation(line: 62, column: 2, scope: !7830)
!7832 = !DILocation(line: 63, column: 2, scope: !7774)
!7833 = !DILocation(line: 64, column: 1, scope: !7774)
!7834 = distinct !DISubprogram(name: "esf_dump", scope: !7775, file: !7775, line: 20, type: !7835, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !7837)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{null, !7778}
!7837 = !{!7838}
!7838 = !DILocalVariable(name: "esf", arg: 1, scope: !7834, file: !7775, line: 20, type: !7778)
!7839 = !DILocation(line: 0, scope: !7834)
!7840 = !DILocation(line: 22, column: 2, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7842, file: !7775, line: 22, column: 2)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !7775, line: 22, column: 2)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !7775, line: 22, column: 2)
!7844 = distinct !DILexicalBlock(scope: !7834, file: !7775, line: 22, column: 2)
!7845 = !DILocation(line: 24, column: 2, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !7775, line: 24, column: 2)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !7775, line: 24, column: 2)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !7775, line: 24, column: 2)
!7849 = distinct !DILexicalBlock(scope: !7834, file: !7775, line: 24, column: 2)
!7850 = !DILocation(line: 26, column: 2, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !7775, line: 26, column: 2)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !7775, line: 26, column: 2)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !7775, line: 26, column: 2)
!7854 = distinct !DILexicalBlock(scope: !7834, file: !7775, line: 26, column: 2)
!7855 = !DILocation(line: 53, column: 2, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7775, line: 53, column: 2)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !7775, line: 53, column: 2)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !7775, line: 53, column: 2)
!7859 = distinct !DILexicalBlock(scope: !7834, file: !7775, line: 53, column: 2)
!7860 = !DILocation(line: 55, column: 1, scope: !7834)
!7861 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7775, file: !7775, line: 82, type: !7862, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !7877)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{null, !7778, !7864}
!7864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7865, size: 32)
!7865 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !244, line: 37, baseType: !7866)
!7866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !7867)
!7867 = !{!7868, !7869, !7870, !7871, !7872, !7873, !7874, !7875, !7876}
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7866, file: !244, line: 26, baseType: !108, size: 32)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7866, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7866, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7866, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7866, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7866, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7866, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7866, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7866, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!7877 = !{!7878, !7879, !7880}
!7878 = !DILocalVariable(name: "esf", arg: 1, scope: !7861, file: !7775, line: 82, type: !7778)
!7879 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7861, file: !7775, line: 82, type: !7864)
!7880 = !DILocalVariable(name: "reason", scope: !7861, file: !7775, line: 88, type: !32)
!7881 = !DILocation(line: 0, scope: !7861)
!7882 = !DILocation(line: 88, column: 35, scope: !7861)
!7883 = !DILocation(line: 108, column: 2, scope: !7861)
!7884 = !DILocation(line: 131, column: 1, scope: !7861)
!7885 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7775, file: !7775, line: 133, type: !7886, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3215, retainedNodes: !7888)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{null, !102}
!7888 = !{!7889, !7890, !7891}
!7889 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7885, file: !7775, line: 133, type: !102)
!7890 = !DILocalVariable(name: "ssf_contents", scope: !7885, file: !7775, line: 135, type: !2102)
!7891 = !DILocalVariable(name: "oops_esf", scope: !7885, file: !7775, line: 136, type: !7780)
!7892 = !DILocation(line: 0, scope: !7885)
!7893 = !DILocation(line: 136, column: 2, scope: !7885)
!7894 = !DILocation(line: 136, column: 15, scope: !7885)
!7895 = !DILocation(line: 139, column: 22, scope: !7885)
!7896 = !DILocation(line: 139, column: 17, scope: !7885)
!7897 = !DILocation(line: 139, column: 20, scope: !7885)
!7898 = !DILocation(line: 141, column: 2, scope: !7885)
!7899 = !DILocation(line: 142, column: 2, scope: !7885)
!7900 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7901, file: !7901, line: 40, type: !7902, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !7904)
!7901 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7902 = !DISubroutineType(types: !7903)
!7903 = !{null, !32}
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "irq", arg: 1, scope: !7900, file: !7901, line: 40, type: !32)
!7906 = !DILocation(line: 0, scope: !7900)
!7907 = !DILocation(line: 42, column: 2, scope: !7900)
!7908 = !DILocation(line: 43, column: 1, scope: !7900)
!7909 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !2295, file: !2295, line: 1684, type: !7910, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !7912)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{null, !3230}
!7912 = !{!7913}
!7913 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7909, file: !2295, line: 1684, type: !3230)
!7914 = !DILocation(line: 0, scope: !7909)
!7915 = !DILocation(line: 1686, column: 23, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7909, file: !2295, line: 1686, column: 7)
!7917 = !DILocation(line: 1686, column: 7, scope: !7909)
!7918 = !DILocation(line: 1688, column: 5, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7916, file: !2295, line: 1687, column: 3)
!7920 = !{i64 2154452108}
!7921 = !DILocation(line: 1689, column: 81, scope: !7919)
!7922 = !DILocation(line: 1689, column: 60, scope: !7919)
!7923 = !DILocation(line: 1689, column: 34, scope: !7919)
!7924 = !DILocation(line: 1689, column: 5, scope: !7919)
!7925 = !DILocation(line: 1689, column: 43, scope: !7919)
!7926 = !DILocation(line: 1690, column: 5, scope: !7919)
!7927 = !{i64 2154452222}
!7928 = !DILocation(line: 1691, column: 3, scope: !7919)
!7929 = !DILocation(line: 1692, column: 1, scope: !7909)
!7930 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7901, file: !7901, line: 45, type: !7902, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !7931)
!7931 = !{!7932}
!7932 = !DILocalVariable(name: "irq", arg: 1, scope: !7930, file: !7901, line: 45, type: !32)
!7933 = !DILocation(line: 0, scope: !7930)
!7934 = !DILocation(line: 47, column: 2, scope: !7930)
!7935 = !DILocation(line: 48, column: 1, scope: !7930)
!7936 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !2295, file: !2295, line: 1722, type: !7910, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !7937)
!7937 = !{!7938}
!7938 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7936, file: !2295, line: 1722, type: !3230)
!7939 = !DILocation(line: 0, scope: !7936)
!7940 = !DILocation(line: 1724, column: 23, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7936, file: !2295, line: 1724, column: 7)
!7942 = !DILocation(line: 1724, column: 7, scope: !7936)
!7943 = !DILocation(line: 1726, column: 81, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7941, file: !2295, line: 1725, column: 3)
!7945 = !DILocation(line: 1726, column: 60, scope: !7944)
!7946 = !DILocation(line: 1726, column: 34, scope: !7944)
!7947 = !DILocation(line: 1726, column: 5, scope: !7944)
!7948 = !DILocation(line: 1726, column: 43, scope: !7944)
!7949 = !DILocation(line: 271, column: 3, scope: !7950, inlinedAt: !7952)
!7950 = distinct !DISubprogram(name: "__DSB", scope: !7951, file: !7951, line: 269, type: !327, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2645)
!7951 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7952 = distinct !DILocation(line: 1727, column: 5, scope: !7944)
!7953 = !{i64 6906495}
!7954 = !DILocation(line: 260, column: 3, scope: !7955, inlinedAt: !7956)
!7955 = distinct !DISubprogram(name: "__ISB", scope: !7951, file: !7951, line: 258, type: !327, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !2645)
!7956 = distinct !DILocation(line: 1728, column: 5, scope: !7944)
!7957 = !{i64 6906212}
!7958 = !DILocation(line: 1729, column: 3, scope: !7944)
!7959 = !DILocation(line: 1730, column: 1, scope: !7936)
!7960 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7901, file: !7901, line: 50, type: !7961, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !7963)
!7961 = !DISubroutineType(types: !7962)
!7962 = !{!103, !32}
!7963 = !{!7964}
!7964 = !DILocalVariable(name: "irq", arg: 1, scope: !7960, file: !7901, line: 50, type: !32)
!7965 = !DILocation(line: 0, scope: !7960)
!7966 = !DILocation(line: 52, column: 20, scope: !7960)
!7967 = !DILocation(line: 52, column: 9, scope: !7960)
!7968 = !DILocation(line: 52, column: 41, scope: !7960)
!7969 = !DILocation(line: 52, column: 39, scope: !7960)
!7970 = !DILocation(line: 52, column: 2, scope: !7960)
!7971 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7901, file: !7901, line: 64, type: !7972, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !7974)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{null, !32, !32, !108}
!7974 = !{!7975, !7976, !7977}
!7975 = !DILocalVariable(name: "irq", arg: 1, scope: !7971, file: !7901, line: 64, type: !32)
!7976 = !DILocalVariable(name: "prio", arg: 2, scope: !7971, file: !7901, line: 64, type: !32)
!7977 = !DILocalVariable(name: "flags", arg: 3, scope: !7971, file: !7901, line: 64, type: !108)
!7978 = !DILocation(line: 0, scope: !7971)
!7979 = !DILocation(line: 83, column: 8, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7981, file: !7901, line: 82, column: 9)
!7981 = distinct !DILexicalBlock(scope: !7971, file: !7901, line: 76, column: 6)
!7982 = !DILocation(line: 91, column: 2, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7984, file: !7901, line: 91, column: 2)
!7984 = distinct !DILexicalBlock(scope: !7971, file: !7901, line: 91, column: 2)
!7985 = !DILocation(line: 91, column: 2, scope: !7984)
!7986 = !DILocation(line: 91, column: 2, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7983, file: !7901, line: 91, column: 2)
!7988 = !DILocation(line: 95, column: 2, scope: !7971)
!7989 = !DILocation(line: 96, column: 1, scope: !7971)
!7990 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2295, file: !2295, line: 1814, type: !7991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !7993)
!7991 = !DISubroutineType(types: !7992)
!7992 = !{null, !3230, !108}
!7993 = !{!7994, !7995}
!7994 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7990, file: !2295, line: 1814, type: !3230)
!7995 = !DILocalVariable(name: "priority", arg: 2, scope: !7990, file: !2295, line: 1814, type: !108)
!7996 = !DILocation(line: 0, scope: !7990)
!7997 = !DILocation(line: 0, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7990, file: !2295, line: 1816, column: 7)
!7999 = !DILocation(line: 1816, column: 7, scope: !7990)
!8000 = !DILocation(line: 1824, column: 1, scope: !7990)
!8001 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7901, file: !7901, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3226, retainedNodes: !8002)
!8002 = !{!8003}
!8003 = !DILocalVariable(name: "unused", arg: 1, scope: !8001, file: !7901, line: 155, type: !13)
!8004 = !DILocation(line: 0, scope: !8001)
!8005 = !DILocation(line: 159, column: 2, scope: !8001)
!8006 = !DILocation(line: 160, column: 1, scope: !8001)
!8007 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8008, file: !8008, line: 87, type: !327, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3273, retainedNodes: !2645)
!8008 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8009 = !DILocation(line: 89, column: 2, scope: !8007)
!8010 = !DILocation(line: 90, column: 2, scope: !8007)
!8011 = !DILocation(line: 91, column: 1, scope: !8007)
!8012 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8008, file: !8008, line: 23, type: !327, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!8013 = !DISubprogram(name: "z_arm_int_exit", scope: !8014, file: !8014, line: 153, type: !327, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!8014 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8015 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8016, file: !8016, line: 256, type: !327, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !2645)
!8016 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8017 = !DILocation(line: 258, column: 2, scope: !8015)
!8018 = !DILocation(line: 260, column: 2, scope: !8015)
!8019 = !DILocation(line: 262, column: 2, scope: !8015)
!8020 = !DILocation(line: 263, column: 2, scope: !8015)
!8021 = !DILocation(line: 267, column: 2, scope: !8015)
!8022 = !DILocation(line: 268, column: 2, scope: !8015)
!8023 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8016, file: !8016, line: 53, type: !327, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !2645)
!8024 = !DILocation(line: 55, column: 12, scope: !8023)
!8025 = !DILocation(line: 271, column: 3, scope: !8026, inlinedAt: !8027)
!8026 = distinct !DISubprogram(name: "__DSB", scope: !7951, file: !7951, line: 269, type: !327, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !2645)
!8027 = distinct !DILocation(line: 56, column: 2, scope: !8023)
!8028 = !{i64 6942269}
!8029 = !DILocation(line: 260, column: 3, scope: !8030, inlinedAt: !8031)
!8030 = distinct !DISubprogram(name: "__ISB", scope: !7951, file: !7951, line: 258, type: !327, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !2645)
!8031 = distinct !DILocation(line: 57, column: 2, scope: !8023)
!8032 = !{i64 6941986}
!8033 = !DILocation(line: 58, column: 1, scope: !8023)
!8034 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8016, file: !8016, line: 96, type: !327, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !2645)
!8035 = !DILocation(line: 103, column: 13, scope: !8034)
!8036 = !DILocation(line: 975, column: 3, scope: !8037, inlinedAt: !8042)
!8037 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7951, file: !7951, line: 971, type: !8038, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !8040)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{!108}
!8040 = !{!8041}
!8041 = !DILocalVariable(name: "result", scope: !8037, file: !7951, line: 973, type: !108)
!8042 = distinct !DILocation(line: 189, column: 16, scope: !8034)
!8043 = !{i64 6963099}
!8044 = !DILocation(line: 0, scope: !8037, inlinedAt: !8042)
!8045 = !DILocation(line: 189, column: 32, scope: !8034)
!8046 = !DILocalVariable(name: "control", arg: 1, scope: !8047, file: !7951, line: 1001, type: !108)
!8047 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7951, file: !7951, line: 1001, type: !8048, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3275, retainedNodes: !8050)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{null, !108}
!8050 = !{!8046}
!8051 = !DILocation(line: 0, scope: !8047, inlinedAt: !8052)
!8052 = distinct !DILocation(line: 189, column: 2, scope: !8034)
!8053 = !DILocation(line: 1003, column: 3, scope: !8047, inlinedAt: !8052)
!8054 = !{i64 6963819}
!8055 = !DILocation(line: 260, column: 3, scope: !8030, inlinedAt: !8056)
!8056 = distinct !DILocation(line: 1004, column: 3, scope: !8047, inlinedAt: !8052)
!8057 = !DILocation(line: 191, column: 1, scope: !8034)
!8058 = distinct !DISubprogram(name: "arch_swap", scope: !8059, file: !8059, line: 33, type: !7961, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3303, retainedNodes: !8060)
!8059 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8060 = !{!8061}
!8061 = !DILocalVariable(name: "key", arg: 1, scope: !8058, file: !8059, line: 33, type: !32)
!8062 = !DILocation(line: 0, scope: !8058)
!8063 = !DILocation(line: 36, column: 2, scope: !8058)
!8064 = !DILocation(line: 36, column: 17, scope: !8058)
!8065 = !DILocation(line: 36, column: 25, scope: !8058)
!8066 = !DILocation(line: 37, column: 37, scope: !8058)
!8067 = !DILocation(line: 37, column: 17, scope: !8058)
!8068 = !DILocation(line: 37, column: 35, scope: !8058)
!8069 = !DILocation(line: 41, column: 12, scope: !8058)
!8070 = !DILocalVariable(name: "key", arg: 1, scope: !8071, file: !8072, line: 84, type: !32)
!8071 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3303, retainedNodes: !8073)
!8072 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8073 = !{!8070}
!8074 = !DILocation(line: 0, scope: !8071, inlinedAt: !8075)
!8075 = distinct !DILocation(line: 44, column: 2, scope: !8058)
!8076 = !DILocation(line: 95, column: 2, scope: !8071, inlinedAt: !8075)
!8077 = !{i64 2844177}
!8078 = !DILocation(line: 53, column: 9, scope: !8058)
!8079 = !DILocation(line: 53, column: 24, scope: !8058)
!8080 = !DILocation(line: 53, column: 2, scope: !8058)
!8081 = distinct !DISubprogram(name: "arch_new_thread", scope: !8082, file: !8082, line: 56, type: !8083, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3331, retainedNodes: !8186)
!8082 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8083 = !DISubroutineType(types: !8084)
!8084 = !{null, !8085, !8181, !157, !314, !102, !102, !102}
!8085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8086, size: 32)
!8086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !8087)
!8087 = !{!8088, !8146, !8158, !8159, !8160, !8161, !8176}
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8086, file: !195, line: 247, baseType: !8089, size: 384)
!8089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !8090)
!8090 = !{!8091, !8115, !8122, !8123, !8124, !8133, !8134, !8135}
!8091 = !DIDerivedType(tag: DW_TAG_member, scope: !8089, file: !195, line: 60, baseType: !8092, size: 64)
!8092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8089, file: !195, line: 60, size: 64, elements: !8093)
!8093 = !{!8094, !8109}
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8092, file: !195, line: 61, baseType: !8095, size: 64)
!8095 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !8096)
!8096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !8097)
!8097 = !{!8098, !8104}
!8098 = !DIDerivedType(tag: DW_TAG_member, scope: !8096, file: !133, line: 38, baseType: !8099, size: 32)
!8099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8096, file: !133, line: 38, size: 32, elements: !8100)
!8100 = !{!8101, !8103}
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8099, file: !133, line: 39, baseType: !8102, size: 32)
!8102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8096, size: 32)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8099, file: !133, line: 40, baseType: !8102, size: 32)
!8104 = !DIDerivedType(tag: DW_TAG_member, scope: !8096, file: !133, line: 42, baseType: !8105, size: 32, offset: 32)
!8105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8096, file: !133, line: 42, size: 32, elements: !8106)
!8106 = !{!8107, !8108}
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8105, file: !133, line: 43, baseType: !8102, size: 32)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8105, file: !133, line: 44, baseType: !8102, size: 32)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8092, file: !195, line: 62, baseType: !8110, size: 64)
!8110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !8111)
!8111 = !{!8112}
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8110, file: !207, line: 50, baseType: !8113, size: 64)
!8113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8114, size: 64, elements: !212)
!8114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8110, size: 32)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8089, file: !195, line: 68, baseType: !8116, size: 32, offset: 64)
!8116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8117, size: 32)
!8117 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !8118)
!8118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !8119)
!8119 = !{!8120}
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8118, file: !128, line: 232, baseType: !8121, size: 64)
!8121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !8096)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8089, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8089, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!8124 = !DIDerivedType(tag: DW_TAG_member, scope: !8089, file: !195, line: 90, baseType: !8125, size: 16, offset: 112)
!8125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8089, file: !195, line: 90, size: 16, elements: !8126)
!8126 = !{!8127, !8132}
!8127 = !DIDerivedType(tag: DW_TAG_member, scope: !8125, file: !195, line: 91, baseType: !8128, size: 16)
!8128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8125, file: !195, line: 91, size: 16, elements: !8129)
!8129 = !{!8130, !8131}
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8128, file: !195, line: 96, baseType: !225, size: 8)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8128, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8125, file: !195, line: 100, baseType: !177, size: 16)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8089, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8089, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8089, file: !195, line: 131, baseType: !8136, size: 192, offset: 192)
!8136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !8137)
!8137 = !{!8138, !8139, !8145}
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8136, file: !128, line: 245, baseType: !8095, size: 64)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8136, file: !128, line: 246, baseType: !8140, size: 32, offset: 64)
!8140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !8141)
!8141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8142, size: 32)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{null, !8144}
!8144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8136, size: 32)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8136, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8086, file: !195, line: 250, baseType: !8147, size: 288, offset: 384)
!8147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8148)
!8148 = !{!8149, !8150, !8151, !8152, !8153, !8154, !8155, !8156, !8157}
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8147, file: !244, line: 26, baseType: !108, size: 32)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8147, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8147, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8147, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8147, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8147, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8147, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8147, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8147, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8086, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8086, file: !195, line: 256, baseType: !8117, size: 64, offset: 704)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8086, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8086, file: !195, line: 325, baseType: !8162, size: 32, offset: 800)
!8162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8163, size: 32)
!8163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !8164)
!8164 = !{!8165, !8171, !8172}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8163, file: !124, line: 5074, baseType: !8166, size: 96)
!8166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !8167)
!8167 = !{!8168, !8169, !8170}
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8166, file: !264, line: 57, baseType: !267, size: 32)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8166, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8166, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8163, file: !124, line: 5075, baseType: !8117, size: 64, offset: 96)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8163, file: !124, line: 5076, baseType: !8173, size: 32, offset: 160)
!8173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !8174)
!8174 = !{!8175}
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8173, file: !149, line: 52, baseType: !22, size: 32)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8086, file: !195, line: 343, baseType: !8177, size: 64, offset: 832)
!8177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !8178)
!8178 = !{!8179, !8180}
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8177, file: !244, line: 63, baseType: !108, size: 32)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8177, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!8181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8182, size: 32)
!8182 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !307, line: 44, baseType: !8183)
!8183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !309, line: 47, size: 8, elements: !8184)
!8184 = !{!8185}
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8183, file: !309, line: 48, baseType: !158, size: 8)
!8186 = !{!8187, !8188, !8189, !8190, !8191, !8192, !8193, !8194}
!8187 = !DILocalVariable(name: "thread", arg: 1, scope: !8081, file: !8082, line: 56, type: !8085)
!8188 = !DILocalVariable(name: "stack", arg: 2, scope: !8081, file: !8082, line: 56, type: !8181)
!8189 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8081, file: !8082, line: 57, type: !157)
!8190 = !DILocalVariable(name: "entry", arg: 4, scope: !8081, file: !8082, line: 57, type: !314)
!8191 = !DILocalVariable(name: "p1", arg: 5, scope: !8081, file: !8082, line: 58, type: !102)
!8192 = !DILocalVariable(name: "p2", arg: 6, scope: !8081, file: !8082, line: 58, type: !102)
!8193 = !DILocalVariable(name: "p3", arg: 7, scope: !8081, file: !8082, line: 58, type: !102)
!8194 = !DILocalVariable(name: "iframe", scope: !8081, file: !8082, line: 60, type: !3334)
!8195 = !DILocation(line: 0, scope: !8081)
!8196 = !DILocation(line: 85, column: 11, scope: !8081)
!8197 = !DILocation(line: 93, column: 10, scope: !8081)
!8198 = !DILocation(line: 98, column: 13, scope: !8081)
!8199 = !DILocation(line: 100, column: 15, scope: !8081)
!8200 = !DILocation(line: 100, column: 10, scope: !8081)
!8201 = !DILocation(line: 100, column: 13, scope: !8081)
!8202 = !DILocation(line: 101, column: 15, scope: !8081)
!8203 = !DILocation(line: 101, column: 10, scope: !8081)
!8204 = !DILocation(line: 101, column: 13, scope: !8081)
!8205 = !DILocation(line: 102, column: 15, scope: !8081)
!8206 = !DILocation(line: 102, column: 10, scope: !8081)
!8207 = !DILocation(line: 102, column: 13, scope: !8081)
!8208 = !DILocation(line: 103, column: 15, scope: !8081)
!8209 = !DILocation(line: 103, column: 10, scope: !8081)
!8210 = !DILocation(line: 103, column: 13, scope: !8081)
!8211 = !DILocation(line: 106, column: 10, scope: !8081)
!8212 = !DILocation(line: 106, column: 15, scope: !8081)
!8213 = !DILocation(line: 122, column: 29, scope: !8081)
!8214 = !DILocation(line: 122, column: 23, scope: !8081)
!8215 = !DILocation(line: 122, column: 27, scope: !8081)
!8216 = !DILocation(line: 123, column: 15, scope: !8081)
!8217 = !DILocation(line: 123, column: 23, scope: !8081)
!8218 = !DILocation(line: 143, column: 1, scope: !8081)
!8219 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8082, file: !8082, line: 530, type: !8220, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3331, retainedNodes: !8222)
!8220 = !DISubroutineType(types: !8221)
!8221 = !{null, !8085, !157, !314}
!8222 = !{!8223, !8224, !8225}
!8223 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8219, file: !8082, line: 530, type: !8085)
!8224 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8219, file: !8082, line: 530, type: !157)
!8225 = !DILocalVariable(name: "_main", arg: 3, scope: !8219, file: !8082, line: 531, type: !314)
!8226 = !DILocation(line: 0, scope: !8219)
!8227 = !DILocation(line: 535, column: 11, scope: !8219)
!8228 = !DILocation(line: 576, column: 2, scope: !8219)
!8229 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8230 = !DILocation(line: 603, column: 2, scope: !8219)
!8231 = distinct !DISubprogram(name: "z_arm_fault", scope: !8232, file: !8232, line: 1036, type: !8233, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8248)
!8232 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8233 = !DISubroutineType(types: !8234)
!8234 = !{null, !108, !108, !108, !8235}
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8236, size: 32)
!8236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !244, line: 37, baseType: !8237)
!8237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8238)
!8238 = !{!8239, !8240, !8241, !8242, !8243, !8244, !8245, !8246, !8247}
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8237, file: !244, line: 26, baseType: !108, size: 32)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8237, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8237, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8237, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8237, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8237, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8237, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8237, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8237, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8248 = !{!8249, !8250, !8251, !8252, !8253, !8254, !8255, !8256, !8257, !8258}
!8249 = !DILocalVariable(name: "msp", arg: 1, scope: !8231, file: !8232, line: 1036, type: !108)
!8250 = !DILocalVariable(name: "psp", arg: 2, scope: !8231, file: !8232, line: 1036, type: !108)
!8251 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8231, file: !8232, line: 1036, type: !108)
!8252 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8231, file: !8232, line: 1037, type: !8235)
!8253 = !DILocalVariable(name: "reason", scope: !8231, file: !8232, line: 1039, type: !108)
!8254 = !DILocalVariable(name: "fault", scope: !8231, file: !8232, line: 1040, type: !103)
!8255 = !DILocalVariable(name: "recoverable", scope: !8231, file: !8232, line: 1041, type: !119)
!8256 = !DILocalVariable(name: "nested_exc", scope: !8231, file: !8232, line: 1041, type: !119)
!8257 = !DILocalVariable(name: "esf", scope: !8231, file: !8232, line: 1042, type: !3402)
!8258 = !DILocalVariable(name: "esf_copy", scope: !8231, file: !8232, line: 1047, type: !3403)
!8259 = !DILocation(line: 0, scope: !8231)
!8260 = !DILocation(line: 1040, column: 19, scope: !8231)
!8261 = !DILocation(line: 1041, column: 2, scope: !8231)
!8262 = !DILocation(line: 1047, column: 2, scope: !8231)
!8263 = !DILocation(line: 1047, column: 15, scope: !8231)
!8264 = !DILocalVariable(name: "key", arg: 1, scope: !8265, file: !8072, line: 84, type: !32)
!8265 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8266)
!8266 = !{!8264}
!8267 = !DILocation(line: 0, scope: !8265, inlinedAt: !8268)
!8268 = distinct !DILocation(line: 1050, column: 2, scope: !8231)
!8269 = !DILocation(line: 95, column: 2, scope: !8265, inlinedAt: !8268)
!8270 = !{i64 2877421}
!8271 = !DILocation(line: 1055, column: 9, scope: !8231)
!8272 = !DILocation(line: 1056, column: 2, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !8232, line: 1056, column: 2)
!8274 = distinct !DILexicalBlock(scope: !8231, file: !8232, line: 1056, column: 2)
!8275 = !DILocation(line: 1056, column: 2, scope: !8274)
!8276 = !DILocation(line: 1056, column: 2, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !8232, line: 1056, column: 2)
!8278 = !DILocation(line: 1040, column: 24, scope: !8231)
!8279 = !DILocation(line: 1063, column: 11, scope: !8231)
!8280 = !DILocation(line: 1064, column: 6, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8231, file: !8232, line: 1064, column: 6)
!8282 = !{i8 0, i8 2}
!8283 = !DILocation(line: 1064, column: 6, scope: !8231)
!8284 = !DILocation(line: 1070, column: 20, scope: !8231)
!8285 = !DILocation(line: 1070, column: 2, scope: !8231)
!8286 = !DILocation(line: 1089, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8231, file: !8232, line: 1089, column: 6)
!8288 = !DILocation(line: 0, scope: !8287)
!8289 = !DILocation(line: 1089, column: 6, scope: !8231)
!8290 = !DILocation(line: 1090, column: 28, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !8232, line: 1090, column: 7)
!8292 = distinct !DILexicalBlock(scope: !8287, file: !8232, line: 1089, column: 18)
!8293 = !DILocation(line: 1090, column: 44, scope: !8291)
!8294 = !DILocation(line: 1090, column: 7, scope: !8292)
!8295 = !DILocation(line: 1091, column: 24, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8291, file: !8232, line: 1090, column: 50)
!8297 = !DILocation(line: 1092, column: 3, scope: !8296)
!8298 = !DILocation(line: 1094, column: 23, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8287, file: !8232, line: 1093, column: 9)
!8300 = !DILocation(line: 1097, column: 2, scope: !8231)
!8301 = !DILocation(line: 1098, column: 1, scope: !8231)
!8302 = distinct !DISubprogram(name: "get_esf", scope: !8232, file: !8232, line: 894, type: !8303, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8306)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!3402, !108, !108, !108, !8305}
!8305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!8306 = !{!8307, !8308, !8309, !8310, !8311, !8312}
!8307 = !DILocalVariable(name: "msp", arg: 1, scope: !8302, file: !8232, line: 894, type: !108)
!8308 = !DILocalVariable(name: "psp", arg: 2, scope: !8302, file: !8232, line: 894, type: !108)
!8309 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8302, file: !8232, line: 894, type: !108)
!8310 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8302, file: !8232, line: 895, type: !8305)
!8311 = !DILocalVariable(name: "alternative_state_exc", scope: !8302, file: !8232, line: 897, type: !119)
!8312 = !DILocalVariable(name: "ptr_esf", scope: !8302, file: !8232, line: 898, type: !3402)
!8313 = !DILocation(line: 0, scope: !8302)
!8314 = !DILocation(line: 900, column: 14, scope: !8302)
!8315 = !DILocation(line: 902, column: 49, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8302, file: !8232, line: 902, column: 6)
!8317 = !DILocation(line: 902, column: 6, scope: !8302)
!8318 = !DILocation(line: 983, column: 44, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8302, file: !8232, line: 983, column: 6)
!8320 = !DILocation(line: 985, column: 3, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !8232, line: 985, column: 3)
!8322 = distinct !DILexicalBlock(scope: !8323, file: !8232, line: 985, column: 3)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !8232, line: 985, column: 3)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !8232, line: 985, column: 3)
!8325 = distinct !DILexicalBlock(scope: !8319, file: !8232, line: 984, column: 47)
!8326 = !DILocation(line: 986, column: 3, scope: !8325)
!8327 = !DILocation(line: 983, column: 18, scope: !8319)
!8328 = !DILocation(line: 991, column: 7, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !8232, line: 990, column: 30)
!8330 = distinct !DILexicalBlock(scope: !8302, file: !8232, line: 990, column: 6)
!8331 = !DILocation(line: 998, column: 16, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !8232, line: 995, column: 10)
!8333 = distinct !DILexicalBlock(scope: !8329, file: !8232, line: 991, column: 7)
!8334 = !DILocation(line: 1002, column: 2, scope: !8302)
!8335 = !DILocation(line: 1003, column: 1, scope: !8302)
!8336 = distinct !DISubprogram(name: "fault_handle", scope: !8232, file: !8232, line: 786, type: !8337, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{!108, !3402, !103, !8305}
!8339 = !{!8340, !8341, !8342, !8343}
!8340 = !DILocalVariable(name: "esf", arg: 1, scope: !8336, file: !8232, line: 786, type: !3402)
!8341 = !DILocalVariable(name: "fault", arg: 2, scope: !8336, file: !8232, line: 786, type: !103)
!8342 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8336, file: !8232, line: 786, type: !8305)
!8343 = !DILocalVariable(name: "reason", scope: !8336, file: !8232, line: 788, type: !108)
!8344 = !DILocation(line: 0, scope: !8336)
!8345 = !DILocation(line: 790, column: 15, scope: !8336)
!8346 = !DILocation(line: 792, column: 2, scope: !8336)
!8347 = !DILocation(line: 794, column: 12, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8336, file: !8232, line: 792, column: 17)
!8349 = !DILocation(line: 795, column: 3, scope: !8348)
!8350 = !DILocation(line: 800, column: 12, scope: !8348)
!8351 = !DILocation(line: 801, column: 3, scope: !8348)
!8352 = !DILocation(line: 803, column: 12, scope: !8348)
!8353 = !DILocation(line: 804, column: 3, scope: !8348)
!8354 = !DILocation(line: 806, column: 12, scope: !8348)
!8355 = !DILocation(line: 807, column: 3, scope: !8348)
!8356 = !DILocation(line: 814, column: 3, scope: !8348)
!8357 = !DILocation(line: 815, column: 3, scope: !8348)
!8358 = !DILocation(line: 820, column: 3, scope: !8348)
!8359 = !DILocation(line: 821, column: 3, scope: !8348)
!8360 = !DILocation(line: 829, column: 2, scope: !8336)
!8361 = distinct !DISubprogram(name: "hard_fault", scope: !8232, file: !8232, line: 709, type: !8362, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8364)
!8362 = !DISubroutineType(types: !8363)
!8363 = !{!108, !3402, !8305}
!8364 = !{!8365, !8366, !8367}
!8365 = !DILocalVariable(name: "esf", arg: 1, scope: !8361, file: !8232, line: 709, type: !3402)
!8366 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8361, file: !8232, line: 709, type: !8305)
!8367 = !DILocalVariable(name: "reason", scope: !8361, file: !8232, line: 711, type: !108)
!8368 = !DILocation(line: 0, scope: !8361)
!8369 = !DILocation(line: 713, column: 2, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !8232, line: 713, column: 2)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !8232, line: 713, column: 2)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !8232, line: 713, column: 2)
!8373 = distinct !DILexicalBlock(scope: !8361, file: !8232, line: 713, column: 2)
!8374 = !DILocation(line: 732, column: 15, scope: !8361)
!8375 = !DILocation(line: 734, column: 12, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8361, file: !8232, line: 734, column: 6)
!8377 = !DILocation(line: 734, column: 17, scope: !8376)
!8378 = !DILocation(line: 734, column: 41, scope: !8376)
!8379 = !DILocation(line: 734, column: 6, scope: !8361)
!8380 = !DILocation(line: 735, column: 3, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8382, file: !8232, line: 735, column: 3)
!8382 = distinct !DILexicalBlock(scope: !8383, file: !8232, line: 735, column: 3)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !8232, line: 735, column: 3)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !8232, line: 735, column: 3)
!8385 = distinct !DILexicalBlock(scope: !8376, file: !8232, line: 734, column: 47)
!8386 = !DILocation(line: 736, column: 2, scope: !8385)
!8387 = !DILocation(line: 736, column: 19, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8376, file: !8232, line: 736, column: 13)
!8389 = !DILocation(line: 736, column: 49, scope: !8388)
!8390 = !DILocation(line: 736, column: 13, scope: !8376)
!8391 = !DILocation(line: 737, column: 3, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8232, line: 737, column: 3)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !8232, line: 737, column: 3)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !8232, line: 737, column: 3)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !8232, line: 737, column: 3)
!8396 = distinct !DILexicalBlock(scope: !8388, file: !8232, line: 736, column: 55)
!8397 = !DILocation(line: 738, column: 2, scope: !8396)
!8398 = !DILocation(line: 738, column: 19, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8388, file: !8232, line: 738, column: 13)
!8400 = !DILocation(line: 738, column: 24, scope: !8399)
!8401 = !DILocation(line: 738, column: 47, scope: !8399)
!8402 = !DILocation(line: 738, column: 13, scope: !8388)
!8403 = !DILocation(line: 739, column: 3, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !8232, line: 739, column: 3)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !8232, line: 739, column: 3)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !8232, line: 739, column: 3)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !8232, line: 739, column: 3)
!8408 = distinct !DILexicalBlock(scope: !8399, file: !8232, line: 738, column: 53)
!8409 = !DILocation(line: 740, column: 7, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8408, file: !8232, line: 740, column: 7)
!8411 = !DILocation(line: 740, column: 7, scope: !8408)
!8412 = !DILocation(line: 741, column: 4, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !8232, line: 741, column: 4)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !8232, line: 741, column: 4)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !8232, line: 741, column: 4)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !8232, line: 741, column: 4)
!8417 = distinct !DILexicalBlock(scope: !8410, file: !8232, line: 740, column: 38)
!8418 = !DILocation(line: 742, column: 24, scope: !8417)
!8419 = !DILocation(line: 743, column: 3, scope: !8417)
!8420 = !DILocation(line: 743, column: 20, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8410, file: !8232, line: 743, column: 14)
!8422 = !DILocation(line: 743, column: 25, scope: !8421)
!8423 = !DILocation(line: 743, column: 52, scope: !8421)
!8424 = !DILocation(line: 743, column: 14, scope: !8410)
!8425 = !DILocation(line: 744, column: 13, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8421, file: !8232, line: 743, column: 58)
!8427 = !DILocation(line: 745, column: 3, scope: !8426)
!8428 = !DILocation(line: 745, column: 20, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8421, file: !8232, line: 745, column: 14)
!8430 = !DILocation(line: 745, column: 25, scope: !8429)
!8431 = !DILocation(line: 745, column: 52, scope: !8429)
!8432 = !DILocation(line: 745, column: 14, scope: !8421)
!8433 = !DILocation(line: 746, column: 13, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !8232, line: 745, column: 58)
!8435 = !DILocation(line: 747, column: 3, scope: !8434)
!8436 = !DILocation(line: 747, column: 20, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8429, file: !8232, line: 747, column: 14)
!8438 = !DILocation(line: 747, column: 52, scope: !8437)
!8439 = !DILocation(line: 747, column: 14, scope: !8429)
!8440 = !DILocation(line: 748, column: 13, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8437, file: !8232, line: 747, column: 58)
!8442 = !DILocation(line: 754, column: 4, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8444, file: !8232, line: 754, column: 4)
!8444 = distinct !DILexicalBlock(scope: !8445, file: !8232, line: 754, column: 4)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !8232, line: 754, column: 4)
!8446 = distinct !DILexicalBlock(scope: !8437, file: !8232, line: 753, column: 10)
!8447 = !DILocation(line: 758, column: 3, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8449, file: !8232, line: 758, column: 3)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !8232, line: 758, column: 3)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !8232, line: 758, column: 3)
!8451 = distinct !DILexicalBlock(scope: !8399, file: !8232, line: 757, column: 9)
!8452 = !DILocation(line: 766, column: 2, scope: !8361)
!8453 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8232, file: !8232, line: 229, type: !8337, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8454)
!8454 = !{!8455, !8456, !8457, !8458, !8459, !8460}
!8455 = !DILocalVariable(name: "esf", arg: 1, scope: !8453, file: !8232, line: 229, type: !3402)
!8456 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8453, file: !8232, line: 229, type: !103)
!8457 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8453, file: !8232, line: 230, type: !8305)
!8458 = !DILocalVariable(name: "reason", scope: !8453, file: !8232, line: 232, type: !108)
!8459 = !DILocalVariable(name: "mmfar", scope: !8453, file: !8232, line: 233, type: !108)
!8460 = !DILocalVariable(name: "temp", scope: !8461, file: !8232, line: 254, type: !108)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !8232, line: 244, column: 48)
!8462 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 244, column: 6)
!8463 = !DILocation(line: 0, scope: !8453)
!8464 = !DILocation(line: 235, column: 2, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !8232, line: 235, column: 2)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !8232, line: 235, column: 2)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !8232, line: 235, column: 2)
!8468 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 235, column: 2)
!8469 = !DILocation(line: 237, column: 12, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 237, column: 6)
!8471 = !DILocation(line: 237, column: 17, scope: !8470)
!8472 = !DILocation(line: 237, column: 41, scope: !8470)
!8473 = !DILocation(line: 237, column: 6, scope: !8453)
!8474 = !DILocation(line: 238, column: 3, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8232, line: 238, column: 3)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !8232, line: 238, column: 3)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !8232, line: 238, column: 3)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !8232, line: 238, column: 3)
!8479 = distinct !DILexicalBlock(scope: !8470, file: !8232, line: 237, column: 47)
!8480 = !DILocation(line: 240, column: 2, scope: !8479)
!8481 = !DILocation(line: 241, column: 12, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 241, column: 6)
!8483 = !DILocation(line: 241, column: 17, scope: !8482)
!8484 = !DILocation(line: 241, column: 43, scope: !8482)
!8485 = !DILocation(line: 241, column: 6, scope: !8453)
!8486 = !DILocation(line: 242, column: 3, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !8232, line: 242, column: 3)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !8232, line: 242, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !8232, line: 242, column: 3)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !8232, line: 242, column: 3)
!8491 = distinct !DILexicalBlock(scope: !8482, file: !8232, line: 241, column: 49)
!8492 = !DILocation(line: 243, column: 2, scope: !8491)
!8493 = !DILocation(line: 244, column: 12, scope: !8462)
!8494 = !DILocation(line: 244, column: 17, scope: !8462)
!8495 = !DILocation(line: 244, column: 42, scope: !8462)
!8496 = !DILocation(line: 244, column: 6, scope: !8453)
!8497 = !DILocation(line: 245, column: 3, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8499, file: !8232, line: 245, column: 3)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !8232, line: 245, column: 3)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !8232, line: 245, column: 3)
!8501 = distinct !DILexicalBlock(scope: !8461, file: !8232, line: 245, column: 3)
!8502 = !DILocation(line: 254, column: 24, scope: !8461)
!8503 = !DILocation(line: 0, scope: !8461)
!8504 = !DILocation(line: 256, column: 13, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8461, file: !8232, line: 256, column: 7)
!8506 = !DILocation(line: 256, column: 18, scope: !8505)
!8507 = !DILocation(line: 256, column: 44, scope: !8505)
!8508 = !DILocation(line: 256, column: 7, scope: !8461)
!8509 = !DILocation(line: 258, column: 4, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !8232, line: 258, column: 4)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !8232, line: 258, column: 4)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !8232, line: 258, column: 4)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !8232, line: 258, column: 4)
!8514 = distinct !DILexicalBlock(scope: !8505, file: !8232, line: 256, column: 50)
!8515 = !DILocation(line: 259, column: 24, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8514, file: !8232, line: 259, column: 8)
!8517 = !DILocation(line: 259, column: 8, scope: !8514)
!8518 = !DILocation(line: 261, column: 15, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8516, file: !8232, line: 259, column: 30)
!8520 = !DILocation(line: 262, column: 4, scope: !8519)
!8521 = !DILocation(line: 265, column: 12, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 265, column: 6)
!8523 = !DILocation(line: 265, column: 17, scope: !8522)
!8524 = !DILocation(line: 265, column: 42, scope: !8522)
!8525 = !DILocation(line: 265, column: 6, scope: !8453)
!8526 = !DILocation(line: 266, column: 3, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !8232, line: 266, column: 3)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !8232, line: 266, column: 3)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !8232, line: 266, column: 3)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !8232, line: 266, column: 3)
!8531 = distinct !DILexicalBlock(scope: !8522, file: !8232, line: 265, column: 48)
!8532 = !DILocation(line: 267, column: 2, scope: !8531)
!8533 = !DILocation(line: 269, column: 12, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 269, column: 6)
!8535 = !DILocation(line: 269, column: 17, scope: !8534)
!8536 = !DILocation(line: 269, column: 41, scope: !8534)
!8537 = !DILocation(line: 269, column: 6, scope: !8453)
!8538 = !DILocation(line: 270, column: 3, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !8232, line: 270, column: 3)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !8232, line: 270, column: 3)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !8232, line: 270, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !8232, line: 270, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8534, file: !8232, line: 269, column: 47)
!8544 = !DILocation(line: 272, column: 2, scope: !8543)
!8545 = !DILocation(line: 288, column: 12, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 288, column: 6)
!8547 = !DILocation(line: 288, column: 17, scope: !8546)
!8548 = !DILocation(line: 288, column: 41, scope: !8546)
!8549 = !DILocation(line: 289, column: 9, scope: !8546)
!8550 = !DILocation(line: 289, column: 14, scope: !8546)
!8551 = !DILocation(line: 288, column: 6, scope: !8453)
!8552 = !DILocation(line: 348, column: 2, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !8232, line: 348, column: 2)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !8232, line: 348, column: 2)
!8555 = distinct !DILexicalBlock(scope: !8546, file: !8232, line: 289, column: 40)
!8556 = !DILocation(line: 348, column: 2, scope: !8554)
!8557 = !DILocation(line: 348, column: 2, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8553, file: !8232, line: 348, column: 2)
!8559 = !DILocation(line: 360, column: 12, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8453, file: !8232, line: 360, column: 6)
!8561 = !DILocation(line: 360, column: 17, scope: !8560)
!8562 = !DILocation(line: 360, column: 41, scope: !8560)
!8563 = !DILocation(line: 360, column: 6, scope: !8453)
!8564 = !DILocation(line: 361, column: 14, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8560, file: !8232, line: 360, column: 47)
!8566 = !DILocation(line: 362, column: 2, scope: !8565)
!8567 = !DILocation(line: 366, column: 12, scope: !8453)
!8568 = !DILocation(line: 369, column: 15, scope: !8453)
!8569 = !DILocation(line: 371, column: 2, scope: !8453)
!8570 = distinct !DISubprogram(name: "bus_fault", scope: !8232, file: !8232, line: 383, type: !8571, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8573)
!8571 = !DISubroutineType(types: !8572)
!8572 = !{!103, !3402, !103, !8305}
!8573 = !{!8574, !8575, !8576, !8577, !8578}
!8574 = !DILocalVariable(name: "esf", arg: 1, scope: !8570, file: !8232, line: 383, type: !3402)
!8575 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8570, file: !8232, line: 383, type: !103)
!8576 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8570, file: !8232, line: 383, type: !8305)
!8577 = !DILocalVariable(name: "reason", scope: !8570, file: !8232, line: 385, type: !108)
!8578 = !DILocalVariable(name: "bfar", scope: !8579, file: !8232, line: 405, type: !108)
!8579 = distinct !DILexicalBlock(scope: !8580, file: !8232, line: 395, column: 42)
!8580 = distinct !DILexicalBlock(scope: !8570, file: !8232, line: 395, column: 6)
!8581 = !DILocation(line: 0, scope: !8570)
!8582 = !DILocation(line: 387, column: 2, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !8232, line: 387, column: 2)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !8232, line: 387, column: 2)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !8232, line: 387, column: 2)
!8586 = distinct !DILexicalBlock(scope: !8570, file: !8232, line: 387, column: 2)
!8587 = !DILocation(line: 389, column: 11, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8570, file: !8232, line: 389, column: 6)
!8589 = !DILocation(line: 389, column: 16, scope: !8588)
!8590 = !DILocation(line: 389, column: 6, scope: !8570)
!8591 = !DILocation(line: 390, column: 3, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !8232, line: 390, column: 3)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !8232, line: 390, column: 3)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !8232, line: 390, column: 3)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !8232, line: 390, column: 3)
!8596 = distinct !DILexicalBlock(scope: !8588, file: !8232, line: 389, column: 39)
!8597 = !DILocation(line: 391, column: 2, scope: !8596)
!8598 = !DILocation(line: 392, column: 11, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8570, file: !8232, line: 392, column: 6)
!8600 = !DILocation(line: 392, column: 16, scope: !8599)
!8601 = !DILocation(line: 392, column: 6, scope: !8570)
!8602 = !DILocation(line: 393, column: 3, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !8232, line: 393, column: 3)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !8232, line: 393, column: 3)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !8232, line: 393, column: 3)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !8232, line: 393, column: 3)
!8607 = distinct !DILexicalBlock(scope: !8599, file: !8232, line: 392, column: 41)
!8608 = !DILocation(line: 394, column: 2, scope: !8607)
!8609 = !DILocation(line: 395, column: 11, scope: !8580)
!8610 = !DILocation(line: 395, column: 16, scope: !8580)
!8611 = !DILocation(line: 395, column: 6, scope: !8570)
!8612 = !DILocation(line: 396, column: 3, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !8232, line: 396, column: 3)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !8232, line: 396, column: 3)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !8232, line: 396, column: 3)
!8616 = distinct !DILexicalBlock(scope: !8579, file: !8232, line: 396, column: 3)
!8617 = !DILocation(line: 405, column: 3, scope: !8579)
!8618 = !DILocation(line: 0, scope: !8579)
!8619 = !DILocation(line: 407, column: 13, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8579, file: !8232, line: 407, column: 7)
!8621 = !DILocation(line: 407, column: 18, scope: !8620)
!8622 = !DILocation(line: 407, column: 44, scope: !8620)
!8623 = !DILocation(line: 407, column: 7, scope: !8579)
!8624 = !DILocation(line: 408, column: 4, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !8232, line: 408, column: 4)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !8232, line: 408, column: 4)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !8232, line: 408, column: 4)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !8232, line: 408, column: 4)
!8629 = distinct !DILexicalBlock(scope: !8620, file: !8232, line: 407, column: 50)
!8630 = !DILocation(line: 409, column: 24, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8629, file: !8232, line: 409, column: 8)
!8632 = !DILocation(line: 409, column: 8, scope: !8629)
!8633 = !DILocation(line: 411, column: 15, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8631, file: !8232, line: 409, column: 30)
!8635 = !DILocation(line: 412, column: 4, scope: !8634)
!8636 = !DILocation(line: 415, column: 11, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8570, file: !8232, line: 415, column: 6)
!8638 = !DILocation(line: 415, column: 16, scope: !8637)
!8639 = !DILocation(line: 415, column: 6, scope: !8570)
!8640 = !DILocation(line: 416, column: 3, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !8232, line: 416, column: 3)
!8642 = distinct !DILexicalBlock(scope: !8643, file: !8232, line: 416, column: 3)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !8232, line: 416, column: 3)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !8232, line: 416, column: 3)
!8645 = distinct !DILexicalBlock(scope: !8637, file: !8232, line: 415, column: 44)
!8646 = !DILocation(line: 417, column: 2, scope: !8645)
!8647 = !DILocation(line: 418, column: 12, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8570, file: !8232, line: 418, column: 6)
!8649 = !DILocation(line: 418, column: 17, scope: !8648)
!8650 = !DILocation(line: 418, column: 41, scope: !8648)
!8651 = !DILocation(line: 418, column: 6, scope: !8570)
!8652 = !DILocation(line: 423, column: 18, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8648, file: !8232, line: 423, column: 13)
!8654 = !DILocation(line: 423, column: 23, scope: !8653)
!8655 = !DILocation(line: 423, column: 13, scope: !8648)
!8656 = !DILocation(line: 0, scope: !8648)
!8657 = !DILocation(line: 524, column: 12, scope: !8570)
!8658 = !DILocation(line: 526, column: 15, scope: !8570)
!8659 = !DILocation(line: 528, column: 2, scope: !8570)
!8660 = distinct !DISubprogram(name: "usage_fault", scope: !8232, file: !8232, line: 539, type: !8661, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8665)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{!108, !8663}
!8663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8664, size: 32)
!8664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3403)
!8665 = !{!8666, !8667}
!8666 = !DILocalVariable(name: "esf", arg: 1, scope: !8660, file: !8232, line: 539, type: !8663)
!8667 = !DILocalVariable(name: "reason", scope: !8660, file: !8232, line: 541, type: !108)
!8668 = !DILocation(line: 0, scope: !8660)
!8669 = !DILocation(line: 543, column: 2, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !8232, line: 543, column: 2)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !8232, line: 543, column: 2)
!8672 = distinct !DILexicalBlock(scope: !8673, file: !8232, line: 543, column: 2)
!8673 = distinct !DILexicalBlock(scope: !8660, file: !8232, line: 543, column: 2)
!8674 = !DILocation(line: 546, column: 12, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8660, file: !8232, line: 546, column: 6)
!8676 = !DILocation(line: 546, column: 17, scope: !8675)
!8677 = !DILocation(line: 546, column: 43, scope: !8675)
!8678 = !DILocation(line: 546, column: 6, scope: !8660)
!8679 = !DILocation(line: 547, column: 3, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !8232, line: 547, column: 3)
!8681 = distinct !DILexicalBlock(scope: !8682, file: !8232, line: 547, column: 3)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !8232, line: 547, column: 3)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !8232, line: 547, column: 3)
!8684 = distinct !DILexicalBlock(scope: !8675, file: !8232, line: 546, column: 49)
!8685 = !DILocation(line: 548, column: 2, scope: !8684)
!8686 = !DILocation(line: 549, column: 12, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8660, file: !8232, line: 549, column: 6)
!8688 = !DILocation(line: 549, column: 17, scope: !8687)
!8689 = !DILocation(line: 549, column: 43, scope: !8687)
!8690 = !DILocation(line: 549, column: 6, scope: !8660)
!8691 = !DILocation(line: 550, column: 3, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !8232, line: 550, column: 3)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !8232, line: 550, column: 3)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !8232, line: 550, column: 3)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !8232, line: 550, column: 3)
!8696 = distinct !DILexicalBlock(scope: !8687, file: !8232, line: 549, column: 49)
!8697 = !DILocation(line: 551, column: 2, scope: !8696)
!8698 = !DILocation(line: 567, column: 12, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8660, file: !8232, line: 567, column: 6)
!8700 = !DILocation(line: 567, column: 17, scope: !8699)
!8701 = !DILocation(line: 567, column: 38, scope: !8699)
!8702 = !DILocation(line: 567, column: 6, scope: !8660)
!8703 = !DILocation(line: 568, column: 3, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !8232, line: 568, column: 3)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !8232, line: 568, column: 3)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !8232, line: 568, column: 3)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !8232, line: 568, column: 3)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !8232, line: 567, column: 44)
!8709 = !DILocation(line: 569, column: 2, scope: !8708)
!8710 = !DILocation(line: 570, column: 12, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8660, file: !8232, line: 570, column: 6)
!8712 = !DILocation(line: 570, column: 17, scope: !8711)
!8713 = !DILocation(line: 570, column: 39, scope: !8711)
!8714 = !DILocation(line: 570, column: 6, scope: !8660)
!8715 = !DILocation(line: 571, column: 3, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !8232, line: 571, column: 3)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !8232, line: 571, column: 3)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !8232, line: 571, column: 3)
!8719 = distinct !DILexicalBlock(scope: !8720, file: !8232, line: 571, column: 3)
!8720 = distinct !DILexicalBlock(scope: !8711, file: !8232, line: 570, column: 45)
!8721 = !DILocation(line: 572, column: 2, scope: !8720)
!8722 = !DILocation(line: 573, column: 12, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8660, file: !8232, line: 573, column: 6)
!8724 = !DILocation(line: 573, column: 17, scope: !8723)
!8725 = !DILocation(line: 573, column: 42, scope: !8723)
!8726 = !DILocation(line: 573, column: 6, scope: !8660)
!8727 = !DILocation(line: 574, column: 3, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !8232, line: 574, column: 3)
!8729 = distinct !DILexicalBlock(scope: !8730, file: !8232, line: 574, column: 3)
!8730 = distinct !DILexicalBlock(scope: !8731, file: !8232, line: 574, column: 3)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !8232, line: 574, column: 3)
!8732 = distinct !DILexicalBlock(scope: !8723, file: !8232, line: 573, column: 48)
!8733 = !DILocation(line: 575, column: 2, scope: !8732)
!8734 = !DILocation(line: 576, column: 12, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8660, file: !8232, line: 576, column: 6)
!8736 = !DILocation(line: 576, column: 17, scope: !8735)
!8737 = !DILocation(line: 576, column: 44, scope: !8735)
!8738 = !DILocation(line: 576, column: 6, scope: !8660)
!8739 = !DILocation(line: 577, column: 3, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !8232, line: 577, column: 3)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !8232, line: 577, column: 3)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !8232, line: 577, column: 3)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !8232, line: 577, column: 3)
!8744 = distinct !DILexicalBlock(scope: !8735, file: !8232, line: 576, column: 50)
!8745 = !DILocation(line: 578, column: 2, scope: !8744)
!8746 = !DILocation(line: 581, column: 12, scope: !8660)
!8747 = !DILocation(line: 583, column: 2, scope: !8660)
!8748 = distinct !DISubprogram(name: "debug_monitor", scope: !8232, file: !8232, line: 632, type: !8749, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8751)
!8749 = !DISubroutineType(types: !8750)
!8750 = !{null, !3402, !8305}
!8751 = !{!8752, !8753}
!8752 = !DILocalVariable(name: "esf", arg: 1, scope: !8748, file: !8232, line: 632, type: !3402)
!8753 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8748, file: !8232, line: 632, type: !8305)
!8754 = !DILocation(line: 0, scope: !8748)
!8755 = !DILocation(line: 634, column: 15, scope: !8748)
!8756 = !DILocation(line: 636, column: 2, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8232, line: 636, column: 2)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !8232, line: 636, column: 2)
!8759 = distinct !DILexicalBlock(scope: !8760, file: !8232, line: 636, column: 2)
!8760 = distinct !DILexicalBlock(scope: !8748, file: !8232, line: 636, column: 2)
!8761 = !DILocation(line: 652, column: 1, scope: !8748)
!8762 = distinct !DISubprogram(name: "reserved_exception", scope: !8232, file: !8232, line: 776, type: !8763, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{null, !8663, !103}
!8765 = !{!8766, !8767}
!8766 = !DILocalVariable(name: "esf", arg: 1, scope: !8762, file: !8232, line: 776, type: !8663)
!8767 = !DILocalVariable(name: "fault", arg: 2, scope: !8762, file: !8232, line: 776, type: !103)
!8768 = !DILocation(line: 0, scope: !8762)
!8769 = !DILocation(line: 780, column: 2, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8771, file: !8232, line: 780, column: 2)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !8232, line: 780, column: 2)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !8232, line: 780, column: 2)
!8773 = distinct !DILexicalBlock(scope: !8762, file: !8232, line: 780, column: 2)
!8774 = !DILocation(line: 783, column: 1, scope: !8762)
!8775 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8232, file: !8232, line: 658, type: !8776, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !8778)
!8776 = !DISubroutineType(types: !8777)
!8777 = !{!119, !3402}
!8778 = !{!8779, !8780, !8781}
!8779 = !DILocalVariable(name: "esf", arg: 1, scope: !8775, file: !8232, line: 658, type: !3402)
!8780 = !DILocalVariable(name: "ret_addr", scope: !8775, file: !8232, line: 660, type: !3173)
!8781 = !DILocalVariable(name: "fault_insn", scope: !8775, file: !8232, line: 686, type: !177)
!8782 = !DILocation(line: 0, scope: !8775)
!8783 = !DILocation(line: 660, column: 46, scope: !8775)
!8784 = !DILocation(line: 660, column: 23, scope: !8775)
!8785 = !DILocation(line: 682, column: 11, scope: !8775)
!8786 = !DILocation(line: 271, column: 3, scope: !8787, inlinedAt: !8788)
!8787 = distinct !DISubprogram(name: "__DSB", scope: !7951, file: !7951, line: 269, type: !327, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !2645)
!8788 = distinct !DILocation(line: 683, column: 2, scope: !8775)
!8789 = !{i64 6969373}
!8790 = !DILocation(line: 260, column: 3, scope: !8791, inlinedAt: !8792)
!8791 = distinct !DISubprogram(name: "__ISB", scope: !7951, file: !7951, line: 258, type: !327, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !2645)
!8792 = distinct !DILocation(line: 684, column: 2, scope: !8775)
!8793 = !{i64 6969090}
!8794 = !DILocation(line: 686, column: 35, scope: !8775)
!8795 = !DILocation(line: 686, column: 24, scope: !8775)
!8796 = !DILocation(line: 688, column: 11, scope: !8775)
!8797 = !DILocation(line: 271, column: 3, scope: !8787, inlinedAt: !8798)
!8798 = distinct !DILocation(line: 689, column: 2, scope: !8775)
!8799 = !DILocation(line: 260, column: 3, scope: !8791, inlinedAt: !8800)
!8800 = distinct !DILocation(line: 690, column: 2, scope: !8775)
!8801 = !DILocation(line: 693, column: 45, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8775, file: !8232, line: 693, column: 6)
!8803 = !DILocation(line: 699, column: 1, scope: !8775)
!8804 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8232, file: !8232, line: 1107, type: !327, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3374, retainedNodes: !2645)
!8805 = !DILocation(line: 1111, column: 11, scope: !8804)
!8806 = !DILocation(line: 1136, column: 1, scope: !8804)
!8807 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8808, file: !8808, line: 26, type: !327, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !8809)
!8808 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8809 = !{!8810}
!8810 = !DILocalVariable(name: "irq", scope: !8807, file: !8808, line: 28, type: !103)
!8811 = !DILocation(line: 0, scope: !8807)
!8812 = !DILocation(line: 30, column: 2, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8807, file: !8808, line: 30, column: 2)
!8814 = !DILocation(line: 31, column: 3, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !8808, line: 30, column: 39)
!8816 = distinct !DILexicalBlock(scope: !8813, file: !8808, line: 30, column: 2)
!8817 = !DILocation(line: 30, column: 35, scope: !8816)
!8818 = !DILocation(line: 30, column: 13, scope: !8816)
!8819 = distinct !{!8819, !8812, !8820}
!8820 = !DILocation(line: 32, column: 2, scope: !8813)
!8821 = !DILocation(line: 33, column: 1, scope: !8807)
!8822 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2295, file: !2295, line: 1814, type: !7991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3445, retainedNodes: !8823)
!8823 = !{!8824, !8825}
!8824 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8822, file: !2295, line: 1814, type: !3230)
!8825 = !DILocalVariable(name: "priority", arg: 2, scope: !8822, file: !2295, line: 1814, type: !108)
!8826 = !DILocation(line: 0, scope: !8822)
!8827 = !DILocation(line: 1816, column: 7, scope: !8822)
!8828 = !DILocation(line: 0, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8822, file: !2295, line: 1816, column: 7)
!8830 = !DILocation(line: 1824, column: 1, scope: !8822)
!8831 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8832, file: !8832, line: 27, type: !8833, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !8932)
!8832 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8833 = !DISubroutineType(types: !8834)
!8834 = !{null, !8835}
!8835 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !8836)
!8836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8837, size: 32)
!8837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !8838)
!8838 = !{!8839, !8897, !8909, !8910, !8911, !8912, !8927}
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8837, file: !195, line: 247, baseType: !8840, size: 384)
!8840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !8841)
!8841 = !{!8842, !8866, !8873, !8874, !8875, !8884, !8885, !8886}
!8842 = !DIDerivedType(tag: DW_TAG_member, scope: !8840, file: !195, line: 60, baseType: !8843, size: 64)
!8843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8840, file: !195, line: 60, size: 64, elements: !8844)
!8844 = !{!8845, !8860}
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8843, file: !195, line: 61, baseType: !8846, size: 64)
!8846 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !8847)
!8847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !8848)
!8848 = !{!8849, !8855}
!8849 = !DIDerivedType(tag: DW_TAG_member, scope: !8847, file: !133, line: 38, baseType: !8850, size: 32)
!8850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8847, file: !133, line: 38, size: 32, elements: !8851)
!8851 = !{!8852, !8854}
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8850, file: !133, line: 39, baseType: !8853, size: 32)
!8853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8847, size: 32)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8850, file: !133, line: 40, baseType: !8853, size: 32)
!8855 = !DIDerivedType(tag: DW_TAG_member, scope: !8847, file: !133, line: 42, baseType: !8856, size: 32, offset: 32)
!8856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8847, file: !133, line: 42, size: 32, elements: !8857)
!8857 = !{!8858, !8859}
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8856, file: !133, line: 43, baseType: !8853, size: 32)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8856, file: !133, line: 44, baseType: !8853, size: 32)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8843, file: !195, line: 62, baseType: !8861, size: 64)
!8861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !8862)
!8862 = !{!8863}
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8861, file: !207, line: 50, baseType: !8864, size: 64)
!8864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8865, size: 64, elements: !212)
!8865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8861, size: 32)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8840, file: !195, line: 68, baseType: !8867, size: 32, offset: 64)
!8867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8868, size: 32)
!8868 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !8869)
!8869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !8870)
!8870 = !{!8871}
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8869, file: !128, line: 232, baseType: !8872, size: 64)
!8872 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !8847)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8840, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8840, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!8875 = !DIDerivedType(tag: DW_TAG_member, scope: !8840, file: !195, line: 90, baseType: !8876, size: 16, offset: 112)
!8876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8840, file: !195, line: 90, size: 16, elements: !8877)
!8877 = !{!8878, !8883}
!8878 = !DIDerivedType(tag: DW_TAG_member, scope: !8876, file: !195, line: 91, baseType: !8879, size: 16)
!8879 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8876, file: !195, line: 91, size: 16, elements: !8880)
!8880 = !{!8881, !8882}
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8879, file: !195, line: 96, baseType: !225, size: 8)
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8879, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8876, file: !195, line: 100, baseType: !177, size: 16)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8840, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8840, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8840, file: !195, line: 131, baseType: !8887, size: 192, offset: 192)
!8887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !8888)
!8888 = !{!8889, !8890, !8896}
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8887, file: !128, line: 245, baseType: !8846, size: 64)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8887, file: !128, line: 246, baseType: !8891, size: 32, offset: 64)
!8891 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !8892)
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8893, size: 32)
!8893 = !DISubroutineType(types: !8894)
!8894 = !{null, !8895}
!8895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8887, size: 32)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8887, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8837, file: !195, line: 250, baseType: !8898, size: 288, offset: 384)
!8898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !8899)
!8899 = !{!8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907, !8908}
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8898, file: !244, line: 26, baseType: !108, size: 32)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8898, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8898, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8898, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8898, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8898, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8898, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8898, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8898, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8837, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8837, file: !195, line: 256, baseType: !8868, size: 64, offset: 704)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8837, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8837, file: !195, line: 325, baseType: !8913, size: 32, offset: 800)
!8913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8914, size: 32)
!8914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !8915)
!8915 = !{!8916, !8922, !8923}
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8914, file: !124, line: 5074, baseType: !8917, size: 96)
!8917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !8918)
!8918 = !{!8919, !8920, !8921}
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8917, file: !264, line: 57, baseType: !267, size: 32)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8917, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8917, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8914, file: !124, line: 5075, baseType: !8868, size: 64, offset: 96)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8914, file: !124, line: 5076, baseType: !8924, size: 32, offset: 160)
!8924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !8925)
!8925 = !{!8926}
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8924, file: !149, line: 52, baseType: !22, size: 32)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8837, file: !195, line: 343, baseType: !8928, size: 64, offset: 832)
!8928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !8929)
!8929 = !{!8930, !8931}
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8928, file: !244, line: 63, baseType: !108, size: 32)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8928, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!8932 = !{!8933}
!8933 = !DILocalVariable(name: "thread", arg: 1, scope: !8831, file: !8832, line: 27, type: !8835)
!8934 = !DILocation(line: 0, scope: !8831)
!8935 = !DILocation(line: 29, column: 6, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8831, file: !8832, line: 29, column: 6)
!8937 = !DILocation(line: 29, column: 15, scope: !8936)
!8938 = !DILocation(line: 29, column: 6, scope: !8831)
!8939 = !DILocation(line: 1031, column: 3, scope: !8940, inlinedAt: !8943)
!8940 = distinct !DISubprogram(name: "__get_IPSR", scope: !7951, file: !7951, line: 1027, type: !8038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !8941)
!8941 = !{!8942}
!8942 = !DILocalVariable(name: "result", scope: !8940, file: !7951, line: 1029, type: !108)
!8943 = distinct !DILocation(line: 48, column: 10, scope: !8944, inlinedAt: !8948)
!8944 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8945, file: !8945, line: 46, type: !8946, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3490, retainedNodes: !2645)
!8945 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8946 = !DISubroutineType(types: !8947)
!8947 = !{!119}
!8948 = distinct !DILocation(line: 30, column: 7, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8950, file: !8832, line: 30, column: 7)
!8950 = distinct !DILexicalBlock(scope: !8936, file: !8832, line: 29, column: 26)
!8951 = !{i64 6970597}
!8952 = !DILocation(line: 0, scope: !8940, inlinedAt: !8943)
!8953 = !DILocation(line: 48, column: 9, scope: !8944, inlinedAt: !8948)
!8954 = !DILocation(line: 30, column: 7, scope: !8950)
!8955 = !DILocation(line: 42, column: 14, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8949, file: !8832, line: 30, column: 25)
!8957 = !DILocation(line: 48, column: 15, scope: !8956)
!8958 = !DILocation(line: 49, column: 3, scope: !8956)
!8959 = !DILocation(line: 52, column: 2, scope: !8831)
!8960 = !DILocation(line: 53, column: 1, scope: !8831)
!8961 = distinct !DISubprogram(name: "strcpy", scope: !8962, file: !8962, line: 20, type: !8963, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !8967)
!8962 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8963 = !DISubroutineType(types: !8964)
!8964 = !{!157, !8965, !8966}
!8965 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !157)
!8966 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !330)
!8967 = !{!8968, !8969, !8970}
!8968 = !DILocalVariable(name: "d", arg: 1, scope: !8961, file: !8962, line: 20, type: !8965)
!8969 = !DILocalVariable(name: "s", arg: 2, scope: !8961, file: !8962, line: 20, type: !8966)
!8970 = !DILocalVariable(name: "dest", scope: !8961, file: !8962, line: 22, type: !157)
!8971 = !DILocation(line: 0, scope: !8961)
!8972 = !DILocation(line: 24, column: 9, scope: !8961)
!8973 = !DILocation(line: 24, column: 12, scope: !8961)
!8974 = !DILocation(line: 24, column: 2, scope: !8961)
!8975 = !DILocation(line: 25, column: 6, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8961, file: !8962, line: 24, column: 21)
!8977 = !DILocation(line: 26, column: 4, scope: !8976)
!8978 = !DILocation(line: 27, column: 4, scope: !8976)
!8979 = distinct !{!8979, !8974, !8980}
!8980 = !DILocation(line: 28, column: 2, scope: !8961)
!8981 = !DILocation(line: 30, column: 5, scope: !8961)
!8982 = !DILocation(line: 32, column: 2, scope: !8961)
!8983 = distinct !DISubprogram(name: "strncpy", scope: !8962, file: !8962, line: 42, type: !8984, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !8986)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!157, !8965, !8966, !153}
!8986 = !{!8987, !8988, !8989, !8990}
!8987 = !DILocalVariable(name: "d", arg: 1, scope: !8983, file: !8962, line: 42, type: !8965)
!8988 = !DILocalVariable(name: "s", arg: 2, scope: !8983, file: !8962, line: 42, type: !8966)
!8989 = !DILocalVariable(name: "n", arg: 3, scope: !8983, file: !8962, line: 42, type: !153)
!8990 = !DILocalVariable(name: "dest", scope: !8983, file: !8962, line: 44, type: !157)
!8991 = !DILocation(line: 0, scope: !8983)
!8992 = !DILocation(line: 46, column: 12, scope: !8983)
!8993 = !DILocation(line: 46, column: 17, scope: !8983)
!8994 = !DILocation(line: 46, column: 20, scope: !8983)
!8995 = !DILocation(line: 46, column: 23, scope: !8983)
!8996 = !DILocation(line: 46, column: 2, scope: !8983)
!8997 = !DILocation(line: 47, column: 6, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8983, file: !8962, line: 46, column: 32)
!8999 = !DILocation(line: 48, column: 4, scope: !8998)
!9000 = !DILocation(line: 49, column: 4, scope: !8998)
!9001 = !DILocation(line: 50, column: 4, scope: !8998)
!9002 = distinct !{!9002, !8996, !9003}
!9003 = !DILocation(line: 51, column: 2, scope: !8983)
!9004 = !DILocation(line: 54, column: 6, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8983, file: !8962, line: 53, column: 16)
!9006 = !DILocation(line: 55, column: 4, scope: !9005)
!9007 = !DILocation(line: 56, column: 4, scope: !9005)
!9008 = !DILocation(line: 53, column: 11, scope: !8983)
!9009 = !DILocation(line: 53, column: 2, scope: !8983)
!9010 = distinct !{!9010, !9009, !9011}
!9011 = !DILocation(line: 57, column: 2, scope: !8983)
!9012 = !DILocation(line: 59, column: 2, scope: !8983)
!9013 = distinct !DISubprogram(name: "strchr", scope: !8962, file: !8962, line: 69, type: !9014, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9016)
!9014 = !DISubroutineType(types: !9015)
!9015 = !{!157, !330, !103}
!9016 = !{!9017, !9018, !9019}
!9017 = !DILocalVariable(name: "s", arg: 1, scope: !9013, file: !8962, line: 69, type: !330)
!9018 = !DILocalVariable(name: "c", arg: 2, scope: !9013, file: !8962, line: 69, type: !103)
!9019 = !DILocalVariable(name: "tmp", scope: !9013, file: !8962, line: 71, type: !158)
!9020 = !DILocation(line: 0, scope: !9013)
!9021 = !DILocation(line: 73, column: 2, scope: !9013)
!9022 = !DILocation(line: 73, column: 10, scope: !9013)
!9023 = !DILocation(line: 73, column: 13, scope: !9013)
!9024 = !DILocation(line: 73, column: 21, scope: !9013)
!9025 = !DILocation(line: 74, column: 4, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9013, file: !8962, line: 73, column: 38)
!9027 = distinct !{!9027, !9021, !9028}
!9028 = !DILocation(line: 75, column: 2, scope: !9013)
!9029 = !DILocation(line: 77, column: 9, scope: !9013)
!9030 = !DILocation(line: 77, column: 2, scope: !9013)
!9031 = distinct !DISubprogram(name: "strrchr", scope: !8962, file: !8962, line: 87, type: !9014, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9032)
!9032 = !{!9033, !9034, !9035}
!9033 = !DILocalVariable(name: "s", arg: 1, scope: !9031, file: !8962, line: 87, type: !330)
!9034 = !DILocalVariable(name: "c", arg: 2, scope: !9031, file: !8962, line: 87, type: !103)
!9035 = !DILocalVariable(name: "match", scope: !9031, file: !8962, line: 89, type: !157)
!9036 = !DILocation(line: 0, scope: !9031)
!9037 = !DILocation(line: 91, column: 2, scope: !9031)
!9038 = !DILocation(line: 92, column: 7, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !8962, line: 92, column: 7)
!9040 = distinct !DILexicalBlock(scope: !9031, file: !8962, line: 91, column: 5)
!9041 = !DILocation(line: 92, column: 10, scope: !9039)
!9042 = !DILocation(line: 92, column: 7, scope: !9040)
!9043 = !DILocation(line: 95, column: 13, scope: !9031)
!9044 = !DILocation(line: 95, column: 2, scope: !9040)
!9045 = distinct !{!9045, !9037, !9046}
!9046 = !DILocation(line: 95, column: 15, scope: !9031)
!9047 = !DILocation(line: 97, column: 2, scope: !9031)
!9048 = distinct !DISubprogram(name: "strlen", scope: !8962, file: !8962, line: 107, type: !9049, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9051)
!9049 = !DISubroutineType(types: !9050)
!9050 = !{!153, !330}
!9051 = !{!9052, !9053}
!9052 = !DILocalVariable(name: "s", arg: 1, scope: !9048, file: !8962, line: 107, type: !330)
!9053 = !DILocalVariable(name: "n", scope: !9048, file: !8962, line: 109, type: !153)
!9054 = !DILocation(line: 0, scope: !9048)
!9055 = !DILocation(line: 111, column: 9, scope: !9048)
!9056 = !DILocation(line: 111, column: 12, scope: !9048)
!9057 = !DILocation(line: 111, column: 2, scope: !9048)
!9058 = !DILocation(line: 112, column: 4, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9048, file: !8962, line: 111, column: 21)
!9060 = !DILocation(line: 113, column: 4, scope: !9059)
!9061 = distinct !{!9061, !9057, !9062}
!9062 = !DILocation(line: 114, column: 2, scope: !9048)
!9063 = !DILocation(line: 116, column: 2, scope: !9048)
!9064 = distinct !DISubprogram(name: "strnlen", scope: !8962, file: !8962, line: 126, type: !9065, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9067)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!153, !330, !153}
!9067 = !{!9068, !9069, !9070}
!9068 = !DILocalVariable(name: "s", arg: 1, scope: !9064, file: !8962, line: 126, type: !330)
!9069 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9064, file: !8962, line: 126, type: !153)
!9070 = !DILocalVariable(name: "n", scope: !9064, file: !8962, line: 128, type: !153)
!9071 = !DILocation(line: 0, scope: !9064)
!9072 = !DILocation(line: 130, column: 9, scope: !9064)
!9073 = !DILocation(line: 130, column: 12, scope: !9064)
!9074 = !DILocation(line: 130, column: 20, scope: !9064)
!9075 = !DILocation(line: 130, column: 2, scope: !9064)
!9076 = !DILocation(line: 131, column: 4, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9064, file: !8962, line: 130, column: 35)
!9078 = !DILocation(line: 132, column: 4, scope: !9077)
!9079 = distinct !{!9079, !9075, !9080}
!9080 = !DILocation(line: 133, column: 2, scope: !9064)
!9081 = !DILocation(line: 135, column: 2, scope: !9064)
!9082 = distinct !DISubprogram(name: "strcmp", scope: !8962, file: !8962, line: 145, type: !9083, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9085)
!9083 = !DISubroutineType(types: !9084)
!9084 = !{!103, !330, !330}
!9085 = !{!9086, !9087}
!9086 = !DILocalVariable(name: "s1", arg: 1, scope: !9082, file: !8962, line: 145, type: !330)
!9087 = !DILocalVariable(name: "s2", arg: 2, scope: !9082, file: !8962, line: 145, type: !330)
!9088 = !DILocation(line: 0, scope: !9082)
!9089 = !DILocation(line: 147, column: 10, scope: !9082)
!9090 = !DILocation(line: 147, column: 17, scope: !9082)
!9091 = !DILocation(line: 147, column: 14, scope: !9082)
!9092 = !DILocation(line: 147, column: 22, scope: !9082)
!9093 = !DILocation(line: 148, column: 5, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9082, file: !8962, line: 147, column: 40)
!9095 = !DILocation(line: 149, column: 5, scope: !9094)
!9096 = distinct !{!9096, !9097, !9098}
!9097 = !DILocation(line: 147, column: 2, scope: !9082)
!9098 = !DILocation(line: 150, column: 2, scope: !9082)
!9099 = !DILocation(line: 152, column: 9, scope: !9082)
!9100 = !DILocation(line: 152, column: 15, scope: !9082)
!9101 = !DILocation(line: 152, column: 13, scope: !9082)
!9102 = !DILocation(line: 152, column: 2, scope: !9082)
!9103 = distinct !DISubprogram(name: "strncmp", scope: !8962, file: !8962, line: 162, type: !9104, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9106)
!9104 = !DISubroutineType(types: !9105)
!9105 = !{!103, !330, !330, !153}
!9106 = !{!9107, !9108, !9109}
!9107 = !DILocalVariable(name: "s1", arg: 1, scope: !9103, file: !8962, line: 162, type: !330)
!9108 = !DILocalVariable(name: "s2", arg: 2, scope: !9103, file: !8962, line: 162, type: !330)
!9109 = !DILocalVariable(name: "n", arg: 3, scope: !9103, file: !8962, line: 162, type: !153)
!9110 = !DILocation(line: 0, scope: !9103)
!9111 = !DILocation(line: 164, column: 17, scope: !9103)
!9112 = !DILocation(line: 164, column: 21, scope: !9103)
!9113 = !DILocation(line: 164, column: 28, scope: !9103)
!9114 = !DILocation(line: 164, column: 25, scope: !9103)
!9115 = !DILocation(line: 164, column: 33, scope: !9103)
!9116 = !DILocation(line: 165, column: 5, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9103, file: !8962, line: 164, column: 51)
!9118 = !DILocation(line: 166, column: 5, scope: !9117)
!9119 = !DILocation(line: 167, column: 4, scope: !9117)
!9120 = distinct !{!9120, !9121, !9122}
!9121 = !DILocation(line: 164, column: 2, scope: !9103)
!9122 = !DILocation(line: 168, column: 2, scope: !9103)
!9123 = !DILocation(line: 170, column: 25, scope: !9103)
!9124 = !DILocation(line: 170, column: 31, scope: !9103)
!9125 = !DILocation(line: 170, column: 29, scope: !9103)
!9126 = !DILocation(line: 170, column: 9, scope: !9103)
!9127 = !DILocation(line: 170, column: 2, scope: !9103)
!9128 = distinct !DISubprogram(name: "strtok_r", scope: !8962, file: !8962, line: 180, type: !9129, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9131)
!9129 = !DISubroutineType(types: !9130)
!9130 = !{!157, !157, !330, !764}
!9131 = !{!9132, !9133, !9134, !9135, !9136}
!9132 = !DILocalVariable(name: "str", arg: 1, scope: !9128, file: !8962, line: 180, type: !157)
!9133 = !DILocalVariable(name: "sep", arg: 2, scope: !9128, file: !8962, line: 180, type: !330)
!9134 = !DILocalVariable(name: "state", arg: 3, scope: !9128, file: !8962, line: 180, type: !764)
!9135 = !DILocalVariable(name: "start", scope: !9128, file: !8962, line: 182, type: !157)
!9136 = !DILocalVariable(name: "end", scope: !9128, file: !8962, line: 182, type: !157)
!9137 = !DILocation(line: 0, scope: !9128)
!9138 = !DILocation(line: 184, column: 10, scope: !9128)
!9139 = !DILocation(line: 184, column: 22, scope: !9128)
!9140 = !DILocation(line: 187, column: 9, scope: !9128)
!9141 = !DILocation(line: 187, column: 16, scope: !9128)
!9142 = !DILocation(line: 187, column: 19, scope: !9128)
!9143 = !DILocation(line: 187, column: 2, scope: !9128)
!9144 = !DILocation(line: 188, column: 8, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9128, file: !8962, line: 187, column: 40)
!9146 = distinct !{!9146, !9143, !9147}
!9147 = !DILocation(line: 189, column: 2, scope: !9128)
!9148 = !DILocation(line: 198, column: 9, scope: !9128)
!9149 = !DILocation(line: 198, column: 18, scope: !9128)
!9150 = !DILocation(line: 198, column: 17, scope: !9128)
!9151 = !DILocation(line: 198, column: 2, scope: !9128)
!9152 = !DILocation(line: 199, column: 6, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9128, file: !8962, line: 198, column: 37)
!9154 = !DILocation(line: 198, column: 14, scope: !9128)
!9155 = distinct !{!9155, !9151, !9156}
!9156 = !DILocation(line: 200, column: 2, scope: !9128)
!9157 = !DILocation(line: 203, column: 8, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9159, file: !8962, line: 202, column: 20)
!9159 = distinct !DILexicalBlock(scope: !9128, file: !8962, line: 202, column: 6)
!9160 = !DILocation(line: 204, column: 16, scope: !9158)
!9161 = !DILocation(line: 205, column: 2, scope: !9158)
!9162 = !DILocation(line: 210, column: 1, scope: !9128)
!9163 = distinct !DISubprogram(name: "strcat", scope: !8962, file: !8962, line: 212, type: !8963, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9164)
!9164 = !{!9165, !9166}
!9165 = !DILocalVariable(name: "dest", arg: 1, scope: !9163, file: !8962, line: 212, type: !8965)
!9166 = !DILocalVariable(name: "src", arg: 2, scope: !9163, file: !8962, line: 212, type: !8966)
!9167 = !DILocation(line: 0, scope: !9163)
!9168 = !DILocation(line: 214, column: 16, scope: !9163)
!9169 = !DILocation(line: 214, column: 14, scope: !9163)
!9170 = !DILocation(line: 214, column: 2, scope: !9163)
!9171 = !DILocation(line: 215, column: 2, scope: !9163)
!9172 = distinct !DISubprogram(name: "strncat", scope: !8962, file: !8962, line: 218, type: !8984, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9173)
!9173 = !{!9174, !9175, !9176, !9177, !9178}
!9174 = !DILocalVariable(name: "dest", arg: 1, scope: !9172, file: !8962, line: 218, type: !8965)
!9175 = !DILocalVariable(name: "src", arg: 2, scope: !9172, file: !8962, line: 218, type: !8966)
!9176 = !DILocalVariable(name: "n", arg: 3, scope: !9172, file: !8962, line: 219, type: !153)
!9177 = !DILocalVariable(name: "orig_dest", scope: !9172, file: !8962, line: 221, type: !157)
!9178 = !DILocalVariable(name: "len", scope: !9172, file: !8962, line: 222, type: !153)
!9179 = !DILocation(line: 0, scope: !9172)
!9180 = !DILocation(line: 222, column: 15, scope: !9172)
!9181 = !DILocation(line: 224, column: 7, scope: !9172)
!9182 = !DILocation(line: 225, column: 14, scope: !9172)
!9183 = !DILocation(line: 225, column: 19, scope: !9172)
!9184 = !DILocation(line: 225, column: 11, scope: !9172)
!9185 = !DILocation(line: 225, column: 23, scope: !9172)
!9186 = !DILocation(line: 225, column: 28, scope: !9172)
!9187 = !DILocation(line: 225, column: 2, scope: !9172)
!9188 = !DILocation(line: 226, column: 17, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9172, file: !8962, line: 225, column: 38)
!9190 = !DILocation(line: 226, column: 8, scope: !9189)
!9191 = !DILocation(line: 226, column: 11, scope: !9189)
!9192 = distinct !{!9192, !9187, !9193}
!9193 = !DILocation(line: 227, column: 2, scope: !9172)
!9194 = !DILocation(line: 228, column: 8, scope: !9172)
!9195 = !DILocation(line: 230, column: 2, scope: !9172)
!9196 = distinct !DISubprogram(name: "memcmp", scope: !8962, file: !8962, line: 239, type: !9197, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9199)
!9197 = !DISubroutineType(types: !9198)
!9198 = !{!103, !13, !13, !153}
!9199 = !{!9200, !9201, !9202, !9203, !9204}
!9200 = !DILocalVariable(name: "m1", arg: 1, scope: !9196, file: !8962, line: 239, type: !13)
!9201 = !DILocalVariable(name: "m2", arg: 2, scope: !9196, file: !8962, line: 239, type: !13)
!9202 = !DILocalVariable(name: "n", arg: 3, scope: !9196, file: !8962, line: 239, type: !153)
!9203 = !DILocalVariable(name: "c1", scope: !9196, file: !8962, line: 241, type: !330)
!9204 = !DILocalVariable(name: "c2", scope: !9196, file: !8962, line: 242, type: !330)
!9205 = !DILocation(line: 0, scope: !9196)
!9206 = !DILocation(line: 244, column: 7, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9196, file: !8962, line: 244, column: 6)
!9208 = !DILocation(line: 244, column: 6, scope: !9196)
!9209 = !DILocation(line: 248, column: 10, scope: !9196)
!9210 = !DILocation(line: 248, column: 14, scope: !9196)
!9211 = !DILocation(line: 248, column: 19, scope: !9196)
!9212 = !DILocation(line: 248, column: 2, scope: !9196)
!9213 = !DILocation(line: 248, column: 23, scope: !9196)
!9214 = !DILocation(line: 248, column: 30, scope: !9196)
!9215 = !DILocation(line: 248, column: 27, scope: !9196)
!9216 = !DILocation(line: 249, column: 5, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9196, file: !8962, line: 248, column: 36)
!9218 = !DILocation(line: 250, column: 5, scope: !9217)
!9219 = distinct !{!9219, !9212, !9220}
!9220 = !DILocation(line: 251, column: 2, scope: !9196)
!9221 = !DILocation(line: 253, column: 9, scope: !9196)
!9222 = !DILocation(line: 253, column: 15, scope: !9196)
!9223 = !DILocation(line: 253, column: 13, scope: !9196)
!9224 = !DILocation(line: 253, column: 2, scope: !9196)
!9225 = !DILocation(line: 254, column: 1, scope: !9196)
!9226 = distinct !DISubprogram(name: "memmove", scope: !8962, file: !8962, line: 263, type: !9227, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9229)
!9227 = !DISubroutineType(types: !9228)
!9228 = !{!102, !102, !13, !153}
!9229 = !{!9230, !9231, !9232, !9233, !9234}
!9230 = !DILocalVariable(name: "d", arg: 1, scope: !9226, file: !8962, line: 263, type: !102)
!9231 = !DILocalVariable(name: "s", arg: 2, scope: !9226, file: !8962, line: 263, type: !13)
!9232 = !DILocalVariable(name: "n", arg: 3, scope: !9226, file: !8962, line: 263, type: !153)
!9233 = !DILocalVariable(name: "dest", scope: !9226, file: !8962, line: 265, type: !157)
!9234 = !DILocalVariable(name: "src", scope: !9226, file: !8962, line: 266, type: !330)
!9235 = !DILocation(line: 0, scope: !9226)
!9236 = !DILocation(line: 268, column: 21, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9226, file: !8962, line: 268, column: 6)
!9238 = !DILocation(line: 268, column: 28, scope: !9237)
!9239 = !DILocation(line: 268, column: 6, scope: !9226)
!9240 = !DILocation(line: 280, column: 12, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9237, file: !8962, line: 278, column: 9)
!9242 = !DILocation(line: 280, column: 3, scope: !9241)
!9243 = !DILocation(line: 275, column: 5, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9245, file: !8962, line: 274, column: 17)
!9245 = distinct !DILexicalBlock(scope: !9237, file: !8962, line: 268, column: 33)
!9246 = !DILocation(line: 276, column: 14, scope: !9244)
!9247 = !DILocation(line: 276, column: 4, scope: !9244)
!9248 = !DILocation(line: 276, column: 12, scope: !9244)
!9249 = !DILocation(line: 274, column: 12, scope: !9245)
!9250 = !DILocation(line: 274, column: 3, scope: !9245)
!9251 = distinct !{!9251, !9250, !9252}
!9252 = !DILocation(line: 277, column: 3, scope: !9245)
!9253 = !DILocation(line: 281, column: 12, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9241, file: !8962, line: 280, column: 17)
!9255 = !DILocation(line: 281, column: 10, scope: !9254)
!9256 = !DILocation(line: 282, column: 8, scope: !9254)
!9257 = !DILocation(line: 283, column: 7, scope: !9254)
!9258 = !DILocation(line: 284, column: 5, scope: !9254)
!9259 = distinct !{!9259, !9242, !9260}
!9260 = !DILocation(line: 285, column: 3, scope: !9241)
!9261 = !DILocation(line: 288, column: 2, scope: !9226)
!9262 = distinct !DISubprogram(name: "memcpy", scope: !8962, file: !8962, line: 298, type: !9263, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9267)
!9263 = !DISubroutineType(types: !9264)
!9264 = !{!102, !9265, !9266, !153}
!9265 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9266 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9267 = !{!9268, !9269, !9270, !9271, !9272}
!9268 = !DILocalVariable(name: "d", arg: 1, scope: !9262, file: !8962, line: 298, type: !9265)
!9269 = !DILocalVariable(name: "s", arg: 2, scope: !9262, file: !8962, line: 298, type: !9266)
!9270 = !DILocalVariable(name: "n", arg: 3, scope: !9262, file: !8962, line: 298, type: !153)
!9271 = !DILocalVariable(name: "d_byte", scope: !9262, file: !8962, line: 302, type: !1605)
!9272 = !DILocalVariable(name: "s_byte", scope: !9262, file: !8962, line: 303, type: !3521)
!9273 = !DILocation(line: 0, scope: !9262)
!9274 = !DILocation(line: 337, column: 11, scope: !9262)
!9275 = !DILocation(line: 337, column: 2, scope: !9262)
!9276 = !DILocation(line: 338, column: 25, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9262, file: !8962, line: 337, column: 16)
!9278 = !DILocation(line: 338, column: 17, scope: !9277)
!9279 = !DILocation(line: 338, column: 11, scope: !9277)
!9280 = !DILocation(line: 338, column: 15, scope: !9277)
!9281 = !DILocation(line: 339, column: 4, scope: !9277)
!9282 = distinct !{!9282, !9275, !9283}
!9283 = !DILocation(line: 340, column: 2, scope: !9262)
!9284 = !DILocation(line: 342, column: 2, scope: !9262)
!9285 = distinct !DISubprogram(name: "memset", scope: !8962, file: !8962, line: 352, type: !9286, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9288)
!9286 = !DISubroutineType(types: !9287)
!9287 = !{!102, !102, !103, !153}
!9288 = !{!9289, !9290, !9291, !9292, !9293}
!9289 = !DILocalVariable(name: "buf", arg: 1, scope: !9285, file: !8962, line: 352, type: !102)
!9290 = !DILocalVariable(name: "c", arg: 2, scope: !9285, file: !8962, line: 352, type: !103)
!9291 = !DILocalVariable(name: "n", arg: 3, scope: !9285, file: !8962, line: 352, type: !153)
!9292 = !DILocalVariable(name: "d_byte", scope: !9285, file: !8962, line: 356, type: !1605)
!9293 = !DILocalVariable(name: "c_byte", scope: !9285, file: !8962, line: 357, type: !165)
!9294 = !DILocation(line: 0, scope: !9285)
!9295 = !DILocation(line: 357, column: 25, scope: !9285)
!9296 = !DILocation(line: 389, column: 11, scope: !9285)
!9297 = !DILocation(line: 389, column: 2, scope: !9285)
!9298 = !DILocation(line: 390, column: 11, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9285, file: !8962, line: 389, column: 16)
!9300 = !DILocation(line: 390, column: 15, scope: !9299)
!9301 = !DILocation(line: 391, column: 4, scope: !9299)
!9302 = distinct !{!9302, !9297, !9303}
!9303 = !DILocation(line: 392, column: 2, scope: !9285)
!9304 = !DILocation(line: 394, column: 2, scope: !9285)
!9305 = distinct !DISubprogram(name: "memchr", scope: !8962, file: !8962, line: 404, type: !9306, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3518, retainedNodes: !9308)
!9306 = !DISubroutineType(types: !9307)
!9307 = !{!102, !13, !103, !153}
!9308 = !{!9309, !9310, !9311, !9312}
!9309 = !DILocalVariable(name: "s", arg: 1, scope: !9305, file: !8962, line: 404, type: !13)
!9310 = !DILocalVariable(name: "c", arg: 2, scope: !9305, file: !8962, line: 404, type: !103)
!9311 = !DILocalVariable(name: "n", arg: 3, scope: !9305, file: !8962, line: 404, type: !153)
!9312 = !DILocalVariable(name: "p", scope: !9313, file: !8962, line: 407, type: !3521)
!9313 = distinct !DILexicalBlock(scope: !9314, file: !8962, line: 406, column: 14)
!9314 = distinct !DILexicalBlock(scope: !9305, file: !8962, line: 406, column: 6)
!9315 = !DILocation(line: 0, scope: !9305)
!9316 = !DILocation(line: 406, column: 8, scope: !9314)
!9317 = !DILocation(line: 406, column: 6, scope: !9305)
!9318 = !DILocation(line: 409, column: 3, scope: !9313)
!9319 = !DILocation(line: 0, scope: !9313)
!9320 = !DILocation(line: 410, column: 8, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !8962, line: 410, column: 8)
!9322 = distinct !DILexicalBlock(scope: !9313, file: !8962, line: 409, column: 6)
!9323 = !DILocation(line: 410, column: 13, scope: !9321)
!9324 = !DILocation(line: 410, column: 8, scope: !9322)
!9325 = distinct !{!9325, !9318, !9326}
!9326 = !DILocation(line: 414, column: 20, scope: !9313)
!9327 = !DILocation(line: 417, column: 2, scope: !9305)
!9328 = !DILocation(line: 418, column: 1, scope: !9305)
!9329 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1222, file: !1222, line: 23, type: !5132, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9330)
!9330 = !{!9331}
!9331 = !DILocalVariable(name: "hook", arg: 1, scope: !9329, file: !1222, line: 23, type: !781)
!9332 = !DILocation(line: 0, scope: !9329)
!9333 = !DILocation(line: 25, column: 15, scope: !9329)
!9334 = !DILocation(line: 26, column: 1, scope: !9329)
!9335 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1222, file: !1222, line: 14, type: !782, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9336)
!9336 = !{!9337}
!9337 = !DILocalVariable(name: "c", arg: 1, scope: !9335, file: !1222, line: 14, type: !103)
!9338 = !DILocation(line: 0, scope: !9335)
!9339 = !DILocation(line: 18, column: 2, scope: !9335)
!9340 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1222, file: !1222, line: 28, type: !9341, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!103, !103, !1218}
!9343 = !{!9344, !9345}
!9344 = !DILocalVariable(name: "c", arg: 1, scope: !9340, file: !1222, line: 28, type: !103)
!9345 = !DILocalVariable(name: "stream", arg: 2, scope: !9340, file: !1222, line: 28, type: !1218)
!9346 = !DILocation(line: 0, scope: !9340)
!9347 = !DILocation(line: 30, column: 27, scope: !9340)
!9348 = !DILocation(line: 30, column: 50, scope: !9340)
!9349 = !DILocation(line: 30, column: 9, scope: !9340)
!9350 = !DILocation(line: 30, column: 2, scope: !9340)
!9351 = distinct !DISubprogram(name: "fputc", scope: !1222, file: !1222, line: 41, type: !9341, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9352)
!9352 = !{!9353, !9354}
!9353 = !DILocalVariable(name: "c", arg: 1, scope: !9351, file: !1222, line: 41, type: !103)
!9354 = !DILocalVariable(name: "stream", arg: 2, scope: !9351, file: !1222, line: 41, type: !1218)
!9355 = !DILocation(line: 0, scope: !9351)
!9356 = !DILocation(line: 43, column: 9, scope: !9351)
!9357 = !DILocation(line: 43, column: 2, scope: !9351)
!9358 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9359, file: !9359, line: 72, type: !9341, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9360)
!9359 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!9360 = !{!9361, !9362}
!9361 = !DILocalVariable(name: "c", arg: 1, scope: !9358, file: !9359, line: 72, type: !103)
!9362 = !DILocalVariable(name: "stream", arg: 2, scope: !9358, file: !9359, line: 72, type: !1218)
!9363 = !DILocation(line: 0, scope: !9358)
!9364 = !DILocation(line: 81, column: 2, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9358, file: !9359, line: 81, column: 2)
!9366 = !{i64 2151107142}
!9367 = !DILocation(line: 82, column: 9, scope: !9358)
!9368 = !DILocation(line: 82, column: 2, scope: !9358)
!9369 = distinct !DISubprogram(name: "fputs", scope: !1222, file: !1222, line: 46, type: !9370, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9373)
!9370 = !DISubroutineType(types: !9371)
!9371 = !{!103, !8966, !9372}
!9372 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1218)
!9373 = !{!9374, !9375, !9376, !9377}
!9374 = !DILocalVariable(name: "s", arg: 1, scope: !9369, file: !1222, line: 46, type: !8966)
!9375 = !DILocalVariable(name: "stream", arg: 2, scope: !9369, file: !1222, line: 46, type: !9372)
!9376 = !DILocalVariable(name: "len", scope: !9369, file: !1222, line: 48, type: !103)
!9377 = !DILocalVariable(name: "ret", scope: !9369, file: !1222, line: 49, type: !103)
!9378 = !DILocation(line: 0, scope: !9369)
!9379 = !DILocation(line: 48, column: 12, scope: !9369)
!9380 = !DILocation(line: 51, column: 8, scope: !9369)
!9381 = !DILocation(line: 53, column: 13, scope: !9369)
!9382 = !DILocation(line: 53, column: 9, scope: !9369)
!9383 = !DILocation(line: 53, column: 2, scope: !9369)
!9384 = distinct !DISubprogram(name: "fwrite", scope: !1222, file: !1222, line: 99, type: !9385, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9387)
!9385 = !DISubroutineType(types: !9386)
!9386 = !{!153, !9266, !153, !153, !9372}
!9387 = !{!9388, !9389, !9390, !9391}
!9388 = !DILocalVariable(name: "ptr", arg: 1, scope: !9384, file: !1222, line: 99, type: !9266)
!9389 = !DILocalVariable(name: "size", arg: 2, scope: !9384, file: !1222, line: 99, type: !153)
!9390 = !DILocalVariable(name: "nitems", arg: 3, scope: !9384, file: !1222, line: 99, type: !153)
!9391 = !DILocalVariable(name: "stream", arg: 4, scope: !9384, file: !1222, line: 100, type: !9372)
!9392 = !DILocation(line: 0, scope: !9384)
!9393 = !DILocation(line: 102, column: 9, scope: !9384)
!9394 = !DILocation(line: 102, column: 2, scope: !9384)
!9395 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9359, file: !9359, line: 96, type: !9385, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9396)
!9396 = !{!9397, !9398, !9399, !9400}
!9397 = !DILocalVariable(name: "ptr", arg: 1, scope: !9395, file: !9359, line: 96, type: !9266)
!9398 = !DILocalVariable(name: "size", arg: 2, scope: !9395, file: !9359, line: 96, type: !153)
!9399 = !DILocalVariable(name: "nitems", arg: 3, scope: !9395, file: !9359, line: 96, type: !153)
!9400 = !DILocalVariable(name: "stream", arg: 4, scope: !9395, file: !9359, line: 96, type: !9372)
!9401 = !DILocation(line: 0, scope: !9395)
!9402 = !DILocation(line: 107, column: 2, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9395, file: !9359, line: 107, column: 2)
!9404 = !{i64 2151107246}
!9405 = !DILocation(line: 108, column: 9, scope: !9395)
!9406 = !DILocation(line: 108, column: 2, scope: !9395)
!9407 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1222, file: !1222, line: 56, type: !9385, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9408)
!9408 = !{!9409, !9410, !9411, !9412, !9413, !9414, !9415, !9416}
!9409 = !DILocalVariable(name: "ptr", arg: 1, scope: !9407, file: !1222, line: 56, type: !9266)
!9410 = !DILocalVariable(name: "size", arg: 2, scope: !9407, file: !1222, line: 56, type: !153)
!9411 = !DILocalVariable(name: "nitems", arg: 3, scope: !9407, file: !1222, line: 57, type: !153)
!9412 = !DILocalVariable(name: "stream", arg: 4, scope: !9407, file: !1222, line: 57, type: !9372)
!9413 = !DILocalVariable(name: "i", scope: !9407, file: !1222, line: 59, type: !153)
!9414 = !DILocalVariable(name: "j", scope: !9407, file: !1222, line: 60, type: !153)
!9415 = !DILocalVariable(name: "p", scope: !9407, file: !1222, line: 61, type: !3521)
!9416 = !DILabel(scope: !9407, name: "done", file: !1222, line: 82)
!9417 = !DILocation(line: 0, scope: !9407)
!9418 = !DILocation(line: 63, column: 14, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9407, file: !1222, line: 63, column: 6)
!9420 = !DILocation(line: 63, column: 24, scope: !9419)
!9421 = !DILocation(line: 72, column: 3, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9407, file: !1222, line: 70, column: 5)
!9423 = !DILocation(line: 0, scope: !9422)
!9424 = !DILocation(line: 73, column: 8, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9426, file: !1222, line: 73, column: 8)
!9426 = distinct !DILexicalBlock(scope: !9422, file: !1222, line: 72, column: 6)
!9427 = !DILocation(line: 73, column: 29, scope: !9425)
!9428 = !DILocation(line: 73, column: 27, scope: !9425)
!9429 = !DILocation(line: 73, column: 21, scope: !9425)
!9430 = !DILocation(line: 73, column: 33, scope: !9425)
!9431 = !DILocation(line: 73, column: 8, scope: !9426)
!9432 = !DILocation(line: 76, column: 5, scope: !9426)
!9433 = !DILocation(line: 77, column: 14, scope: !9422)
!9434 = !DILocation(line: 77, column: 3, scope: !9426)
!9435 = distinct !{!9435, !9421, !9436}
!9436 = !DILocation(line: 77, column: 17, scope: !9422)
!9437 = !DILocation(line: 79, column: 4, scope: !9422)
!9438 = !DILocation(line: 80, column: 13, scope: !9407)
!9439 = !DILocation(line: 80, column: 2, scope: !9422)
!9440 = distinct !{!9440, !9441, !9442}
!9441 = !DILocation(line: 70, column: 2, scope: !9407)
!9442 = !DILocation(line: 80, column: 16, scope: !9407)
!9443 = !DILocation(line: 82, column: 1, scope: !9407)
!9444 = !DILocation(line: 83, column: 17, scope: !9407)
!9445 = !DILocation(line: 83, column: 2, scope: !9407)
!9446 = !DILocation(line: 84, column: 1, scope: !9407)
!9447 = distinct !DISubprogram(name: "puts", scope: !1222, file: !1222, line: 106, type: !9448, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1215, retainedNodes: !9450)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!103, !330}
!9450 = !{!9451}
!9451 = !DILocalVariable(name: "s", arg: 1, scope: !9447, file: !1222, line: 106, type: !330)
!9452 = !DILocation(line: 0, scope: !9447)
!9453 = !DILocation(line: 108, column: 6, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9447, file: !1222, line: 108, column: 6)
!9455 = !DILocation(line: 108, column: 23, scope: !9454)
!9456 = !DILocation(line: 108, column: 6, scope: !9447)
!9457 = !DILocation(line: 112, column: 9, scope: !9447)
!9458 = !DILocation(line: 112, column: 29, scope: !9447)
!9459 = !DILocation(line: 112, column: 2, scope: !9447)
!9460 = !DILocation(line: 113, column: 1, scope: !9447)
!9461 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1387, file: !1387, line: 12, type: !9462, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9468)
!9462 = !DISubroutineType(types: !9463)
!9463 = !{!9464, !109}
!9464 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9465)
!9465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9466)
!9466 = !{!9467}
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9465, file: !105, line: 66, baseType: !104, size: 64)
!9468 = !{!9469, !9470}
!9469 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9461, file: !1387, line: 12, type: !109)
!9470 = !DILocalVariable(name: "now_ticks", scope: !9461, file: !1387, line: 14, type: !106)
!9471 = !DILocation(line: 0, scope: !9461)
!9472 = !DILocation(line: 14, column: 22, scope: !9461)
!9473 = !DILocation(line: 16, column: 9, scope: !9461)
!9474 = !DILocation(line: 17, column: 1, scope: !9461)
!9475 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1387, file: !1387, line: 103, type: !9476, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!103, !1284, !13, !9464}
!9478 = !{!9479, !9480, !9481, !9482, !9483}
!9479 = !DILocalVariable(name: "chan", arg: 1, scope: !9475, file: !1387, line: 103, type: !1284)
!9480 = !DILocalVariable(name: "msg", arg: 2, scope: !9475, file: !1387, line: 103, type: !13)
!9481 = !DILocalVariable(name: "timeout", arg: 3, scope: !9475, file: !1387, line: 103, type: !9464)
!9482 = !DILocalVariable(name: "err", scope: !9475, file: !1387, line: 105, type: !103)
!9483 = !DILocalVariable(name: "end_ticks", scope: !9475, file: !1387, line: 106, type: !109)
!9484 = !DILocation(line: 0, scope: !9475)
!9485 = !DILocation(line: 106, column: 23, scope: !9475)
!9486 = !DILocation(line: 108, column: 2, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !1387, line: 108, column: 2)
!9488 = distinct !DILexicalBlock(scope: !9475, file: !1387, line: 108, column: 2)
!9489 = !DILocation(line: 108, column: 2, scope: !9488)
!9490 = !DILocation(line: 108, column: 2, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !1387, line: 108, column: 2)
!9492 = !DILocation(line: 109, column: 2, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !1387, line: 109, column: 2)
!9494 = distinct !DILexicalBlock(scope: !9475, file: !1387, line: 109, column: 2)
!9495 = !DILocation(line: 109, column: 2, scope: !9494)
!9496 = !DILocation(line: 109, column: 2, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !1387, line: 109, column: 2)
!9498 = !DILocation(line: 110, column: 2, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !1387, line: 110, column: 2)
!9500 = distinct !DILexicalBlock(scope: !9475, file: !1387, line: 110, column: 2)
!9501 = !DILocation(line: 110, column: 2, scope: !9500)
!9502 = !DILocation(line: 110, column: 2, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9499, file: !1387, line: 110, column: 2)
!9504 = !DILocation(line: 112, column: 12, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9475, file: !1387, line: 112, column: 6)
!9506 = !DILocation(line: 112, column: 22, scope: !9505)
!9507 = !DILocation(line: 112, column: 30, scope: !9505)
!9508 = !DILocation(line: 112, column: 61, scope: !9505)
!9509 = !DILocation(line: 112, column: 55, scope: !9505)
!9510 = !DILocation(line: 112, column: 34, scope: !9505)
!9511 = !DILocation(line: 112, column: 6, scope: !9475)
!9512 = !DILocation(line: 116, column: 27, scope: !9475)
!9513 = !DILocation(line: 116, column: 8, scope: !9475)
!9514 = !DILocation(line: 117, column: 6, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9475, file: !1387, line: 117, column: 6)
!9516 = !DILocation(line: 117, column: 6, scope: !9475)
!9517 = !DILocation(line: 121, column: 15, scope: !9475)
!9518 = !DILocation(line: 121, column: 35, scope: !9475)
!9519 = !DILocation(line: 121, column: 29, scope: !9475)
!9520 = !DILocation(line: 121, column: 2, scope: !9475)
!9521 = !DILocation(line: 123, column: 8, scope: !9475)
!9522 = !DILocation(line: 125, column: 23, scope: !9475)
!9523 = !DILocation(line: 125, column: 2, scope: !9475)
!9524 = !DILocation(line: 127, column: 2, scope: !9475)
!9525 = !DILocation(line: 128, column: 1, scope: !9475)
!9526 = distinct !DISubprogram(name: "k_mutex_lock", scope: !4197, file: !4197, line: 927, type: !9527, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9529)
!9527 = !DISubroutineType(types: !9528)
!9528 = !{!103, !1293, !9464}
!9529 = !{!9530, !9531}
!9530 = !DILocalVariable(name: "mutex", arg: 1, scope: !9526, file: !4197, line: 927, type: !1293)
!9531 = !DILocalVariable(name: "timeout", arg: 2, scope: !9526, file: !4197, line: 927, type: !9464)
!9532 = !DILocation(line: 0, scope: !9526)
!9533 = !DILocation(line: 936, column: 2, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9526, file: !4197, line: 936, column: 2)
!9535 = !{i64 2151048883}
!9536 = !DILocation(line: 937, column: 9, scope: !9526)
!9537 = !DILocation(line: 937, column: 2, scope: !9526)
!9538 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1387, file: !1387, line: 66, type: !9539, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9541)
!9539 = !DISubroutineType(types: !9540)
!9540 = !{!103, !1284, !109}
!9541 = !{!9542, !9543, !9544, !9545, !9546, !9548}
!9542 = !DILocalVariable(name: "chan", arg: 1, scope: !9538, file: !1387, line: 66, type: !1284)
!9543 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9538, file: !1387, line: 66, type: !109)
!9544 = !DILocalVariable(name: "last_error", scope: !9538, file: !1387, line: 68, type: !103)
!9545 = !DILocalVariable(name: "err", scope: !9538, file: !1387, line: 68, type: !103)
!9546 = !DILocalVariable(name: "obs", scope: !9547, file: !1387, line: 70, type: !1384)
!9547 = distinct !DILexicalBlock(scope: !9538, file: !1387, line: 70, column: 2)
!9548 = !DILocalVariable(name: "obs", scope: !9549, file: !1387, line: 81, type: !1384)
!9549 = distinct !DILexicalBlock(scope: !9538, file: !1387, line: 81, column: 2)
!9550 = !DILocation(line: 0, scope: !9538)
!9551 = !DILocation(line: 70, column: 54, scope: !9547)
!9552 = !DILocation(line: 0, scope: !9547)
!9553 = !DILocation(line: 70, column: 65, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9547, file: !1387, line: 70, column: 2)
!9555 = !DILocation(line: 70, column: 70, scope: !9554)
!9556 = !DILocation(line: 70, column: 2, scope: !9547)
!9557 = !DILocation(line: 77, column: 2, scope: !9538)
!9558 = !DILocation(line: 81, column: 54, scope: !9549)
!9559 = !DILocation(line: 0, scope: !9549)
!9560 = !DILocation(line: 81, column: 65, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9549, file: !1387, line: 81, column: 2)
!9562 = !DILocation(line: 81, column: 70, scope: !9561)
!9563 = !DILocation(line: 81, column: 2, scope: !9549)
!9564 = !DILocation(line: 71, column: 15, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !1387, line: 71, column: 7)
!9566 = distinct !DILexicalBlock(scope: !9554, file: !1387, line: 70, column: 86)
!9567 = !DILocation(line: 71, column: 23, scope: !9565)
!9568 = !DILocation(line: 71, column: 35, scope: !9565)
!9569 = !DILocation(line: 71, column: 44, scope: !9565)
!9570 = !DILocation(line: 71, column: 7, scope: !9566)
!9571 = !DILocation(line: 72, column: 4, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9565, file: !1387, line: 71, column: 54)
!9573 = !DILocation(line: 73, column: 3, scope: !9572)
!9574 = !DILocation(line: 70, column: 79, scope: !9554)
!9575 = distinct !{!9575, !9556, !9576}
!9576 = !DILocation(line: 74, column: 2, scope: !9547)
!9577 = !DILocation(line: 95, column: 41, scope: !9538)
!9578 = !DILocation(line: 95, column: 8, scope: !9538)
!9579 = !DILocation(line: 100, column: 2, scope: !9538)
!9580 = !DILocation(line: 82, column: 15, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9582, file: !1387, line: 82, column: 7)
!9582 = distinct !DILexicalBlock(scope: !9561, file: !1387, line: 81, column: 86)
!9583 = !DILocation(line: 82, column: 23, scope: !9581)
!9584 = !DILocation(line: 82, column: 35, scope: !9581)
!9585 = !DILocation(line: 82, column: 41, scope: !9581)
!9586 = !DILocation(line: 82, column: 7, scope: !9582)
!9587 = !DILocation(line: 83, column: 43, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9581, file: !1387, line: 82, column: 51)
!9589 = !DILocation(line: 83, column: 10, scope: !9588)
!9590 = !DILocation(line: 84, column: 4, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !1387, line: 84, column: 4)
!9592 = distinct !DILexicalBlock(scope: !9588, file: !1387, line: 84, column: 4)
!9593 = !DILocation(line: 84, column: 4, scope: !9592)
!9594 = !DILocation(line: 84, column: 4, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9591, file: !1387, line: 84, column: 4)
!9596 = !DILocation(line: 81, column: 79, scope: !9561)
!9597 = distinct !{!9597, !9563, !9598}
!9598 = !DILocation(line: 92, column: 2, scope: !9549)
!9599 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !4197, file: !4197, line: 944, type: !9600, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9602)
!9600 = !DISubroutineType(types: !9601)
!9601 = !{!103, !1293}
!9602 = !{!9603}
!9603 = !DILocalVariable(name: "mutex", arg: 1, scope: !9599, file: !4197, line: 944, type: !1293)
!9604 = !DILocation(line: 0, scope: !9599)
!9605 = !DILocation(line: 952, column: 2, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9599, file: !4197, line: 952, column: 2)
!9607 = !{i64 2151048951}
!9608 = !DILocation(line: 953, column: 9, scope: !9599)
!9609 = !DILocation(line: 953, column: 2, scope: !9599)
!9610 = distinct !DISubprogram(name: "_zbus_notify_runtime_listeners", scope: !1387, file: !1387, line: 20, type: !1282, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9611)
!9611 = !{!9612, !9613, !9614}
!9612 = !DILocalVariable(name: "chan", arg: 1, scope: !9610, file: !1387, line: 20, type: !1284)
!9613 = !DILocalVariable(name: "obs_nd", scope: !9610, file: !1387, line: 24, type: !1228)
!9614 = !DILocalVariable(name: "tmp", scope: !9610, file: !1387, line: 24, type: !1228)
!9615 = !DILocation(line: 0, scope: !9610)
!9616 = !DILocation(line: 22, column: 2, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !1387, line: 22, column: 2)
!9618 = distinct !DILexicalBlock(scope: !9610, file: !1387, line: 22, column: 2)
!9619 = !DILocation(line: 22, column: 2, scope: !9618)
!9620 = !DILocation(line: 22, column: 2, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9617, file: !1387, line: 22, column: 2)
!9622 = !DILocation(line: 26, column: 2, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9610, file: !1387, line: 26, column: 2)
!9624 = !DILocation(line: 0, scope: !9623)
!9625 = !DILocation(line: 30, column: 15, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9627, file: !1387, line: 30, column: 7)
!9627 = distinct !DILexicalBlock(scope: !9628, file: !1387, line: 26, column: 80)
!9628 = distinct !DILexicalBlock(scope: !9623, file: !1387, line: 26, column: 2)
!9629 = !DILocation(line: 30, column: 20, scope: !9626)
!9630 = !DILocation(line: 30, column: 28, scope: !9626)
!9631 = !DILocation(line: 30, column: 45, scope: !9626)
!9632 = !DILocation(line: 30, column: 54, scope: !9626)
!9633 = !DILocation(line: 30, column: 7, scope: !9627)
!9634 = !DILocation(line: 31, column: 4, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9626, file: !1387, line: 30, column: 64)
!9636 = !DILocation(line: 32, column: 3, scope: !9635)
!9637 = !DILocation(line: 26, column: 2, scope: !9628)
!9638 = !DILocation(line: 34, column: 1, scope: !9610)
!9639 = distinct !DISubprogram(name: "_zbus_notify_runtime_subscribers", scope: !1387, file: !1387, line: 36, type: !9539, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9640)
!9640 = !{!9641, !9642, !9643, !9644, !9645, !9646}
!9641 = !DILocalVariable(name: "chan", arg: 1, scope: !9639, file: !1387, line: 36, type: !1284)
!9642 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !9639, file: !1387, line: 37, type: !109)
!9643 = !DILocalVariable(name: "last_error", scope: !9639, file: !1387, line: 41, type: !103)
!9644 = !DILocalVariable(name: "err", scope: !9639, file: !1387, line: 41, type: !103)
!9645 = !DILocalVariable(name: "obs_nd", scope: !9639, file: !1387, line: 42, type: !1228)
!9646 = !DILocalVariable(name: "tmp", scope: !9639, file: !1387, line: 42, type: !1228)
!9647 = !DILocation(line: 0, scope: !9639)
!9648 = !DILocation(line: 39, column: 2, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9650, file: !1387, line: 39, column: 2)
!9650 = distinct !DILexicalBlock(scope: !9639, file: !1387, line: 39, column: 2)
!9651 = !DILocation(line: 39, column: 2, scope: !9650)
!9652 = !DILocation(line: 39, column: 2, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9649, file: !1387, line: 39, column: 2)
!9654 = !DILocation(line: 44, column: 2, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9639, file: !1387, line: 44, column: 2)
!9656 = !DILocation(line: 48, column: 15, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !1387, line: 48, column: 7)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !1387, line: 44, column: 80)
!9659 = distinct !DILexicalBlock(scope: !9655, file: !1387, line: 44, column: 2)
!9660 = !DILocation(line: 48, column: 20, scope: !9657)
!9661 = !DILocation(line: 48, column: 28, scope: !9657)
!9662 = !DILocation(line: 48, column: 45, scope: !9657)
!9663 = !DILocation(line: 48, column: 51, scope: !9657)
!9664 = !DILocation(line: 48, column: 7, scope: !9658)
!9665 = !DILocation(line: 50, column: 7, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9657, file: !1387, line: 48, column: 61)
!9667 = !DILocation(line: 49, column: 10, scope: !9666)
!9668 = !DILocation(line: 52, column: 4, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !1387, line: 52, column: 4)
!9670 = distinct !DILexicalBlock(scope: !9666, file: !1387, line: 52, column: 4)
!9671 = !DILocation(line: 52, column: 4, scope: !9670)
!9672 = !DILocation(line: 52, column: 4, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9669, file: !1387, line: 52, column: 4)
!9674 = !DILocation(line: 44, column: 2, scope: !9659)
!9675 = !DILocation(line: 62, column: 2, scope: !9639)
!9676 = distinct !DISubprogram(name: "k_msgq_put", scope: !4197, file: !4197, line: 1129, type: !9677, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9679)
!9677 = !DISubroutineType(types: !9678)
!9678 = !{!103, !1245, !13, !9464}
!9679 = !{!9680, !9681, !9682}
!9680 = !DILocalVariable(name: "msgq", arg: 1, scope: !9676, file: !4197, line: 1129, type: !1245)
!9681 = !DILocalVariable(name: "data", arg: 2, scope: !9676, file: !4197, line: 1129, type: !13)
!9682 = !DILocalVariable(name: "timeout", arg: 3, scope: !9676, file: !4197, line: 1129, type: !9464)
!9683 = !DILocation(line: 0, scope: !9676)
!9684 = !DILocation(line: 1139, column: 2, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9676, file: !4197, line: 1139, column: 2)
!9686 = !{i64 2151049699}
!9687 = !DILocation(line: 1140, column: 9, scope: !9676)
!9688 = !DILocation(line: 1140, column: 2, scope: !9676)
!9689 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !283, file: !283, line: 231, type: !9690, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9692)
!9690 = !DISubroutineType(types: !9691)
!9691 = !{!1381, !1376}
!9692 = !{!9693}
!9693 = !DILocalVariable(name: "list", arg: 1, scope: !9689, file: !283, line: 231, type: !1376)
!9694 = !DILocation(line: 0, scope: !9689)
!9695 = !DILocation(line: 233, column: 15, scope: !9689)
!9696 = !DILocation(line: 233, column: 2, scope: !9689)
!9697 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !283, file: !283, line: 285, type: !9698, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9700)
!9698 = !DISubroutineType(types: !9699)
!9699 = !{!1381, !1381}
!9700 = !{!9701}
!9701 = !DILocalVariable(name: "node", arg: 1, scope: !9697, file: !283, line: 285, type: !1381)
!9702 = !DILocation(line: 0, scope: !9697)
!9703 = !DILocation(line: 285, column: 1, scope: !9697)
!9704 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !283, file: !283, line: 274, type: !9698, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9705)
!9705 = !{!9706}
!9706 = !DILocalVariable(name: "node", arg: 1, scope: !9704, file: !283, line: 274, type: !1381)
!9707 = !DILocation(line: 0, scope: !9704)
!9708 = !DILocation(line: 274, column: 1, scope: !9704)
!9709 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !283, file: !283, line: 204, type: !9698, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9710)
!9710 = !{!9711}
!9711 = !DILocalVariable(name: "node", arg: 1, scope: !9709, file: !283, line: 204, type: !1381)
!9712 = !DILocation(line: 0, scope: !9709)
!9713 = !DILocation(line: 206, column: 15, scope: !9709)
!9714 = !DILocation(line: 206, column: 2, scope: !9709)
!9715 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1387, file: !1387, line: 130, type: !9716, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9718)
!9716 = !DISubroutineType(types: !9717)
!9717 = !{!103, !1284, !102, !9464}
!9718 = !{!9719, !9720, !9721, !9722}
!9719 = !DILocalVariable(name: "chan", arg: 1, scope: !9715, file: !1387, line: 130, type: !1284)
!9720 = !DILocalVariable(name: "msg", arg: 2, scope: !9715, file: !1387, line: 130, type: !102)
!9721 = !DILocalVariable(name: "timeout", arg: 3, scope: !9715, file: !1387, line: 130, type: !9464)
!9722 = !DILocalVariable(name: "err", scope: !9715, file: !1387, line: 132, type: !103)
!9723 = !DILocation(line: 0, scope: !9715)
!9724 = !DILocation(line: 134, column: 2, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !1387, line: 134, column: 2)
!9726 = distinct !DILexicalBlock(scope: !9715, file: !1387, line: 134, column: 2)
!9727 = !DILocation(line: 134, column: 2, scope: !9726)
!9728 = !DILocation(line: 134, column: 2, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !1387, line: 134, column: 2)
!9730 = !DILocation(line: 135, column: 2, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !1387, line: 135, column: 2)
!9732 = distinct !DILexicalBlock(scope: !9715, file: !1387, line: 135, column: 2)
!9733 = !DILocation(line: 135, column: 2, scope: !9732)
!9734 = !DILocation(line: 135, column: 2, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9731, file: !1387, line: 135, column: 2)
!9736 = !DILocation(line: 136, column: 2, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !1387, line: 136, column: 2)
!9738 = distinct !DILexicalBlock(scope: !9715, file: !1387, line: 136, column: 2)
!9739 = !DILocation(line: 136, column: 2, scope: !9738)
!9740 = !DILocation(line: 136, column: 2, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !1387, line: 136, column: 2)
!9742 = !DILocation(line: 138, column: 27, scope: !9715)
!9743 = !DILocation(line: 138, column: 8, scope: !9715)
!9744 = !DILocation(line: 139, column: 6, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9715, file: !1387, line: 139, column: 6)
!9746 = !DILocation(line: 139, column: 6, scope: !9715)
!9747 = !DILocation(line: 143, column: 20, scope: !9715)
!9748 = !DILocation(line: 143, column: 35, scope: !9715)
!9749 = !DILocation(line: 143, column: 29, scope: !9715)
!9750 = !DILocation(line: 143, column: 2, scope: !9715)
!9751 = !DILocation(line: 145, column: 30, scope: !9715)
!9752 = !DILocation(line: 145, column: 9, scope: !9715)
!9753 = !DILocation(line: 145, column: 2, scope: !9715)
!9754 = !DILocation(line: 146, column: 1, scope: !9715)
!9755 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1387, file: !1387, line: 148, type: !9756, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9758)
!9756 = !DISubroutineType(types: !9757)
!9757 = !{!103, !1284, !9464}
!9758 = !{!9759, !9760, !9761, !9762}
!9759 = !DILocalVariable(name: "chan", arg: 1, scope: !9755, file: !1387, line: 148, type: !1284)
!9760 = !DILocalVariable(name: "timeout", arg: 2, scope: !9755, file: !1387, line: 148, type: !9464)
!9761 = !DILocalVariable(name: "err", scope: !9755, file: !1387, line: 150, type: !103)
!9762 = !DILocalVariable(name: "end_ticks", scope: !9755, file: !1387, line: 151, type: !109)
!9763 = !DILocation(line: 0, scope: !9755)
!9764 = !DILocation(line: 151, column: 23, scope: !9755)
!9765 = !DILocation(line: 153, column: 2, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !1387, line: 153, column: 2)
!9767 = distinct !DILexicalBlock(scope: !9755, file: !1387, line: 153, column: 2)
!9768 = !DILocation(line: 153, column: 2, scope: !9767)
!9769 = !DILocation(line: 153, column: 2, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9766, file: !1387, line: 153, column: 2)
!9771 = !DILocation(line: 154, column: 2, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !1387, line: 154, column: 2)
!9773 = distinct !DILexicalBlock(scope: !9755, file: !1387, line: 154, column: 2)
!9774 = !DILocation(line: 154, column: 2, scope: !9773)
!9775 = !DILocation(line: 154, column: 2, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9772, file: !1387, line: 154, column: 2)
!9777 = !DILocation(line: 156, column: 27, scope: !9755)
!9778 = !DILocation(line: 156, column: 8, scope: !9755)
!9779 = !DILocation(line: 157, column: 6, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9755, file: !1387, line: 157, column: 6)
!9781 = !DILocation(line: 157, column: 6, scope: !9755)
!9782 = !DILocation(line: 161, column: 8, scope: !9755)
!9783 = !DILocation(line: 163, column: 23, scope: !9755)
!9784 = !DILocation(line: 163, column: 2, scope: !9755)
!9785 = !DILocation(line: 165, column: 2, scope: !9755)
!9786 = !DILocation(line: 166, column: 1, scope: !9755)
!9787 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1387, file: !1387, line: 168, type: !9756, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9788)
!9788 = !{!9789, !9790, !9791}
!9789 = !DILocalVariable(name: "chan", arg: 1, scope: !9787, file: !1387, line: 168, type: !1284)
!9790 = !DILocalVariable(name: "timeout", arg: 2, scope: !9787, file: !1387, line: 168, type: !9464)
!9791 = !DILocalVariable(name: "err", scope: !9787, file: !1387, line: 173, type: !103)
!9792 = !DILocation(line: 0, scope: !9787)
!9793 = !DILocation(line: 170, column: 2, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9795, file: !1387, line: 170, column: 2)
!9795 = distinct !DILexicalBlock(scope: !9787, file: !1387, line: 170, column: 2)
!9796 = !DILocation(line: 170, column: 2, scope: !9795)
!9797 = !DILocation(line: 170, column: 2, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !1387, line: 170, column: 2)
!9799 = !DILocation(line: 171, column: 2, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !1387, line: 171, column: 2)
!9801 = distinct !DILexicalBlock(scope: !9787, file: !1387, line: 171, column: 2)
!9802 = !DILocation(line: 171, column: 2, scope: !9801)
!9803 = !DILocation(line: 171, column: 2, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9800, file: !1387, line: 171, column: 2)
!9805 = !DILocation(line: 173, column: 31, scope: !9787)
!9806 = !DILocation(line: 173, column: 12, scope: !9787)
!9807 = !DILocation(line: 180, column: 1, scope: !9787)
!9808 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1387, file: !1387, line: 182, type: !9809, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9811)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!103, !1284}
!9811 = !{!9812, !9813}
!9812 = !DILocalVariable(name: "chan", arg: 1, scope: !9808, file: !1387, line: 182, type: !1284)
!9813 = !DILocalVariable(name: "err", scope: !9808, file: !1387, line: 187, type: !103)
!9814 = !DILocation(line: 0, scope: !9808)
!9815 = !DILocation(line: 184, column: 2, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !1387, line: 184, column: 2)
!9817 = distinct !DILexicalBlock(scope: !9808, file: !1387, line: 184, column: 2)
!9818 = !DILocation(line: 184, column: 2, scope: !9817)
!9819 = !DILocation(line: 184, column: 2, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9816, file: !1387, line: 184, column: 2)
!9821 = !DILocation(line: 185, column: 2, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !1387, line: 185, column: 2)
!9823 = distinct !DILexicalBlock(scope: !9808, file: !1387, line: 185, column: 2)
!9824 = !DILocation(line: 185, column: 2, scope: !9823)
!9825 = !DILocation(line: 185, column: 2, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9822, file: !1387, line: 185, column: 2)
!9827 = !DILocation(line: 187, column: 33, scope: !9808)
!9828 = !DILocation(line: 187, column: 12, scope: !9808)
!9829 = !DILocation(line: 189, column: 2, scope: !9808)
!9830 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1387, file: !1387, line: 192, type: !9831, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9834)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!103, !1238, !9833, !9464}
!9833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!9834 = !{!9835, !9836, !9837}
!9835 = !DILocalVariable(name: "sub", arg: 1, scope: !9830, file: !1387, line: 192, type: !1238)
!9836 = !DILocalVariable(name: "chan", arg: 2, scope: !9830, file: !1387, line: 192, type: !9833)
!9837 = !DILocalVariable(name: "timeout", arg: 3, scope: !9830, file: !1387, line: 193, type: !9464)
!9838 = !DILocation(line: 0, scope: !9830)
!9839 = !DILocation(line: 195, column: 2, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !1387, line: 195, column: 2)
!9841 = distinct !DILexicalBlock(scope: !9830, file: !1387, line: 195, column: 2)
!9842 = !DILocation(line: 195, column: 2, scope: !9841)
!9843 = !DILocation(line: 195, column: 2, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9840, file: !1387, line: 195, column: 2)
!9845 = !DILocation(line: 196, column: 2, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9847, file: !1387, line: 196, column: 2)
!9847 = distinct !DILexicalBlock(scope: !9830, file: !1387, line: 196, column: 2)
!9848 = !DILocation(line: 196, column: 2, scope: !9847)
!9849 = !DILocation(line: 196, column: 2, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !1387, line: 196, column: 2)
!9851 = !DILocation(line: 197, column: 2, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9853, file: !1387, line: 197, column: 2)
!9853 = distinct !DILexicalBlock(scope: !9830, file: !1387, line: 197, column: 2)
!9854 = !DILocation(line: 197, column: 2, scope: !9853)
!9855 = !DILocation(line: 197, column: 2, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !1387, line: 197, column: 2)
!9857 = !DILocation(line: 199, column: 11, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9830, file: !1387, line: 199, column: 6)
!9859 = !DILocation(line: 199, column: 17, scope: !9858)
!9860 = !DILocation(line: 199, column: 6, scope: !9830)
!9861 = !DILocation(line: 203, column: 32, scope: !9830)
!9862 = !DILocation(line: 203, column: 9, scope: !9830)
!9863 = !DILocation(line: 203, column: 2, scope: !9830)
!9864 = !DILocation(line: 204, column: 1, scope: !9830)
!9865 = distinct !DISubprogram(name: "k_msgq_get", scope: !4197, file: !4197, line: 1147, type: !9866, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1225, retainedNodes: !9868)
!9866 = !DISubroutineType(types: !9867)
!9867 = !{!103, !1245, !102, !9464}
!9868 = !{!9869, !9870, !9871}
!9869 = !DILocalVariable(name: "msgq", arg: 1, scope: !9865, file: !4197, line: 1147, type: !1245)
!9870 = !DILocalVariable(name: "data", arg: 2, scope: !9865, file: !4197, line: 1147, type: !102)
!9871 = !DILocalVariable(name: "timeout", arg: 3, scope: !9865, file: !4197, line: 1147, type: !9464)
!9872 = !DILocation(line: 0, scope: !9865)
!9873 = !DILocation(line: 1157, column: 2, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9865, file: !4197, line: 1157, column: 2)
!9875 = !{i64 2151049767}
!9876 = !DILocation(line: 1158, column: 9, scope: !9865)
!9877 = !DILocation(line: 1158, column: 2, scope: !9865)
!9878 = distinct !DISubprogram(name: "zbus_runtime_obs_pool", scope: !1560, file: !1560, line: 14, type: !9879, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !2645)
!9879 = !DISubroutineType(types: !9880)
!9880 = !{!9881}
!9881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!9882 = !DILocation(line: 16, column: 2, scope: !9878)
!9883 = distinct !DISubprogram(name: "zbus_chan_add_obs", scope: !1560, file: !1560, line: 19, type: !9884, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !9890)
!9884 = !DISubroutineType(types: !9885)
!9885 = !{!103, !1454, !1408, !9886}
!9886 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9887)
!9887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9888)
!9888 = !{!9889}
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9887, file: !105, line: 66, baseType: !104, size: 64)
!9890 = !{!9891, !9892, !9893, !9894, !9895, !9896, !9897, !9898}
!9891 = !DILocalVariable(name: "chan", arg: 1, scope: !9883, file: !1560, line: 19, type: !1454)
!9892 = !DILocalVariable(name: "obs", arg: 2, scope: !9883, file: !1560, line: 19, type: !1408)
!9893 = !DILocalVariable(name: "timeout", arg: 3, scope: !9883, file: !1560, line: 20, type: !9886)
!9894 = !DILocalVariable(name: "err", scope: !9883, file: !1560, line: 22, type: !103)
!9895 = !DILocalVariable(name: "obs_nd", scope: !9883, file: !1560, line: 23, type: !1398)
!9896 = !DILocalVariable(name: "tmp", scope: !9883, file: !1560, line: 23, type: !1398)
!9897 = !DILocalVariable(name: "end_ticks", scope: !9883, file: !1560, line: 24, type: !109)
!9898 = !DILocalVariable(name: "static_obs", scope: !9899, file: !1560, line: 31, type: !1554)
!9899 = distinct !DILexicalBlock(scope: !9883, file: !1560, line: 31, column: 2)
!9900 = !DILocation(line: 0, scope: !9883)
!9901 = !DILocation(line: 23, column: 2, scope: !9883)
!9902 = !DILocation(line: 24, column: 23, scope: !9883)
!9903 = !DILocation(line: 26, column: 2, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9905, file: !1560, line: 26, column: 2)
!9905 = distinct !DILexicalBlock(scope: !9883, file: !1560, line: 26, column: 2)
!9906 = !DILocation(line: 26, column: 2, scope: !9905)
!9907 = !DILocation(line: 26, column: 2, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9904, file: !1560, line: 26, column: 2)
!9909 = !DILocation(line: 27, column: 2, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9911, file: !1560, line: 27, column: 2)
!9911 = distinct !DILexicalBlock(scope: !9883, file: !1560, line: 27, column: 2)
!9912 = !DILocation(line: 27, column: 2, scope: !9911)
!9913 = !DILocation(line: 27, column: 2, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9910, file: !1560, line: 27, column: 2)
!9915 = !DILocation(line: 28, column: 2, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9917, file: !1560, line: 28, column: 2)
!9917 = distinct !DILexicalBlock(scope: !9883, file: !1560, line: 28, column: 2)
!9918 = !DILocation(line: 28, column: 2, scope: !9917)
!9919 = !DILocation(line: 28, column: 2, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9916, file: !1560, line: 28, column: 2)
!9921 = !DILocation(line: 31, column: 61, scope: !9899)
!9922 = !DILocation(line: 0, scope: !9899)
!9923 = !DILocation(line: 31, column: 72, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9899, file: !1560, line: 31, column: 2)
!9925 = !DILocation(line: 31, column: 84, scope: !9924)
!9926 = !DILocation(line: 31, column: 2, scope: !9899)
!9927 = distinct !{!9927, !9926, !9928}
!9928 = !DILocation(line: 36, column: 2, scope: !9899)
!9929 = !DILocation(line: 33, column: 19, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9931, file: !1560, line: 33, column: 7)
!9931 = distinct !DILexicalBlock(scope: !9924, file: !1560, line: 32, column: 21)
!9932 = !DILocation(line: 32, column: 7, scope: !9924)
!9933 = !DILocation(line: 33, column: 7, scope: !9931)
!9934 = !DILocation(line: 38, column: 27, scope: !9883)
!9935 = !DILocation(line: 38, column: 8, scope: !9883)
!9936 = !DILocation(line: 39, column: 6, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9883, file: !1560, line: 39, column: 6)
!9938 = !DILocation(line: 39, column: 6, scope: !9883)
!9939 = !DILocation(line: 44, column: 2, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9883, file: !1560, line: 44, column: 2)
!9941 = !DILocation(line: 45, column: 15, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !1560, line: 45, column: 7)
!9943 = distinct !DILexicalBlock(scope: !9944, file: !1560, line: 44, column: 80)
!9944 = distinct !DILexicalBlock(scope: !9940, file: !1560, line: 44, column: 2)
!9945 = !DILocation(line: 45, column: 19, scope: !9942)
!9946 = !DILocation(line: 45, column: 7, scope: !9943)
!9947 = !DILocation(line: 46, column: 25, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9942, file: !1560, line: 45, column: 27)
!9949 = !DILocation(line: 46, column: 4, scope: !9948)
!9950 = !DILocation(line: 48, column: 4, scope: !9948)
!9951 = !DILocation(line: 44, column: 2, scope: !9944)
!9952 = !DILocation(line: 52, column: 50, scope: !9883)
!9953 = !DILocation(line: 53, column: 11, scope: !9883)
!9954 = !DILocation(line: 52, column: 8, scope: !9883)
!9955 = !DILocation(line: 55, column: 6, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9883, file: !1560, line: 55, column: 6)
!9957 = !DILocation(line: 55, column: 6, scope: !9883)
!9958 = !DILocation(line: 56, column: 3, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9960, file: !1560, line: 56, column: 3)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !1560, line: 56, column: 3)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !1560, line: 56, column: 3)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !1560, line: 56, column: 3)
!9963 = distinct !DILexicalBlock(scope: !9956, file: !1560, line: 55, column: 11)
!9964 = !DILocation(line: 58, column: 24, scope: !9963)
!9965 = !DILocation(line: 58, column: 3, scope: !9963)
!9966 = !DILocation(line: 60, column: 3, scope: !9963)
!9967 = !DILocation(line: 63, column: 2, scope: !9883)
!9968 = !DILocation(line: 63, column: 10, scope: !9883)
!9969 = !DILocation(line: 63, column: 14, scope: !9883)
!9970 = !DILocation(line: 65, column: 25, scope: !9883)
!9971 = !DILocation(line: 65, column: 53, scope: !9883)
!9972 = !DILocation(line: 65, column: 2, scope: !9883)
!9973 = !DILocation(line: 67, column: 23, scope: !9883)
!9974 = !DILocation(line: 67, column: 2, scope: !9883)
!9975 = !DILocation(line: 69, column: 2, scope: !9883)
!9976 = !DILocation(line: 70, column: 1, scope: !9883)
!9977 = distinct !DISubprogram(name: "k_mutex_lock", scope: !4197, file: !4197, line: 927, type: !9978, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !9980)
!9978 = !DISubroutineType(types: !9979)
!9979 = !{!103, !1463, !9886}
!9980 = !{!9981, !9982}
!9981 = !DILocalVariable(name: "mutex", arg: 1, scope: !9977, file: !4197, line: 927, type: !1463)
!9982 = !DILocalVariable(name: "timeout", arg: 2, scope: !9977, file: !4197, line: 927, type: !9886)
!9983 = !DILocation(line: 0, scope: !9977)
!9984 = !DILocation(line: 936, column: 2, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9977, file: !4197, line: 936, column: 2)
!9986 = !{i64 2151046171}
!9987 = !DILocation(line: 937, column: 9, scope: !9977)
!9988 = !DILocation(line: 937, column: 2, scope: !9977)
!9989 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !283, file: !283, line: 231, type: !9990, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !9992)
!9990 = !DISubroutineType(types: !9991)
!9991 = !{!1551, !1546}
!9992 = !{!9993}
!9993 = !DILocalVariable(name: "list", arg: 1, scope: !9989, file: !283, line: 231, type: !1546)
!9994 = !DILocation(line: 0, scope: !9989)
!9995 = !DILocation(line: 233, column: 15, scope: !9989)
!9996 = !DILocation(line: 233, column: 2, scope: !9989)
!9997 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !283, file: !283, line: 285, type: !9998, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10000)
!9998 = !DISubroutineType(types: !9999)
!9999 = !{!1551, !1551}
!10000 = !{!10001}
!10001 = !DILocalVariable(name: "node", arg: 1, scope: !9997, file: !283, line: 285, type: !1551)
!10002 = !DILocation(line: 0, scope: !9997)
!10003 = !DILocation(line: 285, column: 1, scope: !9997)
!10004 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !4197, file: !4197, line: 944, type: !10005, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10007)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{!103, !1463}
!10007 = !{!10008}
!10008 = !DILocalVariable(name: "mutex", arg: 1, scope: !10004, file: !4197, line: 944, type: !1463)
!10009 = !DILocation(line: 0, scope: !10004)
!10010 = !DILocation(line: 952, column: 2, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10004, file: !4197, line: 952, column: 2)
!10012 = !{i64 2151046239}
!10013 = !DILocation(line: 953, column: 9, scope: !10004)
!10014 = !DILocation(line: 953, column: 2, scope: !10004)
!10015 = distinct !DISubprogram(name: "sys_slist_append", scope: !283, file: !283, line: 311, type: !10016, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10018)
!10016 = !DISubroutineType(types: !10017)
!10017 = !{null, !1546, !1551}
!10018 = !{!10019, !10020}
!10019 = !DILocalVariable(name: "list", arg: 1, scope: !10015, file: !283, line: 311, type: !1546)
!10020 = !DILocalVariable(name: "node", arg: 2, scope: !10015, file: !283, line: 311, type: !1551)
!10021 = !DILocation(line: 0, scope: !10015)
!10022 = !DILocation(line: 311, column: 1, scope: !10015)
!10023 = !DILocation(line: 311, column: 1, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10015, file: !283, line: 311, column: 1)
!10025 = !DILocation(line: 311, column: 1, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10024, file: !283, line: 311, column: 1)
!10027 = !DILocation(line: 311, column: 1, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10024, file: !283, line: 311, column: 1)
!10029 = distinct !DISubprogram(name: "z_snode_next_set", scope: !283, file: !283, line: 209, type: !10030, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10032)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{null, !1551, !1551}
!10032 = !{!10033, !10034}
!10033 = !DILocalVariable(name: "parent", arg: 1, scope: !10029, file: !283, line: 209, type: !1551)
!10034 = !DILocalVariable(name: "child", arg: 2, scope: !10029, file: !283, line: 209, type: !1551)
!10035 = !DILocation(line: 0, scope: !10029)
!10036 = !DILocation(line: 211, column: 10, scope: !10029)
!10037 = !DILocation(line: 211, column: 15, scope: !10029)
!10038 = !DILocation(line: 212, column: 1, scope: !10029)
!10039 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !283, file: !283, line: 243, type: !9990, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10040)
!10040 = !{!10041}
!10041 = !DILocalVariable(name: "list", arg: 1, scope: !10039, file: !283, line: 243, type: !1546)
!10042 = !DILocation(line: 0, scope: !10039)
!10043 = !DILocation(line: 245, column: 15, scope: !10039)
!10044 = !DILocation(line: 245, column: 2, scope: !10039)
!10045 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !283, file: !283, line: 219, type: !10016, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10046)
!10046 = !{!10047, !10048}
!10047 = !DILocalVariable(name: "list", arg: 1, scope: !10045, file: !283, line: 219, type: !1546)
!10048 = !DILocalVariable(name: "node", arg: 2, scope: !10045, file: !283, line: 219, type: !1551)
!10049 = !DILocation(line: 0, scope: !10045)
!10050 = !DILocation(line: 221, column: 8, scope: !10045)
!10051 = !DILocation(line: 221, column: 13, scope: !10045)
!10052 = !DILocation(line: 222, column: 1, scope: !10045)
!10053 = distinct !DISubprogram(name: "z_slist_head_set", scope: !283, file: !283, line: 214, type: !10016, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10054)
!10054 = !{!10055, !10056}
!10055 = !DILocalVariable(name: "list", arg: 1, scope: !10053, file: !283, line: 214, type: !1546)
!10056 = !DILocalVariable(name: "node", arg: 2, scope: !10053, file: !283, line: 214, type: !1551)
!10057 = !DILocation(line: 0, scope: !10053)
!10058 = !DILocation(line: 216, column: 8, scope: !10053)
!10059 = !DILocation(line: 216, column: 13, scope: !10053)
!10060 = !DILocation(line: 217, column: 1, scope: !10053)
!10061 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !283, file: !283, line: 274, type: !9998, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10062)
!10062 = !{!10063}
!10063 = !DILocalVariable(name: "node", arg: 1, scope: !10061, file: !283, line: 274, type: !1551)
!10064 = !DILocation(line: 0, scope: !10061)
!10065 = !DILocation(line: 274, column: 1, scope: !10061)
!10066 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !283, file: !283, line: 204, type: !9998, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10067)
!10067 = !{!10068}
!10068 = !DILocalVariable(name: "node", arg: 1, scope: !10066, file: !283, line: 204, type: !1551)
!10069 = !DILocation(line: 0, scope: !10066)
!10070 = !DILocation(line: 206, column: 15, scope: !10066)
!10071 = !DILocation(line: 206, column: 2, scope: !10066)
!10072 = distinct !DISubprogram(name: "zbus_chan_rm_obs", scope: !1560, file: !1560, line: 72, type: !9884, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10073)
!10073 = !{!10074, !10075, !10076, !10077, !10078, !10079, !10080}
!10074 = !DILocalVariable(name: "chan", arg: 1, scope: !10072, file: !1560, line: 72, type: !1454)
!10075 = !DILocalVariable(name: "obs", arg: 2, scope: !10072, file: !1560, line: 72, type: !1408)
!10076 = !DILocalVariable(name: "timeout", arg: 3, scope: !10072, file: !1560, line: 73, type: !9886)
!10077 = !DILocalVariable(name: "err", scope: !10072, file: !1560, line: 75, type: !103)
!10078 = !DILocalVariable(name: "obs_nd", scope: !10072, file: !1560, line: 76, type: !1398)
!10079 = !DILocalVariable(name: "tmp", scope: !10072, file: !1560, line: 76, type: !1398)
!10080 = !DILocalVariable(name: "prev_obs_nd", scope: !10072, file: !1560, line: 77, type: !1398)
!10081 = !DILocation(line: 0, scope: !10072)
!10082 = !DILocation(line: 76, column: 2, scope: !10072)
!10083 = !DILocation(line: 79, column: 2, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !1560, line: 79, column: 2)
!10085 = distinct !DILexicalBlock(scope: !10072, file: !1560, line: 79, column: 2)
!10086 = !DILocation(line: 79, column: 2, scope: !10085)
!10087 = !DILocation(line: 79, column: 2, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10084, file: !1560, line: 79, column: 2)
!10089 = !DILocation(line: 80, column: 2, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10091, file: !1560, line: 80, column: 2)
!10091 = distinct !DILexicalBlock(scope: !10072, file: !1560, line: 80, column: 2)
!10092 = !DILocation(line: 80, column: 2, scope: !10091)
!10093 = !DILocation(line: 80, column: 2, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10090, file: !1560, line: 80, column: 2)
!10095 = !DILocation(line: 81, column: 2, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10097, file: !1560, line: 81, column: 2)
!10097 = distinct !DILexicalBlock(scope: !10072, file: !1560, line: 81, column: 2)
!10098 = !DILocation(line: 81, column: 2, scope: !10097)
!10099 = !DILocation(line: 81, column: 2, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10096, file: !1560, line: 81, column: 2)
!10101 = !DILocation(line: 83, column: 27, scope: !10072)
!10102 = !DILocation(line: 83, column: 8, scope: !10072)
!10103 = !DILocation(line: 84, column: 6, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10072, file: !1560, line: 84, column: 6)
!10105 = !DILocation(line: 84, column: 6, scope: !10072)
!10106 = !DILocation(line: 88, column: 2, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10072, file: !1560, line: 88, column: 2)
!10108 = !DILocation(line: 89, column: 15, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !1560, line: 89, column: 7)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !1560, line: 88, column: 80)
!10111 = distinct !DILexicalBlock(scope: !10107, file: !1560, line: 88, column: 2)
!10112 = !DILocation(line: 89, column: 19, scope: !10109)
!10113 = !DILocation(line: 89, column: 7, scope: !10110)
!10114 = !DILocation(line: 88, column: 2, scope: !10111)
!10115 = !DILocation(line: 90, column: 60, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10109, file: !1560, line: 89, column: 27)
!10117 = !DILocation(line: 90, column: 4, scope: !10116)
!10118 = !DILocation(line: 93, column: 45, scope: !10116)
!10119 = !DILocation(line: 93, column: 4, scope: !10116)
!10120 = !DILocation(line: 95, column: 25, scope: !10116)
!10121 = !DILocation(line: 95, column: 4, scope: !10116)
!10122 = !DILocation(line: 97, column: 4, scope: !10116)
!10123 = !DILocation(line: 103, column: 23, scope: !10072)
!10124 = !DILocation(line: 103, column: 2, scope: !10072)
!10125 = !DILocation(line: 105, column: 2, scope: !10072)
!10126 = !DILocation(line: 106, column: 1, scope: !10072)
!10127 = distinct !DISubprogram(name: "sys_slist_remove", scope: !283, file: !283, line: 401, type: !10128, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1395, retainedNodes: !10130)
!10128 = !DISubroutineType(types: !10129)
!10129 = !{null, !1546, !1551, !1551}
!10130 = !{!10131, !10132, !10133}
!10131 = !DILocalVariable(name: "list", arg: 1, scope: !10127, file: !283, line: 401, type: !1546)
!10132 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10127, file: !283, line: 401, type: !1551)
!10133 = !DILocalVariable(name: "node", arg: 3, scope: !10127, file: !283, line: 401, type: !1551)
!10134 = !DILocation(line: 0, scope: !10127)
!10135 = !DILocation(line: 401, column: 1, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10127, file: !283, line: 401, column: 1)
!10137 = !DILocation(line: 0, scope: !10136)
!10138 = !DILocation(line: 401, column: 1, scope: !10127)
!10139 = !DILocation(line: 401, column: 1, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10136, file: !283, line: 401, column: 1)
!10141 = !DILocation(line: 401, column: 1, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10140, file: !283, line: 401, column: 1)
!10143 = !DILocation(line: 401, column: 1, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10142, file: !283, line: 401, column: 1)
!10145 = !DILocation(line: 401, column: 1, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10136, file: !283, line: 401, column: 1)
!10147 = !DILocation(line: 401, column: 1, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10146, file: !283, line: 401, column: 1)
!10149 = !DILocation(line: 401, column: 1, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10148, file: !283, line: 401, column: 1)
!10151 = distinct !DISubprogram(name: "uart_console_init", scope: !1668, file: !1668, line: 588, type: !1612, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !10152)
!10152 = !{!10153}
!10153 = !DILocalVariable(name: "arg", arg: 1, scope: !10151, file: !1668, line: 588, type: !1584)
!10154 = !DILocation(line: 0, scope: !10151)
!10155 = !DILocation(line: 593, column: 7, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10151, file: !1668, line: 593, column: 6)
!10157 = !DILocation(line: 593, column: 6, scope: !10151)
!10158 = !DILocation(line: 597, column: 2, scope: !10151)
!10159 = !DILocation(line: 599, column: 2, scope: !10151)
!10160 = !DILocation(line: 600, column: 1, scope: !10151)
!10161 = distinct !DISubprogram(name: "device_is_ready", scope: !10162, file: !10162, line: 47, type: !10163, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !10165)
!10162 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!10163 = !DISubroutineType(types: !10164)
!10164 = !{!119, !1584}
!10165 = !{!10166}
!10166 = !DILocalVariable(name: "dev", arg: 1, scope: !10161, file: !10162, line: 47, type: !1584)
!10167 = !DILocation(line: 0, scope: !10161)
!10168 = !DILocation(line: 55, column: 2, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10161, file: !10162, line: 55, column: 2)
!10170 = !{i64 2151379792}
!10171 = !DILocation(line: 56, column: 9, scope: !10161)
!10172 = !DILocation(line: 56, column: 2, scope: !10161)
!10173 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1668, file: !1668, line: 573, type: !327, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !2645)
!10174 = !DILocation(line: 576, column: 2, scope: !10173)
!10175 = !DILocation(line: 579, column: 2, scope: !10173)
!10176 = !DILocation(line: 581, column: 1, scope: !10173)
!10177 = distinct !DISubprogram(name: "console_out", scope: !1668, file: !1668, line: 77, type: !782, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !10178)
!10178 = !{!10179}
!10179 = !DILocalVariable(name: "c", arg: 1, scope: !10177, file: !1668, line: 77, type: !103)
!10180 = !DILocation(line: 0, scope: !10177)
!10181 = !DILocation(line: 89, column: 11, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10177, file: !1668, line: 89, column: 6)
!10183 = !DILocation(line: 89, column: 6, scope: !10177)
!10184 = !DILocation(line: 90, column: 3, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10182, file: !1668, line: 89, column: 17)
!10186 = !DILocation(line: 91, column: 2, scope: !10185)
!10187 = !DILocation(line: 92, column: 34, scope: !10177)
!10188 = !DILocation(line: 92, column: 2, scope: !10177)
!10189 = !DILocation(line: 94, column: 2, scope: !10177)
!10190 = distinct !DISubprogram(name: "uart_poll_out", scope: !10191, file: !10191, line: 95, type: !1608, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !10192)
!10191 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/runtime_obs_registration")
!10192 = !{!10193, !10194}
!10193 = !DILocalVariable(name: "dev", arg: 1, scope: !10190, file: !10191, line: 95, type: !1584)
!10194 = !DILocalVariable(name: "out_char", arg: 2, scope: !10190, file: !10191, line: 95, type: !165)
!10195 = !DILocation(line: 0, scope: !10190)
!10196 = !DILocation(line: 105, column: 2, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10190, file: !10191, line: 105, column: 2)
!10198 = !{i64 2151463037}
!10199 = !DILocation(line: 106, column: 2, scope: !10190)
!10200 = !DILocation(line: 107, column: 1, scope: !10190)
!10201 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1578, file: !1578, line: 574, type: !1608, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !10202)
!10202 = !{!10203, !10204, !10205}
!10203 = !DILocalVariable(name: "dev", arg: 1, scope: !10201, file: !1578, line: 574, type: !1584)
!10204 = !DILocalVariable(name: "out_char", arg: 2, scope: !10201, file: !1578, line: 575, type: !165)
!10205 = !DILocalVariable(name: "api", scope: !10201, file: !1578, line: 577, type: !1575)
!10206 = !DILocation(line: 0, scope: !10201)
!10207 = !DILocation(line: 578, column: 40, scope: !10201)
!10208 = !DILocation(line: 580, column: 7, scope: !10201)
!10209 = !DILocation(line: 580, column: 2, scope: !10201)
!10210 = !DILocation(line: 581, column: 1, scope: !10201)
!10211 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !1587, file: !1587, line: 730, type: !10163, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !10212)
!10212 = !{!10213}
!10213 = !DILocalVariable(name: "dev", arg: 1, scope: !10211, file: !1587, line: 730, type: !1584)
!10214 = !DILocation(line: 0, scope: !10211)
!10215 = !DILocation(line: 732, column: 9, scope: !10211)
!10216 = !DILocation(line: 732, column: 2, scope: !10211)
!10217 = distinct !DISubprogram(name: "uart_register_input", scope: !1668, file: !1668, line: 560, type: !10218, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1572, retainedNodes: !10265)
!10218 = !DISubroutineType(types: !10219)
!10219 = !{null, !10220, !10220, !10262}
!10220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10221, size: 32)
!10221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !124, line: 2208, size: 160, elements: !10222)
!10222 = !{!10223}
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10221, file: !124, line: 2209, baseType: !10224, size: 160)
!10224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !124, line: 1709, size: 160, elements: !10225)
!10225 = !{!10226, !10239, !10243}
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10224, file: !124, line: 1710, baseType: !10227, size: 64)
!10227 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10228, line: 46, baseType: !10229)
!10228 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10228, line: 41, size: 64, elements: !10230)
!10230 = !{!10231, !10238}
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10229, file: !10228, line: 42, baseType: !10232, size: 32)
!10232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10233, size: 32)
!10233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10228, line: 39, baseType: !10234)
!10234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10228, line: 35, size: 32, elements: !10235)
!10235 = !{!10236}
!10236 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10234, file: !10228, line: 36, baseType: !10237, size: 32)
!10237 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10228, line: 32, baseType: !108)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10229, file: !10228, line: 43, baseType: !10232, size: 32, offset: 32)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10224, file: !124, line: 1711, baseType: !10240, size: 32, offset: 64)
!10240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !10241)
!10241 = !{!10242}
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10240, file: !149, line: 52, baseType: !22, size: 32)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10224, file: !124, line: 1712, baseType: !10244, size: 64, offset: 96)
!10244 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !10245)
!10245 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !10246)
!10246 = !{!10247}
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10245, file: !128, line: 232, baseType: !10248, size: 64)
!10248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !10249)
!10249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !10250)
!10250 = !{!10251, !10257}
!10251 = !DIDerivedType(tag: DW_TAG_member, scope: !10249, file: !133, line: 38, baseType: !10252, size: 32)
!10252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10249, file: !133, line: 38, size: 32, elements: !10253)
!10253 = !{!10254, !10256}
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10252, file: !133, line: 39, baseType: !10255, size: 32)
!10255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10249, size: 32)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10252, file: !133, line: 40, baseType: !10255, size: 32)
!10257 = !DIDerivedType(tag: DW_TAG_member, scope: !10249, file: !133, line: 42, baseType: !10258, size: 32, offset: 32)
!10258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10249, file: !133, line: 42, size: 32, elements: !10259)
!10259 = !{!10260, !10261}
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10258, file: !133, line: 43, baseType: !10255, size: 32)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10258, file: !133, line: 44, baseType: !10255, size: 32)
!10262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10263, size: 32)
!10263 = !DISubroutineType(types: !10264)
!10264 = !{!164, !157, !164}
!10265 = !{!10266, !10267, !10268}
!10266 = !DILocalVariable(name: "avail", arg: 1, scope: !10217, file: !1668, line: 560, type: !10220)
!10267 = !DILocalVariable(name: "lines", arg: 2, scope: !10217, file: !1668, line: 560, type: !10220)
!10268 = !DILocalVariable(name: "completion", arg: 3, scope: !10217, file: !1668, line: 561, type: !10262)
!10269 = !DILocation(line: 0, scope: !10217)
!10270 = !DILocation(line: 566, column: 1, scope: !10217)
!10271 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1780, file: !1780, line: 40, type: !1703, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10272)
!10272 = !{!10273, !10274, !10275, !10276, !10278, !10279, !10284, !10285}
!10273 = !DILocalVariable(name: "port", arg: 1, scope: !10271, file: !1780, line: 40, type: !1705)
!10274 = !DILocalVariable(name: "pin", arg: 2, scope: !10271, file: !1780, line: 40, type: !1720)
!10275 = !DILocalVariable(name: "flags", arg: 3, scope: !10271, file: !1780, line: 41, type: !1721)
!10276 = !DILocalVariable(name: "config", scope: !10271, file: !1780, line: 43, type: !10277)
!10277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!10278 = !DILocalVariable(name: "base", scope: !10271, file: !1780, line: 44, type: !1817)
!10279 = !DILocalVariable(name: "pin_cfg", scope: !10271, file: !1780, line: 52, type: !10280)
!10280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1833, line: 59, size: 160, elements: !10281)
!10281 = !{!10282, !10283}
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10280, file: !1833, line: 60, baseType: !1832, size: 128)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10280, file: !1833, line: 61, baseType: !108, size: 32, offset: 128)
!10284 = !DILocalVariable(name: "gpio_cfg_reg", scope: !10271, file: !1780, line: 54, type: !1198)
!10285 = !DILocalVariable(name: "reg", scope: !10271, file: !1780, line: 56, type: !108)
!10286 = !DILocation(line: 0, scope: !10271)
!10287 = !DILocation(line: 43, column: 47, scope: !10271)
!10288 = !DILocation(line: 44, column: 28, scope: !10271)
!10289 = !DILocation(line: 46, column: 35, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10271, file: !1780, line: 46, column: 6)
!10291 = !DILocation(line: 50, column: 2, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !1780, line: 50, column: 2)
!10293 = distinct !DILexicalBlock(scope: !10271, file: !1780, line: 50, column: 2)
!10294 = !DILocation(line: 50, column: 2, scope: !10293)
!10295 = !DILocation(line: 50, column: 2, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10292, file: !1780, line: 50, column: 2)
!10297 = !DILocation(line: 52, column: 2, scope: !10271)
!10298 = !DILocation(line: 52, column: 25, scope: !10271)
!10299 = !DILocation(line: 55, column: 32, scope: !10271)
!10300 = !DILocation(line: 55, column: 47, scope: !10271)
!10301 = !DILocation(line: 55, column: 3, scope: !10271)
!10302 = !DILocation(line: 56, column: 17, scope: !10271)
!10303 = !DILocation(line: 66, column: 13, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10271, file: !1780, line: 66, column: 6)
!10305 = !DILocation(line: 66, column: 34, scope: !10304)
!10306 = !DILocation(line: 66, column: 6, scope: !10271)
!10307 = !DILocation(line: 70, column: 36, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10271, file: !1780, line: 70, column: 6)
!10309 = !DILocation(line: 70, column: 14, scope: !10308)
!10310 = !DILocation(line: 70, column: 30, scope: !10308)
!10311 = !DILocation(line: 72, column: 7, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10308, file: !1780, line: 70, column: 72)
!10313 = !DILocation(line: 73, column: 8, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !1780, line: 72, column: 38)
!10315 = distinct !DILexicalBlock(scope: !10312, file: !1780, line: 72, column: 7)
!10316 = !DILocation(line: 74, column: 3, scope: !10314)
!10317 = !DILocation(line: 75, column: 8, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10315, file: !1780, line: 74, column: 10)
!10319 = !DILocation(line: 79, column: 7, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10308, file: !1780, line: 77, column: 9)
!10321 = !DILocation(line: 0, scope: !10308)
!10322 = !DILocation(line: 84, column: 27, scope: !10271)
!10323 = !DILocation(line: 84, column: 26, scope: !10271)
!10324 = !DILocation(line: 84, column: 2, scope: !10271)
!10325 = !DILocation(line: 86, column: 10, scope: !10271)
!10326 = !DILocation(line: 86, column: 25, scope: !10271)
!10327 = !DILocation(line: 87, column: 2, scope: !10271)
!10328 = !DILocation(line: 98, column: 2, scope: !10271)
!10329 = !DILocation(line: 99, column: 2, scope: !10271)
!10330 = !DILocation(line: 101, column: 6, scope: !10271)
!10331 = !DILocation(line: 103, column: 14, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10333, file: !1780, line: 103, column: 7)
!10333 = distinct !DILexicalBlock(scope: !10334, file: !1780, line: 101, column: 35)
!10334 = distinct !DILexicalBlock(scope: !10271, file: !1780, line: 101, column: 6)
!10335 = !DILocation(line: 103, column: 38, scope: !10332)
!10336 = !DILocation(line: 103, column: 7, scope: !10333)
!10337 = !DILocation(line: 105, column: 21, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10332, file: !1780, line: 105, column: 14)
!10339 = !DILocation(line: 105, column: 46, scope: !10338)
!10340 = !DILocation(line: 105, column: 14, scope: !10332)
!10341 = !DILocation(line: 0, scope: !10332)
!10342 = !DILocation(line: 110, column: 3, scope: !10333)
!10343 = !DILocation(line: 111, column: 2, scope: !10333)
!10344 = !DILocation(line: 113, column: 3, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10334, file: !1780, line: 111, column: 9)
!10346 = !DILocation(line: 117, column: 1, scope: !10271)
!10347 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1780, file: !1780, line: 119, type: !10348, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10350)
!10348 = !DISubroutineType(types: !10349)
!10349 = !{!103, !1705, !2102}
!10350 = !{!10351, !10352, !10353, !10354}
!10351 = !DILocalVariable(name: "port", arg: 1, scope: !10347, file: !1780, line: 119, type: !1705)
!10352 = !DILocalVariable(name: "value", arg: 2, scope: !10347, file: !1780, line: 119, type: !2102)
!10353 = !DILocalVariable(name: "config", scope: !10347, file: !1780, line: 121, type: !10277)
!10354 = !DILocalVariable(name: "base", scope: !10347, file: !1780, line: 122, type: !1817)
!10355 = !DILocation(line: 0, scope: !10347)
!10356 = !DILocation(line: 121, column: 47, scope: !10347)
!10357 = !DILocation(line: 122, column: 28, scope: !10347)
!10358 = !DILocation(line: 124, column: 11, scope: !10347)
!10359 = !DILocation(line: 124, column: 9, scope: !10347)
!10360 = !DILocation(line: 126, column: 2, scope: !10347)
!10361 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1780, file: !1780, line: 129, type: !1730, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10362)
!10362 = !{!10363, !10364, !10365, !10366, !10367}
!10363 = !DILocalVariable(name: "port", arg: 1, scope: !10361, file: !1780, line: 129, type: !1705)
!10364 = !DILocalVariable(name: "mask", arg: 2, scope: !10361, file: !1780, line: 130, type: !1732)
!10365 = !DILocalVariable(name: "value", arg: 3, scope: !10361, file: !1780, line: 131, type: !1727)
!10366 = !DILocalVariable(name: "config", scope: !10361, file: !1780, line: 133, type: !10277)
!10367 = !DILocalVariable(name: "base", scope: !10361, file: !1780, line: 134, type: !1817)
!10368 = !DILocation(line: 0, scope: !10361)
!10369 = !DILocation(line: 133, column: 47, scope: !10361)
!10370 = !DILocation(line: 134, column: 28, scope: !10361)
!10371 = !DILocation(line: 137, column: 5, scope: !10361)
!10372 = !DILocation(line: 137, column: 32, scope: !10361)
!10373 = !DILocation(line: 137, column: 30, scope: !10361)
!10374 = !DILocation(line: 137, column: 48, scope: !10361)
!10375 = !DILocation(line: 137, column: 39, scope: !10361)
!10376 = !DILocation(line: 136, column: 2, scope: !10361)
!10377 = !DILocation(line: 139, column: 2, scope: !10361)
!10378 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1780, file: !1780, line: 142, type: !1735, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10379)
!10379 = !{!10380, !10381, !10382, !10383}
!10380 = !DILocalVariable(name: "port", arg: 1, scope: !10378, file: !1780, line: 142, type: !1705)
!10381 = !DILocalVariable(name: "pins", arg: 2, scope: !10378, file: !1780, line: 143, type: !1732)
!10382 = !DILocalVariable(name: "config", scope: !10378, file: !1780, line: 145, type: !10277)
!10383 = !DILocalVariable(name: "base", scope: !10378, file: !1780, line: 146, type: !1817)
!10384 = !DILocation(line: 0, scope: !10378)
!10385 = !DILocation(line: 145, column: 47, scope: !10378)
!10386 = !DILocation(line: 146, column: 28, scope: !10378)
!10387 = !DILocation(line: 148, column: 29, scope: !10378)
!10388 = !DILocation(line: 148, column: 54, scope: !10378)
!10389 = !DILocation(line: 148, column: 2, scope: !10378)
!10390 = !DILocation(line: 150, column: 2, scope: !10378)
!10391 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1780, file: !1780, line: 153, type: !1735, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10392)
!10392 = !{!10393, !10394, !10395, !10396}
!10393 = !DILocalVariable(name: "port", arg: 1, scope: !10391, file: !1780, line: 153, type: !1705)
!10394 = !DILocalVariable(name: "pins", arg: 2, scope: !10391, file: !1780, line: 154, type: !1732)
!10395 = !DILocalVariable(name: "config", scope: !10391, file: !1780, line: 156, type: !10277)
!10396 = !DILocalVariable(name: "base", scope: !10391, file: !1780, line: 157, type: !1817)
!10397 = !DILocation(line: 0, scope: !10391)
!10398 = !DILocation(line: 156, column: 47, scope: !10391)
!10399 = !DILocation(line: 157, column: 28, scope: !10391)
!10400 = !DILocation(line: 159, column: 29, scope: !10391)
!10401 = !DILocation(line: 159, column: 56, scope: !10391)
!10402 = !DILocation(line: 159, column: 54, scope: !10391)
!10403 = !DILocation(line: 159, column: 2, scope: !10391)
!10404 = !DILocation(line: 161, column: 2, scope: !10391)
!10405 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1780, file: !1780, line: 164, type: !1735, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10406)
!10406 = !{!10407, !10408, !10409, !10410}
!10407 = !DILocalVariable(name: "port", arg: 1, scope: !10405, file: !1780, line: 164, type: !1705)
!10408 = !DILocalVariable(name: "pins", arg: 2, scope: !10405, file: !1780, line: 165, type: !1732)
!10409 = !DILocalVariable(name: "config", scope: !10405, file: !1780, line: 167, type: !10277)
!10410 = !DILocalVariable(name: "base", scope: !10405, file: !1780, line: 168, type: !1817)
!10411 = !DILocation(line: 0, scope: !10405)
!10412 = !DILocation(line: 167, column: 47, scope: !10405)
!10413 = !DILocation(line: 168, column: 28, scope: !10405)
!10414 = !DILocation(line: 170, column: 29, scope: !10405)
!10415 = !DILocation(line: 170, column: 54, scope: !10405)
!10416 = !DILocation(line: 170, column: 2, scope: !10405)
!10417 = !DILocation(line: 172, column: 2, scope: !10405)
!10418 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1780, file: !1780, line: 175, type: !1741, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10419)
!10419 = !{!10420, !10421, !10422, !10423, !10424, !10425, !10426, !10427, !10428, !10429}
!10420 = !DILocalVariable(name: "port", arg: 1, scope: !10418, file: !1780, line: 175, type: !1705)
!10421 = !DILocalVariable(name: "pin", arg: 2, scope: !10418, file: !1780, line: 176, type: !1720)
!10422 = !DILocalVariable(name: "mode", arg: 3, scope: !10418, file: !1780, line: 177, type: !1680)
!10423 = !DILocalVariable(name: "trig", arg: 4, scope: !10418, file: !1780, line: 178, type: !1686)
!10424 = !DILocalVariable(name: "config", scope: !10418, file: !1780, line: 180, type: !10277)
!10425 = !DILocalVariable(name: "base", scope: !10418, file: !1780, line: 181, type: !1817)
!10426 = !DILocalVariable(name: "icr_reg", scope: !10418, file: !1780, line: 182, type: !1198)
!10427 = !DILocalVariable(name: "key", scope: !10418, file: !1780, line: 183, type: !32)
!10428 = !DILocalVariable(name: "icr_val", scope: !10418, file: !1780, line: 184, type: !108)
!10429 = !DILocalVariable(name: "shift", scope: !10418, file: !1780, line: 185, type: !164)
!10430 = !DILocation(line: 0, scope: !10418)
!10431 = !DILocation(line: 180, column: 47, scope: !10418)
!10432 = !DILocation(line: 181, column: 28, scope: !10418)
!10433 = !DILocation(line: 187, column: 14, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10418, file: !1780, line: 187, column: 6)
!10435 = !DILocation(line: 187, column: 21, scope: !10434)
!10436 = !DILocation(line: 187, column: 19, scope: !10434)
!10437 = !DILocation(line: 187, column: 31, scope: !10434)
!10438 = !DILocation(line: 188, column: 6, scope: !10434)
!10439 = !DILocation(line: 193, column: 12, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10418, file: !1780, line: 193, column: 6)
!10441 = !DILocation(line: 193, column: 35, scope: !10440)
!10442 = !DILocation(line: 195, column: 42, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10440, file: !1780, line: 195, column: 13)
!10444 = !DILocation(line: 198, column: 19, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10443, file: !1780, line: 198, column: 13)
!10446 = !DILocation(line: 198, column: 43, scope: !10445)
!10447 = !DILocation(line: 0, scope: !10440)
!10448 = !DILocation(line: 205, column: 10, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10418, file: !1780, line: 205, column: 6)
!10450 = !DILocation(line: 205, column: 6, scope: !10418)
!10451 = !DILocation(line: 206, column: 14, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10449, file: !1780, line: 205, column: 17)
!10453 = !DILocation(line: 207, column: 21, scope: !10452)
!10454 = !DILocation(line: 208, column: 2, scope: !10452)
!10455 = !DILocation(line: 208, column: 17, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10449, file: !1780, line: 208, column: 13)
!10457 = !DILocation(line: 208, column: 13, scope: !10449)
!10458 = !DILocation(line: 209, column: 14, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10456, file: !1780, line: 208, column: 24)
!10460 = !DILocation(line: 210, column: 21, scope: !10459)
!10461 = !DILocation(line: 0, scope: !10449)
!10462 = !DILocation(line: 55, column: 2, scope: !10463, inlinedAt: !10469)
!10463 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10466)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!32}
!10466 = !{!10467, !10468}
!10467 = !DILocalVariable(name: "key", scope: !10463, file: !8072, line: 44, type: !32)
!10468 = !DILocalVariable(name: "tmp", scope: !10463, file: !8072, line: 53, type: !32)
!10469 = distinct !DILocation(line: 215, column: 8, scope: !10418)
!10470 = !{i64 3055216}
!10471 = !DILocation(line: 0, scope: !10463, inlinedAt: !10469)
!10472 = !DILocation(line: 217, column: 14, scope: !10418)
!10473 = !DILocation(line: 217, column: 33, scope: !10418)
!10474 = !DILocation(line: 217, column: 30, scope: !10418)
!10475 = !DILocation(line: 217, column: 25, scope: !10418)
!10476 = !DILocation(line: 217, column: 23, scope: !10418)
!10477 = !DILocation(line: 217, column: 52, scope: !10418)
!10478 = !DILocation(line: 217, column: 41, scope: !10418)
!10479 = !DILocation(line: 217, column: 11, scope: !10418)
!10480 = !DILocation(line: 219, column: 2, scope: !10418)
!10481 = !DILocation(line: 220, column: 2, scope: !10418)
!10482 = !DILocation(line: 221, column: 2, scope: !10418)
!10483 = !DILocalVariable(name: "key", arg: 1, scope: !10484, file: !8072, line: 84, type: !32)
!10484 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10485)
!10485 = !{!10483}
!10486 = !DILocation(line: 0, scope: !10484, inlinedAt: !10487)
!10487 = distinct !DILocation(line: 223, column: 2, scope: !10418)
!10488 = !DILocation(line: 95, column: 2, scope: !10484, inlinedAt: !10487)
!10489 = !{i64 3056033}
!10490 = !DILocation(line: 225, column: 2, scope: !10418)
!10491 = !DILocation(line: 226, column: 1, scope: !10418)
!10492 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1780, file: !1780, line: 228, type: !1745, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10493)
!10493 = !{!10494, !10495, !10496, !10497}
!10494 = !DILocalVariable(name: "port", arg: 1, scope: !10492, file: !1780, line: 228, type: !1705)
!10495 = !DILocalVariable(name: "cb", arg: 2, scope: !10492, file: !1780, line: 229, type: !1747)
!10496 = !DILocalVariable(name: "set", arg: 3, scope: !10492, file: !1780, line: 229, type: !119)
!10497 = !DILocalVariable(name: "data", scope: !10492, file: !1780, line: 231, type: !10498)
!10498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!10499 = !DILocation(line: 0, scope: !10492)
!10500 = !DILocation(line: 231, column: 37, scope: !10492)
!10501 = !DILocation(line: 233, column: 37, scope: !10492)
!10502 = !DILocation(line: 233, column: 9, scope: !10492)
!10503 = !DILocation(line: 233, column: 2, scope: !10492)
!10504 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10505, file: !10505, line: 38, type: !10506, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10509)
!10505 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10506 = !DISubroutineType(types: !10507)
!10507 = !{!103, !10508, !1747, !119}
!10508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!10509 = !{!10510, !10511, !10512}
!10510 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10504, file: !10505, line: 38, type: !10508)
!10511 = !DILocalVariable(name: "callback", arg: 2, scope: !10504, file: !10505, line: 39, type: !1747)
!10512 = !DILocalVariable(name: "set", arg: 3, scope: !10504, file: !10505, line: 40, type: !119)
!10513 = !DILocation(line: 0, scope: !10504)
!10514 = !DILocation(line: 42, column: 2, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !10505, line: 42, column: 2)
!10516 = distinct !DILexicalBlock(scope: !10504, file: !10505, line: 42, column: 2)
!10517 = !DILocation(line: 42, column: 2, scope: !10516)
!10518 = !DILocation(line: 42, column: 2, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10515, file: !10505, line: 42, column: 2)
!10520 = !DILocation(line: 43, column: 2, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !10505, line: 43, column: 2)
!10522 = distinct !DILexicalBlock(scope: !10504, file: !10505, line: 43, column: 2)
!10523 = !DILocation(line: 43, column: 2, scope: !10522)
!10524 = !DILocation(line: 43, column: 2, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10521, file: !10505, line: 43, column: 2)
!10526 = !DILocation(line: 45, column: 7, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10504, file: !10505, line: 45, column: 6)
!10528 = !DILocation(line: 45, column: 6, scope: !10504)
!10529 = !DILocation(line: 46, column: 56, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !10505, line: 46, column: 7)
!10531 = distinct !DILexicalBlock(scope: !10527, file: !10505, line: 45, column: 38)
!10532 = !DILocation(line: 46, column: 8, scope: !10530)
!10533 = !DILocation(line: 46, column: 7, scope: !10531)
!10534 = !DILocation(line: 51, column: 13, scope: !10527)
!10535 = !DILocation(line: 56, column: 43, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10537, file: !10505, line: 55, column: 11)
!10537 = distinct !DILexicalBlock(scope: !10504, file: !10505, line: 55, column: 6)
!10538 = !DILocation(line: 56, column: 3, scope: !10536)
!10539 = !DILocation(line: 57, column: 2, scope: !10536)
!10540 = !DILocation(line: 60, column: 1, scope: !10504)
!10541 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !283, file: !283, line: 261, type: !10542, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10544)
!10542 = !DISubroutineType(types: !10543)
!10543 = !{!119, !10508}
!10544 = !{!10545}
!10545 = !DILocalVariable(name: "list", arg: 1, scope: !10541, file: !283, line: 261, type: !10508)
!10546 = !DILocation(line: 0, scope: !10541)
!10547 = !DILocation(line: 261, column: 1, scope: !10541)
!10548 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !283, file: !283, line: 417, type: !10549, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10551)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{!119, !10508, !1806}
!10551 = !{!10552, !10553, !10554, !10555}
!10552 = !DILocalVariable(name: "list", arg: 1, scope: !10548, file: !283, line: 417, type: !10508)
!10553 = !DILocalVariable(name: "node", arg: 2, scope: !10548, file: !283, line: 417, type: !1806)
!10554 = !DILocalVariable(name: "prev", scope: !10548, file: !283, line: 417, type: !1806)
!10555 = !DILocalVariable(name: "test", scope: !10548, file: !283, line: 417, type: !1806)
!10556 = !DILocation(line: 0, scope: !10548)
!10557 = !DILocation(line: 417, column: 1, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10548, file: !283, line: 417, column: 1)
!10559 = !DILocation(line: 417, column: 1, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10558, file: !283, line: 417, column: 1)
!10561 = !DILocation(line: 417, column: 1, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !283, line: 417, column: 1)
!10563 = distinct !DILexicalBlock(scope: !10560, file: !283, line: 417, column: 1)
!10564 = !DILocation(line: 417, column: 1, scope: !10563)
!10565 = distinct !{!10565, !10557, !10557}
!10566 = !DILocation(line: 417, column: 1, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10562, file: !283, line: 417, column: 1)
!10568 = !DILocation(line: 417, column: 1, scope: !10548)
!10569 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !283, file: !283, line: 298, type: !10570, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10572)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{null, !10508, !1806}
!10572 = !{!10573, !10574}
!10573 = !DILocalVariable(name: "list", arg: 1, scope: !10569, file: !283, line: 298, type: !10508)
!10574 = !DILocalVariable(name: "node", arg: 2, scope: !10569, file: !283, line: 298, type: !1806)
!10575 = !DILocation(line: 0, scope: !10569)
!10576 = !DILocation(line: 298, column: 1, scope: !10569)
!10577 = !DILocation(line: 298, column: 1, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10569, file: !283, line: 298, column: 1)
!10579 = !DILocation(line: 298, column: 1, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10578, file: !283, line: 298, column: 1)
!10581 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !283, file: !283, line: 231, type: !10582, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10584)
!10582 = !DISubroutineType(types: !10583)
!10583 = !{!1806, !10508}
!10584 = !{!10585}
!10585 = !DILocalVariable(name: "list", arg: 1, scope: !10581, file: !283, line: 231, type: !10508)
!10586 = !DILocation(line: 0, scope: !10581)
!10587 = !DILocation(line: 233, column: 15, scope: !10581)
!10588 = !DILocation(line: 233, column: 2, scope: !10581)
!10589 = distinct !DISubprogram(name: "z_snode_next_set", scope: !283, file: !283, line: 209, type: !10590, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10592)
!10590 = !DISubroutineType(types: !10591)
!10591 = !{null, !1806, !1806}
!10592 = !{!10593, !10594}
!10593 = !DILocalVariable(name: "parent", arg: 1, scope: !10589, file: !283, line: 209, type: !1806)
!10594 = !DILocalVariable(name: "child", arg: 2, scope: !10589, file: !283, line: 209, type: !1806)
!10595 = !DILocation(line: 0, scope: !10589)
!10596 = !DILocation(line: 211, column: 10, scope: !10589)
!10597 = !DILocation(line: 211, column: 15, scope: !10589)
!10598 = !DILocation(line: 212, column: 1, scope: !10589)
!10599 = distinct !DISubprogram(name: "z_slist_head_set", scope: !283, file: !283, line: 214, type: !10570, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10600)
!10600 = !{!10601, !10602}
!10601 = !DILocalVariable(name: "list", arg: 1, scope: !10599, file: !283, line: 214, type: !10508)
!10602 = !DILocalVariable(name: "node", arg: 2, scope: !10599, file: !283, line: 214, type: !1806)
!10603 = !DILocation(line: 0, scope: !10599)
!10604 = !DILocation(line: 216, column: 8, scope: !10599)
!10605 = !DILocation(line: 216, column: 13, scope: !10599)
!10606 = !DILocation(line: 217, column: 1, scope: !10599)
!10607 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !283, file: !283, line: 243, type: !10582, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10608)
!10608 = !{!10609}
!10609 = !DILocalVariable(name: "list", arg: 1, scope: !10607, file: !283, line: 243, type: !10508)
!10610 = !DILocation(line: 0, scope: !10607)
!10611 = !DILocation(line: 245, column: 15, scope: !10607)
!10612 = !DILocation(line: 245, column: 2, scope: !10607)
!10613 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !283, file: !283, line: 219, type: !10570, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10614)
!10614 = !{!10615, !10616}
!10615 = !DILocalVariable(name: "list", arg: 1, scope: !10613, file: !283, line: 219, type: !10508)
!10616 = !DILocalVariable(name: "node", arg: 2, scope: !10613, file: !283, line: 219, type: !1806)
!10617 = !DILocation(line: 0, scope: !10613)
!10618 = !DILocation(line: 221, column: 8, scope: !10613)
!10619 = !DILocation(line: 221, column: 13, scope: !10613)
!10620 = !DILocation(line: 222, column: 1, scope: !10613)
!10621 = distinct !DISubprogram(name: "sys_slist_remove", scope: !283, file: !283, line: 401, type: !10622, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10624)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{null, !10508, !1806, !1806}
!10624 = !{!10625, !10626, !10627}
!10625 = !DILocalVariable(name: "list", arg: 1, scope: !10621, file: !283, line: 401, type: !10508)
!10626 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10621, file: !283, line: 401, type: !1806)
!10627 = !DILocalVariable(name: "node", arg: 3, scope: !10621, file: !283, line: 401, type: !1806)
!10628 = !DILocation(line: 0, scope: !10621)
!10629 = !DILocation(line: 401, column: 1, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10621, file: !283, line: 401, column: 1)
!10631 = !DILocation(line: 0, scope: !10630)
!10632 = !DILocation(line: 401, column: 1, scope: !10621)
!10633 = !DILocation(line: 401, column: 1, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10630, file: !283, line: 401, column: 1)
!10635 = !DILocation(line: 401, column: 1, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10634, file: !283, line: 401, column: 1)
!10637 = !DILocation(line: 401, column: 1, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10636, file: !283, line: 401, column: 1)
!10639 = !DILocation(line: 401, column: 1, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10630, file: !283, line: 401, column: 1)
!10641 = !DILocation(line: 401, column: 1, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10640, file: !283, line: 401, column: 1)
!10643 = !DILocation(line: 401, column: 1, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10642, file: !283, line: 401, column: 1)
!10645 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !283, file: !283, line: 285, type: !10646, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10648)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{!1806, !1806}
!10648 = !{!10649}
!10649 = !DILocalVariable(name: "node", arg: 1, scope: !10645, file: !283, line: 285, type: !1806)
!10650 = !DILocation(line: 0, scope: !10645)
!10651 = !DILocation(line: 285, column: 1, scope: !10645)
!10652 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !283, file: !283, line: 274, type: !10646, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10653)
!10653 = !{!10654}
!10654 = !DILocalVariable(name: "node", arg: 1, scope: !10652, file: !283, line: 274, type: !1806)
!10655 = !DILocation(line: 0, scope: !10652)
!10656 = !DILocation(line: 274, column: 1, scope: !10652)
!10657 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !283, file: !283, line: 204, type: !10646, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10658)
!10658 = !{!10659}
!10659 = !DILocalVariable(name: "node", arg: 1, scope: !10657, file: !283, line: 204, type: !1806)
!10660 = !DILocation(line: 0, scope: !10657)
!10661 = !DILocation(line: 206, column: 15, scope: !10657)
!10662 = !DILocation(line: 206, column: 2, scope: !10657)
!10663 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !1692, file: !1692, line: 131, type: !10664, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10666)
!10664 = !DISubroutineType(types: !10665)
!10665 = !{!108, !1817}
!10666 = !{!10667}
!10667 = !DILocalVariable(name: "base", arg: 1, scope: !10663, file: !1692, line: 131, type: !1817)
!10668 = !DILocation(line: 0, scope: !10663)
!10669 = !DILocation(line: 133, column: 12, scope: !10663)
!10670 = !DILocation(line: 133, column: 5, scope: !10663)
!10671 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !1692, file: !1692, line: 178, type: !10672, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10674)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{null, !1817, !108}
!10674 = !{!10675, !10676}
!10675 = !DILocalVariable(name: "base", arg: 1, scope: !10671, file: !1692, line: 178, type: !1817)
!10676 = !DILocalVariable(name: "portVal", arg: 2, scope: !10671, file: !1692, line: 178, type: !108)
!10677 = !DILocation(line: 0, scope: !10671)
!10678 = !DILocation(line: 180, column: 5, scope: !10671)
!10679 = !DILocation(line: 180, column: 23, scope: !10671)
!10680 = !DILocation(line: 181, column: 1, scope: !10671)
!10681 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1780, file: !1780, line: 236, type: !10682, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10684)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{null, !1705}
!10684 = !{!10685, !10686, !10687, !10688}
!10685 = !DILocalVariable(name: "port", arg: 1, scope: !10681, file: !1780, line: 236, type: !1705)
!10686 = !DILocalVariable(name: "config", scope: !10681, file: !1780, line: 238, type: !10277)
!10687 = !DILocalVariable(name: "data", scope: !10681, file: !1780, line: 239, type: !10498)
!10688 = !DILocalVariable(name: "int_status", scope: !10681, file: !1780, line: 240, type: !108)
!10689 = !DILocation(line: 0, scope: !10681)
!10690 = !DILocation(line: 238, column: 47, scope: !10681)
!10691 = !DILocation(line: 239, column: 37, scope: !10681)
!10692 = !DILocation(line: 242, column: 23, scope: !10681)
!10693 = !DILocation(line: 242, column: 29, scope: !10681)
!10694 = !DILocation(line: 244, column: 20, scope: !10681)
!10695 = !DILocation(line: 246, column: 29, scope: !10681)
!10696 = !DILocation(line: 246, column: 2, scope: !10681)
!10697 = !DILocation(line: 247, column: 1, scope: !10681)
!10698 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10505, file: !10505, line: 69, type: !10699, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1677, retainedNodes: !10701)
!10699 = !DISubroutineType(types: !10700)
!10700 = !{null, !10508, !1705, !108}
!10701 = !{!10702, !10703, !10704, !10705, !10706}
!10702 = !DILocalVariable(name: "list", arg: 1, scope: !10698, file: !10505, line: 69, type: !10508)
!10703 = !DILocalVariable(name: "port", arg: 2, scope: !10698, file: !10505, line: 70, type: !1705)
!10704 = !DILocalVariable(name: "pins", arg: 3, scope: !10698, file: !10505, line: 71, type: !108)
!10705 = !DILocalVariable(name: "cb", scope: !10698, file: !10505, line: 73, type: !1747)
!10706 = !DILocalVariable(name: "tmp", scope: !10698, file: !10505, line: 73, type: !1747)
!10707 = !DILocation(line: 0, scope: !10698)
!10708 = !DILocation(line: 75, column: 2, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10698, file: !10505, line: 75, column: 2)
!10710 = !DILocation(line: 0, scope: !10709)
!10711 = !DILocation(line: 76, column: 11, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !10505, line: 76, column: 7)
!10713 = distinct !DILexicalBlock(scope: !10714, file: !10505, line: 75, column: 57)
!10714 = distinct !DILexicalBlock(scope: !10709, file: !10505, line: 75, column: 2)
!10715 = !DILocation(line: 76, column: 20, scope: !10712)
!10716 = !DILocation(line: 76, column: 7, scope: !10713)
!10717 = !DILocation(line: 77, column: 4, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !10505, line: 77, column: 4)
!10719 = distinct !DILexicalBlock(scope: !10720, file: !10505, line: 77, column: 4)
!10720 = distinct !DILexicalBlock(scope: !10712, file: !10505, line: 76, column: 28)
!10721 = !DILocation(line: 77, column: 4, scope: !10719)
!10722 = !DILocation(line: 77, column: 4, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10718, file: !10505, line: 77, column: 4)
!10724 = !DILocation(line: 78, column: 4, scope: !10720)
!10725 = !DILocation(line: 79, column: 3, scope: !10720)
!10726 = !DILocation(line: 75, column: 2, scope: !10714)
!10727 = !DILocation(line: 81, column: 1, scope: !10698)
!10728 = !DILocation(line: 0, scope: !1845)
!10729 = !DILocation(line: 318, column: 1, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !1845, file: !1780, line: 318, column: 1)
!10731 = !DILocation(line: 318, column: 1, scope: !1845)
!10732 = !DILocation(line: 318, column: 1, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !1845, file: !1780, line: 318, column: 1)
!10734 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !2067, file: !2067, line: 114, type: !1965, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10735)
!10735 = !{!10736, !10737, !10738, !10739}
!10736 = !DILocalVariable(name: "dev", arg: 1, scope: !10734, file: !2067, line: 114, type: !1967)
!10737 = !DILocalVariable(name: "c", arg: 2, scope: !10734, file: !2067, line: 114, type: !1605)
!10738 = !DILocalVariable(name: "uart", scope: !10734, file: !2067, line: 116, type: !2038)
!10739 = !DILocalVariable(name: "ret", scope: !10734, file: !2067, line: 117, type: !103)
!10740 = !DILocation(line: 0, scope: !10734)
!10741 = !DILocation(line: 116, column: 20, scope: !10734)
!10742 = !DILocation(line: 119, column: 6, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10734, file: !2067, line: 119, column: 6)
!10744 = !DILocation(line: 119, column: 6, scope: !10734)
!10745 = !DILocation(line: 120, column: 8, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10743, file: !2067, line: 119, column: 55)
!10747 = !DILocation(line: 120, column: 6, scope: !10746)
!10748 = !DILocation(line: 122, column: 7, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10746, file: !2067, line: 122, column: 7)
!10750 = !DILocation(line: 122, column: 7, scope: !10746)
!10751 = !DILocation(line: 123, column: 4, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10749, file: !2067, line: 122, column: 54)
!10753 = !DILocation(line: 124, column: 3, scope: !10752)
!10754 = !DILocation(line: 128, column: 2, scope: !10734)
!10755 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !2067, file: !2067, line: 105, type: !1984, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10756)
!10756 = !{!10757, !10758, !10759}
!10757 = !DILocalVariable(name: "dev", arg: 1, scope: !10755, file: !2067, line: 105, type: !1967)
!10758 = !DILocalVariable(name: "c", arg: 2, scope: !10755, file: !2067, line: 105, type: !165)
!10759 = !DILocalVariable(name: "uart", scope: !10755, file: !2067, line: 107, type: !2038)
!10760 = !DILocation(line: 0, scope: !10755)
!10761 = !DILocation(line: 107, column: 20, scope: !10755)
!10762 = !DILocation(line: 109, column: 2, scope: !10755)
!10763 = !DILocation(line: 109, column: 10, scope: !10755)
!10764 = distinct !{!10764, !10762, !10765}
!10765 = !DILocation(line: 110, column: 2, scope: !10755)
!10766 = !DILocation(line: 111, column: 2, scope: !10755)
!10767 = !DILocation(line: 112, column: 1, scope: !10755)
!10768 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !2067, file: !2067, line: 133, type: !2010, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10769)
!10769 = !{!10770, !10771, !10772, !10773, !10774}
!10770 = !DILocalVariable(name: "dev", arg: 1, scope: !10768, file: !2067, line: 133, type: !1967)
!10771 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10768, file: !2067, line: 134, type: !1636)
!10772 = !DILocalVariable(name: "size", arg: 3, scope: !10768, file: !2067, line: 135, type: !103)
!10773 = !DILocalVariable(name: "uart", scope: !10768, file: !2067, line: 137, type: !2038)
!10774 = !DILocalVariable(name: "num_tx", scope: !10768, file: !2067, line: 138, type: !32)
!10775 = !DILocation(line: 0, scope: !10768)
!10776 = !DILocation(line: 137, column: 20, scope: !10768)
!10777 = !DILocation(line: 140, column: 26, scope: !10768)
!10778 = !DILocation(line: 140, column: 31, scope: !10768)
!10779 = !DILocation(line: 141, column: 6, scope: !10768)
!10780 = !DILocation(line: 140, column: 2, scope: !10768)
!10781 = !DILocation(line: 143, column: 22, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10768, file: !2067, line: 141, column: 51)
!10783 = !DILocation(line: 143, column: 3, scope: !10782)
!10784 = !DILocation(line: 144, column: 9, scope: !10782)
!10785 = distinct !{!10785, !10780, !10786}
!10786 = !DILocation(line: 145, column: 2, scope: !10768)
!10787 = !DILocation(line: 147, column: 2, scope: !10768)
!10788 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !2067, file: !2067, line: 150, type: !2014, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10789)
!10789 = !{!10790, !10791, !10792, !10793, !10794}
!10790 = !DILocalVariable(name: "dev", arg: 1, scope: !10788, file: !2067, line: 150, type: !1967)
!10791 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10788, file: !2067, line: 150, type: !765)
!10792 = !DILocalVariable(name: "size", arg: 3, scope: !10788, file: !2067, line: 151, type: !1642)
!10793 = !DILocalVariable(name: "uart", scope: !10788, file: !2067, line: 153, type: !2038)
!10794 = !DILocalVariable(name: "num_rx", scope: !10788, file: !2067, line: 154, type: !32)
!10795 = !DILocation(line: 0, scope: !10788)
!10796 = !DILocation(line: 153, column: 20, scope: !10788)
!10797 = !DILocation(line: 156, column: 26, scope: !10788)
!10798 = !DILocation(line: 156, column: 31, scope: !10788)
!10799 = !DILocation(line: 157, column: 6, scope: !10788)
!10800 = !DILocation(line: 156, column: 2, scope: !10788)
!10801 = !DILocation(line: 159, column: 23, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10788, file: !2067, line: 157, column: 51)
!10803 = !DILocation(line: 159, column: 17, scope: !10802)
!10804 = !DILocation(line: 159, column: 3, scope: !10802)
!10805 = !DILocation(line: 159, column: 21, scope: !10802)
!10806 = distinct !{!10806, !10800, !10807}
!10807 = !DILocation(line: 160, column: 2, scope: !10788)
!10808 = !DILocation(line: 162, column: 6, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10788, file: !2067, line: 162, column: 6)
!10810 = !DILocation(line: 162, column: 6, scope: !10788)
!10811 = !DILocation(line: 163, column: 3, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10809, file: !2067, line: 162, column: 53)
!10813 = !DILocation(line: 164, column: 2, scope: !10812)
!10814 = !DILocation(line: 166, column: 2, scope: !10788)
!10815 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !2067, file: !2067, line: 169, type: !2018, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10816)
!10816 = !{!10817, !10818}
!10817 = !DILocalVariable(name: "dev", arg: 1, scope: !10815, file: !2067, line: 169, type: !1967)
!10818 = !DILocalVariable(name: "uart", scope: !10815, file: !2067, line: 171, type: !2038)
!10819 = !DILocation(line: 0, scope: !10815)
!10820 = !DILocation(line: 171, column: 20, scope: !10815)
!10821 = !DILocation(line: 173, column: 2, scope: !10815)
!10822 = !DILocation(line: 174, column: 1, scope: !10815)
!10823 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !2067, file: !2067, line: 176, type: !2018, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10824)
!10824 = !{!10825, !10826}
!10825 = !DILocalVariable(name: "dev", arg: 1, scope: !10823, file: !2067, line: 176, type: !1967)
!10826 = !DILocalVariable(name: "uart", scope: !10823, file: !2067, line: 178, type: !2038)
!10827 = !DILocation(line: 0, scope: !10823)
!10828 = !DILocation(line: 178, column: 20, scope: !10823)
!10829 = !DILocation(line: 180, column: 2, scope: !10823)
!10830 = !DILocation(line: 181, column: 1, scope: !10823)
!10831 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !2067, file: !2067, line: 183, type: !1988, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10832)
!10832 = !{!10833, !10834}
!10833 = !DILocalVariable(name: "dev", arg: 1, scope: !10831, file: !2067, line: 183, type: !1967)
!10834 = !DILocalVariable(name: "uart", scope: !10831, file: !2067, line: 185, type: !2038)
!10835 = !DILocation(line: 0, scope: !10831)
!10836 = !DILocation(line: 185, column: 20, scope: !10831)
!10837 = !DILocation(line: 187, column: 9, scope: !10831)
!10838 = !DILocation(line: 187, column: 2, scope: !10831)
!10839 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !2067, file: !2067, line: 190, type: !2018, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10840)
!10840 = !{!10841, !10842}
!10841 = !DILocalVariable(name: "dev", arg: 1, scope: !10839, file: !2067, line: 190, type: !1967)
!10842 = !DILocalVariable(name: "uart", scope: !10839, file: !2067, line: 192, type: !2038)
!10843 = !DILocation(line: 0, scope: !10839)
!10844 = !DILocation(line: 192, column: 20, scope: !10839)
!10845 = !DILocation(line: 194, column: 2, scope: !10839)
!10846 = !DILocation(line: 195, column: 1, scope: !10839)
!10847 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !2067, file: !2067, line: 197, type: !2018, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10848)
!10848 = !{!10849, !10850}
!10849 = !DILocalVariable(name: "dev", arg: 1, scope: !10847, file: !2067, line: 197, type: !1967)
!10850 = !DILocalVariable(name: "uart", scope: !10847, file: !2067, line: 199, type: !2038)
!10851 = !DILocation(line: 0, scope: !10847)
!10852 = !DILocation(line: 199, column: 20, scope: !10847)
!10853 = !DILocation(line: 201, column: 2, scope: !10847)
!10854 = !DILocation(line: 202, column: 1, scope: !10847)
!10855 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !2067, file: !2067, line: 204, type: !1988, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10856)
!10856 = !{!10857, !10858}
!10857 = !DILocalVariable(name: "dev", arg: 1, scope: !10855, file: !2067, line: 204, type: !1967)
!10858 = !DILocalVariable(name: "uart", scope: !10855, file: !2067, line: 206, type: !2038)
!10859 = !DILocation(line: 0, scope: !10855)
!10860 = !DILocation(line: 206, column: 20, scope: !10855)
!10861 = !DILocation(line: 208, column: 9, scope: !10855)
!10862 = !DILocation(line: 208, column: 2, scope: !10855)
!10863 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !2067, file: !2067, line: 211, type: !2018, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10864)
!10864 = !{!10865, !10866}
!10865 = !DILocalVariable(name: "dev", arg: 1, scope: !10863, file: !2067, line: 211, type: !1967)
!10866 = !DILocalVariable(name: "uart", scope: !10863, file: !2067, line: 213, type: !2038)
!10867 = !DILocation(line: 0, scope: !10863)
!10868 = !DILocation(line: 213, column: 20, scope: !10863)
!10869 = !DILocation(line: 215, column: 2, scope: !10863)
!10870 = !DILocation(line: 216, column: 2, scope: !10863)
!10871 = !DILocation(line: 217, column: 1, scope: !10863)
!10872 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !2067, file: !2067, line: 219, type: !2018, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10873)
!10873 = !{!10874, !10875}
!10874 = !DILocalVariable(name: "dev", arg: 1, scope: !10872, file: !2067, line: 219, type: !1967)
!10875 = !DILocalVariable(name: "uart", scope: !10872, file: !2067, line: 221, type: !2038)
!10876 = !DILocation(line: 0, scope: !10872)
!10877 = !DILocation(line: 221, column: 20, scope: !10872)
!10878 = !DILocation(line: 223, column: 2, scope: !10872)
!10879 = !DILocation(line: 224, column: 2, scope: !10872)
!10880 = !DILocation(line: 225, column: 1, scope: !10872)
!10881 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !2067, file: !2067, line: 227, type: !1988, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10882)
!10882 = !{!10883, !10884}
!10883 = !DILocalVariable(name: "dev", arg: 1, scope: !10881, file: !2067, line: 227, type: !1967)
!10884 = !DILocalVariable(name: "uart", scope: !10881, file: !2067, line: 229, type: !2038)
!10885 = !DILocation(line: 0, scope: !10881)
!10886 = !DILocation(line: 229, column: 20, scope: !10881)
!10887 = !DILocation(line: 231, column: 9, scope: !10881)
!10888 = !DILocation(line: 231, column: 53, scope: !10881)
!10889 = !DILocation(line: 232, column: 3, scope: !10881)
!10890 = !DILocation(line: 231, column: 2, scope: !10881)
!10891 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !2067, file: !2067, line: 235, type: !1988, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10892)
!10892 = !{!10893}
!10893 = !DILocalVariable(name: "dev", arg: 1, scope: !10891, file: !2067, line: 235, type: !1967)
!10894 = !DILocation(line: 0, scope: !10891)
!10895 = !DILocation(line: 237, column: 2, scope: !10891)
!10896 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !2067, file: !2067, line: 240, type: !2032, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10897)
!10897 = !{!10898, !10899, !10900, !10901}
!10898 = !DILocalVariable(name: "dev", arg: 1, scope: !10896, file: !2067, line: 240, type: !1967)
!10899 = !DILocalVariable(name: "cb", arg: 2, scope: !10896, file: !2067, line: 241, type: !2034)
!10900 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10896, file: !2067, line: 242, type: !102)
!10901 = !DILocalVariable(name: "data", scope: !10896, file: !2067, line: 244, type: !10902)
!10902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 32)
!10903 = !DILocation(line: 0, scope: !10896)
!10904 = !DILocation(line: 244, column: 36, scope: !10896)
!10905 = !DILocation(line: 246, column: 8, scope: !10896)
!10906 = !DILocation(line: 246, column: 17, scope: !10896)
!10907 = !DILocation(line: 247, column: 8, scope: !10896)
!10908 = !DILocation(line: 247, column: 16, scope: !10896)
!10909 = !DILocation(line: 248, column: 1, scope: !10896)
!10910 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1874, file: !1874, line: 392, type: !10911, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10913)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!119, !2038, !108}
!10913 = !{!10914, !10915, !10916}
!10914 = !DILocalVariable(name: "base", arg: 1, scope: !10910, file: !1874, line: 392, type: !2038)
!10915 = !DILocalVariable(name: "flag", arg: 2, scope: !10910, file: !1874, line: 392, type: !108)
!10916 = !DILocalVariable(name: "uart_reg", scope: !10910, file: !1874, line: 393, type: !1198)
!10917 = !DILocation(line: 0, scope: !10910)
!10918 = !DILocation(line: 395, column: 29, scope: !10910)
!10919 = !DILocation(line: 395, column: 52, scope: !10910)
!10920 = !DILocation(line: 395, column: 44, scope: !10910)
!10921 = !DILocation(line: 395, column: 16, scope: !10910)
!10922 = !DILocation(line: 396, column: 20, scope: !10910)
!10923 = !DILocation(line: 396, column: 39, scope: !10910)
!10924 = !DILocation(line: 396, column: 12, scope: !10910)
!10925 = !DILocation(line: 396, column: 5, scope: !10910)
!10926 = distinct !DISubprogram(name: "UART_Getchar", scope: !1874, file: !1874, line: 358, type: !10927, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10929)
!10927 = !DISubroutineType(types: !10928)
!10928 = !{!164, !2038}
!10929 = !{!10930}
!10930 = !DILocalVariable(name: "base", arg: 1, scope: !10926, file: !1874, line: 358, type: !2038)
!10931 = !DILocation(line: 0, scope: !10926)
!10932 = !DILocation(line: 360, column: 22, scope: !10926)
!10933 = !DILocation(line: 360, column: 12, scope: !10926)
!10934 = !DILocation(line: 360, column: 5, scope: !10926)
!10935 = distinct !DISubprogram(name: "UART_Putchar", scope: !1874, file: !1874, line: 346, type: !10936, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10938)
!10936 = !DISubroutineType(types: !10937)
!10937 = !{null, !2038, !164}
!10938 = !{!10939, !10940}
!10939 = !DILocalVariable(name: "base", arg: 1, scope: !10935, file: !1874, line: 346, type: !2038)
!10940 = !DILocalVariable(name: "data", arg: 2, scope: !10935, file: !1874, line: 346, type: !164)
!10941 = !DILocation(line: 0, scope: !10935)
!10942 = !DILocation(line: 348, column: 28, scope: !10935)
!10943 = !DILocation(line: 348, column: 5, scope: !10935)
!10944 = !DILocation(line: 348, column: 25, scope: !10935)
!10945 = !DILocation(line: 349, column: 1, scope: !10935)
!10946 = !DILocation(line: 0, scope: !2138)
!10947 = !DILocation(line: 339, column: 1, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !2138, file: !2067, line: 339, column: 1)
!10949 = !DILocation(line: 339, column: 1, scope: !2138)
!10950 = distinct !DISubprogram(name: "uart_imx_isr", scope: !2067, file: !2067, line: 260, type: !2018, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10951)
!10951 = !{!10952, !10953}
!10952 = !DILocalVariable(name: "dev", arg: 1, scope: !10950, file: !2067, line: 260, type: !1967)
!10953 = !DILocalVariable(name: "data", scope: !10950, file: !2067, line: 262, type: !10902)
!10954 = !DILocation(line: 0, scope: !10950)
!10955 = !DILocation(line: 262, column: 36, scope: !10950)
!10956 = !DILocation(line: 264, column: 12, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10950, file: !2067, line: 264, column: 6)
!10958 = !DILocation(line: 264, column: 6, scope: !10957)
!10959 = !DILocation(line: 264, column: 6, scope: !10950)
!10960 = !DILocation(line: 265, column: 29, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !2067, line: 264, column: 22)
!10962 = !DILocation(line: 265, column: 3, scope: !10961)
!10963 = !DILocation(line: 266, column: 2, scope: !10961)
!10964 = !DILocation(line: 267, column: 1, scope: !10950)
!10965 = distinct !DISubprogram(name: "uart_imx_init", scope: !2067, file: !2067, line: 56, type: !1988, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10966)
!10966 = !{!10967, !10968, !10969, !10970, !10971, !10972}
!10967 = !DILocalVariable(name: "dev", arg: 1, scope: !10965, file: !2067, line: 56, type: !1967)
!10968 = !DILocalVariable(name: "uart", scope: !10965, file: !2067, line: 58, type: !2038)
!10969 = !DILocalVariable(name: "config", scope: !10965, file: !2067, line: 59, type: !2064)
!10970 = !DILocalVariable(name: "old_level", scope: !10965, file: !2067, line: 60, type: !32)
!10971 = !DILocalVariable(name: "err", scope: !10965, file: !2067, line: 61, type: !103)
!10972 = !DILocalVariable(name: "initConfig", scope: !10965, file: !2067, line: 67, type: !10973)
!10973 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1874, line: 57, baseType: !10974)
!10974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1874, line: 49, size: 192, elements: !10975)
!10975 = !{!10976, !10977, !10978, !10979, !10980, !10981}
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10974, file: !1874, line: 51, baseType: !108, size: 32)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10974, file: !1874, line: 52, baseType: !108, size: 32, offset: 32)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10974, file: !1874, line: 53, baseType: !108, size: 32, offset: 64)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10974, file: !1874, line: 54, baseType: !108, size: 32, offset: 96)
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10974, file: !1874, line: 55, baseType: !108, size: 32, offset: 128)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10974, file: !1874, line: 56, baseType: !108, size: 32, offset: 160)
!10982 = !DILocation(line: 0, scope: !10965)
!10983 = !DILocation(line: 58, column: 20, scope: !10965)
!10984 = !DILocation(line: 55, column: 2, scope: !10985, inlinedAt: !10989)
!10985 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !10986)
!10986 = !{!10987, !10988}
!10987 = !DILocalVariable(name: "key", scope: !10985, file: !8072, line: 44, type: !32)
!10988 = !DILocalVariable(name: "tmp", scope: !10985, file: !8072, line: 53, type: !32)
!10989 = distinct !DILocation(line: 64, column: 14, scope: !10965)
!10990 = !{i64 2849787}
!10991 = !DILocation(line: 0, scope: !10985, inlinedAt: !10989)
!10992 = !DILocation(line: 67, column: 2, scope: !10965)
!10993 = !DILocation(line: 67, column: 21, scope: !10965)
!10994 = !DILocation(line: 67, column: 34, scope: !10965)
!10995 = !DILocation(line: 68, column: 23, scope: !10965)
!10996 = !DILocation(line: 75, column: 36, scope: !10965)
!10997 = !DILocation(line: 75, column: 8, scope: !10965)
!10998 = !DILocation(line: 76, column: 6, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10965, file: !2067, line: 76, column: 6)
!11000 = !DILocation(line: 76, column: 6, scope: !10965)
!11001 = !DILocation(line: 81, column: 26, scope: !10965)
!11002 = !DILocation(line: 81, column: 24, scope: !10965)
!11003 = !DILocation(line: 83, column: 2, scope: !10965)
!11004 = !DILocation(line: 86, column: 2, scope: !10965)
!11005 = !DILocation(line: 87, column: 2, scope: !10965)
!11006 = !DILocalVariable(name: "key", arg: 1, scope: !11007, file: !8072, line: 84, type: !32)
!11007 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11008)
!11008 = !{!11006}
!11009 = !DILocation(line: 0, scope: !11007, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 90, column: 2, scope: !10965)
!11011 = !DILocation(line: 95, column: 2, scope: !11007, inlinedAt: !11010)
!11012 = !{i64 2850604}
!11013 = !DILocation(line: 93, column: 10, scope: !10965)
!11014 = !DILocation(line: 93, column: 2, scope: !10965)
!11015 = !DILocation(line: 97, column: 34, scope: !10965)
!11016 = !DILocation(line: 97, column: 26, scope: !10965)
!11017 = !DILocation(line: 97, column: 2, scope: !10965)
!11018 = !DILocation(line: 100, column: 2, scope: !10965)
!11019 = !DILocation(line: 102, column: 2, scope: !10965)
!11020 = !DILocation(line: 103, column: 1, scope: !10965)
!11021 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2076, file: !2076, line: 342, type: !11022, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11024)
!11022 = !DISubroutineType(types: !11023)
!11023 = !{!103, !2073, !164}
!11024 = !{!11025, !11026, !11027, !11028}
!11025 = !DILocalVariable(name: "config", arg: 1, scope: !11021, file: !2076, line: 342, type: !2073)
!11026 = !DILocalVariable(name: "id", arg: 2, scope: !11021, file: !2076, line: 343, type: !164)
!11027 = !DILocalVariable(name: "ret", scope: !11021, file: !2076, line: 345, type: !103)
!11028 = !DILocalVariable(name: "state", scope: !11021, file: !2076, line: 346, type: !2079)
!11029 = !DILocation(line: 0, scope: !11021)
!11030 = !DILocation(line: 346, column: 2, scope: !11021)
!11031 = !DILocation(line: 348, column: 8, scope: !11021)
!11032 = !DILocation(line: 349, column: 10, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11021, file: !2076, line: 349, column: 6)
!11034 = !DILocation(line: 349, column: 6, scope: !11021)
!11035 = !DILocation(line: 353, column: 44, scope: !11021)
!11036 = !DILocation(line: 353, column: 9, scope: !11021)
!11037 = !DILocation(line: 353, column: 2, scope: !11021)
!11038 = !DILocation(line: 354, column: 1, scope: !11021)
!11039 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1874, file: !1874, line: 444, type: !10936, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11040)
!11040 = !{!11041, !11042}
!11041 = !DILocalVariable(name: "base", arg: 1, scope: !11039, file: !1874, line: 444, type: !2038)
!11042 = !DILocalVariable(name: "watermark", arg: 2, scope: !11039, file: !1874, line: 444, type: !164)
!11043 = !DILocation(line: 0, scope: !11039)
!11044 = !DILocation(line: 447, column: 28, scope: !11039)
!11045 = !DILocation(line: 447, column: 48, scope: !11039)
!11046 = !DILocation(line: 447, column: 72, scope: !11039)
!11047 = !DILocation(line: 447, column: 25, scope: !11039)
!11048 = !DILocation(line: 448, column: 1, scope: !11039)
!11049 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1874, file: !1874, line: 458, type: !10936, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11050)
!11050 = !{!11051, !11052}
!11051 = !DILocalVariable(name: "base", arg: 1, scope: !11049, file: !1874, line: 458, type: !2038)
!11052 = !DILocalVariable(name: "watermark", arg: 2, scope: !11049, file: !1874, line: 458, type: !164)
!11053 = !DILocation(line: 0, scope: !11049)
!11054 = !DILocation(line: 461, column: 28, scope: !11049)
!11055 = !DILocation(line: 461, column: 48, scope: !11049)
!11056 = !DILocation(line: 461, column: 72, scope: !11049)
!11057 = !DILocation(line: 461, column: 25, scope: !11049)
!11058 = !DILocation(line: 462, column: 1, scope: !11049)
!11059 = distinct !DISubprogram(name: "UART_Enable", scope: !1874, file: !1874, line: 242, type: !11060, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11062)
!11060 = !DISubroutineType(types: !11061)
!11061 = !{null, !2038}
!11062 = !{!11063}
!11063 = !DILocalVariable(name: "base", arg: 1, scope: !11059, file: !1874, line: 242, type: !2038)
!11064 = !DILocation(line: 0, scope: !11059)
!11065 = !DILocation(line: 244, column: 5, scope: !11059)
!11066 = !DILocation(line: 244, column: 25, scope: !11059)
!11067 = !DILocation(line: 245, column: 1, scope: !11059)
!11068 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2076, file: !2076, line: 316, type: !11069, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1870, retainedNodes: !11071)
!11069 = !DISubroutineType(types: !11070)
!11070 = !{!103, !2073, !2079}
!11071 = !{!11072, !11073, !11074}
!11072 = !DILocalVariable(name: "config", arg: 1, scope: !11068, file: !2076, line: 317, type: !2073)
!11073 = !DILocalVariable(name: "state", arg: 2, scope: !11068, file: !2076, line: 318, type: !2079)
!11074 = !DILocalVariable(name: "reg", scope: !11068, file: !2076, line: 320, type: !22)
!11075 = !DILocation(line: 0, scope: !11068)
!11076 = !DILocation(line: 329, column: 39, scope: !11068)
!11077 = !DILocation(line: 329, column: 52, scope: !11068)
!11078 = !DILocation(line: 329, column: 9, scope: !11068)
!11079 = !DILocation(line: 329, column: 2, scope: !11068)
!11080 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2374, file: !2374, line: 270, type: !2380, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11081)
!11081 = !{!11082}
!11082 = !DILocalVariable(name: "dev", arg: 1, scope: !11080, file: !2374, line: 270, type: !2382)
!11083 = !DILocation(line: 0, scope: !11080)
!11084 = !DILocation(line: 274, column: 2, scope: !11080)
!11085 = !DILocation(line: 275, column: 12, scope: !11080)
!11086 = !DILocation(line: 276, column: 15, scope: !11080)
!11087 = !DILocation(line: 277, column: 16, scope: !11080)
!11088 = !DILocation(line: 278, column: 15, scope: !11080)
!11089 = !DILocation(line: 279, column: 16, scope: !11080)
!11090 = !DILocation(line: 282, column: 2, scope: !11080)
!11091 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2295, file: !2295, line: 1814, type: !7991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11092)
!11092 = !{!11093, !11094}
!11093 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11091, file: !2295, line: 1814, type: !3230)
!11094 = !DILocalVariable(name: "priority", arg: 2, scope: !11091, file: !2295, line: 1814, type: !108)
!11095 = !DILocation(line: 0, scope: !11091)
!11096 = !DILocation(line: 1822, column: 46, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !2295, line: 1821, column: 3)
!11098 = distinct !DILexicalBlock(scope: !11091, file: !2295, line: 1816, column: 7)
!11099 = !DILocation(line: 1824, column: 1, scope: !11091)
!11100 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2374, file: !2374, line: 118, type: !7886, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11101)
!11101 = !{!11102, !11103}
!11102 = !DILocalVariable(name: "arg", arg: 1, scope: !11100, file: !2374, line: 118, type: !102)
!11103 = !DILocalVariable(name: "dticks", scope: !11100, file: !2374, line: 121, type: !108)
!11104 = !DILocation(line: 0, scope: !11100)
!11105 = !DILocation(line: 124, column: 2, scope: !11100)
!11106 = !DILocation(line: 129, column: 17, scope: !11100)
!11107 = !DILocation(line: 129, column: 14, scope: !11100)
!11108 = !DILocation(line: 130, column: 15, scope: !11100)
!11109 = !DILocation(line: 145, column: 27, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !2374, line: 132, column: 16)
!11111 = distinct !DILexicalBlock(scope: !11100, file: !2374, line: 132, column: 6)
!11112 = !DILocation(line: 145, column: 25, scope: !11110)
!11113 = !DILocation(line: 145, column: 45, scope: !11110)
!11114 = !DILocation(line: 146, column: 30, scope: !11110)
!11115 = !DILocation(line: 146, column: 20, scope: !11110)
!11116 = !DILocation(line: 147, column: 3, scope: !11110)
!11117 = !DILocation(line: 151, column: 2, scope: !11100)
!11118 = !DILocation(line: 152, column: 1, scope: !11100)
!11119 = distinct !DISubprogram(name: "elapsed", scope: !2374, file: !2374, line: 85, type: !8038, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11120)
!11120 = !{!11121, !11122, !11123}
!11121 = !DILocalVariable(name: "val1", scope: !11119, file: !2374, line: 87, type: !108)
!11122 = !DILocalVariable(name: "ctrl", scope: !11119, file: !2374, line: 88, type: !108)
!11123 = !DILocalVariable(name: "val2", scope: !11119, file: !2374, line: 89, type: !108)
!11124 = !DILocation(line: 87, column: 27, scope: !11119)
!11125 = !DILocation(line: 0, scope: !11119)
!11126 = !DILocation(line: 88, column: 27, scope: !11119)
!11127 = !DILocation(line: 89, column: 27, scope: !11119)
!11128 = !DILocation(line: 105, column: 12, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11119, file: !2374, line: 105, column: 6)
!11130 = !DILocation(line: 106, column: 6, scope: !11129)
!11131 = !DILocation(line: 107, column: 16, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11129, file: !2374, line: 106, column: 24)
!11133 = !DILocation(line: 111, column: 18, scope: !11132)
!11134 = !DILocation(line: 112, column: 2, scope: !11132)
!11135 = !DILocation(line: 114, column: 20, scope: !11119)
!11136 = !DILocation(line: 114, column: 30, scope: !11119)
!11137 = !DILocation(line: 114, column: 28, scope: !11119)
!11138 = !DILocation(line: 114, column: 2, scope: !11119)
!11139 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2374, file: !2374, line: 154, type: !11140, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11142)
!11140 = !DISubroutineType(types: !11141)
!11141 = !{null, !324, !119}
!11142 = !{!11143, !11144, !11145, !11146, !11147, !11148, !11149, !11154, !11155}
!11143 = !DILocalVariable(name: "ticks", arg: 1, scope: !11139, file: !2374, line: 154, type: !324)
!11144 = !DILocalVariable(name: "idle", arg: 2, scope: !11139, file: !2374, line: 154, type: !119)
!11145 = !DILocalVariable(name: "delay", scope: !11139, file: !2374, line: 169, type: !108)
!11146 = !DILocalVariable(name: "val1", scope: !11139, file: !2374, line: 170, type: !108)
!11147 = !DILocalVariable(name: "val2", scope: !11139, file: !2374, line: 170, type: !108)
!11148 = !DILocalVariable(name: "last_load_", scope: !11139, file: !2374, line: 171, type: !108)
!11149 = !DILocalVariable(name: "key", scope: !11139, file: !2374, line: 176, type: !11150)
!11150 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !11151)
!11151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !11152)
!11152 = !{!11153}
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11151, file: !149, line: 33, baseType: !103, size: 32)
!11154 = !DILocalVariable(name: "pending", scope: !11139, file: !2374, line: 178, type: !108)
!11155 = !DILocalVariable(name: "unannounced", scope: !11139, file: !2374, line: 185, type: !108)
!11156 = !DILocation(line: 0, scope: !11139)
!11157 = !DILocation(line: 162, column: 49, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11139, file: !2374, line: 162, column: 6)
!11159 = !DILocation(line: 163, column: 17, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11158, file: !2374, line: 162, column: 78)
!11161 = !DILocation(line: 164, column: 13, scope: !11160)
!11162 = !DILocation(line: 165, column: 3, scope: !11160)
!11163 = !DILocation(line: 171, column: 24, scope: !11139)
!11164 = !DILocation(line: 173, column: 10, scope: !11139)
!11165 = !DILocation(line: 174, column: 10, scope: !11139)
!11166 = !DILocalVariable(name: "l", arg: 1, scope: !11167, file: !149, line: 136, type: !11170)
!11167 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !11168, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11171)
!11168 = !DISubroutineType(types: !11169)
!11169 = !{!11150, !11170}
!11170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 32)
!11171 = !{!11166, !11172}
!11172 = !DILocalVariable(name: "k", scope: !11167, file: !149, line: 139, type: !11150)
!11173 = !DILocation(line: 0, scope: !11167, inlinedAt: !11174)
!11174 = distinct !DILocation(line: 176, column: 25, scope: !11139)
!11175 = !DILocation(line: 55, column: 2, scope: !11176, inlinedAt: !11180)
!11176 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11177)
!11177 = !{!11178, !11179}
!11178 = !DILocalVariable(name: "key", scope: !11176, file: !8072, line: 44, type: !32)
!11179 = !DILocalVariable(name: "tmp", scope: !11176, file: !8072, line: 53, type: !32)
!11180 = distinct !DILocation(line: 145, column: 10, scope: !11167, inlinedAt: !11174)
!11181 = !{i64 2952525}
!11182 = !DILocation(line: 0, scope: !11176, inlinedAt: !11180)
!11183 = !DILocation(line: 148, column: 2, scope: !11184, inlinedAt: !11174)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !149, line: 148, column: 2)
!11185 = distinct !DILexicalBlock(scope: !11167, file: !149, line: 148, column: 2)
!11186 = !DILocation(line: 148, column: 2, scope: !11185, inlinedAt: !11174)
!11187 = !DILocation(line: 148, column: 2, scope: !11188, inlinedAt: !11174)
!11188 = distinct !DILexicalBlock(scope: !11184, file: !149, line: 148, column: 2)
!11189 = !DILocation(line: 160, column: 2, scope: !11167, inlinedAt: !11174)
!11190 = !DILocation(line: 178, column: 21, scope: !11139)
!11191 = !DILocation(line: 180, column: 18, scope: !11139)
!11192 = !DILocation(line: 182, column: 14, scope: !11139)
!11193 = !DILocation(line: 183, column: 15, scope: !11139)
!11194 = !DILocation(line: 185, column: 39, scope: !11139)
!11195 = !DILocation(line: 185, column: 37, scope: !11139)
!11196 = !DILocation(line: 187, column: 27, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11139, file: !2374, line: 187, column: 6)
!11198 = !DILocation(line: 187, column: 6, scope: !11139)
!11199 = !DILocation(line: 202, column: 27, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11197, file: !2374, line: 195, column: 9)
!11201 = !DILocation(line: 202, column: 48, scope: !11200)
!11202 = !DILocation(line: 203, column: 9, scope: !11200)
!11203 = !DILocation(line: 204, column: 11, scope: !11200)
!11204 = !DILocation(line: 205, column: 13, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11200, file: !2374, line: 205, column: 7)
!11206 = !DILocation(line: 205, column: 7, scope: !11200)
!11207 = !DILocation(line: 0, scope: !11197)
!11208 = !DILocation(line: 212, column: 18, scope: !11139)
!11209 = !DILocation(line: 214, column: 28, scope: !11139)
!11210 = !DILocation(line: 214, column: 16, scope: !11139)
!11211 = !DILocation(line: 215, column: 15, scope: !11139)
!11212 = !DILocation(line: 227, column: 11, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11139, file: !2374, line: 227, column: 6)
!11214 = !DILocation(line: 227, column: 6, scope: !11139)
!11215 = !DILocation(line: 228, column: 15, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11213, file: !2374, line: 227, column: 19)
!11217 = !DILocation(line: 228, column: 38, scope: !11216)
!11218 = !DILocation(line: 228, column: 24, scope: !11216)
!11219 = !DILocation(line: 229, column: 2, scope: !11216)
!11220 = !DILocation(line: 230, column: 24, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11213, file: !2374, line: 229, column: 9)
!11222 = !DILocation(line: 230, column: 15, scope: !11221)
!11223 = !DILocation(line: 0, scope: !11213)
!11224 = !DILocalVariable(name: "key", arg: 2, scope: !11225, file: !149, line: 190, type: !11150)
!11225 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !11226, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11228)
!11226 = !DISubroutineType(types: !11227)
!11227 = !{null, !11170, !11150}
!11228 = !{!11229, !11224}
!11229 = !DILocalVariable(name: "l", arg: 1, scope: !11225, file: !149, line: 189, type: !11170)
!11230 = !DILocation(line: 0, scope: !11225, inlinedAt: !11231)
!11231 = distinct !DILocation(line: 232, column: 2, scope: !11139)
!11232 = !DILocation(line: 194, column: 2, scope: !11233, inlinedAt: !11231)
!11233 = distinct !DILexicalBlock(scope: !11234, file: !149, line: 194, column: 2)
!11234 = distinct !DILexicalBlock(scope: !11225, file: !149, line: 194, column: 2)
!11235 = !DILocation(line: 194, column: 2, scope: !11234, inlinedAt: !11231)
!11236 = !DILocation(line: 194, column: 2, scope: !11237, inlinedAt: !11231)
!11237 = distinct !DILexicalBlock(scope: !11233, file: !149, line: 194, column: 2)
!11238 = !DILocalVariable(name: "key", arg: 1, scope: !11239, file: !8072, line: 84, type: !32)
!11239 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11240)
!11240 = !{!11238}
!11241 = !DILocation(line: 0, scope: !11239, inlinedAt: !11242)
!11242 = distinct !DILocation(line: 215, column: 2, scope: !11225, inlinedAt: !11231)
!11243 = !DILocation(line: 95, column: 2, scope: !11239, inlinedAt: !11242)
!11244 = !{i64 2953342}
!11245 = !DILocation(line: 234, column: 1, scope: !11139)
!11246 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2374, file: !2374, line: 236, type: !8038, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11247)
!11247 = !{!11248, !11249}
!11248 = !DILocalVariable(name: "key", scope: !11246, file: !2374, line: 242, type: !11150)
!11249 = !DILocalVariable(name: "cyc", scope: !11246, file: !2374, line: 243, type: !108)
!11250 = !DILocation(line: 0, scope: !11167, inlinedAt: !11251)
!11251 = distinct !DILocation(line: 242, column: 25, scope: !11246)
!11252 = !DILocation(line: 55, column: 2, scope: !11176, inlinedAt: !11253)
!11253 = distinct !DILocation(line: 145, column: 10, scope: !11167, inlinedAt: !11251)
!11254 = !DILocation(line: 0, scope: !11176, inlinedAt: !11253)
!11255 = !DILocation(line: 148, column: 2, scope: !11184, inlinedAt: !11251)
!11256 = !DILocation(line: 148, column: 2, scope: !11185, inlinedAt: !11251)
!11257 = !DILocation(line: 148, column: 2, scope: !11188, inlinedAt: !11251)
!11258 = !DILocation(line: 160, column: 2, scope: !11167, inlinedAt: !11251)
!11259 = !DILocation(line: 0, scope: !11246)
!11260 = !DILocation(line: 243, column: 17, scope: !11246)
!11261 = !DILocation(line: 243, column: 29, scope: !11246)
!11262 = !DILocation(line: 243, column: 43, scope: !11246)
!11263 = !DILocation(line: 0, scope: !11225, inlinedAt: !11264)
!11264 = distinct !DILocation(line: 245, column: 2, scope: !11246)
!11265 = !DILocation(line: 194, column: 2, scope: !11233, inlinedAt: !11264)
!11266 = !DILocation(line: 194, column: 2, scope: !11234, inlinedAt: !11264)
!11267 = !DILocation(line: 194, column: 2, scope: !11237, inlinedAt: !11264)
!11268 = !DILocation(line: 243, column: 27, scope: !11246)
!11269 = !DILocation(line: 243, column: 41, scope: !11246)
!11270 = !DILocation(line: 0, scope: !11239, inlinedAt: !11271)
!11271 = distinct !DILocation(line: 215, column: 2, scope: !11225, inlinedAt: !11264)
!11272 = !DILocation(line: 95, column: 2, scope: !11239, inlinedAt: !11271)
!11273 = !DILocation(line: 246, column: 13, scope: !11246)
!11274 = !DILocation(line: 246, column: 2, scope: !11246)
!11275 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2374, file: !2374, line: 249, type: !8038, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !11276)
!11276 = !{!11277, !11278}
!11277 = !DILocalVariable(name: "key", scope: !11275, file: !2374, line: 251, type: !11150)
!11278 = !DILocalVariable(name: "ret", scope: !11275, file: !2374, line: 252, type: !108)
!11279 = !DILocation(line: 0, scope: !11167, inlinedAt: !11280)
!11280 = distinct !DILocation(line: 251, column: 25, scope: !11275)
!11281 = !DILocation(line: 55, column: 2, scope: !11176, inlinedAt: !11282)
!11282 = distinct !DILocation(line: 145, column: 10, scope: !11167, inlinedAt: !11280)
!11283 = !DILocation(line: 0, scope: !11176, inlinedAt: !11282)
!11284 = !DILocation(line: 148, column: 2, scope: !11184, inlinedAt: !11280)
!11285 = !DILocation(line: 148, column: 2, scope: !11185, inlinedAt: !11280)
!11286 = !DILocation(line: 148, column: 2, scope: !11188, inlinedAt: !11280)
!11287 = !DILocation(line: 160, column: 2, scope: !11167, inlinedAt: !11280)
!11288 = !DILocation(line: 0, scope: !11275)
!11289 = !DILocation(line: 252, column: 17, scope: !11275)
!11290 = !DILocation(line: 252, column: 29, scope: !11275)
!11291 = !DILocation(line: 0, scope: !11225, inlinedAt: !11292)
!11292 = distinct !DILocation(line: 254, column: 2, scope: !11275)
!11293 = !DILocation(line: 194, column: 2, scope: !11233, inlinedAt: !11292)
!11294 = !DILocation(line: 194, column: 2, scope: !11234, inlinedAt: !11292)
!11295 = !DILocation(line: 194, column: 2, scope: !11237, inlinedAt: !11292)
!11296 = !DILocation(line: 252, column: 27, scope: !11275)
!11297 = !DILocation(line: 0, scope: !11239, inlinedAt: !11298)
!11298 = distinct !DILocation(line: 215, column: 2, scope: !11225, inlinedAt: !11292)
!11299 = !DILocation(line: 95, column: 2, scope: !11239, inlinedAt: !11298)
!11300 = !DILocation(line: 255, column: 2, scope: !11275)
!11301 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2374, file: !2374, line: 258, type: !327, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !2645)
!11302 = !DILocation(line: 260, column: 6, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11301, file: !2374, line: 260, column: 6)
!11304 = !DILocation(line: 260, column: 16, scope: !11303)
!11305 = !DILocation(line: 260, column: 6, scope: !11301)
!11306 = !DILocation(line: 261, column: 17, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11303, file: !2374, line: 260, column: 34)
!11308 = !DILocation(line: 262, column: 2, scope: !11307)
!11309 = !DILocation(line: 263, column: 1, scope: !11301)
!11310 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2374, file: !2374, line: 265, type: !327, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2149, retainedNodes: !2645)
!11311 = !DILocation(line: 267, column: 16, scope: !11310)
!11312 = !DILocation(line: 268, column: 1, scope: !11310)
!11313 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11314, file: !11314, line: 9, type: !11315, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3523, retainedNodes: !11345)
!11314 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11315 = !DISubroutineType(types: !11316)
!11316 = !{!103, !11317, !164, !11344}
!11317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11318, size: 32)
!11318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11319)
!11319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2076, line: 60, size: 64, elements: !11320)
!11320 = !{!11321, !11343}
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11319, file: !2076, line: 69, baseType: !11322, size: 32)
!11322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11323, size: 32)
!11323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11324)
!11324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2076, line: 50, size: 64, elements: !11325)
!11325 = !{!11326, !11341, !11342}
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11324, file: !2076, line: 52, baseType: !11327, size: 32)
!11327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11328, size: 32)
!11328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11329)
!11329 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1833, line: 64, baseType: !11330)
!11330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1833, line: 59, size: 160, elements: !11331)
!11331 = !{!11332, !11340}
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11330, file: !1833, line: 60, baseType: !11333, size: 128)
!11333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1833, line: 51, size: 128, elements: !11334)
!11334 = !{!11335, !11336, !11337, !11338, !11339}
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !11333, file: !1833, line: 52, baseType: !108, size: 32)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !11333, file: !1833, line: 53, baseType: !108, size: 32, offset: 32)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !11333, file: !1833, line: 54, baseType: !108, size: 32, offset: 64)
!11338 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !11333, file: !1833, line: 55, baseType: !164, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !11333, file: !1833, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !11330, file: !1833, line: 61, baseType: !108, size: 32, offset: 128)
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11324, file: !2076, line: 54, baseType: !164, size: 8, offset: 32)
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11324, file: !2076, line: 56, baseType: !164, size: 8, offset: 40)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11319, file: !2076, line: 71, baseType: !164, size: 8, offset: 32)
!11344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11322, size: 32)
!11345 = !{!11346, !11347, !11348}
!11346 = !DILocalVariable(name: "config", arg: 1, scope: !11313, file: !11314, line: 9, type: !11317)
!11347 = !DILocalVariable(name: "id", arg: 2, scope: !11313, file: !11314, line: 9, type: !164)
!11348 = !DILocalVariable(name: "state", arg: 3, scope: !11313, file: !11314, line: 10, type: !11344)
!11349 = !DILocation(line: 0, scope: !11313)
!11350 = !DILocation(line: 12, column: 20, scope: !11313)
!11351 = !DILocation(line: 13, column: 27, scope: !11313)
!11352 = !DILocation(line: 13, column: 42, scope: !11313)
!11353 = !DILocation(line: 13, column: 19, scope: !11313)
!11354 = !DILocation(line: 13, column: 16, scope: !11313)
!11355 = !DILocation(line: 13, column: 2, scope: !11313)
!11356 = distinct !{!11356, !11355, !11357}
!11357 = !DILocation(line: 19, column: 2, scope: !11313)
!11358 = !DILocation(line: 14, column: 23, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !11314, line: 14, column: 7)
!11360 = distinct !DILexicalBlock(scope: !11313, file: !11314, line: 13, column: 54)
!11361 = !DILocation(line: 14, column: 10, scope: !11359)
!11362 = !DILocation(line: 18, column: 11, scope: !11360)
!11363 = !DILocation(line: 14, column: 7, scope: !11360)
!11364 = !DILocation(line: 22, column: 1, scope: !11313)
!11365 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !2415, file: !2415, line: 51, type: !2421, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !11366)
!11366 = !{!11367}
!11367 = !DILocalVariable(name: "dev", arg: 1, scope: !11365, file: !2415, line: 51, type: !2423)
!11368 = !DILocation(line: 0, scope: !11365)
!11369 = !DILocation(line: 66, column: 2, scope: !11365)
!11370 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2415, file: !2415, line: 10, type: !11371, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !11387)
!11371 = !DISubroutineType(types: !11372)
!11372 = !{!103, !11373, !164, !22}
!11373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11374, size: 32)
!11374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11375)
!11375 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1833, line: 64, baseType: !11376)
!11376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1833, line: 59, size: 160, elements: !11377)
!11377 = !{!11378, !11386}
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11376, file: !1833, line: 60, baseType: !11379, size: 128)
!11379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1833, line: 51, size: 128, elements: !11380)
!11380 = !{!11381, !11382, !11383, !11384, !11385}
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !11379, file: !1833, line: 52, baseType: !108, size: 32)
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !11379, file: !1833, line: 53, baseType: !108, size: 32, offset: 32)
!11383 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !11379, file: !1833, line: 54, baseType: !108, size: 32, offset: 64)
!11384 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !11379, file: !1833, line: 55, baseType: !164, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !11379, file: !1833, line: 56, baseType: !108, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !11376, file: !1833, line: 61, baseType: !108, size: 32, offset: 128)
!11387 = !{!11388, !11389, !11390, !11391, !11393, !11396, !11397, !11398, !11399, !11400}
!11388 = !DILocalVariable(name: "pins", arg: 1, scope: !11370, file: !2415, line: 10, type: !11373)
!11389 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11370, file: !2415, line: 10, type: !164)
!11390 = !DILocalVariable(name: "reg", arg: 3, scope: !11370, file: !2415, line: 11, type: !22)
!11391 = !DILocalVariable(name: "i", scope: !11392, file: !2415, line: 14, type: !164)
!11392 = distinct !DILexicalBlock(scope: !11370, file: !2415, line: 14, column: 2)
!11393 = !DILocalVariable(name: "mux_register", scope: !11394, file: !2415, line: 15, type: !108)
!11394 = distinct !DILexicalBlock(scope: !11395, file: !2415, line: 14, column: 41)
!11395 = distinct !DILexicalBlock(scope: !11392, file: !2415, line: 14, column: 2)
!11396 = !DILocalVariable(name: "mux_mode", scope: !11394, file: !2415, line: 16, type: !108)
!11397 = !DILocalVariable(name: "input_register", scope: !11394, file: !2415, line: 17, type: !108)
!11398 = !DILocalVariable(name: "input_daisy", scope: !11394, file: !2415, line: 18, type: !108)
!11399 = !DILocalVariable(name: "config_register", scope: !11394, file: !2415, line: 19, type: !108)
!11400 = !DILocalVariable(name: "pin_ctrl_flags", scope: !11394, file: !2415, line: 20, type: !108)
!11401 = !DILocation(line: 0, scope: !11370)
!11402 = !DILocation(line: 0, scope: !11392)
!11403 = !DILocation(line: 14, column: 25, scope: !11395)
!11404 = !DILocation(line: 14, column: 2, scope: !11392)
!11405 = !DILocation(line: 48, column: 2, scope: !11370)
!11406 = !DILocation(line: 15, column: 42, scope: !11394)
!11407 = !DILocation(line: 0, scope: !11394)
!11408 = !DILocation(line: 16, column: 38, scope: !11394)
!11409 = !DILocation(line: 17, column: 44, scope: !11394)
!11410 = !DILocation(line: 19, column: 45, scope: !11394)
!11411 = !DILocation(line: 20, column: 37, scope: !11394)
!11412 = !DILocation(line: 35, column: 4, scope: !11394)
!11413 = !DILocation(line: 36, column: 4, scope: !11394)
!11414 = !DILocation(line: 35, column: 45, scope: !11394)
!11415 = !DILocation(line: 34, column: 5, scope: !11394)
!11416 = !DILocation(line: 34, column: 53, scope: !11394)
!11417 = !DILocation(line: 37, column: 7, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11394, file: !2415, line: 37, column: 7)
!11419 = !DILocation(line: 37, column: 7, scope: !11394)
!11420 = !DILocation(line: 18, column: 41, scope: !11394)
!11421 = !DILocation(line: 39, column: 5, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11418, file: !2415, line: 37, column: 23)
!11423 = !DILocation(line: 38, column: 6, scope: !11422)
!11424 = !DILocation(line: 38, column: 56, scope: !11422)
!11425 = !DILocation(line: 40, column: 3, scope: !11422)
!11426 = !DILocation(line: 41, column: 7, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11394, file: !2415, line: 41, column: 7)
!11428 = !DILocation(line: 41, column: 7, scope: !11394)
!11429 = !DILocation(line: 43, column: 20, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11427, file: !2415, line: 41, column: 24)
!11431 = !DILocation(line: 42, column: 6, scope: !11430)
!11432 = !DILocation(line: 42, column: 57, scope: !11430)
!11433 = !DILocation(line: 44, column: 3, scope: !11430)
!11434 = !DILocation(line: 14, column: 37, scope: !11395)
!11435 = distinct !{!11435, !11404, !11436}
!11436 = !DILocation(line: 47, column: 2, scope: !11392)
!11437 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !11438, file: !11438, line: 43, type: !11439, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3525, retainedNodes: !11493)
!11438 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11439 = !DISubroutineType(types: !11440)
!11440 = !{null, !11441, !108, !108, !108}
!11441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11442, size: 32)
!11442 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !1074, line: 4575, baseType: !11443)
!11443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 4532, size: 390144, elements: !11444)
!11444 = !{!11445, !11446, !11447, !11448, !11449, !11450, !11458, !11459, !11467, !11468}
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !11443, file: !1074, line: 4533, baseType: !1078, size: 32)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !11443, file: !1074, line: 4534, baseType: !1078, size: 32, offset: 32)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !11443, file: !1074, line: 4535, baseType: !1078, size: 32, offset: 64)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !11443, file: !1074, line: 4536, baseType: !1078, size: 32, offset: 96)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11443, file: !1074, line: 4537, baseType: !1083, size: 16256, offset: 128)
!11450 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !11443, file: !1074, line: 4543, baseType: !11451, size: 4224, offset: 16384)
!11451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11452, size: 4224, elements: !1094)
!11452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11443, file: !1074, line: 4538, size: 128, elements: !11453)
!11453 = !{!11454, !11455, !11456, !11457}
!11454 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !11452, file: !1074, line: 4539, baseType: !1078, size: 32)
!11455 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !11452, file: !1074, line: 4540, baseType: !1078, size: 32, offset: 32)
!11456 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !11452, file: !1074, line: 4541, baseType: !1078, size: 32, offset: 64)
!11457 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !11452, file: !1074, line: 4542, baseType: !1078, size: 32, offset: 96)
!11458 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11443, file: !1074, line: 4544, baseType: !1097, size: 110464, offset: 20608)
!11459 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !11443, file: !1074, line: 4550, baseType: !11460, size: 24448, offset: 131072)
!11460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11461, size: 24448, elements: !1108)
!11461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11443, file: !1074, line: 4545, size: 128, elements: !11462)
!11462 = !{!11463, !11464, !11465, !11466}
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !11461, file: !1074, line: 4546, baseType: !1078, size: 32)
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !11461, file: !1074, line: 4547, baseType: !1078, size: 32, offset: 32)
!11465 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !11461, file: !1074, line: 4548, baseType: !1078, size: 32, offset: 64)
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !11461, file: !1074, line: 4549, baseType: !1078, size: 32, offset: 96)
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11443, file: !1074, line: 4551, baseType: !1111, size: 106624, offset: 155520)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !11443, file: !1074, line: 4574, baseType: !11469, size: 128000, offset: 262144)
!11469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11470, size: 128000, elements: !1142)
!11470 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11443, file: !1074, line: 4552, size: 1024, elements: !11471)
!11471 = !{!11472, !11473, !11474, !11475, !11476, !11477, !11478, !11479, !11480, !11481, !11482, !11483, !11484, !11485, !11486, !11487, !11488, !11489, !11490, !11491, !11492}
!11472 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !11470, file: !1074, line: 4553, baseType: !1078, size: 32)
!11473 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !11470, file: !1074, line: 4554, baseType: !1078, size: 32, offset: 32)
!11474 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !11470, file: !1074, line: 4555, baseType: !1078, size: 32, offset: 64)
!11475 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !11470, file: !1074, line: 4556, baseType: !1078, size: 32, offset: 96)
!11476 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !11470, file: !1074, line: 4557, baseType: !1078, size: 32, offset: 128)
!11477 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !11470, file: !1074, line: 4558, baseType: !1078, size: 32, offset: 160)
!11478 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !11470, file: !1074, line: 4559, baseType: !1078, size: 32, offset: 192)
!11479 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !11470, file: !1074, line: 4560, baseType: !1078, size: 32, offset: 224)
!11480 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !11470, file: !1074, line: 4561, baseType: !1078, size: 32, offset: 256)
!11481 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !11470, file: !1074, line: 4562, baseType: !1078, size: 32, offset: 288)
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !11470, file: !1074, line: 4563, baseType: !1078, size: 32, offset: 320)
!11483 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !11470, file: !1074, line: 4564, baseType: !1078, size: 32, offset: 352)
!11484 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !11470, file: !1074, line: 4565, baseType: !1078, size: 32, offset: 384)
!11485 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !11470, file: !1074, line: 4566, baseType: !1078, size: 32, offset: 416)
!11486 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !11470, file: !1074, line: 4567, baseType: !1078, size: 32, offset: 448)
!11487 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !11470, file: !1074, line: 4568, baseType: !1078, size: 32, offset: 480)
!11488 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11470, file: !1074, line: 4569, baseType: !1135, size: 384, offset: 512)
!11489 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !11470, file: !1074, line: 4570, baseType: !1078, size: 32, offset: 896)
!11490 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !11470, file: !1074, line: 4571, baseType: !1078, size: 32, offset: 928)
!11491 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !11470, file: !1074, line: 4572, baseType: !1078, size: 32, offset: 960)
!11492 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !11470, file: !1074, line: 4573, baseType: !1078, size: 32, offset: 992)
!11493 = !{!11494, !11495, !11496, !11497}
!11494 = !DILocalVariable(name: "base", arg: 1, scope: !11437, file: !11438, line: 43, type: !11441)
!11495 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11437, file: !11438, line: 43, type: !108)
!11496 = !DILocalVariable(name: "pre", arg: 3, scope: !11437, file: !11438, line: 43, type: !108)
!11497 = !DILocalVariable(name: "post", arg: 4, scope: !11437, file: !11438, line: 43, type: !108)
!11498 = !DILocation(line: 0, scope: !11437)
!11499 = !DILocation(line: 45, column: 5, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !11438, line: 45, column: 5)
!11501 = distinct !DILexicalBlock(scope: !11437, file: !11438, line: 45, column: 5)
!11502 = !DILocation(line: 45, column: 5, scope: !11501)
!11503 = !DILocation(line: 45, column: 5, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11500, file: !11438, line: 45, column: 5)
!11505 = !DILocation(line: 46, column: 5, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !11438, line: 46, column: 5)
!11507 = distinct !DILexicalBlock(scope: !11437, file: !11438, line: 46, column: 5)
!11508 = !DILocation(line: 46, column: 5, scope: !11507)
!11509 = !DILocation(line: 46, column: 5, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11506, file: !11438, line: 46, column: 5)
!11511 = !DILocation(line: 48, column: 25, scope: !11437)
!11512 = !DILocation(line: 48, column: 42, scope: !11437)
!11513 = !DILocation(line: 50, column: 24, scope: !11437)
!11514 = !DILocation(line: 49, column: 94, scope: !11437)
!11515 = !DILocation(line: 50, column: 54, scope: !11437)
!11516 = !DILocation(line: 48, column: 22, scope: !11437)
!11517 = !DILocation(line: 51, column: 1, scope: !11437)
!11518 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !11438, file: !11438, line: 59, type: !11519, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3525, retainedNodes: !11521)
!11519 = !DISubroutineType(types: !11520)
!11520 = !{null, !11441, !108, !2102, !2102}
!11521 = !{!11522, !11523, !11524, !11525}
!11522 = !DILocalVariable(name: "base", arg: 1, scope: !11518, file: !11438, line: 59, type: !11441)
!11523 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11518, file: !11438, line: 59, type: !108)
!11524 = !DILocalVariable(name: "pre", arg: 3, scope: !11518, file: !11438, line: 59, type: !2102)
!11525 = !DILocalVariable(name: "post", arg: 4, scope: !11518, file: !11438, line: 59, type: !2102)
!11526 = !DILocation(line: 0, scope: !11518)
!11527 = !DILocation(line: 61, column: 5, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !11438, line: 61, column: 5)
!11529 = distinct !DILexicalBlock(scope: !11518, file: !11438, line: 61, column: 5)
!11530 = !DILocation(line: 61, column: 5, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11528, file: !11438, line: 61, column: 5)
!11532 = !DILocation(line: 63, column: 13, scope: !11518)
!11533 = !DILocation(line: 63, column: 63, scope: !11518)
!11534 = !DILocation(line: 63, column: 10, scope: !11518)
!11535 = !DILocation(line: 64, column: 14, scope: !11518)
!11536 = !DILocation(line: 64, column: 31, scope: !11518)
!11537 = !DILocation(line: 64, column: 11, scope: !11518)
!11538 = !DILocation(line: 65, column: 1, scope: !11518)
!11539 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !11438, file: !11438, line: 73, type: !11540, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3525, retainedNodes: !11542)
!11540 = !DISubroutineType(types: !11541)
!11541 = !{null, !11441, !108, !108, !108, !108}
!11542 = !{!11543, !11544, !11545, !11546, !11547}
!11543 = !DILocalVariable(name: "base", arg: 1, scope: !11539, file: !11438, line: 73, type: !11441)
!11544 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11539, file: !11438, line: 73, type: !108)
!11545 = !DILocalVariable(name: "mux", arg: 3, scope: !11539, file: !11438, line: 73, type: !108)
!11546 = !DILocalVariable(name: "pre", arg: 4, scope: !11539, file: !11438, line: 73, type: !108)
!11547 = !DILocalVariable(name: "post", arg: 5, scope: !11539, file: !11438, line: 73, type: !108)
!11548 = !DILocation(line: 0, scope: !11539)
!11549 = !DILocation(line: 75, column: 5, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !11438, line: 75, column: 5)
!11551 = distinct !DILexicalBlock(scope: !11539, file: !11438, line: 75, column: 5)
!11552 = !DILocation(line: 75, column: 5, scope: !11551)
!11553 = !DILocation(line: 75, column: 5, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11550, file: !11438, line: 75, column: 5)
!11555 = !DILocation(line: 76, column: 5, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !11438, line: 76, column: 5)
!11557 = distinct !DILexicalBlock(scope: !11539, file: !11438, line: 76, column: 5)
!11558 = !DILocation(line: 76, column: 5, scope: !11557)
!11559 = !DILocation(line: 76, column: 5, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11556, file: !11438, line: 76, column: 5)
!11561 = !DILocation(line: 78, column: 25, scope: !11539)
!11562 = !DILocation(line: 78, column: 42, scope: !11539)
!11563 = !DILocation(line: 80, column: 24, scope: !11539)
!11564 = !DILocation(line: 80, column: 51, scope: !11539)
!11565 = !DILocation(line: 79, column: 121, scope: !11539)
!11566 = !DILocation(line: 80, column: 49, scope: !11539)
!11567 = !DILocation(line: 80, column: 81, scope: !11539)
!11568 = !DILocation(line: 78, column: 22, scope: !11539)
!11569 = !DILocation(line: 81, column: 1, scope: !11539)
!11570 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !11571, file: !11571, line: 43, type: !11572, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11574)
!11571 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11572 = !DISubroutineType(types: !11573)
!11573 = !{!108, !3541}
!11574 = !{!11575}
!11575 = !DILocalVariable(name: "base", arg: 1, scope: !11570, file: !11571, line: 43, type: !3541)
!11576 = !DILocation(line: 0, scope: !11570)
!11577 = !DILocation(line: 45, column: 9, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11570, file: !11571, line: 45, column: 9)
!11579 = !DILocation(line: 45, column: 9, scope: !11570)
!11580 = !DILocation(line: 48, column: 26, scope: !11570)
!11581 = !DILocation(line: 48, column: 45, scope: !11570)
!11582 = !DILocation(line: 48, column: 23, scope: !11570)
!11583 = !DILocation(line: 48, column: 5, scope: !11570)
!11584 = !DILocation(line: 49, column: 1, scope: !11570)
!11585 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !3532, file: !3532, line: 220, type: !11586, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11588)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{!119, !3541, !108}
!11588 = !{!11589, !11590}
!11589 = !DILocalVariable(name: "base", arg: 1, scope: !11585, file: !3532, line: 220, type: !3541)
!11590 = !DILocalVariable(name: "pllControl", arg: 2, scope: !11585, file: !3532, line: 220, type: !108)
!11591 = !DILocation(line: 0, scope: !11585)
!11592 = !DILocation(line: 222, column: 19, scope: !11585)
!11593 = !DILocation(line: 222, column: 58, scope: !11585)
!11594 = !DILocation(line: 222, column: 12, scope: !11585)
!11595 = !DILocation(line: 222, column: 5, scope: !11585)
!11596 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !11571, file: !11571, line: 57, type: !11572, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11597)
!11597 = !{!11598}
!11598 = !DILocalVariable(name: "base", arg: 1, scope: !11596, file: !11571, line: 57, type: !3541)
!11599 = !DILocation(line: 0, scope: !11596)
!11600 = !DILocation(line: 59, column: 9, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11596, file: !11571, line: 59, column: 9)
!11602 = !DILocation(line: 59, column: 9, scope: !11596)
!11603 = !DILocation(line: 62, column: 9, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11596, file: !11571, line: 62, column: 9)
!11605 = !DILocation(line: 62, column: 28, scope: !11604)
!11606 = !DILocation(line: 0, scope: !11604)
!11607 = !DILocation(line: 66, column: 1, scope: !11596)
!11608 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !11571, file: !11571, line: 74, type: !11572, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11609)
!11609 = !{!11610, !11611, !11612, !11613}
!11610 = !DILocalVariable(name: "base", arg: 1, scope: !11608, file: !11571, line: 74, type: !3541)
!11611 = !DILocalVariable(name: "divSelect", scope: !11608, file: !11571, line: 76, type: !164)
!11612 = !DILocalVariable(name: "divTestSelect", scope: !11608, file: !11571, line: 76, type: !164)
!11613 = !DILocalVariable(name: "factor", scope: !11608, file: !11571, line: 77, type: !3604)
!11614 = !DILocation(line: 0, scope: !11608)
!11615 = !DILocation(line: 79, column: 9, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11608, file: !11571, line: 79, column: 9)
!11617 = !DILocation(line: 79, column: 9, scope: !11608)
!11618 = !DILocation(line: 82, column: 17, scope: !11608)
!11619 = !DILocation(line: 83, column: 22, scope: !11608)
!11620 = !DILocation(line: 83, column: 100, scope: !11608)
!11621 = !DILocation(line: 83, column: 21, scope: !11608)
!11622 = !DILocation(line: 86, column: 5, scope: !11608)
!11623 = !DILocation(line: 100, column: 9, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11608, file: !11571, line: 100, column: 9)
!11625 = !DILocation(line: 100, column: 41, scope: !11624)
!11626 = !DILocation(line: 100, column: 9, scope: !11608)
!11627 = !DILocation(line: 102, column: 27, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11624, file: !11571, line: 101, column: 5)
!11629 = !DILocation(line: 102, column: 59, scope: !11628)
!11630 = !DILocation(line: 102, column: 19, scope: !11628)
!11631 = !DILocation(line: 103, column: 27, scope: !11628)
!11632 = !DILocation(line: 103, column: 62, scope: !11628)
!11633 = !DILocation(line: 103, column: 19, scope: !11628)
!11634 = !DILocation(line: 102, column: 95, scope: !11628)
!11635 = !DILocation(line: 104, column: 27, scope: !11628)
!11636 = !DILocation(line: 104, column: 60, scope: !11628)
!11637 = !DILocation(line: 104, column: 19, scope: !11628)
!11638 = !DILocation(line: 103, column: 98, scope: !11628)
!11639 = !DILocation(line: 105, column: 39, scope: !11628)
!11640 = !DILocation(line: 105, column: 27, scope: !11628)
!11641 = !DILocation(line: 105, column: 60, scope: !11628)
!11642 = !DILocation(line: 105, column: 70, scope: !11628)
!11643 = !DILocation(line: 105, column: 57, scope: !11628)
!11644 = !DILocation(line: 105, column: 16, scope: !11628)
!11645 = !DILocation(line: 105, column: 9, scope: !11628)
!11646 = !DILocation(line: 109, column: 28, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11624, file: !11571, line: 108, column: 5)
!11648 = !DILocation(line: 109, column: 48, scope: !11647)
!11649 = !DILocation(line: 109, column: 46, scope: !11647)
!11650 = !DILocation(line: 109, column: 9, scope: !11647)
!11651 = !DILocation(line: 111, column: 1, scope: !11608)
!11652 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !11571, file: !11571, line: 119, type: !11572, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11653)
!11653 = !{!11654}
!11654 = !DILocalVariable(name: "base", arg: 1, scope: !11652, file: !11571, line: 119, type: !3541)
!11655 = !DILocation(line: 0, scope: !11652)
!11656 = !DILocation(line: 121, column: 9, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11652, file: !11571, line: 121, column: 9)
!11658 = !DILocation(line: 125, column: 1, scope: !11652)
!11659 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !11571, file: !11571, line: 133, type: !11572, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11660)
!11660 = !{!11661, !11662, !11663, !11664, !11665}
!11661 = !DILocalVariable(name: "base", arg: 1, scope: !11659, file: !11571, line: 133, type: !3541)
!11662 = !DILocalVariable(name: "divSelect", scope: !11659, file: !11571, line: 135, type: !164)
!11663 = !DILocalVariable(name: "divPostSelect", scope: !11659, file: !11571, line: 135, type: !164)
!11664 = !DILocalVariable(name: "divTestSelect", scope: !11659, file: !11571, line: 135, type: !164)
!11665 = !DILocalVariable(name: "factor", scope: !11659, file: !11571, line: 136, type: !3604)
!11666 = !DILocation(line: 0, scope: !11659)
!11667 = !DILocation(line: 138, column: 9, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11659, file: !11571, line: 138, column: 9)
!11669 = !DILocation(line: 138, column: 9, scope: !11659)
!11670 = !DILocation(line: 141, column: 17, scope: !11659)
!11671 = !DILocation(line: 142, column: 22, scope: !11659)
!11672 = !DILocation(line: 142, column: 101, scope: !11659)
!11673 = !DILocation(line: 142, column: 21, scope: !11659)
!11674 = !DILocation(line: 144, column: 22, scope: !11659)
!11675 = !DILocation(line: 144, column: 104, scope: !11659)
!11676 = !DILocation(line: 144, column: 21, scope: !11659)
!11677 = !DILocation(line: 147, column: 5, scope: !11659)
!11678 = !DILocation(line: 161, column: 5, scope: !11659)
!11679 = !DILocation(line: 175, column: 9, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11659, file: !11571, line: 175, column: 9)
!11681 = !DILocation(line: 175, column: 43, scope: !11680)
!11682 = !DILocation(line: 175, column: 9, scope: !11659)
!11683 = !DILocation(line: 177, column: 27, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11680, file: !11571, line: 176, column: 5)
!11685 = !DILocation(line: 177, column: 61, scope: !11684)
!11686 = !DILocation(line: 177, column: 19, scope: !11684)
!11687 = !DILocation(line: 178, column: 27, scope: !11684)
!11688 = !DILocation(line: 178, column: 64, scope: !11684)
!11689 = !DILocation(line: 178, column: 19, scope: !11684)
!11690 = !DILocation(line: 177, column: 99, scope: !11684)
!11691 = !DILocation(line: 179, column: 27, scope: !11684)
!11692 = !DILocation(line: 179, column: 62, scope: !11684)
!11693 = !DILocation(line: 179, column: 19, scope: !11684)
!11694 = !DILocation(line: 178, column: 102, scope: !11684)
!11695 = !DILocation(line: 180, column: 40, scope: !11684)
!11696 = !DILocation(line: 180, column: 58, scope: !11684)
!11697 = !DILocation(line: 180, column: 27, scope: !11684)
!11698 = !DILocation(line: 180, column: 79, scope: !11684)
!11699 = !DILocation(line: 180, column: 89, scope: !11684)
!11700 = !DILocation(line: 180, column: 76, scope: !11684)
!11701 = !DILocation(line: 180, column: 16, scope: !11684)
!11702 = !DILocation(line: 180, column: 9, scope: !11684)
!11703 = !DILocation(line: 184, column: 29, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11680, file: !11571, line: 183, column: 5)
!11705 = !DILocation(line: 184, column: 47, scope: !11704)
!11706 = !DILocation(line: 184, column: 67, scope: !11704)
!11707 = !DILocation(line: 184, column: 65, scope: !11704)
!11708 = !DILocation(line: 184, column: 9, scope: !11704)
!11709 = !DILocation(line: 186, column: 1, scope: !11659)
!11710 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !11571, file: !11571, line: 194, type: !11572, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11711)
!11711 = !{!11712, !11713, !11714, !11715, !11716}
!11712 = !DILocalVariable(name: "base", arg: 1, scope: !11710, file: !11571, line: 194, type: !3541)
!11713 = !DILocalVariable(name: "divSelect", scope: !11710, file: !11571, line: 196, type: !164)
!11714 = !DILocalVariable(name: "divPostSelect", scope: !11710, file: !11571, line: 196, type: !164)
!11715 = !DILocalVariable(name: "divTestSelect", scope: !11710, file: !11571, line: 196, type: !164)
!11716 = !DILocalVariable(name: "factor", scope: !11710, file: !11571, line: 197, type: !3604)
!11717 = !DILocation(line: 0, scope: !11710)
!11718 = !DILocation(line: 199, column: 9, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11710, file: !11571, line: 199, column: 9)
!11720 = !DILocation(line: 199, column: 9, scope: !11710)
!11721 = !DILocation(line: 202, column: 17, scope: !11710)
!11722 = !DILocation(line: 203, column: 22, scope: !11710)
!11723 = !DILocation(line: 203, column: 101, scope: !11710)
!11724 = !DILocation(line: 203, column: 21, scope: !11710)
!11725 = !DILocation(line: 205, column: 22, scope: !11710)
!11726 = !DILocation(line: 205, column: 104, scope: !11710)
!11727 = !DILocation(line: 205, column: 21, scope: !11710)
!11728 = !DILocation(line: 208, column: 5, scope: !11710)
!11729 = !DILocation(line: 222, column: 5, scope: !11710)
!11730 = !DILocation(line: 236, column: 9, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11710, file: !11571, line: 236, column: 9)
!11732 = !DILocation(line: 236, column: 43, scope: !11731)
!11733 = !DILocation(line: 236, column: 9, scope: !11710)
!11734 = !DILocation(line: 238, column: 27, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11731, file: !11571, line: 237, column: 5)
!11736 = !DILocation(line: 238, column: 61, scope: !11735)
!11737 = !DILocation(line: 238, column: 19, scope: !11735)
!11738 = !DILocation(line: 239, column: 27, scope: !11735)
!11739 = !DILocation(line: 239, column: 64, scope: !11735)
!11740 = !DILocation(line: 239, column: 19, scope: !11735)
!11741 = !DILocation(line: 238, column: 99, scope: !11735)
!11742 = !DILocation(line: 240, column: 27, scope: !11735)
!11743 = !DILocation(line: 240, column: 62, scope: !11735)
!11744 = !DILocation(line: 240, column: 19, scope: !11735)
!11745 = !DILocation(line: 239, column: 102, scope: !11735)
!11746 = !DILocation(line: 241, column: 40, scope: !11735)
!11747 = !DILocation(line: 241, column: 58, scope: !11735)
!11748 = !DILocation(line: 241, column: 27, scope: !11735)
!11749 = !DILocation(line: 241, column: 79, scope: !11735)
!11750 = !DILocation(line: 241, column: 89, scope: !11735)
!11751 = !DILocation(line: 241, column: 76, scope: !11735)
!11752 = !DILocation(line: 241, column: 16, scope: !11735)
!11753 = !DILocation(line: 241, column: 9, scope: !11735)
!11754 = !DILocation(line: 245, column: 29, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11731, file: !11571, line: 244, column: 5)
!11756 = !DILocation(line: 245, column: 47, scope: !11755)
!11757 = !DILocation(line: 245, column: 67, scope: !11755)
!11758 = !DILocation(line: 245, column: 65, scope: !11755)
!11759 = !DILocation(line: 245, column: 9, scope: !11755)
!11760 = !DILocation(line: 247, column: 1, scope: !11710)
!11761 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !11571, file: !11571, line: 255, type: !11762, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11764)
!11762 = !DISubroutineType(types: !11763)
!11763 = !{!108, !3541, !108}
!11764 = !{!11765, !11766, !11767, !11768}
!11765 = !DILocalVariable(name: "base", arg: 1, scope: !11761, file: !11571, line: 255, type: !3541)
!11766 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11761, file: !11571, line: 255, type: !108)
!11767 = !DILocalVariable(name: "main", scope: !11761, file: !11571, line: 257, type: !108)
!11768 = !DILocalVariable(name: "frac", scope: !11761, file: !11571, line: 257, type: !108)
!11769 = !DILocation(line: 0, scope: !11761)
!11770 = !DILocation(line: 260, column: 5, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !11571, line: 260, column: 5)
!11772 = distinct !DILexicalBlock(scope: !11761, file: !11571, line: 260, column: 5)
!11773 = !DILocation(line: 260, column: 5, scope: !11772)
!11774 = !DILocation(line: 260, column: 5, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11771, file: !11571, line: 260, column: 5)
!11776 = !DILocation(line: 262, column: 12, scope: !11761)
!11777 = !DILocation(line: 263, column: 12, scope: !11761)
!11778 = !DILocation(line: 265, column: 17, scope: !11761)
!11779 = !DILocation(line: 265, column: 24, scope: !11761)
!11780 = !DILocation(line: 265, column: 5, scope: !11761)
!11781 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !3532, file: !3532, line: 373, type: !11762, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3528, retainedNodes: !11782)
!11782 = !{!11783, !11784}
!11783 = !DILocalVariable(name: "base", arg: 1, scope: !11781, file: !3532, line: 373, type: !3541)
!11784 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !11781, file: !3532, line: 373, type: !108)
!11785 = !DILocation(line: 0, scope: !11781)
!11786 = !DILocation(line: 375, column: 13, scope: !11781)
!11787 = !DILocation(line: 375, column: 52, scope: !11781)
!11788 = !DILocation(line: 375, column: 49, scope: !11781)
!11789 = !DILocation(line: 375, column: 85, scope: !11781)
!11790 = !DILocation(line: 375, column: 5, scope: !11781)
!11791 = distinct !DISubprogram(name: "GPIO_Init", scope: !11792, file: !11792, line: 47, type: !11793, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !11817)
!11792 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11793 = !DISubroutineType(types: !11794)
!11794 = !{null, !11795, !11807}
!11795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11796, size: 32)
!11796 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !1074, line: 19729, baseType: !11797)
!11797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 19720, size: 256, elements: !11798)
!11798 = !{!11799, !11800, !11801, !11802, !11803, !11804, !11805, !11806}
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !11797, file: !1074, line: 19721, baseType: !1078, size: 32)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !11797, file: !1074, line: 19722, baseType: !1078, size: 32, offset: 32)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !11797, file: !1074, line: 19723, baseType: !1149, size: 32, offset: 64)
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11797, file: !1074, line: 19724, baseType: !1078, size: 32, offset: 96)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11797, file: !1074, line: 19725, baseType: !1078, size: 32, offset: 128)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !11797, file: !1074, line: 19726, baseType: !1078, size: 32, offset: 160)
!11805 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !11797, file: !1074, line: 19727, baseType: !1078, size: 32, offset: 192)
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !11797, file: !1074, line: 19728, baseType: !1078, size: 32, offset: 224)
!11807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11808, size: 32)
!11808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11809)
!11809 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !1692, line: 78, baseType: !11810)
!11810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !1692, line: 73, size: 96, elements: !11811)
!11811 = !{!11812, !11813, !11815}
!11812 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !11810, file: !1692, line: 75, baseType: !108, size: 32)
!11813 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11810, file: !1692, line: 76, baseType: !11814, size: 32, offset: 32)
!11814 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !1692, line: 53, baseType: !3608)
!11815 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !11810, file: !1692, line: 77, baseType: !11816, size: 32, offset: 64)
!11816 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !1692, line: 63, baseType: !3612)
!11817 = !{!11818, !11819, !11820, !11821}
!11818 = !DILocalVariable(name: "base", arg: 1, scope: !11791, file: !11792, line: 47, type: !11795)
!11819 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11791, file: !11792, line: 47, type: !11807)
!11820 = !DILocalVariable(name: "pin", scope: !11791, file: !11792, line: 49, type: !108)
!11821 = !DILocalVariable(name: "icr", scope: !11791, file: !11792, line: 50, type: !1198)
!11822 = !DILocation(line: 0, scope: !11791)
!11823 = !DILocation(line: 53, column: 5, scope: !11791)
!11824 = !DILocation(line: 53, column: 24, scope: !11791)
!11825 = !DILocation(line: 54, column: 2, scope: !11791)
!11826 = !DILocation(line: 54, column: 26, scope: !11791)
!11827 = !DILocation(line: 57, column: 23, scope: !11791)
!11828 = !DILocation(line: 60, column: 21, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11791, file: !11792, line: 60, column: 9)
!11830 = !DILocation(line: 60, column: 31, scope: !11829)
!11831 = !DILocation(line: 0, scope: !11829)
!11832 = !DILocation(line: 60, column: 9, scope: !11791)
!11833 = !DILocation(line: 61, column: 9, scope: !11829)
!11834 = !DILocation(line: 61, column: 29, scope: !11829)
!11835 = !DILocation(line: 63, column: 32, scope: !11829)
!11836 = !DILocation(line: 63, column: 9, scope: !11829)
!11837 = !DILocation(line: 63, column: 29, scope: !11829)
!11838 = !DILocation(line: 66, column: 12, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11791, file: !11792, line: 66, column: 8)
!11840 = !DILocation(line: 66, column: 8, scope: !11791)
!11841 = !DILocation(line: 73, column: 24, scope: !11791)
!11842 = !DILocation(line: 73, column: 5, scope: !11791)
!11843 = !DILocation(line: 77, column: 30, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !11792, line: 76, column: 9)
!11845 = distinct !DILexicalBlock(scope: !11791, file: !11792, line: 74, column: 5)
!11846 = !DILocation(line: 77, column: 26, scope: !11844)
!11847 = !DILocation(line: 77, column: 21, scope: !11844)
!11848 = !DILocation(line: 77, column: 18, scope: !11844)
!11849 = !DILocation(line: 78, column: 13, scope: !11844)
!11850 = !DILocation(line: 82, column: 21, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11845, file: !11792, line: 81, column: 9)
!11852 = !DILocation(line: 82, column: 38, scope: !11851)
!11853 = !DILocation(line: 82, column: 34, scope: !11851)
!11854 = !DILocation(line: 82, column: 29, scope: !11851)
!11855 = !DILocation(line: 82, column: 26, scope: !11851)
!11856 = !DILocation(line: 82, column: 53, scope: !11851)
!11857 = !DILocation(line: 82, column: 47, scope: !11851)
!11858 = !DILocation(line: 83, column: 13, scope: !11851)
!11859 = !DILocation(line: 87, column: 21, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11845, file: !11792, line: 86, column: 9)
!11861 = !DILocation(line: 87, column: 38, scope: !11860)
!11862 = !DILocation(line: 87, column: 34, scope: !11860)
!11863 = !DILocation(line: 87, column: 29, scope: !11860)
!11864 = !DILocation(line: 87, column: 26, scope: !11860)
!11865 = !DILocation(line: 87, column: 53, scope: !11860)
!11866 = !DILocation(line: 87, column: 47, scope: !11860)
!11867 = !DILocation(line: 88, column: 13, scope: !11860)
!11868 = !DILocation(line: 92, column: 29, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11845, file: !11792, line: 91, column: 9)
!11870 = !DILocation(line: 92, column: 25, scope: !11869)
!11871 = !DILocation(line: 92, column: 18, scope: !11869)
!11872 = !DILocation(line: 93, column: 13, scope: !11869)
!11873 = !DILocation(line: 0, scope: !11845)
!11874 = !DILocation(line: 100, column: 1, scope: !11791)
!11875 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !11792, file: !11792, line: 111, type: !11876, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !11879)
!11876 = !DISubroutineType(types: !11877)
!11877 = !{null, !11795, !108, !11878}
!11878 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !1692, line: 70, baseType: !1691)
!11879 = !{!11880, !11881, !11882}
!11880 = !DILocalVariable(name: "base", arg: 1, scope: !11875, file: !11792, line: 111, type: !11795)
!11881 = !DILocalVariable(name: "pin", arg: 2, scope: !11875, file: !11792, line: 111, type: !108)
!11882 = !DILocalVariable(name: "pinVal", arg: 3, scope: !11875, file: !11792, line: 111, type: !11878)
!11883 = !DILocation(line: 0, scope: !11875)
!11884 = !DILocation(line: 113, column: 5, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !11792, line: 113, column: 5)
!11886 = distinct !DILexicalBlock(scope: !11875, file: !11792, line: 113, column: 5)
!11887 = !DILocation(line: 113, column: 5, scope: !11886)
!11888 = !DILocation(line: 113, column: 5, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11885, file: !11792, line: 113, column: 5)
!11890 = !DILocation(line: 114, column: 16, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11875, file: !11792, line: 114, column: 9)
!11892 = !DILocation(line: 0, scope: !11891)
!11893 = !DILocation(line: 114, column: 9, scope: !11875)
!11894 = !DILocation(line: 116, column: 9, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11891, file: !11792, line: 115, column: 5)
!11896 = !DILocation(line: 116, column: 27, scope: !11895)
!11897 = !DILocation(line: 117, column: 5, scope: !11895)
!11898 = !DILocation(line: 120, column: 30, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11891, file: !11792, line: 119, column: 5)
!11900 = !DILocation(line: 120, column: 9, scope: !11899)
!11901 = !DILocation(line: 120, column: 27, scope: !11899)
!11902 = !DILocation(line: 122, column: 1, scope: !11875)
!11903 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !11792, file: !11792, line: 133, type: !11904, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !11906)
!11904 = !DISubroutineType(types: !11905)
!11905 = !{null, !11795, !108, !119}
!11906 = !{!11907, !11908, !11909}
!11907 = !DILocalVariable(name: "base", arg: 1, scope: !11903, file: !11792, line: 133, type: !11795)
!11908 = !DILocalVariable(name: "pin", arg: 2, scope: !11903, file: !11792, line: 133, type: !108)
!11909 = !DILocalVariable(name: "enable", arg: 3, scope: !11903, file: !11792, line: 133, type: !119)
!11910 = !DILocation(line: 0, scope: !11903)
!11911 = !DILocation(line: 135, column: 5, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11913, file: !11792, line: 135, column: 5)
!11913 = distinct !DILexicalBlock(scope: !11903, file: !11792, line: 135, column: 5)
!11914 = !DILocation(line: 135, column: 5, scope: !11913)
!11915 = !DILocation(line: 135, column: 5, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11912, file: !11792, line: 135, column: 5)
!11917 = !DILocation(line: 0, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11903, file: !11792, line: 137, column: 8)
!11919 = !DILocation(line: 137, column: 8, scope: !11903)
!11920 = !DILocation(line: 138, column: 9, scope: !11918)
!11921 = !DILocation(line: 138, column: 28, scope: !11918)
!11922 = !DILocation(line: 140, column: 31, scope: !11918)
!11923 = !DILocation(line: 140, column: 9, scope: !11918)
!11924 = !DILocation(line: 140, column: 28, scope: !11918)
!11925 = !DILocation(line: 141, column: 1, scope: !11903)
!11926 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !11792, file: !11792, line: 150, type: !11904, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3605, retainedNodes: !11927)
!11927 = !{!11928, !11929, !11930}
!11928 = !DILocalVariable(name: "base", arg: 1, scope: !11926, file: !11792, line: 150, type: !11795)
!11929 = !DILocalVariable(name: "pin", arg: 2, scope: !11926, file: !11792, line: 150, type: !108)
!11930 = !DILocalVariable(name: "enable", arg: 3, scope: !11926, file: !11792, line: 150, type: !119)
!11931 = !DILocation(line: 0, scope: !11926)
!11932 = !DILocation(line: 152, column: 5, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !11792, line: 152, column: 5)
!11934 = distinct !DILexicalBlock(scope: !11926, file: !11792, line: 152, column: 5)
!11935 = !DILocation(line: 152, column: 5, scope: !11934)
!11936 = !DILocation(line: 152, column: 5, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11933, file: !11792, line: 152, column: 5)
!11938 = !DILocation(line: 0, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11926, file: !11792, line: 154, column: 8)
!11940 = !DILocation(line: 154, column: 8, scope: !11926)
!11941 = !DILocation(line: 155, column: 9, scope: !11939)
!11942 = !DILocation(line: 155, column: 33, scope: !11939)
!11943 = !DILocation(line: 157, column: 36, scope: !11939)
!11944 = !DILocation(line: 157, column: 9, scope: !11939)
!11945 = !DILocation(line: 157, column: 33, scope: !11939)
!11946 = !DILocation(line: 158, column: 1, scope: !11926)
!11947 = distinct !DISubprogram(name: "UART_Init", scope: !11948, file: !11948, line: 47, type: !11949, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !11985)
!11948 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11949 = !DISubroutineType(types: !11950)
!11950 = !{null, !11951, !11974}
!11951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11952, size: 32)
!11952 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1074, line: 41342, baseType: !11953)
!11953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 41322, size: 1504, elements: !11954)
!11954 = !{!11955, !11956, !11957, !11958, !11959, !11960, !11961, !11962, !11963, !11964, !11965, !11966, !11967, !11968, !11969, !11970, !11971, !11972, !11973}
!11955 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11953, file: !1074, line: 41323, baseType: !1149, size: 32)
!11956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11953, file: !1074, line: 41324, baseType: !2044, size: 480, offset: 32)
!11957 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11953, file: !1074, line: 41325, baseType: !1078, size: 32, offset: 512)
!11958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11953, file: !1074, line: 41326, baseType: !2044, size: 480, offset: 544)
!11959 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11953, file: !1074, line: 41327, baseType: !1078, size: 32, offset: 1024)
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11953, file: !1074, line: 41328, baseType: !1078, size: 32, offset: 1056)
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11953, file: !1074, line: 41329, baseType: !1078, size: 32, offset: 1088)
!11962 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11953, file: !1074, line: 41330, baseType: !1078, size: 32, offset: 1120)
!11963 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11953, file: !1074, line: 41331, baseType: !1078, size: 32, offset: 1152)
!11964 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11953, file: !1074, line: 41332, baseType: !1078, size: 32, offset: 1184)
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11953, file: !1074, line: 41333, baseType: !1078, size: 32, offset: 1216)
!11966 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11953, file: !1074, line: 41334, baseType: !1078, size: 32, offset: 1248)
!11967 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11953, file: !1074, line: 41335, baseType: !1078, size: 32, offset: 1280)
!11968 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11953, file: !1074, line: 41336, baseType: !1078, size: 32, offset: 1312)
!11969 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11953, file: !1074, line: 41337, baseType: !1078, size: 32, offset: 1344)
!11970 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11953, file: !1074, line: 41338, baseType: !1149, size: 32, offset: 1376)
!11971 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11953, file: !1074, line: 41339, baseType: !1078, size: 32, offset: 1408)
!11972 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11953, file: !1074, line: 41340, baseType: !1078, size: 32, offset: 1440)
!11973 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11953, file: !1074, line: 41341, baseType: !1078, size: 32, offset: 1472)
!11974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11975, size: 32)
!11975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11976)
!11976 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1874, line: 57, baseType: !11977)
!11977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1874, line: 49, size: 192, elements: !11978)
!11978 = !{!11979, !11980, !11981, !11982, !11983, !11984}
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !11977, file: !1874, line: 51, baseType: !108, size: 32)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !11977, file: !1874, line: 52, baseType: !108, size: 32, offset: 32)
!11981 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !11977, file: !1874, line: 53, baseType: !108, size: 32, offset: 64)
!11982 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !11977, file: !1874, line: 54, baseType: !108, size: 32, offset: 96)
!11983 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11977, file: !1874, line: 55, baseType: !108, size: 32, offset: 128)
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !11977, file: !1874, line: 56, baseType: !108, size: 32, offset: 160)
!11985 = !{!11986, !11987}
!11986 = !DILocalVariable(name: "base", arg: 1, scope: !11947, file: !11948, line: 47, type: !11951)
!11987 = !DILocalVariable(name: "initConfig", arg: 2, scope: !11947, file: !11948, line: 47, type: !11974)
!11988 = !DILocation(line: 0, scope: !11947)
!11989 = !DILocation(line: 49, column: 5, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11991, file: !11948, line: 49, column: 5)
!11991 = distinct !DILexicalBlock(scope: !11947, file: !11948, line: 49, column: 5)
!11992 = !DILocation(line: 49, column: 5, scope: !11991)
!11993 = !DILocation(line: 49, column: 5, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11990, file: !11948, line: 49, column: 5)
!11995 = !DILocation(line: 52, column: 5, scope: !11947)
!11996 = !DILocation(line: 52, column: 25, scope: !11947)
!11997 = !DILocation(line: 55, column: 5, scope: !11947)
!11998 = !DILocation(line: 60, column: 41, scope: !11947)
!11999 = !DILocation(line: 61, column: 41, scope: !11947)
!12000 = !DILocation(line: 62, column: 41, scope: !11947)
!12001 = !DILocation(line: 63, column: 41, scope: !11947)
!12002 = !DILocation(line: 60, column: 5, scope: !11947)
!12003 = !DILocation(line: 60, column: 25, scope: !11947)
!12004 = !DILocation(line: 61, column: 52, scope: !11947)
!12005 = !DILocation(line: 62, column: 52, scope: !11947)
!12006 = !DILocation(line: 63, column: 52, scope: !11947)
!12007 = !DILocation(line: 68, column: 5, scope: !11947)
!12008 = !DILocation(line: 68, column: 25, scope: !11947)
!12009 = !DILocation(line: 72, column: 40, scope: !11947)
!12010 = !DILocation(line: 72, column: 63, scope: !11947)
!12011 = !DILocation(line: 72, column: 5, scope: !11947)
!12012 = !DILocation(line: 73, column: 1, scope: !11947)
!12013 = distinct !DISubprogram(name: "UART_Deinit", scope: !11948, file: !11948, line: 82, type: !12014, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12016)
!12014 = !DISubroutineType(types: !12015)
!12015 = !{null, !11951}
!12016 = !{!12017}
!12017 = !DILocalVariable(name: "base", arg: 1, scope: !12013, file: !11948, line: 82, type: !11951)
!12018 = !DILocation(line: 0, scope: !12013)
!12019 = !DILocation(line: 85, column: 5, scope: !12013)
!12020 = !DILocation(line: 85, column: 25, scope: !12013)
!12021 = !DILocation(line: 88, column: 26, scope: !12013)
!12022 = !DILocation(line: 89, column: 5, scope: !12013)
!12023 = !DILocation(line: 89, column: 26, scope: !12013)
!12024 = !DILocation(line: 90, column: 5, scope: !12013)
!12025 = !DILocation(line: 90, column: 26, scope: !12013)
!12026 = !DILocation(line: 93, column: 5, scope: !12013)
!12027 = !DILocation(line: 93, column: 26, scope: !12013)
!12028 = !DILocation(line: 94, column: 5, scope: !12013)
!12029 = !DILocation(line: 94, column: 26, scope: !12013)
!12030 = !DILocation(line: 95, column: 5, scope: !12013)
!12031 = !DILocation(line: 95, column: 26, scope: !12013)
!12032 = !DILocation(line: 96, column: 5, scope: !12013)
!12033 = !DILocation(line: 96, column: 26, scope: !12013)
!12034 = !DILocation(line: 97, column: 5, scope: !12013)
!12035 = !DILocation(line: 97, column: 26, scope: !12013)
!12036 = !DILocation(line: 98, column: 5, scope: !12013)
!12037 = !DILocation(line: 98, column: 26, scope: !12013)
!12038 = !DILocation(line: 99, column: 5, scope: !12013)
!12039 = !DILocation(line: 99, column: 26, scope: !12013)
!12040 = !DILocation(line: 103, column: 25, scope: !12013)
!12041 = !DILocation(line: 104, column: 5, scope: !12013)
!12042 = !DILocation(line: 104, column: 14, scope: !12013)
!12043 = !DILocation(line: 104, column: 34, scope: !12013)
!12044 = !DILocation(line: 104, column: 12, scope: !12013)
!12045 = distinct !{!12045, !12041, !12046}
!12046 = !DILocation(line: 104, column: 57, scope: !12013)
!12047 = !DILocation(line: 105, column: 1, scope: !12013)
!12048 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !11948, file: !11948, line: 113, type: !12049, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12051)
!12049 = !DISubroutineType(types: !12050)
!12050 = !{null, !11951, !108, !108}
!12051 = !{!12052, !12053, !12054, !12055, !12056, !12057, !12058, !12059, !12060, !12063, !12064}
!12052 = !DILocalVariable(name: "base", arg: 1, scope: !12048, file: !11948, line: 113, type: !11951)
!12053 = !DILocalVariable(name: "clockRate", arg: 2, scope: !12048, file: !11948, line: 113, type: !108)
!12054 = !DILocalVariable(name: "baudRate", arg: 3, scope: !12048, file: !11948, line: 113, type: !108)
!12055 = !DILocalVariable(name: "numerator", scope: !12048, file: !11948, line: 115, type: !108)
!12056 = !DILocalVariable(name: "denominator", scope: !12048, file: !11948, line: 116, type: !108)
!12057 = !DILocalVariable(name: "divisor", scope: !12048, file: !11948, line: 117, type: !108)
!12058 = !DILocalVariable(name: "refFreqDiv", scope: !12048, file: !11948, line: 118, type: !108)
!12059 = !DILocalVariable(name: "divider", scope: !12048, file: !11948, line: 119, type: !108)
!12060 = !DILocalVariable(name: "m", scope: !12061, file: !11948, line: 141, type: !108)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !11948, line: 140, column: 5)
!12062 = distinct !DILexicalBlock(scope: !12048, file: !11948, line: 138, column: 9)
!12063 = !DILocalVariable(name: "n", scope: !12061, file: !11948, line: 142, type: !108)
!12064 = !DILocalVariable(name: "max", scope: !12061, file: !11948, line: 143, type: !108)
!12065 = !DILocation(line: 0, scope: !12048)
!12066 = !DILocation(line: 123, column: 28, scope: !12048)
!12067 = !DILocation(line: 126, column: 24, scope: !12048)
!12068 = !DILocation(line: 126, column: 5, scope: !12048)
!12069 = !DILocation(line: 129, column: 33, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12048, file: !11948, line: 127, column: 5)
!12071 = distinct !{!12071, !12068, !12072}
!12072 = !DILocation(line: 131, column: 5, scope: !12048)
!12073 = !DILocation(line: 133, column: 27, scope: !12048)
!12074 = !DILocation(line: 134, column: 35, scope: !12048)
!12075 = !DILocation(line: 138, column: 20, scope: !12062)
!12076 = !DILocation(line: 138, column: 48, scope: !12062)
!12077 = !DILocation(line: 141, column: 33, scope: !12061)
!12078 = !DILocation(line: 141, column: 38, scope: !12061)
!12079 = !DILocation(line: 141, column: 65, scope: !12061)
!12080 = !DILocation(line: 0, scope: !12061)
!12081 = !DILocation(line: 142, column: 35, scope: !12061)
!12082 = !DILocation(line: 142, column: 40, scope: !12061)
!12083 = !DILocation(line: 142, column: 61, scope: !12061)
!12084 = !DILocation(line: 143, column: 26, scope: !12061)
!12085 = !DILocation(line: 143, column: 24, scope: !12061)
!12086 = !DILocation(line: 144, column: 19, scope: !12061)
!12087 = !DILocation(line: 145, column: 21, scope: !12061)
!12088 = !DILocation(line: 146, column: 15, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12061, file: !11948, line: 146, column: 13)
!12090 = !DILocation(line: 146, column: 13, scope: !12061)
!12091 = !DILocation(line: 148, column: 15, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12061, file: !11948, line: 148, column: 13)
!12093 = !DILocation(line: 148, column: 13, scope: !12061)
!12094 = !DILocation(line: 150, column: 5, scope: !12061)
!12095 = !DILocation(line: 151, column: 26, scope: !12048)
!12096 = !DILocation(line: 151, column: 31, scope: !12048)
!12097 = !DILocation(line: 151, column: 52, scope: !12048)
!12098 = !DILocation(line: 153, column: 5, scope: !12048)
!12099 = !DILocation(line: 0, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12048, file: !11948, line: 154, column: 5)
!12101 = !DILocation(line: 180, column: 5, scope: !12048)
!12102 = !DILocation(line: 180, column: 25, scope: !12048)
!12103 = !DILocation(line: 181, column: 25, scope: !12048)
!12104 = !DILocation(line: 182, column: 27, scope: !12048)
!12105 = !DILocation(line: 182, column: 5, scope: !12048)
!12106 = !DILocation(line: 182, column: 25, scope: !12048)
!12107 = !DILocation(line: 183, column: 27, scope: !12048)
!12108 = !DILocation(line: 183, column: 5, scope: !12048)
!12109 = !DILocation(line: 183, column: 25, scope: !12048)
!12110 = !DILocation(line: 184, column: 28, scope: !12048)
!12111 = !DILocation(line: 184, column: 5, scope: !12048)
!12112 = !DILocation(line: 184, column: 26, scope: !12048)
!12113 = !DILocation(line: 185, column: 1, scope: !12048)
!12114 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !11948, file: !11948, line: 194, type: !12115, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12117)
!12115 = !DISubroutineType(types: !12116)
!12116 = !{null, !11951, !108, !119}
!12117 = !{!12118, !12119, !12120}
!12118 = !DILocalVariable(name: "base", arg: 1, scope: !12114, file: !11948, line: 194, type: !11951)
!12119 = !DILocalVariable(name: "direction", arg: 2, scope: !12114, file: !11948, line: 194, type: !108)
!12120 = !DILocalVariable(name: "invert", arg: 3, scope: !12114, file: !11948, line: 194, type: !119)
!12121 = !DILocation(line: 0, scope: !12114)
!12122 = !DILocation(line: 196, column: 5, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !11948, line: 196, column: 5)
!12124 = distinct !DILexicalBlock(scope: !12114, file: !11948, line: 196, column: 5)
!12125 = !DILocation(line: 196, column: 5, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12123, file: !11948, line: 196, column: 5)
!12127 = !DILocation(line: 198, column: 9, scope: !12114)
!12128 = !DILocation(line: 200, column: 13, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !11948, line: 199, column: 5)
!12130 = distinct !DILexicalBlock(scope: !12114, file: !11948, line: 198, column: 9)
!12131 = !DILocation(line: 201, column: 13, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12129, file: !11948, line: 200, column: 13)
!12133 = !DILocation(line: 201, column: 33, scope: !12132)
!12134 = !DILocation(line: 202, column: 13, scope: !12129)
!12135 = !DILocation(line: 203, column: 13, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12129, file: !11948, line: 202, column: 13)
!12137 = !DILocation(line: 203, column: 33, scope: !12136)
!12138 = !DILocation(line: 207, column: 13, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12130, file: !11948, line: 206, column: 5)
!12140 = !DILocation(line: 208, column: 13, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12139, file: !11948, line: 207, column: 13)
!12142 = !DILocation(line: 208, column: 33, scope: !12141)
!12143 = !DILocation(line: 209, column: 13, scope: !12139)
!12144 = !DILocation(line: 210, column: 13, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12139, file: !11948, line: 209, column: 13)
!12146 = !DILocation(line: 210, column: 33, scope: !12145)
!12147 = !DILocation(line: 212, column: 1, scope: !12114)
!12148 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !11948, file: !11948, line: 224, type: !12149, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12151)
!12149 = !DISubroutineType(types: !12150)
!12150 = !{null, !11951, !119}
!12151 = !{!12152, !12153}
!12152 = !DILocalVariable(name: "base", arg: 1, scope: !12148, file: !11948, line: 224, type: !11951)
!12153 = !DILocalVariable(name: "enable", arg: 2, scope: !12148, file: !11948, line: 224, type: !119)
!12154 = !DILocation(line: 0, scope: !12148)
!12155 = !DILocation(line: 0, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12148, file: !11948, line: 226, column: 9)
!12157 = !DILocation(line: 226, column: 9, scope: !12148)
!12158 = !DILocation(line: 230, column: 1, scope: !12148)
!12159 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !11948, file: !11948, line: 239, type: !12149, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12160)
!12160 = !{!12161, !12162}
!12161 = !DILocalVariable(name: "base", arg: 1, scope: !12159, file: !11948, line: 239, type: !11951)
!12162 = !DILocalVariable(name: "enable", arg: 2, scope: !12159, file: !11948, line: 239, type: !119)
!12163 = !DILocation(line: 0, scope: !12159)
!12164 = !DILocation(line: 0, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12159, file: !11948, line: 241, column: 9)
!12166 = !DILocation(line: 241, column: 9, scope: !12159)
!12167 = !DILocation(line: 245, column: 1, scope: !12159)
!12168 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !11948, file: !11948, line: 258, type: !12115, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12169)
!12169 = !{!12170, !12171, !12172, !12173, !12174}
!12170 = !DILocalVariable(name: "base", arg: 1, scope: !12168, file: !11948, line: 258, type: !11951)
!12171 = !DILocalVariable(name: "intSource", arg: 2, scope: !12168, file: !11948, line: 258, type: !108)
!12172 = !DILocalVariable(name: "enable", arg: 3, scope: !12168, file: !11948, line: 258, type: !119)
!12173 = !DILocalVariable(name: "uart_reg", scope: !12168, file: !11948, line: 260, type: !1198)
!12174 = !DILocalVariable(name: "uart_mask", scope: !12168, file: !11948, line: 261, type: !108)
!12175 = !DILocation(line: 0, scope: !12168)
!12176 = !DILocation(line: 263, column: 29, scope: !12168)
!12177 = !DILocation(line: 263, column: 57, scope: !12168)
!12178 = !DILocation(line: 263, column: 44, scope: !12168)
!12179 = !DILocation(line: 263, column: 16, scope: !12168)
!12180 = !DILocation(line: 264, column: 34, scope: !12168)
!12181 = !DILocation(line: 264, column: 20, scope: !12168)
!12182 = !DILocation(line: 266, column: 9, scope: !12168)
!12183 = !DILocation(line: 267, column: 19, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12168, file: !11948, line: 266, column: 9)
!12185 = !DILocation(line: 267, column: 9, scope: !12184)
!12186 = !DILocation(line: 269, column: 22, scope: !12184)
!12187 = !DILocation(line: 269, column: 19, scope: !12184)
!12188 = !DILocation(line: 0, scope: !12184)
!12189 = !DILocation(line: 270, column: 1, scope: !12168)
!12190 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !11948, file: !11948, line: 299, type: !12191, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12193)
!12191 = !DISubroutineType(types: !12192)
!12192 = !{null, !11951, !108}
!12193 = !{!12194, !12195, !12196, !12197}
!12194 = !DILocalVariable(name: "base", arg: 1, scope: !12190, file: !11948, line: 299, type: !11951)
!12195 = !DILocalVariable(name: "flag", arg: 2, scope: !12190, file: !11948, line: 299, type: !108)
!12196 = !DILocalVariable(name: "uart_reg", scope: !12190, file: !11948, line: 301, type: !1198)
!12197 = !DILocalVariable(name: "uart_mask", scope: !12190, file: !11948, line: 302, type: !108)
!12198 = !DILocation(line: 0, scope: !12190)
!12199 = !DILocation(line: 304, column: 29, scope: !12190)
!12200 = !DILocation(line: 304, column: 52, scope: !12190)
!12201 = !DILocation(line: 304, column: 44, scope: !12190)
!12202 = !DILocation(line: 304, column: 16, scope: !12190)
!12203 = !DILocation(line: 305, column: 29, scope: !12190)
!12204 = !DILocation(line: 305, column: 20, scope: !12190)
!12205 = !DILocation(line: 308, column: 15, scope: !12190)
!12206 = !DILocation(line: 309, column: 1, scope: !12190)
!12207 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !11948, file: !11948, line: 322, type: !12115, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12208)
!12208 = !{!12209, !12210, !12211, !12212, !12213}
!12209 = !DILocalVariable(name: "base", arg: 1, scope: !12207, file: !11948, line: 322, type: !11951)
!12210 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !12207, file: !11948, line: 322, type: !108)
!12211 = !DILocalVariable(name: "enable", arg: 3, scope: !12207, file: !11948, line: 322, type: !119)
!12212 = !DILocalVariable(name: "uart_reg", scope: !12207, file: !11948, line: 324, type: !1198)
!12213 = !DILocalVariable(name: "uart_mask", scope: !12207, file: !11948, line: 325, type: !108)
!12214 = !DILocation(line: 0, scope: !12207)
!12215 = !DILocation(line: 327, column: 29, scope: !12207)
!12216 = !DILocation(line: 327, column: 57, scope: !12207)
!12217 = !DILocation(line: 327, column: 44, scope: !12207)
!12218 = !DILocation(line: 327, column: 16, scope: !12207)
!12219 = !DILocation(line: 328, column: 34, scope: !12207)
!12220 = !DILocation(line: 328, column: 20, scope: !12207)
!12221 = !DILocation(line: 329, column: 9, scope: !12207)
!12222 = !DILocation(line: 330, column: 19, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12207, file: !11948, line: 329, column: 9)
!12224 = !DILocation(line: 330, column: 9, scope: !12223)
!12225 = !DILocation(line: 332, column: 22, scope: !12223)
!12226 = !DILocation(line: 332, column: 19, scope: !12223)
!12227 = !DILocation(line: 0, scope: !12223)
!12228 = !DILocation(line: 333, column: 1, scope: !12207)
!12229 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !11948, file: !11948, line: 345, type: !12149, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12230)
!12230 = !{!12231, !12232}
!12231 = !DILocalVariable(name: "base", arg: 1, scope: !12229, file: !11948, line: 345, type: !11951)
!12232 = !DILocalVariable(name: "enable", arg: 2, scope: !12229, file: !11948, line: 345, type: !119)
!12233 = !DILocation(line: 0, scope: !12229)
!12234 = !DILocation(line: 0, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12229, file: !11948, line: 347, column: 9)
!12236 = !DILocation(line: 347, column: 9, scope: !12229)
!12237 = !DILocation(line: 351, column: 1, scope: !12229)
!12238 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !11948, file: !11948, line: 362, type: !12149, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12239)
!12239 = !{!12240, !12241}
!12240 = !DILocalVariable(name: "base", arg: 1, scope: !12238, file: !11948, line: 362, type: !11951)
!12241 = !DILocalVariable(name: "enable", arg: 2, scope: !12238, file: !11948, line: 362, type: !119)
!12242 = !DILocation(line: 0, scope: !12238)
!12243 = !DILocation(line: 0, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12238, file: !11948, line: 364, column: 9)
!12245 = !DILocation(line: 364, column: 9, scope: !12238)
!12246 = !DILocation(line: 368, column: 1, scope: !12238)
!12247 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !11948, file: !11948, line: 379, type: !12149, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12248)
!12248 = !{!12249, !12250}
!12249 = !DILocalVariable(name: "base", arg: 1, scope: !12247, file: !11948, line: 379, type: !11951)
!12250 = !DILocalVariable(name: "active", arg: 2, scope: !12247, file: !11948, line: 379, type: !119)
!12251 = !DILocation(line: 0, scope: !12247)
!12252 = !DILocation(line: 0, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12247, file: !11948, line: 381, column: 9)
!12254 = !DILocation(line: 381, column: 9, scope: !12247)
!12255 = !DILocation(line: 385, column: 1, scope: !12247)
!12256 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !11948, file: !11948, line: 394, type: !12191, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12257)
!12257 = !{!12258, !12259}
!12258 = !DILocalVariable(name: "base", arg: 1, scope: !12256, file: !11948, line: 394, type: !11951)
!12259 = !DILocalVariable(name: "mode", arg: 2, scope: !12256, file: !11948, line: 394, type: !108)
!12260 = !DILocation(line: 0, scope: !12256)
!12261 = !DILocation(line: 396, column: 5, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !11948, line: 396, column: 5)
!12263 = distinct !DILexicalBlock(scope: !12256, file: !11948, line: 396, column: 5)
!12264 = !DILocation(line: 396, column: 5, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12262, file: !11948, line: 396, column: 5)
!12266 = !DILocation(line: 0, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12256, file: !11948, line: 398, column: 9)
!12268 = !DILocation(line: 398, column: 9, scope: !12256)
!12269 = !DILocation(line: 402, column: 1, scope: !12256)
!12270 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !11948, file: !11948, line: 412, type: !12149, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12271)
!12271 = !{!12272, !12273}
!12272 = !DILocalVariable(name: "base", arg: 1, scope: !12270, file: !11948, line: 412, type: !11951)
!12273 = !DILocalVariable(name: "active", arg: 2, scope: !12270, file: !11948, line: 412, type: !119)
!12274 = !DILocation(line: 0, scope: !12270)
!12275 = !DILocation(line: 0, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12270, file: !11948, line: 414, column: 9)
!12277 = !DILocation(line: 414, column: 9, scope: !12270)
!12278 = !DILocation(line: 418, column: 1, scope: !12270)
!12279 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !11948, file: !11948, line: 427, type: !12149, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12280)
!12280 = !{!12281, !12282}
!12281 = !DILocalVariable(name: "base", arg: 1, scope: !12279, file: !11948, line: 427, type: !11951)
!12282 = !DILocalVariable(name: "active", arg: 2, scope: !12279, file: !11948, line: 427, type: !119)
!12283 = !DILocation(line: 0, scope: !12279)
!12284 = !DILocation(line: 0, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12279, file: !11948, line: 429, column: 9)
!12286 = !DILocation(line: 429, column: 9, scope: !12279)
!12287 = !DILocation(line: 433, column: 1, scope: !12279)
!12288 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !11948, file: !11948, line: 442, type: !12149, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12289)
!12289 = !{!12290, !12291}
!12290 = !DILocalVariable(name: "base", arg: 1, scope: !12288, file: !11948, line: 442, type: !11951)
!12291 = !DILocalVariable(name: "active", arg: 2, scope: !12288, file: !11948, line: 442, type: !119)
!12292 = !DILocation(line: 0, scope: !12288)
!12293 = !DILocation(line: 0, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12288, file: !11948, line: 444, column: 9)
!12295 = !DILocation(line: 444, column: 9, scope: !12288)
!12296 = !DILocation(line: 448, column: 1, scope: !12288)
!12297 = distinct !DISubprogram(name: "UART_Putchar9", scope: !11948, file: !11948, line: 460, type: !12298, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12300)
!12298 = !DISubroutineType(types: !12299)
!12299 = !{null, !11951, !177}
!12300 = !{!12301, !12302}
!12301 = !DILocalVariable(name: "base", arg: 1, scope: !12297, file: !11948, line: 460, type: !11951)
!12302 = !DILocalVariable(name: "data", arg: 2, scope: !12297, file: !11948, line: 460, type: !177)
!12303 = !DILocation(line: 0, scope: !12297)
!12304 = !DILocation(line: 462, column: 5, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !11948, line: 462, column: 5)
!12306 = distinct !DILexicalBlock(scope: !12297, file: !11948, line: 462, column: 5)
!12307 = !DILocation(line: 462, column: 5, scope: !12306)
!12308 = !DILocation(line: 462, column: 5, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12305, file: !11948, line: 462, column: 5)
!12310 = !DILocation(line: 0, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12297, file: !11948, line: 464, column: 9)
!12312 = !DILocation(line: 464, column: 9, scope: !12297)
!12313 = !DILocation(line: 468, column: 33, scope: !12297)
!12314 = !DILocation(line: 468, column: 5, scope: !12297)
!12315 = !DILocation(line: 468, column: 25, scope: !12297)
!12316 = !DILocation(line: 469, column: 1, scope: !12297)
!12317 = distinct !DISubprogram(name: "UART_Getchar9", scope: !11948, file: !11948, line: 478, type: !12318, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12320)
!12318 = !DISubroutineType(types: !12319)
!12319 = !{!177, !11951}
!12320 = !{!12321, !12322}
!12321 = !DILocalVariable(name: "base", arg: 1, scope: !12317, file: !11948, line: 478, type: !11951)
!12322 = !DILocalVariable(name: "rxData", scope: !12317, file: !11948, line: 480, type: !177)
!12323 = !DILocation(line: 0, scope: !12317)
!12324 = !DILocation(line: 480, column: 23, scope: !12317)
!12325 = !DILocation(line: 482, column: 9, scope: !12317)
!12326 = !DILocation(line: 491, column: 5, scope: !12317)
!12327 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !11948, file: !11948, line: 501, type: !12149, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12328)
!12328 = !{!12329, !12330}
!12329 = !DILocalVariable(name: "base", arg: 1, scope: !12327, file: !11948, line: 501, type: !11951)
!12330 = !DILocalVariable(name: "enable", arg: 2, scope: !12327, file: !11948, line: 501, type: !119)
!12331 = !DILocation(line: 0, scope: !12327)
!12332 = !DILocation(line: 0, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12327, file: !11948, line: 503, column: 9)
!12334 = !DILocation(line: 503, column: 9, scope: !12327)
!12335 = !DILocation(line: 507, column: 1, scope: !12327)
!12336 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !11948, file: !11948, line: 516, type: !12149, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12337)
!12337 = !{!12338, !12339}
!12338 = !DILocalVariable(name: "base", arg: 1, scope: !12336, file: !11948, line: 516, type: !11951)
!12339 = !DILocalVariable(name: "enable", arg: 2, scope: !12336, file: !11948, line: 516, type: !119)
!12340 = !DILocation(line: 0, scope: !12336)
!12341 = !DILocation(line: 0, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12336, file: !11948, line: 518, column: 9)
!12343 = !DILocation(line: 518, column: 9, scope: !12336)
!12344 = !DILocation(line: 522, column: 1, scope: !12336)
!12345 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !11948, file: !11948, line: 534, type: !12149, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12346)
!12346 = !{!12347, !12348}
!12347 = !DILocalVariable(name: "base", arg: 1, scope: !12345, file: !11948, line: 534, type: !11951)
!12348 = !DILocalVariable(name: "enable", arg: 2, scope: !12345, file: !11948, line: 534, type: !119)
!12349 = !DILocation(line: 0, scope: !12345)
!12350 = !DILocation(line: 0, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12345, file: !11948, line: 536, column: 9)
!12352 = !DILocation(line: 536, column: 9, scope: !12345)
!12353 = !DILocation(line: 540, column: 1, scope: !12345)
!12354 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !11948, file: !11948, line: 550, type: !12191, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12355)
!12355 = !{!12356, !12357}
!12356 = !DILocalVariable(name: "base", arg: 1, scope: !12354, file: !11948, line: 550, type: !11951)
!12357 = !DILocalVariable(name: "voteClock", arg: 2, scope: !12354, file: !11948, line: 550, type: !108)
!12358 = !DILocation(line: 0, scope: !12354)
!12359 = !DILocation(line: 552, column: 5, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12361, file: !11948, line: 552, column: 5)
!12361 = distinct !DILexicalBlock(scope: !12354, file: !11948, line: 552, column: 5)
!12362 = !DILocation(line: 552, column: 5, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12360, file: !11948, line: 552, column: 5)
!12364 = !DILocation(line: 0, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12354, file: !11948, line: 555, column: 9)
!12366 = !DILocation(line: 555, column: 9, scope: !12354)
!12367 = !DILocation(line: 559, column: 1, scope: !12354)
!12368 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !11948, file: !11948, line: 571, type: !12149, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12369)
!12369 = !{!12370, !12371}
!12370 = !DILocalVariable(name: "base", arg: 1, scope: !12368, file: !11948, line: 571, type: !11951)
!12371 = !DILocalVariable(name: "enable", arg: 2, scope: !12368, file: !11948, line: 571, type: !119)
!12372 = !DILocation(line: 0, scope: !12368)
!12373 = !DILocation(line: 0, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12368, file: !11948, line: 573, column: 9)
!12375 = !DILocation(line: 573, column: 9, scope: !12368)
!12376 = !DILocation(line: 577, column: 1, scope: !12368)
!12377 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !11948, file: !11948, line: 587, type: !12149, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12378)
!12378 = !{!12379, !12380}
!12379 = !DILocalVariable(name: "base", arg: 1, scope: !12377, file: !11948, line: 587, type: !11951)
!12380 = !DILocalVariable(name: "active", arg: 2, scope: !12377, file: !11948, line: 587, type: !119)
!12381 = !DILocation(line: 0, scope: !12377)
!12382 = !DILocation(line: 0, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12377, file: !11948, line: 589, column: 9)
!12384 = !DILocation(line: 589, column: 9, scope: !12377)
!12385 = !DILocation(line: 593, column: 1, scope: !12377)
!12386 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !11948, file: !11948, line: 602, type: !12149, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3619, retainedNodes: !12387)
!12387 = !{!12388, !12389}
!12388 = !DILocalVariable(name: "base", arg: 1, scope: !12386, file: !11948, line: 602, type: !11951)
!12389 = !DILocalVariable(name: "enable", arg: 2, scope: !12386, file: !11948, line: 602, type: !119)
!12390 = !DILocation(line: 0, scope: !12386)
!12391 = !DILocation(line: 0, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12386, file: !11948, line: 604, column: 9)
!12393 = !DILocation(line: 604, column: 9, scope: !12386)
!12394 = !DILocation(line: 608, column: 1, scope: !12386)
!12395 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !12396, file: !12396, line: 42, type: !12397, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3631, retainedNodes: !12413)
!12396 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12397 = !DISubroutineType(types: !12398)
!12398 = !{!108, !12399}
!12399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12400, size: 32)
!12400 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !1074, line: 20831, baseType: !12401)
!12401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 20820, size: 320, elements: !12402)
!12402 = !{!12403, !12404, !12405, !12406, !12407, !12408, !12409, !12410, !12411, !12412}
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !12401, file: !1074, line: 20821, baseType: !1078, size: 32)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !12401, file: !1074, line: 20822, baseType: !1078, size: 32, offset: 32)
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !12401, file: !1074, line: 20823, baseType: !1078, size: 32, offset: 64)
!12406 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !12401, file: !1074, line: 20824, baseType: !1078, size: 32, offset: 96)
!12407 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !12401, file: !1074, line: 20825, baseType: !1078, size: 32, offset: 128)
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !12401, file: !1074, line: 20826, baseType: !1078, size: 32, offset: 160)
!12409 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !12401, file: !1074, line: 20827, baseType: !1078, size: 32, offset: 192)
!12410 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !12401, file: !1074, line: 20828, baseType: !1149, size: 32, offset: 224)
!12411 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !12401, file: !1074, line: 20829, baseType: !1149, size: 32, offset: 256)
!12412 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !12401, file: !1074, line: 20830, baseType: !1149, size: 32, offset: 288)
!12413 = !{!12414, !12415, !12416, !12417, !12418}
!12414 = !DILocalVariable(name: "base", arg: 1, scope: !12395, file: !12396, line: 42, type: !12399)
!12415 = !DILocalVariable(name: "root", scope: !12395, file: !12396, line: 44, type: !108)
!12416 = !DILocalVariable(name: "hz", scope: !12395, file: !12396, line: 45, type: !108)
!12417 = !DILocalVariable(name: "pre", scope: !12395, file: !12396, line: 46, type: !108)
!12418 = !DILocalVariable(name: "post", scope: !12395, file: !12396, line: 46, type: !108)
!12419 = !DILocation(line: 0, scope: !12395)
!12420 = !DILocation(line: 46, column: 2, scope: !12395)
!12421 = !DILocation(line: 48, column: 10, scope: !12395)
!12422 = !DILocation(line: 48, column: 2, scope: !12395)
!12423 = !DILocation(line: 56, column: 3, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12395, file: !12396, line: 48, column: 26)
!12425 = !DILocation(line: 0, scope: !12424)
!12426 = !DILocation(line: 61, column: 2, scope: !12395)
!12427 = !DILocation(line: 66, column: 8, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12395, file: !12396, line: 61, column: 16)
!12429 = !DILocation(line: 67, column: 3, scope: !12428)
!12430 = !DILocation(line: 0, scope: !12428)
!12431 = !DILocation(line: 72, column: 15, scope: !12395)
!12432 = !DILocation(line: 72, column: 19, scope: !12395)
!12433 = !DILocation(line: 72, column: 12, scope: !12395)
!12434 = !DILocation(line: 72, column: 27, scope: !12395)
!12435 = !DILocation(line: 72, column: 32, scope: !12395)
!12436 = !DILocation(line: 72, column: 24, scope: !12395)
!12437 = !DILocation(line: 72, column: 2, scope: !12395)
!12438 = !DILocation(line: 73, column: 1, scope: !12395)
!12439 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !790, file: !790, line: 368, type: !12440, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3631, retainedNodes: !12442)
!12440 = !DISubroutineType(types: !12441)
!12441 = !{!108, !3645, !108}
!12442 = !{!12443, !12444}
!12443 = !DILocalVariable(name: "base", arg: 1, scope: !12439, file: !790, line: 368, type: !3645)
!12444 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !12439, file: !790, line: 368, type: !108)
!12445 = !DILocation(line: 0, scope: !12439)
!12446 = !DILocation(line: 370, column: 13, scope: !12439)
!12447 = !DILocation(line: 370, column: 58, scope: !12439)
!12448 = !DILocation(line: 370, column: 5, scope: !12439)
!12449 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !12396, file: !12396, line: 81, type: !12450, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3631, retainedNodes: !12470)
!12450 = !DISubroutineType(types: !12451)
!12451 = !{!108, !12452}
!12452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12453, size: 32)
!12453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !1074, line: 12462, baseType: !12454)
!12454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 12450, size: 544, elements: !12455)
!12455 = !{!12456, !12457, !12458, !12459, !12460, !12461, !12462, !12463, !12464, !12465, !12469}
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !12454, file: !1074, line: 12451, baseType: !1149, size: 32)
!12457 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !12454, file: !1074, line: 12452, baseType: !1078, size: 32, offset: 32)
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !12454, file: !1074, line: 12453, baseType: !1078, size: 32, offset: 64)
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !12454, file: !1074, line: 12454, baseType: !1078, size: 32, offset: 96)
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !12454, file: !1074, line: 12455, baseType: !1078, size: 32, offset: 128)
!12461 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !12454, file: !1074, line: 12456, baseType: !1078, size: 32, offset: 160)
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !12454, file: !1074, line: 12457, baseType: !1078, size: 32, offset: 192)
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !12454, file: !1074, line: 12458, baseType: !1078, size: 32, offset: 224)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !12454, file: !1074, line: 12459, baseType: !1078, size: 32, offset: 256)
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12454, file: !1074, line: 12460, baseType: !12466, size: 224, offset: 288)
!12466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 224, elements: !12467)
!12467 = !{!12468}
!12468 = !DISubrange(count: 28)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !12454, file: !1074, line: 12461, baseType: !1078, size: 32, offset: 512)
!12470 = !{!12471, !12472, !12473, !12474, !12475}
!12471 = !DILocalVariable(name: "base", arg: 1, scope: !12449, file: !12396, line: 81, type: !12452)
!12472 = !DILocalVariable(name: "root", scope: !12449, file: !12396, line: 83, type: !108)
!12473 = !DILocalVariable(name: "hz", scope: !12449, file: !12396, line: 84, type: !108)
!12474 = !DILocalVariable(name: "pre", scope: !12449, file: !12396, line: 85, type: !108)
!12475 = !DILocalVariable(name: "post", scope: !12449, file: !12396, line: 85, type: !108)
!12476 = !DILocation(line: 0, scope: !12449)
!12477 = !DILocation(line: 85, column: 2, scope: !12449)
!12478 = !DILocation(line: 87, column: 10, scope: !12449)
!12479 = !DILocation(line: 87, column: 2, scope: !12449)
!12480 = !DILocation(line: 95, column: 3, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12449, file: !12396, line: 87, column: 26)
!12482 = !DILocation(line: 0, scope: !12481)
!12483 = !DILocation(line: 100, column: 2, scope: !12449)
!12484 = !DILocation(line: 105, column: 8, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12449, file: !12396, line: 100, column: 16)
!12486 = !DILocation(line: 106, column: 3, scope: !12485)
!12487 = !DILocation(line: 0, scope: !12485)
!12488 = !DILocation(line: 111, column: 15, scope: !12449)
!12489 = !DILocation(line: 111, column: 19, scope: !12449)
!12490 = !DILocation(line: 111, column: 12, scope: !12449)
!12491 = !DILocation(line: 111, column: 27, scope: !12449)
!12492 = !DILocation(line: 111, column: 32, scope: !12449)
!12493 = !DILocation(line: 111, column: 24, scope: !12449)
!12494 = !DILocation(line: 111, column: 2, scope: !12449)
!12495 = !DILocation(line: 112, column: 1, scope: !12449)
!12496 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !12396, file: !12396, line: 120, type: !12497, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3631, retainedNodes: !12541)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{!108, !12499}
!12499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12500, size: 32)
!12500 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !1074, line: 3477, baseType: !12501)
!12501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 3446, size: 20256, elements: !12502)
!12502 = !{!12503, !12504, !12505, !12506, !12508, !12509, !12510, !12511, !12512, !12513, !12514, !12515, !12516, !12517, !12518, !12519, !12521, !12522, !12523, !12524, !12525, !12535, !12537, !12539, !12540}
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !12501, file: !1074, line: 3447, baseType: !1078, size: 32)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !12501, file: !1074, line: 3448, baseType: !1078, size: 32, offset: 32)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !12501, file: !1074, line: 3449, baseType: !1078, size: 32, offset: 64)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12501, file: !1074, line: 3450, baseType: !12507, size: 32, offset: 96)
!12507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 32, elements: !2362)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !12501, file: !1074, line: 3451, baseType: !1078, size: 32, offset: 128)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !12501, file: !1074, line: 3452, baseType: !1078, size: 32, offset: 160)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !12501, file: !1074, line: 3453, baseType: !1078, size: 32, offset: 192)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !12501, file: !1074, line: 3454, baseType: !1078, size: 32, offset: 224)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !12501, file: !1074, line: 3455, baseType: !1078, size: 32, offset: 256)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !12501, file: !1074, line: 3456, baseType: !1078, size: 32, offset: 288)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !12501, file: !1074, line: 3457, baseType: !1078, size: 32, offset: 320)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !12501, file: !1074, line: 3458, baseType: !1078, size: 32, offset: 352)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !12501, file: !1074, line: 3459, baseType: !1078, size: 32, offset: 384)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !12501, file: !1074, line: 3460, baseType: !1078, size: 32, offset: 416)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !12501, file: !1074, line: 3461, baseType: !1149, size: 32, offset: 448)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12501, file: !1074, line: 3462, baseType: !12520, size: 64, offset: 480)
!12520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 64, elements: !2308)
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !12501, file: !1074, line: 3463, baseType: !1149, size: 32, offset: 544)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !12501, file: !1074, line: 3464, baseType: !1078, size: 32, offset: 576)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !12501, file: !1074, line: 3465, baseType: !1149, size: 32, offset: 608)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !12501, file: !1074, line: 3466, baseType: !1135, size: 384, offset: 640)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !12501, file: !1074, line: 3472, baseType: !12526, size: 8192, offset: 1024)
!12526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12527, size: 8192, elements: !12533)
!12527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12501, file: !1074, line: 3467, size: 128, elements: !12528)
!12528 = !{!12529, !12530, !12531, !12532}
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !12527, file: !1074, line: 3468, baseType: !1078, size: 32)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !12527, file: !1074, line: 3469, baseType: !1078, size: 32, offset: 32)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !12527, file: !1074, line: 3470, baseType: !1078, size: 32, offset: 64)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !12527, file: !1074, line: 3471, baseType: !1078, size: 32, offset: 96)
!12533 = !{!12534}
!12534 = !DISubrange(count: 64)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !12501, file: !1074, line: 3473, baseType: !12536, size: 8192, offset: 9216)
!12536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 8192, elements: !2657)
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !12501, file: !1074, line: 3474, baseType: !12538, size: 2048, offset: 17408)
!12538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 2048, elements: !12533)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !12501, file: !1074, line: 3475, baseType: !3546, size: 768, offset: 19456)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !12501, file: !1074, line: 3476, baseType: !1078, size: 32, offset: 20224)
!12541 = !{!12542, !12543, !12544, !12545, !12546}
!12542 = !DILocalVariable(name: "base", arg: 1, scope: !12496, file: !12396, line: 120, type: !12499)
!12543 = !DILocalVariable(name: "root", scope: !12496, file: !12396, line: 122, type: !108)
!12544 = !DILocalVariable(name: "hz", scope: !12496, file: !12396, line: 123, type: !108)
!12545 = !DILocalVariable(name: "pre", scope: !12496, file: !12396, line: 124, type: !108)
!12546 = !DILocalVariable(name: "post", scope: !12496, file: !12396, line: 124, type: !108)
!12547 = !DILocation(line: 0, scope: !12496)
!12548 = !DILocation(line: 124, column: 2, scope: !12496)
!12549 = !DILocation(line: 126, column: 10, scope: !12496)
!12550 = !DILocation(line: 126, column: 2, scope: !12496)
!12551 = !DILocation(line: 134, column: 3, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12496, file: !12396, line: 126, column: 26)
!12553 = !DILocation(line: 0, scope: !12552)
!12554 = !DILocation(line: 139, column: 2, scope: !12496)
!12555 = !DILocation(line: 144, column: 8, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12496, file: !12396, line: 139, column: 16)
!12557 = !DILocation(line: 144, column: 45, scope: !12556)
!12558 = !DILocation(line: 145, column: 3, scope: !12556)
!12559 = !DILocation(line: 147, column: 8, scope: !12556)
!12560 = !DILocation(line: 148, column: 3, scope: !12556)
!12561 = !DILocation(line: 0, scope: !12556)
!12562 = !DILocation(line: 153, column: 15, scope: !12496)
!12563 = !DILocation(line: 153, column: 19, scope: !12496)
!12564 = !DILocation(line: 153, column: 12, scope: !12496)
!12565 = !DILocation(line: 153, column: 27, scope: !12496)
!12566 = !DILocation(line: 153, column: 32, scope: !12496)
!12567 = !DILocation(line: 153, column: 24, scope: !12496)
!12568 = !DILocation(line: 153, column: 2, scope: !12496)
!12569 = !DILocation(line: 154, column: 1, scope: !12496)
!12570 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !12396, file: !12396, line: 162, type: !12571, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3631, retainedNodes: !12587)
!12571 = !DISubroutineType(types: !12572)
!12572 = !{!108, !12573}
!12573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12574, size: 32)
!12574 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !1074, line: 21082, baseType: !12575)
!12575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 21072, size: 144, elements: !12576)
!12576 = !{!12577, !12578, !12580, !12581, !12582, !12583, !12584, !12585, !12586}
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !12575, file: !1074, line: 21073, baseType: !1192, size: 16)
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12575, file: !1074, line: 21074, baseType: !12579, size: 16, offset: 16)
!12579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !164, size: 16, elements: !212)
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !12575, file: !1074, line: 21075, baseType: !1192, size: 16, offset: 32)
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12575, file: !1074, line: 21076, baseType: !12579, size: 16, offset: 48)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !12575, file: !1074, line: 21077, baseType: !1192, size: 16, offset: 64)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !12575, file: !1074, line: 21078, baseType: !12579, size: 16, offset: 80)
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !12575, file: !1074, line: 21079, baseType: !1192, size: 16, offset: 96)
!12585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !12575, file: !1074, line: 21080, baseType: !12579, size: 16, offset: 112)
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !12575, file: !1074, line: 21081, baseType: !1192, size: 16, offset: 128)
!12587 = !{!12588, !12589, !12590, !12591, !12592}
!12588 = !DILocalVariable(name: "base", arg: 1, scope: !12570, file: !12396, line: 162, type: !12573)
!12589 = !DILocalVariable(name: "root", scope: !12570, file: !12396, line: 164, type: !108)
!12590 = !DILocalVariable(name: "hz", scope: !12570, file: !12396, line: 165, type: !108)
!12591 = !DILocalVariable(name: "pre", scope: !12570, file: !12396, line: 166, type: !108)
!12592 = !DILocalVariable(name: "post", scope: !12570, file: !12396, line: 166, type: !108)
!12593 = !DILocation(line: 0, scope: !12570)
!12594 = !DILocation(line: 166, column: 2, scope: !12570)
!12595 = !DILocation(line: 168, column: 10, scope: !12570)
!12596 = !DILocation(line: 168, column: 2, scope: !12570)
!12597 = !DILocation(line: 0, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12570, file: !12396, line: 168, column: 26)
!12599 = !DILocation(line: 189, column: 2, scope: !12570)
!12600 = !DILocation(line: 194, column: 8, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12570, file: !12396, line: 189, column: 16)
!12602 = !DILocation(line: 194, column: 45, scope: !12601)
!12603 = !DILocation(line: 195, column: 3, scope: !12601)
!12604 = !DILocation(line: 0, scope: !12601)
!12605 = !DILocation(line: 200, column: 15, scope: !12570)
!12606 = !DILocation(line: 200, column: 19, scope: !12570)
!12607 = !DILocation(line: 200, column: 12, scope: !12570)
!12608 = !DILocation(line: 200, column: 27, scope: !12570)
!12609 = !DILocation(line: 200, column: 32, scope: !12570)
!12610 = !DILocation(line: 200, column: 24, scope: !12570)
!12611 = !DILocation(line: 200, column: 2, scope: !12570)
!12612 = !DILocation(line: 201, column: 1, scope: !12570)
!12613 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !12396, file: !12396, line: 209, type: !12614, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3631, retainedNodes: !12639)
!12614 = !DISubroutineType(types: !12615)
!12615 = !{!108, !12616}
!12616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12617, size: 32)
!12617 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !1074, line: 41342, baseType: !12618)
!12618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1074, line: 41322, size: 1504, elements: !12619)
!12619 = !{!12620, !12621, !12622, !12623, !12624, !12625, !12626, !12627, !12628, !12629, !12630, !12631, !12632, !12633, !12634, !12635, !12636, !12637, !12638}
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !12618, file: !1074, line: 41323, baseType: !1149, size: 32)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !12618, file: !1074, line: 41324, baseType: !2044, size: 480, offset: 32)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !12618, file: !1074, line: 41325, baseType: !1078, size: 32, offset: 512)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !12618, file: !1074, line: 41326, baseType: !2044, size: 480, offset: 544)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !12618, file: !1074, line: 41327, baseType: !1078, size: 32, offset: 1024)
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !12618, file: !1074, line: 41328, baseType: !1078, size: 32, offset: 1056)
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !12618, file: !1074, line: 41329, baseType: !1078, size: 32, offset: 1088)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !12618, file: !1074, line: 41330, baseType: !1078, size: 32, offset: 1120)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !12618, file: !1074, line: 41331, baseType: !1078, size: 32, offset: 1152)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !12618, file: !1074, line: 41332, baseType: !1078, size: 32, offset: 1184)
!12630 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !12618, file: !1074, line: 41333, baseType: !1078, size: 32, offset: 1216)
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !12618, file: !1074, line: 41334, baseType: !1078, size: 32, offset: 1248)
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !12618, file: !1074, line: 41335, baseType: !1078, size: 32, offset: 1280)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !12618, file: !1074, line: 41336, baseType: !1078, size: 32, offset: 1312)
!12634 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !12618, file: !1074, line: 41337, baseType: !1078, size: 32, offset: 1344)
!12635 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !12618, file: !1074, line: 41338, baseType: !1149, size: 32, offset: 1376)
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !12618, file: !1074, line: 41339, baseType: !1078, size: 32, offset: 1408)
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !12618, file: !1074, line: 41340, baseType: !1078, size: 32, offset: 1440)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !12618, file: !1074, line: 41341, baseType: !1078, size: 32, offset: 1472)
!12639 = !{!12640, !12641, !12642, !12643, !12644}
!12640 = !DILocalVariable(name: "base", arg: 1, scope: !12613, file: !12396, line: 209, type: !12616)
!12641 = !DILocalVariable(name: "root", scope: !12613, file: !12396, line: 211, type: !108)
!12642 = !DILocalVariable(name: "hz", scope: !12613, file: !12396, line: 212, type: !108)
!12643 = !DILocalVariable(name: "pre", scope: !12613, file: !12396, line: 213, type: !108)
!12644 = !DILocalVariable(name: "post", scope: !12613, file: !12396, line: 213, type: !108)
!12645 = !DILocation(line: 0, scope: !12613)
!12646 = !DILocation(line: 213, column: 2, scope: !12613)
!12647 = !DILocation(line: 215, column: 10, scope: !12613)
!12648 = !DILocation(line: 215, column: 2, scope: !12613)
!12649 = !DILocation(line: 223, column: 3, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12613, file: !12396, line: 215, column: 26)
!12651 = !DILocation(line: 227, column: 3, scope: !12650)
!12652 = !DILocation(line: 231, column: 3, scope: !12650)
!12653 = !DILocation(line: 235, column: 3, scope: !12650)
!12654 = !DILocation(line: 239, column: 3, scope: !12650)
!12655 = !DILocation(line: 243, column: 3, scope: !12650)
!12656 = !DILocation(line: 0, scope: !12650)
!12657 = !DILocation(line: 248, column: 2, scope: !12613)
!12658 = !DILocation(line: 253, column: 8, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12613, file: !12396, line: 248, column: 16)
!12660 = !DILocation(line: 253, column: 45, scope: !12659)
!12661 = !DILocation(line: 254, column: 3, scope: !12659)
!12662 = !DILocation(line: 256, column: 8, scope: !12659)
!12663 = !DILocation(line: 257, column: 3, scope: !12659)
!12664 = !DILocation(line: 0, scope: !12659)
!12665 = !DILocation(line: 262, column: 15, scope: !12613)
!12666 = !DILocation(line: 262, column: 19, scope: !12613)
!12667 = !DILocation(line: 262, column: 12, scope: !12613)
!12668 = !DILocation(line: 262, column: 27, scope: !12613)
!12669 = !DILocation(line: 262, column: 32, scope: !12613)
!12670 = !DILocation(line: 262, column: 24, scope: !12613)
!12671 = !DILocation(line: 262, column: 2, scope: !12613)
!12672 = !DILocation(line: 263, column: 1, scope: !12613)
!12673 = distinct !DISubprogram(name: "z_device_state_init", scope: !12674, file: !12674, line: 23, type: !327, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12675)
!12674 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12675 = !{!12676}
!12676 = !DILocalVariable(name: "dev", scope: !12673, file: !12674, line: 25, type: !12677)
!12677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12678, size: 32)
!12678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12679)
!12679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1587, line: 378, size: 192, elements: !12680)
!12680 = !{!12681, !12682, !12683, !12684, !12690, !12691}
!12681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12679, file: !1587, line: 380, baseType: !330, size: 32)
!12682 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12679, file: !1587, line: 382, baseType: !13, size: 32, offset: 32)
!12683 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12679, file: !1587, line: 384, baseType: !13, size: 32, offset: 64)
!12684 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12679, file: !1587, line: 386, baseType: !12685, size: 32, offset: 96)
!12685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12686, size: 32)
!12686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1587, line: 351, size: 16, elements: !12687)
!12687 = !{!12688, !12689}
!12688 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12686, file: !1587, line: 359, baseType: !164, size: 8)
!12689 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12686, file: !1587, line: 364, baseType: !119, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12690 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12679, file: !1587, line: 388, baseType: !102, size: 32, offset: 128)
!12691 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12679, file: !1587, line: 396, baseType: !1600, size: 32, offset: 160)
!12692 = !DILocation(line: 0, scope: !12673)
!12693 = !DILocation(line: 31, column: 1, scope: !12673)
!12694 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12674, file: !12674, line: 33, type: !12695, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12697)
!12695 = !DISubroutineType(types: !12696)
!12696 = !{!12677, !330}
!12697 = !{!12698, !12699}
!12698 = !DILocalVariable(name: "name", arg: 1, scope: !12694, file: !12674, line: 33, type: !330)
!12699 = !DILocalVariable(name: "dev", scope: !12694, file: !12674, line: 35, type: !12677)
!12700 = !DILocation(line: 0, scope: !12694)
!12701 = !DILocation(line: 40, column: 12, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12694, file: !12674, line: 40, column: 6)
!12703 = !DILocation(line: 40, column: 21, scope: !12702)
!12704 = !DILocation(line: 40, column: 25, scope: !12702)
!12705 = !DILocation(line: 40, column: 33, scope: !12702)
!12706 = !DILocation(line: 40, column: 6, scope: !12694)
!12707 = !DILocation(line: 55, column: 2, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12694, file: !12674, line: 55, column: 2)
!12709 = !DILocation(line: 50, column: 7, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12711, file: !12674, line: 50, column: 7)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !12674, line: 49, column: 57)
!12712 = distinct !DILexicalBlock(scope: !12713, file: !12674, line: 49, column: 2)
!12713 = distinct !DILexicalBlock(scope: !12694, file: !12674, line: 49, column: 2)
!12714 = !DILocation(line: 50, column: 30, scope: !12710)
!12715 = !DILocation(line: 50, column: 39, scope: !12710)
!12716 = !DILocation(line: 50, column: 44, scope: !12710)
!12717 = !DILocation(line: 50, column: 7, scope: !12711)
!12718 = !DILocation(line: 49, column: 53, scope: !12712)
!12719 = !DILocation(line: 49, column: 33, scope: !12712)
!12720 = !DILocation(line: 49, column: 2, scope: !12713)
!12721 = distinct !{!12721, !12720, !12722}
!12722 = !DILocation(line: 53, column: 2, scope: !12713)
!12723 = !DILocation(line: 56, column: 7, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !12674, line: 56, column: 7)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !12674, line: 55, column: 57)
!12726 = distinct !DILexicalBlock(scope: !12708, file: !12674, line: 55, column: 2)
!12727 = !DILocation(line: 56, column: 30, scope: !12724)
!12728 = !DILocation(line: 56, column: 52, scope: !12724)
!12729 = !DILocation(line: 56, column: 34, scope: !12724)
!12730 = !DILocation(line: 56, column: 58, scope: !12724)
!12731 = !DILocation(line: 56, column: 7, scope: !12725)
!12732 = !DILocation(line: 55, column: 53, scope: !12726)
!12733 = !DILocation(line: 55, column: 33, scope: !12726)
!12734 = distinct !{!12734, !12707, !12735}
!12735 = !DILocation(line: 59, column: 2, scope: !12708)
!12736 = !DILocation(line: 62, column: 1, scope: !12694)
!12737 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12674, file: !12674, line: 93, type: !12738, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12740)
!12738 = !DISubroutineType(types: !12739)
!12739 = !{!119, !12677}
!12740 = !{!12741}
!12741 = !DILocalVariable(name: "dev", arg: 1, scope: !12737, file: !12674, line: 93, type: !12677)
!12742 = !DILocation(line: 0, scope: !12737)
!12743 = !DILocation(line: 99, column: 10, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12737, file: !12674, line: 99, column: 6)
!12745 = !DILocation(line: 99, column: 6, scope: !12737)
!12746 = !DILocation(line: 103, column: 14, scope: !12737)
!12747 = !DILocation(line: 103, column: 21, scope: !12737)
!12748 = !DILocation(line: 103, column: 33, scope: !12737)
!12749 = !DILocation(line: 103, column: 49, scope: !12737)
!12750 = !DILocation(line: 103, column: 58, scope: !12737)
!12751 = !DILocation(line: 104, column: 1, scope: !12737)
!12752 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12674, file: !12674, line: 87, type: !12753, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12756)
!12753 = !DISubroutineType(types: !12754)
!12754 = !{!153, !12755}
!12755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12677, size: 32)
!12756 = !{!12757}
!12757 = !DILocalVariable(name: "devices", arg: 1, scope: !12752, file: !12674, line: 87, type: !12755)
!12758 = !DILocation(line: 0, scope: !12752)
!12759 = !DILocation(line: 89, column: 11, scope: !12752)
!12760 = !DILocation(line: 90, column: 2, scope: !12752)
!12761 = distinct !DISubprogram(name: "device_required_foreach", scope: !12674, file: !12674, line: 125, type: !12762, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12768)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{!103, !12677, !12764, !102}
!12764 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !1587, line: 471, baseType: !12765)
!12765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12766, size: 32)
!12766 = !DISubroutineType(types: !12767)
!12767 = !{!103, !12677, !102}
!12768 = !{!12769, !12770, !12771, !12772, !12773}
!12769 = !DILocalVariable(name: "dev", arg: 1, scope: !12761, file: !12674, line: 125, type: !12677)
!12770 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12761, file: !12674, line: 126, type: !12764)
!12771 = !DILocalVariable(name: "context", arg: 3, scope: !12761, file: !12674, line: 127, type: !102)
!12772 = !DILocalVariable(name: "handle_count", scope: !12761, file: !12674, line: 129, type: !153)
!12773 = !DILocalVariable(name: "handles", scope: !12761, file: !12674, line: 130, type: !1600)
!12774 = !DILocation(line: 0, scope: !12761)
!12775 = !DILocation(line: 129, column: 2, scope: !12761)
!12776 = !DILocation(line: 129, column: 9, scope: !12761)
!12777 = !DILocation(line: 130, column: 35, scope: !12761)
!12778 = !DILocation(line: 132, column: 33, scope: !12761)
!12779 = !DILocation(line: 132, column: 9, scope: !12761)
!12780 = !DILocation(line: 133, column: 1, scope: !12761)
!12781 = !DILocation(line: 132, column: 2, scope: !12761)
!12782 = distinct !DISubprogram(name: "device_required_handles_get", scope: !1587, file: !1587, line: 493, type: !12783, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12785)
!12783 = !DISubroutineType(types: !12784)
!12784 = !{!1600, !12677, !3205}
!12785 = !{!12786, !12787, !12788, !12789}
!12786 = !DILocalVariable(name: "dev", arg: 1, scope: !12782, file: !1587, line: 493, type: !12677)
!12787 = !DILocalVariable(name: "count", arg: 2, scope: !12782, file: !1587, line: 493, type: !3205)
!12788 = !DILocalVariable(name: "rv", scope: !12782, file: !1587, line: 495, type: !1600)
!12789 = !DILocalVariable(name: "i", scope: !12790, file: !1587, line: 498, type: !153)
!12790 = distinct !DILexicalBlock(scope: !12791, file: !1587, line: 497, column: 18)
!12791 = distinct !DILexicalBlock(scope: !12782, file: !1587, line: 497, column: 6)
!12792 = !DILocation(line: 0, scope: !12782)
!12793 = !DILocation(line: 495, column: 35, scope: !12782)
!12794 = !DILocation(line: 497, column: 9, scope: !12791)
!12795 = !DILocation(line: 497, column: 6, scope: !12782)
!12796 = !DILocation(line: 0, scope: !12790)
!12797 = !DILocation(line: 500, column: 11, scope: !12790)
!12798 = !DILocation(line: 500, column: 40, scope: !12790)
!12799 = !DILocation(line: 502, column: 4, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12790, file: !1587, line: 501, column: 40)
!12801 = distinct !{!12801, !12802, !12803}
!12802 = !DILocation(line: 500, column: 3, scope: !12790)
!12803 = !DILocation(line: 503, column: 3, scope: !12790)
!12804 = !DILocation(line: 504, column: 10, scope: !12790)
!12805 = !DILocation(line: 505, column: 2, scope: !12790)
!12806 = !DILocation(line: 507, column: 2, scope: !12782)
!12807 = distinct !DISubprogram(name: "device_visitor", scope: !12674, file: !12674, line: 106, type: !12808, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12810)
!12808 = !DISubroutineType(types: !12809)
!12809 = !{!103, !1600, !153, !12764, !102}
!12810 = !{!12811, !12812, !12813, !12814, !12815, !12817, !12820, !12821}
!12811 = !DILocalVariable(name: "handles", arg: 1, scope: !12807, file: !12674, line: 106, type: !1600)
!12812 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12807, file: !12674, line: 107, type: !153)
!12813 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12807, file: !12674, line: 108, type: !12764)
!12814 = !DILocalVariable(name: "context", arg: 4, scope: !12807, file: !12674, line: 109, type: !102)
!12815 = !DILocalVariable(name: "i", scope: !12816, file: !12674, line: 112, type: !153)
!12816 = distinct !DILexicalBlock(scope: !12807, file: !12674, line: 112, column: 2)
!12817 = !DILocalVariable(name: "dh", scope: !12818, file: !12674, line: 113, type: !1602)
!12818 = distinct !DILexicalBlock(scope: !12819, file: !12674, line: 112, column: 44)
!12819 = distinct !DILexicalBlock(scope: !12816, file: !12674, line: 112, column: 2)
!12820 = !DILocalVariable(name: "rdev", scope: !12818, file: !12674, line: 114, type: !12677)
!12821 = !DILocalVariable(name: "rc", scope: !12818, file: !12674, line: 115, type: !103)
!12822 = !DILocation(line: 0, scope: !12807)
!12823 = !DILocation(line: 0, scope: !12816)
!12824 = !DILocation(line: 112, column: 23, scope: !12819)
!12825 = !DILocation(line: 112, column: 2, scope: !12816)
!12826 = distinct !{!12826, !12825, !12827}
!12827 = !DILocation(line: 120, column: 2, scope: !12816)
!12828 = !DILocation(line: 113, column: 24, scope: !12818)
!12829 = !DILocation(line: 0, scope: !12818)
!12830 = !DILocation(line: 114, column: 31, scope: !12818)
!12831 = !DILocation(line: 115, column: 12, scope: !12818)
!12832 = !DILocation(line: 117, column: 10, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12818, file: !12674, line: 117, column: 7)
!12834 = !DILocation(line: 112, column: 39, scope: !12819)
!12835 = !DILocation(line: 123, column: 1, scope: !12807)
!12836 = distinct !DISubprogram(name: "device_from_handle", scope: !1587, file: !1587, line: 439, type: !12837, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12839)
!12837 = !DISubroutineType(types: !12838)
!12838 = !{!12677, !1602}
!12839 = !{!12840, !12841, !12842}
!12840 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12836, file: !1587, line: 439, type: !1602)
!12841 = !DILocalVariable(name: "dev", scope: !12836, file: !1587, line: 443, type: !12677)
!12842 = !DILocalVariable(name: "numdev", scope: !12836, file: !1587, line: 444, type: !153)
!12843 = !DILocation(line: 0, scope: !12836)
!12844 = !DILocation(line: 446, column: 7, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12836, file: !1587, line: 446, column: 6)
!12846 = !DILocation(line: 446, column: 18, scope: !12845)
!12847 = !DILocation(line: 446, column: 23, scope: !12845)
!12848 = !DILocation(line: 450, column: 2, scope: !12836)
!12849 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12674, file: !12674, line: 135, type: !12762, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12850)
!12850 = !{!12851, !12852, !12853, !12854, !12855}
!12851 = !DILocalVariable(name: "dev", arg: 1, scope: !12849, file: !12674, line: 135, type: !12677)
!12852 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12849, file: !12674, line: 136, type: !12764)
!12853 = !DILocalVariable(name: "context", arg: 3, scope: !12849, file: !12674, line: 137, type: !102)
!12854 = !DILocalVariable(name: "handle_count", scope: !12849, file: !12674, line: 139, type: !153)
!12855 = !DILocalVariable(name: "handles", scope: !12849, file: !12674, line: 140, type: !1600)
!12856 = !DILocation(line: 0, scope: !12849)
!12857 = !DILocation(line: 139, column: 2, scope: !12849)
!12858 = !DILocation(line: 139, column: 9, scope: !12849)
!12859 = !DILocation(line: 140, column: 35, scope: !12849)
!12860 = !DILocation(line: 142, column: 33, scope: !12849)
!12861 = !DILocation(line: 142, column: 9, scope: !12849)
!12862 = !DILocation(line: 143, column: 1, scope: !12849)
!12863 = !DILocation(line: 142, column: 2, scope: !12849)
!12864 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !1587, file: !1587, line: 573, type: !12783, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3756, retainedNodes: !12865)
!12865 = !{!12866, !12867, !12868, !12869, !12870}
!12866 = !DILocalVariable(name: "dev", arg: 1, scope: !12864, file: !1587, line: 573, type: !12677)
!12867 = !DILocalVariable(name: "count", arg: 2, scope: !12864, file: !1587, line: 573, type: !3205)
!12868 = !DILocalVariable(name: "rv", scope: !12864, file: !1587, line: 575, type: !1600)
!12869 = !DILocalVariable(name: "region", scope: !12864, file: !1587, line: 576, type: !153)
!12870 = !DILocalVariable(name: "i", scope: !12864, file: !1587, line: 577, type: !153)
!12871 = !DILocation(line: 0, scope: !12864)
!12872 = !DILocation(line: 575, column: 35, scope: !12864)
!12873 = !DILocation(line: 579, column: 9, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12864, file: !1587, line: 579, column: 6)
!12875 = !DILocation(line: 579, column: 6, scope: !12864)
!12876 = !DILocation(line: 582, column: 8, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !1587, line: 582, column: 8)
!12878 = distinct !DILexicalBlock(scope: !12879, file: !1587, line: 581, column: 23)
!12879 = distinct !DILexicalBlock(scope: !12874, file: !1587, line: 579, column: 18)
!12880 = !DILocation(line: 582, column: 12, scope: !12877)
!12881 = !DILocation(line: 585, column: 6, scope: !12878)
!12882 = !DILocation(line: 0, scope: !12879)
!12883 = !DILocation(line: 581, column: 17, scope: !12879)
!12884 = !DILocation(line: 581, column: 3, scope: !12879)
!12885 = !DILocation(line: 588, column: 10, scope: !12879)
!12886 = !DILocation(line: 588, column: 16, scope: !12879)
!12887 = !DILocation(line: 589, column: 4, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12879, file: !1587, line: 588, column: 39)
!12889 = !DILocation(line: 588, column: 3, scope: !12879)
!12890 = distinct !{!12890, !12889, !12891}
!12891 = !DILocation(line: 590, column: 3, scope: !12879)
!12892 = !DILocation(line: 591, column: 10, scope: !12879)
!12893 = !DILocation(line: 592, column: 2, scope: !12879)
!12894 = !DILocation(line: 575, column: 25, scope: !12864)
!12895 = !DILocation(line: 594, column: 2, scope: !12864)
!12896 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2444, file: !2444, line: 49, type: !12897, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2645)
!12897 = !DISubroutineType(types: !12898)
!12898 = !{!760}
!12899 = !DILocation(line: 51, column: 10, scope: !12896)
!12900 = !DILocation(line: 51, column: 20, scope: !12896)
!12901 = !DILocation(line: 51, column: 2, scope: !12896)
!12902 = distinct !DISubprogram(name: "coredump", scope: !3763, file: !3763, line: 209, type: !12903, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13045)
!12903 = !DISubroutineType(types: !12904)
!12904 = !{null, !32, !12905, !12949}
!12905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12906, size: 32)
!12906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12907)
!12907 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3336, line: 141, baseType: !12908)
!12908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3336, line: 97, size: 256, elements: !12909)
!12909 = !{!12910}
!12910 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12908, file: !3336, line: 107, baseType: !12911, size: 256)
!12911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3336, line: 98, size: 256, elements: !12912)
!12912 = !{!12913, !12918, !12923, !12928, !12933, !12938, !12943, !12948}
!12913 = !DIDerivedType(tag: DW_TAG_member, scope: !12911, file: !3336, line: 99, baseType: !12914, size: 32)
!12914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12911, file: !3336, line: 99, size: 32, elements: !12915)
!12915 = !{!12916, !12917}
!12916 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12914, file: !3336, line: 99, baseType: !108, size: 32)
!12917 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12914, file: !3336, line: 99, baseType: !108, size: 32)
!12918 = !DIDerivedType(tag: DW_TAG_member, scope: !12911, file: !3336, line: 100, baseType: !12919, size: 32, offset: 32)
!12919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12911, file: !3336, line: 100, size: 32, elements: !12920)
!12920 = !{!12921, !12922}
!12921 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12919, file: !3336, line: 100, baseType: !108, size: 32)
!12922 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12919, file: !3336, line: 100, baseType: !108, size: 32)
!12923 = !DIDerivedType(tag: DW_TAG_member, scope: !12911, file: !3336, line: 101, baseType: !12924, size: 32, offset: 64)
!12924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12911, file: !3336, line: 101, size: 32, elements: !12925)
!12925 = !{!12926, !12927}
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12924, file: !3336, line: 101, baseType: !108, size: 32)
!12927 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12924, file: !3336, line: 101, baseType: !108, size: 32)
!12928 = !DIDerivedType(tag: DW_TAG_member, scope: !12911, file: !3336, line: 102, baseType: !12929, size: 32, offset: 96)
!12929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12911, file: !3336, line: 102, size: 32, elements: !12930)
!12930 = !{!12931, !12932}
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12929, file: !3336, line: 102, baseType: !108, size: 32)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12929, file: !3336, line: 102, baseType: !108, size: 32)
!12933 = !DIDerivedType(tag: DW_TAG_member, scope: !12911, file: !3336, line: 103, baseType: !12934, size: 32, offset: 128)
!12934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12911, file: !3336, line: 103, size: 32, elements: !12935)
!12935 = !{!12936, !12937}
!12936 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12934, file: !3336, line: 103, baseType: !108, size: 32)
!12937 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12934, file: !3336, line: 103, baseType: !108, size: 32)
!12938 = !DIDerivedType(tag: DW_TAG_member, scope: !12911, file: !3336, line: 104, baseType: !12939, size: 32, offset: 160)
!12939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12911, file: !3336, line: 104, size: 32, elements: !12940)
!12940 = !{!12941, !12942}
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12939, file: !3336, line: 104, baseType: !108, size: 32)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12939, file: !3336, line: 104, baseType: !108, size: 32)
!12943 = !DIDerivedType(tag: DW_TAG_member, scope: !12911, file: !3336, line: 105, baseType: !12944, size: 32, offset: 192)
!12944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12911, file: !3336, line: 105, size: 32, elements: !12945)
!12945 = !{!12946, !12947}
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12944, file: !3336, line: 105, baseType: !108, size: 32)
!12947 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12944, file: !3336, line: 105, baseType: !108, size: 32)
!12948 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12911, file: !3336, line: 106, baseType: !108, size: 32, offset: 224)
!12949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12950, size: 32)
!12950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !12951)
!12951 = !{!12952, !13010, !13022, !13023, !13024, !13025, !13040}
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12950, file: !195, line: 247, baseType: !12953, size: 384)
!12953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !12954)
!12954 = !{!12955, !12979, !12986, !12987, !12988, !12997, !12998, !12999}
!12955 = !DIDerivedType(tag: DW_TAG_member, scope: !12953, file: !195, line: 60, baseType: !12956, size: 64)
!12956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12953, file: !195, line: 60, size: 64, elements: !12957)
!12957 = !{!12958, !12973}
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12956, file: !195, line: 61, baseType: !12959, size: 64)
!12959 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !133, line: 49, baseType: !12960)
!12960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !133, line: 37, size: 64, elements: !12961)
!12961 = !{!12962, !12968}
!12962 = !DIDerivedType(tag: DW_TAG_member, scope: !12960, file: !133, line: 38, baseType: !12963, size: 32)
!12963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12960, file: !133, line: 38, size: 32, elements: !12964)
!12964 = !{!12965, !12967}
!12965 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12963, file: !133, line: 39, baseType: !12966, size: 32)
!12966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12960, size: 32)
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12963, file: !133, line: 40, baseType: !12966, size: 32)
!12968 = !DIDerivedType(tag: DW_TAG_member, scope: !12960, file: !133, line: 42, baseType: !12969, size: 32, offset: 32)
!12969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12960, file: !133, line: 42, size: 32, elements: !12970)
!12970 = !{!12971, !12972}
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12969, file: !133, line: 43, baseType: !12966, size: 32)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12969, file: !133, line: 44, baseType: !12966, size: 32)
!12973 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12956, file: !195, line: 62, baseType: !12974, size: 64)
!12974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !12975)
!12975 = !{!12976}
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12974, file: !207, line: 50, baseType: !12977, size: 64)
!12977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12978, size: 64, elements: !212)
!12978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12974, size: 32)
!12979 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12953, file: !195, line: 68, baseType: !12980, size: 32, offset: 64)
!12980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12981, size: 32)
!12981 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !12982)
!12982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !12983)
!12983 = !{!12984}
!12984 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12982, file: !128, line: 232, baseType: !12985, size: 64)
!12985 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !12960)
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12953, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12953, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!12988 = !DIDerivedType(tag: DW_TAG_member, scope: !12953, file: !195, line: 90, baseType: !12989, size: 16, offset: 112)
!12989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12953, file: !195, line: 90, size: 16, elements: !12990)
!12990 = !{!12991, !12996}
!12991 = !DIDerivedType(tag: DW_TAG_member, scope: !12989, file: !195, line: 91, baseType: !12992, size: 16)
!12992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12989, file: !195, line: 91, size: 16, elements: !12993)
!12993 = !{!12994, !12995}
!12994 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12992, file: !195, line: 96, baseType: !225, size: 8)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12992, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12989, file: !195, line: 100, baseType: !177, size: 16)
!12997 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12953, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12953, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12953, file: !195, line: 131, baseType: !13000, size: 192, offset: 192)
!13000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !13001)
!13001 = !{!13002, !13003, !13009}
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13000, file: !128, line: 245, baseType: !12959, size: 64)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13000, file: !128, line: 246, baseType: !13004, size: 32, offset: 64)
!13004 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !13005)
!13005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13006, size: 32)
!13006 = !DISubroutineType(types: !13007)
!13007 = !{null, !13008}
!13008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13000, size: 32)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13000, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12950, file: !195, line: 250, baseType: !13011, size: 288, offset: 384)
!13011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !13012)
!13012 = !{!13013, !13014, !13015, !13016, !13017, !13018, !13019, !13020, !13021}
!13013 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13011, file: !244, line: 26, baseType: !108, size: 32)
!13014 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13011, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13011, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13011, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!13017 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13011, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!13018 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13011, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!13019 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13011, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!13020 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13011, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!13021 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13011, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!13022 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12950, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12950, file: !195, line: 256, baseType: !12981, size: 64, offset: 704)
!13024 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12950, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!13025 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12950, file: !195, line: 325, baseType: !13026, size: 32, offset: 800)
!13026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13027, size: 32)
!13027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !13028)
!13028 = !{!13029, !13035, !13036}
!13029 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13027, file: !124, line: 5074, baseType: !13030, size: 96)
!13030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !13031)
!13031 = !{!13032, !13033, !13034}
!13032 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13030, file: !264, line: 57, baseType: !267, size: 32)
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13030, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13030, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!13035 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13027, file: !124, line: 5075, baseType: !12981, size: 64, offset: 96)
!13036 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13027, file: !124, line: 5076, baseType: !13037, size: 32, offset: 160)
!13037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !13038)
!13038 = !{!13039}
!13039 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13037, file: !149, line: 52, baseType: !22, size: 32)
!13040 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12950, file: !195, line: 343, baseType: !13041, size: 64, offset: 832)
!13041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !13042)
!13042 = !{!13043, !13044}
!13043 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13041, file: !244, line: 63, baseType: !108, size: 32)
!13044 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13041, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!13045 = !{!13046, !13047, !13048}
!13046 = !DILocalVariable(name: "reason", arg: 1, scope: !12902, file: !3763, line: 209, type: !32)
!13047 = !DILocalVariable(name: "esf", arg: 2, scope: !12902, file: !3763, line: 209, type: !12905)
!13048 = !DILocalVariable(name: "thread", arg: 3, scope: !12902, file: !3763, line: 210, type: !12949)
!13049 = !DILocation(line: 0, scope: !12902)
!13050 = !DILocation(line: 212, column: 1, scope: !12902)
!13051 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3763, file: !3763, line: 214, type: !13052, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{null, !22, !22}
!13054 = !{!13055, !13056}
!13055 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13051, file: !3763, line: 214, type: !22)
!13056 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13051, file: !3763, line: 214, type: !22)
!13057 = !DILocation(line: 0, scope: !13051)
!13058 = !DILocation(line: 216, column: 1, scope: !13051)
!13059 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3763, file: !3763, line: 218, type: !13060, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13062)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{null, !765, !153}
!13062 = !{!13063, !13064}
!13063 = !DILocalVariable(name: "buf", arg: 1, scope: !13059, file: !3763, line: 218, type: !765)
!13064 = !DILocalVariable(name: "buflen", arg: 2, scope: !13059, file: !3763, line: 218, type: !153)
!13065 = !DILocation(line: 0, scope: !13059)
!13066 = !DILocation(line: 220, column: 1, scope: !13059)
!13067 = distinct !DISubprogram(name: "coredump_query", scope: !3763, file: !3763, line: 222, type: !13068, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13070)
!13068 = !DISubroutineType(types: !13069)
!13069 = !{!103, !3762, !102}
!13070 = !{!13071, !13072}
!13071 = !DILocalVariable(name: "query_id", arg: 1, scope: !13067, file: !3763, line: 222, type: !3762)
!13072 = !DILocalVariable(name: "arg", arg: 2, scope: !13067, file: !3763, line: 222, type: !102)
!13073 = !DILocation(line: 0, scope: !13067)
!13074 = !DILocation(line: 224, column: 2, scope: !13067)
!13075 = distinct !DISubprogram(name: "coredump_cmd", scope: !3763, file: !3763, line: 227, type: !13076, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13078)
!13076 = !DISubroutineType(types: !13077)
!13077 = !{!103, !3769, !102}
!13078 = !{!13079, !13080}
!13079 = !DILocalVariable(name: "query_id", arg: 1, scope: !13075, file: !3763, line: 227, type: !3769)
!13080 = !DILocalVariable(name: "arg", arg: 2, scope: !13075, file: !3763, line: 227, type: !102)
!13081 = !DILocation(line: 0, scope: !13075)
!13082 = !DILocation(line: 229, column: 2, scope: !13075)
!13083 = distinct !DISubprogram(name: "arch_system_halt", scope: !13084, file: !13084, line: 23, type: !7902, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13085)
!13084 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13085 = !{!13086}
!13086 = !DILocalVariable(name: "reason", arg: 1, scope: !13083, file: !13084, line: 23, type: !32)
!13087 = !DILocation(line: 0, scope: !13083)
!13088 = !DILocation(line: 55, column: 2, scope: !13089, inlinedAt: !13093)
!13089 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13090)
!13090 = !{!13091, !13092}
!13091 = !DILocalVariable(name: "key", scope: !13089, file: !8072, line: 44, type: !32)
!13092 = !DILocalVariable(name: "tmp", scope: !13089, file: !8072, line: 53, type: !32)
!13093 = distinct !DILocation(line: 31, column: 8, scope: !13083)
!13094 = !{i64 2846338}
!13095 = !DILocation(line: 0, scope: !13089, inlinedAt: !13093)
!13096 = !DILocation(line: 32, column: 2, scope: !13083)
!13097 = !DILocation(line: 32, column: 2, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13099, file: !13084, line: 32, column: 2)
!13099 = distinct !DILexicalBlock(scope: !13083, file: !13084, line: 32, column: 2)
!13100 = distinct !{!13100, !13101, !13102}
!13101 = !DILocation(line: 32, column: 2, scope: !13099)
!13102 = !DILocation(line: 34, column: 2, scope: !13099)
!13103 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13084, file: !13084, line: 39, type: !13104, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13106)
!13104 = !DISubroutineType(types: !13105)
!13105 = !{null, !32, !12905}
!13106 = !{!13107, !13108}
!13107 = !DILocalVariable(name: "reason", arg: 1, scope: !13103, file: !13084, line: 39, type: !32)
!13108 = !DILocalVariable(name: "esf", arg: 2, scope: !13103, file: !13084, line: 40, type: !12905)
!13109 = !DILocation(line: 0, scope: !13103)
!13110 = !DILocation(line: 45, column: 2, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !13084, line: 45, column: 2)
!13112 = distinct !DILexicalBlock(scope: !13113, file: !13084, line: 45, column: 2)
!13113 = distinct !DILexicalBlock(scope: !13114, file: !13084, line: 45, column: 2)
!13114 = distinct !DILexicalBlock(scope: !13103, file: !13084, line: 45, column: 2)
!13115 = !DILocation(line: 46, column: 2, scope: !13103)
!13116 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13084, file: !13084, line: 81, type: !7902, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13117)
!13117 = !{!13118}
!13118 = !DILocalVariable(name: "reason", arg: 1, scope: !13116, file: !13084, line: 81, type: !32)
!13119 = !DILocation(line: 0, scope: !13116)
!13120 = !DILocation(line: 83, column: 2, scope: !13116)
!13121 = distinct !DISubprogram(name: "z_fatal_error", scope: !13084, file: !13084, line: 96, type: !13104, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13122)
!13122 = !{!13123, !13124, !13125, !13126}
!13123 = !DILocalVariable(name: "reason", arg: 1, scope: !13121, file: !13084, line: 96, type: !32)
!13124 = !DILocalVariable(name: "esf", arg: 2, scope: !13121, file: !13084, line: 96, type: !12905)
!13125 = !DILocalVariable(name: "key", scope: !13121, file: !13084, line: 102, type: !32)
!13126 = !DILocalVariable(name: "thread", scope: !13121, file: !13084, line: 103, type: !12949)
!13127 = !DILocation(line: 0, scope: !13121)
!13128 = !DILocation(line: 55, column: 2, scope: !13089, inlinedAt: !13129)
!13129 = distinct !DILocation(line: 102, column: 21, scope: !13121)
!13130 = !DILocation(line: 0, scope: !13089, inlinedAt: !13129)
!13131 = !DILocation(line: 104, column: 4, scope: !13121)
!13132 = !DILocation(line: 109, column: 2, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13134, file: !13084, line: 109, column: 2)
!13134 = distinct !DILexicalBlock(scope: !13135, file: !13084, line: 109, column: 2)
!13135 = distinct !DILexicalBlock(scope: !13136, file: !13084, line: 109, column: 2)
!13136 = distinct !DILexicalBlock(scope: !13121, file: !13084, line: 109, column: 2)
!13137 = !DILocation(line: 119, column: 11, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13121, file: !13084, line: 119, column: 6)
!13139 = !DILocation(line: 119, column: 20, scope: !13138)
!13140 = !DILocalVariable(name: "esf", arg: 1, scope: !13141, file: !8945, line: 71, type: !12905)
!13141 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8945, file: !8945, line: 71, type: !13142, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13144)
!13142 = !DISubroutineType(types: !13143)
!13143 = !{!119, !12905}
!13144 = !{!13140}
!13145 = !DILocation(line: 0, scope: !13141, inlinedAt: !13146)
!13146 = distinct !DILocation(line: 119, column: 23, scope: !13138)
!13147 = !DILocation(line: 73, column: 21, scope: !13141, inlinedAt: !13146)
!13148 = !DILocation(line: 73, column: 26, scope: !13141, inlinedAt: !13146)
!13149 = !DILocation(line: 73, column: 9, scope: !13141, inlinedAt: !13146)
!13150 = !DILocation(line: 119, column: 6, scope: !13121)
!13151 = !DILocation(line: 120, column: 3, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13153, file: !13084, line: 120, column: 3)
!13153 = distinct !DILexicalBlock(scope: !13154, file: !13084, line: 120, column: 3)
!13154 = distinct !DILexicalBlock(scope: !13155, file: !13084, line: 120, column: 3)
!13155 = distinct !DILexicalBlock(scope: !13156, file: !13084, line: 120, column: 3)
!13156 = distinct !DILexicalBlock(scope: !13138, file: !13084, line: 119, column: 57)
!13157 = !DILocation(line: 121, column: 2, scope: !13156)
!13158 = !DILocation(line: 124, column: 2, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13160, file: !13084, line: 124, column: 2)
!13160 = distinct !DILexicalBlock(scope: !13161, file: !13084, line: 124, column: 2)
!13161 = distinct !DILexicalBlock(scope: !13162, file: !13084, line: 124, column: 2)
!13162 = distinct !DILexicalBlock(scope: !13121, file: !13084, line: 124, column: 2)
!13163 = !DILocation(line: 131, column: 2, scope: !13121)
!13164 = !DILocation(line: 147, column: 3, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13166, file: !13084, line: 147, column: 3)
!13166 = distinct !DILexicalBlock(scope: !13167, file: !13084, line: 147, column: 3)
!13167 = distinct !DILexicalBlock(scope: !13168, file: !13084, line: 146, column: 32)
!13168 = distinct !DILexicalBlock(scope: !13121, file: !13084, line: 146, column: 6)
!13169 = !DILocation(line: 147, column: 3, scope: !13166)
!13170 = !DILocation(line: 147, column: 3, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13165, file: !13084, line: 147, column: 3)
!13172 = !DILocalVariable(name: "key", arg: 1, scope: !13173, file: !8072, line: 84, type: !32)
!13173 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13174)
!13174 = !{!13172}
!13175 = !DILocation(line: 0, scope: !13173, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 186, column: 2, scope: !13121)
!13177 = !DILocation(line: 95, column: 2, scope: !13173, inlinedAt: !13176)
!13178 = !{i64 2847155}
!13179 = !DILocation(line: 189, column: 3, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !13084, line: 188, column: 41)
!13181 = distinct !DILexicalBlock(scope: !13121, file: !13084, line: 188, column: 6)
!13182 = !DILocation(line: 191, column: 1, scope: !13121)
!13183 = distinct !DISubprogram(name: "k_current_get", scope: !124, file: !124, line: 530, type: !13184, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !2645)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{!13186}
!13186 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !12949)
!13187 = !DILocation(line: 535, column: 9, scope: !13183)
!13188 = !DILocation(line: 535, column: 2, scope: !13183)
!13189 = distinct !DISubprogram(name: "reason_to_str", scope: !13084, file: !13084, line: 62, type: !13190, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13192)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!330, !32}
!13192 = !{!13193}
!13193 = !DILocalVariable(name: "reason", arg: 1, scope: !13189, file: !13084, line: 62, type: !32)
!13194 = !DILocation(line: 0, scope: !13189)
!13195 = !DILocation(line: 64, column: 2, scope: !13189)
!13196 = !DILocation(line: 0, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13189, file: !13084, line: 64, column: 18)
!13198 = !DILocation(line: 78, column: 1, scope: !13189)
!13199 = distinct !DISubprogram(name: "thread_name_get", scope: !13084, file: !13084, line: 51, type: !13200, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13202)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{!330, !12949}
!13202 = !{!13203, !13204}
!13203 = !DILocalVariable(name: "thread", arg: 1, scope: !13199, file: !13084, line: 51, type: !12949)
!13204 = !DILocalVariable(name: "thread_name", scope: !13199, file: !13084, line: 53, type: !330)
!13205 = !DILocation(line: 0, scope: !13199)
!13206 = !DILocation(line: 53, column: 36, scope: !13199)
!13207 = !DILocation(line: 53, column: 28, scope: !13199)
!13208 = !DILocation(line: 53, column: 47, scope: !13199)
!13209 = !DILocation(line: 55, column: 19, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13199, file: !13084, line: 55, column: 6)
!13211 = !DILocation(line: 55, column: 28, scope: !13210)
!13212 = !DILocation(line: 55, column: 32, scope: !13210)
!13213 = !DILocation(line: 55, column: 47, scope: !13210)
!13214 = !DILocation(line: 55, column: 6, scope: !13199)
!13215 = !DILocation(line: 57, column: 2, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13210, file: !13084, line: 55, column: 57)
!13217 = !DILocation(line: 59, column: 2, scope: !13199)
!13218 = distinct !DISubprogram(name: "k_thread_abort", scope: !4197, file: !4197, line: 188, type: !13219, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !13221)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{null, !13186}
!13221 = !{!13222}
!13222 = !DILocalVariable(name: "thread", arg: 1, scope: !13218, file: !4197, line: 188, type: !13186)
!13223 = !DILocation(line: 0, scope: !13218)
!13224 = !DILocation(line: 197, column: 2, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13218, file: !4197, line: 197, column: 2)
!13226 = !{i64 2151045478}
!13227 = !DILocation(line: 198, column: 2, scope: !13218)
!13228 = !DILocation(line: 199, column: 1, scope: !13218)
!13229 = distinct !DISubprogram(name: "z_current_get", scope: !4197, file: !4197, line: 173, type: !13184, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3759, retainedNodes: !2645)
!13230 = !DILocation(line: 180, column: 2, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13229, file: !4197, line: 180, column: 2)
!13232 = !{i64 2151045410}
!13233 = !DILocation(line: 181, column: 9, scope: !13229)
!13234 = !DILocation(line: 181, column: 2, scope: !13229)
!13235 = distinct !DISubprogram(name: "z_early_memset", scope: !2451, file: !2451, line: 108, type: !13236, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13238)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{null, !102, !103, !153}
!13238 = !{!13239, !13240, !13241}
!13239 = !DILocalVariable(name: "dst", arg: 1, scope: !13235, file: !2451, line: 108, type: !102)
!13240 = !DILocalVariable(name: "c", arg: 2, scope: !13235, file: !2451, line: 108, type: !103)
!13241 = !DILocalVariable(name: "n", arg: 3, scope: !13235, file: !2451, line: 108, type: !153)
!13242 = !DILocation(line: 0, scope: !13235)
!13243 = !DILocation(line: 110, column: 9, scope: !13235)
!13244 = !DILocation(line: 111, column: 1, scope: !13235)
!13245 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2451, file: !2451, line: 121, type: !13246, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{null, !102, !13, !153}
!13248 = !{!13249, !13250, !13251}
!13249 = !DILocalVariable(name: "dst", arg: 1, scope: !13245, file: !2451, line: 121, type: !102)
!13250 = !DILocalVariable(name: "src", arg: 2, scope: !13245, file: !2451, line: 121, type: !13)
!13251 = !DILocalVariable(name: "n", arg: 3, scope: !13245, file: !2451, line: 121, type: !153)
!13252 = !DILocation(line: 0, scope: !13245)
!13253 = !DILocation(line: 123, column: 9, scope: !13245)
!13254 = !DILocation(line: 124, column: 1, scope: !13245)
!13255 = distinct !DISubprogram(name: "z_bss_zero", scope: !2451, file: !2451, line: 132, type: !327, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !2645)
!13256 = !DILocation(line: 143, column: 2, scope: !13255)
!13257 = !DILocation(line: 168, column: 1, scope: !13255)
!13258 = distinct !DISubprogram(name: "z_init_cpu", scope: !2451, file: !2451, line: 372, type: !13259, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13261)
!13259 = !DISubroutineType(types: !13260)
!13260 = !{null, !103}
!13261 = !{!13262}
!13262 = !DILocalVariable(name: "id", arg: 1, scope: !13258, file: !2451, line: 372, type: !103)
!13263 = !DILocation(line: 0, scope: !13258)
!13264 = !DILocation(line: 374, column: 2, scope: !13258)
!13265 = !DILocation(line: 375, column: 34, scope: !13258)
!13266 = !DILocation(line: 375, column: 19, scope: !13258)
!13267 = !DILocation(line: 375, column: 31, scope: !13258)
!13268 = !DILocation(line: 376, column: 24, scope: !13258)
!13269 = !DILocation(line: 376, column: 19, scope: !13258)
!13270 = !DILocation(line: 376, column: 22, scope: !13258)
!13271 = !DILocation(line: 378, column: 26, scope: !13258)
!13272 = !DILocation(line: 378, column: 4, scope: !13258)
!13273 = !DILocation(line: 378, column: 50, scope: !13258)
!13274 = !DILocation(line: 377, column: 19, scope: !13258)
!13275 = !DILocation(line: 377, column: 29, scope: !13258)
!13276 = !DILocation(line: 384, column: 1, scope: !13258)
!13277 = distinct !DISubprogram(name: "init_idle_thread", scope: !2451, file: !2451, line: 343, type: !13259, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13278)
!13278 = !{!13279, !13280, !13281, !13284}
!13279 = !DILocalVariable(name: "i", arg: 1, scope: !13277, file: !2451, line: 343, type: !103)
!13280 = !DILocalVariable(name: "thread", scope: !13277, file: !2451, line: 345, type: !2543)
!13281 = !DILocalVariable(name: "stack", scope: !13277, file: !2451, line: 346, type: !13282)
!13282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13283, size: 32)
!13283 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !307, line: 44, baseType: !2654)
!13284 = !DILocalVariable(name: "tname", scope: !13277, file: !2451, line: 358, type: !157)
!13285 = !DILocation(line: 0, scope: !13277)
!13286 = !DILocation(line: 345, column: 29, scope: !13277)
!13287 = !DILocation(line: 346, column: 28, scope: !13277)
!13288 = !DILocation(line: 362, column: 37, scope: !13277)
!13289 = !DILocation(line: 362, column: 36, scope: !13277)
!13290 = !DILocation(line: 361, column: 2, scope: !13277)
!13291 = !DILocation(line: 365, column: 2, scope: !13277)
!13292 = !DILocation(line: 370, column: 1, scope: !13277)
!13293 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !309, file: !309, line: 331, type: !13294, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13296)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{!157, !13282}
!13296 = !{!13297}
!13297 = !DILocalVariable(name: "sym", arg: 1, scope: !13293, file: !309, line: 331, type: !13282)
!13298 = !DILocation(line: 0, scope: !13293)
!13299 = !DILocation(line: 333, column: 9, scope: !13293)
!13300 = !DILocation(line: 333, column: 2, scope: !13293)
!13301 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13302, file: !13302, line: 155, type: !13303, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13305)
!13302 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13303 = !DISubroutineType(types: !13304)
!13304 = !{null, !2543}
!13305 = !{!13306}
!13306 = !DILocalVariable(name: "thread", arg: 1, scope: !13301, file: !13302, line: 155, type: !2543)
!13307 = !DILocation(line: 0, scope: !13301)
!13308 = !DILocation(line: 157, column: 15, scope: !13301)
!13309 = !DILocation(line: 157, column: 28, scope: !13301)
!13310 = !DILocation(line: 158, column: 1, scope: !13301)
!13311 = distinct !DISubprogram(name: "z_cstart", scope: !2451, file: !2451, line: 501, type: !327, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13312)
!13312 = !{!13313}
!13313 = !DILocalVariable(name: "dummy_thread", scope: !13311, file: !2451, line: 518, type: !2544)
!13314 = !DILocation(line: 507, column: 2, scope: !13311)
!13315 = !DILocation(line: 43, column: 14, scope: !13316, inlinedAt: !13320)
!13316 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13317, file: !13317, line: 40, type: !327, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13318)
!13317 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13318 = !{!13319}
!13319 = !DILocalVariable(name: "msp", scope: !13316, file: !13317, line: 42, type: !108)
!13320 = distinct !DILocation(line: 44, column: 2, scope: !13321, inlinedAt: !13323)
!13321 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13322, file: !13322, line: 42, type: !327, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !2645)
!13322 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13323 = distinct !DILocation(line: 510, column: 2, scope: !13311)
!13324 = !DILocation(line: 43, column: 3, scope: !13316, inlinedAt: !13320)
!13325 = !DILocation(line: 43, column: 60, scope: !13316, inlinedAt: !13320)
!13326 = !DILocation(line: 0, scope: !13316, inlinedAt: !13320)
!13327 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13328, file: !7951, line: 1153, type: !108)
!13328 = distinct !DISubprogram(name: "__set_MSP", scope: !7951, file: !7951, line: 1153, type: !8048, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13329)
!13329 = !{!13327}
!13330 = !DILocation(line: 0, scope: !13328, inlinedAt: !13331)
!13331 = distinct !DILocation(line: 46, column: 2, scope: !13316, inlinedAt: !13320)
!13332 = !DILocation(line: 1155, column: 3, scope: !13328, inlinedAt: !13331)
!13333 = !{i64 7509094}
!13334 = !DILocation(line: 62, column: 11, scope: !13316, inlinedAt: !13320)
!13335 = !DILocation(line: 102, column: 2, scope: !13336, inlinedAt: !13337)
!13336 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8945, file: !8945, line: 97, type: !327, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !2645)
!13337 = distinct !DILocation(line: 45, column: 2, scope: !13321, inlinedAt: !13323)
!13338 = !DILocation(line: 108, column: 2, scope: !13336, inlinedAt: !13337)
!13339 = !DILocation(line: 112, column: 2, scope: !13336, inlinedAt: !13337)
!13340 = !DILocation(line: 113, column: 2, scope: !13336, inlinedAt: !13337)
!13341 = !DILocation(line: 114, column: 2, scope: !13336, inlinedAt: !13337)
!13342 = !DILocation(line: 116, column: 2, scope: !13336, inlinedAt: !13337)
!13343 = !DILocation(line: 123, column: 13, scope: !13336, inlinedAt: !13337)
!13344 = !DILocation(line: 46, column: 2, scope: !13321, inlinedAt: !13323)
!13345 = !DILocation(line: 47, column: 2, scope: !13321, inlinedAt: !13323)
!13346 = !DILocation(line: 174, column: 12, scope: !13347, inlinedAt: !13348)
!13347 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8945, file: !8945, line: 169, type: !327, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !2645)
!13348 = distinct !DILocation(line: 48, column: 2, scope: !13321, inlinedAt: !13323)
!13349 = !DILocation(line: 179, column: 12, scope: !13347, inlinedAt: !13348)
!13350 = !DILocation(line: 518, column: 2, scope: !13311)
!13351 = !DILocation(line: 518, column: 18, scope: !13311)
!13352 = !DILocation(line: 520, column: 2, scope: !13311)
!13353 = !DILocation(line: 523, column: 2, scope: !13311)
!13354 = !DILocation(line: 526, column: 2, scope: !13311)
!13355 = !DILocation(line: 527, column: 2, scope: !13311)
!13356 = !DILocation(line: 543, column: 24, scope: !13311)
!13357 = !DILocation(line: 543, column: 2, scope: !13311)
!13358 = !DILocation(line: 0, scope: !2678)
!13359 = !DILocation(line: 246, column: 15, scope: !2696)
!13360 = !DILocation(line: 246, column: 36, scope: !2695)
!13361 = !DILocation(line: 246, column: 2, scope: !2696)
!13362 = !DILocation(line: 247, column: 37, scope: !2694)
!13363 = !DILocation(line: 0, scope: !2694)
!13364 = !DILocation(line: 248, column: 19, scope: !2694)
!13365 = !DILocation(line: 248, column: 12, scope: !2694)
!13366 = !DILocation(line: 250, column: 11, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !2694, file: !2451, line: 250, column: 7)
!13368 = !DILocation(line: 250, column: 7, scope: !2694)
!13369 = !DILocation(line: 254, column: 11, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13371, file: !2451, line: 254, column: 8)
!13371 = distinct !DILexicalBlock(scope: !13367, file: !2451, line: 250, column: 20)
!13372 = !DILocation(line: 254, column: 8, scope: !13371)
!13373 = !DILocation(line: 255, column: 9, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13370, file: !2451, line: 254, column: 17)
!13375 = !DILocation(line: 258, column: 9, scope: !13374)
!13376 = !DILocation(line: 261, column: 28, scope: !13374)
!13377 = !DILocation(line: 261, column: 10, scope: !13374)
!13378 = !DILocation(line: 261, column: 17, scope: !13374)
!13379 = !DILocation(line: 261, column: 26, scope: !13374)
!13380 = !DILocation(line: 262, column: 4, scope: !13374)
!13381 = !DILocation(line: 263, column: 9, scope: !13371)
!13382 = !DILocation(line: 263, column: 16, scope: !13371)
!13383 = !DILocation(line: 263, column: 28, scope: !13371)
!13384 = !DILocation(line: 264, column: 3, scope: !13371)
!13385 = !DILocation(line: 246, column: 60, scope: !2695)
!13386 = distinct !{!13386, !13361, !13387}
!13387 = !DILocation(line: 265, column: 2, scope: !2696)
!13388 = !DILocation(line: 266, column: 1, scope: !2678)
!13389 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2295, file: !2295, line: 1814, type: !7991, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13390)
!13390 = !{!13391, !13392}
!13391 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13389, file: !2295, line: 1814, type: !3230)
!13392 = !DILocalVariable(name: "priority", arg: 2, scope: !13389, file: !2295, line: 1814, type: !108)
!13393 = !DILocation(line: 0, scope: !13389)
!13394 = !DILocation(line: 1822, column: 48, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13396, file: !2295, line: 1821, column: 3)
!13396 = distinct !DILexicalBlock(scope: !13389, file: !2295, line: 1816, column: 7)
!13397 = !DILocation(line: 1822, column: 32, scope: !13395)
!13398 = !DILocation(line: 1822, column: 40, scope: !13395)
!13399 = !DILocation(line: 1822, column: 5, scope: !13395)
!13400 = !DILocation(line: 1822, column: 46, scope: !13395)
!13401 = !DILocation(line: 1824, column: 1, scope: !13389)
!13402 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13322, file: !13322, line: 32, type: !327, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!13403 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13404, file: !13404, line: 215, type: !13303, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13405)
!13404 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13405 = !{!13406}
!13406 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13403, file: !13404, line: 215, type: !2543)
!13407 = !DILocation(line: 0, scope: !13403)
!13408 = !DILocation(line: 217, column: 21, scope: !13403)
!13409 = !DILocation(line: 217, column: 34, scope: !13403)
!13410 = !DILocation(line: 221, column: 21, scope: !13403)
!13411 = !DILocation(line: 221, column: 34, scope: !13403)
!13412 = !DILocation(line: 232, column: 16, scope: !13403)
!13413 = !DILocation(line: 232, column: 30, scope: !13403)
!13414 = !DILocation(line: 239, column: 24, scope: !13403)
!13415 = !DILocation(line: 240, column: 1, scope: !13403)
!13416 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2451, file: !2451, line: 399, type: !13417, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13419)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{!157}
!13419 = !{!13420}
!13420 = !DILocalVariable(name: "stack_ptr", scope: !13416, file: !2451, line: 401, type: !157)
!13421 = !DILocation(line: 404, column: 2, scope: !13416)
!13422 = !DILocation(line: 416, column: 24, scope: !13416)
!13423 = !DILocation(line: 418, column: 14, scope: !13416)
!13424 = !DILocation(line: 0, scope: !13416)
!13425 = !DILocation(line: 423, column: 2, scope: !13416)
!13426 = !DILocation(line: 424, column: 2, scope: !13416)
!13427 = !DILocation(line: 426, column: 2, scope: !13416)
!13428 = !DILocation(line: 428, column: 2, scope: !13416)
!13429 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2451, file: !2451, line: 432, type: !13430, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13432)
!13430 = !DISubroutineType(types: !13431)
!13431 = !{null, !157}
!13432 = !{!13433}
!13433 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13429, file: !2451, line: 432, type: !157)
!13434 = !DILocation(line: 0, scope: !13429)
!13435 = !DILocation(line: 435, column: 2, scope: !13429)
!13436 = !DILocation(line: 445, column: 2, scope: !13429)
!13437 = distinct !DISubprogram(name: "bg_thread_main", scope: !2451, file: !2451, line: 277, type: !316, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !13438)
!13438 = !{!13439, !13440, !13441}
!13439 = !DILocalVariable(name: "unused1", arg: 1, scope: !13437, file: !2451, line: 277, type: !102)
!13440 = !DILocalVariable(name: "unused2", arg: 2, scope: !13437, file: !2451, line: 277, type: !102)
!13441 = !DILocalVariable(name: "unused3", arg: 3, scope: !13437, file: !2451, line: 277, type: !102)
!13442 = !DILocation(line: 0, scope: !13437)
!13443 = !DILocation(line: 291, column: 20, scope: !13437)
!13444 = !DILocation(line: 293, column: 2, scope: !13437)
!13445 = !DILocation(line: 297, column: 2, scope: !13437)
!13446 = !DILocation(line: 305, column: 2, scope: !13437)
!13447 = !DILocation(line: 307, column: 2, scope: !13437)
!13448 = !DILocation(line: 330, column: 8, scope: !13437)
!13449 = !DILocation(line: 333, column: 34, scope: !13437)
!13450 = !DILocation(line: 339, column: 1, scope: !13437)
!13451 = distinct !DISubprogram(name: "init_mem_slab_module", scope: !2726, file: !2726, line: 56, type: !1207, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13452)
!13452 = !{!13453, !13454, !13455, !13475}
!13453 = !DILocalVariable(name: "dev", arg: 1, scope: !13451, file: !2726, line: 56, type: !1209)
!13454 = !DILocalVariable(name: "rc", scope: !13451, file: !2726, line: 58, type: !103)
!13455 = !DILocalVariable(name: "slab", scope: !13456, file: !2726, line: 61, type: !13457)
!13456 = distinct !DILexicalBlock(scope: !13451, file: !2726, line: 61, column: 2)
!13457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13458, size: 32)
!13458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_slab", file: !124, line: 4836, size: 256, elements: !13459)
!13459 = !{!13460, !13466, !13470, !13471, !13472, !13473, !13474}
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13458, file: !124, line: 4837, baseType: !13461, size: 64)
!13461 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !13462)
!13462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !13463)
!13463 = !{!13464}
!13464 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13462, file: !128, line: 232, baseType: !13465, size: 64)
!13465 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !2712)
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13458, file: !124, line: 4838, baseType: !13467, size: 32, offset: 64)
!13467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !13468)
!13468 = !{!13469}
!13469 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13467, file: !149, line: 52, baseType: !22, size: 32)
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !13458, file: !124, line: 4839, baseType: !108, size: 32, offset: 96)
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !13458, file: !124, line: 4840, baseType: !153, size: 32, offset: 128)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !13458, file: !124, line: 4841, baseType: !157, size: 32, offset: 160)
!13473 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !13458, file: !124, line: 4842, baseType: !157, size: 32, offset: 192)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !13458, file: !124, line: 4843, baseType: !108, size: 32, offset: 224)
!13475 = !DILabel(scope: !13451, name: "out", file: !2726, line: 69)
!13476 = !DILocation(line: 0, scope: !13451)
!13477 = !DILocation(line: 0, scope: !13456)
!13478 = !DILocation(line: 61, column: 2, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !2726, line: 61, column: 2)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !2726, line: 61, column: 2)
!13481 = distinct !DILexicalBlock(scope: !13456, file: !2726, line: 61, column: 2)
!13482 = !DILocation(line: 61, column: 2, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13479, file: !2726, line: 61, column: 2)
!13484 = distinct !{!13484, !13485, !13486}
!13485 = !DILocation(line: 61, column: 2, scope: !13456)
!13486 = !DILocation(line: 67, column: 2, scope: !13456)
!13487 = !DILocation(line: 61, column: 2, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13483, file: !2726, line: 61, column: 2)
!13489 = !DILocation(line: 61, column: 2, scope: !13480)
!13490 = !DILocation(line: 62, column: 8, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13481, file: !2726, line: 61, column: 43)
!13492 = !DILocation(line: 63, column: 10, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13491, file: !2726, line: 63, column: 7)
!13494 = !DILocation(line: 61, column: 2, scope: !13481)
!13495 = !DILocation(line: 63, column: 7, scope: !13491)
!13496 = !DILocation(line: 71, column: 1, scope: !13451)
!13497 = distinct !DISubprogram(name: "create_free_list", scope: !2726, file: !2726, line: 27, type: !13498, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13500)
!13498 = !DISubroutineType(types: !13499)
!13499 = !{!103, !13457}
!13500 = !{!13501, !13502, !13503}
!13501 = !DILocalVariable(name: "slab", arg: 1, scope: !13497, file: !2726, line: 27, type: !13457)
!13502 = !DILocalVariable(name: "j", scope: !13497, file: !2726, line: 29, type: !108)
!13503 = !DILocalVariable(name: "p", scope: !13497, file: !2726, line: 30, type: !157)
!13504 = !DILocation(line: 0, scope: !13497)
!13505 = !DILocation(line: 33, column: 2, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13497, file: !2726, line: 33, column: 2)
!13507 = !DILocation(line: 33, column: 2, scope: !13497)
!13508 = !DILocation(line: 38, column: 8, scope: !13497)
!13509 = !DILocation(line: 38, column: 18, scope: !13497)
!13510 = !DILocation(line: 41, column: 25, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13512, file: !2726, line: 41, column: 2)
!13512 = distinct !DILexicalBlock(scope: !13497, file: !2726, line: 41, column: 2)
!13513 = !DILocation(line: 41, column: 17, scope: !13511)
!13514 = !DILocation(line: 41, column: 2, scope: !13512)
!13515 = !DILocation(line: 42, column: 23, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13511, file: !2726, line: 41, column: 42)
!13517 = !DILocation(line: 42, column: 3, scope: !13516)
!13518 = !DILocation(line: 42, column: 15, scope: !13516)
!13519 = !DILocation(line: 43, column: 19, scope: !13516)
!13520 = !DILocation(line: 44, column: 14, scope: !13516)
!13521 = !DILocation(line: 44, column: 5, scope: !13516)
!13522 = !DILocation(line: 41, column: 38, scope: !13511)
!13523 = distinct !{!13523, !13514, !13524}
!13524 = !DILocation(line: 45, column: 2, scope: !13512)
!13525 = !DILocation(line: 47, column: 1, scope: !13497)
!13526 = distinct !DISubprogram(name: "k_mem_slab_init", scope: !2726, file: !2726, line: 76, type: !13527, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13529)
!13527 = !DISubroutineType(types: !13528)
!13528 = !{!103, !13457, !102, !153, !108}
!13529 = !{!13530, !13531, !13532, !13533, !13534, !13535}
!13530 = !DILocalVariable(name: "slab", arg: 1, scope: !13526, file: !2726, line: 76, type: !13457)
!13531 = !DILocalVariable(name: "buffer", arg: 2, scope: !13526, file: !2726, line: 76, type: !102)
!13532 = !DILocalVariable(name: "block_size", arg: 3, scope: !13526, file: !2726, line: 77, type: !153)
!13533 = !DILocalVariable(name: "num_blocks", arg: 4, scope: !13526, file: !2726, line: 77, type: !108)
!13534 = !DILocalVariable(name: "rc", scope: !13526, file: !2726, line: 79, type: !103)
!13535 = !DILabel(scope: !13526, name: "out", file: !2726, line: 98)
!13536 = !DILocation(line: 0, scope: !13526)
!13537 = !DILocation(line: 81, column: 8, scope: !13526)
!13538 = !DILocation(line: 81, column: 19, scope: !13526)
!13539 = !DILocation(line: 82, column: 8, scope: !13526)
!13540 = !DILocation(line: 82, column: 19, scope: !13526)
!13541 = !DILocation(line: 83, column: 8, scope: !13526)
!13542 = !DILocation(line: 83, column: 15, scope: !13526)
!13543 = !DILocation(line: 84, column: 8, scope: !13526)
!13544 = !DILocation(line: 84, column: 17, scope: !13526)
!13545 = !DILocation(line: 85, column: 15, scope: !13526)
!13546 = !DILocation(line: 91, column: 7, scope: !13526)
!13547 = !DILocation(line: 92, column: 9, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13526, file: !2726, line: 92, column: 6)
!13549 = !DILocation(line: 92, column: 6, scope: !13526)
!13550 = !DILocation(line: 96, column: 22, scope: !13526)
!13551 = !DILocation(line: 96, column: 2, scope: !13526)
!13552 = !DILocation(line: 97, column: 2, scope: !13526)
!13553 = !DILocation(line: 98, column: 1, scope: !13526)
!13554 = !DILocation(line: 101, column: 2, scope: !13526)
!13555 = distinct !DISubprogram(name: "z_waitq_init", scope: !13556, file: !13556, line: 47, type: !13557, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13560)
!13556 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13557 = !DISubroutineType(types: !13558)
!13558 = !{null, !13559}
!13559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13461, size: 32)
!13560 = !{!13561}
!13561 = !DILocalVariable(name: "w", arg: 1, scope: !13555, file: !13556, line: 47, type: !13559)
!13562 = !DILocation(line: 0, scope: !13555)
!13563 = !DILocation(line: 49, column: 21, scope: !13555)
!13564 = !DILocation(line: 49, column: 2, scope: !13555)
!13565 = !DILocation(line: 50, column: 1, scope: !13555)
!13566 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !13567, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13570)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{null, !13569}
!13569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13465, size: 32)
!13570 = !{!13571}
!13571 = !DILocalVariable(name: "list", arg: 1, scope: !13566, file: !133, line: 197, type: !13569)
!13572 = !DILocation(line: 0, scope: !13566)
!13573 = !DILocation(line: 199, column: 8, scope: !13566)
!13574 = !DILocation(line: 199, column: 13, scope: !13566)
!13575 = !DILocation(line: 200, column: 8, scope: !13566)
!13576 = !DILocation(line: 200, column: 13, scope: !13566)
!13577 = !DILocation(line: 201, column: 1, scope: !13566)
!13578 = distinct !DISubprogram(name: "k_mem_slab_alloc", scope: !2726, file: !2726, line: 104, type: !13579, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13585)
!13579 = !DISubroutineType(types: !13580)
!13580 = !{!103, !13457, !1556, !13581}
!13581 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13582)
!13582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13583)
!13583 = !{!13584}
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13582, file: !105, line: 66, baseType: !104, size: 64)
!13585 = !{!13586, !13587, !13588, !13589, !13594}
!13586 = !DILocalVariable(name: "slab", arg: 1, scope: !13578, file: !2726, line: 104, type: !13457)
!13587 = !DILocalVariable(name: "mem", arg: 2, scope: !13578, file: !2726, line: 104, type: !1556)
!13588 = !DILocalVariable(name: "timeout", arg: 3, scope: !13578, file: !2726, line: 104, type: !13581)
!13589 = !DILocalVariable(name: "key", scope: !13578, file: !2726, line: 106, type: !13590)
!13590 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !13591)
!13591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !13592)
!13592 = !{!13593}
!13593 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13591, file: !149, line: 33, baseType: !103, size: 32)
!13594 = !DILocalVariable(name: "result", scope: !13578, file: !2726, line: 107, type: !103)
!13595 = !DILocation(line: 0, scope: !13578)
!13596 = !DILocation(line: 106, column: 44, scope: !13578)
!13597 = !DILocalVariable(name: "l", arg: 1, scope: !13598, file: !149, line: 136, type: !13601)
!13598 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !13599, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13602)
!13599 = !DISubroutineType(types: !13600)
!13600 = !{!13590, !13601}
!13601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13467, size: 32)
!13602 = !{!13597, !13603}
!13603 = !DILocalVariable(name: "k", scope: !13598, file: !149, line: 139, type: !13590)
!13604 = !DILocation(line: 0, scope: !13598, inlinedAt: !13605)
!13605 = distinct !DILocation(line: 106, column: 25, scope: !13578)
!13606 = !DILocation(line: 55, column: 2, scope: !13607, inlinedAt: !13611)
!13607 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13608)
!13608 = !{!13609, !13610}
!13609 = !DILocalVariable(name: "key", scope: !13607, file: !8072, line: 44, type: !32)
!13610 = !DILocalVariable(name: "tmp", scope: !13607, file: !8072, line: 53, type: !32)
!13611 = distinct !DILocation(line: 145, column: 10, scope: !13598, inlinedAt: !13605)
!13612 = !{i64 2846427}
!13613 = !DILocation(line: 0, scope: !13607, inlinedAt: !13611)
!13614 = !DILocation(line: 148, column: 2, scope: !13615, inlinedAt: !13605)
!13615 = distinct !DILexicalBlock(scope: !13616, file: !149, line: 148, column: 2)
!13616 = distinct !DILexicalBlock(scope: !13598, file: !149, line: 148, column: 2)
!13617 = !DILocation(line: 148, column: 2, scope: !13616, inlinedAt: !13605)
!13618 = !DILocation(line: 148, column: 2, scope: !13619, inlinedAt: !13605)
!13619 = distinct !DILexicalBlock(scope: !13615, file: !149, line: 148, column: 2)
!13620 = !DILocation(line: 160, column: 2, scope: !13598, inlinedAt: !13605)
!13621 = !DILocation(line: 111, column: 12, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13578, file: !2726, line: 111, column: 6)
!13623 = !DILocation(line: 111, column: 22, scope: !13622)
!13624 = !DILocation(line: 111, column: 6, scope: !13578)
!13625 = !DILocation(line: 113, column: 8, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13622, file: !2726, line: 111, column: 31)
!13627 = !DILocation(line: 114, column: 38, scope: !13626)
!13628 = !DILocation(line: 114, column: 21, scope: !13626)
!13629 = !DILocation(line: 114, column: 19, scope: !13626)
!13630 = !DILocation(line: 115, column: 9, scope: !13626)
!13631 = !DILocation(line: 115, column: 17, scope: !13626)
!13632 = !DILocation(line: 122, column: 2, scope: !13626)
!13633 = !DILocation(line: 122, column: 13, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13622, file: !2726, line: 122, column: 13)
!13635 = !DILocation(line: 122, column: 13, scope: !13622)
!13636 = !DILocation(line: 125, column: 8, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13634, file: !2726, line: 123, column: 42)
!13638 = !DILocation(line: 131, column: 49, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13634, file: !2726, line: 127, column: 9)
!13640 = !DILocation(line: 131, column: 12, scope: !13639)
!13641 = !DILocation(line: 132, column: 14, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13639, file: !2726, line: 132, column: 7)
!13643 = !DILocation(line: 132, column: 7, scope: !13639)
!13644 = !DILocation(line: 133, column: 11, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !2726, line: 132, column: 20)
!13646 = !DILocation(line: 133, column: 26, scope: !13645)
!13647 = !DILocation(line: 133, column: 9, scope: !13645)
!13648 = !DILocation(line: 134, column: 3, scope: !13645)
!13649 = !DILocation(line: 0, scope: !13622)
!13650 = !DILocalVariable(name: "key", arg: 2, scope: !13651, file: !149, line: 190, type: !13590)
!13651 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !13652, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13654)
!13652 = !DISubroutineType(types: !13653)
!13653 = !{null, !13601, !13590}
!13654 = !{!13655, !13650}
!13655 = !DILocalVariable(name: "l", arg: 1, scope: !13651, file: !149, line: 189, type: !13601)
!13656 = !DILocation(line: 0, scope: !13651, inlinedAt: !13657)
!13657 = distinct !DILocation(line: 143, column: 2, scope: !13578)
!13658 = !DILocation(line: 194, column: 2, scope: !13659, inlinedAt: !13657)
!13659 = distinct !DILexicalBlock(scope: !13660, file: !149, line: 194, column: 2)
!13660 = distinct !DILexicalBlock(scope: !13651, file: !149, line: 194, column: 2)
!13661 = !DILocation(line: 194, column: 2, scope: !13660, inlinedAt: !13657)
!13662 = !DILocation(line: 194, column: 2, scope: !13663, inlinedAt: !13657)
!13663 = distinct !DILexicalBlock(scope: !13659, file: !149, line: 194, column: 2)
!13664 = !DILocalVariable(name: "key", arg: 1, scope: !13665, file: !8072, line: 84, type: !32)
!13665 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13666)
!13666 = !{!13664}
!13667 = !DILocation(line: 0, scope: !13665, inlinedAt: !13668)
!13668 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !13657)
!13669 = !DILocation(line: 95, column: 2, scope: !13665, inlinedAt: !13668)
!13670 = !{i64 2847244}
!13671 = !DILocation(line: 145, column: 2, scope: !13578)
!13672 = !DILocation(line: 146, column: 1, scope: !13578)
!13673 = distinct !DISubprogram(name: "k_mem_slab_free", scope: !2726, file: !2726, line: 148, type: !13674, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13676)
!13674 = !DISubroutineType(types: !13675)
!13675 = !{null, !13457, !1556}
!13676 = !{!13677, !13678, !13679, !13680}
!13677 = !DILocalVariable(name: "slab", arg: 1, scope: !13673, file: !2726, line: 148, type: !13457)
!13678 = !DILocalVariable(name: "mem", arg: 2, scope: !13673, file: !2726, line: 148, type: !1556)
!13679 = !DILocalVariable(name: "key", scope: !13673, file: !2726, line: 150, type: !13590)
!13680 = !DILocalVariable(name: "pending_thread", scope: !13681, file: !2726, line: 154, type: !13683)
!13681 = distinct !DILexicalBlock(scope: !13682, file: !2726, line: 153, column: 68)
!13682 = distinct !DILexicalBlock(scope: !13673, file: !2726, line: 153, column: 6)
!13683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13684, size: 32)
!13684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !195, line: 245, size: 896, elements: !13685)
!13685 = !{!13686, !13724, !13736, !13737, !13738, !13739, !13751}
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13684, file: !195, line: 247, baseType: !13687, size: 384)
!13687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !195, line: 57, size: 384, elements: !13688)
!13688 = !{!13689, !13699, !13700, !13701, !13702, !13711, !13712, !13713}
!13689 = !DIDerivedType(tag: DW_TAG_member, scope: !13687, file: !195, line: 60, baseType: !13690, size: 64)
!13690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13687, file: !195, line: 60, size: 64, elements: !13691)
!13691 = !{!13692, !13693}
!13692 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13690, file: !195, line: 61, baseType: !2711, size: 64)
!13693 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13690, file: !195, line: 62, baseType: !13694, size: 64)
!13694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !207, line: 49, size: 64, elements: !13695)
!13695 = !{!13696}
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13694, file: !207, line: 50, baseType: !13697, size: 64)
!13697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13698, size: 64, elements: !212)
!13698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13694, size: 32)
!13699 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13687, file: !195, line: 68, baseType: !13559, size: 32, offset: 64)
!13700 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13687, file: !195, line: 71, baseType: !164, size: 8, offset: 96)
!13701 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13687, file: !195, line: 74, baseType: !164, size: 8, offset: 104)
!13702 = !DIDerivedType(tag: DW_TAG_member, scope: !13687, file: !195, line: 90, baseType: !13703, size: 16, offset: 112)
!13703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13687, file: !195, line: 90, size: 16, elements: !13704)
!13704 = !{!13705, !13710}
!13705 = !DIDerivedType(tag: DW_TAG_member, scope: !13703, file: !195, line: 91, baseType: !13706, size: 16)
!13706 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13703, file: !195, line: 91, size: 16, elements: !13707)
!13707 = !{!13708, !13709}
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13706, file: !195, line: 96, baseType: !225, size: 8)
!13709 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13706, file: !195, line: 97, baseType: !164, size: 8, offset: 8)
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13703, file: !195, line: 100, baseType: !177, size: 16)
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13687, file: !195, line: 107, baseType: !108, size: 32, offset: 128)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13687, file: !195, line: 127, baseType: !102, size: 32, offset: 160)
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13687, file: !195, line: 131, baseType: !13714, size: 192, offset: 192)
!13714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !128, line: 244, size: 192, elements: !13715)
!13715 = !{!13716, !13717, !13723}
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13714, file: !128, line: 245, baseType: !2711, size: 64)
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13714, file: !128, line: 246, baseType: !13718, size: 32, offset: 64)
!13718 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !128, line: 242, baseType: !13719)
!13719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13720, size: 32)
!13720 = !DISubroutineType(types: !13721)
!13721 = !{null, !13722}
!13722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13714, size: 32)
!13723 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13714, file: !128, line: 249, baseType: !106, size: 64, offset: 128)
!13724 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13684, file: !195, line: 250, baseType: !13725, size: 288, offset: 384)
!13725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !244, line: 25, size: 288, elements: !13726)
!13726 = !{!13727, !13728, !13729, !13730, !13731, !13732, !13733, !13734, !13735}
!13727 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13725, file: !244, line: 26, baseType: !108, size: 32)
!13728 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13725, file: !244, line: 27, baseType: !108, size: 32, offset: 32)
!13729 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13725, file: !244, line: 28, baseType: !108, size: 32, offset: 64)
!13730 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13725, file: !244, line: 29, baseType: !108, size: 32, offset: 96)
!13731 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13725, file: !244, line: 30, baseType: !108, size: 32, offset: 128)
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13725, file: !244, line: 31, baseType: !108, size: 32, offset: 160)
!13733 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13725, file: !244, line: 32, baseType: !108, size: 32, offset: 192)
!13734 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13725, file: !244, line: 33, baseType: !108, size: 32, offset: 224)
!13735 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13725, file: !244, line: 34, baseType: !108, size: 32, offset: 256)
!13736 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13684, file: !195, line: 253, baseType: !102, size: 32, offset: 672)
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13684, file: !195, line: 256, baseType: !13461, size: 64, offset: 704)
!13738 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13684, file: !195, line: 294, baseType: !103, size: 32, offset: 768)
!13739 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13684, file: !195, line: 325, baseType: !13740, size: 32, offset: 800)
!13740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13741, size: 32)
!13741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !13742)
!13742 = !{!13743, !13749, !13750}
!13743 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13741, file: !124, line: 5074, baseType: !13744, size: 96)
!13744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !13745)
!13745 = !{!13746, !13747, !13748}
!13746 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13744, file: !264, line: 57, baseType: !267, size: 32)
!13747 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13744, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13744, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!13749 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13741, file: !124, line: 5075, baseType: !13461, size: 64, offset: 96)
!13750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13741, file: !124, line: 5076, baseType: !13467, size: 32, offset: 160)
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13684, file: !195, line: 343, baseType: !13752, size: 64, offset: 832)
!13752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !244, line: 60, size: 64, elements: !13753)
!13753 = !{!13754, !13755}
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13752, file: !244, line: 63, baseType: !108, size: 32)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13752, file: !244, line: 66, baseType: !108, size: 32, offset: 32)
!13756 = !DILocation(line: 0, scope: !13673)
!13757 = !DILocation(line: 150, column: 44, scope: !13673)
!13758 = !DILocation(line: 0, scope: !13598, inlinedAt: !13759)
!13759 = distinct !DILocation(line: 150, column: 25, scope: !13673)
!13760 = !DILocation(line: 55, column: 2, scope: !13607, inlinedAt: !13761)
!13761 = distinct !DILocation(line: 145, column: 10, scope: !13598, inlinedAt: !13759)
!13762 = !DILocation(line: 0, scope: !13607, inlinedAt: !13761)
!13763 = !DILocation(line: 148, column: 2, scope: !13615, inlinedAt: !13759)
!13764 = !DILocation(line: 148, column: 2, scope: !13616, inlinedAt: !13759)
!13765 = !DILocation(line: 148, column: 2, scope: !13619, inlinedAt: !13759)
!13766 = !DILocation(line: 160, column: 2, scope: !13598, inlinedAt: !13759)
!13767 = !DILocation(line: 153, column: 12, scope: !13682)
!13768 = !DILocation(line: 153, column: 22, scope: !13682)
!13769 = !DILocation(line: 153, column: 6, scope: !13673)
!13770 = !DILocation(line: 154, column: 66, scope: !13681)
!13771 = !DILocation(line: 154, column: 37, scope: !13681)
!13772 = !DILocation(line: 0, scope: !13681)
!13773 = !DILocation(line: 156, column: 22, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13681, file: !2726, line: 156, column: 7)
!13775 = !DILocation(line: 156, column: 7, scope: !13681)
!13776 = !DILocation(line: 165, column: 27, scope: !13673)
!13777 = !DILocation(line: 159, column: 59, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13774, file: !2726, line: 156, column: 31)
!13779 = !DILocalVariable(name: "thread", arg: 1, scope: !13780, file: !13781, line: 134, type: !13683)
!13780 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13781, file: !13781, line: 134, type: !13782, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13784)
!13781 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13782 = !DISubroutineType(types: !13783)
!13783 = !{null, !13683, !32, !102}
!13784 = !{!13779, !13785, !13786}
!13785 = !DILocalVariable(name: "value", arg: 2, scope: !13780, file: !13781, line: 135, type: !32)
!13786 = !DILocalVariable(name: "data", arg: 3, scope: !13780, file: !13781, line: 136, type: !102)
!13787 = !DILocation(line: 0, scope: !13780, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 159, column: 4, scope: !13778)
!13789 = !DILocalVariable(name: "thread", arg: 1, scope: !13790, file: !13322, line: 65, type: !13683)
!13790 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13322, file: !13322, line: 65, type: !13791, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13793)
!13791 = !DISubroutineType(types: !13792)
!13792 = !{null, !13683, !32}
!13793 = !{!13789, !13794}
!13794 = !DILocalVariable(name: "value", arg: 2, scope: !13790, file: !13322, line: 65, type: !32)
!13795 = !DILocation(line: 0, scope: !13790, inlinedAt: !13796)
!13796 = distinct !DILocation(line: 138, column: 2, scope: !13780, inlinedAt: !13788)
!13797 = !DILocation(line: 67, column: 15, scope: !13790, inlinedAt: !13796)
!13798 = !DILocation(line: 67, column: 33, scope: !13790, inlinedAt: !13796)
!13799 = !DILocation(line: 139, column: 15, scope: !13780, inlinedAt: !13788)
!13800 = !DILocation(line: 139, column: 25, scope: !13780, inlinedAt: !13788)
!13801 = !DILocation(line: 160, column: 4, scope: !13778)
!13802 = !DILocation(line: 161, column: 4, scope: !13778)
!13803 = !DILocation(line: 165, column: 3, scope: !13673)
!13804 = !DILocation(line: 165, column: 19, scope: !13673)
!13805 = !DILocation(line: 166, column: 20, scope: !13673)
!13806 = !DILocation(line: 166, column: 18, scope: !13673)
!13807 = !DILocation(line: 167, column: 8, scope: !13673)
!13808 = !DILocation(line: 167, column: 16, scope: !13673)
!13809 = !DILocation(line: 0, scope: !13651, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 171, column: 2, scope: !13673)
!13811 = !DILocation(line: 194, column: 2, scope: !13659, inlinedAt: !13810)
!13812 = !DILocation(line: 194, column: 2, scope: !13660, inlinedAt: !13810)
!13813 = !DILocation(line: 194, column: 2, scope: !13663, inlinedAt: !13810)
!13814 = !DILocation(line: 0, scope: !13665, inlinedAt: !13815)
!13815 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !13810)
!13816 = !DILocation(line: 95, column: 2, scope: !13665, inlinedAt: !13815)
!13817 = !DILocation(line: 172, column: 1, scope: !13673)
!13818 = distinct !DISubprogram(name: "k_mem_slab_runtime_stats_get", scope: !2726, file: !2726, line: 174, type: !13819, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2706, retainedNodes: !13828)
!13819 = !DISubroutineType(types: !13820)
!13820 = !{!103, !13457, !13821}
!13821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13822, size: 32)
!13822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !13823, line: 24, size: 96, elements: !13824)
!13823 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13824 = !{!13825, !13826, !13827}
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !13822, file: !13823, line: 25, baseType: !153, size: 32)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !13822, file: !13823, line: 26, baseType: !153, size: 32, offset: 32)
!13827 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !13822, file: !13823, line: 27, baseType: !153, size: 32, offset: 64)
!13828 = !{!13829, !13830, !13831}
!13829 = !DILocalVariable(name: "slab", arg: 1, scope: !13818, file: !2726, line: 174, type: !13457)
!13830 = !DILocalVariable(name: "stats", arg: 2, scope: !13818, file: !2726, line: 174, type: !13821)
!13831 = !DILocalVariable(name: "key", scope: !13818, file: !2726, line: 180, type: !13590)
!13832 = !DILocation(line: 0, scope: !13818)
!13833 = !DILocation(line: 176, column: 12, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13818, file: !2726, line: 176, column: 6)
!13835 = !DILocation(line: 176, column: 21, scope: !13834)
!13836 = !DILocation(line: 180, column: 44, scope: !13818)
!13837 = !DILocation(line: 0, scope: !13598, inlinedAt: !13838)
!13838 = distinct !DILocation(line: 180, column: 25, scope: !13818)
!13839 = !DILocation(line: 55, column: 2, scope: !13607, inlinedAt: !13840)
!13840 = distinct !DILocation(line: 145, column: 10, scope: !13598, inlinedAt: !13838)
!13841 = !DILocation(line: 0, scope: !13607, inlinedAt: !13840)
!13842 = !DILocation(line: 148, column: 2, scope: !13615, inlinedAt: !13838)
!13843 = !DILocation(line: 148, column: 2, scope: !13616, inlinedAt: !13838)
!13844 = !DILocation(line: 148, column: 2, scope: !13619, inlinedAt: !13838)
!13845 = !DILocation(line: 160, column: 2, scope: !13598, inlinedAt: !13838)
!13846 = !DILocation(line: 182, column: 33, scope: !13818)
!13847 = !DILocation(line: 182, column: 50, scope: !13818)
!13848 = !DILocation(line: 182, column: 42, scope: !13818)
!13849 = !DILocation(line: 182, column: 9, scope: !13818)
!13850 = !DILocation(line: 182, column: 25, scope: !13818)
!13851 = !DILocation(line: 183, column: 29, scope: !13818)
!13852 = !DILocation(line: 183, column: 48, scope: !13818)
!13853 = !DILocation(line: 183, column: 40, scope: !13818)
!13854 = !DILocation(line: 183, column: 66, scope: !13818)
!13855 = !DILocation(line: 183, column: 58, scope: !13818)
!13856 = !DILocation(line: 183, column: 9, scope: !13818)
!13857 = !DILocation(line: 183, column: 20, scope: !13818)
!13858 = !DILocation(line: 187, column: 9, scope: !13818)
!13859 = !DILocation(line: 187, column: 29, scope: !13818)
!13860 = !DILocation(line: 0, scope: !13651, inlinedAt: !13861)
!13861 = distinct !DILocation(line: 190, column: 2, scope: !13818)
!13862 = !DILocation(line: 194, column: 2, scope: !13659, inlinedAt: !13861)
!13863 = !DILocation(line: 194, column: 2, scope: !13660, inlinedAt: !13861)
!13864 = !DILocation(line: 194, column: 2, scope: !13663, inlinedAt: !13861)
!13865 = !DILocation(line: 0, scope: !13665, inlinedAt: !13866)
!13866 = distinct !DILocation(line: 215, column: 2, scope: !13651, inlinedAt: !13861)
!13867 = !DILocation(line: 95, column: 2, scope: !13665, inlinedAt: !13866)
!13868 = !DILocation(line: 193, column: 1, scope: !13818)
!13869 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2735, file: !2735, line: 45, type: !13870, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13878)
!13870 = !DISubroutineType(types: !13871)
!13871 = !{null, !13872, !102}
!13872 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !124, line: 103, baseType: !13873)
!13873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13874, size: 32)
!13874 = !DISubroutineType(types: !13875)
!13875 = !{null, !13876, !102}
!13876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13877, size: 32)
!13877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2740)
!13878 = !{!13879, !13880}
!13879 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13869, file: !2735, line: 45, type: !13872)
!13880 = !DILocalVariable(name: "user_data", arg: 2, scope: !13869, file: !2735, line: 45, type: !102)
!13881 = !DILocation(line: 0, scope: !13869)
!13882 = !DILocation(line: 71, column: 1, scope: !13869)
!13883 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2735, file: !2735, line: 73, type: !13870, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13884)
!13884 = !{!13885, !13886}
!13885 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13883, file: !2735, line: 73, type: !13872)
!13886 = !DILocalVariable(name: "user_data", arg: 2, scope: !13883, file: !2735, line: 73, type: !102)
!13887 = !DILocation(line: 0, scope: !13883)
!13888 = !DILocation(line: 95, column: 1, scope: !13883)
!13889 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2735, file: !2735, line: 97, type: !8946, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !2645)
!13890 = !DILocation(line: 1031, column: 3, scope: !13891, inlinedAt: !13894)
!13891 = distinct !DISubprogram(name: "__get_IPSR", scope: !7951, file: !7951, line: 1027, type: !8038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13892)
!13892 = !{!13893}
!13893 = !DILocalVariable(name: "result", scope: !13891, file: !7951, line: 1029, type: !108)
!13894 = distinct !DILocation(line: 48, column: 10, scope: !13895, inlinedAt: !13896)
!13895 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8945, file: !8945, line: 46, type: !8946, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !2645)
!13896 = distinct !DILocation(line: 99, column: 9, scope: !13889)
!13897 = !{i64 7020938}
!13898 = !DILocation(line: 0, scope: !13891, inlinedAt: !13894)
!13899 = !DILocation(line: 48, column: 9, scope: !13895, inlinedAt: !13896)
!13900 = !DILocation(line: 99, column: 2, scope: !13889)
!13901 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2735, file: !2735, line: 106, type: !327, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !2645)
!13902 = !DILocation(line: 108, column: 2, scope: !13901)
!13903 = !DILocation(line: 108, column: 17, scope: !13901)
!13904 = !DILocation(line: 108, column: 30, scope: !13901)
!13905 = !DILocation(line: 109, column: 1, scope: !13901)
!13906 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2735, file: !2735, line: 116, type: !327, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !2645)
!13907 = !DILocation(line: 118, column: 2, scope: !13906)
!13908 = !DILocation(line: 118, column: 17, scope: !13906)
!13909 = !DILocation(line: 118, column: 30, scope: !13906)
!13910 = !DILocation(line: 119, column: 1, scope: !13906)
!13911 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2735, file: !2735, line: 126, type: !8946, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !2645)
!13912 = !DILocation(line: 128, column: 10, scope: !13911)
!13913 = !DILocation(line: 128, column: 25, scope: !13911)
!13914 = !DILocation(line: 128, column: 38, scope: !13911)
!13915 = !DILocation(line: 128, column: 53, scope: !13911)
!13916 = !DILocation(line: 128, column: 2, scope: !13911)
!13917 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2735, file: !2735, line: 187, type: !13918, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13920)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!103, !2739, !330}
!13920 = !{!13921, !13922}
!13921 = !DILocalVariable(name: "thread", arg: 1, scope: !13917, file: !2735, line: 187, type: !2739)
!13922 = !DILocalVariable(name: "value", arg: 2, scope: !13917, file: !2735, line: 187, type: !330)
!13923 = !DILocation(line: 0, scope: !13917)
!13924 = !DILocation(line: 206, column: 2, scope: !13917)
!13925 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2735, file: !2735, line: 238, type: !13926, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13928)
!13926 = !DISubroutineType(types: !13927)
!13927 = !{!330, !2739}
!13928 = !{!13929}
!13929 = !DILocalVariable(name: "thread", arg: 1, scope: !13925, file: !2735, line: 238, type: !2739)
!13930 = !DILocation(line: 0, scope: !13925)
!13931 = !DILocation(line: 244, column: 2, scope: !13925)
!13932 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2735, file: !2735, line: 248, type: !13933, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13935)
!13933 = !DISubroutineType(types: !13934)
!13934 = !{!103, !2738, !157, !153}
!13935 = !{!13936, !13937, !13938}
!13936 = !DILocalVariable(name: "thread", arg: 1, scope: !13932, file: !2735, line: 248, type: !2738)
!13937 = !DILocalVariable(name: "buf", arg: 2, scope: !13932, file: !2735, line: 248, type: !157)
!13938 = !DILocalVariable(name: "size", arg: 3, scope: !13932, file: !2735, line: 248, type: !153)
!13939 = !DILocation(line: 0, scope: !13932)
!13940 = !DILocation(line: 257, column: 2, scope: !13932)
!13941 = !DILocation(line: 0, scope: !2734)
!13942 = !DILocation(line: 281, column: 11, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !2734, file: !2735, line: 281, column: 6)
!13944 = !DILocation(line: 281, column: 20, scope: !13943)
!13945 = !DILocation(line: 275, column: 45, scope: !2734)
!13946 = !DILocation(line: 285, column: 10, scope: !2734)
!13947 = !DILocation(line: 0, scope: !2852)
!13948 = !DILocation(line: 293, column: 39, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !2852, file: !2735, line: 293, column: 2)
!13950 = !DILocation(line: 293, column: 2, scope: !2852)
!13951 = !DILocation(line: 273, column: 14, scope: !2734)
!13952 = !DILocation(line: 309, column: 2, scope: !2734)
!13953 = !DILocation(line: 309, column: 11, scope: !2734)
!13954 = !DILocation(line: 311, column: 2, scope: !2734)
!13955 = !DILocation(line: 293, column: 26, scope: !13949)
!13956 = !DILocation(line: 294, column: 9, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13949, file: !2735, line: 293, column: 54)
!13958 = !DILocation(line: 295, column: 21, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13957, file: !2735, line: 295, column: 7)
!13960 = !DILocation(line: 295, column: 28, scope: !13959)
!13961 = !DILocation(line: 295, column: 7, scope: !13957)
!13962 = !DILocation(line: 299, column: 25, scope: !13957)
!13963 = !DILocation(line: 299, column: 41, scope: !13957)
!13964 = !DILocation(line: 300, column: 7, scope: !13957)
!13965 = !DILocation(line: 300, column: 26, scope: !13957)
!13966 = !DILocation(line: 299, column: 10, scope: !13957)
!13967 = !DILocation(line: 299, column: 7, scope: !13957)
!13968 = !DILocation(line: 302, column: 16, scope: !13957)
!13969 = !DILocation(line: 304, column: 20, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13957, file: !2735, line: 304, column: 7)
!13971 = !DILocation(line: 304, column: 7, scope: !13957)
!13972 = !DILocation(line: 305, column: 26, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13970, file: !2735, line: 304, column: 26)
!13974 = !DILocation(line: 305, column: 42, scope: !13973)
!13975 = !DILocation(line: 305, column: 11, scope: !13973)
!13976 = !DILocation(line: 305, column: 8, scope: !13973)
!13977 = !DILocation(line: 306, column: 3, scope: !13973)
!13978 = !DILocation(line: 293, column: 50, scope: !13949)
!13979 = !DILocation(line: 312, column: 1, scope: !2734)
!13980 = distinct !DISubprogram(name: "copy_bytes", scope: !2735, file: !2735, line: 261, type: !13981, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13983)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{!153, !157, !153, !330, !153}
!13983 = !{!13984, !13985, !13986, !13987, !13988}
!13984 = !DILocalVariable(name: "dest", arg: 1, scope: !13980, file: !2735, line: 261, type: !157)
!13985 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13980, file: !2735, line: 261, type: !153)
!13986 = !DILocalVariable(name: "src", arg: 3, scope: !13980, file: !2735, line: 261, type: !330)
!13987 = !DILocalVariable(name: "src_size", arg: 4, scope: !13980, file: !2735, line: 261, type: !153)
!13988 = !DILocalVariable(name: "bytes_to_copy", scope: !13980, file: !2735, line: 263, type: !153)
!13989 = !DILocation(line: 0, scope: !13980)
!13990 = !DILocation(line: 265, column: 18, scope: !13980)
!13991 = !DILocation(line: 266, column: 2, scope: !13980)
!13992 = !DILocation(line: 268, column: 2, scope: !13980)
!13993 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2735, file: !2735, line: 383, type: !13994, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{null, !2739}
!13996 = !{!13997}
!13997 = !DILocalVariable(name: "thread", arg: 1, scope: !13993, file: !2735, line: 383, type: !2739)
!13998 = !DILocation(line: 0, scope: !13993)
!13999 = !DILocation(line: 387, column: 2, scope: !13993)
!14000 = !DILocation(line: 388, column: 1, scope: !13993)
!14001 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2735, file: !2735, line: 528, type: !14002, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14009)
!14002 = !DISubroutineType(types: !14003)
!14003 = !{!157, !2739, !14004, !153, !314, !102, !102, !102, !103, !108, !330}
!14004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14005, size: 32)
!14005 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !307, line: 44, baseType: !14006)
!14006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !309, line: 47, size: 8, elements: !14007)
!14007 = !{!14008}
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14006, file: !309, line: 48, baseType: !158, size: 8)
!14009 = !{!14010, !14011, !14012, !14013, !14014, !14015, !14016, !14017, !14018, !14019, !14020}
!14010 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14001, file: !2735, line: 528, type: !2739)
!14011 = !DILocalVariable(name: "stack", arg: 2, scope: !14001, file: !2735, line: 529, type: !14004)
!14012 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14001, file: !2735, line: 529, type: !153)
!14013 = !DILocalVariable(name: "entry", arg: 4, scope: !14001, file: !2735, line: 530, type: !314)
!14014 = !DILocalVariable(name: "p1", arg: 5, scope: !14001, file: !2735, line: 531, type: !102)
!14015 = !DILocalVariable(name: "p2", arg: 6, scope: !14001, file: !2735, line: 531, type: !102)
!14016 = !DILocalVariable(name: "p3", arg: 7, scope: !14001, file: !2735, line: 531, type: !102)
!14017 = !DILocalVariable(name: "prio", arg: 8, scope: !14001, file: !2735, line: 532, type: !103)
!14018 = !DILocalVariable(name: "options", arg: 9, scope: !14001, file: !2735, line: 532, type: !108)
!14019 = !DILocalVariable(name: "name", arg: 10, scope: !14001, file: !2735, line: 532, type: !330)
!14020 = !DILocalVariable(name: "stack_ptr", scope: !14001, file: !2735, line: 534, type: !157)
!14021 = !DILocation(line: 0, scope: !14001)
!14022 = !DILocation(line: 536, column: 2, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !2735, line: 536, column: 2)
!14024 = distinct !DILexicalBlock(scope: !14025, file: !2735, line: 536, column: 2)
!14025 = distinct !DILexicalBlock(scope: !14001, file: !2735, line: 536, column: 2)
!14026 = !DILocation(line: 536, column: 2, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14023, file: !2735, line: 536, column: 2)
!14028 = !DILocation(line: 550, column: 28, scope: !14001)
!14029 = !DILocation(line: 550, column: 2, scope: !14001)
!14030 = !DILocation(line: 553, column: 34, scope: !14001)
!14031 = !DILocation(line: 553, column: 2, scope: !14001)
!14032 = !DILocation(line: 554, column: 14, scope: !14001)
!14033 = !DILocation(line: 564, column: 2, scope: !14001)
!14034 = !DILocation(line: 567, column: 14, scope: !14001)
!14035 = !DILocation(line: 567, column: 24, scope: !14001)
!14036 = !DILocation(line: 612, column: 7, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14001, file: !2735, line: 612, column: 6)
!14038 = !DILocation(line: 612, column: 6, scope: !14001)
!14039 = !DILocation(line: 627, column: 40, scope: !14001)
!14040 = !DILocation(line: 637, column: 2, scope: !14001)
!14041 = !DILocation(line: 613, column: 15, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14037, file: !2735, line: 612, column: 17)
!14043 = !DILocation(line: 613, column: 29, scope: !14042)
!14044 = !DILocation(line: 638, column: 1, scope: !14001)
!14045 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13302, file: !13302, line: 78, type: !14046, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14048)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{!119, !102}
!14048 = !{!14049}
!14049 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14045, file: !13302, line: 78, type: !102)
!14050 = !DILocation(line: 0, scope: !14045)
!14051 = !DILocation(line: 80, column: 21, scope: !14045)
!14052 = !DILocation(line: 80, column: 2, scope: !14045)
!14053 = distinct !DISubprogram(name: "z_waitq_init", scope: !13556, file: !13556, line: 47, type: !14054, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14056)
!14054 = !DISubroutineType(types: !14055)
!14055 = !{null, !2770}
!14056 = !{!14057}
!14057 = !DILocalVariable(name: "w", arg: 1, scope: !14053, file: !13556, line: 47, type: !2770)
!14058 = !DILocation(line: 0, scope: !14053)
!14059 = !DILocation(line: 49, column: 21, scope: !14053)
!14060 = !DILocation(line: 49, column: 2, scope: !14053)
!14061 = !DILocation(line: 50, column: 1, scope: !14053)
!14062 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2735, file: !2735, line: 791, type: !14063, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14066)
!14063 = !DISubroutineType(types: !14064)
!14064 = !{null, !14065, !103, !108, !32}
!14065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 32)
!14066 = !{!14067, !14068, !14069, !14070}
!14067 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14062, file: !2735, line: 791, type: !14065)
!14068 = !DILocalVariable(name: "priority", arg: 2, scope: !14062, file: !2735, line: 791, type: !103)
!14069 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14062, file: !2735, line: 792, type: !108)
!14070 = !DILocalVariable(name: "options", arg: 4, scope: !14062, file: !2735, line: 792, type: !32)
!14071 = !DILocation(line: 0, scope: !14062)
!14072 = !DILocation(line: 795, column: 15, scope: !14062)
!14073 = !DILocation(line: 795, column: 25, scope: !14062)
!14074 = !DILocation(line: 796, column: 30, scope: !14062)
!14075 = !DILocation(line: 796, column: 15, scope: !14062)
!14076 = !DILocation(line: 796, column: 28, scope: !14062)
!14077 = !DILocation(line: 797, column: 30, scope: !14062)
!14078 = !DILocation(line: 797, column: 15, scope: !14062)
!14079 = !DILocation(line: 797, column: 28, scope: !14062)
!14080 = !DILocation(line: 799, column: 22, scope: !14062)
!14081 = !DILocation(line: 799, column: 15, scope: !14062)
!14082 = !DILocation(line: 799, column: 20, scope: !14062)
!14083 = !DILocation(line: 801, column: 15, scope: !14062)
!14084 = !DILocation(line: 801, column: 28, scope: !14062)
!14085 = !DILocation(line: 814, column: 2, scope: !14062)
!14086 = !DILocation(line: 815, column: 1, scope: !14062)
!14087 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2735, file: !2735, line: 449, type: !14088, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14090)
!14088 = !DISubroutineType(types: !14089)
!14089 = !{!157, !2739, !14004, !153}
!14090 = !{!14091, !14092, !14093, !14094, !14095, !14096, !14097, !14098}
!14091 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14087, file: !2735, line: 449, type: !2739)
!14092 = !DILocalVariable(name: "stack", arg: 2, scope: !14087, file: !2735, line: 450, type: !14004)
!14093 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14087, file: !2735, line: 450, type: !153)
!14094 = !DILocalVariable(name: "stack_obj_size", scope: !14087, file: !2735, line: 452, type: !153)
!14095 = !DILocalVariable(name: "stack_buf_size", scope: !14087, file: !2735, line: 452, type: !153)
!14096 = !DILocalVariable(name: "stack_ptr", scope: !14087, file: !2735, line: 453, type: !157)
!14097 = !DILocalVariable(name: "stack_buf_start", scope: !14087, file: !2735, line: 453, type: !157)
!14098 = !DILocalVariable(name: "delta", scope: !14087, file: !2735, line: 454, type: !153)
!14099 = !DILocation(line: 0, scope: !14087)
!14100 = !DILocation(line: 465, column: 20, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14087, file: !2735, line: 463, column: 2)
!14102 = !DILocation(line: 473, column: 28, scope: !14087)
!14103 = !DILocation(line: 520, column: 2, scope: !14087)
!14104 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14105, file: !14105, line: 40, type: !14106, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14108)
!14105 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14106 = !DISubroutineType(types: !14107)
!14107 = !{null, !14065}
!14108 = !{!14109}
!14109 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14104, file: !14105, line: 40, type: !14065)
!14110 = !DILocation(line: 0, scope: !14104)
!14111 = !DILocation(line: 42, column: 31, scope: !14104)
!14112 = !DILocation(line: 42, column: 2, scope: !14104)
!14113 = !DILocation(line: 43, column: 1, scope: !14104)
!14114 = distinct !DISubprogram(name: "z_init_timeout", scope: !14105, file: !14105, line: 25, type: !2796, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14115)
!14115 = !{!14116}
!14116 = !DILocalVariable(name: "to", arg: 1, scope: !14114, file: !14105, line: 25, type: !2798)
!14117 = !DILocation(line: 0, scope: !14114)
!14118 = !DILocation(line: 27, column: 22, scope: !14114)
!14119 = !DILocation(line: 27, column: 2, scope: !14114)
!14120 = !DILocation(line: 28, column: 1, scope: !14114)
!14121 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !14122, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14124)
!14122 = !DISubroutineType(types: !14123)
!14123 = !{null, !2838}
!14124 = !{!14125}
!14125 = !DILocalVariable(name: "node", arg: 1, scope: !14121, file: !133, line: 211, type: !2838)
!14126 = !DILocation(line: 0, scope: !14121)
!14127 = !DILocation(line: 213, column: 8, scope: !14121)
!14128 = !DILocation(line: 213, column: 13, scope: !14121)
!14129 = !DILocation(line: 214, column: 8, scope: !14121)
!14130 = !DILocation(line: 214, column: 13, scope: !14121)
!14131 = !DILocation(line: 215, column: 1, scope: !14121)
!14132 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !14133, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14136)
!14133 = !DISubroutineType(types: !14134)
!14134 = !{null, !14135}
!14135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 32)
!14136 = !{!14137}
!14137 = !DILocalVariable(name: "list", arg: 1, scope: !14132, file: !133, line: 197, type: !14135)
!14138 = !DILocation(line: 0, scope: !14132)
!14139 = !DILocation(line: 199, column: 8, scope: !14132)
!14140 = !DILocation(line: 199, column: 13, scope: !14132)
!14141 = !DILocation(line: 200, column: 8, scope: !14132)
!14142 = !DILocation(line: 200, column: 13, scope: !14132)
!14143 = !DILocation(line: 201, column: 1, scope: !14132)
!14144 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2735, file: !2735, line: 641, type: !14145, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14151)
!14145 = !DISubroutineType(types: !14146)
!14146 = !{!2738, !2739, !14004, !153, !314, !102, !102, !102, !103, !108, !14147}
!14147 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14148)
!14148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14149)
!14149 = !{!14150}
!14150 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14148, file: !105, line: 66, baseType: !104, size: 64)
!14151 = !{!14152, !14153, !14154, !14155, !14156, !14157, !14158, !14159, !14160, !14161}
!14152 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14144, file: !2735, line: 641, type: !2739)
!14153 = !DILocalVariable(name: "stack", arg: 2, scope: !14144, file: !2735, line: 642, type: !14004)
!14154 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14144, file: !2735, line: 643, type: !153)
!14155 = !DILocalVariable(name: "entry", arg: 4, scope: !14144, file: !2735, line: 643, type: !314)
!14156 = !DILocalVariable(name: "p1", arg: 5, scope: !14144, file: !2735, line: 644, type: !102)
!14157 = !DILocalVariable(name: "p2", arg: 6, scope: !14144, file: !2735, line: 644, type: !102)
!14158 = !DILocalVariable(name: "p3", arg: 7, scope: !14144, file: !2735, line: 644, type: !102)
!14159 = !DILocalVariable(name: "prio", arg: 8, scope: !14144, file: !2735, line: 645, type: !103)
!14160 = !DILocalVariable(name: "options", arg: 9, scope: !14144, file: !2735, line: 645, type: !108)
!14161 = !DILocalVariable(name: "delay", arg: 10, scope: !14144, file: !2735, line: 645, type: !14147)
!14162 = !DILocation(line: 0, scope: !14144)
!14163 = !DILocation(line: 1031, column: 3, scope: !13891, inlinedAt: !14164)
!14164 = distinct !DILocation(line: 48, column: 10, scope: !13895, inlinedAt: !14165)
!14165 = distinct !DILocation(line: 647, column: 2, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !2735, line: 647, column: 2)
!14167 = distinct !DILexicalBlock(scope: !14144, file: !2735, line: 647, column: 2)
!14168 = !DILocation(line: 0, scope: !13891, inlinedAt: !14164)
!14169 = !DILocation(line: 48, column: 9, scope: !13895, inlinedAt: !14165)
!14170 = !DILocation(line: 647, column: 2, scope: !14167)
!14171 = !DILocation(line: 647, column: 2, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14166, file: !2735, line: 647, column: 2)
!14173 = !DILocation(line: 649, column: 2, scope: !14144)
!14174 = !DILocation(line: 652, column: 7, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14144, file: !2735, line: 652, column: 6)
!14176 = !DILocation(line: 652, column: 6, scope: !14144)
!14177 = !DILocation(line: 653, column: 3, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14175, file: !2735, line: 652, column: 39)
!14179 = !DILocation(line: 654, column: 2, scope: !14178)
!14180 = !DILocation(line: 656, column: 2, scope: !14144)
!14181 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2735, file: !2735, line: 401, type: !14182, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14184)
!14182 = !DISubroutineType(types: !14183)
!14183 = !{null, !2739, !14147}
!14184 = !{!14185, !14186}
!14185 = !DILocalVariable(name: "thread", arg: 1, scope: !14181, file: !2735, line: 401, type: !2739)
!14186 = !DILocalVariable(name: "delay", arg: 2, scope: !14181, file: !2735, line: 401, type: !14147)
!14187 = !DILocation(line: 0, scope: !14181)
!14188 = !DILocation(line: 404, column: 6, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14181, file: !2735, line: 404, column: 6)
!14190 = !DILocation(line: 404, column: 6, scope: !14181)
!14191 = !DILocation(line: 405, column: 3, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14189, file: !2735, line: 404, column: 38)
!14193 = !DILocation(line: 406, column: 2, scope: !14192)
!14194 = !DILocation(line: 407, column: 3, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14189, file: !2735, line: 406, column: 9)
!14196 = !DILocation(line: 413, column: 1, scope: !14181)
!14197 = distinct !DISubprogram(name: "k_thread_start", scope: !4197, file: !4197, line: 205, type: !14198, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14200)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{null, !2738}
!14200 = !{!14201}
!14201 = !DILocalVariable(name: "thread", arg: 1, scope: !14197, file: !4197, line: 205, type: !2738)
!14202 = !DILocation(line: 0, scope: !14197)
!14203 = !DILocation(line: 214, column: 2, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14197, file: !4197, line: 214, column: 2)
!14205 = !{i64 2151070702}
!14206 = !DILocation(line: 215, column: 2, scope: !14197)
!14207 = !DILocation(line: 216, column: 1, scope: !14197)
!14208 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14105, file: !14105, line: 47, type: !14182, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14209)
!14209 = !{!14210, !14211}
!14210 = !DILocalVariable(name: "thread", arg: 1, scope: !14208, file: !14105, line: 47, type: !2739)
!14211 = !DILocalVariable(name: "ticks", arg: 2, scope: !14208, file: !14105, line: 47, type: !14147)
!14212 = !DILocation(line: 0, scope: !14208)
!14213 = !DILocation(line: 49, column: 30, scope: !14208)
!14214 = !DILocation(line: 49, column: 2, scope: !14208)
!14215 = !DILocation(line: 50, column: 1, scope: !14208)
!14216 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2735, file: !2735, line: 748, type: !327, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14217)
!14217 = !{!14218, !14235}
!14218 = !DILocalVariable(name: "thread_data", scope: !14219, file: !2735, line: 750, type: !14220)
!14219 = distinct !DILexicalBlock(scope: !14216, file: !2735, line: 750, column: 2)
!14220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14221, size: 32)
!14221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !124, line: 620, size: 384, elements: !14222)
!14222 = !{!14223, !14224, !14225, !14226, !14227, !14228, !14229, !14230, !14231, !14232, !14233, !14234}
!14223 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14221, file: !124, line: 621, baseType: !2739, size: 32)
!14224 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14221, file: !124, line: 622, baseType: !14004, size: 32, offset: 32)
!14225 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14221, file: !124, line: 623, baseType: !32, size: 32, offset: 64)
!14226 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14221, file: !124, line: 624, baseType: !314, size: 32, offset: 96)
!14227 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14221, file: !124, line: 625, baseType: !102, size: 32, offset: 128)
!14228 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14221, file: !124, line: 626, baseType: !102, size: 32, offset: 160)
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14221, file: !124, line: 627, baseType: !102, size: 32, offset: 192)
!14230 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14221, file: !124, line: 628, baseType: !103, size: 32, offset: 224)
!14231 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14221, file: !124, line: 629, baseType: !108, size: 32, offset: 256)
!14232 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14221, file: !124, line: 630, baseType: !324, size: 32, offset: 288)
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14221, file: !124, line: 631, baseType: !326, size: 32, offset: 320)
!14234 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14221, file: !124, line: 632, baseType: !330, size: 32, offset: 352)
!14235 = !DILocalVariable(name: "thread_data", scope: !14236, file: !2735, line: 781, type: !14220)
!14236 = distinct !DILexicalBlock(scope: !14216, file: !2735, line: 781, column: 2)
!14237 = !DILocation(line: 0, scope: !14219)
!14238 = !DILocation(line: 750, column: 2, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !2735, line: 750, column: 2)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2735, line: 750, column: 2)
!14241 = distinct !DILexicalBlock(scope: !14219, file: !2735, line: 750, column: 2)
!14242 = !DILocation(line: 750, column: 2, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !2735, line: 750, column: 2)
!14244 = distinct !DILexicalBlock(scope: !14239, file: !2735, line: 750, column: 2)
!14245 = !DILocation(line: 750, column: 2, scope: !14240)
!14246 = !DILocation(line: 750, column: 2, scope: !14219)
!14247 = !DILocation(line: 780, column: 2, scope: !14216)
!14248 = !DILocation(line: 0, scope: !14236)
!14249 = !DILocation(line: 781, column: 2, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14251, file: !2735, line: 781, column: 2)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !2735, line: 781, column: 2)
!14252 = distinct !DILexicalBlock(scope: !14236, file: !2735, line: 781, column: 2)
!14253 = !DILocation(line: 752, column: 17, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14241, file: !2735, line: 750, column: 38)
!14255 = !DILocation(line: 753, column: 17, scope: !14254)
!14256 = !DILocation(line: 754, column: 17, scope: !14254)
!14257 = !DILocation(line: 755, column: 17, scope: !14254)
!14258 = !DILocation(line: 756, column: 17, scope: !14254)
!14259 = !DILocation(line: 757, column: 17, scope: !14254)
!14260 = !DILocation(line: 758, column: 17, scope: !14254)
!14261 = !DILocation(line: 759, column: 17, scope: !14254)
!14262 = !DILocation(line: 760, column: 17, scope: !14254)
!14263 = !DILocation(line: 751, column: 3, scope: !14254)
!14264 = !DILocation(line: 763, column: 16, scope: !14254)
!14265 = !DILocation(line: 763, column: 29, scope: !14254)
!14266 = !DILocation(line: 763, column: 39, scope: !14254)
!14267 = !DILocation(line: 750, column: 2, scope: !14241)
!14268 = !DILocation(line: 750, column: 2, scope: !14244)
!14269 = distinct !{!14269, !14246, !14270}
!14270 = !DILocation(line: 764, column: 2, scope: !14219)
!14271 = !DILocation(line: 781, column: 2, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14273, file: !2735, line: 781, column: 2)
!14273 = distinct !DILexicalBlock(scope: !14250, file: !2735, line: 781, column: 2)
!14274 = !DILocation(line: 781, column: 2, scope: !14251)
!14275 = !DILocation(line: 781, column: 2, scope: !14236)
!14276 = !DILocation(line: 787, column: 2, scope: !14216)
!14277 = !DILocation(line: 788, column: 1, scope: !14216)
!14278 = !DILocation(line: 782, column: 20, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !2735, line: 782, column: 7)
!14280 = distinct !DILexicalBlock(scope: !14252, file: !2735, line: 781, column: 38)
!14281 = !DILocation(line: 782, column: 31, scope: !14279)
!14282 = !DILocation(line: 782, column: 7, scope: !14280)
!14283 = !DILocation(line: 783, column: 37, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14279, file: !2735, line: 782, column: 51)
!14285 = !DILocation(line: 784, column: 10, scope: !14284)
!14286 = !DILocation(line: 783, column: 4, scope: !14284)
!14287 = !DILocation(line: 785, column: 3, scope: !14284)
!14288 = !DILocation(line: 781, column: 2, scope: !14252)
!14289 = !DILocation(line: 781, column: 2, scope: !14273)
!14290 = distinct !{!14290, !14275, !14291}
!14291 = !DILocation(line: 786, column: 2, scope: !14236)
!14292 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !4155, file: !4155, line: 403, type: !4156, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14293)
!14293 = !{!14294}
!14294 = !DILocalVariable(name: "t", arg: 1, scope: !14292, file: !4155, line: 403, type: !109)
!14295 = !DILocation(line: 0, scope: !14292)
!14296 = !DILocalVariable(name: "t", arg: 1, scope: !14297, file: !4155, line: 102, type: !109)
!14297 = distinct !DISubprogram(name: "z_tmcvt", scope: !4155, file: !4155, line: 102, type: !4163, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14298)
!14298 = !{!14296, !14299, !14300, !14301, !14302, !14303, !14304, !14305, !14306, !14307, !14308}
!14299 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14297, file: !4155, line: 102, type: !108)
!14300 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14297, file: !4155, line: 103, type: !108)
!14301 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14297, file: !4155, line: 103, type: !119)
!14302 = !DILocalVariable(name: "result32", arg: 5, scope: !14297, file: !4155, line: 104, type: !119)
!14303 = !DILocalVariable(name: "round_up", arg: 6, scope: !14297, file: !4155, line: 104, type: !119)
!14304 = !DILocalVariable(name: "round_off", arg: 7, scope: !14297, file: !4155, line: 105, type: !119)
!14305 = !DILocalVariable(name: "mul_ratio", scope: !14297, file: !4155, line: 107, type: !119)
!14306 = !DILocalVariable(name: "div_ratio", scope: !14297, file: !4155, line: 109, type: !119)
!14307 = !DILocalVariable(name: "off", scope: !14297, file: !4155, line: 116, type: !109)
!14308 = !DILocalVariable(name: "rdivisor", scope: !14309, file: !4155, line: 119, type: !108)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !4155, line: 118, column: 18)
!14310 = distinct !DILexicalBlock(scope: !14297, file: !4155, line: 118, column: 6)
!14311 = !DILocation(line: 0, scope: !14297, inlinedAt: !14312)
!14312 = distinct !DILocation(line: 406, column: 9, scope: !14292)
!14313 = !DILocation(line: 145, column: 13, scope: !14314, inlinedAt: !14312)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !4155, line: 144, column: 10)
!14315 = distinct !DILexicalBlock(scope: !14316, file: !4155, line: 142, column: 7)
!14316 = distinct !DILexicalBlock(scope: !14317, file: !4155, line: 141, column: 24)
!14317 = distinct !DILexicalBlock(scope: !14318, file: !4155, line: 141, column: 13)
!14318 = distinct !DILexicalBlock(scope: !14297, file: !4155, line: 134, column: 6)
!14319 = !DILocation(line: 406, column: 2, scope: !14292)
!14320 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2735, file: !2735, line: 817, type: !5304, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14321)
!14321 = !{!14322, !14323, !14324, !14325}
!14322 = !DILocalVariable(name: "entry", arg: 1, scope: !14320, file: !2735, line: 817, type: !314)
!14323 = !DILocalVariable(name: "p1", arg: 2, scope: !14320, file: !2735, line: 818, type: !102)
!14324 = !DILocalVariable(name: "p2", arg: 3, scope: !14320, file: !2735, line: 818, type: !102)
!14325 = !DILocalVariable(name: "p3", arg: 4, scope: !14320, file: !2735, line: 818, type: !102)
!14326 = !DILocation(line: 0, scope: !14320)
!14327 = !DILocation(line: 822, column: 2, scope: !14320)
!14328 = !DILocation(line: 822, column: 17, scope: !14320)
!14329 = !DILocation(line: 822, column: 30, scope: !14320)
!14330 = !DILocation(line: 823, column: 2, scope: !14320)
!14331 = !DILocation(line: 845, column: 2, scope: !14320)
!14332 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2735, file: !2735, line: 853, type: !14333, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14336)
!14333 = !DISubroutineType(types: !14334)
!14334 = !{!119, !14335}
!14335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 32)
!14336 = !{!14337, !14338}
!14337 = !DILocalVariable(name: "l", arg: 1, scope: !14332, file: !2735, line: 853, type: !14335)
!14338 = !DILocalVariable(name: "thread_cpu", scope: !14332, file: !2735, line: 855, type: !22)
!14339 = !DILocation(line: 0, scope: !14332)
!14340 = !DILocation(line: 855, column: 28, scope: !14332)
!14341 = !DILocation(line: 857, column: 17, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14332, file: !2735, line: 857, column: 6)
!14343 = !DILocation(line: 857, column: 6, scope: !14332)
!14344 = !DILocation(line: 858, column: 19, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14346, file: !2735, line: 858, column: 7)
!14346 = distinct !DILexicalBlock(scope: !14342, file: !2735, line: 857, column: 24)
!14347 = !DILocation(line: 858, column: 42, scope: !14345)
!14348 = !DILocation(line: 858, column: 28, scope: !14345)
!14349 = !DILocation(line: 858, column: 25, scope: !14345)
!14350 = !DILocation(line: 858, column: 7, scope: !14346)
!14351 = !DILocation(line: 862, column: 2, scope: !14332)
!14352 = !DILocation(line: 863, column: 1, scope: !14332)
!14353 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2735, file: !2735, line: 865, type: !14333, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14354)
!14354 = !{!14355}
!14355 = !DILocalVariable(name: "l", arg: 1, scope: !14353, file: !2735, line: 865, type: !14335)
!14356 = !DILocation(line: 0, scope: !14353)
!14357 = !DILocation(line: 867, column: 9, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14353, file: !2735, line: 867, column: 6)
!14359 = !DILocation(line: 867, column: 38, scope: !14358)
!14360 = !DILocation(line: 867, column: 24, scope: !14358)
!14361 = !DILocation(line: 867, column: 54, scope: !14358)
!14362 = !DILocation(line: 867, column: 43, scope: !14358)
!14363 = !DILocation(line: 867, column: 41, scope: !14358)
!14364 = !DILocation(line: 867, column: 20, scope: !14358)
!14365 = !DILocation(line: 867, column: 6, scope: !14353)
!14366 = !DILocation(line: 870, column: 16, scope: !14353)
!14367 = !DILocation(line: 871, column: 2, scope: !14353)
!14368 = !DILocation(line: 872, column: 1, scope: !14353)
!14369 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2735, file: !2735, line: 874, type: !14370, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14372)
!14370 = !DISubroutineType(types: !14371)
!14371 = !{null, !14335}
!14372 = !{!14373}
!14373 = !DILocalVariable(name: "l", arg: 1, scope: !14369, file: !2735, line: 874, type: !14335)
!14374 = !DILocation(line: 0, scope: !14369)
!14375 = !DILocation(line: 876, column: 32, scope: !14369)
!14376 = !DILocation(line: 876, column: 18, scope: !14369)
!14377 = !DILocation(line: 876, column: 48, scope: !14369)
!14378 = !DILocation(line: 876, column: 37, scope: !14369)
!14379 = !DILocation(line: 876, column: 35, scope: !14369)
!14380 = !DILocation(line: 876, column: 5, scope: !14369)
!14381 = !DILocation(line: 876, column: 16, scope: !14369)
!14382 = !DILocation(line: 877, column: 1, scope: !14369)
!14383 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2735, file: !2735, line: 888, type: !14384, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14386)
!14384 = !DISubroutineType(types: !14385)
!14385 = !{!103, !2739}
!14386 = !{!14387}
!14387 = !DILocalVariable(name: "thread", arg: 1, scope: !14383, file: !2735, line: 888, type: !2739)
!14388 = !DILocation(line: 0, scope: !14383)
!14389 = !DILocation(line: 893, column: 2, scope: !14383)
!14390 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2735, file: !2735, line: 897, type: !14391, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14393)
!14391 = !DISubroutineType(types: !14392)
!14392 = !{!103, !2739, !32}
!14393 = !{!14394, !14395}
!14394 = !DILocalVariable(name: "thread", arg: 1, scope: !14390, file: !2735, line: 897, type: !2739)
!14395 = !DILocalVariable(name: "options", arg: 2, scope: !14390, file: !2735, line: 897, type: !32)
!14396 = !DILocation(line: 0, scope: !14390)
!14397 = !DILocation(line: 902, column: 2, scope: !14390)
!14398 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2735, file: !2735, line: 1072, type: !14399, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14404)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{!103, !2738, !14401}
!14401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14402, size: 32)
!14402 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !195, line: 234, baseType: !14403)
!14403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !195, line: 192, elements: !2645)
!14404 = !{!14405, !14406}
!14405 = !DILocalVariable(name: "thread", arg: 1, scope: !14398, file: !2735, line: 1072, type: !2738)
!14406 = !DILocalVariable(name: "stats", arg: 2, scope: !14398, file: !2735, line: 1073, type: !14401)
!14407 = !DILocation(line: 0, scope: !14398)
!14408 = !DILocation(line: 1075, column: 14, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14398, file: !2735, line: 1075, column: 6)
!14410 = !DILocation(line: 1075, column: 23, scope: !14409)
!14411 = !DILocation(line: 1086, column: 1, scope: !14398)
!14412 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2735, file: !2735, line: 1088, type: !14413, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !14415)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!103, !14401}
!14415 = !{!14416}
!14416 = !DILocalVariable(name: "stats", arg: 1, scope: !14412, file: !2735, line: 1088, type: !14401)
!14417 = !DILocation(line: 0, scope: !14412)
!14418 = !DILocation(line: 1094, column: 12, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14412, file: !2735, line: 1094, column: 6)
!14420 = !DILocation(line: 1120, column: 1, scope: !14412)
!14421 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14422, file: !14422, line: 20, type: !327, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3777, retainedNodes: !2645)
!14422 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14423 = !DILocation(line: 30, column: 2, scope: !14421)
!14424 = !DILocation(line: 31, column: 1, scope: !14421)
!14425 = distinct !DISubprogram(name: "idle", scope: !14422, file: !14422, line: 33, type: !316, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3777, retainedNodes: !14426)
!14426 = !{!14427, !14428, !14429}
!14427 = !DILocalVariable(name: "unused1", arg: 1, scope: !14425, file: !14422, line: 33, type: !102)
!14428 = !DILocalVariable(name: "unused2", arg: 2, scope: !14425, file: !14422, line: 33, type: !102)
!14429 = !DILocalVariable(name: "unused3", arg: 3, scope: !14425, file: !14422, line: 33, type: !102)
!14430 = !DILocation(line: 0, scope: !14425)
!14431 = !DILocation(line: 39, column: 2, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14433, file: !14422, line: 39, column: 2)
!14433 = distinct !DILexicalBlock(scope: !14425, file: !14422, line: 39, column: 2)
!14434 = !DILocation(line: 39, column: 2, scope: !14433)
!14435 = !DILocation(line: 39, column: 2, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14432, file: !14422, line: 39, column: 2)
!14437 = !DILocation(line: 55, column: 2, scope: !14438, inlinedAt: !14442)
!14438 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3777, retainedNodes: !14439)
!14439 = !{!14440, !14441}
!14440 = !DILocalVariable(name: "key", scope: !14438, file: !8072, line: 44, type: !32)
!14441 = !DILocalVariable(name: "tmp", scope: !14438, file: !8072, line: 53, type: !32)
!14442 = distinct !DILocation(line: 62, column: 10, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14425, file: !14422, line: 41, column: 15)
!14444 = !{i64 2844680}
!14445 = !DILocation(line: 0, scope: !14438, inlinedAt: !14442)
!14446 = !DILocation(line: 86, column: 3, scope: !14443)
!14447 = !DILocation(line: 41, column: 2, scope: !14425)
!14448 = distinct !{!14448, !14447, !14449}
!14449 = !DILocation(line: 105, column: 2, scope: !14425)
!14450 = distinct !DISubprogram(name: "k_cpu_idle", scope: !124, file: !124, line: 5627, type: !327, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3777, retainedNodes: !2645)
!14451 = !DILocation(line: 5629, column: 2, scope: !14450)
!14452 = !DILocation(line: 5630, column: 1, scope: !14450)
!14453 = !DISubprogram(name: "arch_cpu_idle", scope: !307, file: !307, line: 167, type: !327, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!14454 = distinct !DISubprogram(name: "k_msgq_init", scope: !14455, file: !14455, line: 35, type: !14456, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14471)
!14455 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14456 = !DISubroutineType(types: !14457)
!14457 = !{null, !14458, !157, !153, !108}
!14458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14459, size: 32)
!14459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !124, line: 4204, size: 352, elements: !14460)
!14460 = !{!14461, !14462, !14463, !14464, !14465, !14466, !14467, !14468, !14469, !14470}
!14461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14459, file: !124, line: 4206, baseType: !3815, size: 64)
!14462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14459, file: !124, line: 4208, baseType: !3871, size: 32, offset: 64)
!14463 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14459, file: !124, line: 4210, baseType: !153, size: 32, offset: 96)
!14464 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14459, file: !124, line: 4212, baseType: !108, size: 32, offset: 128)
!14465 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14459, file: !124, line: 4214, baseType: !157, size: 32, offset: 160)
!14466 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14459, file: !124, line: 4216, baseType: !157, size: 32, offset: 192)
!14467 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14459, file: !124, line: 4218, baseType: !157, size: 32, offset: 224)
!14468 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14459, file: !124, line: 4220, baseType: !157, size: 32, offset: 256)
!14469 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14459, file: !124, line: 4222, baseType: !108, size: 32, offset: 288)
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14459, file: !124, line: 4227, baseType: !164, size: 8, offset: 320)
!14471 = !{!14472, !14473, !14474, !14475}
!14472 = !DILocalVariable(name: "msgq", arg: 1, scope: !14454, file: !14455, line: 35, type: !14458)
!14473 = !DILocalVariable(name: "buffer", arg: 2, scope: !14454, file: !14455, line: 35, type: !157)
!14474 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14454, file: !14455, line: 35, type: !153)
!14475 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14454, file: !14455, line: 36, type: !108)
!14476 = !DILocation(line: 0, scope: !14454)
!14477 = !DILocation(line: 38, column: 8, scope: !14454)
!14478 = !DILocation(line: 38, column: 17, scope: !14454)
!14479 = !DILocation(line: 39, column: 8, scope: !14454)
!14480 = !DILocation(line: 39, column: 17, scope: !14454)
!14481 = !DILocation(line: 40, column: 8, scope: !14454)
!14482 = !DILocation(line: 40, column: 21, scope: !14454)
!14483 = !DILocation(line: 41, column: 40, scope: !14454)
!14484 = !DILocation(line: 41, column: 28, scope: !14454)
!14485 = !DILocation(line: 41, column: 8, scope: !14454)
!14486 = !DILocation(line: 41, column: 19, scope: !14454)
!14487 = !DILocation(line: 42, column: 8, scope: !14454)
!14488 = !DILocation(line: 42, column: 17, scope: !14454)
!14489 = !DILocation(line: 43, column: 8, scope: !14454)
!14490 = !DILocation(line: 43, column: 18, scope: !14454)
!14491 = !DILocation(line: 44, column: 8, scope: !14454)
!14492 = !DILocation(line: 44, column: 18, scope: !14454)
!14493 = !DILocation(line: 45, column: 8, scope: !14454)
!14494 = !DILocation(line: 45, column: 14, scope: !14454)
!14495 = !DILocation(line: 46, column: 22, scope: !14454)
!14496 = !DILocation(line: 46, column: 2, scope: !14454)
!14497 = !DILocation(line: 47, column: 15, scope: !14454)
!14498 = !DILocation(line: 55, column: 1, scope: !14454)
!14499 = distinct !DISubprogram(name: "z_waitq_init", scope: !13556, file: !13556, line: 47, type: !14500, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{null, !3814}
!14502 = !{!14503}
!14503 = !DILocalVariable(name: "w", arg: 1, scope: !14499, file: !13556, line: 47, type: !3814)
!14504 = !DILocation(line: 0, scope: !14499)
!14505 = !DILocation(line: 49, column: 21, scope: !14499)
!14506 = !DILocation(line: 49, column: 2, scope: !14499)
!14507 = !DILocation(line: 50, column: 1, scope: !14499)
!14508 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !14509, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14512)
!14509 = !DISubroutineType(types: !14510)
!14510 = !{null, !14511}
!14511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 32)
!14512 = !{!14513}
!14513 = !DILocalVariable(name: "list", arg: 1, scope: !14508, file: !133, line: 197, type: !14511)
!14514 = !DILocation(line: 0, scope: !14508)
!14515 = !DILocation(line: 199, column: 8, scope: !14508)
!14516 = !DILocation(line: 199, column: 13, scope: !14508)
!14517 = !DILocation(line: 200, column: 8, scope: !14508)
!14518 = !DILocation(line: 200, column: 13, scope: !14508)
!14519 = !DILocation(line: 201, column: 1, scope: !14508)
!14520 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14455, file: !14455, line: 57, type: !14521, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14523)
!14521 = !DISubroutineType(types: !14522)
!14522 = !{!103, !14458, !153, !108}
!14523 = !{!14524, !14525, !14526, !14527, !14528, !14529}
!14524 = !DILocalVariable(name: "msgq", arg: 1, scope: !14520, file: !14455, line: 57, type: !14458)
!14525 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14520, file: !14455, line: 57, type: !153)
!14526 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14520, file: !14455, line: 58, type: !108)
!14527 = !DILocalVariable(name: "buffer", scope: !14520, file: !14455, line: 60, type: !102)
!14528 = !DILocalVariable(name: "ret", scope: !14520, file: !14455, line: 61, type: !103)
!14529 = !DILocalVariable(name: "total_size", scope: !14520, file: !14455, line: 62, type: !153)
!14530 = !DILocation(line: 0, scope: !14520)
!14531 = !DILocation(line: 62, column: 2, scope: !14520)
!14532 = !DILocation(line: 66, column: 6, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14520, file: !14455, line: 66, column: 6)
!14534 = !DILocation(line: 66, column: 6, scope: !14520)
!14535 = !DILocation(line: 69, column: 28, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14533, file: !14455, line: 68, column: 9)
!14537 = !DILocation(line: 69, column: 12, scope: !14536)
!14538 = !DILocation(line: 70, column: 14, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14536, file: !14455, line: 70, column: 7)
!14540 = !DILocation(line: 70, column: 7, scope: !14536)
!14541 = !DILocation(line: 71, column: 4, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14539, file: !14455, line: 70, column: 23)
!14543 = !DILocation(line: 72, column: 10, scope: !14542)
!14544 = !DILocation(line: 72, column: 16, scope: !14542)
!14545 = !DILocation(line: 74, column: 3, scope: !14542)
!14546 = !DILocation(line: 0, scope: !14533)
!14547 = !DILocation(line: 82, column: 1, scope: !14520)
!14548 = !DILocation(line: 81, column: 2, scope: !14520)
!14549 = distinct !DISubprogram(name: "size_mul_overflow", scope: !14550, file: !14550, line: 105, type: !14551, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14553)
!14550 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14551 = !DISubroutineType(types: !14552)
!14552 = !{!119, !153, !153, !3205}
!14553 = !{!14554, !14555, !14556}
!14554 = !DILocalVariable(name: "a", arg: 1, scope: !14549, file: !14550, line: 105, type: !153)
!14555 = !DILocalVariable(name: "b", arg: 2, scope: !14549, file: !14550, line: 105, type: !153)
!14556 = !DILocalVariable(name: "result", arg: 3, scope: !14549, file: !14550, line: 105, type: !3205)
!14557 = !DILocation(line: 0, scope: !14549)
!14558 = !DILocation(line: 107, column: 9, scope: !14549)
!14559 = !DILocation(line: 107, column: 2, scope: !14549)
!14560 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13781, file: !13781, line: 102, type: !14561, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14562)
!14561 = !DISubroutineType(types: !3758)
!14562 = !{!14563}
!14563 = !DILocalVariable(name: "size", arg: 1, scope: !14560, file: !13781, line: 102, type: !153)
!14564 = !DILocation(line: 0, scope: !14560)
!14565 = !DILocation(line: 104, column: 9, scope: !14560)
!14566 = !DILocation(line: 104, column: 2, scope: !14560)
!14567 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13781, file: !13781, line: 87, type: !14568, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!14568 = !DISubroutineType(types: !14569)
!14569 = !{!102, !153, !153}
!14570 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14455, file: !14455, line: 95, type: !14571, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14573)
!14571 = !DISubroutineType(types: !14572)
!14572 = !{!103, !14458}
!14573 = !{!14574}
!14574 = !DILocalVariable(name: "msgq", arg: 1, scope: !14570, file: !14455, line: 95, type: !14458)
!14575 = !DILocation(line: 0, scope: !14570)
!14576 = !DILocation(line: 99, column: 2, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14570, file: !14455, line: 99, column: 2)
!14578 = !DILocation(line: 99, column: 2, scope: !14570)
!14579 = !DILocation(line: 105, column: 13, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14570, file: !14455, line: 105, column: 6)
!14581 = !DILocation(line: 105, column: 19, scope: !14580)
!14582 = !DILocation(line: 105, column: 40, scope: !14580)
!14583 = !DILocation(line: 105, column: 6, scope: !14570)
!14584 = !DILocation(line: 106, column: 16, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14580, file: !14455, line: 105, column: 47)
!14586 = !DILocation(line: 106, column: 3, scope: !14585)
!14587 = !DILocation(line: 107, column: 15, scope: !14585)
!14588 = !DILocation(line: 108, column: 2, scope: !14585)
!14589 = !DILocation(line: 113, column: 1, scope: !14570)
!14590 = distinct !DISubprogram(name: "z_waitq_head", scope: !13556, file: !13556, line: 52, type: !14591, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14593)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{!3797, !3814}
!14593 = !{!14594}
!14594 = !DILocalVariable(name: "w", arg: 1, scope: !14590, file: !13556, line: 52, type: !3814)
!14595 = !DILocation(line: 0, scope: !14590)
!14596 = !DILocation(line: 54, column: 52, scope: !14590)
!14597 = !DILocation(line: 54, column: 28, scope: !14590)
!14598 = !DILocation(line: 54, column: 9, scope: !14590)
!14599 = !DILocation(line: 54, column: 2, scope: !14590)
!14600 = !DISubprogram(name: "k_free", scope: !124, file: !124, line: 5272, type: !7886, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!14601 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !14602, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14604)
!14602 = !DISubroutineType(types: !14603)
!14603 = !{!3782, !14511}
!14604 = !{!14605}
!14605 = !DILocalVariable(name: "list", arg: 1, scope: !14601, file: !133, line: 294, type: !14511)
!14606 = !DILocation(line: 0, scope: !14601)
!14607 = !DILocation(line: 296, column: 9, scope: !14601)
!14608 = !DILocation(line: 296, column: 49, scope: !14601)
!14609 = !DILocation(line: 296, column: 2, scope: !14601)
!14610 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !14611, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14613)
!14611 = !DISubroutineType(types: !14612)
!14612 = !{!119, !14511}
!14613 = !{!14614}
!14614 = !DILocalVariable(name: "list", arg: 1, scope: !14610, file: !133, line: 266, type: !14511)
!14615 = !DILocation(line: 0, scope: !14610)
!14616 = !DILocation(line: 268, column: 15, scope: !14610)
!14617 = !DILocation(line: 268, column: 20, scope: !14610)
!14618 = !DILocation(line: 268, column: 2, scope: !14610)
!14619 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14455, file: !14455, line: 116, type: !14620, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14626)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{!103, !14458, !13, !14622}
!14622 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14623)
!14623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14624)
!14624 = !{!14625}
!14625 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14623, file: !105, line: 66, baseType: !104, size: 64)
!14626 = !{!14627, !14628, !14629, !14630, !14631, !14636}
!14627 = !DILocalVariable(name: "msgq", arg: 1, scope: !14619, file: !14455, line: 116, type: !14458)
!14628 = !DILocalVariable(name: "data", arg: 2, scope: !14619, file: !14455, line: 116, type: !13)
!14629 = !DILocalVariable(name: "timeout", arg: 3, scope: !14619, file: !14455, line: 116, type: !14622)
!14630 = !DILocalVariable(name: "pending_thread", scope: !14619, file: !14455, line: 120, type: !3797)
!14631 = !DILocalVariable(name: "key", scope: !14619, file: !14455, line: 121, type: !14632)
!14632 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !14633)
!14633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !14634)
!14634 = !{!14635}
!14635 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14633, file: !149, line: 33, baseType: !103, size: 32)
!14636 = !DILocalVariable(name: "result", scope: !14619, file: !14455, line: 122, type: !103)
!14637 = !DILocation(line: 0, scope: !14619)
!14638 = !DILocation(line: 1031, column: 3, scope: !14639, inlinedAt: !14642)
!14639 = distinct !DISubprogram(name: "__get_IPSR", scope: !7951, file: !7951, line: 1027, type: !8038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14640)
!14640 = !{!14641}
!14641 = !DILocalVariable(name: "result", scope: !14639, file: !7951, line: 1029, type: !108)
!14642 = distinct !DILocation(line: 48, column: 10, scope: !14643, inlinedAt: !14644)
!14643 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8945, file: !8945, line: 46, type: !8946, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !2645)
!14644 = distinct !DILocation(line: 118, column: 2, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !14455, line: 118, column: 2)
!14646 = distinct !DILexicalBlock(scope: !14619, file: !14455, line: 118, column: 2)
!14647 = !{i64 6993243}
!14648 = !DILocation(line: 0, scope: !14639, inlinedAt: !14642)
!14649 = !DILocation(line: 48, column: 9, scope: !14643, inlinedAt: !14644)
!14650 = !DILocation(line: 118, column: 2, scope: !14645)
!14651 = !DILocation(line: 118, column: 2, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14645, file: !14455, line: 118, column: 2)
!14653 = !DILocation(line: 124, column: 27, scope: !14619)
!14654 = !DILocalVariable(name: "l", arg: 1, scope: !14655, file: !149, line: 136, type: !14658)
!14655 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !14656, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14659)
!14656 = !DISubroutineType(types: !14657)
!14657 = !{!14632, !14658}
!14658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 32)
!14659 = !{!14654, !14660}
!14660 = !DILocalVariable(name: "k", scope: !14655, file: !149, line: 139, type: !14632)
!14661 = !DILocation(line: 0, scope: !14655, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 124, column: 8, scope: !14619)
!14663 = !DILocation(line: 55, column: 2, scope: !14664, inlinedAt: !14668)
!14664 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14665)
!14665 = !{!14666, !14667}
!14666 = !DILocalVariable(name: "key", scope: !14664, file: !8072, line: 44, type: !32)
!14667 = !DILocalVariable(name: "tmp", scope: !14664, file: !8072, line: 53, type: !32)
!14668 = distinct !DILocation(line: 145, column: 10, scope: !14655, inlinedAt: !14662)
!14669 = !{i64 2850817}
!14670 = !DILocation(line: 0, scope: !14664, inlinedAt: !14668)
!14671 = !DILocation(line: 148, column: 2, scope: !14672, inlinedAt: !14662)
!14672 = distinct !DILexicalBlock(scope: !14673, file: !149, line: 148, column: 2)
!14673 = distinct !DILexicalBlock(scope: !14655, file: !149, line: 148, column: 2)
!14674 = !DILocation(line: 148, column: 2, scope: !14673, inlinedAt: !14662)
!14675 = !DILocation(line: 148, column: 2, scope: !14676, inlinedAt: !14662)
!14676 = distinct !DILexicalBlock(scope: !14672, file: !149, line: 148, column: 2)
!14677 = !DILocation(line: 160, column: 2, scope: !14655, inlinedAt: !14662)
!14678 = !DILocation(line: 128, column: 12, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14619, file: !14455, line: 128, column: 6)
!14680 = !DILocation(line: 128, column: 30, scope: !14679)
!14681 = !DILocation(line: 128, column: 22, scope: !14679)
!14682 = !DILocation(line: 128, column: 6, scope: !14619)
!14683 = !DILocation(line: 130, column: 49, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14679, file: !14455, line: 128, column: 40)
!14685 = !DILocation(line: 130, column: 20, scope: !14684)
!14686 = !DILocation(line: 131, column: 22, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14684, file: !14455, line: 131, column: 7)
!14688 = !DILocation(line: 131, column: 7, scope: !14684)
!14689 = !DILocation(line: 135, column: 38, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14687, file: !14455, line: 131, column: 31)
!14691 = !DILocation(line: 136, column: 17, scope: !14690)
!14692 = !DILocation(line: 135, column: 10, scope: !14690)
!14693 = !DILocalVariable(name: "thread", arg: 1, scope: !14694, file: !13322, line: 65, type: !3797)
!14694 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13322, file: !13322, line: 65, type: !14695, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14697)
!14695 = !DISubroutineType(types: !14696)
!14696 = !{null, !3797, !32}
!14697 = !{!14693, !14698}
!14698 = !DILocalVariable(name: "value", arg: 2, scope: !14694, file: !13322, line: 65, type: !32)
!14699 = !DILocation(line: 0, scope: !14694, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 138, column: 4, scope: !14690)
!14701 = !DILocation(line: 67, column: 15, scope: !14694, inlinedAt: !14700)
!14702 = !DILocation(line: 67, column: 33, scope: !14694, inlinedAt: !14700)
!14703 = !DILocation(line: 139, column: 4, scope: !14690)
!14704 = !DILocation(line: 140, column: 4, scope: !14690)
!14705 = !DILocation(line: 141, column: 4, scope: !14690)
!14706 = !DILocation(line: 144, column: 23, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14687, file: !14455, line: 142, column: 10)
!14708 = !DILocation(line: 144, column: 46, scope: !14707)
!14709 = !DILocation(line: 144, column: 10, scope: !14707)
!14710 = !DILocation(line: 145, column: 29, scope: !14707)
!14711 = !DILocation(line: 145, column: 20, scope: !14707)
!14712 = !DILocation(line: 146, column: 33, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14707, file: !14455, line: 146, column: 8)
!14714 = !DILocation(line: 146, column: 24, scope: !14713)
!14715 = !DILocation(line: 146, column: 8, scope: !14707)
!14716 = !DILocation(line: 147, column: 29, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14713, file: !14455, line: 146, column: 45)
!14718 = !DILocation(line: 147, column: 21, scope: !14717)
!14719 = !DILocation(line: 148, column: 4, scope: !14717)
!14720 = !DILocation(line: 149, column: 19, scope: !14707)
!14721 = !DILocation(line: 155, column: 2, scope: !14684)
!14722 = !DILocation(line: 155, column: 13, scope: !14679)
!14723 = !DILocation(line: 162, column: 3, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14725, file: !14455, line: 158, column: 9)
!14725 = distinct !DILexicalBlock(scope: !14679, file: !14455, line: 155, column: 13)
!14726 = !DILocation(line: 162, column: 18, scope: !14724)
!14727 = !DILocation(line: 162, column: 28, scope: !14724)
!14728 = !DILocation(line: 164, column: 49, scope: !14724)
!14729 = !DILocation(line: 164, column: 12, scope: !14724)
!14730 = !DILocation(line: 166, column: 3, scope: !14724)
!14731 = !DILocation(line: 0, scope: !14679)
!14732 = !DILocalVariable(name: "key", arg: 2, scope: !14733, file: !149, line: 190, type: !14632)
!14733 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !14734, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14736)
!14734 = !DISubroutineType(types: !14735)
!14735 = !{null, !14658, !14632}
!14736 = !{!14737, !14732}
!14737 = !DILocalVariable(name: "l", arg: 1, scope: !14733, file: !149, line: 189, type: !14658)
!14738 = !DILocation(line: 0, scope: !14733, inlinedAt: !14739)
!14739 = distinct !DILocation(line: 171, column: 2, scope: !14619)
!14740 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !14739)
!14741 = distinct !DILexicalBlock(scope: !14742, file: !149, line: 194, column: 2)
!14742 = distinct !DILexicalBlock(scope: !14733, file: !149, line: 194, column: 2)
!14743 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !14739)
!14744 = !DILocation(line: 194, column: 2, scope: !14745, inlinedAt: !14739)
!14745 = distinct !DILexicalBlock(scope: !14741, file: !149, line: 194, column: 2)
!14746 = !DILocalVariable(name: "key", arg: 1, scope: !14747, file: !8072, line: 84, type: !32)
!14747 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14748)
!14748 = !{!14746}
!14749 = !DILocation(line: 0, scope: !14747, inlinedAt: !14750)
!14750 = distinct !DILocation(line: 215, column: 2, scope: !14733, inlinedAt: !14739)
!14751 = !DILocation(line: 95, column: 2, scope: !14747, inlinedAt: !14750)
!14752 = !{i64 2851634}
!14753 = !DILocation(line: 173, column: 2, scope: !14619)
!14754 = !DILocation(line: 174, column: 1, scope: !14619)
!14755 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14455, file: !14455, line: 188, type: !14756, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14764)
!14756 = !DISubroutineType(types: !14757)
!14757 = !{null, !14458, !14758}
!14758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14759, size: 32)
!14759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !124, line: 4259, size: 96, elements: !14760)
!14760 = !{!14761, !14762, !14763}
!14761 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14759, file: !124, line: 4261, baseType: !153, size: 32)
!14762 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14759, file: !124, line: 4263, baseType: !108, size: 32, offset: 32)
!14763 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14759, file: !124, line: 4265, baseType: !108, size: 32, offset: 64)
!14764 = !{!14765, !14766}
!14765 = !DILocalVariable(name: "msgq", arg: 1, scope: !14755, file: !14455, line: 188, type: !14458)
!14766 = !DILocalVariable(name: "attrs", arg: 2, scope: !14755, file: !14455, line: 188, type: !14758)
!14767 = !DILocation(line: 0, scope: !14755)
!14768 = !DILocation(line: 190, column: 26, scope: !14755)
!14769 = !DILocation(line: 190, column: 9, scope: !14755)
!14770 = !DILocation(line: 190, column: 18, scope: !14755)
!14771 = !DILocation(line: 191, column: 26, scope: !14755)
!14772 = !DILocation(line: 191, column: 9, scope: !14755)
!14773 = !DILocation(line: 191, column: 18, scope: !14755)
!14774 = !DILocation(line: 192, column: 27, scope: !14755)
!14775 = !DILocation(line: 192, column: 9, scope: !14755)
!14776 = !DILocation(line: 192, column: 19, scope: !14755)
!14777 = !DILocation(line: 193, column: 1, scope: !14755)
!14778 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14455, file: !14455, line: 206, type: !14779, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14781)
!14779 = !DISubroutineType(types: !14780)
!14780 = !{!103, !14458, !102, !14622}
!14781 = !{!14782, !14783, !14784, !14785, !14786, !14787}
!14782 = !DILocalVariable(name: "msgq", arg: 1, scope: !14778, file: !14455, line: 206, type: !14458)
!14783 = !DILocalVariable(name: "data", arg: 2, scope: !14778, file: !14455, line: 206, type: !102)
!14784 = !DILocalVariable(name: "timeout", arg: 3, scope: !14778, file: !14455, line: 206, type: !14622)
!14785 = !DILocalVariable(name: "key", scope: !14778, file: !14455, line: 210, type: !14632)
!14786 = !DILocalVariable(name: "pending_thread", scope: !14778, file: !14455, line: 211, type: !3797)
!14787 = !DILocalVariable(name: "result", scope: !14778, file: !14455, line: 212, type: !103)
!14788 = !DILocation(line: 0, scope: !14778)
!14789 = !DILocation(line: 1031, column: 3, scope: !14639, inlinedAt: !14790)
!14790 = distinct !DILocation(line: 48, column: 10, scope: !14643, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 208, column: 2, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !14455, line: 208, column: 2)
!14793 = distinct !DILexicalBlock(scope: !14778, file: !14455, line: 208, column: 2)
!14794 = !DILocation(line: 0, scope: !14639, inlinedAt: !14790)
!14795 = !DILocation(line: 48, column: 9, scope: !14643, inlinedAt: !14791)
!14796 = !DILocation(line: 208, column: 2, scope: !14792)
!14797 = !DILocation(line: 208, column: 2, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14792, file: !14455, line: 208, column: 2)
!14799 = !DILocation(line: 214, column: 27, scope: !14778)
!14800 = !DILocation(line: 0, scope: !14655, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 214, column: 8, scope: !14778)
!14802 = !DILocation(line: 55, column: 2, scope: !14664, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 145, column: 10, scope: !14655, inlinedAt: !14801)
!14804 = !DILocation(line: 0, scope: !14664, inlinedAt: !14803)
!14805 = !DILocation(line: 148, column: 2, scope: !14672, inlinedAt: !14801)
!14806 = !DILocation(line: 148, column: 2, scope: !14673, inlinedAt: !14801)
!14807 = !DILocation(line: 148, column: 2, scope: !14676, inlinedAt: !14801)
!14808 = !DILocation(line: 160, column: 2, scope: !14655, inlinedAt: !14801)
!14809 = !DILocation(line: 218, column: 12, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14778, file: !14455, line: 218, column: 6)
!14811 = !DILocation(line: 218, column: 22, scope: !14810)
!14812 = !DILocation(line: 218, column: 6, scope: !14778)
!14813 = !DILocation(line: 220, column: 28, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !14455, line: 218, column: 28)
!14815 = !DILocation(line: 220, column: 44, scope: !14814)
!14816 = !DILocation(line: 220, column: 9, scope: !14814)
!14817 = !DILocation(line: 221, column: 27, scope: !14814)
!14818 = !DILocation(line: 221, column: 18, scope: !14814)
!14819 = !DILocation(line: 222, column: 31, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14814, file: !14455, line: 222, column: 7)
!14821 = !DILocation(line: 222, column: 22, scope: !14820)
!14822 = !DILocation(line: 222, column: 7, scope: !14814)
!14823 = !DILocation(line: 223, column: 27, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14820, file: !14455, line: 222, column: 43)
!14825 = !DILocation(line: 223, column: 19, scope: !14824)
!14826 = !DILocation(line: 224, column: 3, scope: !14824)
!14827 = !DILocation(line: 225, column: 18, scope: !14814)
!14828 = !DILocation(line: 228, column: 49, scope: !14814)
!14829 = !DILocation(line: 228, column: 20, scope: !14814)
!14830 = !DILocation(line: 229, column: 22, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14814, file: !14455, line: 229, column: 7)
!14832 = !DILocation(line: 229, column: 7, scope: !14814)
!14833 = !DILocation(line: 233, column: 23, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14831, file: !14455, line: 229, column: 31)
!14835 = !DILocation(line: 233, column: 55, scope: !14834)
!14836 = !DILocation(line: 234, column: 17, scope: !14834)
!14837 = !DILocation(line: 233, column: 10, scope: !14834)
!14838 = !DILocation(line: 235, column: 29, scope: !14834)
!14839 = !DILocation(line: 235, column: 20, scope: !14834)
!14840 = !DILocation(line: 236, column: 33, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14834, file: !14455, line: 236, column: 8)
!14842 = !DILocation(line: 236, column: 24, scope: !14841)
!14843 = !DILocation(line: 236, column: 8, scope: !14834)
!14844 = !DILocation(line: 237, column: 29, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14841, file: !14455, line: 236, column: 45)
!14846 = !DILocation(line: 237, column: 21, scope: !14845)
!14847 = !DILocation(line: 238, column: 4, scope: !14845)
!14848 = !DILocation(line: 239, column: 19, scope: !14834)
!14849 = !DILocation(line: 0, scope: !14694, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 242, column: 4, scope: !14834)
!14851 = !DILocation(line: 67, column: 15, scope: !14694, inlinedAt: !14850)
!14852 = !DILocation(line: 67, column: 33, scope: !14694, inlinedAt: !14850)
!14853 = !DILocation(line: 243, column: 4, scope: !14834)
!14854 = !DILocation(line: 244, column: 4, scope: !14834)
!14855 = !DILocation(line: 248, column: 4, scope: !14834)
!14856 = !DILocation(line: 251, column: 13, scope: !14810)
!14857 = !DILocation(line: 258, column: 3, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !14455, line: 254, column: 9)
!14859 = distinct !DILexicalBlock(scope: !14810, file: !14455, line: 251, column: 13)
!14860 = !DILocation(line: 258, column: 18, scope: !14858)
!14861 = !DILocation(line: 258, column: 28, scope: !14858)
!14862 = !DILocation(line: 260, column: 49, scope: !14858)
!14863 = !DILocation(line: 260, column: 12, scope: !14858)
!14864 = !DILocation(line: 262, column: 3, scope: !14858)
!14865 = !DILocation(line: 0, scope: !14810)
!14866 = !DILocation(line: 0, scope: !14733, inlinedAt: !14867)
!14867 = distinct !DILocation(line: 267, column: 2, scope: !14778)
!14868 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !14867)
!14869 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !14867)
!14870 = !DILocation(line: 194, column: 2, scope: !14745, inlinedAt: !14867)
!14871 = !DILocation(line: 0, scope: !14747, inlinedAt: !14872)
!14872 = distinct !DILocation(line: 215, column: 2, scope: !14733, inlinedAt: !14867)
!14873 = !DILocation(line: 95, column: 2, scope: !14747, inlinedAt: !14872)
!14874 = !DILocation(line: 269, column: 2, scope: !14778)
!14875 = !DILocation(line: 270, column: 1, scope: !14778)
!14876 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14455, file: !14455, line: 284, type: !14877, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14879)
!14877 = !DISubroutineType(types: !14878)
!14878 = !{!103, !14458, !102}
!14879 = !{!14880, !14881, !14882, !14883}
!14880 = !DILocalVariable(name: "msgq", arg: 1, scope: !14876, file: !14455, line: 284, type: !14458)
!14881 = !DILocalVariable(name: "data", arg: 2, scope: !14876, file: !14455, line: 284, type: !102)
!14882 = !DILocalVariable(name: "key", scope: !14876, file: !14455, line: 286, type: !14632)
!14883 = !DILocalVariable(name: "result", scope: !14876, file: !14455, line: 287, type: !103)
!14884 = !DILocation(line: 0, scope: !14876)
!14885 = !DILocation(line: 289, column: 27, scope: !14876)
!14886 = !DILocation(line: 0, scope: !14655, inlinedAt: !14887)
!14887 = distinct !DILocation(line: 289, column: 8, scope: !14876)
!14888 = !DILocation(line: 55, column: 2, scope: !14664, inlinedAt: !14889)
!14889 = distinct !DILocation(line: 145, column: 10, scope: !14655, inlinedAt: !14887)
!14890 = !DILocation(line: 0, scope: !14664, inlinedAt: !14889)
!14891 = !DILocation(line: 148, column: 2, scope: !14672, inlinedAt: !14887)
!14892 = !DILocation(line: 148, column: 2, scope: !14673, inlinedAt: !14887)
!14893 = !DILocation(line: 148, column: 2, scope: !14676, inlinedAt: !14887)
!14894 = !DILocation(line: 160, column: 2, scope: !14655, inlinedAt: !14887)
!14895 = !DILocation(line: 291, column: 12, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14876, file: !14455, line: 291, column: 6)
!14897 = !DILocation(line: 291, column: 22, scope: !14896)
!14898 = !DILocation(line: 291, column: 6, scope: !14876)
!14899 = !DILocation(line: 293, column: 28, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14896, file: !14455, line: 291, column: 28)
!14901 = !DILocation(line: 293, column: 44, scope: !14900)
!14902 = !DILocation(line: 293, column: 9, scope: !14900)
!14903 = !DILocation(line: 295, column: 2, scope: !14900)
!14904 = !DILocation(line: 0, scope: !14896)
!14905 = !DILocation(line: 0, scope: !14733, inlinedAt: !14906)
!14906 = distinct !DILocation(line: 302, column: 2, scope: !14876)
!14907 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !14906)
!14908 = !DILocation(line: 194, column: 2, scope: !14742, inlinedAt: !14906)
!14909 = !DILocation(line: 194, column: 2, scope: !14745, inlinedAt: !14906)
!14910 = !DILocation(line: 0, scope: !14747, inlinedAt: !14911)
!14911 = distinct !DILocation(line: 215, column: 2, scope: !14733, inlinedAt: !14906)
!14912 = !DILocation(line: 95, column: 2, scope: !14747, inlinedAt: !14911)
!14913 = !DILocation(line: 304, column: 2, scope: !14876)
!14914 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14455, file: !14455, line: 318, type: !14915, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3779, retainedNodes: !14917)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{null, !14458}
!14917 = !{!14918, !14919, !14920}
!14918 = !DILocalVariable(name: "msgq", arg: 1, scope: !14914, file: !14455, line: 318, type: !14458)
!14919 = !DILocalVariable(name: "key", scope: !14914, file: !14455, line: 320, type: !14632)
!14920 = !DILocalVariable(name: "pending_thread", scope: !14914, file: !14455, line: 321, type: !3797)
!14921 = !DILocation(line: 0, scope: !14914)
!14922 = !DILocation(line: 323, column: 27, scope: !14914)
!14923 = !DILocation(line: 0, scope: !14655, inlinedAt: !14924)
!14924 = distinct !DILocation(line: 323, column: 8, scope: !14914)
!14925 = !DILocation(line: 55, column: 2, scope: !14664, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 145, column: 10, scope: !14655, inlinedAt: !14924)
!14927 = !DILocation(line: 0, scope: !14664, inlinedAt: !14926)
!14928 = !DILocation(line: 148, column: 2, scope: !14672, inlinedAt: !14924)
!14929 = !DILocation(line: 148, column: 2, scope: !14673, inlinedAt: !14924)
!14930 = !DILocation(line: 148, column: 2, scope: !14676, inlinedAt: !14924)
!14931 = !DILocation(line: 160, column: 2, scope: !14655, inlinedAt: !14924)
!14932 = !DILocation(line: 328, column: 27, scope: !14914)
!14933 = !DILocation(line: 328, column: 65, scope: !14914)
!14934 = !DILocation(line: 328, column: 2, scope: !14914)
!14935 = !DILocation(line: 0, scope: !14694, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 329, column: 3, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14914, file: !14455, line: 328, column: 74)
!14938 = !DILocation(line: 67, column: 15, scope: !14694, inlinedAt: !14936)
!14939 = !DILocation(line: 67, column: 33, scope: !14694, inlinedAt: !14936)
!14940 = !DILocation(line: 330, column: 3, scope: !14937)
!14941 = distinct !{!14941, !14934, !14942}
!14942 = !DILocation(line: 331, column: 2, scope: !14914)
!14943 = !DILocation(line: 333, column: 8, scope: !14914)
!14944 = !DILocation(line: 333, column: 18, scope: !14914)
!14945 = !DILocation(line: 334, column: 25, scope: !14914)
!14946 = !DILocation(line: 334, column: 8, scope: !14914)
!14947 = !DILocation(line: 334, column: 17, scope: !14914)
!14948 = !DILocation(line: 336, column: 2, scope: !14914)
!14949 = !DILocation(line: 337, column: 1, scope: !14914)
!14950 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2957, file: !2957, line: 49, type: !14951, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !14960)
!14951 = !DISubroutineType(types: !14952)
!14952 = !{!103, !14953}
!14953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14954, size: 32)
!14954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !124, line: 2720, size: 160, elements: !14955)
!14955 = !{!14956, !14957, !14958, !14959}
!14956 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14954, file: !124, line: 2722, baseType: !2892, size: 64)
!14957 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !14954, file: !124, line: 2724, baseType: !2874, size: 32, offset: 64)
!14958 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !14954, file: !124, line: 2727, baseType: !108, size: 32, offset: 96)
!14959 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !14954, file: !124, line: 2730, baseType: !103, size: 32, offset: 128)
!14960 = !{!14961}
!14961 = !DILocalVariable(name: "mutex", arg: 1, scope: !14950, file: !2957, line: 49, type: !14953)
!14962 = !DILocation(line: 0, scope: !14950)
!14963 = !DILocation(line: 51, column: 9, scope: !14950)
!14964 = !DILocation(line: 51, column: 15, scope: !14950)
!14965 = !DILocation(line: 52, column: 9, scope: !14950)
!14966 = !DILocation(line: 52, column: 20, scope: !14950)
!14967 = !DILocation(line: 54, column: 23, scope: !14950)
!14968 = !DILocation(line: 54, column: 2, scope: !14950)
!14969 = !DILocation(line: 60, column: 2, scope: !14950)
!14970 = distinct !DISubprogram(name: "z_waitq_init", scope: !13556, file: !13556, line: 47, type: !14971, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !14973)
!14971 = !DISubroutineType(types: !14972)
!14972 = !{null, !2891}
!14973 = !{!14974}
!14974 = !DILocalVariable(name: "w", arg: 1, scope: !14970, file: !13556, line: 47, type: !2891)
!14975 = !DILocation(line: 0, scope: !14970)
!14976 = !DILocation(line: 49, column: 21, scope: !14970)
!14977 = !DILocation(line: 49, column: 2, scope: !14970)
!14978 = !DILocation(line: 50, column: 1, scope: !14970)
!14979 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !14980, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !14983)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{null, !14982}
!14982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 32)
!14983 = !{!14984}
!14984 = !DILocalVariable(name: "list", arg: 1, scope: !14979, file: !133, line: 197, type: !14982)
!14985 = !DILocation(line: 0, scope: !14979)
!14986 = !DILocation(line: 199, column: 8, scope: !14979)
!14987 = !DILocation(line: 199, column: 13, scope: !14979)
!14988 = !DILocation(line: 200, column: 8, scope: !14979)
!14989 = !DILocation(line: 200, column: 13, scope: !14979)
!14990 = !DILocation(line: 201, column: 1, scope: !14979)
!14991 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2957, file: !2957, line: 95, type: !14992, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !14998)
!14992 = !DISubroutineType(types: !14993)
!14993 = !{!103, !14953, !14994}
!14994 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !14995)
!14995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !14996)
!14996 = !{!14997}
!14997 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14995, file: !105, line: 66, baseType: !104, size: 64)
!14998 = !{!14999, !15000, !15001, !15002, !15007, !15008, !15009}
!14999 = !DILocalVariable(name: "mutex", arg: 1, scope: !14991, file: !2957, line: 95, type: !14953)
!15000 = !DILocalVariable(name: "timeout", arg: 2, scope: !14991, file: !2957, line: 95, type: !14994)
!15001 = !DILocalVariable(name: "new_prio", scope: !14991, file: !2957, line: 97, type: !103)
!15002 = !DILocalVariable(name: "key", scope: !14991, file: !2957, line: 98, type: !15003)
!15003 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !15004)
!15004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !15005)
!15005 = !{!15006}
!15006 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15004, file: !149, line: 33, baseType: !103, size: 32)
!15007 = !DILocalVariable(name: "resched", scope: !14991, file: !2957, line: 99, type: !119)
!15008 = !DILocalVariable(name: "got_mutex", scope: !14991, file: !2957, line: 146, type: !103)
!15009 = !DILocalVariable(name: "waiter", scope: !15010, file: !2957, line: 169, type: !2874)
!15010 = distinct !DILexicalBlock(scope: !15011, file: !2957, line: 168, column: 36)
!15011 = distinct !DILexicalBlock(scope: !14991, file: !2957, line: 168, column: 6)
!15012 = !DILocation(line: 0, scope: !14991)
!15013 = !DILocation(line: 1031, column: 3, scope: !15014, inlinedAt: !15017)
!15014 = distinct !DISubprogram(name: "__get_IPSR", scope: !7951, file: !7951, line: 1027, type: !8038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15015)
!15015 = !{!15016}
!15016 = !DILocalVariable(name: "result", scope: !15014, file: !7951, line: 1029, type: !108)
!15017 = distinct !DILocation(line: 48, column: 10, scope: !15018, inlinedAt: !15019)
!15018 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8945, file: !8945, line: 46, type: !8946, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !2645)
!15019 = distinct !DILocation(line: 101, column: 2, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15021, file: !2957, line: 101, column: 2)
!15021 = distinct !DILexicalBlock(scope: !14991, file: !2957, line: 101, column: 2)
!15022 = !{i64 6976491}
!15023 = !DILocation(line: 0, scope: !15014, inlinedAt: !15017)
!15024 = !DILocation(line: 48, column: 9, scope: !15018, inlinedAt: !15019)
!15025 = !DILocation(line: 101, column: 2, scope: !15021)
!15026 = !DILocation(line: 101, column: 2, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15020, file: !2957, line: 101, column: 2)
!15028 = !DILocalVariable(name: "l", arg: 1, scope: !15029, file: !149, line: 136, type: !15032)
!15029 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !15030, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15033)
!15030 = !DISubroutineType(types: !15031)
!15031 = !{!15003, !15032}
!15032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 32)
!15033 = !{!15028, !15034}
!15034 = !DILocalVariable(name: "k", scope: !15029, file: !149, line: 139, type: !15003)
!15035 = !DILocation(line: 0, scope: !15029, inlinedAt: !15036)
!15036 = distinct !DILocation(line: 105, column: 8, scope: !14991)
!15037 = !DILocation(line: 55, column: 2, scope: !15038, inlinedAt: !15042)
!15038 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15039)
!15039 = !{!15040, !15041}
!15040 = !DILocalVariable(name: "key", scope: !15038, file: !8072, line: 44, type: !32)
!15041 = !DILocalVariable(name: "tmp", scope: !15038, file: !8072, line: 53, type: !32)
!15042 = distinct !DILocation(line: 145, column: 10, scope: !15029, inlinedAt: !15036)
!15043 = !{i64 2849088}
!15044 = !DILocation(line: 0, scope: !15038, inlinedAt: !15042)
!15045 = !DILocation(line: 148, column: 2, scope: !15046, inlinedAt: !15036)
!15046 = distinct !DILexicalBlock(scope: !15047, file: !149, line: 148, column: 2)
!15047 = distinct !DILexicalBlock(scope: !15029, file: !149, line: 148, column: 2)
!15048 = !DILocation(line: 148, column: 2, scope: !15047, inlinedAt: !15036)
!15049 = !DILocation(line: 148, column: 2, scope: !15050, inlinedAt: !15036)
!15050 = distinct !DILexicalBlock(scope: !15046, file: !149, line: 148, column: 2)
!15051 = !DILocation(line: 160, column: 2, scope: !15029, inlinedAt: !15036)
!15052 = !DILocation(line: 107, column: 6, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !14991, file: !2957, line: 107, column: 6)
!15054 = !DILocation(line: 107, column: 6, scope: !14991)
!15055 = !{!"branch_weights", i32 2000, i32 1}
!15056 = !DILocation(line: 110, column: 6, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15053, file: !2957, line: 107, column: 71)
!15058 = !DILocation(line: 110, column: 21, scope: !15057)
!15059 = !DILocation(line: 109, column: 28, scope: !15057)
!15060 = !DILocation(line: 111, column: 13, scope: !15057)
!15061 = !DILocation(line: 114, column: 18, scope: !15057)
!15062 = !DILocation(line: 109, column: 10, scope: !15057)
!15063 = !DILocation(line: 109, column: 26, scope: !15057)
!15064 = !DILocation(line: 113, column: 20, scope: !15057)
!15065 = !DILocation(line: 114, column: 10, scope: !15057)
!15066 = !DILocation(line: 114, column: 16, scope: !15057)
!15067 = !DILocalVariable(name: "key", arg: 2, scope: !15068, file: !149, line: 190, type: !15003)
!15068 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !15069, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15071)
!15069 = !DISubroutineType(types: !15070)
!15070 = !{null, !15032, !15003}
!15071 = !{!15072, !15067}
!15072 = !DILocalVariable(name: "l", arg: 1, scope: !15068, file: !149, line: 189, type: !15032)
!15073 = !DILocation(line: 0, scope: !15068, inlinedAt: !15074)
!15074 = distinct !DILocation(line: 120, column: 3, scope: !15057)
!15075 = !DILocation(line: 194, column: 2, scope: !15076, inlinedAt: !15074)
!15076 = distinct !DILexicalBlock(scope: !15077, file: !149, line: 194, column: 2)
!15077 = distinct !DILexicalBlock(scope: !15068, file: !149, line: 194, column: 2)
!15078 = !DILocation(line: 194, column: 2, scope: !15077, inlinedAt: !15074)
!15079 = !DILocation(line: 194, column: 2, scope: !15080, inlinedAt: !15074)
!15080 = distinct !DILexicalBlock(scope: !15076, file: !149, line: 194, column: 2)
!15081 = !DILocalVariable(name: "key", arg: 1, scope: !15082, file: !8072, line: 84, type: !32)
!15082 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15083)
!15083 = !{!15081}
!15084 = !DILocation(line: 0, scope: !15082, inlinedAt: !15085)
!15085 = distinct !DILocation(line: 215, column: 2, scope: !15068, inlinedAt: !15074)
!15086 = !DILocation(line: 95, column: 2, scope: !15082, inlinedAt: !15085)
!15087 = !{i64 2849905}
!15088 = !DILocation(line: 124, column: 3, scope: !15057)
!15089 = !DILocation(line: 127, column: 6, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !14991, file: !2957, line: 127, column: 6)
!15091 = !DILocation(line: 127, column: 6, scope: !14991)
!15092 = !{!"branch_weights", i32 1, i32 2000}
!15093 = !DILocation(line: 0, scope: !15068, inlinedAt: !15094)
!15094 = distinct !DILocation(line: 128, column: 3, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15090, file: !2957, line: 127, column: 50)
!15096 = !DILocation(line: 194, column: 2, scope: !15076, inlinedAt: !15094)
!15097 = !DILocation(line: 194, column: 2, scope: !15077, inlinedAt: !15094)
!15098 = !DILocation(line: 194, column: 2, scope: !15080, inlinedAt: !15094)
!15099 = !DILocation(line: 0, scope: !15082, inlinedAt: !15100)
!15100 = distinct !DILocation(line: 215, column: 2, scope: !15068, inlinedAt: !15094)
!15101 = !DILocation(line: 95, column: 2, scope: !15082, inlinedAt: !15100)
!15102 = !DILocation(line: 132, column: 3, scope: !15095)
!15103 = !DILocation(line: 137, column: 53, scope: !14991)
!15104 = !DILocation(line: 137, column: 38, scope: !14991)
!15105 = !DILocation(line: 138, column: 29, scope: !14991)
!15106 = !DILocation(line: 138, column: 10, scope: !14991)
!15107 = !DILocation(line: 137, column: 13, scope: !14991)
!15108 = !DILocation(line: 142, column: 6, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !14991, file: !2957, line: 142, column: 6)
!15110 = !DILocation(line: 142, column: 6, scope: !14991)
!15111 = !DILocation(line: 143, column: 13, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15109, file: !2957, line: 142, column: 59)
!15113 = !DILocation(line: 144, column: 2, scope: !15112)
!15114 = !DILocation(line: 146, column: 50, scope: !14991)
!15115 = !DILocation(line: 146, column: 18, scope: !14991)
!15116 = !DILocation(line: 153, column: 16, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !14991, file: !2957, line: 153, column: 6)
!15118 = !DILocation(line: 153, column: 6, scope: !14991)
!15119 = !DILocation(line: 0, scope: !15029, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 162, column: 8, scope: !14991)
!15121 = !DILocation(line: 55, column: 2, scope: !15038, inlinedAt: !15122)
!15122 = distinct !DILocation(line: 145, column: 10, scope: !15029, inlinedAt: !15120)
!15123 = !DILocation(line: 0, scope: !15038, inlinedAt: !15122)
!15124 = !DILocation(line: 148, column: 2, scope: !15046, inlinedAt: !15120)
!15125 = !DILocation(line: 148, column: 2, scope: !15047, inlinedAt: !15120)
!15126 = !DILocation(line: 148, column: 2, scope: !15050, inlinedAt: !15120)
!15127 = !DILocation(line: 160, column: 2, scope: !15029, inlinedAt: !15120)
!15128 = !DILocation(line: 168, column: 6, scope: !15011)
!15129 = !DILocation(line: 168, column: 6, scope: !14991)
!15130 = !DILocation(line: 169, column: 29, scope: !15010)
!15131 = !DILocation(line: 0, scope: !15010)
!15132 = !DILocation(line: 171, column: 22, scope: !15010)
!15133 = !DILocation(line: 171, column: 14, scope: !15010)
!15134 = !DILocation(line: 172, column: 42, scope: !15010)
!15135 = !DILocation(line: 172, column: 29, scope: !15010)
!15136 = !DILocation(line: 172, column: 55, scope: !15010)
!15137 = !DILocation(line: 172, column: 4, scope: !15010)
!15138 = !DILocation(line: 173, column: 11, scope: !15010)
!15139 = !DILocation(line: 177, column: 13, scope: !15010)
!15140 = !DILocation(line: 177, column: 48, scope: !15010)
!15141 = !DILocation(line: 180, column: 6, scope: !14991)
!15142 = !DILocation(line: 181, column: 3, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15144, file: !2957, line: 180, column: 15)
!15144 = distinct !DILexicalBlock(scope: !14991, file: !2957, line: 180, column: 6)
!15145 = !DILocation(line: 182, column: 2, scope: !15143)
!15146 = !DILocation(line: 0, scope: !15068, inlinedAt: !15147)
!15147 = distinct !DILocation(line: 183, column: 3, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15144, file: !2957, line: 182, column: 9)
!15149 = !DILocation(line: 194, column: 2, scope: !15076, inlinedAt: !15147)
!15150 = !DILocation(line: 194, column: 2, scope: !15077, inlinedAt: !15147)
!15151 = !DILocation(line: 194, column: 2, scope: !15080, inlinedAt: !15147)
!15152 = !DILocation(line: 0, scope: !15082, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 215, column: 2, scope: !15068, inlinedAt: !15147)
!15154 = !DILocation(line: 95, column: 2, scope: !15082, inlinedAt: !15153)
!15155 = !DILocation(line: 189, column: 1, scope: !14991)
!15156 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2957, file: !2957, line: 72, type: !15157, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15159)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!324, !324, !324}
!15159 = !{!15160, !15161, !15162}
!15160 = !DILocalVariable(name: "target", arg: 1, scope: !15156, file: !2957, line: 72, type: !324)
!15161 = !DILocalVariable(name: "limit", arg: 2, scope: !15156, file: !2957, line: 72, type: !324)
!15162 = !DILocalVariable(name: "new_prio", scope: !15156, file: !2957, line: 74, type: !103)
!15163 = !DILocation(line: 0, scope: !15156)
!15164 = !DILocation(line: 74, column: 17, scope: !15156)
!15165 = !DILocation(line: 76, column: 13, scope: !15156)
!15166 = !DILocation(line: 78, column: 2, scope: !15156)
!15167 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13302, file: !13302, line: 211, type: !15168, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15170)
!15168 = !DISubroutineType(types: !15169)
!15169 = !{!119, !103, !103}
!15170 = !{!15171, !15172}
!15171 = !DILocalVariable(name: "prio", arg: 1, scope: !15167, file: !13302, line: 211, type: !103)
!15172 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15167, file: !13302, line: 211, type: !103)
!15173 = !DILocation(line: 0, scope: !15167)
!15174 = !DILocation(line: 213, column: 9, scope: !15167)
!15175 = !DILocation(line: 213, column: 2, scope: !15167)
!15176 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2957, file: !2957, line: 81, type: !15177, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15179)
!15177 = !DISubroutineType(types: !15178)
!15178 = !{!119, !14953, !324}
!15179 = !{!15180, !15181}
!15180 = !DILocalVariable(name: "mutex", arg: 1, scope: !15176, file: !2957, line: 81, type: !14953)
!15181 = !DILocalVariable(name: "new_prio", arg: 2, scope: !15176, file: !2957, line: 81, type: !324)
!15182 = !DILocation(line: 0, scope: !15176)
!15183 = !DILocation(line: 83, column: 13, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15176, file: !2957, line: 83, column: 6)
!15185 = !DILocation(line: 83, column: 25, scope: !15184)
!15186 = !DILocation(line: 83, column: 6, scope: !15184)
!15187 = !DILocation(line: 83, column: 30, scope: !15184)
!15188 = !DILocation(line: 83, column: 6, scope: !15176)
!15189 = !DILocation(line: 90, column: 10, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15184, file: !2957, line: 83, column: 43)
!15191 = !DILocation(line: 90, column: 3, scope: !15190)
!15192 = !DILocation(line: 93, column: 1, scope: !15176)
!15193 = distinct !DISubprogram(name: "z_waitq_head", scope: !13556, file: !13556, line: 52, type: !15194, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15196)
!15194 = !DISubroutineType(types: !15195)
!15195 = !{!2874, !2891}
!15196 = !{!15197}
!15197 = !DILocalVariable(name: "w", arg: 1, scope: !15193, file: !13556, line: 52, type: !2891)
!15198 = !DILocation(line: 0, scope: !15193)
!15199 = !DILocation(line: 54, column: 52, scope: !15193)
!15200 = !DILocation(line: 54, column: 28, scope: !15193)
!15201 = !DILocation(line: 54, column: 9, scope: !15193)
!15202 = !DILocation(line: 54, column: 2, scope: !15193)
!15203 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !15204, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15206)
!15204 = !DISubroutineType(types: !15205)
!15205 = !{!2859, !14982}
!15206 = !{!15207}
!15207 = !DILocalVariable(name: "list", arg: 1, scope: !15203, file: !133, line: 294, type: !14982)
!15208 = !DILocation(line: 0, scope: !15203)
!15209 = !DILocation(line: 296, column: 9, scope: !15203)
!15210 = !DILocation(line: 296, column: 49, scope: !15203)
!15211 = !DILocation(line: 296, column: 2, scope: !15203)
!15212 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !15213, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15215)
!15213 = !DISubroutineType(types: !15214)
!15214 = !{!119, !14982}
!15215 = !{!15216}
!15216 = !DILocalVariable(name: "list", arg: 1, scope: !15212, file: !133, line: 266, type: !14982)
!15217 = !DILocation(line: 0, scope: !15212)
!15218 = !DILocation(line: 268, column: 15, scope: !15212)
!15219 = !DILocation(line: 268, column: 20, scope: !15212)
!15220 = !DILocation(line: 268, column: 2, scope: !15212)
!15221 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13302, file: !13302, line: 206, type: !15168, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15222)
!15222 = !{!15223, !15224}
!15223 = !DILocalVariable(name: "prio1", arg: 1, scope: !15221, file: !13302, line: 206, type: !103)
!15224 = !DILocalVariable(name: "prio2", arg: 2, scope: !15221, file: !13302, line: 206, type: !103)
!15225 = !DILocation(line: 0, scope: !15221)
!15226 = !DILocation(line: 208, column: 15, scope: !15221)
!15227 = !DILocation(line: 208, column: 2, scope: !15221)
!15228 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13302, file: !13302, line: 186, type: !782, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15229)
!15229 = !{!15230}
!15230 = !DILocalVariable(name: "prio", arg: 1, scope: !15228, file: !13302, line: 186, type: !103)
!15231 = !DILocation(line: 0, scope: !15228)
!15232 = !DILocation(line: 188, column: 9, scope: !15228)
!15233 = !DILocation(line: 188, column: 2, scope: !15228)
!15234 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13302, file: !13302, line: 181, type: !15235, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15237)
!15235 = !DISubroutineType(types: !15236)
!15236 = !{!119, !103}
!15237 = !{!15238}
!15238 = !DILocalVariable(name: "prio", arg: 1, scope: !15234, file: !13302, line: 181, type: !103)
!15239 = !DILocation(line: 0, scope: !15234)
!15240 = !DILocation(line: 183, column: 14, scope: !15234)
!15241 = !DILocation(line: 183, column: 2, scope: !15234)
!15242 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2957, file: !2957, line: 201, type: !14951, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15243)
!15243 = !{!15244, !15245, !15246, !15247}
!15244 = !DILocalVariable(name: "mutex", arg: 1, scope: !15242, file: !2957, line: 201, type: !14953)
!15245 = !DILocalVariable(name: "new_owner", scope: !15242, file: !2957, line: 203, type: !2874)
!15246 = !DILocalVariable(name: "key", scope: !15242, file: !2957, line: 242, type: !15003)
!15247 = !DILabel(scope: !15242, name: "k_mutex_unlock_return", file: !2957, line: 270)
!15248 = !DILocation(line: 0, scope: !15242)
!15249 = !DILocation(line: 1031, column: 3, scope: !15014, inlinedAt: !15250)
!15250 = distinct !DILocation(line: 48, column: 10, scope: !15018, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 205, column: 2, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15253, file: !2957, line: 205, column: 2)
!15253 = distinct !DILexicalBlock(scope: !15242, file: !2957, line: 205, column: 2)
!15254 = !DILocation(line: 0, scope: !15014, inlinedAt: !15250)
!15255 = !DILocation(line: 48, column: 9, scope: !15018, inlinedAt: !15251)
!15256 = !DILocation(line: 205, column: 2, scope: !15253)
!15257 = !DILocation(line: 205, column: 2, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15252, file: !2957, line: 205, column: 2)
!15259 = !DILocation(line: 209, column: 2, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15242, file: !2957, line: 209, column: 2)
!15261 = !DILocation(line: 209, column: 2, scope: !15242)
!15262 = !DILocation(line: 217, column: 2, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15242, file: !2957, line: 217, column: 2)
!15264 = !DILocation(line: 217, column: 2, scope: !15242)
!15265 = !DILocation(line: 229, column: 2, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15267, file: !2957, line: 229, column: 2)
!15267 = distinct !DILexicalBlock(scope: !15242, file: !2957, line: 229, column: 2)
!15268 = !DILocation(line: 229, column: 2, scope: !15267)
!15269 = !DILocation(line: 229, column: 2, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15266, file: !2957, line: 229, column: 2)
!15271 = !DILocation(line: 238, column: 20, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15273, file: !2957, line: 237, column: 30)
!15273 = distinct !DILexicalBlock(scope: !15242, file: !2957, line: 237, column: 6)
!15274 = !DILocation(line: 239, column: 3, scope: !15272)
!15275 = !DILocation(line: 0, scope: !15029, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 242, column: 25, scope: !15242)
!15277 = !DILocation(line: 55, column: 2, scope: !15038, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 145, column: 10, scope: !15029, inlinedAt: !15276)
!15279 = !DILocation(line: 0, scope: !15038, inlinedAt: !15278)
!15280 = !DILocation(line: 148, column: 2, scope: !15046, inlinedAt: !15276)
!15281 = !DILocation(line: 148, column: 2, scope: !15047, inlinedAt: !15276)
!15282 = !DILocation(line: 148, column: 2, scope: !15050, inlinedAt: !15276)
!15283 = !DILocation(line: 160, column: 2, scope: !15029, inlinedAt: !15276)
!15284 = !DILocation(line: 244, column: 34, scope: !15242)
!15285 = !DILocation(line: 244, column: 2, scope: !15242)
!15286 = !DILocation(line: 247, column: 44, scope: !15242)
!15287 = !DILocation(line: 247, column: 14, scope: !15242)
!15288 = !DILocation(line: 249, column: 15, scope: !15242)
!15289 = !DILocation(line: 254, column: 16, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15242, file: !2957, line: 254, column: 6)
!15291 = !DILocation(line: 254, column: 6, scope: !15242)
!15292 = !DILocation(line: 260, column: 44, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15290, file: !2957, line: 254, column: 25)
!15294 = !DILocation(line: 260, column: 28, scope: !15293)
!15295 = !DILocation(line: 260, column: 26, scope: !15293)
!15296 = !DILocalVariable(name: "thread", arg: 1, scope: !15297, file: !13322, line: 65, type: !2874)
!15297 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13322, file: !13322, line: 65, type: !15298, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2856, retainedNodes: !15300)
!15298 = !DISubroutineType(types: !15299)
!15299 = !{null, !2874, !32}
!15300 = !{!15296, !15301}
!15301 = !DILocalVariable(name: "value", arg: 2, scope: !15297, file: !13322, line: 65, type: !32)
!15302 = !DILocation(line: 0, scope: !15297, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 261, column: 3, scope: !15293)
!15304 = !DILocation(line: 67, column: 15, scope: !15297, inlinedAt: !15303)
!15305 = !DILocation(line: 67, column: 33, scope: !15297, inlinedAt: !15303)
!15306 = !DILocation(line: 262, column: 3, scope: !15293)
!15307 = !DILocation(line: 263, column: 3, scope: !15293)
!15308 = !DILocation(line: 264, column: 2, scope: !15293)
!15309 = !DILocation(line: 265, column: 21, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15290, file: !2957, line: 264, column: 9)
!15311 = !DILocation(line: 0, scope: !15068, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 266, column: 3, scope: !15310)
!15313 = !DILocation(line: 194, column: 2, scope: !15076, inlinedAt: !15312)
!15314 = !DILocation(line: 194, column: 2, scope: !15077, inlinedAt: !15312)
!15315 = !DILocation(line: 194, column: 2, scope: !15080, inlinedAt: !15312)
!15316 = !DILocation(line: 0, scope: !15082, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 215, column: 2, scope: !15068, inlinedAt: !15312)
!15318 = !DILocation(line: 95, column: 2, scope: !15082, inlinedAt: !15317)
!15319 = !DILocation(line: 274, column: 1, scope: !15242)
!15320 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3064, file: !3064, line: 93, type: !15321, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15323)
!15321 = !DISubroutineType(types: !15322)
!15322 = !{!324, !2963, !2963}
!15323 = !{!15324, !15325, !15326, !15327}
!15324 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15320, file: !3064, line: 93, type: !2963)
!15325 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15320, file: !3064, line: 94, type: !2963)
!15326 = !DILocalVariable(name: "b1", scope: !15320, file: !3064, line: 97, type: !324)
!15327 = !DILocalVariable(name: "b2", scope: !15320, file: !3064, line: 98, type: !324)
!15328 = !DILocation(line: 0, scope: !15320)
!15329 = !DILocation(line: 97, column: 30, scope: !15320)
!15330 = !DILocation(line: 98, column: 30, scope: !15320)
!15331 = !DILocation(line: 100, column: 9, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15320, file: !3064, line: 100, column: 6)
!15333 = !DILocation(line: 100, column: 6, scope: !15320)
!15334 = !DILocation(line: 125, column: 1, scope: !15320)
!15335 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3064, file: !3064, line: 428, type: !15336, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15338)
!15336 = !DISubroutineType(types: !15337)
!15337 = !{null, !2963}
!15338 = !{!15339}
!15339 = !DILocalVariable(name: "curr", arg: 1, scope: !15335, file: !3064, line: 428, type: !2963)
!15340 = !DILocation(line: 0, scope: !15335)
!15341 = !DILocation(line: 434, column: 6, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15335, file: !3064, line: 434, column: 6)
!15343 = !DILocation(line: 434, column: 23, scope: !15342)
!15344 = !DILocation(line: 434, column: 6, scope: !15335)
!15345 = !DILocation(line: 435, column: 50, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15342, file: !3064, line: 434, column: 29)
!15347 = !DILocation(line: 435, column: 48, scope: !15346)
!15348 = !DILocation(line: 435, column: 29, scope: !15346)
!15349 = !DILocation(line: 436, column: 24, scope: !15346)
!15350 = !DILocation(line: 436, column: 3, scope: !15346)
!15351 = !DILocation(line: 437, column: 2, scope: !15346)
!15352 = !DILocation(line: 438, column: 1, scope: !15335)
!15353 = distinct !DISubprogram(name: "slice_time", scope: !3064, file: !3064, line: 407, type: !15354, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15356)
!15354 = !DISubroutineType(types: !15355)
!15355 = !{!103, !2963}
!15356 = !{!15357, !15358}
!15357 = !DILocalVariable(name: "curr", arg: 1, scope: !15353, file: !3064, line: 407, type: !2963)
!15358 = !DILocalVariable(name: "ret", scope: !15353, file: !3064, line: 409, type: !103)
!15359 = !DILocation(line: 0, scope: !15353)
!15360 = !DILocation(line: 409, column: 12, scope: !15353)
!15361 = !DILocation(line: 416, column: 2, scope: !15353)
!15362 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3064, file: !3064, line: 440, type: !15363, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15365)
!15363 = !DISubroutineType(types: !15364)
!15364 = !{null, !324, !103}
!15365 = !{!15366, !15367, !15368, !15374}
!15366 = !DILocalVariable(name: "slice", arg: 1, scope: !15362, file: !3064, line: 440, type: !324)
!15367 = !DILocalVariable(name: "prio", arg: 2, scope: !15362, file: !3064, line: 440, type: !103)
!15368 = !DILocalVariable(name: "__i", scope: !15369, file: !3064, line: 442, type: !15370)
!15369 = distinct !DILexicalBlock(scope: !15362, file: !3064, line: 442, column: 2)
!15370 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !15371)
!15371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !15372)
!15372 = !{!15373}
!15373 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15371, file: !149, line: 33, baseType: !103, size: 32)
!15374 = !DILocalVariable(name: "__key", scope: !15369, file: !3064, line: 442, type: !15370)
!15375 = !DILocation(line: 0, scope: !15362)
!15376 = !DILocation(line: 0, scope: !15369)
!15377 = !DILocalVariable(name: "l", arg: 1, scope: !15378, file: !149, line: 136, type: !15381)
!15378 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !15379, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15382)
!15379 = !DISubroutineType(types: !15380)
!15380 = !{!15370, !15381}
!15381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 32)
!15382 = !{!15377, !15383}
!15383 = !DILocalVariable(name: "k", scope: !15378, file: !149, line: 139, type: !15370)
!15384 = !DILocation(line: 0, scope: !15378, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 442, column: 2, scope: !15369)
!15386 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !15391)
!15387 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15388)
!15388 = !{!15389, !15390}
!15389 = !DILocalVariable(name: "key", scope: !15387, file: !8072, line: 44, type: !32)
!15390 = !DILocalVariable(name: "tmp", scope: !15387, file: !8072, line: 53, type: !32)
!15391 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !15385)
!15392 = !{i64 2888651}
!15393 = !DILocation(line: 0, scope: !15387, inlinedAt: !15391)
!15394 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !15385)
!15395 = distinct !DILexicalBlock(scope: !15396, file: !149, line: 148, column: 2)
!15396 = distinct !DILexicalBlock(scope: !15378, file: !149, line: 148, column: 2)
!15397 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !15385)
!15398 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !15385)
!15399 = distinct !DILexicalBlock(scope: !15395, file: !149, line: 148, column: 2)
!15400 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !15385)
!15401 = !DILocation(line: 443, column: 29, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15403, file: !3064, line: 442, column: 26)
!15403 = distinct !DILexicalBlock(scope: !15369, file: !3064, line: 442, column: 2)
!15404 = !DILocation(line: 444, column: 17, scope: !15402)
!15405 = !DILocation(line: 445, column: 51, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15402, file: !3064, line: 445, column: 7)
!15407 = !DILocation(line: 445, column: 7, scope: !15402)
!15408 = !DILocation(line: 0, scope: !15402)
!15409 = !DILocation(line: 451, column: 18, scope: !15402)
!15410 = !DILocation(line: 452, column: 3, scope: !15402)
!15411 = !DILocalVariable(name: "key", arg: 2, scope: !15412, file: !149, line: 190, type: !15370)
!15412 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !15413, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15415)
!15413 = !DISubroutineType(types: !15414)
!15414 = !{null, !15381, !15370}
!15415 = !{!15416, !15411}
!15416 = !DILocalVariable(name: "l", arg: 1, scope: !15412, file: !149, line: 189, type: !15381)
!15417 = !DILocation(line: 0, scope: !15412, inlinedAt: !15418)
!15418 = distinct !DILocation(line: 442, column: 2, scope: !15403)
!15419 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !15418)
!15420 = distinct !DILexicalBlock(scope: !15421, file: !149, line: 194, column: 2)
!15421 = distinct !DILexicalBlock(scope: !15412, file: !149, line: 194, column: 2)
!15422 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !15418)
!15423 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !15418)
!15424 = distinct !DILexicalBlock(scope: !15420, file: !149, line: 194, column: 2)
!15425 = !DILocalVariable(name: "key", arg: 1, scope: !15426, file: !8072, line: 84, type: !32)
!15426 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15427)
!15427 = !{!15425}
!15428 = !DILocation(line: 0, scope: !15426, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !15418)
!15430 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !15429)
!15431 = !{i64 2889468}
!15432 = !DILocation(line: 454, column: 1, scope: !15362)
!15433 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !4155, file: !4155, line: 389, type: !15434, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15436)
!15434 = !DISubroutineType(types: !15435)
!15435 = !{!108, !108}
!15436 = !{!15437}
!15437 = !DILocalVariable(name: "t", arg: 1, scope: !15433, file: !4155, line: 389, type: !108)
!15438 = !DILocation(line: 0, scope: !15433)
!15439 = !DILocalVariable(name: "t", arg: 1, scope: !15440, file: !4155, line: 102, type: !109)
!15440 = distinct !DISubprogram(name: "z_tmcvt", scope: !4155, file: !4155, line: 102, type: !4163, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15441)
!15441 = !{!15439, !15442, !15443, !15444, !15445, !15446, !15447, !15448, !15449, !15450, !15451}
!15442 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15440, file: !4155, line: 102, type: !108)
!15443 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15440, file: !4155, line: 103, type: !108)
!15444 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15440, file: !4155, line: 103, type: !119)
!15445 = !DILocalVariable(name: "result32", arg: 5, scope: !15440, file: !4155, line: 104, type: !119)
!15446 = !DILocalVariable(name: "round_up", arg: 6, scope: !15440, file: !4155, line: 104, type: !119)
!15447 = !DILocalVariable(name: "round_off", arg: 7, scope: !15440, file: !4155, line: 105, type: !119)
!15448 = !DILocalVariable(name: "mul_ratio", scope: !15440, file: !4155, line: 107, type: !119)
!15449 = !DILocalVariable(name: "div_ratio", scope: !15440, file: !4155, line: 109, type: !119)
!15450 = !DILocalVariable(name: "off", scope: !15440, file: !4155, line: 116, type: !109)
!15451 = !DILocalVariable(name: "rdivisor", scope: !15452, file: !4155, line: 119, type: !108)
!15452 = distinct !DILexicalBlock(scope: !15453, file: !4155, line: 118, column: 18)
!15453 = distinct !DILexicalBlock(scope: !15440, file: !4155, line: 118, column: 6)
!15454 = !DILocation(line: 0, scope: !15440, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 392, column: 9, scope: !15433)
!15456 = !DILocation(line: 143, column: 25, scope: !15457, inlinedAt: !15455)
!15457 = distinct !DILexicalBlock(scope: !15458, file: !4155, line: 142, column: 17)
!15458 = distinct !DILexicalBlock(scope: !15459, file: !4155, line: 142, column: 7)
!15459 = distinct !DILexicalBlock(scope: !15460, file: !4155, line: 141, column: 24)
!15460 = distinct !DILexicalBlock(scope: !15461, file: !4155, line: 141, column: 13)
!15461 = distinct !DILexicalBlock(scope: !15440, file: !4155, line: 134, column: 6)
!15462 = !DILocation(line: 392, column: 2, scope: !15433)
!15463 = distinct !DISubprogram(name: "z_time_slice", scope: !3064, file: !3064, line: 502, type: !13259, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15464)
!15464 = !{!15465, !15466}
!15465 = !DILocalVariable(name: "ticks", arg: 1, scope: !15463, file: !3064, line: 502, type: !103)
!15466 = !DILocalVariable(name: "key", scope: !15463, file: !3064, line: 511, type: !15370)
!15467 = !DILocation(line: 0, scope: !15463)
!15468 = !DILocation(line: 0, scope: !15378, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 511, column: 25, scope: !15463)
!15470 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !15469)
!15472 = !DILocation(line: 0, scope: !15387, inlinedAt: !15471)
!15473 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !15469)
!15474 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !15469)
!15475 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !15469)
!15476 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !15469)
!15477 = !DILocation(line: 514, column: 6, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15463, file: !3064, line: 514, column: 6)
!15479 = !DILocation(line: 514, column: 25, scope: !15478)
!15480 = !DILocation(line: 514, column: 22, scope: !15478)
!15481 = !DILocation(line: 514, column: 6, scope: !15463)
!15482 = !DILocation(line: 515, column: 3, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15478, file: !3064, line: 514, column: 35)
!15484 = !DILocation(line: 0, scope: !15412, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 516, column: 3, scope: !15483)
!15486 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !15485)
!15487 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !15485)
!15488 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !15485)
!15489 = !DILocation(line: 0, scope: !15426, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !15485)
!15491 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !15490)
!15492 = !DILocation(line: 517, column: 3, scope: !15483)
!15493 = !DILocation(line: 519, column: 18, scope: !15463)
!15494 = !DILocation(line: 522, column: 6, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15463, file: !3064, line: 522, column: 6)
!15496 = !DILocation(line: 522, column: 27, scope: !15495)
!15497 = !DILocation(line: 522, column: 30, scope: !15495)
!15498 = !DILocation(line: 522, column: 6, scope: !15463)
!15499 = !DILocation(line: 523, column: 30, scope: !15500)
!15500 = distinct !DILexicalBlock(scope: !15501, file: !3064, line: 523, column: 7)
!15501 = distinct !DILexicalBlock(scope: !15495, file: !3064, line: 522, column: 51)
!15502 = !DILocation(line: 523, column: 13, scope: !15500)
!15503 = !DILocation(line: 523, column: 7, scope: !15501)
!15504 = !DILocation(line: 530, column: 10, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15500, file: !3064, line: 523, column: 43)
!15506 = !DILocation(line: 531, column: 3, scope: !15505)
!15507 = !DILocation(line: 532, column: 30, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15500, file: !3064, line: 531, column: 10)
!15509 = !DILocation(line: 535, column: 29, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15495, file: !3064, line: 534, column: 9)
!15511 = !DILocation(line: 0, scope: !15412, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 537, column: 2, scope: !15463)
!15513 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !15512)
!15514 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !15512)
!15515 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !15512)
!15516 = !DILocation(line: 0, scope: !15426, inlinedAt: !15517)
!15517 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !15512)
!15518 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !15517)
!15519 = !DILocation(line: 538, column: 1, scope: !15463)
!15520 = distinct !DISubprogram(name: "sliceable", scope: !3064, file: !3064, line: 468, type: !15521, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15523)
!15521 = !DISubroutineType(types: !15522)
!15522 = !{!119, !2963}
!15523 = !{!15524, !15525}
!15524 = !DILocalVariable(name: "thread", arg: 1, scope: !15520, file: !3064, line: 468, type: !2963)
!15525 = !DILocalVariable(name: "ret", scope: !15520, file: !3064, line: 470, type: !119)
!15526 = !DILocation(line: 0, scope: !15520)
!15527 = !DILocation(line: 470, column: 13, scope: !15520)
!15528 = !DILocation(line: 471, column: 3, scope: !15520)
!15529 = !DILocation(line: 471, column: 7, scope: !15520)
!15530 = !DILocation(line: 472, column: 3, scope: !15520)
!15531 = !DILocation(line: 472, column: 37, scope: !15520)
!15532 = !DILocation(line: 472, column: 24, scope: !15520)
!15533 = !DILocation(line: 472, column: 43, scope: !15520)
!15534 = !DILocation(line: 472, column: 7, scope: !15520)
!15535 = !DILocation(line: 473, column: 3, scope: !15520)
!15536 = !DILocation(line: 473, column: 7, scope: !15520)
!15537 = !DILocation(line: 473, column: 6, scope: !15520)
!15538 = !DILocation(line: 479, column: 2, scope: !15520)
!15539 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3064, file: !3064, line: 482, type: !15540, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15542)
!15540 = !DISubroutineType(types: !15541)
!15541 = !{!15370, !15370}
!15542 = !{!15543, !15544}
!15543 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15539, file: !3064, line: 482, type: !15370)
!15544 = !DILocalVariable(name: "curr", scope: !15539, file: !3064, line: 484, type: !2963)
!15545 = !DILocation(line: 0, scope: !15539)
!15546 = !DILocation(line: 484, column: 26, scope: !15539)
!15547 = !DILocation(line: 493, column: 7, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15539, file: !3064, line: 493, column: 6)
!15549 = !DILocation(line: 493, column: 6, scope: !15539)
!15550 = !DILocation(line: 494, column: 3, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15548, file: !3064, line: 493, column: 49)
!15552 = !DILocation(line: 495, column: 2, scope: !15551)
!15553 = !DILocation(line: 496, column: 2, scope: !15539)
!15554 = !DILocation(line: 499, column: 1, scope: !15539)
!15555 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13302, file: !13302, line: 106, type: !15521, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15556)
!15556 = !{!15557, !15558}
!15557 = !DILocalVariable(name: "thread", arg: 1, scope: !15555, file: !13302, line: 106, type: !2963)
!15558 = !DILocalVariable(name: "state", scope: !15555, file: !13302, line: 108, type: !164)
!15559 = !DILocation(line: 0, scope: !15555)
!15560 = !DILocation(line: 108, column: 31, scope: !15555)
!15561 = !DILocation(line: 110, column: 16, scope: !15555)
!15562 = !DILocation(line: 111, column: 41, scope: !15555)
!15563 = !DILocation(line: 110, column: 2, scope: !15555)
!15564 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3064, file: !3064, line: 393, type: !15336, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15565)
!15565 = !{!15566}
!15566 = !DILocalVariable(name: "thread", arg: 1, scope: !15564, file: !3064, line: 393, type: !2963)
!15567 = !DILocation(line: 0, scope: !15564)
!15568 = !DILocation(line: 395, column: 6, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15564, file: !3064, line: 395, column: 6)
!15570 = !DILocation(line: 395, column: 6, scope: !15564)
!15571 = !DILocalVariable(name: "thread", arg: 1, scope: !15572, file: !3064, line: 264, type: !2963)
!15572 = distinct !DISubprogram(name: "dequeue_thread", scope: !3064, file: !3064, line: 264, type: !15336, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15573)
!15573 = !{!15571}
!15574 = !DILocation(line: 0, scope: !15572, inlinedAt: !15575)
!15575 = distinct !DILocation(line: 396, column: 3, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15569, file: !3064, line: 395, column: 34)
!15577 = !DILocation(line: 266, column: 15, scope: !15572, inlinedAt: !15575)
!15578 = !DILocation(line: 266, column: 28, scope: !15572, inlinedAt: !15575)
!15579 = !DILocalVariable(name: "thread", arg: 1, scope: !15580, file: !3064, line: 232, type: !2963)
!15580 = distinct !DISubprogram(name: "runq_remove", scope: !3064, file: !3064, line: 232, type: !15336, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15581)
!15581 = !{!15579}
!15582 = !DILocation(line: 0, scope: !15580, inlinedAt: !15583)
!15583 = distinct !DILocation(line: 268, column: 3, scope: !15584, inlinedAt: !15575)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !3064, line: 267, column: 35)
!15585 = distinct !DILexicalBlock(scope: !15572, file: !3064, line: 267, column: 6)
!15586 = !DILocation(line: 234, column: 2, scope: !15580, inlinedAt: !15583)
!15587 = !DILocation(line: 397, column: 2, scope: !15576)
!15588 = !DILocalVariable(name: "thread", arg: 1, scope: !15589, file: !3064, line: 250, type: !2963)
!15589 = distinct !DISubprogram(name: "queue_thread", scope: !3064, file: !3064, line: 250, type: !15336, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15590)
!15590 = !{!15588}
!15591 = !DILocation(line: 0, scope: !15589, inlinedAt: !15592)
!15592 = distinct !DILocation(line: 398, column: 2, scope: !15564)
!15593 = !DILocation(line: 252, column: 15, scope: !15589, inlinedAt: !15592)
!15594 = !DILocation(line: 252, column: 28, scope: !15589, inlinedAt: !15592)
!15595 = !DILocalVariable(name: "thread", arg: 1, scope: !15596, file: !3064, line: 227, type: !2963)
!15596 = distinct !DISubprogram(name: "runq_add", scope: !3064, file: !3064, line: 227, type: !15336, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15597)
!15597 = !{!15595}
!15598 = !DILocation(line: 0, scope: !15596, inlinedAt: !15599)
!15599 = distinct !DILocation(line: 254, column: 3, scope: !15600, inlinedAt: !15592)
!15600 = distinct !DILexicalBlock(scope: !15601, file: !3064, line: 253, column: 35)
!15601 = distinct !DILexicalBlock(scope: !15589, file: !3064, line: 253, column: 6)
!15602 = !DILocalVariable(name: "pq", arg: 1, scope: !15603, file: !3064, line: 181, type: !15606)
!15603 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3064, file: !3064, line: 181, type: !15604, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15607)
!15604 = !DISubroutineType(types: !15605)
!15605 = !{null, !15606, !2963}
!15606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!15607 = !{!15602, !15608, !15609}
!15608 = !DILocalVariable(name: "thread", arg: 2, scope: !15603, file: !3064, line: 182, type: !2963)
!15609 = !DILocalVariable(name: "t", scope: !15603, file: !3064, line: 184, type: !2963)
!15610 = !DILocation(line: 0, scope: !15603, inlinedAt: !15611)
!15611 = distinct !DILocation(line: 229, column: 2, scope: !15596, inlinedAt: !15599)
!15612 = !DILocation(line: 186, column: 2, scope: !15613, inlinedAt: !15611)
!15613 = distinct !DILexicalBlock(scope: !15614, file: !3064, line: 186, column: 2)
!15614 = distinct !DILexicalBlock(scope: !15603, file: !3064, line: 186, column: 2)
!15615 = !DILocation(line: 186, column: 2, scope: !15614, inlinedAt: !15611)
!15616 = !DILocation(line: 186, column: 2, scope: !15617, inlinedAt: !15611)
!15617 = distinct !DILexicalBlock(scope: !15613, file: !3064, line: 186, column: 2)
!15618 = !DILocation(line: 188, column: 2, scope: !15619, inlinedAt: !15611)
!15619 = distinct !DILexicalBlock(scope: !15603, file: !3064, line: 188, column: 2)
!15620 = !DILocation(line: 188, column: 2, scope: !15621, inlinedAt: !15611)
!15621 = distinct !DILexicalBlock(scope: !15619, file: !3064, line: 188, column: 2)
!15622 = !DILocation(line: 0, scope: !15619, inlinedAt: !15611)
!15623 = !DILocation(line: 189, column: 7, scope: !15624, inlinedAt: !15611)
!15624 = distinct !DILexicalBlock(scope: !15625, file: !3064, line: 189, column: 7)
!15625 = distinct !DILexicalBlock(scope: !15621, file: !3064, line: 188, column: 56)
!15626 = !DILocation(line: 189, column: 35, scope: !15624, inlinedAt: !15611)
!15627 = !DILocation(line: 189, column: 7, scope: !15625, inlinedAt: !15611)
!15628 = !DILocation(line: 191, column: 21, scope: !15629, inlinedAt: !15611)
!15629 = distinct !DILexicalBlock(scope: !15624, file: !3064, line: 189, column: 40)
!15630 = !DILocation(line: 190, column: 4, scope: !15629, inlinedAt: !15611)
!15631 = !DILocation(line: 192, column: 4, scope: !15629, inlinedAt: !15611)
!15632 = distinct !{!15632, !15618, !15633}
!15633 = !DILocation(line: 194, column: 2, scope: !15619, inlinedAt: !15611)
!15634 = !DILocation(line: 196, column: 37, scope: !15603, inlinedAt: !15611)
!15635 = !DILocation(line: 196, column: 2, scope: !15603, inlinedAt: !15611)
!15636 = !DILocation(line: 197, column: 1, scope: !15603, inlinedAt: !15611)
!15637 = !DILocation(line: 399, column: 25, scope: !15564)
!15638 = !DILocation(line: 399, column: 22, scope: !15564)
!15639 = !DILocation(line: 399, column: 2, scope: !15564)
!15640 = !DILocation(line: 400, column: 1, scope: !15564)
!15641 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13302, file: !13302, line: 136, type: !15521, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15642)
!15642 = !{!15643}
!15643 = !DILocalVariable(name: "thread", arg: 1, scope: !15641, file: !13302, line: 136, type: !2963)
!15644 = !DILocation(line: 0, scope: !15641)
!15645 = !DILocation(line: 138, column: 9, scope: !15641)
!15646 = !DILocation(line: 138, column: 2, scope: !15641)
!15647 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3064, file: !3064, line: 1137, type: !15604, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15648)
!15648 = !{!15649, !15650}
!15649 = !DILocalVariable(name: "pq", arg: 1, scope: !15647, file: !3064, line: 1137, type: !15606)
!15650 = !DILocalVariable(name: "thread", arg: 2, scope: !15647, file: !3064, line: 1137, type: !2963)
!15651 = !DILocation(line: 0, scope: !15647)
!15652 = !DILocation(line: 1139, column: 2, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15654, file: !3064, line: 1139, column: 2)
!15654 = distinct !DILexicalBlock(scope: !15647, file: !3064, line: 1139, column: 2)
!15655 = !DILocation(line: 1139, column: 2, scope: !15654)
!15656 = !DILocation(line: 1139, column: 2, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15653, file: !3064, line: 1139, column: 2)
!15658 = !DILocation(line: 1141, column: 33, scope: !15647)
!15659 = !DILocation(line: 1141, column: 2, scope: !15647)
!15660 = !DILocation(line: 1142, column: 1, scope: !15647)
!15661 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13302, file: !13302, line: 83, type: !15521, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15662)
!15662 = !{!15663}
!15663 = !DILocalVariable(name: "thread", arg: 1, scope: !15661, file: !13302, line: 83, type: !2963)
!15664 = !DILocation(line: 0, scope: !15661)
!15665 = !DILocation(line: 89, column: 16, scope: !15661)
!15666 = !DILocation(line: 89, column: 2, scope: !15661)
!15667 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !15668, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15670)
!15668 = !DISubroutineType(types: !15669)
!15669 = !{!3060, !15606}
!15670 = !{!15671}
!15671 = !DILocalVariable(name: "list", arg: 1, scope: !15667, file: !133, line: 294, type: !15606)
!15672 = !DILocation(line: 0, scope: !15667)
!15673 = !DILocation(line: 296, column: 9, scope: !15667)
!15674 = !DILocation(line: 296, column: 49, scope: !15667)
!15675 = !DILocation(line: 296, column: 2, scope: !15667)
!15676 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !133, file: !133, line: 443, type: !15677, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15679)
!15677 = !DISubroutineType(types: !15678)
!15678 = !{null, !3060, !3060}
!15679 = !{!15680, !15681, !15682}
!15680 = !DILocalVariable(name: "successor", arg: 1, scope: !15676, file: !133, line: 443, type: !3060)
!15681 = !DILocalVariable(name: "node", arg: 2, scope: !15676, file: !133, line: 443, type: !3060)
!15682 = !DILocalVariable(name: "prev", scope: !15676, file: !133, line: 445, type: !15683)
!15683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3060)
!15684 = !DILocation(line: 0, scope: !15676)
!15685 = !DILocation(line: 445, column: 39, scope: !15676)
!15686 = !DILocation(line: 447, column: 8, scope: !15676)
!15687 = !DILocation(line: 447, column: 13, scope: !15676)
!15688 = !DILocation(line: 448, column: 8, scope: !15676)
!15689 = !DILocation(line: 448, column: 13, scope: !15676)
!15690 = !DILocation(line: 449, column: 8, scope: !15676)
!15691 = !DILocation(line: 449, column: 13, scope: !15676)
!15692 = !DILocation(line: 450, column: 18, scope: !15676)
!15693 = !DILocation(line: 451, column: 1, scope: !15676)
!15694 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !133, file: !133, line: 341, type: !15695, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15697)
!15695 = !DISubroutineType(types: !15696)
!15696 = !{!3060, !15606, !3060}
!15697 = !{!15698, !15699}
!15698 = !DILocalVariable(name: "list", arg: 1, scope: !15694, file: !133, line: 341, type: !15606)
!15699 = !DILocalVariable(name: "node", arg: 2, scope: !15694, file: !133, line: 342, type: !3060)
!15700 = !DILocation(line: 0, scope: !15694)
!15701 = !DILocation(line: 344, column: 15, scope: !15694)
!15702 = !DILocation(line: 344, column: 9, scope: !15694)
!15703 = !DILocation(line: 344, column: 26, scope: !15694)
!15704 = !DILocation(line: 344, column: 2, scope: !15694)
!15705 = distinct !DISubprogram(name: "sys_dlist_append", scope: !133, file: !133, line: 404, type: !15706, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15708)
!15706 = !DISubroutineType(types: !15707)
!15707 = !{null, !15606, !3060}
!15708 = !{!15709, !15710, !15711}
!15709 = !DILocalVariable(name: "list", arg: 1, scope: !15705, file: !133, line: 404, type: !15606)
!15710 = !DILocalVariable(name: "node", arg: 2, scope: !15705, file: !133, line: 404, type: !3060)
!15711 = !DILocalVariable(name: "tail", scope: !15705, file: !133, line: 406, type: !15683)
!15712 = !DILocation(line: 0, scope: !15705)
!15713 = !DILocation(line: 406, column: 34, scope: !15705)
!15714 = !DILocation(line: 408, column: 8, scope: !15705)
!15715 = !DILocation(line: 408, column: 13, scope: !15705)
!15716 = !DILocation(line: 409, column: 8, scope: !15705)
!15717 = !DILocation(line: 409, column: 13, scope: !15705)
!15718 = !DILocation(line: 411, column: 8, scope: !15705)
!15719 = !DILocation(line: 411, column: 13, scope: !15705)
!15720 = !DILocation(line: 412, column: 13, scope: !15705)
!15721 = !DILocation(line: 413, column: 1, scope: !15705)
!15722 = distinct !DISubprogram(name: "update_cache", scope: !3064, file: !3064, line: 559, type: !13259, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15723)
!15723 = !{!15724, !15725}
!15724 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15722, file: !3064, line: 559, type: !103)
!15725 = !DILocalVariable(name: "thread", scope: !15722, file: !3064, line: 562, type: !2963)
!15726 = !DILocation(line: 0, scope: !15722)
!15727 = !DILocation(line: 239, column: 9, scope: !15728, inlinedAt: !15731)
!15728 = distinct !DISubprogram(name: "runq_best", scope: !3064, file: !3064, line: 237, type: !15729, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!15729 = !DISubroutineType(types: !15730)
!15730 = !{!2963}
!15731 = distinct !DILocation(line: 314, column: 28, scope: !15732, inlinedAt: !15735)
!15732 = distinct !DISubprogram(name: "next_up", scope: !3064, file: !3064, line: 312, type: !15729, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15733)
!15733 = !{!15734}
!15734 = !DILocalVariable(name: "thread", scope: !15732, file: !3064, line: 314, type: !2963)
!15735 = distinct !DILocation(line: 562, column: 28, scope: !15722)
!15736 = !DILocation(line: 0, scope: !15732, inlinedAt: !15735)
!15737 = !DILocation(line: 340, column: 17, scope: !15732, inlinedAt: !15735)
!15738 = !DILocation(line: 340, column: 9, scope: !15732, inlinedAt: !15735)
!15739 = !DILocalVariable(name: "thread", arg: 1, scope: !15740, file: !3064, line: 127, type: !2963)
!15740 = distinct !DISubprogram(name: "should_preempt", scope: !3064, file: !3064, line: 127, type: !15741, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15743)
!15741 = !DISubroutineType(types: !15742)
!15742 = !{!119, !2963, !103}
!15743 = !{!15739, !15744}
!15744 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15740, file: !3064, line: 128, type: !103)
!15745 = !DILocation(line: 0, scope: !15740, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 564, column: 6, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15722, file: !3064, line: 564, column: 6)
!15748 = !DILocation(line: 133, column: 17, scope: !15749, inlinedAt: !15746)
!15749 = distinct !DILexicalBlock(scope: !15740, file: !3064, line: 133, column: 6)
!15750 = !DILocation(line: 0, scope: !15747)
!15751 = !DILocation(line: 133, column: 6, scope: !15740, inlinedAt: !15746)
!15752 = !DILocation(line: 137, column: 2, scope: !15753, inlinedAt: !15746)
!15753 = distinct !DILexicalBlock(scope: !15754, file: !3064, line: 137, column: 2)
!15754 = distinct !DILexicalBlock(scope: !15740, file: !3064, line: 137, column: 2)
!15755 = !DILocation(line: 137, column: 2, scope: !15754, inlinedAt: !15746)
!15756 = !DILocation(line: 137, column: 2, scope: !15757, inlinedAt: !15746)
!15757 = distinct !DILexicalBlock(scope: !15753, file: !3064, line: 137, column: 2)
!15758 = !DILocation(line: 140, column: 6, scope: !15759, inlinedAt: !15746)
!15759 = distinct !DILexicalBlock(scope: !15740, file: !3064, line: 140, column: 6)
!15760 = !DILocation(line: 140, column: 6, scope: !15740, inlinedAt: !15746)
!15761 = !DILocation(line: 150, column: 9, scope: !15762, inlinedAt: !15746)
!15762 = distinct !DILexicalBlock(scope: !15740, file: !3064, line: 149, column: 6)
!15763 = !DILocation(line: 149, column: 6, scope: !15740, inlinedAt: !15746)
!15764 = !DILocation(line: 157, column: 6, scope: !15765, inlinedAt: !15746)
!15765 = distinct !DILexicalBlock(scope: !15740, file: !3064, line: 157, column: 6)
!15766 = !DILocation(line: 564, column: 6, scope: !15722)
!15767 = !DILocation(line: 566, column: 14, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15769, file: !3064, line: 566, column: 7)
!15769 = distinct !DILexicalBlock(scope: !15747, file: !3064, line: 564, column: 42)
!15770 = !DILocation(line: 566, column: 7, scope: !15769)
!15771 = !DILocation(line: 567, column: 4, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15768, file: !3064, line: 566, column: 27)
!15773 = !DILocation(line: 568, column: 3, scope: !15772)
!15774 = !DILocation(line: 585, column: 1, scope: !15722)
!15775 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3064, file: !3064, line: 1144, type: !15776, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15778)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{!2963, !15606}
!15778 = !{!15779, !15780, !15781}
!15779 = !DILocalVariable(name: "pq", arg: 1, scope: !15775, file: !3064, line: 1144, type: !15606)
!15780 = !DILocalVariable(name: "thread", scope: !15775, file: !3064, line: 1146, type: !2963)
!15781 = !DILocalVariable(name: "n", scope: !15775, file: !3064, line: 1147, type: !3060)
!15782 = !DILocation(line: 0, scope: !15775)
!15783 = !DILocation(line: 1147, column: 19, scope: !15775)
!15784 = !DILocation(line: 1152, column: 2, scope: !15775)
!15785 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13302, file: !13302, line: 115, type: !15521, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15786)
!15786 = !{!15787}
!15787 = !DILocalVariable(name: "thread", arg: 1, scope: !15785, file: !13302, line: 115, type: !2963)
!15788 = !DILocation(line: 0, scope: !15785)
!15789 = !DILocation(line: 117, column: 46, scope: !15785)
!15790 = !DILocation(line: 117, column: 10, scope: !15785)
!15791 = !DILocation(line: 117, column: 9, scope: !15785)
!15792 = !DILocation(line: 117, column: 2, scope: !15785)
!15793 = distinct !DISubprogram(name: "is_preempt", scope: !3064, file: !3064, line: 62, type: !15354, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15794)
!15794 = !{!15795}
!15795 = !DILocalVariable(name: "thread", arg: 1, scope: !15793, file: !3064, line: 62, type: !2963)
!15796 = !DILocation(line: 0, scope: !15793)
!15797 = !DILocation(line: 65, column: 22, scope: !15793)
!15798 = !DILocation(line: 65, column: 30, scope: !15793)
!15799 = !DILocation(line: 65, column: 2, scope: !15793)
!15800 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14105, file: !14105, line: 35, type: !15801, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15805)
!15801 = !DISubroutineType(types: !15802)
!15802 = !{!119, !15803}
!15803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15804, size: 32)
!15804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3014)
!15805 = !{!15806}
!15806 = !DILocalVariable(name: "to", arg: 1, scope: !15800, file: !14105, line: 35, type: !15803)
!15807 = !DILocation(line: 0, scope: !15800)
!15808 = !DILocation(line: 37, column: 35, scope: !15800)
!15809 = !DILocation(line: 37, column: 10, scope: !15800)
!15810 = !DILocation(line: 37, column: 9, scope: !15800)
!15811 = !DILocation(line: 37, column: 2, scope: !15800)
!15812 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !133, file: !133, line: 225, type: !15813, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15817)
!15813 = !DISubroutineType(types: !15814)
!15814 = !{!119, !15815}
!15815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15816, size: 32)
!15816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2973)
!15817 = !{!15818}
!15818 = !DILocalVariable(name: "node", arg: 1, scope: !15812, file: !133, line: 225, type: !15815)
!15819 = !DILocation(line: 0, scope: !15812)
!15820 = !DILocation(line: 227, column: 15, scope: !15812)
!15821 = !DILocation(line: 227, column: 20, scope: !15812)
!15822 = !DILocation(line: 227, column: 2, scope: !15812)
!15823 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !133, file: !133, line: 325, type: !15695, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15824)
!15824 = !{!15825, !15826}
!15825 = !DILocalVariable(name: "list", arg: 1, scope: !15823, file: !133, line: 325, type: !15606)
!15826 = !DILocalVariable(name: "node", arg: 2, scope: !15823, file: !133, line: 326, type: !3060)
!15827 = !DILocation(line: 0, scope: !15823)
!15828 = !DILocation(line: 328, column: 24, scope: !15823)
!15829 = !DILocation(line: 328, column: 15, scope: !15823)
!15830 = !DILocation(line: 328, column: 9, scope: !15823)
!15831 = !DILocation(line: 328, column: 45, scope: !15823)
!15832 = !DILocation(line: 328, column: 2, scope: !15823)
!15833 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !15834, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15836)
!15834 = !DISubroutineType(types: !15835)
!15835 = !{!119, !15606}
!15836 = !{!15837}
!15837 = !DILocalVariable(name: "list", arg: 1, scope: !15833, file: !133, line: 266, type: !15606)
!15838 = !DILocation(line: 0, scope: !15833)
!15839 = !DILocation(line: 268, column: 15, scope: !15833)
!15840 = !DILocation(line: 268, column: 20, scope: !15833)
!15841 = !DILocation(line: 268, column: 2, scope: !15833)
!15842 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !133, file: !133, line: 496, type: !15843, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15845)
!15843 = !DISubroutineType(types: !15844)
!15844 = !{null, !3060}
!15845 = !{!15846, !15847, !15848}
!15846 = !DILocalVariable(name: "node", arg: 1, scope: !15842, file: !133, line: 496, type: !3060)
!15847 = !DILocalVariable(name: "prev", scope: !15842, file: !133, line: 498, type: !15683)
!15848 = !DILocalVariable(name: "next", scope: !15842, file: !133, line: 499, type: !15683)
!15849 = !DILocation(line: 0, scope: !15842)
!15850 = !DILocation(line: 498, column: 34, scope: !15842)
!15851 = !DILocation(line: 499, column: 34, scope: !15842)
!15852 = !DILocation(line: 501, column: 8, scope: !15842)
!15853 = !DILocation(line: 501, column: 13, scope: !15842)
!15854 = !DILocation(line: 502, column: 8, scope: !15842)
!15855 = !DILocation(line: 502, column: 13, scope: !15842)
!15856 = !DILocation(line: 503, column: 2, scope: !15842)
!15857 = !DILocation(line: 504, column: 1, scope: !15842)
!15858 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !15843, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15859)
!15859 = !{!15860}
!15860 = !DILocalVariable(name: "node", arg: 1, scope: !15858, file: !133, line: 211, type: !3060)
!15861 = !DILocation(line: 0, scope: !15858)
!15862 = !DILocation(line: 213, column: 8, scope: !15858)
!15863 = !DILocation(line: 213, column: 13, scope: !15858)
!15864 = !DILocation(line: 214, column: 8, scope: !15858)
!15865 = !DILocation(line: 214, column: 13, scope: !15858)
!15866 = !DILocation(line: 215, column: 1, scope: !15858)
!15867 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13302, file: !13302, line: 131, type: !15868, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15870)
!15868 = !DISubroutineType(types: !15869)
!15869 = !{!119, !2963, !108}
!15870 = !{!15871, !15872}
!15871 = !DILocalVariable(name: "thread", arg: 1, scope: !15867, file: !13302, line: 131, type: !2963)
!15872 = !DILocalVariable(name: "state", arg: 2, scope: !15867, file: !13302, line: 131, type: !108)
!15873 = !DILocation(line: 0, scope: !15867)
!15874 = !DILocation(line: 133, column: 23, scope: !15867)
!15875 = !DILocation(line: 133, column: 10, scope: !15867)
!15876 = !DILocation(line: 133, column: 36, scope: !15867)
!15877 = !DILocation(line: 133, column: 45, scope: !15867)
!15878 = !DILocation(line: 133, column: 2, scope: !15867)
!15879 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13302, file: !13302, line: 211, type: !15168, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15880)
!15880 = !{!15881, !15882}
!15881 = !DILocalVariable(name: "prio", arg: 1, scope: !15879, file: !13302, line: 211, type: !103)
!15882 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15879, file: !13302, line: 211, type: !103)
!15883 = !DILocation(line: 0, scope: !15879)
!15884 = !DILocation(line: 213, column: 9, scope: !15879)
!15885 = !DILocation(line: 213, column: 2, scope: !15879)
!15886 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13302, file: !13302, line: 206, type: !15168, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15887)
!15887 = !{!15888, !15889}
!15888 = !DILocalVariable(name: "prio1", arg: 1, scope: !15886, file: !13302, line: 206, type: !103)
!15889 = !DILocalVariable(name: "prio2", arg: 2, scope: !15886, file: !13302, line: 206, type: !103)
!15890 = !DILocation(line: 0, scope: !15886)
!15891 = !DILocation(line: 208, column: 15, scope: !15886)
!15892 = !DILocation(line: 208, column: 2, scope: !15886)
!15893 = distinct !DISubprogram(name: "z_ready_thread", scope: !3064, file: !3064, line: 635, type: !15336, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15894)
!15894 = !{!15895, !15896, !15898}
!15895 = !DILocalVariable(name: "thread", arg: 1, scope: !15893, file: !3064, line: 635, type: !2963)
!15896 = !DILocalVariable(name: "__i", scope: !15897, file: !3064, line: 637, type: !15370)
!15897 = distinct !DILexicalBlock(scope: !15893, file: !3064, line: 637, column: 2)
!15898 = !DILocalVariable(name: "__key", scope: !15897, file: !3064, line: 637, type: !15370)
!15899 = !DILocation(line: 0, scope: !15893)
!15900 = !DILocation(line: 0, scope: !15897)
!15901 = !DILocation(line: 0, scope: !15378, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 637, column: 2, scope: !15897)
!15903 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !15902)
!15905 = !DILocation(line: 0, scope: !15387, inlinedAt: !15904)
!15906 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !15902)
!15907 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !15902)
!15908 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !15902)
!15909 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !15902)
!15910 = !DILocation(line: 639, column: 4, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15912, file: !3064, line: 638, column: 41)
!15912 = distinct !DILexicalBlock(scope: !15913, file: !3064, line: 638, column: 7)
!15913 = distinct !DILexicalBlock(scope: !15914, file: !3064, line: 637, column: 26)
!15914 = distinct !DILexicalBlock(scope: !15897, file: !3064, line: 637, column: 2)
!15915 = !DILocation(line: 0, scope: !15412, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 637, column: 2, scope: !15914)
!15917 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !15916)
!15918 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !15916)
!15919 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !15916)
!15920 = !DILocation(line: 0, scope: !15426, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !15916)
!15922 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !15921)
!15923 = !DILocation(line: 642, column: 1, scope: !15893)
!15924 = distinct !DISubprogram(name: "ready_thread", scope: !3064, file: !3064, line: 617, type: !15336, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15925)
!15925 = !{!15926}
!15926 = !DILocalVariable(name: "thread", arg: 1, scope: !15924, file: !3064, line: 617, type: !2963)
!15927 = !DILocation(line: 0, scope: !15924)
!15928 = !DILocation(line: 626, column: 7, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15924, file: !3064, line: 626, column: 6)
!15930 = !DILocation(line: 626, column: 34, scope: !15929)
!15931 = !DILocation(line: 626, column: 37, scope: !15929)
!15932 = !DILocation(line: 626, column: 6, scope: !15924)
!15933 = !DILocation(line: 0, scope: !15589, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 629, column: 3, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15929, file: !3064, line: 626, column: 64)
!15936 = !DILocation(line: 252, column: 15, scope: !15589, inlinedAt: !15934)
!15937 = !DILocation(line: 252, column: 28, scope: !15589, inlinedAt: !15934)
!15938 = !DILocation(line: 0, scope: !15596, inlinedAt: !15939)
!15939 = distinct !DILocation(line: 254, column: 3, scope: !15600, inlinedAt: !15934)
!15940 = !DILocation(line: 0, scope: !15603, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 229, column: 2, scope: !15596, inlinedAt: !15939)
!15942 = !DILocation(line: 186, column: 2, scope: !15613, inlinedAt: !15941)
!15943 = !DILocation(line: 186, column: 2, scope: !15614, inlinedAt: !15941)
!15944 = !DILocation(line: 186, column: 2, scope: !15617, inlinedAt: !15941)
!15945 = !DILocation(line: 188, column: 2, scope: !15619, inlinedAt: !15941)
!15946 = !DILocation(line: 188, column: 2, scope: !15621, inlinedAt: !15941)
!15947 = !DILocation(line: 0, scope: !15619, inlinedAt: !15941)
!15948 = !DILocation(line: 189, column: 7, scope: !15624, inlinedAt: !15941)
!15949 = !DILocation(line: 189, column: 35, scope: !15624, inlinedAt: !15941)
!15950 = !DILocation(line: 189, column: 7, scope: !15625, inlinedAt: !15941)
!15951 = !DILocation(line: 191, column: 21, scope: !15629, inlinedAt: !15941)
!15952 = !DILocation(line: 190, column: 4, scope: !15629, inlinedAt: !15941)
!15953 = !DILocation(line: 192, column: 4, scope: !15629, inlinedAt: !15941)
!15954 = distinct !{!15954, !15945, !15955}
!15955 = !DILocation(line: 194, column: 2, scope: !15619, inlinedAt: !15941)
!15956 = !DILocation(line: 196, column: 37, scope: !15603, inlinedAt: !15941)
!15957 = !DILocation(line: 196, column: 2, scope: !15603, inlinedAt: !15941)
!15958 = !DILocation(line: 197, column: 1, scope: !15603, inlinedAt: !15941)
!15959 = !DILocation(line: 630, column: 3, scope: !15935)
!15960 = !DILocation(line: 632, column: 2, scope: !15935)
!15961 = !DILocation(line: 633, column: 1, scope: !15924)
!15962 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13302, file: !13302, line: 120, type: !15521, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15963)
!15963 = !{!15964}
!15964 = !DILocalVariable(name: "thread", arg: 1, scope: !15962, file: !13302, line: 120, type: !2963)
!15965 = !DILocation(line: 0, scope: !15962)
!15966 = !DILocation(line: 122, column: 12, scope: !15962)
!15967 = !DILocation(line: 122, column: 62, scope: !15962)
!15968 = !DILocation(line: 123, column: 4, scope: !15962)
!15969 = !DILocation(line: 122, column: 2, scope: !15962)
!15970 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3064, file: !3064, line: 644, type: !15336, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !15971)
!15971 = !{!15972, !15973, !15975}
!15972 = !DILocalVariable(name: "thread", arg: 1, scope: !15970, file: !3064, line: 644, type: !2963)
!15973 = !DILocalVariable(name: "__i", scope: !15974, file: !3064, line: 646, type: !15370)
!15974 = distinct !DILexicalBlock(scope: !15970, file: !3064, line: 646, column: 2)
!15975 = !DILocalVariable(name: "__key", scope: !15974, file: !3064, line: 646, type: !15370)
!15976 = !DILocation(line: 0, scope: !15970)
!15977 = !DILocation(line: 0, scope: !15974)
!15978 = !DILocation(line: 0, scope: !15378, inlinedAt: !15979)
!15979 = distinct !DILocation(line: 646, column: 2, scope: !15974)
!15980 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !15979)
!15982 = !DILocation(line: 0, scope: !15387, inlinedAt: !15981)
!15983 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !15979)
!15984 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !15979)
!15985 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !15979)
!15986 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !15979)
!15987 = !DILocation(line: 647, column: 3, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15989, file: !3064, line: 646, column: 26)
!15989 = distinct !DILexicalBlock(scope: !15974, file: !3064, line: 646, column: 2)
!15990 = !DILocation(line: 0, scope: !15412, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 646, column: 2, scope: !15989)
!15992 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !15991)
!15993 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !15991)
!15994 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !15991)
!15995 = !DILocation(line: 0, scope: !15426, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !15991)
!15997 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !15996)
!15998 = !DILocation(line: 649, column: 1, scope: !15970)
!15999 = distinct !DISubprogram(name: "z_sched_start", scope: !3064, file: !3064, line: 651, type: !15336, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16000)
!16000 = !{!16001, !16002}
!16001 = !DILocalVariable(name: "thread", arg: 1, scope: !15999, file: !3064, line: 651, type: !2963)
!16002 = !DILocalVariable(name: "key", scope: !15999, file: !3064, line: 653, type: !15370)
!16003 = !DILocation(line: 0, scope: !15999)
!16004 = !DILocation(line: 0, scope: !15378, inlinedAt: !16005)
!16005 = distinct !DILocation(line: 653, column: 25, scope: !15999)
!16006 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16005)
!16008 = !DILocation(line: 0, scope: !15387, inlinedAt: !16007)
!16009 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16005)
!16010 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16005)
!16011 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16005)
!16012 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16005)
!16013 = !DILocation(line: 655, column: 6, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !15999, file: !3064, line: 655, column: 6)
!16015 = !DILocation(line: 655, column: 6, scope: !15999)
!16016 = !DILocation(line: 0, scope: !15412, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 656, column: 3, scope: !16018)
!16018 = distinct !DILexicalBlock(scope: !16014, file: !3064, line: 655, column: 36)
!16019 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16017)
!16020 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16017)
!16021 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16017)
!16022 = !DILocation(line: 0, scope: !15426, inlinedAt: !16023)
!16023 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16017)
!16024 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16023)
!16025 = !DILocation(line: 657, column: 3, scope: !16018)
!16026 = !DILocation(line: 660, column: 2, scope: !15999)
!16027 = !DILocation(line: 661, column: 2, scope: !15999)
!16028 = !DILocation(line: 662, column: 2, scope: !15999)
!16029 = !DILocation(line: 663, column: 1, scope: !15999)
!16030 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13302, file: !13302, line: 126, type: !15521, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16031)
!16031 = !{!16032}
!16032 = !DILocalVariable(name: "thread", arg: 1, scope: !16030, file: !13302, line: 126, type: !2963)
!16033 = !DILocation(line: 0, scope: !16030)
!16034 = !DILocation(line: 128, column: 23, scope: !16030)
!16035 = !DILocation(line: 128, column: 36, scope: !16030)
!16036 = !DILocation(line: 128, column: 56, scope: !16030)
!16037 = !DILocation(line: 128, column: 2, scope: !16030)
!16038 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13302, file: !13302, line: 155, type: !15336, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16039)
!16039 = !{!16040}
!16040 = !DILocalVariable(name: "thread", arg: 1, scope: !16038, file: !13302, line: 155, type: !2963)
!16041 = !DILocation(line: 0, scope: !16038)
!16042 = !DILocation(line: 157, column: 15, scope: !16038)
!16043 = !DILocation(line: 157, column: 28, scope: !16038)
!16044 = !DILocation(line: 158, column: 1, scope: !16038)
!16045 = distinct !DISubprogram(name: "z_reschedule", scope: !3064, file: !3064, line: 967, type: !15413, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16046)
!16046 = !{!16047, !16048}
!16047 = !DILocalVariable(name: "lock", arg: 1, scope: !16045, file: !3064, line: 967, type: !15381)
!16048 = !DILocalVariable(name: "key", arg: 2, scope: !16045, file: !3064, line: 967, type: !15370)
!16049 = !DILocation(line: 0, scope: !16045)
!16050 = !DILocation(line: 969, column: 6, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16045, file: !3064, line: 969, column: 6)
!16052 = !DILocation(line: 969, column: 23, scope: !16051)
!16053 = !DILocation(line: 969, column: 26, scope: !16051)
!16054 = !DILocation(line: 969, column: 6, scope: !16045)
!16055 = !DILocalVariable(name: "key", arg: 2, scope: !16056, file: !13404, line: 193, type: !15370)
!16056 = distinct !DISubprogram(name: "z_swap", scope: !13404, file: !13404, line: 193, type: !16057, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16059)
!16057 = !DISubroutineType(types: !16058)
!16058 = !{!103, !15381, !15370}
!16059 = !{!16060, !16055}
!16060 = !DILocalVariable(name: "lock", arg: 1, scope: !16056, file: !13404, line: 193, type: !15381)
!16061 = !DILocation(line: 0, scope: !16056, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 970, column: 3, scope: !16063)
!16063 = distinct !DILexicalBlock(scope: !16051, file: !3064, line: 969, column: 39)
!16064 = !DILocalVariable(name: "l", arg: 1, scope: !16065, file: !149, line: 221, type: !15381)
!16065 = distinct !DISubprogram(name: "k_spin_release", scope: !149, file: !149, line: 221, type: !16066, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16068)
!16066 = !DISubroutineType(types: !16067)
!16067 = !{null, !15381}
!16068 = !{!16064}
!16069 = !DILocation(line: 0, scope: !16065, inlinedAt: !16070)
!16070 = distinct !DILocation(line: 195, column: 2, scope: !16056, inlinedAt: !16062)
!16071 = !DILocation(line: 225, column: 2, scope: !16072, inlinedAt: !16070)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !149, line: 225, column: 2)
!16073 = distinct !DILexicalBlock(scope: !16065, file: !149, line: 225, column: 2)
!16074 = !DILocation(line: 225, column: 2, scope: !16073, inlinedAt: !16070)
!16075 = !DILocation(line: 225, column: 2, scope: !16076, inlinedAt: !16070)
!16076 = distinct !DILexicalBlock(scope: !16072, file: !149, line: 225, column: 2)
!16077 = !DILocation(line: 196, column: 9, scope: !16056, inlinedAt: !16062)
!16078 = !DILocation(line: 971, column: 2, scope: !16063)
!16079 = !DILocation(line: 0, scope: !15412, inlinedAt: !16080)
!16080 = distinct !DILocation(line: 972, column: 3, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16051, file: !3064, line: 971, column: 9)
!16082 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16080)
!16083 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16080)
!16084 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16080)
!16085 = !DILocation(line: 0, scope: !15426, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16080)
!16087 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16086)
!16088 = !DILocation(line: 975, column: 1, scope: !16045)
!16089 = distinct !DISubprogram(name: "resched", scope: !3064, file: !3064, line: 940, type: !16090, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16092)
!16090 = !DISubroutineType(types: !16091)
!16091 = !{!119, !108}
!16092 = !{!16093}
!16093 = !DILocalVariable(name: "key", arg: 1, scope: !16089, file: !3064, line: 940, type: !108)
!16094 = !DILocation(line: 0, scope: !16089)
!16095 = !DILocalVariable(name: "key", arg: 1, scope: !16096, file: !8072, line: 112, type: !32)
!16096 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !8072, file: !8072, line: 112, type: !16097, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16099)
!16097 = !DISubroutineType(types: !16098)
!16098 = !{!119, !32}
!16099 = !{!16095}
!16100 = !DILocation(line: 0, scope: !16096, inlinedAt: !16101)
!16101 = distinct !DILocation(line: 946, column: 9, scope: !16089)
!16102 = !DILocation(line: 115, column: 13, scope: !16096, inlinedAt: !16101)
!16103 = !DILocation(line: 946, column: 32, scope: !16089)
!16104 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !16108)
!16105 = distinct !DISubprogram(name: "__get_IPSR", scope: !7951, file: !7951, line: 1027, type: !8038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16106)
!16106 = !{!16107}
!16107 = !DILocalVariable(name: "result", scope: !16105, file: !7951, line: 1029, type: !108)
!16108 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !16110)
!16109 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8945, file: !8945, line: 46, type: !8946, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!16110 = distinct !DILocation(line: 946, column: 36, scope: !16089)
!16111 = !{i64 7016054}
!16112 = !DILocation(line: 0, scope: !16105, inlinedAt: !16108)
!16113 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !16110)
!16114 = !DILocation(line: 946, column: 2, scope: !16089)
!16115 = distinct !DISubprogram(name: "need_swap", scope: !3064, file: !3064, line: 953, type: !8946, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16116)
!16116 = !{!16117}
!16117 = !DILocalVariable(name: "new_thread", scope: !16115, file: !3064, line: 959, type: !2963)
!16118 = !DILocation(line: 962, column: 31, scope: !16115)
!16119 = !DILocation(line: 0, scope: !16115)
!16120 = !DILocation(line: 963, column: 23, scope: !16115)
!16121 = !DILocation(line: 963, column: 20, scope: !16115)
!16122 = !DILocation(line: 963, column: 2, scope: !16115)
!16123 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13404, file: !13404, line: 181, type: !7961, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16124)
!16124 = !{!16125, !16126}
!16125 = !DILocalVariable(name: "key", arg: 1, scope: !16123, file: !13404, line: 181, type: !32)
!16126 = !DILocalVariable(name: "ret", scope: !16123, file: !13404, line: 183, type: !103)
!16127 = !DILocation(line: 0, scope: !16123)
!16128 = !DILocation(line: 185, column: 8, scope: !16123)
!16129 = !DILocation(line: 186, column: 2, scope: !16123)
!16130 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3064, file: !3064, line: 665, type: !15336, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16131)
!16131 = !{!16132, !16133, !16135}
!16132 = !DILocalVariable(name: "thread", arg: 1, scope: !16130, file: !3064, line: 665, type: !2963)
!16133 = !DILocalVariable(name: "__i", scope: !16134, file: !3064, line: 671, type: !15370)
!16134 = distinct !DILexicalBlock(scope: !16130, file: !3064, line: 671, column: 2)
!16135 = !DILocalVariable(name: "__key", scope: !16134, file: !3064, line: 671, type: !15370)
!16136 = !DILocation(line: 0, scope: !16130)
!16137 = !DILocation(line: 669, column: 8, scope: !16130)
!16138 = !DILocation(line: 0, scope: !16134)
!16139 = !DILocation(line: 0, scope: !15378, inlinedAt: !16140)
!16140 = distinct !DILocation(line: 671, column: 2, scope: !16134)
!16141 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16142)
!16142 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16140)
!16143 = !DILocation(line: 0, scope: !15387, inlinedAt: !16142)
!16144 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16140)
!16145 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16140)
!16146 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16140)
!16147 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16140)
!16148 = !DILocation(line: 672, column: 7, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16150, file: !3064, line: 672, column: 7)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !3064, line: 671, column: 26)
!16151 = distinct !DILexicalBlock(scope: !16134, file: !3064, line: 671, column: 2)
!16152 = !DILocation(line: 672, column: 7, scope: !16150)
!16153 = !DILocation(line: 0, scope: !15572, inlinedAt: !16154)
!16154 = distinct !DILocation(line: 673, column: 4, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16149, file: !3064, line: 672, column: 35)
!16156 = !DILocation(line: 266, column: 15, scope: !15572, inlinedAt: !16154)
!16157 = !DILocation(line: 266, column: 28, scope: !15572, inlinedAt: !16154)
!16158 = !DILocation(line: 0, scope: !15580, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 268, column: 3, scope: !15584, inlinedAt: !16154)
!16160 = !DILocation(line: 234, column: 2, scope: !15580, inlinedAt: !16159)
!16161 = !DILocation(line: 674, column: 3, scope: !16155)
!16162 = !DILocation(line: 675, column: 3, scope: !16150)
!16163 = !DILocation(line: 676, column: 26, scope: !16150)
!16164 = !DILocation(line: 676, column: 23, scope: !16150)
!16165 = !DILocation(line: 676, column: 3, scope: !16150)
!16166 = !DILocation(line: 0, scope: !15412, inlinedAt: !16167)
!16167 = distinct !DILocation(line: 671, column: 2, scope: !16151)
!16168 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16167)
!16169 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16167)
!16170 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16167)
!16171 = !DILocation(line: 0, scope: !15426, inlinedAt: !16172)
!16172 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16167)
!16173 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16172)
!16174 = !DILocation(line: 679, column: 16, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16130, file: !3064, line: 679, column: 6)
!16176 = !DILocation(line: 679, column: 13, scope: !16175)
!16177 = !DILocation(line: 679, column: 6, scope: !16130)
!16178 = !DILocation(line: 680, column: 3, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16175, file: !3064, line: 679, column: 26)
!16180 = !DILocation(line: 681, column: 2, scope: !16179)
!16181 = !DILocation(line: 684, column: 1, scope: !16130)
!16182 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14105, file: !14105, line: 52, type: !15354, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16183)
!16183 = !{!16184}
!16184 = !DILocalVariable(name: "thread", arg: 1, scope: !16182, file: !14105, line: 52, type: !2963)
!16185 = !DILocation(line: 0, scope: !16182)
!16186 = !DILocation(line: 54, column: 39, scope: !16182)
!16187 = !DILocation(line: 54, column: 9, scope: !16182)
!16188 = !DILocation(line: 54, column: 2, scope: !16182)
!16189 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13302, file: !13302, line: 141, type: !15336, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16190)
!16190 = !{!16191}
!16191 = !DILocalVariable(name: "thread", arg: 1, scope: !16189, file: !13302, line: 141, type: !2963)
!16192 = !DILocation(line: 0, scope: !16189)
!16193 = !DILocation(line: 143, column: 15, scope: !16189)
!16194 = !DILocation(line: 143, column: 28, scope: !16189)
!16195 = !DILocation(line: 146, column: 1, scope: !16189)
!16196 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13302, file: !13302, line: 73, type: !327, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!16197 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 75, column: 30, scope: !16196)
!16199 = !DILocation(line: 0, scope: !15387, inlinedAt: !16198)
!16200 = !DILocation(line: 75, column: 9, scope: !16196)
!16201 = !DILocation(line: 76, column: 1, scope: !16196)
!16202 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3064, file: !3064, line: 977, type: !8048, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16203)
!16203 = !{!16204}
!16204 = !DILocalVariable(name: "key", arg: 1, scope: !16202, file: !3064, line: 977, type: !108)
!16205 = !DILocation(line: 0, scope: !16202)
!16206 = !DILocation(line: 979, column: 6, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16202, file: !3064, line: 979, column: 6)
!16208 = !DILocation(line: 979, column: 6, scope: !16202)
!16209 = !DILocation(line: 980, column: 3, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16207, file: !3064, line: 979, column: 20)
!16211 = !DILocation(line: 981, column: 2, scope: !16210)
!16212 = !DILocation(line: 0, scope: !15426, inlinedAt: !16213)
!16213 = distinct !DILocation(line: 982, column: 3, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16207, file: !3064, line: 981, column: 9)
!16215 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16213)
!16216 = !DILocation(line: 985, column: 1, scope: !16202)
!16217 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3064, file: !3064, line: 695, type: !15336, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16218)
!16218 = !{!16219, !16220}
!16219 = !DILocalVariable(name: "thread", arg: 1, scope: !16217, file: !3064, line: 695, type: !2963)
!16220 = !DILocalVariable(name: "key", scope: !16217, file: !3064, line: 699, type: !15370)
!16221 = !DILocation(line: 0, scope: !16217)
!16222 = !DILocation(line: 0, scope: !15378, inlinedAt: !16223)
!16223 = distinct !DILocation(line: 699, column: 25, scope: !16217)
!16224 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16225)
!16225 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16223)
!16226 = !DILocation(line: 0, scope: !15387, inlinedAt: !16225)
!16227 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16223)
!16228 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16223)
!16229 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16223)
!16230 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16223)
!16231 = !DILocation(line: 702, column: 7, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16217, file: !3064, line: 702, column: 6)
!16233 = !DILocation(line: 702, column: 6, scope: !16217)
!16234 = !DILocation(line: 0, scope: !15412, inlinedAt: !16235)
!16235 = distinct !DILocation(line: 703, column: 3, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16232, file: !3064, line: 702, column: 38)
!16237 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16235)
!16238 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16235)
!16239 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16235)
!16240 = !DILocation(line: 0, scope: !15426, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16235)
!16242 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16241)
!16243 = !DILocation(line: 704, column: 3, scope: !16236)
!16244 = !DILocation(line: 707, column: 2, scope: !16217)
!16245 = !DILocation(line: 708, column: 2, scope: !16217)
!16246 = !DILocation(line: 710, column: 2, scope: !16217)
!16247 = !DILocation(line: 713, column: 1, scope: !16217)
!16248 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13302, file: !13302, line: 96, type: !15521, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16249)
!16249 = !{!16250}
!16250 = !DILocalVariable(name: "thread", arg: 1, scope: !16248, file: !13302, line: 96, type: !2963)
!16251 = !DILocation(line: 0, scope: !16248)
!16252 = !DILocation(line: 98, column: 23, scope: !16248)
!16253 = !DILocation(line: 98, column: 36, scope: !16248)
!16254 = !DILocation(line: 98, column: 57, scope: !16248)
!16255 = !DILocation(line: 98, column: 2, scope: !16248)
!16256 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13302, file: !13302, line: 148, type: !15336, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16257)
!16257 = !{!16258}
!16258 = !DILocalVariable(name: "thread", arg: 1, scope: !16256, file: !13302, line: 148, type: !2963)
!16259 = !DILocation(line: 0, scope: !16256)
!16260 = !DILocation(line: 150, column: 15, scope: !16256)
!16261 = !DILocation(line: 150, column: 28, scope: !16256)
!16262 = !DILocation(line: 153, column: 1, scope: !16256)
!16263 = distinct !DISubprogram(name: "z_pend_thread", scope: !3064, file: !3064, line: 770, type: !16264, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16270)
!16264 = !DISubroutineType(types: !16265)
!16265 = !{null, !2963, !2994, !16266}
!16266 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16267)
!16267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16268)
!16268 = !{!16269}
!16269 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16267, file: !105, line: 66, baseType: !104, size: 64)
!16270 = !{!16271, !16272, !16273, !16274, !16276}
!16271 = !DILocalVariable(name: "thread", arg: 1, scope: !16263, file: !3064, line: 770, type: !2963)
!16272 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16263, file: !3064, line: 770, type: !2994)
!16273 = !DILocalVariable(name: "timeout", arg: 3, scope: !16263, file: !3064, line: 771, type: !16266)
!16274 = !DILocalVariable(name: "__i", scope: !16275, file: !3064, line: 774, type: !15370)
!16275 = distinct !DILexicalBlock(scope: !16263, file: !3064, line: 774, column: 2)
!16276 = !DILocalVariable(name: "__key", scope: !16275, file: !3064, line: 774, type: !15370)
!16277 = !DILocation(line: 0, scope: !16263)
!16278 = !DILocation(line: 773, column: 2, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16280, file: !3064, line: 773, column: 2)
!16280 = distinct !DILexicalBlock(scope: !16263, file: !3064, line: 773, column: 2)
!16281 = !DILocation(line: 773, column: 2, scope: !16280)
!16282 = !DILocation(line: 773, column: 2, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16279, file: !3064, line: 773, column: 2)
!16284 = !DILocation(line: 0, scope: !16275)
!16285 = !DILocation(line: 0, scope: !15378, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 774, column: 2, scope: !16275)
!16287 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16286)
!16289 = !DILocation(line: 0, scope: !15387, inlinedAt: !16288)
!16290 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16286)
!16291 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16286)
!16292 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16286)
!16293 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16286)
!16294 = !DILocation(line: 775, column: 3, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !3064, line: 774, column: 26)
!16296 = distinct !DILexicalBlock(scope: !16275, file: !3064, line: 774, column: 2)
!16297 = !DILocation(line: 0, scope: !15412, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 774, column: 2, scope: !16296)
!16299 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16298)
!16300 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16298)
!16301 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16298)
!16302 = !DILocation(line: 0, scope: !15426, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16298)
!16304 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16303)
!16305 = !DILocation(line: 777, column: 1, scope: !16263)
!16306 = distinct !DISubprogram(name: "is_thread_dummy", scope: !3064, file: !3064, line: 79, type: !15521, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16307)
!16307 = !{!16308}
!16308 = !DILocalVariable(name: "thread", arg: 1, scope: !16306, file: !3064, line: 79, type: !2963)
!16309 = !DILocation(line: 0, scope: !16306)
!16310 = !DILocation(line: 81, column: 23, scope: !16306)
!16311 = !DILocation(line: 81, column: 36, scope: !16306)
!16312 = !DILocation(line: 81, column: 53, scope: !16306)
!16313 = !DILocation(line: 81, column: 2, scope: !16306)
!16314 = distinct !DISubprogram(name: "pend_locked", scope: !3064, file: !3064, line: 760, type: !16264, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16315)
!16315 = !{!16316, !16317, !16318}
!16316 = !DILocalVariable(name: "thread", arg: 1, scope: !16314, file: !3064, line: 760, type: !2963)
!16317 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16314, file: !3064, line: 760, type: !2994)
!16318 = !DILocalVariable(name: "timeout", arg: 3, scope: !16314, file: !3064, line: 761, type: !16266)
!16319 = !DILocation(line: 0, scope: !16314)
!16320 = !DILocation(line: 766, column: 2, scope: !16314)
!16321 = !DILocation(line: 767, column: 2, scope: !16314)
!16322 = !DILocation(line: 768, column: 1, scope: !16314)
!16323 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3064, file: !3064, line: 740, type: !16324, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16326)
!16324 = !DISubroutineType(types: !16325)
!16325 = !{null, !2963, !2994}
!16326 = !{!16327, !16328}
!16327 = !DILocalVariable(name: "thread", arg: 1, scope: !16323, file: !3064, line: 740, type: !2963)
!16328 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16323, file: !3064, line: 740, type: !2994)
!16329 = !DILocation(line: 0, scope: !16323)
!16330 = !DILocation(line: 742, column: 2, scope: !16323)
!16331 = !DILocation(line: 743, column: 2, scope: !16323)
!16332 = !DILocation(line: 747, column: 13, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16323, file: !3064, line: 747, column: 6)
!16334 = !DILocation(line: 747, column: 6, scope: !16323)
!16335 = !DILocation(line: 748, column: 16, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16333, file: !3064, line: 747, column: 22)
!16337 = !DILocation(line: 748, column: 26, scope: !16336)
!16338 = !DILocation(line: 749, column: 28, scope: !16336)
!16339 = !DILocation(line: 0, scope: !15603, inlinedAt: !16340)
!16340 = distinct !DILocation(line: 749, column: 3, scope: !16336)
!16341 = !DILocation(line: 186, column: 2, scope: !15613, inlinedAt: !16340)
!16342 = !DILocation(line: 186, column: 2, scope: !15614, inlinedAt: !16340)
!16343 = !DILocation(line: 186, column: 2, scope: !15617, inlinedAt: !16340)
!16344 = !DILocation(line: 188, column: 2, scope: !15619, inlinedAt: !16340)
!16345 = !DILocation(line: 188, column: 2, scope: !15621, inlinedAt: !16340)
!16346 = !DILocation(line: 0, scope: !15619, inlinedAt: !16340)
!16347 = !DILocation(line: 189, column: 7, scope: !15624, inlinedAt: !16340)
!16348 = !DILocation(line: 189, column: 35, scope: !15624, inlinedAt: !16340)
!16349 = !DILocation(line: 189, column: 7, scope: !15625, inlinedAt: !16340)
!16350 = !DILocation(line: 191, column: 21, scope: !15629, inlinedAt: !16340)
!16351 = !DILocation(line: 190, column: 4, scope: !15629, inlinedAt: !16340)
!16352 = !DILocation(line: 192, column: 4, scope: !15629, inlinedAt: !16340)
!16353 = distinct !{!16353, !16344, !16354}
!16354 = !DILocation(line: 194, column: 2, scope: !15619, inlinedAt: !16340)
!16355 = !DILocation(line: 196, column: 37, scope: !15603, inlinedAt: !16340)
!16356 = !DILocation(line: 196, column: 2, scope: !15603, inlinedAt: !16340)
!16357 = !DILocation(line: 197, column: 1, scope: !15603, inlinedAt: !16340)
!16358 = !DILocation(line: 751, column: 1, scope: !16323)
!16359 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3064, file: !3064, line: 753, type: !16360, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16362)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{null, !2963, !16266}
!16362 = !{!16363, !16364}
!16363 = !DILocalVariable(name: "thread", arg: 1, scope: !16359, file: !3064, line: 753, type: !2963)
!16364 = !DILocalVariable(name: "timeout", arg: 2, scope: !16359, file: !3064, line: 753, type: !16266)
!16365 = !DILocation(line: 0, scope: !16359)
!16366 = !DILocation(line: 755, column: 7, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16359, file: !3064, line: 755, column: 6)
!16368 = !DILocation(line: 755, column: 6, scope: !16359)
!16369 = !DILocation(line: 756, column: 3, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16367, file: !3064, line: 755, column: 41)
!16371 = !DILocation(line: 757, column: 2, scope: !16370)
!16372 = !DILocation(line: 758, column: 1, scope: !16359)
!16373 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14105, file: !14105, line: 47, type: !16360, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16374)
!16374 = !{!16375, !16376}
!16375 = !DILocalVariable(name: "thread", arg: 1, scope: !16373, file: !14105, line: 47, type: !2963)
!16376 = !DILocalVariable(name: "ticks", arg: 2, scope: !16373, file: !14105, line: 47, type: !16266)
!16377 = !DILocation(line: 0, scope: !16373)
!16378 = !DILocation(line: 49, column: 30, scope: !16373)
!16379 = !DILocation(line: 49, column: 2, scope: !16373)
!16380 = !DILocation(line: 50, column: 1, scope: !16373)
!16381 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3064, file: !3064, line: 795, type: !3020, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16382)
!16382 = !{!16383, !16384, !16385, !16387, !16388}
!16383 = !DILocalVariable(name: "timeout", arg: 1, scope: !16381, file: !3064, line: 795, type: !3022)
!16384 = !DILocalVariable(name: "thread", scope: !16381, file: !3064, line: 797, type: !2963)
!16385 = !DILocalVariable(name: "__i", scope: !16386, file: !3064, line: 800, type: !15370)
!16386 = distinct !DILexicalBlock(scope: !16381, file: !3064, line: 800, column: 2)
!16387 = !DILocalVariable(name: "__key", scope: !16386, file: !3064, line: 800, type: !15370)
!16388 = !DILocalVariable(name: "killed", scope: !16389, file: !3064, line: 801, type: !119)
!16389 = distinct !DILexicalBlock(scope: !16390, file: !3064, line: 800, column: 26)
!16390 = distinct !DILexicalBlock(scope: !16386, file: !3064, line: 800, column: 2)
!16391 = !DILocation(line: 0, scope: !16381)
!16392 = !DILocation(line: 797, column: 28, scope: !16381)
!16393 = !DILocation(line: 0, scope: !16386)
!16394 = !DILocation(line: 0, scope: !15378, inlinedAt: !16395)
!16395 = distinct !DILocation(line: 800, column: 2, scope: !16386)
!16396 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16397)
!16397 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16395)
!16398 = !DILocation(line: 0, scope: !15387, inlinedAt: !16397)
!16399 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16395)
!16400 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16395)
!16401 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16395)
!16402 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16395)
!16403 = !DILocation(line: 801, column: 27, scope: !16389)
!16404 = !DILocation(line: 801, column: 32, scope: !16389)
!16405 = !DILocation(line: 801, column: 61, scope: !16389)
!16406 = !DILocation(line: 0, scope: !16389)
!16407 = !DILocation(line: 804, column: 7, scope: !16389)
!16408 = !DILocation(line: 805, column: 21, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16410, file: !3064, line: 805, column: 8)
!16410 = distinct !DILexicalBlock(scope: !16411, file: !3064, line: 804, column: 16)
!16411 = distinct !DILexicalBlock(scope: !16389, file: !3064, line: 804, column: 7)
!16412 = !DILocation(line: 805, column: 31, scope: !16409)
!16413 = !DILocation(line: 805, column: 8, scope: !16410)
!16414 = !DILocation(line: 806, column: 5, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16409, file: !3064, line: 805, column: 40)
!16416 = !DILocation(line: 807, column: 4, scope: !16415)
!16417 = !DILocation(line: 808, column: 4, scope: !16410)
!16418 = !DILocation(line: 809, column: 4, scope: !16410)
!16419 = !DILocation(line: 810, column: 4, scope: !16410)
!16420 = !DILocation(line: 811, column: 3, scope: !16410)
!16421 = !DILocation(line: 0, scope: !15412, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 800, column: 2, scope: !16390)
!16423 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16422)
!16424 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16422)
!16425 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16422)
!16426 = !DILocation(line: 0, scope: !15426, inlinedAt: !16427)
!16427 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16422)
!16428 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16427)
!16429 = !DILocation(line: 813, column: 1, scope: !16381)
!16430 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3064, file: !3064, line: 779, type: !15336, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16431)
!16431 = !{!16432}
!16432 = !DILocalVariable(name: "thread", arg: 1, scope: !16430, file: !3064, line: 779, type: !2963)
!16433 = !DILocation(line: 0, scope: !16430)
!16434 = !DILocation(line: 781, column: 21, scope: !16430)
!16435 = !DILocation(line: 781, column: 2, scope: !16430)
!16436 = !DILocation(line: 782, column: 2, scope: !16430)
!16437 = !DILocation(line: 783, column: 15, scope: !16430)
!16438 = !DILocation(line: 783, column: 25, scope: !16430)
!16439 = !DILocation(line: 784, column: 1, scope: !16430)
!16440 = distinct !DISubprogram(name: "pended_on_thread", scope: !3064, file: !3064, line: 724, type: !16441, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16443)
!16441 = !DISubroutineType(types: !16442)
!16442 = !{!2994, !2963}
!16443 = !{!16444}
!16444 = !DILocalVariable(name: "thread", arg: 1, scope: !16440, file: !3064, line: 724, type: !2963)
!16445 = !DILocation(line: 0, scope: !16440)
!16446 = !DILocation(line: 726, column: 2, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16448, file: !3064, line: 726, column: 2)
!16448 = distinct !DILexicalBlock(scope: !16440, file: !3064, line: 726, column: 2)
!16449 = !DILocation(line: 726, column: 2, scope: !16448)
!16450 = !DILocation(line: 726, column: 2, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16447, file: !3064, line: 726, column: 2)
!16452 = !DILocation(line: 728, column: 2, scope: !16440)
!16453 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13302, file: !13302, line: 165, type: !15336, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16454)
!16454 = !{!16455}
!16455 = !DILocalVariable(name: "thread", arg: 1, scope: !16453, file: !13302, line: 165, type: !2963)
!16456 = !DILocation(line: 0, scope: !16453)
!16457 = !DILocation(line: 167, column: 15, scope: !16453)
!16458 = !DILocation(line: 167, column: 28, scope: !16453)
!16459 = !DILocation(line: 168, column: 1, scope: !16453)
!16460 = distinct !DISubprogram(name: "unready_thread", scope: !3064, file: !3064, line: 731, type: !15336, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16461)
!16461 = !{!16462}
!16462 = !DILocalVariable(name: "thread", arg: 1, scope: !16460, file: !3064, line: 731, type: !2963)
!16463 = !DILocation(line: 0, scope: !16460)
!16464 = !DILocation(line: 733, column: 6, scope: !16465)
!16465 = distinct !DILexicalBlock(scope: !16460, file: !3064, line: 733, column: 6)
!16466 = !DILocation(line: 733, column: 6, scope: !16460)
!16467 = !DILocation(line: 0, scope: !15572, inlinedAt: !16468)
!16468 = distinct !DILocation(line: 734, column: 3, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16465, file: !3064, line: 733, column: 34)
!16470 = !DILocation(line: 266, column: 15, scope: !15572, inlinedAt: !16468)
!16471 = !DILocation(line: 266, column: 28, scope: !15572, inlinedAt: !16468)
!16472 = !DILocation(line: 0, scope: !15580, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 268, column: 3, scope: !15584, inlinedAt: !16468)
!16474 = !DILocation(line: 234, column: 2, scope: !15580, inlinedAt: !16473)
!16475 = !DILocation(line: 735, column: 2, scope: !16469)
!16476 = !DILocation(line: 736, column: 25, scope: !16460)
!16477 = !DILocation(line: 736, column: 22, scope: !16460)
!16478 = !DILocation(line: 736, column: 2, scope: !16460)
!16479 = !DILocation(line: 737, column: 1, scope: !16460)
!16480 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13302, file: !13302, line: 160, type: !15336, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16481)
!16481 = !{!16482}
!16482 = !DILocalVariable(name: "thread", arg: 1, scope: !16480, file: !13302, line: 160, type: !2963)
!16483 = !DILocation(line: 0, scope: !16480)
!16484 = !DILocation(line: 162, column: 15, scope: !16480)
!16485 = !DILocation(line: 162, column: 28, scope: !16480)
!16486 = !DILocation(line: 163, column: 1, scope: !16480)
!16487 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3064, file: !3064, line: 786, type: !15336, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16488)
!16488 = !{!16489, !16490, !16492}
!16489 = !DILocalVariable(name: "thread", arg: 1, scope: !16487, file: !3064, line: 786, type: !2963)
!16490 = !DILocalVariable(name: "__i", scope: !16491, file: !3064, line: 788, type: !15370)
!16491 = distinct !DILexicalBlock(scope: !16487, file: !3064, line: 788, column: 2)
!16492 = !DILocalVariable(name: "__key", scope: !16491, file: !3064, line: 788, type: !15370)
!16493 = !DILocation(line: 0, scope: !16487)
!16494 = !DILocation(line: 0, scope: !16491)
!16495 = !DILocation(line: 0, scope: !15378, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 788, column: 2, scope: !16491)
!16497 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16498)
!16498 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16496)
!16499 = !DILocation(line: 0, scope: !15387, inlinedAt: !16498)
!16500 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16496)
!16501 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16496)
!16502 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16496)
!16503 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16496)
!16504 = !DILocation(line: 789, column: 3, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16506, file: !3064, line: 788, column: 26)
!16506 = distinct !DILexicalBlock(scope: !16491, file: !3064, line: 788, column: 2)
!16507 = !DILocation(line: 0, scope: !15412, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 788, column: 2, scope: !16506)
!16509 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16508)
!16510 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16508)
!16511 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16508)
!16512 = !DILocation(line: 0, scope: !15426, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16508)
!16514 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16513)
!16515 = !DILocation(line: 791, column: 1, scope: !16487)
!16516 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3064, file: !3064, line: 816, type: !16517, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16519)
!16517 = !DISubroutineType(types: !16518)
!16518 = !{!103, !108, !2994, !16266}
!16519 = !{!16520, !16521, !16522, !16523, !16524, !16526}
!16520 = !DILocalVariable(name: "key", arg: 1, scope: !16516, file: !3064, line: 816, type: !108)
!16521 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16516, file: !3064, line: 816, type: !2994)
!16522 = !DILocalVariable(name: "timeout", arg: 3, scope: !16516, file: !3064, line: 816, type: !16266)
!16523 = !DILocalVariable(name: "ret", scope: !16516, file: !3064, line: 828, type: !103)
!16524 = !DILocalVariable(name: "__i", scope: !16525, file: !3064, line: 829, type: !15370)
!16525 = distinct !DILexicalBlock(scope: !16516, file: !3064, line: 829, column: 2)
!16526 = !DILocalVariable(name: "__key", scope: !16525, file: !3064, line: 829, type: !15370)
!16527 = !DILocation(line: 0, scope: !16516)
!16528 = !DILocation(line: 823, column: 14, scope: !16516)
!16529 = !DILocation(line: 823, column: 2, scope: !16516)
!16530 = !DILocation(line: 826, column: 20, scope: !16516)
!16531 = !DILocation(line: 826, column: 18, scope: !16516)
!16532 = !DILocation(line: 828, column: 12, scope: !16516)
!16533 = !DILocation(line: 0, scope: !16525)
!16534 = !DILocation(line: 0, scope: !15378, inlinedAt: !16535)
!16535 = distinct !DILocation(line: 829, column: 2, scope: !16525)
!16536 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16537)
!16537 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16535)
!16538 = !DILocation(line: 0, scope: !15387, inlinedAt: !16537)
!16539 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16535)
!16540 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16535)
!16541 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16535)
!16542 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16535)
!16543 = !DILocation(line: 830, column: 7, scope: !16544)
!16544 = distinct !DILexicalBlock(scope: !16545, file: !3064, line: 830, column: 7)
!16545 = distinct !DILexicalBlock(scope: !16546, file: !3064, line: 829, column: 26)
!16546 = distinct !DILexicalBlock(scope: !16525, file: !3064, line: 829, column: 2)
!16547 = !DILocation(line: 830, column: 26, scope: !16544)
!16548 = !DILocation(line: 830, column: 23, scope: !16544)
!16549 = !DILocation(line: 830, column: 7, scope: !16545)
!16550 = !DILocation(line: 831, column: 20, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16544, file: !3064, line: 830, column: 36)
!16552 = !DILocation(line: 832, column: 3, scope: !16551)
!16553 = !DILocation(line: 0, scope: !15412, inlinedAt: !16554)
!16554 = distinct !DILocation(line: 829, column: 2, scope: !16546)
!16555 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16554)
!16556 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16554)
!16557 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16554)
!16558 = !DILocation(line: 0, scope: !15426, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16554)
!16560 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16559)
!16561 = !DILocation(line: 834, column: 2, scope: !16516)
!16562 = distinct !DISubprogram(name: "z_pend_curr", scope: !3064, file: !3064, line: 840, type: !16563, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16565)
!16563 = !DISubroutineType(types: !16564)
!16564 = !{!103, !15381, !15370, !2994, !16266}
!16565 = !{!16566, !16567, !16568, !16569}
!16566 = !DILocalVariable(name: "lock", arg: 1, scope: !16562, file: !3064, line: 840, type: !15381)
!16567 = !DILocalVariable(name: "key", arg: 2, scope: !16562, file: !3064, line: 840, type: !15370)
!16568 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16562, file: !3064, line: 841, type: !2994)
!16569 = !DILocalVariable(name: "timeout", arg: 4, scope: !16562, file: !3064, line: 841, type: !16266)
!16570 = !DILocation(line: 0, scope: !16562)
!16571 = !DILocation(line: 844, column: 20, scope: !16562)
!16572 = !DILocation(line: 844, column: 18, scope: !16562)
!16573 = !DILocation(line: 846, column: 2, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !3064, line: 846, column: 2)
!16575 = distinct !DILexicalBlock(scope: !16562, file: !3064, line: 846, column: 2)
!16576 = !DILocation(line: 846, column: 2, scope: !16575)
!16577 = !DILocation(line: 846, column: 2, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16574, file: !3064, line: 846, column: 2)
!16579 = !DILocation(line: 0, scope: !15378, inlinedAt: !16580)
!16580 = distinct !DILocation(line: 856, column: 9, scope: !16562)
!16581 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16582)
!16582 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16580)
!16583 = !DILocation(line: 0, scope: !15387, inlinedAt: !16582)
!16584 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16580)
!16585 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16580)
!16586 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16580)
!16587 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16580)
!16588 = !DILocation(line: 857, column: 14, scope: !16562)
!16589 = !DILocation(line: 857, column: 2, scope: !16562)
!16590 = !DILocation(line: 0, scope: !16065, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 858, column: 2, scope: !16562)
!16592 = !DILocation(line: 225, column: 2, scope: !16072, inlinedAt: !16591)
!16593 = !DILocation(line: 225, column: 2, scope: !16073, inlinedAt: !16591)
!16594 = !DILocation(line: 225, column: 2, scope: !16076, inlinedAt: !16591)
!16595 = !DILocation(line: 0, scope: !16056, inlinedAt: !16596)
!16596 = distinct !DILocation(line: 859, column: 9, scope: !16562)
!16597 = !DILocation(line: 0, scope: !16065, inlinedAt: !16598)
!16598 = distinct !DILocation(line: 195, column: 2, scope: !16056, inlinedAt: !16596)
!16599 = !DILocation(line: 225, column: 2, scope: !16072, inlinedAt: !16598)
!16600 = !DILocation(line: 225, column: 2, scope: !16073, inlinedAt: !16598)
!16601 = !DILocation(line: 225, column: 2, scope: !16076, inlinedAt: !16598)
!16602 = !DILocation(line: 196, column: 9, scope: !16056, inlinedAt: !16596)
!16603 = !DILocation(line: 859, column: 2, scope: !16562)
!16604 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3064, file: !3064, line: 862, type: !16605, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16607)
!16605 = !DISubroutineType(types: !16606)
!16606 = !{!2963, !2994}
!16607 = !{!16608, !16609, !16610, !16612}
!16608 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16604, file: !3064, line: 862, type: !2994)
!16609 = !DILocalVariable(name: "thread", scope: !16604, file: !3064, line: 864, type: !2963)
!16610 = !DILocalVariable(name: "__i", scope: !16611, file: !3064, line: 866, type: !15370)
!16611 = distinct !DILexicalBlock(scope: !16604, file: !3064, line: 866, column: 2)
!16612 = !DILocalVariable(name: "__key", scope: !16611, file: !3064, line: 866, type: !15370)
!16613 = !DILocation(line: 0, scope: !16604)
!16614 = !DILocation(line: 0, scope: !16611)
!16615 = !DILocation(line: 0, scope: !15378, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 866, column: 2, scope: !16611)
!16617 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16616)
!16619 = !DILocation(line: 0, scope: !15387, inlinedAt: !16618)
!16620 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16616)
!16621 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16616)
!16622 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16616)
!16623 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16616)
!16624 = !DILocation(line: 867, column: 12, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16626, file: !3064, line: 866, column: 26)
!16626 = distinct !DILexicalBlock(scope: !16611, file: !3064, line: 866, column: 2)
!16627 = !DILocation(line: 869, column: 14, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16625, file: !3064, line: 869, column: 7)
!16629 = !DILocation(line: 869, column: 7, scope: !16625)
!16630 = !DILocation(line: 870, column: 4, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16628, file: !3064, line: 869, column: 23)
!16632 = !DILocation(line: 871, column: 3, scope: !16631)
!16633 = !DILocation(line: 0, scope: !15412, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 866, column: 2, scope: !16626)
!16635 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16634)
!16636 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16634)
!16637 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16634)
!16638 = !DILocation(line: 0, scope: !15426, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16634)
!16640 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16639)
!16641 = !DILocation(line: 874, column: 2, scope: !16604)
!16642 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3064, file: !3064, line: 877, type: !16605, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16643)
!16643 = !{!16644, !16645, !16646, !16648}
!16644 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16642, file: !3064, line: 877, type: !2994)
!16645 = !DILocalVariable(name: "thread", scope: !16642, file: !3064, line: 879, type: !2963)
!16646 = !DILocalVariable(name: "__i", scope: !16647, file: !3064, line: 881, type: !15370)
!16647 = distinct !DILexicalBlock(scope: !16642, file: !3064, line: 881, column: 2)
!16648 = !DILocalVariable(name: "__key", scope: !16647, file: !3064, line: 881, type: !15370)
!16649 = !DILocation(line: 0, scope: !16642)
!16650 = !DILocation(line: 0, scope: !16647)
!16651 = !DILocation(line: 0, scope: !15378, inlinedAt: !16652)
!16652 = distinct !DILocation(line: 881, column: 2, scope: !16647)
!16653 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16652)
!16655 = !DILocation(line: 0, scope: !15387, inlinedAt: !16654)
!16656 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16652)
!16657 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16652)
!16658 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16652)
!16659 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16652)
!16660 = !DILocation(line: 882, column: 12, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16662, file: !3064, line: 881, column: 26)
!16662 = distinct !DILexicalBlock(scope: !16647, file: !3064, line: 881, column: 2)
!16663 = !DILocation(line: 884, column: 14, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16661, file: !3064, line: 884, column: 7)
!16665 = !DILocation(line: 884, column: 7, scope: !16661)
!16666 = !DILocation(line: 885, column: 4, scope: !16667)
!16667 = distinct !DILexicalBlock(scope: !16664, file: !3064, line: 884, column: 23)
!16668 = !DILocation(line: 886, column: 10, scope: !16667)
!16669 = !DILocation(line: 887, column: 3, scope: !16667)
!16670 = !DILocation(line: 0, scope: !15412, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 881, column: 2, scope: !16662)
!16672 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16671)
!16673 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16671)
!16674 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16671)
!16675 = !DILocation(line: 0, scope: !15426, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16671)
!16677 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16676)
!16678 = !DILocation(line: 890, column: 2, scope: !16642)
!16679 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3064, file: !3064, line: 893, type: !15336, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16680)
!16680 = !{!16681}
!16681 = !DILocalVariable(name: "thread", arg: 1, scope: !16679, file: !3064, line: 893, type: !2963)
!16682 = !DILocation(line: 0, scope: !16679)
!16683 = !DILocation(line: 0, scope: !16487, inlinedAt: !16684)
!16684 = distinct !DILocation(line: 895, column: 2, scope: !16679)
!16685 = !DILocation(line: 0, scope: !16491, inlinedAt: !16684)
!16686 = !DILocation(line: 0, scope: !15378, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 788, column: 2, scope: !16491, inlinedAt: !16684)
!16688 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16687)
!16690 = !DILocation(line: 0, scope: !15387, inlinedAt: !16689)
!16691 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16687)
!16692 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16687)
!16693 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16687)
!16694 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16687)
!16695 = !DILocation(line: 789, column: 3, scope: !16505, inlinedAt: !16684)
!16696 = !DILocation(line: 0, scope: !15412, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 788, column: 2, scope: !16506, inlinedAt: !16684)
!16698 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16697)
!16699 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16697)
!16700 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16697)
!16701 = !DILocation(line: 0, scope: !15426, inlinedAt: !16702)
!16702 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16697)
!16703 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16702)
!16704 = !DILocation(line: 896, column: 8, scope: !16679)
!16705 = !DILocation(line: 897, column: 1, scope: !16679)
!16706 = distinct !DISubprogram(name: "z_set_prio", scope: !3064, file: !3064, line: 902, type: !15741, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16707)
!16707 = !{!16708, !16709, !16710, !16711, !16713}
!16708 = !DILocalVariable(name: "thread", arg: 1, scope: !16706, file: !3064, line: 902, type: !2963)
!16709 = !DILocalVariable(name: "prio", arg: 2, scope: !16706, file: !3064, line: 902, type: !103)
!16710 = !DILocalVariable(name: "need_sched", scope: !16706, file: !3064, line: 904, type: !119)
!16711 = !DILocalVariable(name: "__i", scope: !16712, file: !3064, line: 906, type: !15370)
!16712 = distinct !DILexicalBlock(scope: !16706, file: !3064, line: 906, column: 2)
!16713 = !DILocalVariable(name: "__key", scope: !16712, file: !3064, line: 906, type: !15370)
!16714 = !DILocation(line: 0, scope: !16706)
!16715 = !DILocation(line: 0, scope: !16712)
!16716 = !DILocation(line: 0, scope: !15378, inlinedAt: !16717)
!16717 = distinct !DILocation(line: 906, column: 2, scope: !16712)
!16718 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16719)
!16719 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16717)
!16720 = !DILocation(line: 0, scope: !15387, inlinedAt: !16719)
!16721 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16717)
!16722 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16717)
!16723 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16717)
!16724 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16717)
!16725 = !DILocation(line: 907, column: 16, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16727, file: !3064, line: 906, column: 26)
!16727 = distinct !DILexicalBlock(scope: !16712, file: !3064, line: 906, column: 2)
!16728 = !DILocation(line: 909, column: 7, scope: !16726)
!16729 = !DILocation(line: 0, scope: !15572, inlinedAt: !16730)
!16730 = distinct !DILocation(line: 912, column: 5, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16732, file: !3064, line: 911, column: 63)
!16732 = distinct !DILexicalBlock(scope: !16733, file: !3064, line: 911, column: 8)
!16733 = distinct !DILexicalBlock(scope: !16734, file: !3064, line: 909, column: 19)
!16734 = distinct !DILexicalBlock(scope: !16726, file: !3064, line: 909, column: 7)
!16735 = !DILocation(line: 266, column: 28, scope: !15572, inlinedAt: !16730)
!16736 = !DILocation(line: 0, scope: !15580, inlinedAt: !16737)
!16737 = distinct !DILocation(line: 268, column: 3, scope: !15584, inlinedAt: !16730)
!16738 = !DILocation(line: 234, column: 2, scope: !15580, inlinedAt: !16737)
!16739 = !DILocation(line: 913, column: 23, scope: !16731)
!16740 = !DILocation(line: 0, scope: !15589, inlinedAt: !16741)
!16741 = distinct !DILocation(line: 914, column: 5, scope: !16731)
!16742 = !DILocation(line: 252, column: 28, scope: !15589, inlinedAt: !16741)
!16743 = !DILocation(line: 0, scope: !15596, inlinedAt: !16744)
!16744 = distinct !DILocation(line: 254, column: 3, scope: !15600, inlinedAt: !16741)
!16745 = !DILocation(line: 0, scope: !15603, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 229, column: 2, scope: !15596, inlinedAt: !16744)
!16747 = !DILocation(line: 186, column: 2, scope: !15613, inlinedAt: !16746)
!16748 = !DILocation(line: 186, column: 2, scope: !15614, inlinedAt: !16746)
!16749 = !DILocation(line: 186, column: 2, scope: !15617, inlinedAt: !16746)
!16750 = !DILocation(line: 188, column: 2, scope: !15619, inlinedAt: !16746)
!16751 = !DILocation(line: 188, column: 2, scope: !15621, inlinedAt: !16746)
!16752 = !DILocation(line: 0, scope: !15619, inlinedAt: !16746)
!16753 = !DILocation(line: 189, column: 7, scope: !15624, inlinedAt: !16746)
!16754 = !DILocation(line: 189, column: 35, scope: !15624, inlinedAt: !16746)
!16755 = !DILocation(line: 189, column: 7, scope: !15625, inlinedAt: !16746)
!16756 = !DILocation(line: 190, column: 4, scope: !15629, inlinedAt: !16746)
!16757 = !DILocation(line: 192, column: 4, scope: !15629, inlinedAt: !16746)
!16758 = distinct !{!16758, !16750, !16759}
!16759 = !DILocation(line: 194, column: 2, scope: !15619, inlinedAt: !16746)
!16760 = !DILocation(line: 196, column: 2, scope: !15603, inlinedAt: !16746)
!16761 = !DILocation(line: 197, column: 1, scope: !15603, inlinedAt: !16746)
!16762 = !DILocation(line: 918, column: 4, scope: !16733)
!16763 = !DILocation(line: 919, column: 3, scope: !16733)
!16764 = !DILocation(line: 920, column: 22, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16734, file: !3064, line: 919, column: 10)
!16766 = !DILocation(line: 0, scope: !15412, inlinedAt: !16767)
!16767 = distinct !DILocation(line: 906, column: 2, scope: !16727)
!16768 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16767)
!16769 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16767)
!16770 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16767)
!16771 = !DILocation(line: 0, scope: !15426, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16767)
!16773 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16772)
!16774 = !DILocation(line: 926, column: 2, scope: !16706)
!16775 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3064, file: !3064, line: 929, type: !16776, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16778)
!16776 = !DISubroutineType(types: !16777)
!16777 = !{null, !2963, !103}
!16778 = !{!16779, !16780, !16781}
!16779 = !DILocalVariable(name: "thread", arg: 1, scope: !16775, file: !3064, line: 929, type: !2963)
!16780 = !DILocalVariable(name: "prio", arg: 2, scope: !16775, file: !3064, line: 929, type: !103)
!16781 = !DILocalVariable(name: "need_sched", scope: !16775, file: !3064, line: 931, type: !119)
!16782 = !DILocation(line: 0, scope: !16775)
!16783 = !DILocation(line: 931, column: 20, scope: !16775)
!16784 = !DILocation(line: 935, column: 17, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16775, file: !3064, line: 935, column: 6)
!16786 = !DILocation(line: 935, column: 20, scope: !16785)
!16787 = !DILocation(line: 935, column: 35, scope: !16785)
!16788 = !DILocation(line: 935, column: 48, scope: !16785)
!16789 = !DILocation(line: 935, column: 6, scope: !16775)
!16790 = !DILocation(line: 936, column: 3, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16785, file: !3064, line: 935, column: 55)
!16792 = !DILocation(line: 937, column: 2, scope: !16791)
!16793 = !DILocation(line: 938, column: 1, scope: !16775)
!16794 = distinct !DISubprogram(name: "k_sched_lock", scope: !3064, file: !3064, line: 987, type: !327, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16795)
!16795 = !{!16796, !16798}
!16796 = !DILocalVariable(name: "__i", scope: !16797, file: !3064, line: 989, type: !15370)
!16797 = distinct !DILexicalBlock(scope: !16794, file: !3064, line: 989, column: 2)
!16798 = !DILocalVariable(name: "__key", scope: !16797, file: !3064, line: 989, type: !15370)
!16799 = !DILocation(line: 0, scope: !16797)
!16800 = !DILocation(line: 0, scope: !15378, inlinedAt: !16801)
!16801 = distinct !DILocation(line: 989, column: 2, scope: !16797)
!16802 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16803)
!16803 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16801)
!16804 = !DILocation(line: 0, scope: !15387, inlinedAt: !16803)
!16805 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16801)
!16806 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16801)
!16807 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16801)
!16808 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16801)
!16809 = !DILocation(line: 992, column: 3, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16811, file: !3064, line: 989, column: 26)
!16811 = distinct !DILexicalBlock(scope: !16797, file: !3064, line: 989, column: 2)
!16812 = !DILocation(line: 0, scope: !15412, inlinedAt: !16813)
!16813 = distinct !DILocation(line: 989, column: 2, scope: !16811)
!16814 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16813)
!16815 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16813)
!16816 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16813)
!16817 = !DILocation(line: 0, scope: !15426, inlinedAt: !16818)
!16818 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16813)
!16819 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16818)
!16820 = !DILocation(line: 994, column: 1, scope: !16794)
!16821 = distinct !DISubprogram(name: "z_sched_lock", scope: !13302, file: !13302, line: 251, type: !327, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!16822 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !16823)
!16823 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !16824)
!16824 = distinct !DILocation(line: 253, column: 2, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16826, file: !13302, line: 253, column: 2)
!16826 = distinct !DILexicalBlock(scope: !16821, file: !13302, line: 253, column: 2)
!16827 = !DILocation(line: 0, scope: !16105, inlinedAt: !16823)
!16828 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !16824)
!16829 = !DILocation(line: 253, column: 2, scope: !16826)
!16830 = !DILocation(line: 253, column: 2, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16825, file: !13302, line: 253, column: 2)
!16832 = !DILocation(line: 254, column: 2, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16834, file: !13302, line: 254, column: 2)
!16834 = distinct !DILexicalBlock(scope: !16821, file: !13302, line: 254, column: 2)
!16835 = !DILocation(line: 254, column: 2, scope: !16834)
!16836 = !DILocation(line: 254, column: 2, scope: !16837)
!16837 = distinct !DILexicalBlock(scope: !16833, file: !13302, line: 254, column: 2)
!16838 = !DILocation(line: 256, column: 2, scope: !16821)
!16839 = !DILocation(line: 258, column: 2, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16821, file: !13302, line: 258, column: 2)
!16841 = !{i64 2154801775}
!16842 = !DILocation(line: 259, column: 1, scope: !16821)
!16843 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3064, file: !3064, line: 996, type: !327, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16844)
!16844 = !{!16845, !16847}
!16845 = !DILocalVariable(name: "__i", scope: !16846, file: !3064, line: 998, type: !15370)
!16846 = distinct !DILexicalBlock(scope: !16843, file: !3064, line: 998, column: 2)
!16847 = !DILocalVariable(name: "__key", scope: !16846, file: !3064, line: 998, type: !15370)
!16848 = !DILocation(line: 0, scope: !16846)
!16849 = !DILocation(line: 0, scope: !15378, inlinedAt: !16850)
!16850 = distinct !DILocation(line: 998, column: 2, scope: !16846)
!16851 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !16852)
!16852 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !16850)
!16853 = !DILocation(line: 0, scope: !15387, inlinedAt: !16852)
!16854 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !16850)
!16855 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !16850)
!16856 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !16850)
!16857 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !16850)
!16858 = !DILocation(line: 999, column: 3, scope: !16859)
!16859 = distinct !DILexicalBlock(scope: !16860, file: !3064, line: 999, column: 3)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !3064, line: 999, column: 3)
!16861 = distinct !DILexicalBlock(scope: !16862, file: !3064, line: 998, column: 26)
!16862 = distinct !DILexicalBlock(scope: !16846, file: !3064, line: 998, column: 2)
!16863 = !DILocation(line: 999, column: 3, scope: !16860)
!16864 = !DILocation(line: 999, column: 3, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16859, file: !3064, line: 999, column: 3)
!16866 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !16867)
!16867 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !16868)
!16868 = distinct !DILocation(line: 1000, column: 3, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16870, file: !3064, line: 1000, column: 3)
!16870 = distinct !DILexicalBlock(scope: !16861, file: !3064, line: 1000, column: 3)
!16871 = !DILocation(line: 0, scope: !16105, inlinedAt: !16867)
!16872 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !16868)
!16873 = !DILocation(line: 1000, column: 3, scope: !16870)
!16874 = !DILocation(line: 1000, column: 3, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16869, file: !3064, line: 1000, column: 3)
!16876 = !DILocation(line: 1002, column: 5, scope: !16861)
!16877 = !DILocation(line: 1002, column: 20, scope: !16861)
!16878 = !DILocation(line: 1002, column: 3, scope: !16861)
!16879 = !DILocation(line: 1003, column: 3, scope: !16861)
!16880 = !DILocation(line: 0, scope: !15412, inlinedAt: !16881)
!16881 = distinct !DILocation(line: 998, column: 2, scope: !16862)
!16882 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !16881)
!16883 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !16881)
!16884 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !16881)
!16885 = !DILocation(line: 0, scope: !15426, inlinedAt: !16886)
!16886 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !16881)
!16887 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !16886)
!16888 = !DILocation(line: 1011, column: 2, scope: !16843)
!16889 = !DILocation(line: 1012, column: 1, scope: !16843)
!16890 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3064, file: !3064, line: 1014, type: !15729, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!16891 = !DILocation(line: 1028, column: 25, scope: !16890)
!16892 = !DILocation(line: 1028, column: 2, scope: !16890)
!16893 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3064, file: !3064, line: 1155, type: !16894, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16896)
!16894 = !DISubroutineType(types: !16895)
!16895 = !{!119, !2992, !2992}
!16896 = !{!16897, !16898, !16899, !16900, !16901}
!16897 = !DILocalVariable(name: "a", arg: 1, scope: !16893, file: !3064, line: 1155, type: !2992)
!16898 = !DILocalVariable(name: "b", arg: 2, scope: !16893, file: !3064, line: 1155, type: !2992)
!16899 = !DILocalVariable(name: "thread_a", scope: !16893, file: !3064, line: 1157, type: !2963)
!16900 = !DILocalVariable(name: "thread_b", scope: !16893, file: !3064, line: 1157, type: !2963)
!16901 = !DILocalVariable(name: "cmp", scope: !16893, file: !3064, line: 1158, type: !324)
!16902 = !DILocation(line: 0, scope: !16893)
!16903 = !DILocation(line: 1160, column: 13, scope: !16893)
!16904 = !DILocation(line: 1161, column: 13, scope: !16893)
!16905 = !DILocation(line: 1163, column: 8, scope: !16893)
!16906 = !DILocation(line: 1165, column: 10, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16893, file: !3064, line: 1165, column: 6)
!16908 = !DILocation(line: 1165, column: 6, scope: !16893)
!16909 = !DILocation(line: 1167, column: 17, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16907, file: !3064, line: 1167, column: 13)
!16911 = !DILocation(line: 1167, column: 13, scope: !16907)
!16912 = !DILocation(line: 1170, column: 25, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16910, file: !3064, line: 1169, column: 9)
!16914 = !DILocation(line: 1170, column: 52, scope: !16913)
!16915 = !DILocation(line: 1170, column: 35, scope: !16913)
!16916 = !DILocation(line: 1170, column: 3, scope: !16913)
!16917 = !DILocation(line: 0, scope: !16907)
!16918 = !DILocation(line: 1173, column: 1, scope: !16893)
!16919 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3064, file: !3064, line: 1175, type: !16920, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16935)
!16920 = !DISubroutineType(types: !16921)
!16921 = !{null, !16922, !2963}
!16922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16923, size: 32)
!16923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16924, line: 37, size: 128, elements: !16925)
!16924 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16925 = !{!16926, !16934}
!16926 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16923, file: !16924, line: 38, baseType: !16927, size: 96)
!16927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !207, line: 83, size: 96, elements: !16928)
!16928 = !{!16929, !16930, !16933}
!16929 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16927, file: !207, line: 84, baseType: !2992, size: 32)
!16930 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16927, file: !207, line: 85, baseType: !16931, size: 32, offset: 32)
!16931 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !207, line: 81, baseType: !16932)
!16932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16894, size: 32)
!16933 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16927, file: !207, line: 86, baseType: !103, size: 32, offset: 64)
!16934 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16923, file: !16924, line: 39, baseType: !103, size: 32, offset: 96)
!16935 = !{!16936, !16937, !16938, !16939, !16948}
!16936 = !DILocalVariable(name: "pq", arg: 1, scope: !16919, file: !3064, line: 1175, type: !16922)
!16937 = !DILocalVariable(name: "thread", arg: 2, scope: !16919, file: !3064, line: 1175, type: !2963)
!16938 = !DILocalVariable(name: "t", scope: !16919, file: !3064, line: 1177, type: !2963)
!16939 = !DILocalVariable(name: "__f", scope: !16940, file: !3064, line: 1190, type: !16943)
!16940 = distinct !DILexicalBlock(scope: !16941, file: !3064, line: 1190, column: 3)
!16941 = distinct !DILexicalBlock(scope: !16942, file: !3064, line: 1189, column: 27)
!16942 = distinct !DILexicalBlock(scope: !16919, file: !3064, line: 1189, column: 6)
!16943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !207, line: 155, size: 96, elements: !16944)
!16944 = !{!16945, !16946, !16947}
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16943, file: !207, line: 156, baseType: !3059, size: 32)
!16946 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16943, file: !207, line: 157, baseType: !765, size: 32, offset: 32)
!16947 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16943, file: !207, line: 158, baseType: !324, size: 32, offset: 64)
!16948 = !DILocalVariable(name: "n", scope: !16949, file: !3064, line: 1190, type: !2992)
!16949 = distinct !DILexicalBlock(scope: !16950, file: !3064, line: 1190, column: 3)
!16950 = distinct !DILexicalBlock(scope: !16940, file: !3064, line: 1190, column: 3)
!16951 = !DILocation(line: 0, scope: !16919)
!16952 = !DILocation(line: 1179, column: 2, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16954, file: !3064, line: 1179, column: 2)
!16954 = distinct !DILexicalBlock(scope: !16919, file: !3064, line: 1179, column: 2)
!16955 = !DILocation(line: 1179, column: 2, scope: !16954)
!16956 = !DILocation(line: 1179, column: 2, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16953, file: !3064, line: 1179, column: 2)
!16958 = !DILocation(line: 1181, column: 31, scope: !16919)
!16959 = !DILocation(line: 1181, column: 45, scope: !16919)
!16960 = !DILocation(line: 1181, column: 15, scope: !16919)
!16961 = !DILocation(line: 1181, column: 25, scope: !16919)
!16962 = !DILocation(line: 1189, column: 11, scope: !16942)
!16963 = !DILocation(line: 1189, column: 7, scope: !16942)
!16964 = !DILocation(line: 1189, column: 6, scope: !16919)
!16965 = !DILocation(line: 1190, column: 3, scope: !16940)
!16966 = !DILocation(line: 1190, column: 3, scope: !16949)
!16967 = !DILocation(line: 0, scope: !16949)
!16968 = !DILocation(line: 1190, column: 3, scope: !16950)
!16969 = !DILocation(line: 1193, column: 2, scope: !16941)
!16970 = !DILocation(line: 1191, column: 42, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16950, file: !3064, line: 1190, column: 54)
!16972 = !DILocation(line: 1191, column: 12, scope: !16971)
!16973 = !DILocation(line: 1191, column: 22, scope: !16971)
!16974 = distinct !{!16974, !16965, !16975}
!16975 = !DILocation(line: 1192, column: 3, scope: !16940)
!16976 = !DILocation(line: 1195, column: 17, scope: !16919)
!16977 = !DILocation(line: 1195, column: 37, scope: !16919)
!16978 = !DILocation(line: 1195, column: 2, scope: !16919)
!16979 = !DILocation(line: 1196, column: 1, scope: !16919)
!16980 = !DISubprogram(name: "z_rb_foreach_next", scope: !207, file: !207, line: 176, type: !16981, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!16981 = !DISubroutineType(types: !16982)
!16982 = !{!2992, !16983, !16984}
!16983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16927, size: 32)
!16984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16943, size: 32)
!16985 = !DISubprogram(name: "rb_insert", scope: !207, file: !207, line: 105, type: !16986, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!16986 = !DISubroutineType(types: !16987)
!16987 = !{null, !16983, !2992}
!16988 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3064, file: !3064, line: 1198, type: !16920, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !16989)
!16989 = !{!16990, !16991}
!16990 = !DILocalVariable(name: "pq", arg: 1, scope: !16988, file: !3064, line: 1198, type: !16922)
!16991 = !DILocalVariable(name: "thread", arg: 2, scope: !16988, file: !3064, line: 1198, type: !2963)
!16992 = !DILocation(line: 0, scope: !16988)
!16993 = !DILocation(line: 1200, column: 2, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16995, file: !3064, line: 1200, column: 2)
!16995 = distinct !DILexicalBlock(scope: !16988, file: !3064, line: 1200, column: 2)
!16996 = !DILocation(line: 1200, column: 2, scope: !16995)
!16997 = !DILocation(line: 1200, column: 2, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16994, file: !3064, line: 1200, column: 2)
!16999 = !DILocation(line: 1202, column: 17, scope: !16988)
!17000 = !DILocation(line: 1202, column: 37, scope: !16988)
!17001 = !DILocation(line: 1202, column: 2, scope: !16988)
!17002 = !DILocation(line: 1204, column: 16, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !16988, file: !3064, line: 1204, column: 6)
!17004 = !DILocation(line: 1204, column: 7, scope: !17003)
!17005 = !DILocation(line: 1204, column: 6, scope: !16988)
!17006 = !DILocation(line: 1205, column: 7, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17003, file: !3064, line: 1204, column: 22)
!17008 = !DILocation(line: 1205, column: 22, scope: !17007)
!17009 = !DILocation(line: 1206, column: 2, scope: !17007)
!17010 = !DILocation(line: 1207, column: 1, scope: !16988)
!17011 = !DISubprogram(name: "rb_remove", scope: !207, file: !207, line: 110, type: !16986, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!17012 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3064, file: !3064, line: 1209, type: !17013, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17015)
!17013 = !DISubroutineType(types: !17014)
!17014 = !{!2963, !16922}
!17015 = !{!17016, !17017, !17018}
!17016 = !DILocalVariable(name: "pq", arg: 1, scope: !17012, file: !3064, line: 1209, type: !16922)
!17017 = !DILocalVariable(name: "thread", scope: !17012, file: !3064, line: 1211, type: !2963)
!17018 = !DILocalVariable(name: "n", scope: !17012, file: !3064, line: 1212, type: !2992)
!17019 = !DILocation(line: 0, scope: !17012)
!17020 = !DILocation(line: 1212, column: 37, scope: !17012)
!17021 = !DILocation(line: 1212, column: 21, scope: !17012)
!17022 = !DILocation(line: 1217, column: 2, scope: !17012)
!17023 = distinct !DISubprogram(name: "rb_get_min", scope: !207, file: !207, line: 115, type: !17024, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17026)
!17024 = !DISubroutineType(types: !17025)
!17025 = !{!2992, !16983}
!17026 = !{!17027}
!17027 = !DILocalVariable(name: "tree", arg: 1, scope: !17023, file: !207, line: 115, type: !16983)
!17028 = !DILocation(line: 0, scope: !17023)
!17029 = !DILocation(line: 117, column: 9, scope: !17023)
!17030 = !DILocation(line: 117, column: 2, scope: !17023)
!17031 = !DISubprogram(name: "z_rb_get_minmax", scope: !207, file: !207, line: 100, type: !17032, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2645)
!17032 = !DISubroutineType(types: !17033)
!17033 = !{!2992, !16983, !164}
!17034 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3064, file: !3064, line: 1246, type: !17035, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17043)
!17035 = !DISubroutineType(types: !17036)
!17036 = !{!2963, !17037}
!17037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17038, size: 32)
!17038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16924, line: 53, size: 2080, elements: !17039)
!17039 = !{!17040, !17042}
!17040 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17038, file: !16924, line: 54, baseType: !17041, size: 2048)
!17041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2999, size: 2048, elements: !1152)
!17042 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17038, file: !16924, line: 55, baseType: !32, size: 32, offset: 2048)
!17043 = !{!17044, !17045, !17046, !17047}
!17044 = !DILocalVariable(name: "pq", arg: 1, scope: !17034, file: !3064, line: 1246, type: !17037)
!17045 = !DILocalVariable(name: "thread", scope: !17034, file: !3064, line: 1252, type: !2963)
!17046 = !DILocalVariable(name: "l", scope: !17034, file: !3064, line: 1253, type: !15606)
!17047 = !DILocalVariable(name: "n", scope: !17034, file: !3064, line: 1254, type: !3060)
!17048 = !DILocation(line: 0, scope: !17034)
!17049 = !DILocation(line: 1248, column: 11, scope: !17050)
!17050 = distinct !DILexicalBlock(scope: !17034, file: !3064, line: 1248, column: 6)
!17051 = !DILocation(line: 1248, column: 7, scope: !17050)
!17052 = !DILocation(line: 1248, column: 6, scope: !17034)
!17053 = !DILocation(line: 1253, column: 31, scope: !17034)
!17054 = !DILocation(line: 1253, column: 20, scope: !17034)
!17055 = !DILocation(line: 1254, column: 19, scope: !17034)
!17056 = !DILocation(line: 1260, column: 1, scope: !17034)
!17057 = distinct !DISubprogram(name: "z_unpend_all", scope: !3064, file: !3064, line: 1262, type: !17058, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17060)
!17058 = !DISubroutineType(types: !17059)
!17059 = !{!103, !2994}
!17060 = !{!17061, !17062, !17063}
!17061 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17057, file: !3064, line: 1262, type: !2994)
!17062 = !DILocalVariable(name: "need_sched", scope: !17057, file: !3064, line: 1264, type: !103)
!17063 = !DILocalVariable(name: "thread", scope: !17057, file: !3064, line: 1265, type: !2963)
!17064 = !DILocation(line: 0, scope: !17057)
!17065 = !DILocation(line: 1267, column: 19, scope: !17057)
!17066 = !DILocation(line: 1267, column: 41, scope: !17057)
!17067 = !DILocation(line: 1267, column: 2, scope: !17057)
!17068 = !DILocation(line: 1268, column: 3, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17057, file: !3064, line: 1267, column: 50)
!17070 = !DILocation(line: 1269, column: 3, scope: !17069)
!17071 = distinct !{!17071, !17067, !17072}
!17072 = !DILocation(line: 1271, column: 2, scope: !17057)
!17073 = !DILocation(line: 1273, column: 2, scope: !17057)
!17074 = distinct !DISubprogram(name: "z_waitq_head", scope: !13556, file: !13556, line: 52, type: !16605, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17075)
!17075 = !{!17076}
!17076 = !DILocalVariable(name: "w", arg: 1, scope: !17074, file: !13556, line: 52, type: !2994)
!17077 = !DILocation(line: 0, scope: !17074)
!17078 = !DILocation(line: 54, column: 52, scope: !17074)
!17079 = !DILocation(line: 54, column: 28, scope: !17074)
!17080 = !DILocation(line: 54, column: 9, scope: !17074)
!17081 = !DILocation(line: 54, column: 2, scope: !17074)
!17082 = distinct !DISubprogram(name: "init_ready_q", scope: !3064, file: !3064, line: 1276, type: !17083, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17090)
!17083 = !DISubroutineType(types: !17084)
!17084 = !{null, !17085}
!17085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17086, size: 32)
!17086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !128, line: 83, size: 96, elements: !17087)
!17087 = !{!17088, !17089}
!17088 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17086, file: !128, line: 86, baseType: !2963, size: 32)
!17089 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17086, file: !128, line: 90, baseType: !2999, size: 64, offset: 32)
!17090 = !{!17091}
!17091 = !DILocalVariable(name: "rq", arg: 1, scope: !17082, file: !3064, line: 1276, type: !17085)
!17092 = !DILocation(line: 0, scope: !17082)
!17093 = !DILocation(line: 1289, column: 22, scope: !17082)
!17094 = !DILocation(line: 1289, column: 2, scope: !17082)
!17095 = !DILocation(line: 1291, column: 1, scope: !17082)
!17096 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !17097, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17099)
!17097 = !DISubroutineType(types: !17098)
!17098 = !{null, !15606}
!17099 = !{!17100}
!17100 = !DILocalVariable(name: "list", arg: 1, scope: !17096, file: !133, line: 197, type: !15606)
!17101 = !DILocation(line: 0, scope: !17096)
!17102 = !DILocation(line: 199, column: 8, scope: !17096)
!17103 = !DILocation(line: 199, column: 13, scope: !17096)
!17104 = !DILocation(line: 200, column: 8, scope: !17096)
!17105 = !DILocation(line: 200, column: 13, scope: !17096)
!17106 = !DILocation(line: 201, column: 1, scope: !17096)
!17107 = distinct !DISubprogram(name: "z_sched_init", scope: !3064, file: !3064, line: 1293, type: !327, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!17108 = !DILocation(line: 1302, column: 2, scope: !17107)
!17109 = !DILocation(line: 1306, column: 2, scope: !17107)
!17110 = !DILocation(line: 1309, column: 1, scope: !17107)
!17111 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3064, file: !3064, line: 1311, type: !17112, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17115)
!17112 = !DISubroutineType(types: !17113)
!17113 = !{!103, !17114}
!17114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !195, line: 347, baseType: !2963)
!17115 = !{!17116}
!17116 = !DILocalVariable(name: "thread", arg: 1, scope: !17111, file: !3064, line: 1311, type: !17114)
!17117 = !DILocation(line: 0, scope: !17111)
!17118 = !DILocation(line: 1313, column: 22, scope: !17111)
!17119 = !DILocation(line: 1313, column: 9, scope: !17111)
!17120 = !DILocation(line: 1313, column: 2, scope: !17111)
!17121 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3064, file: !3064, line: 1325, type: !17122, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17124)
!17122 = !DISubroutineType(types: !17123)
!17123 = !{null, !17114, !103}
!17124 = !{!17125, !17126, !17127}
!17125 = !DILocalVariable(name: "thread", arg: 1, scope: !17121, file: !3064, line: 1325, type: !17114)
!17126 = !DILocalVariable(name: "prio", arg: 2, scope: !17121, file: !3064, line: 1325, type: !103)
!17127 = !DILocalVariable(name: "th", scope: !17121, file: !3064, line: 1334, type: !2963)
!17128 = !DILocation(line: 0, scope: !17121)
!17129 = !DILocation(line: 1331, column: 2, scope: !17130)
!17130 = distinct !DILexicalBlock(scope: !17131, file: !3064, line: 1331, column: 2)
!17131 = distinct !DILexicalBlock(scope: !17132, file: !3064, line: 1331, column: 2)
!17132 = distinct !DILexicalBlock(scope: !17121, file: !3064, line: 1331, column: 2)
!17133 = !DILocation(line: 1331, column: 2, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17130, file: !3064, line: 1331, column: 2)
!17135 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 1332, column: 2, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17139, file: !3064, line: 1332, column: 2)
!17139 = distinct !DILexicalBlock(scope: !17121, file: !3064, line: 1332, column: 2)
!17140 = !DILocation(line: 0, scope: !16105, inlinedAt: !17136)
!17141 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17137)
!17142 = !DILocation(line: 1332, column: 2, scope: !17139)
!17143 = !DILocation(line: 1332, column: 2, scope: !17144)
!17144 = distinct !DILexicalBlock(scope: !17138, file: !3064, line: 1332, column: 2)
!17145 = !DILocation(line: 1336, column: 2, scope: !17121)
!17146 = !DILocation(line: 1337, column: 1, scope: !17121)
!17147 = distinct !DISubprogram(name: "k_can_yield", scope: !3064, file: !3064, line: 1384, type: !8946, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!17148 = !DILocation(line: 1386, column: 11, scope: !17147)
!17149 = !DILocation(line: 1386, column: 29, scope: !17147)
!17150 = !DILocation(line: 1386, column: 32, scope: !17147)
!17151 = !DILocation(line: 1386, column: 46, scope: !17147)
!17152 = !DILocation(line: 1387, column: 28, scope: !17147)
!17153 = !DILocation(line: 1387, column: 4, scope: !17147)
!17154 = !DILocation(line: 1386, column: 2, scope: !17147)
!17155 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !124, file: !124, line: 989, type: !8946, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!17156 = !DILocation(line: 993, column: 10, scope: !17155)
!17157 = !DILocation(line: 993, column: 2, scope: !17155)
!17158 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3064, file: !3064, line: 1390, type: !327, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17159)
!17159 = !{!17160}
!17160 = !DILocalVariable(name: "key", scope: !17158, file: !3064, line: 1396, type: !15370)
!17161 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17163)
!17163 = distinct !DILocation(line: 1392, column: 2, scope: !17164)
!17164 = distinct !DILexicalBlock(scope: !17165, file: !3064, line: 1392, column: 2)
!17165 = distinct !DILexicalBlock(scope: !17158, file: !3064, line: 1392, column: 2)
!17166 = !DILocation(line: 0, scope: !16105, inlinedAt: !17162)
!17167 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17163)
!17168 = !DILocation(line: 1392, column: 2, scope: !17165)
!17169 = !DILocation(line: 1392, column: 2, scope: !17170)
!17170 = distinct !DILexicalBlock(scope: !17164, file: !3064, line: 1392, column: 2)
!17171 = !DILocation(line: 0, scope: !15378, inlinedAt: !17172)
!17172 = distinct !DILocation(line: 1396, column: 25, scope: !17158)
!17173 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !17174)
!17174 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !17172)
!17175 = !DILocation(line: 0, scope: !15387, inlinedAt: !17174)
!17176 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !17172)
!17177 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !17172)
!17178 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !17172)
!17179 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !17172)
!17180 = !DILocation(line: 0, scope: !17158)
!17181 = !DILocation(line: 1400, column: 18, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17183, file: !3064, line: 1399, column: 36)
!17183 = distinct !DILexicalBlock(scope: !17158, file: !3064, line: 1398, column: 6)
!17184 = !DILocation(line: 0, scope: !15572, inlinedAt: !17185)
!17185 = distinct !DILocation(line: 1400, column: 3, scope: !17182)
!17186 = !DILocation(line: 266, column: 15, scope: !15572, inlinedAt: !17185)
!17187 = !DILocation(line: 266, column: 28, scope: !15572, inlinedAt: !17185)
!17188 = !DILocation(line: 0, scope: !15580, inlinedAt: !17189)
!17189 = distinct !DILocation(line: 268, column: 3, scope: !15584, inlinedAt: !17185)
!17190 = !DILocation(line: 234, column: 2, scope: !15580, inlinedAt: !17189)
!17191 = !DILocation(line: 1402, column: 15, scope: !17158)
!17192 = !DILocation(line: 0, scope: !15589, inlinedAt: !17193)
!17193 = distinct !DILocation(line: 1402, column: 2, scope: !17158)
!17194 = !DILocation(line: 252, column: 15, scope: !15589, inlinedAt: !17193)
!17195 = !DILocation(line: 252, column: 28, scope: !15589, inlinedAt: !17193)
!17196 = !DILocation(line: 0, scope: !15596, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 254, column: 3, scope: !15600, inlinedAt: !17193)
!17198 = !DILocation(line: 0, scope: !15603, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 229, column: 2, scope: !15596, inlinedAt: !17197)
!17200 = !DILocation(line: 186, column: 2, scope: !15613, inlinedAt: !17199)
!17201 = !DILocation(line: 186, column: 2, scope: !15614, inlinedAt: !17199)
!17202 = !DILocation(line: 186, column: 2, scope: !15617, inlinedAt: !17199)
!17203 = !DILocation(line: 188, column: 2, scope: !15619, inlinedAt: !17199)
!17204 = !DILocation(line: 188, column: 2, scope: !15621, inlinedAt: !17199)
!17205 = !DILocation(line: 0, scope: !15619, inlinedAt: !17199)
!17206 = !DILocation(line: 189, column: 7, scope: !15624, inlinedAt: !17199)
!17207 = !DILocation(line: 189, column: 35, scope: !15624, inlinedAt: !17199)
!17208 = !DILocation(line: 189, column: 7, scope: !15625, inlinedAt: !17199)
!17209 = !DILocation(line: 191, column: 21, scope: !15629, inlinedAt: !17199)
!17210 = !DILocation(line: 190, column: 4, scope: !15629, inlinedAt: !17199)
!17211 = !DILocation(line: 192, column: 4, scope: !15629, inlinedAt: !17199)
!17212 = distinct !{!17212, !17203, !17213}
!17213 = !DILocation(line: 194, column: 2, scope: !15619, inlinedAt: !17199)
!17214 = !DILocation(line: 196, column: 37, scope: !15603, inlinedAt: !17199)
!17215 = !DILocation(line: 196, column: 2, scope: !15603, inlinedAt: !17199)
!17216 = !DILocation(line: 197, column: 1, scope: !15603, inlinedAt: !17199)
!17217 = !DILocation(line: 1403, column: 2, scope: !17158)
!17218 = !DILocation(line: 0, scope: !16056, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 1404, column: 2, scope: !17158)
!17220 = !DILocation(line: 0, scope: !16065, inlinedAt: !17221)
!17221 = distinct !DILocation(line: 195, column: 2, scope: !16056, inlinedAt: !17219)
!17222 = !DILocation(line: 225, column: 2, scope: !16072, inlinedAt: !17221)
!17223 = !DILocation(line: 225, column: 2, scope: !16073, inlinedAt: !17221)
!17224 = !DILocation(line: 225, column: 2, scope: !16076, inlinedAt: !17221)
!17225 = !DILocation(line: 196, column: 9, scope: !16056, inlinedAt: !17219)
!17226 = !DILocation(line: 1405, column: 1, scope: !17158)
!17227 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3064, file: !3064, line: 1459, type: !17228, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17230)
!17228 = !DISubroutineType(types: !17229)
!17229 = !{!324, !16266}
!17230 = !{!17231, !17232, !17233}
!17231 = !DILocalVariable(name: "timeout", arg: 1, scope: !17227, file: !3064, line: 1459, type: !16266)
!17232 = !DILocalVariable(name: "ticks", scope: !17227, file: !3064, line: 1461, type: !104)
!17233 = !DILocalVariable(name: "ret", scope: !17227, file: !3064, line: 1480, type: !324)
!17234 = !DILocation(line: 0, scope: !17227)
!17235 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 1463, column: 2, scope: !17238)
!17238 = distinct !DILexicalBlock(scope: !17239, file: !3064, line: 1463, column: 2)
!17239 = distinct !DILexicalBlock(scope: !17227, file: !3064, line: 1463, column: 2)
!17240 = !DILocation(line: 0, scope: !16105, inlinedAt: !17236)
!17241 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17237)
!17242 = !DILocation(line: 1463, column: 2, scope: !17239)
!17243 = !DILocation(line: 1463, column: 2, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17238, file: !3064, line: 1463, column: 2)
!17245 = !DILocation(line: 1468, column: 6, scope: !17246)
!17246 = distinct !DILexicalBlock(scope: !17227, file: !3064, line: 1468, column: 6)
!17247 = !DILocation(line: 1468, column: 6, scope: !17227)
!17248 = !DILocation(line: 1469, column: 20, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17246, file: !3064, line: 1468, column: 40)
!17250 = !DILocation(line: 1469, column: 3, scope: !17249)
!17251 = !DILocation(line: 1473, column: 3, scope: !17249)
!17252 = !DILocation(line: 1478, column: 10, scope: !17227)
!17253 = !DILocation(line: 1480, column: 16, scope: !17227)
!17254 = !DILocation(line: 1485, column: 1, scope: !17227)
!17255 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4197, file: !4197, line: 310, type: !17256, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17258)
!17256 = !DISubroutineType(types: !17257)
!17257 = !{null, !17114}
!17258 = !{!17259}
!17259 = !DILocalVariable(name: "thread", arg: 1, scope: !17255, file: !4197, line: 310, type: !17114)
!17260 = !DILocation(line: 0, scope: !17255)
!17261 = !DILocation(line: 319, column: 2, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17255, file: !4197, line: 319, column: 2)
!17263 = !{i64 2151088267}
!17264 = !DILocation(line: 320, column: 2, scope: !17255)
!17265 = !DILocation(line: 321, column: 1, scope: !17255)
!17266 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3064, file: !3064, line: 1415, type: !17267, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17269)
!17267 = !DISubroutineType(types: !17268)
!17268 = !{!324, !104}
!17269 = !{!17270, !17271, !17272, !17273}
!17270 = !DILocalVariable(name: "ticks", arg: 1, scope: !17266, file: !3064, line: 1415, type: !104)
!17271 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17266, file: !3064, line: 1418, type: !108)
!17272 = !DILocalVariable(name: "timeout", scope: !17266, file: !3064, line: 1430, type: !16266)
!17273 = !DILocalVariable(name: "key", scope: !17266, file: !3064, line: 1437, type: !15370)
!17274 = !DILocation(line: 0, scope: !17266)
!17275 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17276)
!17276 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17277)
!17277 = distinct !DILocation(line: 1420, column: 2, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17279, file: !3064, line: 1420, column: 2)
!17279 = distinct !DILexicalBlock(scope: !17266, file: !3064, line: 1420, column: 2)
!17280 = !DILocation(line: 0, scope: !16105, inlinedAt: !17276)
!17281 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17277)
!17282 = !DILocation(line: 1420, column: 2, scope: !17279)
!17283 = !DILocation(line: 1420, column: 2, scope: !17284)
!17284 = distinct !DILexicalBlock(scope: !17278, file: !3064, line: 1420, column: 2)
!17285 = !DILocation(line: 1425, column: 12, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17266, file: !3064, line: 1425, column: 6)
!17287 = !DILocation(line: 1425, column: 6, scope: !17266)
!17288 = !DILocation(line: 1426, column: 3, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17286, file: !3064, line: 1425, column: 18)
!17290 = !DILocation(line: 1427, column: 3, scope: !17289)
!17291 = !DILocation(line: 1431, column: 24, scope: !17292)
!17292 = distinct !DILexicalBlock(scope: !17266, file: !3064, line: 1431, column: 6)
!17293 = !DILocation(line: 1431, column: 6, scope: !17266)
!17294 = !DILocation(line: 1432, column: 35, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !17292, file: !3064, line: 1431, column: 30)
!17296 = !DILocation(line: 1432, column: 27, scope: !17295)
!17297 = !DILocation(line: 1433, column: 2, scope: !17295)
!17298 = !DILocation(line: 1434, column: 27, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17292, file: !3064, line: 1433, column: 9)
!17300 = !DILocation(line: 0, scope: !17292)
!17301 = !DILocation(line: 0, scope: !15378, inlinedAt: !17302)
!17302 = distinct !DILocation(line: 1437, column: 25, scope: !17266)
!17303 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !17304)
!17304 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !17302)
!17305 = !DILocation(line: 0, scope: !15387, inlinedAt: !17304)
!17306 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !17302)
!17307 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !17302)
!17308 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !17302)
!17309 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !17302)
!17310 = !DILocation(line: 1440, column: 20, scope: !17266)
!17311 = !DILocation(line: 1440, column: 18, scope: !17266)
!17312 = !DILocation(line: 1442, column: 2, scope: !17266)
!17313 = !DILocation(line: 1443, column: 23, scope: !17266)
!17314 = !DILocation(line: 1443, column: 2, scope: !17266)
!17315 = !DILocation(line: 1444, column: 29, scope: !17266)
!17316 = !DILocation(line: 1444, column: 2, scope: !17266)
!17317 = !DILocation(line: 0, scope: !16056, inlinedAt: !17318)
!17318 = distinct !DILocation(line: 1446, column: 8, scope: !17266)
!17319 = !DILocation(line: 0, scope: !16065, inlinedAt: !17320)
!17320 = distinct !DILocation(line: 195, column: 2, scope: !16056, inlinedAt: !17318)
!17321 = !DILocation(line: 225, column: 2, scope: !16072, inlinedAt: !17320)
!17322 = !DILocation(line: 225, column: 2, scope: !16073, inlinedAt: !17320)
!17323 = !DILocation(line: 225, column: 2, scope: !16076, inlinedAt: !17320)
!17324 = !DILocation(line: 196, column: 9, scope: !16056, inlinedAt: !17318)
!17325 = !DILocation(line: 1448, column: 2, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17327, file: !3064, line: 1448, column: 2)
!17327 = distinct !DILexicalBlock(scope: !17266, file: !3064, line: 1448, column: 2)
!17328 = !DILocation(line: 1448, column: 2, scope: !17327)
!17329 = !DILocation(line: 1448, column: 2, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17326, file: !3064, line: 1448, column: 2)
!17331 = !DILocation(line: 1450, column: 10, scope: !17266)
!17332 = !DILocation(line: 1450, column: 45, scope: !17266)
!17333 = !DILocation(line: 1450, column: 43, scope: !17266)
!17334 = !DILocation(line: 1451, column: 6, scope: !17266)
!17335 = !DILocation(line: 1457, column: 1, scope: !17266)
!17336 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !4155, file: !4155, line: 1103, type: !4156, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17337)
!17337 = !{!17338}
!17338 = !DILocalVariable(name: "t", arg: 1, scope: !17336, file: !4155, line: 1103, type: !109)
!17339 = !DILocation(line: 0, scope: !17336)
!17340 = !DILocation(line: 0, scope: !15440, inlinedAt: !17341)
!17341 = distinct !DILocation(line: 1106, column: 9, scope: !17336)
!17342 = !DILocation(line: 139, column: 13, scope: !17343, inlinedAt: !17341)
!17343 = distinct !DILexicalBlock(scope: !17344, file: !4155, line: 138, column: 10)
!17344 = distinct !DILexicalBlock(scope: !17345, file: !4155, line: 136, column: 7)
!17345 = distinct !DILexicalBlock(scope: !15461, file: !4155, line: 134, column: 17)
!17346 = !DILocation(line: 1106, column: 2, scope: !17336)
!17347 = distinct !DISubprogram(name: "k_yield", scope: !4197, file: !4197, line: 140, type: !327, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!17348 = !DILocation(line: 148, column: 2, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17347, file: !4197, line: 148, column: 2)
!17350 = !{i64 2151087587}
!17351 = !DILocation(line: 149, column: 2, scope: !17347)
!17352 = !DILocation(line: 150, column: 1, scope: !17347)
!17353 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3064, file: !3064, line: 1495, type: !17354, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17356)
!17354 = !DISubroutineType(types: !17355)
!17355 = !{!324, !103}
!17356 = !{!17357, !17358}
!17357 = !DILocalVariable(name: "us", arg: 1, scope: !17353, file: !3064, line: 1495, type: !103)
!17358 = !DILocalVariable(name: "ticks", scope: !17353, file: !3064, line: 1497, type: !324)
!17359 = !DILocation(line: 0, scope: !17353)
!17360 = !DILocation(line: 1501, column: 31, scope: !17353)
!17361 = !DILocation(line: 1501, column: 10, scope: !17353)
!17362 = !DILocation(line: 1502, column: 23, scope: !17353)
!17363 = !DILocation(line: 1502, column: 10, scope: !17353)
!17364 = !DILocation(line: 1506, column: 31, scope: !17353)
!17365 = !DILocation(line: 1506, column: 9, scope: !17353)
!17366 = !DILocation(line: 1506, column: 2, scope: !17353)
!17367 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !4155, file: !4155, line: 571, type: !4156, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17368)
!17368 = !{!17369}
!17369 = !DILocalVariable(name: "t", arg: 1, scope: !17367, file: !4155, line: 571, type: !109)
!17370 = !DILocation(line: 0, scope: !17367)
!17371 = !DILocation(line: 0, scope: !15440, inlinedAt: !17372)
!17372 = distinct !DILocation(line: 574, column: 9, scope: !17367)
!17373 = !DILocation(line: 135, column: 5, scope: !17345, inlinedAt: !17372)
!17374 = !DILocation(line: 139, column: 13, scope: !17343, inlinedAt: !17372)
!17375 = !DILocation(line: 574, column: 2, scope: !17367)
!17376 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !4155, file: !4155, line: 1187, type: !4156, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17377)
!17377 = !{!17378}
!17378 = !DILocalVariable(name: "t", arg: 1, scope: !17376, file: !4155, line: 1187, type: !109)
!17379 = !DILocation(line: 0, scope: !17376)
!17380 = !DILocation(line: 0, scope: !15440, inlinedAt: !17381)
!17381 = distinct !DILocation(line: 1190, column: 9, scope: !17376)
!17382 = !DILocation(line: 145, column: 13, scope: !17383, inlinedAt: !17381)
!17383 = distinct !DILexicalBlock(scope: !15458, file: !4155, line: 144, column: 10)
!17384 = !DILocation(line: 1190, column: 2, scope: !17376)
!17385 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3064, file: !3064, line: 1517, type: !17256, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17386)
!17386 = !{!17387}
!17387 = !DILocalVariable(name: "thread", arg: 1, scope: !17385, file: !3064, line: 1517, type: !17114)
!17388 = !DILocation(line: 0, scope: !17385)
!17389 = !DILocation(line: 1521, column: 6, scope: !17390)
!17390 = distinct !DILexicalBlock(scope: !17385, file: !3064, line: 1521, column: 6)
!17391 = !DILocation(line: 1521, column: 6, scope: !17385)
!17392 = !DILocation(line: 1525, column: 6, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17385, file: !3064, line: 1525, column: 6)
!17394 = !DILocation(line: 1525, column: 37, scope: !17393)
!17395 = !DILocation(line: 1525, column: 6, scope: !17385)
!17396 = !DILocation(line: 1527, column: 20, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17398, file: !3064, line: 1527, column: 7)
!17398 = distinct !DILexicalBlock(scope: !17393, file: !3064, line: 1525, column: 42)
!17399 = !DILocation(line: 1527, column: 33, scope: !17397)
!17400 = !DILocation(line: 1527, column: 7, scope: !17398)
!17401 = !DILocation(line: 1532, column: 2, scope: !17385)
!17402 = !DILocation(line: 1533, column: 2, scope: !17385)
!17403 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17404)
!17404 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17405)
!17405 = distinct !DILocation(line: 1537, column: 7, scope: !17406)
!17406 = distinct !DILexicalBlock(scope: !17385, file: !3064, line: 1537, column: 6)
!17407 = !DILocation(line: 0, scope: !16105, inlinedAt: !17404)
!17408 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17405)
!17409 = !DILocation(line: 1537, column: 6, scope: !17385)
!17410 = !DILocation(line: 1538, column: 3, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17406, file: !3064, line: 1537, column: 25)
!17412 = !DILocation(line: 1539, column: 2, scope: !17411)
!17413 = !DILocation(line: 1540, column: 1, scope: !17385)
!17414 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13302, file: !13302, line: 101, type: !15521, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17415)
!17415 = !{!17416}
!17416 = !DILocalVariable(name: "thread", arg: 1, scope: !17414, file: !13302, line: 101, type: !2963)
!17417 = !DILocation(line: 0, scope: !17414)
!17418 = !DILocation(line: 103, column: 23, scope: !17414)
!17419 = !DILocation(line: 103, column: 36, scope: !17414)
!17420 = !DILocation(line: 103, column: 55, scope: !17414)
!17421 = !DILocation(line: 103, column: 2, scope: !17414)
!17422 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3064, file: !3064, line: 1567, type: !17423, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17425)
!17423 = !DISubroutineType(types: !17424)
!17424 = !{!17114}
!17425 = !{!17426}
!17426 = !DILocalVariable(name: "ret", scope: !17422, file: !3064, line: 1577, type: !17114)
!17427 = !DILocation(line: 1577, column: 30, scope: !17422)
!17428 = !DILocation(line: 0, scope: !17422)
!17429 = !DILocation(line: 1582, column: 2, scope: !17422)
!17430 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3064, file: !3064, line: 1593, type: !17431, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !2645)
!17431 = !DISubroutineType(types: !17432)
!17432 = !{!103}
!17433 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17434)
!17434 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17435)
!17435 = distinct !DILocation(line: 1595, column: 10, scope: !17430)
!17436 = !DILocation(line: 0, scope: !16105, inlinedAt: !17434)
!17437 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17435)
!17438 = !DILocation(line: 1595, column: 27, scope: !17430)
!17439 = !DILocation(line: 1595, column: 41, scope: !17430)
!17440 = !DILocation(line: 1595, column: 30, scope: !17430)
!17441 = !DILocation(line: 1595, column: 2, scope: !17430)
!17442 = distinct !DISubprogram(name: "z_thread_abort", scope: !3064, file: !3064, line: 1725, type: !15336, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17443)
!17443 = !{!17444, !17445}
!17444 = !DILocalVariable(name: "thread", arg: 1, scope: !17442, file: !3064, line: 1725, type: !2963)
!17445 = !DILocalVariable(name: "key", scope: !17442, file: !3064, line: 1727, type: !15370)
!17446 = !DILocation(line: 0, scope: !17442)
!17447 = !DILocation(line: 0, scope: !15378, inlinedAt: !17448)
!17448 = distinct !DILocation(line: 1727, column: 25, scope: !17442)
!17449 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !17450)
!17450 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !17448)
!17451 = !DILocation(line: 0, scope: !15387, inlinedAt: !17450)
!17452 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !17448)
!17453 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !17448)
!17454 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !17448)
!17455 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !17448)
!17456 = !DILocation(line: 1729, column: 20, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17442, file: !3064, line: 1729, column: 6)
!17458 = !DILocation(line: 1729, column: 33, scope: !17457)
!17459 = !DILocation(line: 1729, column: 48, scope: !17457)
!17460 = !DILocation(line: 1729, column: 6, scope: !17442)
!17461 = !DILocation(line: 0, scope: !15412, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 1730, column: 3, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17457, file: !3064, line: 1729, column: 54)
!17464 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !17462)
!17465 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !17462)
!17466 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !17462)
!17467 = !DILocation(line: 0, scope: !15426, inlinedAt: !17468)
!17468 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !17462)
!17469 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !17468)
!17470 = !DILocation(line: 1731, column: 3, scope: !17471)
!17471 = distinct !DILexicalBlock(scope: !17472, file: !3064, line: 1731, column: 3)
!17472 = distinct !DILexicalBlock(scope: !17473, file: !3064, line: 1731, column: 3)
!17473 = distinct !DILexicalBlock(scope: !17463, file: !3064, line: 1731, column: 3)
!17474 = !DILocation(line: 1736, column: 20, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17442, file: !3064, line: 1736, column: 6)
!17476 = !DILocation(line: 1736, column: 33, scope: !17475)
!17477 = !DILocation(line: 1736, column: 49, scope: !17475)
!17478 = !DILocation(line: 1736, column: 6, scope: !17442)
!17479 = !DILocation(line: 0, scope: !15412, inlinedAt: !17480)
!17480 = distinct !DILocation(line: 1737, column: 3, scope: !17481)
!17481 = distinct !DILexicalBlock(scope: !17475, file: !3064, line: 1736, column: 56)
!17482 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !17480)
!17483 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !17480)
!17484 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !17480)
!17485 = !DILocation(line: 0, scope: !15426, inlinedAt: !17486)
!17486 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !17480)
!17487 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !17486)
!17488 = !DILocation(line: 1738, column: 3, scope: !17481)
!17489 = !DILocation(line: 1775, column: 2, scope: !17442)
!17490 = !DILocation(line: 1776, column: 16, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17442, file: !3064, line: 1776, column: 6)
!17492 = !DILocation(line: 1776, column: 13, scope: !17491)
!17493 = !DILocation(line: 1776, column: 25, scope: !17491)
!17494 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17495)
!17495 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17496)
!17496 = distinct !DILocation(line: 1776, column: 29, scope: !17491)
!17497 = !DILocation(line: 0, scope: !16105, inlinedAt: !17495)
!17498 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17496)
!17499 = !DILocation(line: 1776, column: 6, scope: !17442)
!17500 = !DILocation(line: 0, scope: !16056, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 1777, column: 3, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17491, file: !3064, line: 1776, column: 47)
!17503 = !DILocation(line: 0, scope: !16065, inlinedAt: !17504)
!17504 = distinct !DILocation(line: 195, column: 2, scope: !16056, inlinedAt: !17501)
!17505 = !DILocation(line: 225, column: 2, scope: !16072, inlinedAt: !17504)
!17506 = !DILocation(line: 225, column: 2, scope: !16073, inlinedAt: !17504)
!17507 = !DILocation(line: 225, column: 2, scope: !16076, inlinedAt: !17504)
!17508 = !DILocation(line: 196, column: 9, scope: !16056, inlinedAt: !17501)
!17509 = !DILocation(line: 1778, column: 3, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17511, file: !3064, line: 1778, column: 3)
!17511 = distinct !DILexicalBlock(scope: !17512, file: !3064, line: 1778, column: 3)
!17512 = distinct !DILexicalBlock(scope: !17502, file: !3064, line: 1778, column: 3)
!17513 = !DILocation(line: 0, scope: !15412, inlinedAt: !17514)
!17514 = distinct !DILocation(line: 1780, column: 2, scope: !17442)
!17515 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !17514)
!17516 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !17514)
!17517 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !17514)
!17518 = !DILocation(line: 0, scope: !15426, inlinedAt: !17519)
!17519 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !17514)
!17520 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !17519)
!17521 = !DILocation(line: 1781, column: 1, scope: !17442)
!17522 = distinct !DISubprogram(name: "end_thread", scope: !3064, file: !3064, line: 1690, type: !15336, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17523)
!17523 = !{!17524}
!17524 = !DILocalVariable(name: "thread", arg: 1, scope: !17522, file: !3064, line: 1690, type: !2963)
!17525 = !DILocation(line: 0, scope: !17522)
!17526 = !DILocation(line: 1695, column: 20, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17522, file: !3064, line: 1695, column: 6)
!17528 = !DILocation(line: 1695, column: 33, scope: !17527)
!17529 = !DILocation(line: 1695, column: 49, scope: !17527)
!17530 = !DILocation(line: 1695, column: 6, scope: !17522)
!17531 = !DILocation(line: 1697, column: 29, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17527, file: !3064, line: 1695, column: 56)
!17533 = !DILocation(line: 1698, column: 7, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17532, file: !3064, line: 1698, column: 7)
!17535 = !DILocation(line: 1698, column: 7, scope: !17532)
!17536 = !DILocation(line: 0, scope: !15572, inlinedAt: !17537)
!17537 = distinct !DILocation(line: 1699, column: 4, scope: !17538)
!17538 = distinct !DILexicalBlock(scope: !17534, file: !3064, line: 1698, column: 35)
!17539 = !DILocation(line: 266, column: 28, scope: !15572, inlinedAt: !17537)
!17540 = !DILocation(line: 0, scope: !15580, inlinedAt: !17541)
!17541 = distinct !DILocation(line: 268, column: 3, scope: !15584, inlinedAt: !17537)
!17542 = !DILocation(line: 234, column: 2, scope: !15580, inlinedAt: !17541)
!17543 = !DILocation(line: 1700, column: 3, scope: !17538)
!17544 = !DILocation(line: 1701, column: 20, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17532, file: !3064, line: 1701, column: 7)
!17546 = !DILocation(line: 1701, column: 30, scope: !17545)
!17547 = !DILocation(line: 1701, column: 7, scope: !17532)
!17548 = !DILocation(line: 1702, column: 4, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17545, file: !3064, line: 1701, column: 39)
!17550 = !DILocation(line: 1703, column: 3, scope: !17549)
!17551 = !DILocation(line: 1704, column: 9, scope: !17532)
!17552 = !DILocation(line: 1705, column: 23, scope: !17532)
!17553 = !DILocation(line: 1705, column: 3, scope: !17532)
!17554 = !DILocation(line: 1706, column: 3, scope: !17532)
!17555 = !DILocation(line: 1722, column: 2, scope: !17532)
!17556 = !DILocation(line: 1723, column: 1, scope: !17522)
!17557 = distinct !DISubprogram(name: "unpend_all", scope: !3064, file: !3064, line: 1674, type: !17558, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17560)
!17558 = !DISubroutineType(types: !17559)
!17559 = !{null, !2994}
!17560 = !{!17561, !17562}
!17561 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17557, file: !3064, line: 1674, type: !2994)
!17562 = !DILocalVariable(name: "thread", scope: !17557, file: !3064, line: 1676, type: !2963)
!17563 = !DILocation(line: 0, scope: !17557)
!17564 = !DILocation(line: 1678, column: 19, scope: !17557)
!17565 = !DILocation(line: 1678, column: 41, scope: !17557)
!17566 = !DILocation(line: 1678, column: 2, scope: !17557)
!17567 = !DILocation(line: 1679, column: 3, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17557, file: !3064, line: 1678, column: 50)
!17569 = !DILocation(line: 1680, column: 9, scope: !17568)
!17570 = !DILocalVariable(name: "thread", arg: 1, scope: !17571, file: !13322, line: 65, type: !2963)
!17571 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13322, file: !13322, line: 65, type: !17572, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17574)
!17572 = !DISubroutineType(types: !17573)
!17573 = !{null, !2963, !32}
!17574 = !{!17570, !17575}
!17575 = !DILocalVariable(name: "value", arg: 2, scope: !17571, file: !13322, line: 65, type: !32)
!17576 = !DILocation(line: 0, scope: !17571, inlinedAt: !17577)
!17577 = distinct !DILocation(line: 1681, column: 3, scope: !17568)
!17578 = !DILocation(line: 67, column: 15, scope: !17571, inlinedAt: !17577)
!17579 = !DILocation(line: 67, column: 33, scope: !17571, inlinedAt: !17577)
!17580 = !DILocation(line: 1682, column: 3, scope: !17568)
!17581 = distinct !{!17581, !17566, !17582}
!17582 = !DILocation(line: 1683, column: 2, scope: !17557)
!17583 = !DILocation(line: 1684, column: 1, scope: !17557)
!17584 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3064, file: !3064, line: 1794, type: !17585, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17587)
!17585 = !DISubroutineType(types: !17586)
!17586 = !{!103, !2963, !16266}
!17587 = !{!17588, !17589, !17590, !17591}
!17588 = !DILocalVariable(name: "thread", arg: 1, scope: !17584, file: !3064, line: 1794, type: !2963)
!17589 = !DILocalVariable(name: "timeout", arg: 2, scope: !17584, file: !3064, line: 1794, type: !16266)
!17590 = !DILocalVariable(name: "key", scope: !17584, file: !3064, line: 1796, type: !15370)
!17591 = !DILocalVariable(name: "ret", scope: !17584, file: !3064, line: 1797, type: !103)
!17592 = !DILocation(line: 0, scope: !17584)
!17593 = !DILocation(line: 0, scope: !15378, inlinedAt: !17594)
!17594 = distinct !DILocation(line: 1796, column: 25, scope: !17584)
!17595 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !17596)
!17596 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !17594)
!17597 = !DILocation(line: 0, scope: !15387, inlinedAt: !17596)
!17598 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !17594)
!17599 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !17594)
!17600 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !17594)
!17601 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !17594)
!17602 = !DILocation(line: 1801, column: 20, scope: !17603)
!17603 = distinct !DILexicalBlock(scope: !17584, file: !3064, line: 1801, column: 6)
!17604 = !DILocation(line: 1801, column: 33, scope: !17603)
!17605 = !DILocation(line: 1801, column: 49, scope: !17603)
!17606 = !DILocation(line: 1801, column: 6, scope: !17584)
!17607 = !DILocation(line: 1803, column: 13, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17603, file: !3064, line: 1803, column: 13)
!17609 = !DILocation(line: 1803, column: 13, scope: !17603)
!17610 = !DILocation(line: 1805, column: 24, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17608, file: !3064, line: 1805, column: 13)
!17612 = !DILocation(line: 1805, column: 21, scope: !17611)
!17613 = !DILocation(line: 1805, column: 34, scope: !17611)
!17614 = !DILocation(line: 1806, column: 20, scope: !17611)
!17615 = !DILocation(line: 1806, column: 44, scope: !17611)
!17616 = !DILocation(line: 1806, column: 30, scope: !17611)
!17617 = !DILocation(line: 1805, column: 13, scope: !17608)
!17618 = !DILocation(line: 1031, column: 3, scope: !16105, inlinedAt: !17619)
!17619 = distinct !DILocation(line: 48, column: 10, scope: !16109, inlinedAt: !17620)
!17620 = distinct !DILocation(line: 1809, column: 3, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17622, file: !3064, line: 1809, column: 3)
!17622 = distinct !DILexicalBlock(scope: !17623, file: !3064, line: 1809, column: 3)
!17623 = distinct !DILexicalBlock(scope: !17611, file: !3064, line: 1808, column: 9)
!17624 = !DILocation(line: 0, scope: !16105, inlinedAt: !17619)
!17625 = !DILocation(line: 48, column: 9, scope: !16109, inlinedAt: !17620)
!17626 = !DILocation(line: 1809, column: 3, scope: !17622)
!17627 = !DILocation(line: 1809, column: 3, scope: !17628)
!17628 = distinct !DILexicalBlock(scope: !17621, file: !3064, line: 1809, column: 3)
!17629 = !DILocation(line: 1810, column: 23, scope: !17623)
!17630 = !DILocation(line: 1810, column: 42, scope: !17623)
!17631 = !DILocation(line: 1810, column: 3, scope: !17623)
!17632 = !DILocation(line: 1811, column: 22, scope: !17623)
!17633 = !DILocation(line: 1811, column: 3, scope: !17623)
!17634 = !DILocation(line: 0, scope: !16056, inlinedAt: !17635)
!17635 = distinct !DILocation(line: 1814, column: 9, scope: !17623)
!17636 = !DILocation(line: 0, scope: !16065, inlinedAt: !17637)
!17637 = distinct !DILocation(line: 195, column: 2, scope: !16056, inlinedAt: !17635)
!17638 = !DILocation(line: 225, column: 2, scope: !16072, inlinedAt: !17637)
!17639 = !DILocation(line: 225, column: 2, scope: !16073, inlinedAt: !17637)
!17640 = !DILocation(line: 225, column: 2, scope: !16076, inlinedAt: !17637)
!17641 = !DILocation(line: 196, column: 9, scope: !16056, inlinedAt: !17635)
!17642 = !DILocation(line: 1817, column: 3, scope: !17623)
!17643 = !DILocation(line: 0, scope: !17603)
!17644 = !DILocation(line: 0, scope: !15412, inlinedAt: !17645)
!17645 = distinct !DILocation(line: 1822, column: 2, scope: !17584)
!17646 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !17645)
!17647 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !17645)
!17648 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !17645)
!17649 = !DILocation(line: 0, scope: !15426, inlinedAt: !17650)
!17650 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !17645)
!17651 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !17650)
!17652 = !DILocation(line: 1823, column: 2, scope: !17584)
!17653 = !DILocation(line: 1824, column: 1, scope: !17584)
!17654 = distinct !DISubprogram(name: "z_sched_wake", scope: !3064, file: !3064, line: 1882, type: !17655, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17657)
!17655 = !DISubroutineType(types: !17656)
!17656 = !{!119, !2994, !103, !102}
!17657 = !{!17658, !17659, !17660, !17661, !17662, !17663, !17665}
!17658 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17654, file: !3064, line: 1882, type: !2994)
!17659 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17654, file: !3064, line: 1882, type: !103)
!17660 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17654, file: !3064, line: 1882, type: !102)
!17661 = !DILocalVariable(name: "thread", scope: !17654, file: !3064, line: 1884, type: !2963)
!17662 = !DILocalVariable(name: "ret", scope: !17654, file: !3064, line: 1885, type: !119)
!17663 = !DILocalVariable(name: "__i", scope: !17664, file: !3064, line: 1887, type: !15370)
!17664 = distinct !DILexicalBlock(scope: !17654, file: !3064, line: 1887, column: 2)
!17665 = !DILocalVariable(name: "__key", scope: !17664, file: !3064, line: 1887, type: !15370)
!17666 = !DILocation(line: 0, scope: !17654)
!17667 = !DILocation(line: 0, scope: !17664)
!17668 = !DILocation(line: 0, scope: !15378, inlinedAt: !17669)
!17669 = distinct !DILocation(line: 1887, column: 2, scope: !17664)
!17670 = !DILocation(line: 55, column: 2, scope: !15387, inlinedAt: !17671)
!17671 = distinct !DILocation(line: 145, column: 10, scope: !15378, inlinedAt: !17669)
!17672 = !DILocation(line: 0, scope: !15387, inlinedAt: !17671)
!17673 = !DILocation(line: 148, column: 2, scope: !15395, inlinedAt: !17669)
!17674 = !DILocation(line: 148, column: 2, scope: !15396, inlinedAt: !17669)
!17675 = !DILocation(line: 148, column: 2, scope: !15399, inlinedAt: !17669)
!17676 = !DILocation(line: 160, column: 2, scope: !15378, inlinedAt: !17669)
!17677 = !DILocation(line: 1888, column: 12, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17679, file: !3064, line: 1887, column: 26)
!17679 = distinct !DILexicalBlock(scope: !17664, file: !3064, line: 1887, column: 2)
!17680 = !DILocation(line: 1890, column: 14, scope: !17681)
!17681 = distinct !DILexicalBlock(scope: !17678, file: !3064, line: 1890, column: 7)
!17682 = !DILocation(line: 1890, column: 7, scope: !17678)
!17683 = !DILocalVariable(name: "thread", arg: 1, scope: !17684, file: !13781, line: 134, type: !2963)
!17684 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13781, file: !13781, line: 134, type: !17685, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17687)
!17685 = !DISubroutineType(types: !17686)
!17686 = !{null, !2963, !32, !102}
!17687 = !{!17683, !17688, !17689}
!17688 = !DILocalVariable(name: "value", arg: 2, scope: !17684, file: !13781, line: 135, type: !32)
!17689 = !DILocalVariable(name: "data", arg: 3, scope: !17684, file: !13781, line: 136, type: !102)
!17690 = !DILocation(line: 0, scope: !17684, inlinedAt: !17691)
!17691 = distinct !DILocation(line: 1891, column: 4, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17681, file: !3064, line: 1890, column: 23)
!17693 = !DILocation(line: 0, scope: !17571, inlinedAt: !17694)
!17694 = distinct !DILocation(line: 138, column: 2, scope: !17684, inlinedAt: !17691)
!17695 = !DILocation(line: 67, column: 15, scope: !17571, inlinedAt: !17694)
!17696 = !DILocation(line: 67, column: 33, scope: !17571, inlinedAt: !17694)
!17697 = !DILocation(line: 139, column: 15, scope: !17684, inlinedAt: !17691)
!17698 = !DILocation(line: 139, column: 25, scope: !17684, inlinedAt: !17691)
!17699 = !DILocation(line: 1894, column: 4, scope: !17692)
!17700 = !DILocation(line: 1895, column: 10, scope: !17692)
!17701 = !DILocation(line: 1896, column: 4, scope: !17692)
!17702 = !DILocation(line: 1898, column: 3, scope: !17692)
!17703 = !DILocation(line: 0, scope: !15412, inlinedAt: !17704)
!17704 = distinct !DILocation(line: 1887, column: 2, scope: !17679)
!17705 = !DILocation(line: 194, column: 2, scope: !15420, inlinedAt: !17704)
!17706 = !DILocation(line: 194, column: 2, scope: !15421, inlinedAt: !17704)
!17707 = !DILocation(line: 194, column: 2, scope: !15424, inlinedAt: !17704)
!17708 = !DILocation(line: 0, scope: !15426, inlinedAt: !17709)
!17709 = distinct !DILocation(line: 215, column: 2, scope: !15412, inlinedAt: !17704)
!17710 = !DILocation(line: 95, column: 2, scope: !15426, inlinedAt: !17709)
!17711 = !DILocation(line: 1901, column: 2, scope: !17654)
!17712 = distinct !DISubprogram(name: "z_sched_wait", scope: !3064, file: !3064, line: 1904, type: !17713, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2960, retainedNodes: !17715)
!17713 = !DISubroutineType(types: !17714)
!17714 = !{!103, !15381, !15370, !2994, !16266, !1556}
!17715 = !{!17716, !17717, !17718, !17719, !17720, !17721}
!17716 = !DILocalVariable(name: "lock", arg: 1, scope: !17712, file: !3064, line: 1904, type: !15381)
!17717 = !DILocalVariable(name: "key", arg: 2, scope: !17712, file: !3064, line: 1904, type: !15370)
!17718 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17712, file: !3064, line: 1905, type: !2994)
!17719 = !DILocalVariable(name: "timeout", arg: 4, scope: !17712, file: !3064, line: 1905, type: !16266)
!17720 = !DILocalVariable(name: "data", arg: 5, scope: !17712, file: !3064, line: 1905, type: !1556)
!17721 = !DILocalVariable(name: "ret", scope: !17712, file: !3064, line: 1907, type: !103)
!17722 = !DILocation(line: 0, scope: !17712)
!17723 = !DILocation(line: 1907, column: 12, scope: !17712)
!17724 = !DILocation(line: 1909, column: 11, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17712, file: !3064, line: 1909, column: 6)
!17726 = !DILocation(line: 1909, column: 6, scope: !17712)
!17727 = !DILocation(line: 1910, column: 11, scope: !17728)
!17728 = distinct !DILexicalBlock(scope: !17725, file: !3064, line: 1909, column: 20)
!17729 = !DILocation(line: 1910, column: 26, scope: !17728)
!17730 = !DILocation(line: 1910, column: 9, scope: !17728)
!17731 = !DILocation(line: 1911, column: 2, scope: !17728)
!17732 = !DILocation(line: 1912, column: 2, scope: !17712)
!17733 = distinct !DISubprogram(name: "z_data_copy", scope: !17734, file: !17734, line: 22, type: !327, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3879, retainedNodes: !2645)
!17734 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17735 = !DILocation(line: 24, column: 2, scope: !17733)
!17736 = !DILocation(line: 27, column: 2, scope: !17733)
!17737 = !DILocation(line: 71, column: 1, scope: !17733)
!17738 = distinct !DISubprogram(name: "z_add_timeout", scope: !3101, file: !3101, line: 88, type: !17739, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17745)
!17739 = !DISubroutineType(types: !17740)
!17740 = !{null, !3074, !3093, !17741}
!17741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17742)
!17742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17743)
!17743 = !{!17744}
!17744 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17742, file: !105, line: 66, baseType: !104, size: 64)
!17745 = !{!17746, !17747, !17748, !17749, !17755, !17756, !17759, !17762}
!17746 = !DILocalVariable(name: "to", arg: 1, scope: !17738, file: !3101, line: 88, type: !3074)
!17747 = !DILocalVariable(name: "fn", arg: 2, scope: !17738, file: !3101, line: 88, type: !3093)
!17748 = !DILocalVariable(name: "timeout", arg: 3, scope: !17738, file: !3101, line: 89, type: !17741)
!17749 = !DILocalVariable(name: "__i", scope: !17750, file: !3101, line: 102, type: !17751)
!17750 = distinct !DILexicalBlock(scope: !17738, file: !3101, line: 102, column: 2)
!17751 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !17752)
!17752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !17753)
!17753 = !{!17754}
!17754 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17752, file: !149, line: 33, baseType: !103, size: 32)
!17755 = !DILocalVariable(name: "__key", scope: !17750, file: !3101, line: 102, type: !17751)
!17756 = !DILocalVariable(name: "t", scope: !17757, file: !3101, line: 103, type: !3074)
!17757 = distinct !DILexicalBlock(scope: !17758, file: !3101, line: 102, column: 24)
!17758 = distinct !DILexicalBlock(scope: !17750, file: !3101, line: 102, column: 2)
!17759 = !DILocalVariable(name: "ticks", scope: !17760, file: !3101, line: 107, type: !104)
!17760 = distinct !DILexicalBlock(scope: !17761, file: !3101, line: 106, column: 39)
!17761 = distinct !DILexicalBlock(scope: !17757, file: !3101, line: 105, column: 7)
!17762 = !DILocalVariable(name: "next_time", scope: !17763, file: !3101, line: 137, type: !324)
!17763 = distinct !DILexicalBlock(scope: !17764, file: !3101, line: 127, column: 22)
!17764 = distinct !DILexicalBlock(scope: !17757, file: !3101, line: 127, column: 7)
!17765 = !DILocation(line: 0, scope: !17738)
!17766 = !DILocation(line: 91, column: 6, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17738, file: !3101, line: 91, column: 6)
!17768 = !DILocation(line: 91, column: 6, scope: !17738)
!17769 = !DILocation(line: 99, column: 2, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17771, file: !3101, line: 99, column: 2)
!17771 = distinct !DILexicalBlock(scope: !17738, file: !3101, line: 99, column: 2)
!17772 = !DILocation(line: 99, column: 2, scope: !17771)
!17773 = !DILocation(line: 99, column: 2, scope: !17774)
!17774 = distinct !DILexicalBlock(scope: !17770, file: !3101, line: 99, column: 2)
!17775 = !DILocation(line: 100, column: 6, scope: !17738)
!17776 = !DILocation(line: 100, column: 9, scope: !17738)
!17777 = !DILocation(line: 0, scope: !17750)
!17778 = !DILocalVariable(name: "l", arg: 1, scope: !17779, file: !149, line: 136, type: !17782)
!17779 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !17780, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17783)
!17780 = !DISubroutineType(types: !17781)
!17781 = !{!17751, !17782}
!17782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!17783 = !{!17778, !17784}
!17784 = !DILocalVariable(name: "k", scope: !17779, file: !149, line: 139, type: !17751)
!17785 = !DILocation(line: 0, scope: !17779, inlinedAt: !17786)
!17786 = distinct !DILocation(line: 102, column: 2, scope: !17750)
!17787 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !17792)
!17788 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17789)
!17789 = !{!17790, !17791}
!17790 = !DILocalVariable(name: "key", scope: !17788, file: !8072, line: 44, type: !32)
!17791 = !DILocalVariable(name: "tmp", scope: !17788, file: !8072, line: 53, type: !32)
!17792 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !17786)
!17793 = !{i64 2850193}
!17794 = !DILocation(line: 0, scope: !17788, inlinedAt: !17792)
!17795 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !17786)
!17796 = distinct !DILexicalBlock(scope: !17797, file: !149, line: 148, column: 2)
!17797 = distinct !DILexicalBlock(scope: !17779, file: !149, line: 148, column: 2)
!17798 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !17786)
!17799 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !17786)
!17800 = distinct !DILexicalBlock(scope: !17796, file: !149, line: 148, column: 2)
!17801 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !17786)
!17802 = !DILocation(line: 106, column: 33, scope: !17761)
!17803 = !DILocation(line: 105, column: 7, scope: !17757)
!17804 = !DILocation(line: 107, column: 50, scope: !17760)
!17805 = !DILocation(line: 107, column: 48, scope: !17760)
!17806 = !DILocation(line: 0, scope: !17760)
!17807 = !DILocation(line: 109, column: 17, scope: !17760)
!17808 = !DILocation(line: 110, column: 3, scope: !17760)
!17809 = !DILocation(line: 111, column: 31, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17761, file: !3101, line: 110, column: 10)
!17811 = !DILocation(line: 111, column: 37, scope: !17810)
!17812 = !DILocation(line: 111, column: 35, scope: !17810)
!17813 = !DILocation(line: 0, scope: !17761)
!17814 = !DILocation(line: 109, column: 8, scope: !17760)
!17815 = !DILocation(line: 109, column: 15, scope: !17760)
!17816 = !DILocation(line: 114, column: 12, scope: !17817)
!17817 = distinct !DILexicalBlock(scope: !17757, file: !3101, line: 114, column: 3)
!17818 = !DILocation(line: 0, scope: !17757)
!17819 = !DILocation(line: 114, column: 3, scope: !17817)
!17820 = !DILocation(line: 115, column: 24, scope: !17821)
!17821 = distinct !DILexicalBlock(scope: !17822, file: !3101, line: 115, column: 8)
!17822 = distinct !DILexicalBlock(scope: !17823, file: !3101, line: 114, column: 45)
!17823 = distinct !DILexicalBlock(scope: !17817, file: !3101, line: 114, column: 3)
!17824 = !DILocation(line: 115, column: 11, scope: !17821)
!17825 = !DILocation(line: 115, column: 18, scope: !17821)
!17826 = !DILocation(line: 115, column: 8, scope: !17822)
!17827 = !DILocation(line: 116, column: 15, scope: !17828)
!17828 = distinct !DILexicalBlock(scope: !17821, file: !3101, line: 115, column: 32)
!17829 = !DILocation(line: 117, column: 26, scope: !17828)
!17830 = !DILocation(line: 117, column: 5, scope: !17828)
!17831 = !DILocation(line: 123, column: 7, scope: !17757)
!17832 = !DILocation(line: 120, column: 15, scope: !17822)
!17833 = !DILocation(line: 114, column: 36, scope: !17823)
!17834 = distinct !{!17834, !17819, !17835}
!17835 = !DILocation(line: 121, column: 3, scope: !17817)
!17836 = !DILocation(line: 124, column: 4, scope: !17837)
!17837 = distinct !DILexicalBlock(scope: !17838, file: !3101, line: 123, column: 18)
!17838 = distinct !DILexicalBlock(scope: !17757, file: !3101, line: 123, column: 7)
!17839 = !DILocation(line: 125, column: 3, scope: !17837)
!17840 = !DILocation(line: 127, column: 13, scope: !17764)
!17841 = !DILocation(line: 127, column: 10, scope: !17764)
!17842 = !DILocation(line: 127, column: 7, scope: !17757)
!17843 = !DILocation(line: 137, column: 24, scope: !17763)
!17844 = !DILocation(line: 0, scope: !17763)
!17845 = !DILocation(line: 139, column: 18, scope: !17846)
!17846 = distinct !DILexicalBlock(scope: !17763, file: !3101, line: 139, column: 8)
!17847 = !DILocation(line: 139, column: 23, scope: !17846)
!17848 = !DILocation(line: 141, column: 5, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17846, file: !3101, line: 140, column: 48)
!17850 = !DILocation(line: 142, column: 4, scope: !17849)
!17851 = !DILocalVariable(name: "key", arg: 2, scope: !17852, file: !149, line: 190, type: !17751)
!17852 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !17853, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17855)
!17853 = !DISubroutineType(types: !17854)
!17854 = !{null, !17782, !17751}
!17855 = !{!17856, !17851}
!17856 = !DILocalVariable(name: "l", arg: 1, scope: !17852, file: !149, line: 189, type: !17782)
!17857 = !DILocation(line: 0, scope: !17852, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 102, column: 2, scope: !17758)
!17859 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !17858)
!17860 = distinct !DILexicalBlock(scope: !17861, file: !149, line: 194, column: 2)
!17861 = distinct !DILexicalBlock(scope: !17852, file: !149, line: 194, column: 2)
!17862 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !17858)
!17863 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !17858)
!17864 = distinct !DILexicalBlock(scope: !17860, file: !149, line: 194, column: 2)
!17865 = !DILocalVariable(name: "key", arg: 1, scope: !17866, file: !8072, line: 84, type: !32)
!17866 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17867)
!17867 = !{!17865}
!17868 = !DILocation(line: 0, scope: !17866, inlinedAt: !17869)
!17869 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !17858)
!17870 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !17869)
!17871 = !{i64 2851010}
!17872 = !DILocation(line: 148, column: 1, scope: !17738)
!17873 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !133, file: !133, line: 225, type: !17874, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17878)
!17874 = !DISubroutineType(types: !17875)
!17875 = !{!119, !17876}
!17876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17877, size: 32)
!17877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3078)
!17878 = !{!17879}
!17879 = !DILocalVariable(name: "node", arg: 1, scope: !17873, file: !133, line: 225, type: !17876)
!17880 = !DILocation(line: 0, scope: !17873)
!17881 = !DILocation(line: 227, column: 15, scope: !17873)
!17882 = !DILocation(line: 227, column: 20, scope: !17873)
!17883 = !DILocation(line: 227, column: 2, scope: !17873)
!17884 = distinct !DISubprogram(name: "elapsed", scope: !3101, file: !3101, line: 62, type: !17885, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !2645)
!17885 = !DISubroutineType(types: !17886)
!17886 = !{!324}
!17887 = !DILocation(line: 64, column: 9, scope: !17884)
!17888 = !DILocation(line: 64, column: 28, scope: !17884)
!17889 = !DILocation(line: 64, column: 35, scope: !17884)
!17890 = !DILocation(line: 64, column: 2, scope: !17884)
!17891 = distinct !DISubprogram(name: "first", scope: !3101, file: !3101, line: 39, type: !17892, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17894)
!17892 = !DISubroutineType(types: !17893)
!17893 = !{!3074}
!17894 = !{!17895}
!17895 = !DILocalVariable(name: "t", scope: !17891, file: !3101, line: 41, type: !17896)
!17896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!17897 = !DILocation(line: 41, column: 19, scope: !17891)
!17898 = !DILocation(line: 0, scope: !17891)
!17899 = !DILocation(line: 43, column: 9, scope: !17891)
!17900 = !DILocation(line: 43, column: 2, scope: !17891)
!17901 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !133, file: !133, line: 443, type: !17902, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17904)
!17902 = !DISubroutineType(types: !17903)
!17903 = !{null, !17896, !17896}
!17904 = !{!17905, !17906, !17907}
!17905 = !DILocalVariable(name: "successor", arg: 1, scope: !17901, file: !133, line: 443, type: !17896)
!17906 = !DILocalVariable(name: "node", arg: 2, scope: !17901, file: !133, line: 443, type: !17896)
!17907 = !DILocalVariable(name: "prev", scope: !17901, file: !133, line: 445, type: !17908)
!17908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17896)
!17909 = !DILocation(line: 0, scope: !17901)
!17910 = !DILocation(line: 445, column: 39, scope: !17901)
!17911 = !DILocation(line: 447, column: 8, scope: !17901)
!17912 = !DILocation(line: 447, column: 13, scope: !17901)
!17913 = !DILocation(line: 448, column: 8, scope: !17901)
!17914 = !DILocation(line: 448, column: 13, scope: !17901)
!17915 = !DILocation(line: 449, column: 8, scope: !17901)
!17916 = !DILocation(line: 449, column: 13, scope: !17901)
!17917 = !DILocation(line: 450, column: 18, scope: !17901)
!17918 = !DILocation(line: 451, column: 1, scope: !17901)
!17919 = distinct !DISubprogram(name: "next", scope: !3101, file: !3101, line: 46, type: !17920, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17922)
!17920 = !DISubroutineType(types: !17921)
!17921 = !{!3074, !3074}
!17922 = !{!17923, !17924}
!17923 = !DILocalVariable(name: "t", arg: 1, scope: !17919, file: !3101, line: 46, type: !3074)
!17924 = !DILocalVariable(name: "n", scope: !17919, file: !3101, line: 48, type: !17896)
!17925 = !DILocation(line: 0, scope: !17919)
!17926 = !DILocation(line: 48, column: 58, scope: !17919)
!17927 = !DILocation(line: 48, column: 19, scope: !17919)
!17928 = !DILocation(line: 50, column: 9, scope: !17919)
!17929 = !DILocation(line: 50, column: 2, scope: !17919)
!17930 = distinct !DISubprogram(name: "sys_dlist_append", scope: !133, file: !133, line: 404, type: !17931, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17934)
!17931 = !DISubroutineType(types: !17932)
!17932 = !{null, !17933, !17896}
!17933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 32)
!17934 = !{!17935, !17936, !17937}
!17935 = !DILocalVariable(name: "list", arg: 1, scope: !17930, file: !133, line: 404, type: !17933)
!17936 = !DILocalVariable(name: "node", arg: 2, scope: !17930, file: !133, line: 404, type: !17896)
!17937 = !DILocalVariable(name: "tail", scope: !17930, file: !133, line: 406, type: !17908)
!17938 = !DILocation(line: 0, scope: !17930)
!17939 = !DILocation(line: 406, column: 34, scope: !17930)
!17940 = !DILocation(line: 408, column: 8, scope: !17930)
!17941 = !DILocation(line: 408, column: 13, scope: !17930)
!17942 = !DILocation(line: 409, column: 8, scope: !17930)
!17943 = !DILocation(line: 409, column: 13, scope: !17930)
!17944 = !DILocation(line: 411, column: 8, scope: !17930)
!17945 = !DILocation(line: 411, column: 13, scope: !17930)
!17946 = !DILocation(line: 412, column: 13, scope: !17930)
!17947 = !DILocation(line: 413, column: 1, scope: !17930)
!17948 = distinct !DISubprogram(name: "next_timeout", scope: !3101, file: !3101, line: 67, type: !17885, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17949)
!17949 = !{!17950, !17951, !17952}
!17950 = !DILocalVariable(name: "to", scope: !17948, file: !3101, line: 69, type: !3074)
!17951 = !DILocalVariable(name: "ticks_elapsed", scope: !17948, file: !3101, line: 70, type: !324)
!17952 = !DILocalVariable(name: "ret", scope: !17948, file: !3101, line: 71, type: !324)
!17953 = !DILocation(line: 69, column: 24, scope: !17948)
!17954 = !DILocation(line: 0, scope: !17948)
!17955 = !DILocation(line: 70, column: 26, scope: !17948)
!17956 = !DILocation(line: 73, column: 10, scope: !17957)
!17957 = distinct !DILexicalBlock(scope: !17948, file: !3101, line: 73, column: 6)
!17958 = !DILocation(line: 73, column: 19, scope: !17957)
!17959 = !DILocation(line: 74, column: 21, scope: !17957)
!17960 = !DILocation(line: 74, column: 30, scope: !17957)
!17961 = !DILocation(line: 74, column: 28, scope: !17957)
!17962 = !DILocation(line: 74, column: 45, scope: !17957)
!17963 = !DILocation(line: 73, column: 6, scope: !17948)
!17964 = !DILocation(line: 77, column: 9, scope: !17965)
!17965 = distinct !DILexicalBlock(scope: !17957, file: !3101, line: 76, column: 9)
!17966 = !DILocation(line: 0, scope: !17957)
!17967 = !DILocation(line: 81, column: 20, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17948, file: !3101, line: 81, column: 6)
!17969 = !DILocation(line: 81, column: 6, scope: !17968)
!17970 = !DILocation(line: 81, column: 32, scope: !17968)
!17971 = !DILocation(line: 85, column: 2, scope: !17948)
!17972 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !133, file: !133, line: 341, type: !17973, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17975)
!17973 = !DISubroutineType(types: !17974)
!17974 = !{!17896, !17933, !17896}
!17975 = !{!17976, !17977}
!17976 = !DILocalVariable(name: "list", arg: 1, scope: !17972, file: !133, line: 341, type: !17933)
!17977 = !DILocalVariable(name: "node", arg: 2, scope: !17972, file: !133, line: 342, type: !17896)
!17978 = !DILocation(line: 0, scope: !17972)
!17979 = !DILocation(line: 344, column: 15, scope: !17972)
!17980 = !DILocation(line: 344, column: 9, scope: !17972)
!17981 = !DILocation(line: 344, column: 26, scope: !17972)
!17982 = !DILocation(line: 344, column: 2, scope: !17972)
!17983 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !133, file: !133, line: 325, type: !17973, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17984)
!17984 = !{!17985, !17986}
!17985 = !DILocalVariable(name: "list", arg: 1, scope: !17983, file: !133, line: 325, type: !17933)
!17986 = !DILocalVariable(name: "node", arg: 2, scope: !17983, file: !133, line: 326, type: !17896)
!17987 = !DILocation(line: 0, scope: !17983)
!17988 = !DILocation(line: 328, column: 24, scope: !17983)
!17989 = !DILocation(line: 328, column: 15, scope: !17983)
!17990 = !DILocation(line: 328, column: 9, scope: !17983)
!17991 = !DILocation(line: 328, column: 45, scope: !17983)
!17992 = !DILocation(line: 328, column: 2, scope: !17983)
!17993 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !133, file: !133, line: 294, type: !17994, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !17996)
!17994 = !DISubroutineType(types: !17995)
!17995 = !{!17896, !17933}
!17996 = !{!17997}
!17997 = !DILocalVariable(name: "list", arg: 1, scope: !17993, file: !133, line: 294, type: !17933)
!17998 = !DILocation(line: 0, scope: !17993)
!17999 = !DILocation(line: 296, column: 9, scope: !17993)
!18000 = !DILocation(line: 296, column: 2, scope: !17993)
!18001 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !133, file: !133, line: 266, type: !18002, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18004)
!18002 = !DISubroutineType(types: !18003)
!18003 = !{!119, !17933}
!18004 = !{!18005}
!18005 = !DILocalVariable(name: "list", arg: 1, scope: !18001, file: !133, line: 266, type: !17933)
!18006 = !DILocation(line: 0, scope: !18001)
!18007 = !DILocation(line: 268, column: 15, scope: !18001)
!18008 = !DILocation(line: 268, column: 20, scope: !18001)
!18009 = !DILocation(line: 268, column: 2, scope: !18001)
!18010 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3101, file: !3101, line: 150, type: !18011, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18013)
!18011 = !DISubroutineType(types: !18012)
!18012 = !{!103, !3074}
!18013 = !{!18014, !18015, !18016, !18018}
!18014 = !DILocalVariable(name: "to", arg: 1, scope: !18010, file: !3101, line: 150, type: !3074)
!18015 = !DILocalVariable(name: "ret", scope: !18010, file: !3101, line: 152, type: !103)
!18016 = !DILocalVariable(name: "__i", scope: !18017, file: !3101, line: 154, type: !17751)
!18017 = distinct !DILexicalBlock(scope: !18010, file: !3101, line: 154, column: 2)
!18018 = !DILocalVariable(name: "__key", scope: !18017, file: !3101, line: 154, type: !17751)
!18019 = !DILocation(line: 0, scope: !18010)
!18020 = !DILocation(line: 0, scope: !18017)
!18021 = !DILocation(line: 0, scope: !17779, inlinedAt: !18022)
!18022 = distinct !DILocation(line: 154, column: 2, scope: !18017)
!18023 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18024)
!18024 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18022)
!18025 = !DILocation(line: 0, scope: !17788, inlinedAt: !18024)
!18026 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18022)
!18027 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18022)
!18028 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18022)
!18029 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18022)
!18030 = !DILocation(line: 155, column: 7, scope: !18031)
!18031 = distinct !DILexicalBlock(scope: !18032, file: !3101, line: 155, column: 7)
!18032 = distinct !DILexicalBlock(scope: !18033, file: !3101, line: 154, column: 24)
!18033 = distinct !DILexicalBlock(scope: !18017, file: !3101, line: 154, column: 2)
!18034 = !DILocation(line: 155, column: 7, scope: !18032)
!18035 = !DILocation(line: 156, column: 4, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18031, file: !3101, line: 155, column: 39)
!18037 = !DILocation(line: 158, column: 3, scope: !18036)
!18038 = !DILocation(line: 0, scope: !17852, inlinedAt: !18039)
!18039 = distinct !DILocation(line: 154, column: 2, scope: !18033)
!18040 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18039)
!18041 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18039)
!18042 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18039)
!18043 = !DILocation(line: 0, scope: !17866, inlinedAt: !18044)
!18044 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18039)
!18045 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18044)
!18046 = !DILocation(line: 161, column: 2, scope: !18010)
!18047 = distinct !DISubprogram(name: "remove_timeout", scope: !3101, file: !3101, line: 53, type: !3095, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18048)
!18048 = !{!18049}
!18049 = !DILocalVariable(name: "t", arg: 1, scope: !18047, file: !3101, line: 53, type: !3074)
!18050 = !DILocation(line: 0, scope: !18047)
!18051 = !DILocation(line: 55, column: 6, scope: !18052)
!18052 = distinct !DILexicalBlock(scope: !18047, file: !3101, line: 55, column: 6)
!18053 = !DILocation(line: 55, column: 14, scope: !18052)
!18054 = !DILocation(line: 55, column: 6, scope: !18047)
!18055 = !DILocation(line: 56, column: 25, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !18052, file: !3101, line: 55, column: 23)
!18057 = !DILocation(line: 56, column: 12, scope: !18056)
!18058 = !DILocation(line: 56, column: 19, scope: !18056)
!18059 = !DILocation(line: 57, column: 2, scope: !18056)
!18060 = !DILocation(line: 59, column: 23, scope: !18047)
!18061 = !DILocation(line: 59, column: 2, scope: !18047)
!18062 = !DILocation(line: 60, column: 1, scope: !18047)
!18063 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !133, file: !133, line: 496, type: !18064, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18066)
!18064 = !DISubroutineType(types: !18065)
!18065 = !{null, !17896}
!18066 = !{!18067, !18068, !18069}
!18067 = !DILocalVariable(name: "node", arg: 1, scope: !18063, file: !133, line: 496, type: !17896)
!18068 = !DILocalVariable(name: "prev", scope: !18063, file: !133, line: 498, type: !17908)
!18069 = !DILocalVariable(name: "next", scope: !18063, file: !133, line: 499, type: !17908)
!18070 = !DILocation(line: 0, scope: !18063)
!18071 = !DILocation(line: 498, column: 34, scope: !18063)
!18072 = !DILocation(line: 499, column: 34, scope: !18063)
!18073 = !DILocation(line: 501, column: 8, scope: !18063)
!18074 = !DILocation(line: 501, column: 13, scope: !18063)
!18075 = !DILocation(line: 502, column: 8, scope: !18063)
!18076 = !DILocation(line: 502, column: 13, scope: !18063)
!18077 = !DILocation(line: 503, column: 2, scope: !18063)
!18078 = !DILocation(line: 504, column: 1, scope: !18063)
!18079 = distinct !DISubprogram(name: "sys_dnode_init", scope: !133, file: !133, line: 211, type: !18064, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18080)
!18080 = !{!18081}
!18081 = !DILocalVariable(name: "node", arg: 1, scope: !18079, file: !133, line: 211, type: !17896)
!18082 = !DILocation(line: 0, scope: !18079)
!18083 = !DILocation(line: 213, column: 8, scope: !18079)
!18084 = !DILocation(line: 213, column: 13, scope: !18079)
!18085 = !DILocation(line: 214, column: 8, scope: !18079)
!18086 = !DILocation(line: 214, column: 13, scope: !18079)
!18087 = !DILocation(line: 215, column: 1, scope: !18079)
!18088 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3101, file: !3101, line: 183, type: !18089, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18093)
!18089 = !DISubroutineType(types: !18090)
!18090 = !{!104, !18091}
!18091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18092, size: 32)
!18092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3075)
!18093 = !{!18094, !18095, !18096, !18098}
!18094 = !DILocalVariable(name: "timeout", arg: 1, scope: !18088, file: !3101, line: 183, type: !18091)
!18095 = !DILocalVariable(name: "ticks", scope: !18088, file: !3101, line: 185, type: !104)
!18096 = !DILocalVariable(name: "__i", scope: !18097, file: !3101, line: 187, type: !17751)
!18097 = distinct !DILexicalBlock(scope: !18088, file: !3101, line: 187, column: 2)
!18098 = !DILocalVariable(name: "__key", scope: !18097, file: !3101, line: 187, type: !17751)
!18099 = !DILocation(line: 0, scope: !18088)
!18100 = !DILocation(line: 0, scope: !18097)
!18101 = !DILocation(line: 0, scope: !17779, inlinedAt: !18102)
!18102 = distinct !DILocation(line: 187, column: 2, scope: !18097)
!18103 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18104)
!18104 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18102)
!18105 = !DILocation(line: 0, scope: !17788, inlinedAt: !18104)
!18106 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18102)
!18107 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18102)
!18108 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18102)
!18109 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18102)
!18110 = !DILocation(line: 188, column: 11, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18112, file: !3101, line: 187, column: 24)
!18112 = distinct !DILexicalBlock(scope: !18097, file: !3101, line: 187, column: 2)
!18113 = !DILocation(line: 0, scope: !17852, inlinedAt: !18114)
!18114 = distinct !DILocation(line: 187, column: 2, scope: !18112)
!18115 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18114)
!18116 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18114)
!18117 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18114)
!18118 = !DILocation(line: 0, scope: !17866, inlinedAt: !18119)
!18119 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18114)
!18120 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18119)
!18121 = !DILocation(line: 191, column: 2, scope: !18088)
!18122 = distinct !DISubprogram(name: "timeout_rem", scope: !3101, file: !3101, line: 165, type: !18089, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18123)
!18123 = !{!18124, !18125, !18126}
!18124 = !DILocalVariable(name: "timeout", arg: 1, scope: !18122, file: !3101, line: 165, type: !18091)
!18125 = !DILocalVariable(name: "ticks", scope: !18122, file: !3101, line: 167, type: !104)
!18126 = !DILocalVariable(name: "t", scope: !18127, file: !3101, line: 173, type: !3074)
!18127 = distinct !DILexicalBlock(scope: !18122, file: !3101, line: 173, column: 2)
!18128 = !DILocation(line: 0, scope: !18122)
!18129 = !DILocation(line: 169, column: 6, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18122, file: !3101, line: 169, column: 6)
!18131 = !DILocation(line: 169, column: 6, scope: !18122)
!18132 = !DILocation(line: 173, column: 28, scope: !18127)
!18133 = !DILocation(line: 0, scope: !18127)
!18134 = !DILocation(line: 173, column: 39, scope: !18135)
!18135 = distinct !DILexicalBlock(scope: !18127, file: !3101, line: 173, column: 2)
!18136 = !DILocation(line: 173, column: 2, scope: !18127)
!18137 = !DILocation(line: 174, column: 15, scope: !18138)
!18138 = distinct !DILexicalBlock(scope: !18135, file: !3101, line: 173, column: 61)
!18139 = !DILocation(line: 174, column: 9, scope: !18138)
!18140 = !DILocation(line: 175, column: 15, scope: !18141)
!18141 = distinct !DILexicalBlock(scope: !18138, file: !3101, line: 175, column: 7)
!18142 = !DILocation(line: 175, column: 7, scope: !18138)
!18143 = !DILocation(line: 173, column: 52, scope: !18135)
!18144 = distinct !{!18144, !18136, !18145}
!18145 = !DILocation(line: 178, column: 2, scope: !18127)
!18146 = !DILocation(line: 180, column: 17, scope: !18122)
!18147 = !DILocation(line: 180, column: 15, scope: !18122)
!18148 = !DILocation(line: 180, column: 2, scope: !18122)
!18149 = !DILocation(line: 181, column: 1, scope: !18122)
!18150 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14105, file: !14105, line: 35, type: !18151, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18153)
!18151 = !DISubroutineType(types: !18152)
!18152 = !{!119, !18091}
!18153 = !{!18154}
!18154 = !DILocalVariable(name: "to", arg: 1, scope: !18150, file: !14105, line: 35, type: !18091)
!18155 = !DILocation(line: 0, scope: !18150)
!18156 = !DILocation(line: 37, column: 35, scope: !18150)
!18157 = !DILocation(line: 37, column: 10, scope: !18150)
!18158 = !DILocation(line: 37, column: 9, scope: !18150)
!18159 = !DILocation(line: 37, column: 2, scope: !18150)
!18160 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3101, file: !3101, line: 194, type: !18089, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18161)
!18161 = !{!18162, !18163, !18164, !18166}
!18162 = !DILocalVariable(name: "timeout", arg: 1, scope: !18160, file: !3101, line: 194, type: !18091)
!18163 = !DILocalVariable(name: "ticks", scope: !18160, file: !3101, line: 196, type: !104)
!18164 = !DILocalVariable(name: "__i", scope: !18165, file: !3101, line: 198, type: !17751)
!18165 = distinct !DILexicalBlock(scope: !18160, file: !3101, line: 198, column: 2)
!18166 = !DILocalVariable(name: "__key", scope: !18165, file: !3101, line: 198, type: !17751)
!18167 = !DILocation(line: 0, scope: !18160)
!18168 = !DILocation(line: 0, scope: !18165)
!18169 = !DILocation(line: 0, scope: !17779, inlinedAt: !18170)
!18170 = distinct !DILocation(line: 198, column: 2, scope: !18165)
!18171 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18172)
!18172 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18170)
!18173 = !DILocation(line: 0, scope: !17788, inlinedAt: !18172)
!18174 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18170)
!18175 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18170)
!18176 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18170)
!18177 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18170)
!18178 = !DILocation(line: 199, column: 11, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18180, file: !3101, line: 198, column: 24)
!18180 = distinct !DILexicalBlock(scope: !18165, file: !3101, line: 198, column: 2)
!18181 = !DILocation(line: 199, column: 23, scope: !18179)
!18182 = !DILocation(line: 0, scope: !17852, inlinedAt: !18183)
!18183 = distinct !DILocation(line: 198, column: 2, scope: !18180)
!18184 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18183)
!18185 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18183)
!18186 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18183)
!18187 = !DILocation(line: 0, scope: !17866, inlinedAt: !18188)
!18188 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18183)
!18189 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18188)
!18190 = !DILocation(line: 199, column: 21, scope: !18179)
!18191 = !DILocation(line: 202, column: 2, scope: !18160)
!18192 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3101, file: !3101, line: 205, type: !17885, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18193)
!18193 = !{!18194, !18195, !18197}
!18194 = !DILocalVariable(name: "ret", scope: !18192, file: !3101, line: 207, type: !324)
!18195 = !DILocalVariable(name: "__i", scope: !18196, file: !3101, line: 209, type: !17751)
!18196 = distinct !DILexicalBlock(scope: !18192, file: !3101, line: 209, column: 2)
!18197 = !DILocalVariable(name: "__key", scope: !18196, file: !3101, line: 209, type: !17751)
!18198 = !DILocation(line: 0, scope: !18192)
!18199 = !DILocation(line: 0, scope: !18196)
!18200 = !DILocation(line: 0, scope: !17779, inlinedAt: !18201)
!18201 = distinct !DILocation(line: 209, column: 2, scope: !18196)
!18202 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18203)
!18203 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18201)
!18204 = !DILocation(line: 0, scope: !17788, inlinedAt: !18203)
!18205 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18201)
!18206 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18201)
!18207 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18201)
!18208 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18201)
!18209 = !DILocation(line: 210, column: 9, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18211, file: !3101, line: 209, column: 24)
!18211 = distinct !DILexicalBlock(scope: !18196, file: !3101, line: 209, column: 2)
!18212 = !DILocation(line: 0, scope: !17852, inlinedAt: !18213)
!18213 = distinct !DILocation(line: 209, column: 2, scope: !18211)
!18214 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18213)
!18215 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18213)
!18216 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18213)
!18217 = !DILocation(line: 0, scope: !17866, inlinedAt: !18218)
!18218 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18213)
!18219 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18218)
!18220 = !DILocation(line: 212, column: 2, scope: !18192)
!18221 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3101, file: !3101, line: 215, type: !11140, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18222)
!18222 = !{!18223, !18224, !18225, !18227, !18228, !18231, !18232}
!18223 = !DILocalVariable(name: "ticks", arg: 1, scope: !18221, file: !3101, line: 215, type: !324)
!18224 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18221, file: !3101, line: 215, type: !119)
!18225 = !DILocalVariable(name: "__i", scope: !18226, file: !3101, line: 217, type: !17751)
!18226 = distinct !DILexicalBlock(scope: !18221, file: !3101, line: 217, column: 2)
!18227 = !DILocalVariable(name: "__key", scope: !18226, file: !3101, line: 217, type: !17751)
!18228 = !DILocalVariable(name: "next_to", scope: !18229, file: !3101, line: 218, type: !103)
!18229 = distinct !DILexicalBlock(scope: !18230, file: !3101, line: 217, column: 24)
!18230 = distinct !DILexicalBlock(scope: !18226, file: !3101, line: 217, column: 2)
!18231 = !DILocalVariable(name: "sooner", scope: !18229, file: !3101, line: 219, type: !119)
!18232 = !DILocalVariable(name: "imminent", scope: !18229, file: !3101, line: 221, type: !119)
!18233 = !DILocation(line: 0, scope: !18221)
!18234 = !DILocation(line: 0, scope: !18226)
!18235 = !DILocation(line: 0, scope: !17779, inlinedAt: !18236)
!18236 = distinct !DILocation(line: 217, column: 2, scope: !18226)
!18237 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18238)
!18238 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18236)
!18239 = !DILocation(line: 0, scope: !17788, inlinedAt: !18238)
!18240 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18236)
!18241 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18236)
!18242 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18236)
!18243 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18236)
!18244 = !DILocation(line: 218, column: 17, scope: !18229)
!18245 = !DILocation(line: 0, scope: !18229)
!18246 = !DILocation(line: 221, column: 27, scope: !18229)
!18247 = !DILocation(line: 233, column: 17, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18229, file: !3101, line: 233, column: 7)
!18249 = !DILocation(line: 234, column: 26, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18248, file: !3101, line: 233, column: 56)
!18251 = !DILocation(line: 234, column: 4, scope: !18250)
!18252 = !DILocation(line: 235, column: 3, scope: !18250)
!18253 = !DILocation(line: 0, scope: !17852, inlinedAt: !18254)
!18254 = distinct !DILocation(line: 217, column: 2, scope: !18230)
!18255 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18254)
!18256 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18254)
!18257 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18254)
!18258 = !DILocation(line: 0, scope: !17866, inlinedAt: !18259)
!18259 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18254)
!18260 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18259)
!18261 = !DILocation(line: 237, column: 1, scope: !18221)
!18262 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3101, file: !3101, line: 239, type: !18263, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18265)
!18263 = !DISubroutineType(types: !18264)
!18264 = !{null, !324}
!18265 = !{!18266, !18267, !18268, !18270}
!18266 = !DILocalVariable(name: "ticks", arg: 1, scope: !18262, file: !3101, line: 239, type: !324)
!18267 = !DILocalVariable(name: "key", scope: !18262, file: !3101, line: 245, type: !17751)
!18268 = !DILocalVariable(name: "t", scope: !18269, file: !3101, line: 262, type: !3074)
!18269 = distinct !DILexicalBlock(scope: !18262, file: !3101, line: 261, column: 67)
!18270 = !DILocalVariable(name: "dt", scope: !18269, file: !3101, line: 263, type: !103)
!18271 = !DILocation(line: 0, scope: !18262)
!18272 = !DILocation(line: 242, column: 2, scope: !18262)
!18273 = !DILocation(line: 0, scope: !17779, inlinedAt: !18274)
!18274 = distinct !DILocation(line: 245, column: 25, scope: !18262)
!18275 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18276)
!18276 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18274)
!18277 = !DILocation(line: 0, scope: !17788, inlinedAt: !18276)
!18278 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18274)
!18279 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18274)
!18280 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18274)
!18281 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18274)
!18282 = !DILocation(line: 261, column: 9, scope: !18262)
!18283 = !DILocation(line: 261, column: 17, scope: !18262)
!18284 = !DILocation(line: 261, column: 25, scope: !18262)
!18285 = !DILocation(line: 261, column: 37, scope: !18262)
!18286 = !DILocation(line: 261, column: 47, scope: !18262)
!18287 = !DILocation(line: 261, column: 44, scope: !18262)
!18288 = !DILocation(line: 261, column: 2, scope: !18262)
!18289 = !DILocation(line: 0, scope: !18269)
!18290 = !DILocation(line: 263, column: 12, scope: !18269)
!18291 = !DILocation(line: 265, column: 16, scope: !18269)
!18292 = !DILocation(line: 265, column: 13, scope: !18269)
!18293 = !DILocation(line: 266, column: 13, scope: !18269)
!18294 = !DILocation(line: 267, column: 3, scope: !18269)
!18295 = !DILocation(line: 0, scope: !17852, inlinedAt: !18296)
!18296 = distinct !DILocation(line: 269, column: 3, scope: !18269)
!18297 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18296)
!18298 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18296)
!18299 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18296)
!18300 = !DILocation(line: 0, scope: !17866, inlinedAt: !18301)
!18301 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18296)
!18302 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18301)
!18303 = !DILocation(line: 270, column: 6, scope: !18269)
!18304 = !DILocation(line: 270, column: 3, scope: !18269)
!18305 = !DILocation(line: 0, scope: !17779, inlinedAt: !18306)
!18306 = distinct !DILocation(line: 271, column: 9, scope: !18269)
!18307 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18308)
!18308 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18306)
!18309 = !DILocation(line: 0, scope: !17788, inlinedAt: !18308)
!18310 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18306)
!18311 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18306)
!18312 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18306)
!18313 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18306)
!18314 = !DILocation(line: 272, column: 22, scope: !18269)
!18315 = distinct !{!18315, !18288, !18316}
!18316 = !DILocation(line: 273, column: 2, scope: !18262)
!18317 = !DILocation(line: 276, column: 19, scope: !18318)
!18318 = distinct !DILexicalBlock(scope: !18319, file: !3101, line: 275, column: 23)
!18319 = distinct !DILexicalBlock(scope: !18262, file: !3101, line: 275, column: 6)
!18320 = !DILocation(line: 277, column: 2, scope: !18318)
!18321 = !DILocation(line: 279, column: 15, scope: !18262)
!18322 = !DILocation(line: 279, column: 12, scope: !18262)
!18323 = !DILocation(line: 280, column: 21, scope: !18262)
!18324 = !DILocation(line: 282, column: 24, scope: !18262)
!18325 = !DILocation(line: 282, column: 2, scope: !18262)
!18326 = !DILocation(line: 0, scope: !17852, inlinedAt: !18327)
!18327 = distinct !DILocation(line: 284, column: 2, scope: !18262)
!18328 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18327)
!18329 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18327)
!18330 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18327)
!18331 = !DILocation(line: 0, scope: !17866, inlinedAt: !18332)
!18332 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18327)
!18333 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18332)
!18334 = !DILocation(line: 285, column: 1, scope: !18262)
!18335 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3101, file: !3101, line: 287, type: !18336, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18338)
!18336 = !DISubroutineType(types: !18337)
!18337 = !{!106}
!18338 = !{!18339, !18340, !18342}
!18339 = !DILocalVariable(name: "t", scope: !18335, file: !3101, line: 289, type: !109)
!18340 = !DILocalVariable(name: "__i", scope: !18341, file: !3101, line: 291, type: !17751)
!18341 = distinct !DILexicalBlock(scope: !18335, file: !3101, line: 291, column: 2)
!18342 = !DILocalVariable(name: "__key", scope: !18341, file: !3101, line: 291, type: !17751)
!18343 = !DILocation(line: 0, scope: !18335)
!18344 = !DILocation(line: 0, scope: !18341)
!18345 = !DILocation(line: 0, scope: !17779, inlinedAt: !18346)
!18346 = distinct !DILocation(line: 291, column: 2, scope: !18341)
!18347 = !DILocation(line: 55, column: 2, scope: !17788, inlinedAt: !18348)
!18348 = distinct !DILocation(line: 145, column: 10, scope: !17779, inlinedAt: !18346)
!18349 = !DILocation(line: 0, scope: !17788, inlinedAt: !18348)
!18350 = !DILocation(line: 148, column: 2, scope: !17796, inlinedAt: !18346)
!18351 = !DILocation(line: 148, column: 2, scope: !17797, inlinedAt: !18346)
!18352 = !DILocation(line: 148, column: 2, scope: !17800, inlinedAt: !18346)
!18353 = !DILocation(line: 160, column: 2, scope: !17779, inlinedAt: !18346)
!18354 = !DILocation(line: 292, column: 7, scope: !18355)
!18355 = distinct !DILexicalBlock(scope: !18356, file: !3101, line: 291, column: 24)
!18356 = distinct !DILexicalBlock(scope: !18341, file: !3101, line: 291, column: 2)
!18357 = !DILocation(line: 292, column: 19, scope: !18355)
!18358 = !DILocation(line: 0, scope: !17852, inlinedAt: !18359)
!18359 = distinct !DILocation(line: 291, column: 2, scope: !18356)
!18360 = !DILocation(line: 194, column: 2, scope: !17860, inlinedAt: !18359)
!18361 = !DILocation(line: 194, column: 2, scope: !17861, inlinedAt: !18359)
!18362 = !DILocation(line: 194, column: 2, scope: !17864, inlinedAt: !18359)
!18363 = !DILocation(line: 0, scope: !17866, inlinedAt: !18364)
!18364 = distinct !DILocation(line: 215, column: 2, scope: !17852, inlinedAt: !18359)
!18365 = !DILocation(line: 95, column: 2, scope: !17866, inlinedAt: !18364)
!18366 = !DILocation(line: 292, column: 17, scope: !18355)
!18367 = !DILocation(line: 294, column: 2, scope: !18335)
!18368 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3101, file: !3101, line: 297, type: !8038, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !2645)
!18369 = !DILocation(line: 300, column: 19, scope: !18368)
!18370 = !DILocation(line: 300, column: 9, scope: !18368)
!18371 = !DILocation(line: 300, column: 2, scope: !18368)
!18372 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3101, file: !3101, line: 306, type: !18336, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !2645)
!18373 = !DILocation(line: 308, column: 9, scope: !18372)
!18374 = !DILocation(line: 308, column: 2, scope: !18372)
!18375 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3101, file: !3101, line: 319, type: !8048, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18376)
!18376 = !{!18377, !18378, !18379, !18380}
!18377 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18375, file: !3101, line: 319, type: !108)
!18378 = !DILocalVariable(name: "start_cycles", scope: !18375, file: !3101, line: 328, type: !108)
!18379 = !DILocalVariable(name: "cycles_to_wait", scope: !18375, file: !3101, line: 331, type: !108)
!18380 = !DILocalVariable(name: "current_cycles", scope: !18381, file: !3101, line: 338, type: !108)
!18381 = distinct !DILexicalBlock(scope: !18382, file: !3101, line: 337, column: 11)
!18382 = distinct !DILexicalBlock(scope: !18383, file: !3101, line: 337, column: 2)
!18383 = distinct !DILexicalBlock(scope: !18375, file: !3101, line: 337, column: 2)
!18384 = !DILocation(line: 0, scope: !18375)
!18385 = !DILocation(line: 322, column: 19, scope: !18386)
!18386 = distinct !DILexicalBlock(scope: !18375, file: !3101, line: 322, column: 6)
!18387 = !DILocation(line: 322, column: 6, scope: !18375)
!18388 = !DILocation(line: 328, column: 26, scope: !18375)
!18389 = !DILocation(line: 333, column: 43, scope: !18375)
!18390 = !DILocation(line: 337, column: 2, scope: !18375)
!18391 = !DILocation(line: 338, column: 29, scope: !18381)
!18392 = !DILocation(line: 0, scope: !18381)
!18393 = !DILocation(line: 341, column: 23, scope: !18394)
!18394 = distinct !DILexicalBlock(scope: !18381, file: !3101, line: 341, column: 7)
!18395 = !DILocation(line: 341, column: 39, scope: !18394)
!18396 = !DILocation(line: 349, column: 1, scope: !18375)
!18397 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !124, file: !124, line: 1675, type: !8038, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !2645)
!18398 = !DILocation(line: 1677, column: 9, scope: !18397)
!18399 = !DILocation(line: 1677, column: 2, scope: !18397)
!18400 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18401, file: !18401, line: 24, type: !8038, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !2645)
!18401 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18402 = !DILocation(line: 26, column: 9, scope: !18400)
!18403 = !DILocation(line: 26, column: 2, scope: !18400)
!18404 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3101, file: !3101, line: 364, type: !18405, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3071, retainedNodes: !18407)
!18405 = !DISubroutineType(types: !18406)
!18406 = !{!109, !17741}
!18407 = !{!18408, !18409}
!18408 = !DILocalVariable(name: "timeout", arg: 1, scope: !18404, file: !3101, line: 364, type: !17741)
!18409 = !DILocalVariable(name: "dt", scope: !18404, file: !3101, line: 366, type: !104)
!18410 = !DILocation(line: 0, scope: !18404)
!18411 = !DILocation(line: 368, column: 6, scope: !18404)
!18412 = !DILocation(line: 371, column: 10, scope: !18413)
!18413 = distinct !DILexicalBlock(scope: !18414, file: !3101, line: 370, column: 47)
!18414 = distinct !DILexicalBlock(scope: !18415, file: !3101, line: 370, column: 13)
!18415 = distinct !DILexicalBlock(scope: !18404, file: !3101, line: 368, column: 6)
!18416 = !DILocation(line: 371, column: 3, scope: !18413)
!18417 = !DILocation(line: 376, column: 58, scope: !18418)
!18418 = distinct !DILexicalBlock(scope: !18419, file: !3101, line: 376, column: 7)
!18419 = distinct !DILexicalBlock(scope: !18414, file: !3101, line: 372, column: 9)
!18420 = !DILocation(line: 376, column: 7, scope: !18419)
!18421 = !DILocation(line: 376, column: 43, scope: !18418)
!18422 = !DILocation(line: 377, column: 4, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18418, file: !3101, line: 376, column: 64)
!18424 = !DILocation(line: 379, column: 10, scope: !18419)
!18425 = !DILocation(line: 379, column: 33, scope: !18419)
!18426 = !DILocation(line: 379, column: 31, scope: !18419)
!18427 = !DILocation(line: 379, column: 3, scope: !18419)
!18428 = !DILocation(line: 0, scope: !18415)
!18429 = !DILocation(line: 381, column: 1, scope: !18404)
!18430 = distinct !DISubprogram(name: "boot_banner", scope: !18431, file: !18431, line: 26, type: !327, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3882, retainedNodes: !2645)
!18431 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18432 = !DILocation(line: 36, column: 1, scope: !18430)
!18433 = distinct !DISubprogram(name: "statics_init", scope: !3131, file: !3131, line: 21, type: !1207, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18434)
!18434 = !{!18435, !18436}
!18435 = !DILocalVariable(name: "unused", arg: 1, scope: !18433, file: !3131, line: 21, type: !1209)
!18436 = !DILocalVariable(name: "h", scope: !18437, file: !3131, line: 24, type: !18438)
!18437 = distinct !DILexicalBlock(scope: !18433, file: !3131, line: 24, column: 2)
!18438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18439, size: 32)
!18439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !124, line: 5073, size: 192, elements: !18440)
!18440 = !{!18441, !18447, !18453}
!18441 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18439, file: !124, line: 5074, baseType: !18442, size: 96)
!18442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !264, line: 56, size: 96, elements: !18443)
!18443 = !{!18444, !18445, !18446}
!18444 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18442, file: !264, line: 57, baseType: !267, size: 32)
!18445 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18442, file: !264, line: 58, baseType: !102, size: 32, offset: 32)
!18446 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18442, file: !264, line: 59, baseType: !153, size: 32, offset: 64)
!18447 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18439, file: !124, line: 5075, baseType: !18448, size: 64, offset: 96)
!18448 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !128, line: 233, baseType: !18449)
!18449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 231, size: 64, elements: !18450)
!18450 = !{!18451}
!18451 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18449, file: !128, line: 232, baseType: !18452, size: 64)
!18452 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !133, line: 48, baseType: !3117)
!18453 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18439, file: !124, line: 5076, baseType: !18454, size: 32, offset: 160)
!18454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !149, line: 43, size: 32, elements: !18455)
!18455 = !{!18456}
!18456 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !18454, file: !149, line: 52, baseType: !22, size: 32)
!18457 = !DILocation(line: 0, scope: !18433)
!18458 = !DILocation(line: 0, scope: !18437)
!18459 = !DILocation(line: 24, column: 2, scope: !18460)
!18460 = distinct !DILexicalBlock(scope: !18461, file: !3131, line: 24, column: 2)
!18461 = distinct !DILexicalBlock(scope: !18462, file: !3131, line: 24, column: 2)
!18462 = distinct !DILexicalBlock(scope: !18437, file: !3131, line: 24, column: 2)
!18463 = !DILocation(line: 24, column: 2, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18465, file: !3131, line: 24, column: 2)
!18465 = distinct !DILexicalBlock(scope: !18460, file: !3131, line: 24, column: 2)
!18466 = !DILocation(line: 24, column: 2, scope: !18461)
!18467 = !DILocation(line: 24, column: 2, scope: !18437)
!18468 = !DILocation(line: 52, column: 2, scope: !18433)
!18469 = !DILocation(line: 49, column: 27, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18471, file: !3131, line: 48, column: 3)
!18471 = distinct !DILexicalBlock(scope: !18462, file: !3131, line: 24, column: 36)
!18472 = !DILocation(line: 49, column: 45, scope: !18470)
!18473 = !DILocation(line: 49, column: 4, scope: !18470)
!18474 = !DILocation(line: 24, column: 2, scope: !18462)
!18475 = !DILocation(line: 24, column: 2, scope: !18465)
!18476 = distinct !{!18476, !18467, !18477}
!18477 = !DILocation(line: 51, column: 2, scope: !18437)
!18478 = distinct !DISubprogram(name: "k_heap_init", scope: !3131, file: !3131, line: 13, type: !18479, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18481)
!18479 = !DISubroutineType(types: !18480)
!18480 = !{null, !18438, !102, !153}
!18481 = !{!18482, !18483, !18484}
!18482 = !DILocalVariable(name: "h", arg: 1, scope: !18478, file: !3131, line: 13, type: !18438)
!18483 = !DILocalVariable(name: "mem", arg: 2, scope: !18478, file: !3131, line: 13, type: !102)
!18484 = !DILocalVariable(name: "bytes", arg: 3, scope: !18478, file: !3131, line: 13, type: !153)
!18485 = !DILocation(line: 0, scope: !18478)
!18486 = !DILocation(line: 15, column: 19, scope: !18478)
!18487 = !DILocation(line: 15, column: 2, scope: !18478)
!18488 = !DILocation(line: 16, column: 20, scope: !18478)
!18489 = !DILocation(line: 16, column: 2, scope: !18478)
!18490 = !DILocation(line: 19, column: 1, scope: !18478)
!18491 = distinct !DISubprogram(name: "z_waitq_init", scope: !13556, file: !13556, line: 47, type: !18492, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18495)
!18492 = !DISubroutineType(types: !18493)
!18493 = !{null, !18494}
!18494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18448, size: 32)
!18495 = !{!18496}
!18496 = !DILocalVariable(name: "w", arg: 1, scope: !18491, file: !13556, line: 47, type: !18494)
!18497 = !DILocation(line: 0, scope: !18491)
!18498 = !DILocation(line: 49, column: 21, scope: !18491)
!18499 = !DILocation(line: 49, column: 2, scope: !18491)
!18500 = !DILocation(line: 50, column: 1, scope: !18491)
!18501 = distinct !DISubprogram(name: "sys_dlist_init", scope: !133, file: !133, line: 197, type: !18502, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18505)
!18502 = !DISubroutineType(types: !18503)
!18503 = !{null, !18504}
!18504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18452, size: 32)
!18505 = !{!18506}
!18506 = !DILocalVariable(name: "list", arg: 1, scope: !18501, file: !133, line: 197, type: !18504)
!18507 = !DILocation(line: 0, scope: !18501)
!18508 = !DILocation(line: 199, column: 8, scope: !18501)
!18509 = !DILocation(line: 199, column: 13, scope: !18501)
!18510 = !DILocation(line: 200, column: 8, scope: !18501)
!18511 = !DILocation(line: 200, column: 13, scope: !18501)
!18512 = !DILocation(line: 201, column: 1, scope: !18501)
!18513 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !3131, file: !3131, line: 64, type: !18514, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18520)
!18514 = !DISubroutineType(types: !18515)
!18515 = !{!102, !18438, !153, !153, !18516}
!18516 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18517)
!18517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18518)
!18518 = !{!18519}
!18519 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18517, file: !105, line: 66, baseType: !104, size: 64)
!18520 = !{!18521, !18522, !18523, !18524, !18525, !18526, !18527, !18528, !18533}
!18521 = !DILocalVariable(name: "h", arg: 1, scope: !18513, file: !3131, line: 64, type: !18438)
!18522 = !DILocalVariable(name: "align", arg: 2, scope: !18513, file: !3131, line: 64, type: !153)
!18523 = !DILocalVariable(name: "bytes", arg: 3, scope: !18513, file: !3131, line: 64, type: !153)
!18524 = !DILocalVariable(name: "timeout", arg: 4, scope: !18513, file: !3131, line: 65, type: !18516)
!18525 = !DILocalVariable(name: "now", scope: !18513, file: !3131, line: 67, type: !106)
!18526 = !DILocalVariable(name: "end", scope: !18513, file: !3131, line: 67, type: !106)
!18527 = !DILocalVariable(name: "ret", scope: !18513, file: !3131, line: 68, type: !102)
!18528 = !DILocalVariable(name: "key", scope: !18513, file: !3131, line: 72, type: !18529)
!18529 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !149, line: 106, baseType: !18530)
!18530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !149, line: 32, size: 32, elements: !18531)
!18531 = !{!18532}
!18532 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18530, file: !149, line: 33, baseType: !103, size: 32)
!18533 = !DILocalVariable(name: "blocked_alloc", scope: !18513, file: !3131, line: 78, type: !119)
!18534 = !DILocation(line: 0, scope: !18513)
!18535 = !DILocation(line: 67, column: 21, scope: !18513)
!18536 = !DILocation(line: 70, column: 8, scope: !18513)
!18537 = !DILocation(line: 72, column: 41, scope: !18513)
!18538 = !DILocalVariable(name: "l", arg: 1, scope: !18539, file: !149, line: 136, type: !18542)
!18539 = distinct !DISubprogram(name: "k_spin_lock", scope: !149, file: !149, line: 136, type: !18540, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18543)
!18540 = !DISubroutineType(types: !18541)
!18541 = !{!18529, !18542}
!18542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18454, size: 32)
!18543 = !{!18538, !18544}
!18544 = !DILocalVariable(name: "k", scope: !18539, file: !149, line: 139, type: !18529)
!18545 = !DILocation(line: 0, scope: !18539, inlinedAt: !18546)
!18546 = distinct !DILocation(line: 72, column: 25, scope: !18513)
!18547 = !DILocation(line: 55, column: 2, scope: !18548, inlinedAt: !18552)
!18548 = distinct !DISubprogram(name: "arch_irq_lock", scope: !8072, file: !8072, line: 42, type: !10464, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18549)
!18549 = !{!18550, !18551}
!18550 = !DILocalVariable(name: "key", scope: !18548, file: !8072, line: 44, type: !32)
!18551 = !DILocalVariable(name: "tmp", scope: !18548, file: !8072, line: 53, type: !32)
!18552 = distinct !DILocation(line: 145, column: 10, scope: !18539, inlinedAt: !18546)
!18553 = !{i64 2845247}
!18554 = !DILocation(line: 0, scope: !18548, inlinedAt: !18552)
!18555 = !DILocation(line: 148, column: 2, scope: !18556, inlinedAt: !18546)
!18556 = distinct !DILexicalBlock(scope: !18557, file: !149, line: 148, column: 2)
!18557 = distinct !DILexicalBlock(scope: !18539, file: !149, line: 148, column: 2)
!18558 = !DILocation(line: 148, column: 2, scope: !18557, inlinedAt: !18546)
!18559 = !DILocation(line: 148, column: 2, scope: !18560, inlinedAt: !18546)
!18560 = distinct !DILexicalBlock(scope: !18556, file: !149, line: 148, column: 2)
!18561 = !DILocation(line: 160, column: 2, scope: !18539, inlinedAt: !18546)
!18562 = !DILocation(line: 1031, column: 3, scope: !18563, inlinedAt: !18566)
!18563 = distinct !DISubprogram(name: "__get_IPSR", scope: !7951, file: !7951, line: 1027, type: !8038, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18564)
!18564 = !{!18565}
!18565 = !DILocalVariable(name: "result", scope: !18563, file: !7951, line: 1029, type: !108)
!18566 = distinct !DILocation(line: 48, column: 10, scope: !18567, inlinedAt: !18568)
!18567 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8945, file: !8945, line: 46, type: !8946, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !2645)
!18568 = distinct !DILocation(line: 76, column: 2, scope: !18569)
!18569 = distinct !DILexicalBlock(scope: !18570, file: !3131, line: 76, column: 2)
!18570 = distinct !DILexicalBlock(scope: !18513, file: !3131, line: 76, column: 2)
!18571 = !{i64 6972650}
!18572 = !DILocation(line: 0, scope: !18563, inlinedAt: !18566)
!18573 = !DILocation(line: 48, column: 9, scope: !18567, inlinedAt: !18568)
!18574 = !DILocation(line: 76, column: 2, scope: !18569)
!18575 = !DILocation(line: 81, column: 9, scope: !18576)
!18576 = distinct !DILexicalBlock(scope: !18513, file: !3131, line: 80, column: 22)
!18577 = !DILocation(line: 83, column: 9, scope: !18576)
!18578 = !DILocation(line: 85, column: 12, scope: !18579)
!18579 = distinct !DILexicalBlock(scope: !18576, file: !3131, line: 84, column: 7)
!18580 = !DILocation(line: 85, column: 21, scope: !18579)
!18581 = !DILocation(line: 76, column: 2, scope: !18582)
!18582 = distinct !DILexicalBlock(scope: !18569, file: !3131, line: 76, column: 2)
!18583 = !DILocation(line: 85, column: 30, scope: !18579)
!18584 = !DILocation(line: 85, column: 37, scope: !18579)
!18585 = !DILocation(line: 84, column: 7, scope: !18576)
!18586 = !DILocation(line: 99, column: 10, scope: !18576)
!18587 = !DILocation(line: 0, scope: !18539, inlinedAt: !18588)
!18588 = distinct !DILocation(line: 101, column: 9, scope: !18576)
!18589 = !DILocation(line: 55, column: 2, scope: !18548, inlinedAt: !18590)
!18590 = distinct !DILocation(line: 145, column: 10, scope: !18539, inlinedAt: !18588)
!18591 = !DILocation(line: 0, scope: !18548, inlinedAt: !18590)
!18592 = !DILocation(line: 148, column: 2, scope: !18556, inlinedAt: !18588)
!18593 = !DILocation(line: 148, column: 2, scope: !18557, inlinedAt: !18588)
!18594 = !DILocation(line: 148, column: 2, scope: !18560, inlinedAt: !18588)
!18595 = !DILocation(line: 160, column: 2, scope: !18539, inlinedAt: !18588)
!18596 = distinct !{!18596, !18597, !18598}
!18597 = !DILocation(line: 80, column: 2, scope: !18513)
!18598 = !DILocation(line: 102, column: 2, scope: !18513)
!18599 = !DILocalVariable(name: "key", arg: 2, scope: !18600, file: !149, line: 190, type: !18529)
!18600 = distinct !DISubprogram(name: "k_spin_unlock", scope: !149, file: !149, line: 189, type: !18601, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18603)
!18601 = !DISubroutineType(types: !18602)
!18602 = !{null, !18542, !18529}
!18603 = !{!18604, !18599}
!18604 = !DILocalVariable(name: "l", arg: 1, scope: !18600, file: !149, line: 189, type: !18542)
!18605 = !DILocation(line: 0, scope: !18600, inlinedAt: !18606)
!18606 = distinct !DILocation(line: 106, column: 2, scope: !18513)
!18607 = !DILocation(line: 194, column: 2, scope: !18608, inlinedAt: !18606)
!18608 = distinct !DILexicalBlock(scope: !18609, file: !149, line: 194, column: 2)
!18609 = distinct !DILexicalBlock(scope: !18600, file: !149, line: 194, column: 2)
!18610 = !DILocation(line: 194, column: 2, scope: !18609, inlinedAt: !18606)
!18611 = !DILocation(line: 194, column: 2, scope: !18612, inlinedAt: !18606)
!18612 = distinct !DILexicalBlock(scope: !18608, file: !149, line: 194, column: 2)
!18613 = !DILocalVariable(name: "key", arg: 1, scope: !18614, file: !8072, line: 84, type: !32)
!18614 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !8072, file: !8072, line: 84, type: !7902, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18615)
!18615 = !{!18613}
!18616 = !DILocation(line: 0, scope: !18614, inlinedAt: !18617)
!18617 = distinct !DILocation(line: 215, column: 2, scope: !18600, inlinedAt: !18606)
!18618 = !DILocation(line: 95, column: 2, scope: !18614, inlinedAt: !18617)
!18619 = !{i64 2846064}
!18620 = !DILocation(line: 107, column: 2, scope: !18513)
!18621 = distinct !DISubprogram(name: "k_heap_alloc", scope: !3131, file: !3131, line: 110, type: !18622, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18624)
!18622 = !DISubroutineType(types: !18623)
!18623 = !{!102, !18438, !153, !18516}
!18624 = !{!18625, !18626, !18627, !18628}
!18625 = !DILocalVariable(name: "h", arg: 1, scope: !18621, file: !3131, line: 110, type: !18438)
!18626 = !DILocalVariable(name: "bytes", arg: 2, scope: !18621, file: !3131, line: 110, type: !153)
!18627 = !DILocalVariable(name: "timeout", arg: 3, scope: !18621, file: !3131, line: 110, type: !18516)
!18628 = !DILocalVariable(name: "ret", scope: !18621, file: !3131, line: 114, type: !102)
!18629 = !DILocation(line: 0, scope: !18621)
!18630 = !DILocation(line: 114, column: 14, scope: !18621)
!18631 = !DILocation(line: 118, column: 2, scope: !18621)
!18632 = distinct !DISubprogram(name: "k_heap_free", scope: !3131, file: !3131, line: 121, type: !18633, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3112, retainedNodes: !18635)
!18633 = !DISubroutineType(types: !18634)
!18634 = !{null, !18438, !102}
!18635 = !{!18636, !18637, !18638}
!18636 = !DILocalVariable(name: "h", arg: 1, scope: !18632, file: !3131, line: 121, type: !18438)
!18637 = !DILocalVariable(name: "mem", arg: 2, scope: !18632, file: !3131, line: 121, type: !102)
!18638 = !DILocalVariable(name: "key", scope: !18632, file: !3131, line: 123, type: !18529)
!18639 = !DILocation(line: 0, scope: !18632)
!18640 = !DILocation(line: 123, column: 41, scope: !18632)
!18641 = !DILocation(line: 0, scope: !18539, inlinedAt: !18642)
!18642 = distinct !DILocation(line: 123, column: 25, scope: !18632)
!18643 = !DILocation(line: 55, column: 2, scope: !18548, inlinedAt: !18644)
!18644 = distinct !DILocation(line: 145, column: 10, scope: !18539, inlinedAt: !18642)
!18645 = !DILocation(line: 0, scope: !18548, inlinedAt: !18644)
!18646 = !DILocation(line: 148, column: 2, scope: !18556, inlinedAt: !18642)
!18647 = !DILocation(line: 148, column: 2, scope: !18557, inlinedAt: !18642)
!18648 = !DILocation(line: 148, column: 2, scope: !18560, inlinedAt: !18642)
!18649 = !DILocation(line: 160, column: 2, scope: !18539, inlinedAt: !18642)
!18650 = !DILocation(line: 125, column: 20, scope: !18632)
!18651 = !DILocation(line: 125, column: 2, scope: !18632)
!18652 = !DILocation(line: 128, column: 60, scope: !18653)
!18653 = distinct !DILexicalBlock(scope: !18632, file: !3131, line: 128, column: 6)
!18654 = !DILocation(line: 128, column: 43, scope: !18653)
!18655 = !DILocation(line: 128, column: 68, scope: !18653)
!18656 = !DILocation(line: 128, column: 6, scope: !18632)
!18657 = !DILocation(line: 129, column: 3, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18653, file: !3131, line: 128, column: 74)
!18659 = !DILocation(line: 130, column: 2, scope: !18658)
!18660 = !DILocation(line: 0, scope: !18600, inlinedAt: !18661)
!18661 = distinct !DILocation(line: 131, column: 3, scope: !18662)
!18662 = distinct !DILexicalBlock(scope: !18653, file: !3131, line: 130, column: 9)
!18663 = !DILocation(line: 194, column: 2, scope: !18608, inlinedAt: !18661)
!18664 = !DILocation(line: 194, column: 2, scope: !18609, inlinedAt: !18661)
!18665 = !DILocation(line: 194, column: 2, scope: !18612, inlinedAt: !18661)
!18666 = !DILocation(line: 0, scope: !18614, inlinedAt: !18667)
!18667 = distinct !DILocation(line: 215, column: 2, scope: !18600, inlinedAt: !18661)
!18668 = !DILocation(line: 95, column: 2, scope: !18614, inlinedAt: !18667)
!18669 = !DILocation(line: 133, column: 1, scope: !18632)
